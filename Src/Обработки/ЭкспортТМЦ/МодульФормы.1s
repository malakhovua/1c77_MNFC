//======================================================================
Процедура ДобавитьСтрокуПН(ДокПН, ТМЦ, ВУ)
	ДокПН.НоваяСтрока();
	ДокПН.ТМЦ = ТМЦ;
	//ДокПН.Ед = ДокПН.ТМЦ.ЕдиницаПоУмолчанию;	
	//ДокПН.Коэффициент = ДокПН.Ед.Коэффициент;
	ДокПН.Кво = 1;
	глПриИзмененииТовара(ДокПН, 1);	
	ДокПН.ВидУпаковки = ВУ;	
КонецПроцедуры //
	
//*******************************************
Процедура Сформировать()
	ДокРН = СоздатьОбъект("Документ.РасходнаяНакладная");
	
	ДокРН.Новый();
	ДокРН.Контрагент = Контрагент;
	ДокРН.КатегорияЦен = Контрагент.КатегорияЦен.Получить(ТекущаяДата());
	ДокРН.УстановитьНовыйНомер("Т_");
	ДокРН.ВидНДС = Константа.БазНДС;
	списТовар = СоздатьОбъект("СписокЗначений");
	списТоварНЕ = СоздатьОбъект("СписокЗначений");
	глЗаполнитьСписокТоваров(Контрагент.СхемаЭкспортаУпаковок.СтрФильтр, списТовар);
	глЗаполнитьСписокТоваров(Контрагент.СхемаЭкспортаУпаковок.СтрФильтрНЕ, списТоварНЕ);
	глДобавитьИИ(Контрагент.СхемаЭкспортаУпаковок, списТоварНЕ);
	
	Если списТовар.РазмерСписка() = 0 Тогда
		Если Вопрос("Не задан фильтр по ТМЦ. Вы уверены, что хотите выгрузить все?", "Да+Нет") = "Нет" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ТекстЗ = 	
	"//{{ЗАПРОС(Сформировать)
	|ТМЦ = Справочник.ТМЦ.ТекущийЭлемент;
	|Функция Счётчик = Счётчик();
	|Группировка ТМЦ упорядочить по ТМЦ.Наименование без групп;
	|Условие(ТМЦ в списТовар);
	|Условие(НЕ (ТМЦ в списТоварНЕ));
	|"//}}ЗАПРОС
	;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		Предупреждение("Не получилось отобрать нужные ТМЦ");
		Возврат;
	КонецЕсли;

	СпрРВУ = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");	
	Пока Запрос.Группировка(1) = 1 Цикл
		СпрРВУ.ИспользоватьВладельца(Запрос.ТМЦ);
		ДобавитьСтрокуПН(ДокРН, Запрос.ТМЦ, "");
		СпрРВУ.ВыбратьЭлементы();
		Пока СпрРВУ.ПолучитьЭлемент() = 1 Цикл
			//Если (СпрРВУ.ПометкаУдаления() = 0) Тогда
				ДобавитьСтрокуПН(ДокРН, Запрос.ТМЦ, СпрРВУ.ВидУпаковки);
			//КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КФормы = ДокРН;
	ОткрытьФормуМодально(Контрагент.СхемаЭкспортаУпаковок, КФормы);
	ИмяФайла = "РН_" + СокрЛП(ДокРН.НомерДок) + "_" + СтрЗаменить(Строка(ДокРН.ДатаДок), ".", "") + ".mxl";
	
	Если фВыгрузить = 1 Тогда
		Если ФС.СуществуетФайл(СокрЛП(ДокРН.Контрагент.ПутьДляЭкспортаРН) + ИмяФайла) = 1 Тогда
			// передаём на ФТП
			ФТП = СоздатьОбъект("AddIn.CeDataExch"); // Создаём объект 	
			ФТП.FtpOpenSession(); // Это я не знаю зачем:) 
			Результат = ФТП.FtpConnect(СокрЛП(АдресФТП), СокрЛП(ИмяПольз), СокрЛП(Пароль)); // Подключаемся	
			Если Результат <> 0 Тогда
				Сообщить("Не удалось подключиться по причине: " + ФТП.ErrDescription(Результат), "!"); 
				ФТП.FtpCloseSession();	
				Возврат;
			КонецЕсли;
			
			//ИмяФайлаН = СтрЗаменить(ИмяФайла, "РН", "RN");
			//ИмяФайлаН = СтрЗаменить(ИмяФайлаН, "Т", "T");
			ИмяФайлаН = "export.mxl";
			ПолноеИмяФайла = СокрЛП(ДокРН.Контрагент.ПутьДляЭкспортаРН) + ИмяФайлаН;
			ИмяАрхива = СтрЗаменить(ПолноеИмяФайла, ".mxl", ".zip");
			ФС.ПереименоватьФайл(СокрЛП(ДокРН.Контрагент.ПутьДляЭкспортаРН) + ИмяФайла, ПолноеИмяФайла, 1);
			// теперь упакуем файл
			ФТП.АрхУпаковать(ИмяАрхива, ИмяФайлаН + СимволТабуляции + ПолноеИмяФайла);
		    Результат = ФТП.FtpPutFile(ИмяАрхива, СокрЛП(Контрагент.КаталогФТП) + "/" + СтрЗаменить(ИмяФайлаН, ".mxl", ".zip"));
		    Если Результат <> 0 Тогда // не получилось - сообщаем об ошибке
		        Сообщить("Не удалось отправить файл " + ИмяАрхива + " по причине: " + ФТП.ErrDescription(Результат), "!");
				ФТП.FtpCloseSession();	
				Возврат;
			КонецЕсли;
			ФТП.FtpCloseSession();
			ФС.УдалитьФайл(СокрЛП(ДокРН.Контрагент.ПутьДляЭкспортаРН) + ИмяФайлаН);
			Сообщить("Успешная передача файла на ftp");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура Цены()
	КФормы = "Экспорт";
	ОткрытьФормуМодально(Контрагент.СхемаЭкспортаУпаковок, КФормы);
	Если ТипЗначенияСтр(КФормы) = "СписокЗначений" Тогда
		СписПарам = СоздатьОбъект("СписокЗначений");
		СписПарам.ДобавитьЗначение(Контрагент.СхемаЭкспортаУпаковок.КатегорияЦен, "КатегорияЦен");
		СписПарам.ДобавитьЗначение(Контрагент.СхемаЭкспортаУпаковок.КатегорияЦенФ, "КатегорияЦенФ");
		СписПарам.ДобавитьЗначение(КФормы.Получить("СписДоп"), "СписДоп");	
		СписПарам.ДобавитьЗначение(КФормы.Получить("списТовар"), "списТовар");
		СписПарам.ДобавитьЗначение(Контрагент.СхемаЭкспортаУпаковок.ВидВесов, "ВидВесов");
		СписПарам.ДобавитьЗначение(Контрагент.ПутьДляЭкспортаРН, "ВидВесов");
		СписПарам.ДобавитьЗначение(Контрагент, "Контрагент");
		ОткрытьФорму("Документ.УстановкаЦенТМЦ", СписПарам);
	КонецЕсли;	
	
КонецПроцедуры // Цены()

//======================================================================
Процедура ИзмКонтрагент()

КонецПроцедуры // ИзмКонтрагент

АдресФТП = "77.87.194.16";
ИмяПольз = "umk-1c";
Пароль = "baceumK12";
ЗагрузитьВнешнююКомпоненту("v7plus.dll");
ЗагрузитьВнешнююКомпоненту("1CPP.dll");
//ЗагрузитьВнешнююКомпоненту("APPlus64.dll") ; // Регистрируем компоненту
ЗагрузитьВнешнююКомпоненту("APPlus.dll") ; // Регистрируем компоненту 

