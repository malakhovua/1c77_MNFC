//--- УМК Сандомирский В.Ю. (09.03.15) макет печати отгрузочного листа
Перем ВыделятьТовары;
Перем СкопированныйШаблонXLS;
Перем СоответствиеРеквизитов[5];
Перем ТСпец;

//======================================================================
Процедура ЗаполнитьМассивКодов(Мас[], ТМЦ)
	Для Инд = 1 По 5 Цикл
		Мас[Инд] = "";
	КонецЦикла;

	Если ПустоеЗначение(ТМЦ.ТМЦ) = 0 Тогда
		СпрЭ = СоздатьОбъект("Справочник.Этикетки");
		СпрЭ.ИспользоватьВладельца(ТМЦ.ТМЦ);
		Если СпрЭ.НайтиПоРеквизиту("ВидВесов", ВидВесов, 0) = 1 Тогда		
			Для Инд = 1 По 5 Цикл
				Если СпрЭ.ПолучитьАтрибут(СоответствиеРеквизитов[Инд]) <> "" Тогда
					Мас[Инд] = Строка(Число(Строка(Инд-1) + Формат(Число(ТМЦ.ТМЦ.КодЭ), "Ч(0)3")));
				КонецЕсли;
			КонецЦикла;		
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьМассивКодов(Мас, ТМЦ)

//======================================================================
Процедура ДобавитьСекции(Мас[], Таб, Секция, ОбнулитьМассив = 0)
	Для Инд = 1 По 5 Цикл
		//Если ОбнулитьМассив = 1 Тогда
		//	Мас[Инд] = "";
		//КонецЕсли;
		Таб.ПрисоединитьСекцию(Секция + "|Колонка" + ?(Инд = 5, "Ш", ""));
	КонецЦикла;
КонецПроцедуры // 

//======================================================================
Процедура ДобавитьУпаковки(ТМЦ, Таб, ИмяСекц, МаксКол)
	МКол = 0;
	СпрВидыУп = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
	СпрВидыУп.ИспользоватьВладельца(ТМЦ);
	СпрВидыУп.ВыбратьЭлементы();
	Пока СпрВидыУп.ПолучитьЭлемент() = 1 Цикл
		Если СпрВидыУп.ПометкаУдаления() = 0 Тогда
			МКол = МКол + 1;
			Таб.ПрисоединитьСекцию(ИмяСекц + "|Колонка");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // 

//======================================================================
Функция ВернутьОболочку(ТМЦ, Суффикс)
	Если Суффикс = "Уп" Тогда
		Если ПустоеЗначение(ВыбКатЦен) = 0 Тогда
			Возврат Формат(глВернутьЦену(ТМЦ.ТМЦ, ВыбКатЦен, ТекущаяДата(), Гривня), "Ч012.2");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТМЦ.Оболочка;
КонецФункции // ПолучитьОболочку(Оболочка)

//======================================================================
Функция ВернутьЦену(ТМЦ, Суффикс)
	Если Суффикс <> "Уп" Тогда
		Если ПустоеЗначение(ВыбКатЦен) = 0 Тогда
			Возврат Формат(глВернутьЦену(ТМЦ, ВыбКатЦен, ТекущаяДата(), Гривня), "Ч012.2");
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
КонецФункции // ПолучитьОболочку(Оболочка)

//======================================================================
Функция ПроверитьТМЦ(СтрокаОтгрузка)
	Если СтрокаОтгрузка.ПометкаУдаления() = 1 Тогда
		Возврат 0;
	КонецЕсли;	
	Если фБезНВЗ = 1 Тогда
		Если СтрокаОтгрузка.ТМЦ.НеВыгружатьВЗаказник = 1 Тогда
			Возврат 0;
		КонецЕсли;
	КонецЕсли;	
	Если ПустоеЗначение(Спецификация) = 0 Тогда
		Возврат ТСпец.НайтиЗначение(СтрокаОтгрузка.ТМЦ);
	КонецЕсли;	
КонецФункции // гл
//====================================================================== 
Процедура СформироватьВГ()
	Таб = СоздатьОбъект("Таблица");  
	Таб.ИсходнаяТаблица("Таблица1");
	ПечФорма = "Таблица";
	
	СпрОтгрузочный 		= СоздатьОбъект("Справочник.УМК_Отгрузочный");
	СпрСтрокаОтгрузка 	= СоздатьОбъект("Справочник.УМК_СтрокиОтгрузочного");
	
	// Определим количество листов прайса
	ВсегоЛистов = 0;
	СпрОтгрузочный.ВыбратьЭлементы();
	Пока СпрОтгрузочный.ПолучитьЭлемент() = 1 Цикл
		Если ВсегоЛистов < СпрОтгрузочный.Лист Тогда
			ВсегоЛистов = СпрОтгрузочный.Лист;
		КонецЕсли;
	КонецЦикла;
		
	ТекКвоСтрок_2 = 0;	
	НаПредидущемЛисте = 0;
	МаксКол = 0;
	
	//--- Формируем Первый лист
	Для К=1 По ВсегоЛистов Цикл		
		КоличествоСтрокНаЛисте = 1;		
		Таб.ВывестиСекцию("Шапка|Колонка_1");		
		ТзПерваяКолонка 	= СоздатьОбъект("ТаблицаЗначений");
		ТзПерваяКолонка.НоваяКолонка("Папка","Справочник.УМК_Отгрузочный");
		ТзПерваяКолонка.НоваяКолонка("ТМЦ","Справочник.УМК_СтрокиОтгрузочного");
		ТзПерваяКолонка.НоваяКолонка("Колонка","Число");
		
		КвоСтрок_1 = ТекКвоСтрок_2;				
		СпрОтгрузочный.ВыбратьЭлементы();
		Пока СпрОтгрузочный.ПолучитьЭлемент() = 1 Цикл
			Если СпрОтгрузочный.Лист = К Тогда				
				СпрСтрокаОтгрузка.ИспользоватьВладельца(СпрОтгрузочный.ТекущийЭлемент());
				СпрСтрокаОтгрузка.ПорядокКодов();
				СпрСтрокаОтгрузка.ВыбратьЭлементы();
				Пока СпрСтрокаОтгрузка.ПолучитьЭлемент() = 1 Цикл
					Если ПроверитьТМЦ(СпрСтрокаОтгрузка) = 0 Тогда
						Продолжить;
					КонецЕсли;					
					
					ТзПерваяКолонка.НоваяСтрока();
					ТзПерваяКолонка.Папка 	= СпрОтгрузочный.ТекущийЭлемент();
					ТзПерваяКолонка.ТМЦ 	= СпрСтрокаОтгрузка.ТекущийЭлемент();		
					ТзПерваяКолонка.Колонка = СпрОтгрузочный.Колонка;
				
					Если (ПустоеЗначение(СпрСтрокаОтгрузка.НаименованиеДляПечати) = 1) 
						И (ПустоеЗначение(СпрСтрокаОтгрузка.ТМЦ) = 1) Тогда				
					Иначе			
						КвоСтрок_1 = КвоСтрок_1 + 1;		
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		//--- смотрим кто больше из колонок
		КоличествоСтрокЛиста = ТзПерваяКолонка.КоличествоСтрок();
		ТекКвоСтрок_1 = ТекКвоСтрок_2;
		ТекКвоСтрок_2 = КвоСтрок_1;
		СтарКолонка = 1;
		
		Для Строк=1 По КоличествоСтрокЛиста Цикл			
			КоличествоСтрокНаЛисте = КоличествоСтрокНаЛисте + 1;					
			//--- Вывод на печать первой колонки	
			Попытка
				ТзПерваяКолонка.ПолучитьСтрокуПоНомеру(Строк);
				Если ТзПерваяКолонка.Колонка <> СтарКолонка Тогда
					Таб.НоваяСтраница();
					СтарКолонка = ТзПерваяКолонка.Колонка;
				КонецЕсли;
				
				Если ПустоеЗначение(ТзПерваяКолонка.ТМЦ) = 1 Тогда
					ПечГруппа_1 = Врег(СокрЛП(ТзПерваяКолонка.Папка.НаименованиеДляПечати));
				Иначе						
					Если (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.НаименованиеДляПечати) = 1) 
						И (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.ТМЦ) = 1) Тогда						
						НопПП_1 = "";							
					Иначе		
						ТекКвоСтрок_1 = ТекКвоСтрок_1 + 1;
						НопПП_1 = ТекКвоСтрок_1;	
					КонецЕсли;
	
					ПечТМЦ_1 	 		= ТзПерваяКолонка.ТМЦ.НаименованиеДляПечати;					
					ПечОболочка_1		= ВернутьОболочку(ТзПерваяКолонка.ТМЦ, "Уп");
					НаименованиеГруппы_1 = Врег(СокрЛП(ТзПерваяКолонка.Папка.НаименованиеДляПечати));
					
					Выделять = 0;
					Если ВыделятьТовары = "Ф1" Тогда
						ТзПерваяКолонка.ТМЦ.ТМЦ.ИспользоватьДату(РабочаяДата());
						Если (ТзПерваяКолонка.ТМЦ.ТМЦ.ЕстьКодС.Получить(РабочаяДата()) = 0) //--- УМК Сандомирский В.Ю. (06.04.15)
								И (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.ТМЦ)  <> 1) Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если ВыделятьТовары = "Новые" Тогда
						Если ТзПерваяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если Выделять = 0 Тогда
						Таб.ВывестиСекцию("Товар|Колонка_1");
					Иначе
						Таб.ВывестиСекцию("ТоварПометка|Колонка_1");
					КонецЕсли;
					ДобавитьУпаковки(ТзПерваяКолонка.ТМЦ.ТМЦ, Таб, "Товар" + ?(Выделять = 0, "", "Пометка"), МаксКол);
				КонецЕсли;				
			Исключение				
			КонецПопытки;			
		КонецЦикла;
			
		//--- Постобработка таблицы для объединения и переворачиваня		
		//Сообщить(Таб.ВысотаТаблицы());  
	        
		ТекГруппа_1 = "";
		ТекСтрокаНачало_1 = 0;
		К1 = 1;
		КПлюс = 7;		
		
		Для Строк=1 По Таб.ВысотаТаблицы() Цикл			
			Если ТекГруппа_1 <> Таб.Область(Строк, 1, Строк,1).Текст Тогда				
				Если ТекСтрокаНачало_1 <>  0 Тогда
					Таб.Область(ТекСтрокаНачало_1, 1, Строк-1,1).Объединить();  //--- Объединяем 	
					Таб.Область(Строк-1, 1, Строк-1, К1+КПлюс).РамкаСнизу(4);			//--- подчеркиваем 					
					ТекСтрокаНачало_1 = Строк;
				Иначе
					ТекСтрокаНачало_1 = Строк;		
				КонецЕсли;
				
				ТекГруппа_1 = Таб.Область(Строк, 1, Строк,1).Текст;				
			КонецЕсли;
		КонецЦикла;
	
		Таб.Область(ТекСтрокаНачало_1, 1, Строк-1,1).Объединить(); //--- Объединяем 
		Таб.Область(Строк-1, 1, Строк-1, К1+КПлюс).РамкаСнизу(4);
	КонецЦикла;	
	
	Таб.ПараметрыСтраницы(1,,,0,0,5,0,0,0,1,,);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать();		
КонецПроцедуры

//====================================================================== 
Процедура СформироватьДве()
	Перем Мас[5];
	
	Таб = СоздатьОбъект("Таблица");  
	Таб.ИсходнаяТаблица("Таблица_2Кол");
	ПечФорма = "Таблица";
	
	СпрОтгрузочный 		= СоздатьОбъект("Справочник.УМК_Отгрузочный");
	СпрСтрокаОтгрузка 	= СоздатьОбъект("Справочник.УМК_СтрокиОтгрузочного");
	
	// Определим количество листов прайса
	ВсегоЛистов = 0;
	СпрОтгрузочный.ВыбратьЭлементы();
	Пока СпрОтгрузочный.ПолучитьЭлемент() = 1 Цикл
		ВсегоЛистов = Макс(СпрОтгрузочный.ЛистП, ВсегоЛистов);
	КонецЦикла;
		
	ТекКвоСтрок_2 = 0;
	
	НаПредидущемЛисте = 0;
	
	//--- Формируем Первый лист
	Для К = 1 По ВсегоЛистов Цикл
		Если К <> 1 Тогда
			Таб.НоваяСтраница();
		КонецЕсли;
		КоличествоСтрокНаЛисте = 1;		
		
		ТзПерваяКолонка 	= СоздатьОбъект("ТаблицаЗначений");
		ТзПерваяКолонка.НоваяКолонка("Папка","Справочник.УМК_Отгрузочный");
		ТзПерваяКолонка.НоваяКолонка("ТМЦ","Справочник.УМК_СтрокиОтгрузочного");
		
		ТзВтораяКолонка 	= СоздатьОбъект("ТаблицаЗначений");
		ТзВтораяКолонка.НоваяКолонка("Папка","Справочник.УМК_Отгрузочный");
		ТзВтораяКолонка.НоваяКолонка("ТМЦ","Справочник.УМК_СтрокиОтгрузочного");
		
		КвоСтрок_1 = ТекКвоСтрок_2;
		ТЗТекЭл = СоздатьОбъект("ТаблицаЗначений");
		ТЗТекЭл.НоваяКолонка("Элемент", "Справочник.УМК_Отгрузочный");
		ТЗТекЭл.НоваяКолонка("Код", "Число");
;
		СпрОтгрузочный.ВыбратьЭлементыПоРеквизиту("ЛистП", К, 0, 0);
		Пока СпрОтгрузочный.ПолучитьЭлемент() = 1 Цикл
			Если СпрОтгрузочный.ПометкаУдаления() = 0 Тогда
				ТЗТекЭл.НоваяСтрока();
				ТЗТекЭл.Элемент = СпрОтгрузочный.ТекущийЭлемент();
				ТЗТекЭл.Код = СпрОтгрузочный.КодПром;
			КонецЕсли;
		КонецЦикла;
		ТЗТекЭл.Сортировать("Код");
		
		ТЗТекЭл.ВыбратьСтроки();
		Пока ТЗТекЭл.ПолучитьСтроку() = 1 Цикл
			Если ТЗТекЭл.Элемент.КолонкаП = 1 Тогда				
				СпрСтрокаОтгрузка.ИспользоватьВладельца(ТЗТекЭл.Элемент.ТекущийЭлемент());
				СпрСтрокаОтгрузка.ПорядокКодов();
				СпрСтрокаОтгрузка.ВыбратьЭлементы();
				Пока СпрСтрокаОтгрузка.ПолучитьЭлемент() = 1 Цикл
					Если ПроверитьТМЦ(СпрСтрокаОтгрузка) = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					ТзПерваяКолонка.НоваяСтрока();
					ТзПерваяКолонка.Папка 	= ТЗТекЭл.Элемент.ТекущийЭлемент();
					ТзПерваяКолонка.ТМЦ 	= СпрСтрокаОтгрузка.ТекущийЭлемент();		
					
					Если (ПустоеЗначение(СпрСтрокаОтгрузка.НаименованиеДляПечати) = 1) 
					И (ПустоеЗначение(СпрСтрокаОтгрузка.ТМЦ) = 1) Тогда				
					Иначе			
						КвоСтрок_1 = КвоСтрок_1 + 1;		
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли ТЗТекЭл.Элемент.КолонкаП = 2 Тогда
				СпрСтрокаОтгрузка.ИспользоватьВладельца(ТЗТекЭл.Элемент.ТекущийЭлемент());
				СпрСтрокаОтгрузка.ПорядокКодов();
				СпрСтрокаОтгрузка.ВыбратьЭлементы();
				Пока СпрСтрокаОтгрузка.ПолучитьЭлемент() = 1 Цикл		
					Если ПроверитьТМЦ(СпрСтрокаОтгрузка) = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					ТзВтораяКолонка.НоваяСтрока();
					ТзВтораяКолонка.Папка 	= ТЗТекЭл.Элемент.ТекущийЭлемент();
					ТзВтораяКолонка.ТМЦ 	= СпрСтрокаОтгрузка.ТекущийЭлемент();	
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		//--- смотрим кто больше из колонок
		КоличествоСтрокЛиста = Макс(ТзПерваяКолонка.КоличествоСтрок(),ТзВтораяКолонка.КоличествоСтрок());
		
		ТекКвоСтрок_1 = ТекКвоСтрок_2;
		ТекКвоСтрок_2 = КвоСтрок_1;
		
		Для Строк=1 По КоличествоСтрокЛиста Цикл			
			КоличествоСтрокНаЛисте = КоличествоСтрокНаЛисте + 1;					
			//--- Вывод на печать первой колонки	
			Попытка
				ТзПерваяКолонка.ПолучитьСтрокуПоНомеру(Строк);
				Если ПустоеЗначение(ТзПерваяКолонка.ТМЦ) = 1 Тогда
					ПечГруппа_1 = Врег(СокрЛП(ТзПерваяКолонка.Папка.НаименованиеДляПечати));
				Иначе
						
					Если (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.НаименованиеДляПечати) = 1) 
						И (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.ТМЦ) = 1) Тогда						
						НопПП_1 = "";							
					Иначе		
						ТекКвоСтрок_1 = ТекКвоСтрок_1 + 1;
						НопПП_1 = ТекКвоСтрок_1;	
					КонецЕсли;
	
					ПечТМЦ_1 	 		= ТзПерваяКолонка.ТМЦ.НаименованиеДляПечати;
					ПечОболочка_1		= ВернутьОболочку(ТзПерваяКолонка.ТМЦ, "");
					ПечЦена 			= ВернутьЦену(ТзПерваяКолонка.ТМЦ.ТМЦ, "");
					НаименованиеГруппы_1 = Врег(СокрЛП(ТзПерваяКолонка.Папка.НаименованиеДляПечати));
					
					Выделять = 0;
					Если ВыделятьТовары = "Ф1" Тогда
						ТзПерваяКолонка.ТМЦ.ТМЦ.ИспользоватьДату(РабочаяДата());
						Если (ТзПерваяКолонка.ТМЦ.ТМЦ.ЕстьКодС.Получить(РабочаяДата()) = 0) //--- УМК Сандомирский В.Ю. (06.04.15)
								И (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.ТМЦ)  <> 1) Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если ВыделятьТовары = "Новые" Тогда
						Если ТзПерваяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если Выделять = 0 Тогда
						Таб.ВывестиСекцию("Товар|Колонка_1");
					Иначе
						Таб.ВывестиСекцию("ТоварПометка|Колонка_1");
					КонецЕсли;
				КонецЕсли;				
			Исключение			
				Таб.ВывестиСекцию("ПустаяСтрока|Колонка_1");				
			КонецПопытки;
		
			//--- Вывод на печать второй колонки	
			
			Попытка				
				ТзВтораяКолонка.ПолучитьСтрокуПоНомеру(Строк);
				Если ПустоеЗначение(ТзВтораяКолонка.ТМЦ) = 1 Тогда
					//--- Группа					
					ПечГруппа_2 = Врег(СокрЛП(ТзВтораяКолонка.Папка.НаименованиеДляПечати));					
				Иначе
					Если (ПустоеЗначение(ТзВтораяКолонка.ТМЦ.НаименованиеДляПечати) = 1) 
						И (ПустоеЗначение(ТзВтораяКолонка.ТМЦ.ТМЦ) = 1) Тогда
						НопПП_2 = "";	
					Иначе
						ТекКвоСтрок_2 = ТекКвоСтрок_2 + 1;
						НопПП_2 = ТекКвоСтрок_2;
					КонецЕсли;
					ПечТМЦ_2 			= ТзВтораяКолонка.ТМЦ.НаименованиеДляПечати;
					ПечОболочка_2		= ВернутьОболочку(ТзВтораяКолонка.ТМЦ, "");
					ПечЦена 			= ВернутьЦену(ТзВтораяКолонка.ТМЦ.ТМЦ, "");	
					НаименованиеГруппы_2 = Врег(СокрЛП(ТзВтораяКолонка.Папка.НаименованиеДляПечати));
					Выделять = 0;
					Если ВыделятьТовары = "Ф1" Тогда
						ТзВтораяКолонка.ТМЦ.ТМЦ.ИспользоватьДату(РабочаяДата());
						Если (ТзВтораяКолонка.ТМЦ.ТМЦ.ЕстьКодС.Получить(РабочаяДата()) = 0) //--- УМК Сандомирский В.Ю. (06.04.15) 
								И (ПустоеЗначение(ТзВтораяКолонка.ТМЦ.ТМЦ)  <> 1) Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если ВыделятьТовары = "Новые" Тогда
						Если ТзВтораяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если Выделять = 0 Тогда
						Таб.ПрисоединитьСекцию("Товар|Колонка_2");
					Иначе
						Таб.ПрисоединитьСекцию("ТоварПометка|Колонка_2");
					КонецЕсли;
				КонецЕсли;	
			Исключение
				Таб.ПрисоединитьСекцию("ПустаяСтрока|Колонка_2");
			КонецПопытки;	
		КонецЦикла;
			
		//--- Постобработка таблицы для объединения и переворачиваня		
		//Сообщить(Таб.ВысотаТаблицы());  
	        
		ТекГруппа_1 = "";
		ТекГруппа_2 = "";
		ТекСтрокаНачало_1 = 0;
		ТекСтрокаНачало_2 = 0;
		К1 = 1;
		К2 = 6; К3 = 11; КПлюс = 4;
		
		Для Строк = 1 По Таб.ВысотаТаблицы() Цикл			
			Если ТекГруппа_1 <> Таб.Область(Строк, 1, Строк,1).Текст Тогда				
				Если ТекСтрокаНачало_1 <>  0 Тогда
					Таб.Область(ТекСтрокаНачало_1, 1, Строк-1,1).Объединить();  //--- Объединяем 	
					Таб.Область(Строк-1, 1, Строк-1, К1+КПлюс).РамкаСнизу(4);			//--- подчеркиваем 					
					ТекСтрокаНачало_1 = Строк;
				Иначе
					ТекСтрокаНачало_1 = Строк;		
				КонецЕсли;
				
				ТекГруппа_1 = Таб.Область(Строк, 1, Строк,1).Текст;				
			КонецЕсли;
			
			Если ТекГруппа_2 <> Таб.Область(Строк, К2, Строк,К2).Текст Тогда				
				Если ТекСтрокаНачало_2 <>  0 Тогда
					Таб.Область(ТекСтрокаНачало_2, К2, Строк-1,К2).Объединить(); 	//--- Объединяем 
					Таб.Область(Строк-1, К2, Строк-1,К2+КПлюс).РамкаСнизу(4);			//--- подчеркиваем 
					ТекСтрокаНачало_2 = Строк;
				Иначе
					ТекСтрокаНачало_2 = Строк;		
				КонецЕсли;
				
				ТекГруппа_2 = Таб.Область(Строк, К2, Строк,К2).Текст;
			КонецЕсли;			
		КонецЦикла;
	
		Таб.Область(ТекСтрокаНачало_1, 1, Строк-1,1).Объединить(); //--- Объединяем 
		Таб.Область(Строк-1, 1, Строк-1, К1+КПлюс).РамкаСнизу(4);
		Таб.Область(ТекСтрокаНачало_2, К2, Строк-1,К2).Объединить(); //--- Объединяем 
		Таб.Область(Строк-1, К2, Строк-1, К2+КПлюс).РамкаСнизу(4);
	КонецЦикла;	
	
	Таб.ПараметрыСтраницы(2,,,0,0,0,0,0,0,1,,);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать();		
КонецПроцедуры

//====================================================================== 
Процедура Сформировать(ЭкспортВExcel = "", Суффикс = "")
	Перем Мас[5];
	
	Если ЭкспортВExcel = 1 Тогда		
		Если ПустоеЗначение(Путь) = 1 Тогда
			Сообщить("Не задан путь записи отгрузочного Excel","!");
			Возврат;
		КонецЕсли; 
		
		Предупреждение("Внимание !!! " + глПравильныйСимволПереноса + " экспорт в Excel может занять несколько минут " + глПравильныйСимволПереноса + "дождитесь сообщения об окончании.",15);
		
		Попытка 
	        xl=СоздатьОбъект("Excel.Application");
	    Исключение       
	        Предупреждение("MS Excel не загружен !");
			Возврат;
		КонецПопытки;
		
		xl.DisplayAlerts = 0;  //--- Ваще без матюков
		
		СкопированныйШаблонXLS = СокрЛП(СокрЛП(Путь) + "\Отгрузочный.xlsx");	
		xl.Workbooks.Open(СокрЛП(Константа.УМК_ИмяФайлаШаблонаОтгрузочного),,1);	
		Книга = xl.ActiveWorkbook;	
		Книга.SaveAs(СкопированныйШаблонXLS,51);
		НомерЛиста = 1;
		Лист = Книга.WorkSheets(НомерЛиста);
		
		Состояние("Экспорт в Excel");		
	КонецЕсли;
		
	Таб = СоздатьОбъект("Таблица");  
	Таб.ИсходнаяТаблица("Таблица"+Суффикс);
	ПечФорма = "Таблица";
	
	СпрОтгрузочный 		= СоздатьОбъект("Справочник.УМК_Отгрузочный");
	СпрСтрокаОтгрузка 	= СоздатьОбъект("Справочник.УМК_СтрокиОтгрузочного");
	
	// Определим количество листов прайса
	ВсегоЛистов = 0;
	СпрОтгрузочный.ВыбратьЭлементы();
	Пока СпрОтгрузочный.ПолучитьЭлемент() = 1 Цикл
		Если ВсегоЛистов < СпрОтгрузочный.Лист Тогда
			ВсегоЛистов = СпрОтгрузочный.Лист;
		КонецЕсли;
	КонецЦикла;
		
	ТекКвоСтрок_2 = 0;
	
	НаПредидущемЛисте = 0;
	
	//--- Формируем Первый лист
	Для К = 1 По ВсегоЛистов Цикл
		Если К <> 1 Тогда
			Таб.НоваяСтраница();
		КонецЕсли;
		КоличествоСтрокНаЛисте = 1;		
		
		Если Суффикс = "Уп" Тогда
			Мас[1] = "ВУ цел";
			Мас[2] = "ВУ порц";
			Мас[3] = "ВУ серв";
			Мас[4] = "Газ";
			Мас[5] = "Общий";
			Для Инд = 1 По 3 Цикл
				Если Инд = 1 Тогда
					Таб.ВывестиСекцию("Шапка|Колонка_" + Инд);	
				Иначе
					Таб.ПрисоединитьСекцию("Шапка|Колонка_" + Инд);
				КонецЕсли;
				ДобавитьСекции(Мас, Таб, "Шапка");
			КонецЦикла;
		Иначе
			Таб.ВывестиСекцию("Шапка");
		КонецЕсли;
		
		ТзПерваяКолонка 	= СоздатьОбъект("ТаблицаЗначений");
		ТзПерваяКолонка.НоваяКолонка("Папка","Справочник.УМК_Отгрузочный");
		ТзПерваяКолонка.НоваяКолонка("ТМЦ","Справочник.УМК_СтрокиОтгрузочного");
		
		ТзВтораяКолонка 	= СоздатьОбъект("ТаблицаЗначений");
		ТзВтораяКолонка.НоваяКолонка("Папка","Справочник.УМК_Отгрузочный");
		ТзВтораяКолонка.НоваяКолонка("ТМЦ","Справочник.УМК_СтрокиОтгрузочного");
		
		ТзТретяяКолонка 	= СоздатьОбъект("ТаблицаЗначений");
		ТзТретяяКолонка.НоваяКолонка("Папка","Справочник.УМК_Отгрузочный");
		ТзТретяяКолонка.НоваяКолонка("ТМЦ","Справочник.УМК_СтрокиОтгрузочного");
		
		КвоСтрок_1 = ТекКвоСтрок_2;
		ТЗТекЭл = СоздатьОбъект("ТаблицаЗначений");
		ТЗТекЭл.НоваяКолонка("Элемент", "Справочник.УМК_Отгрузочный");
		ТЗТекЭл.НоваяКолонка("Код", "Число");
		СпрОтгрузочный.ВыбратьЭлементыПоРеквизиту("Лист", К, 0, 0);
		Пока СпрОтгрузочный.ПолучитьЭлемент() = 1 Цикл
			Если СпрОтгрузочный.ПометкаУдаления() = 0 Тогда
				ТЗТекЭл.НоваяСтрока();
				ТЗТекЭл.Элемент = СпрОтгрузочный.ТекущийЭлемент();
				ТЗТекЭл.Код = СпрОтгрузочный.Код;
			КонецЕсли;
		КонецЦикла;
		ТЗТекЭл.Сортировать("Код");
		
		ТЗТекЭл.ВыбратьСтроки();
		Пока ТЗТекЭл.ПолучитьСтроку() = 1 Цикл
			Если ТЗТекЭл.Элемент.Колонка = 1 Тогда				
				СпрСтрокаОтгрузка.ИспользоватьВладельца(ТЗТекЭл.Элемент.ТекущийЭлемент());
				СпрСтрокаОтгрузка.ПорядокКодов();
				СпрСтрокаОтгрузка.ВыбратьЭлементы();
				Пока СпрСтрокаОтгрузка.ПолучитьЭлемент() = 1 Цикл
					Если ПроверитьТМЦ(СпрСтрокаОтгрузка) = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					ТзПерваяКолонка.НоваяСтрока();
					ТзПерваяКолонка.Папка 	= ТЗТекЭл.Элемент.ТекущийЭлемент();
					ТзПерваяКолонка.ТМЦ 	= СпрСтрокаОтгрузка.ТекущийЭлемент();		
					
					Если (ПустоеЗначение(СпрСтрокаОтгрузка.НаименованиеДляПечати) = 1) 
					И (ПустоеЗначение(СпрСтрокаОтгрузка.ТМЦ) = 1) Тогда				
					Иначе			
						КвоСтрок_1 = КвоСтрок_1 + 1;		
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли ТЗТекЭл.Элемент.Колонка = 2 Тогда
				СпрСтрокаОтгрузка.ИспользоватьВладельца(ТЗТекЭл.Элемент.ТекущийЭлемент());
				СпрСтрокаОтгрузка.ПорядокКодов();
				СпрСтрокаОтгрузка.ВыбратьЭлементы();
				Пока СпрСтрокаОтгрузка.ПолучитьЭлемент() = 1 Цикл		
					Если ПроверитьТМЦ(СпрСтрокаОтгрузка) = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					ТзВтораяКолонка.НоваяСтрока();
					ТзВтораяКолонка.Папка 	= ТЗТекЭл.Элемент.ТекущийЭлемент();
					ТзВтораяКолонка.ТМЦ 	= СпрСтрокаОтгрузка.ТекущийЭлемент();	
				КонецЦикла;
			ИначеЕсли ТЗТекЭл.Элемент.Колонка = 3 Тогда
				СпрСтрокаОтгрузка.ИспользоватьВладельца(ТЗТекЭл.Элемент.ТекущийЭлемент());
				СпрСтрокаОтгрузка.ПорядокКодов();
				СпрСтрокаОтгрузка.ВыбратьЭлементы();
				Пока СпрСтрокаОтгрузка.ПолучитьЭлемент() = 1 Цикл
					Если ПроверитьТМЦ(СпрСтрокаОтгрузка) = 0 Тогда
						Продолжить;
					КонецЕсли;			
					
					ТзТретяяКолонка.НоваяСтрока();
					ТзТретяяКолонка.Папка 	= ТЗТекЭл.Элемент.ТекущийЭлемент();
					ТзТретяяКолонка.ТМЦ 		= СпрСтрокаОтгрузка.ТекущийЭлемент();	
				КонецЦикла;							
			КонецЕсли;	
		КонецЦикла;
		
		//--- смотрим кто больше из колонок
		КоличествоСтрокЛиста = Макс(ТзПерваяКолонка.КоличествоСтрок(),ТзВтораяКолонка.КоличествоСтрок());
		
		ТекКвоСтрок_1 = ТекКвоСтрок_2;
		ТекКвоСтрок_2 = КвоСтрок_1;
		
		Для Строк=1 По КоличествоСтрокЛиста Цикл			
			КоличествоСтрокНаЛисте = КоличествоСтрокНаЛисте + 1;					
			//--- Вывод на печать первой колонки	
			Попытка
				ТзПерваяКолонка.ПолучитьСтрокуПоНомеру(Строк);
				Если ПустоеЗначение(ТзПерваяКолонка.ТМЦ) = 1 Тогда
					ПечГруппа_1 = Врег(СокрЛП(ТзПерваяКолонка.Папка.НаименованиеДляПечати));
				Иначе
						
					Если (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.НаименованиеДляПечати) = 1) 
						И (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.ТМЦ) = 1) Тогда						
						НопПП_1 = "";							
					Иначе		
						ТекКвоСтрок_1 = ТекКвоСтрок_1 + 1;
						НопПП_1 = ТекКвоСтрок_1;	
					КонецЕсли;
	
					ПечТМЦ_1 	 		= ТзПерваяКолонка.ТМЦ.НаименованиеДляПечати;
					Если Суффикс = "Уп" Тогда
						ЗаполнитьМассивКодов(Мас, ТзПерваяКолонка.ТМЦ);
					КонецЕсли;										
					ПечОболочка_1		= ВернутьОболочку(ТзПерваяКолонка.ТМЦ, Суффикс);
					ПечЦена 			= ВернутьЦену(ТзПерваяКолонка.ТМЦ.ТМЦ, Суффикс);
					НаименованиеГруппы_1 = Врег(СокрЛП(ТзПерваяКолонка.Папка.НаименованиеДляПечати));
					
					Выделять = 0;
					Если ВыделятьТовары = "Ф1" Тогда
						ТзПерваяКолонка.ТМЦ.ТМЦ.ИспользоватьДату(РабочаяДата());
						Если (ТзПерваяКолонка.ТМЦ.ТМЦ.ЕстьКодС.Получить(РабочаяДата()) = 0) //--- УМК Сандомирский В.Ю. (06.04.15)
								И (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.ТМЦ)  <> 1) Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если ВыделятьТовары = "Новые" Тогда
						Если ТзПерваяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если Выделять = 0 Тогда
						Таб.ВывестиСекцию("Товар|Колонка_1");
					Иначе
						Таб.ВывестиСекцию("ТоварПометка|Колонка_1");
					КонецЕсли;
					Если Суффикс = "Уп" Тогда
						ДобавитьСекции(Мас, Таб, "Товар" + ?(Выделять = 0, "", "Пометка"));
					КонецЕсли;
				КонецЕсли;				
			Исключение			
				Таб.ВывестиСекцию("ПустаяСтрока|Колонка_1");				
				Если Суффикс = "Уп" Тогда
					ДобавитьСекции(Мас, Таб, "ПустаяСтрока");
				КонецЕсли;
			КонецПопытки;
		
			//--- Вывод на печать второй колонки	
			
			Попытка				
				ТзВтораяКолонка.ПолучитьСтрокуПоНомеру(Строк);
				Если ПустоеЗначение(ТзВтораяКолонка.ТМЦ) = 1 Тогда
					//--- Группа					
					ПечГруппа_2 = Врег(СокрЛП(ТзВтораяКолонка.Папка.НаименованиеДляПечати));					
				Иначе
					Если (ПустоеЗначение(ТзВтораяКолонка.ТМЦ.НаименованиеДляПечати) = 1) 
						И (ПустоеЗначение(ТзВтораяКолонка.ТМЦ.ТМЦ) = 1) Тогда
						НопПП_2 = "";	
					Иначе
						ТекКвоСтрок_2 = ТекКвоСтрок_2 + 1;
						НопПП_2 = ТекКвоСтрок_2;
					КонецЕсли;
					ПечТМЦ_2 			= ТзВтораяКолонка.ТМЦ.НаименованиеДляПечати;
					Если Суффикс = "Уп" Тогда
						ЗаполнитьМассивКодов(Мас, ТзВтораяКолонка.ТМЦ);
					КонецЕсли;					
					ПечОболочка_2		= ВернутьОболочку(ТзВтораяКолонка.ТМЦ, Суффикс);
					ПечЦена 			= ВернутьЦену(ТзВтораяКолонка.ТМЦ.ТМЦ, Суффикс);	
					НаименованиеГруппы_2 = Врег(СокрЛП(ТзВтораяКолонка.Папка.НаименованиеДляПечати));
					Выделять = 0;
					Если ВыделятьТовары = "Ф1" Тогда
						ТзВтораяКолонка.ТМЦ.ТМЦ.ИспользоватьДату(РабочаяДата());
						Если (ТзВтораяКолонка.ТМЦ.ТМЦ.ЕстьКодС.Получить(РабочаяДата()) = 0) //--- УМК Сандомирский В.Ю. (06.04.15) 
								И (ПустоеЗначение(ТзВтораяКолонка.ТМЦ.ТМЦ)  <> 1) Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если ВыделятьТовары = "Новые" Тогда
						Если ТзВтораяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если Выделять = 0 Тогда
						Таб.ПрисоединитьСекцию("Товар|Колонка_2");
					Иначе
						Таб.ПрисоединитьСекцию("ТоварПометка|Колонка_2");
					КонецЕсли;
					Если Суффикс = "Уп" Тогда
						ДобавитьСекции(Мас, Таб, "Товар" + ?(Выделять = 0, "", "Пометка"));
					КонецЕсли;					
				КонецЕсли;	
			Исключение
				Таб.ПрисоединитьСекцию("ПустаяСтрока|Колонка_2");
				Если Суффикс = "Уп" Тогда
					ДобавитьСекции(Мас, Таб, "ПустаяСтрока");
				КонецЕсли;				
			КонецПопытки;	
			
			Попытка				
				ТзТретяяКолонка.ПолучитьСтрокуПоНомеру(Строк);
				Если ПустоеЗначение(ТзТретяяКолонка.ТМЦ) = 1 Тогда
					ПечГруппа_3 = Врег(СокрЛП(ТзТретяяКолонка.Папка.НаименованиеДляПечати));
				Иначе
					Если (ПустоеЗначение(ТзТретяяКолонка.ТМЦ.НаименованиеДляПечати) = 1) 
						И (ПустоеЗначение(ТзТретяяКолонка.ТМЦ.ТМЦ) = 1) Тогда
						НопПП_3 = "";	
					Иначе
						ТекКвоСтрок_3 = ТекКвоСтрок_3 + 1;
						НопПП_3 = ТекКвоСтрок_2;
					КонецЕсли;
					
					ПечТМЦ_3 			= ТзТретяяКолонка.ТМЦ.НаименованиеДляПечати;
					Если Суффикс = "Уп" Тогда
						ЗаполнитьМассивКодов(Мас, ТзТретяяКолонка.ТМЦ);
					КонецЕсли;					
					ПечОболочка_3		= ВернутьОболочку(ТзТретяяКолонка.ТМЦ, Суффикс);
					ПечЦена 			= ВернутьЦену(ТзТретяяКолонка.ТМЦ.ТМЦ, Суффикс);
					НаименованиеГруппы_3 = Врег(СокрЛП(ТзТретяяКолонка.Папка.НаименованиеДляПечати));					
					Выделять = 0;
					Если ВыделятьТовары = "Ф1" Тогда						
						ТзТретяяКолонка.ТМЦ.ТМЦ.ИспользоватьДату(РабочаяДата());						
						Если (ТзТретяяКолонка.ТМЦ.ТМЦ.ЕстьКодС.Получить(РабочаяДата()) = 0)  //--- УМК Сандомирский В.Ю. (06.04.15) 
								И (ПустоеЗначение(ТзТретяяКолонка.ТМЦ.ТМЦ)  <> 1) Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если ВыделятьТовары = "Новые" Тогда
						Если ТзТретяяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
							Выделять = 1;
						КонецЕсли;	
					КонецЕсли;
					
					Если Выделять = 0 Тогда
						Таб.ПрисоединитьСекцию("Товар|Колонка_3");
					Иначе
						Таб.ПрисоединитьСекцию("ТоварПометка|Колонка_3");
					КонецЕсли;
					Если Суффикс = "Уп" Тогда
						ДобавитьСекции(Мас, Таб, "Товар" + ?(Выделять = 0, "", "Пометка"));
					КонецЕсли;					
				КонецЕсли;				
			Исключение						
				Таб.ПрисоединитьСекцию("ПустаяСтрока|Колонка_3");
				Если Суффикс = "Уп" Тогда
					ДобавитьСекции(Мас, Таб, "ПустаяСтрока");
				КонецЕсли;				
			КонецПопытки;				
		КонецЦикла;
			
		//--- Постобработка таблицы для объединения и переворачиваня		
		//Сообщить(Таб.ВысотаТаблицы());  
	        
		ТекГруппа_1 = "";
		ТекГруппа_2 = "";
		ТекГруппа_3 = "";
		ТекСтрокаНачало_1 = 0;
		ТекСтрокаНачало_2 = 0;
		ТекСтрокаНачало_3 = 0;
		К1 = 1;
		Если Суффикс = "Уп" Тогда
			К2 = 9; К3 = 17; КПлюс = 7;
		Иначе
			К2 = 6; К3 = 11; КПлюс = 4;
		КонецЕсли;
		
		
		Для Строк=1 По Таб.ВысотаТаблицы() Цикл			
			Если ТекГруппа_1 <> Таб.Область(Строк, 1, Строк,1).Текст Тогда				
				Если ТекСтрокаНачало_1 <>  0 Тогда
					Таб.Область(ТекСтрокаНачало_1, 1, Строк-1,1).Объединить();  //--- Объединяем 	
					Таб.Область(Строк-1, 1, Строк-1, К1+КПлюс).РамкаСнизу(4);			//--- подчеркиваем 					
					ТекСтрокаНачало_1 = Строк;
				Иначе
					ТекСтрокаНачало_1 = Строк;		
				КонецЕсли;
				
				ТекГруппа_1 = Таб.Область(Строк, 1, Строк,1).Текст;				
			КонецЕсли;
			
			Если ТекГруппа_2 <> Таб.Область(Строк, К2, Строк,К2).Текст Тогда				
				Если ТекСтрокаНачало_2 <>  0 Тогда
					Таб.Область(ТекСтрокаНачало_2, К2, Строк-1,К2).Объединить(); 	//--- Объединяем 
					Таб.Область(Строк-1, К2, Строк-1,К2+КПлюс).РамкаСнизу(4);			//--- подчеркиваем 
					ТекСтрокаНачало_2 = Строк;
				Иначе
					ТекСтрокаНачало_2 = Строк;		
				КонецЕсли;
				
				ТекГруппа_2 = Таб.Область(Строк, К2, Строк,К2).Текст;				
			КонецЕсли;
			
			Если ТекГруппа_3 <> Таб.Область(Строк, К3, Строк,К3).Текст Тогда				
				Если ТекСтрокаНачало_3 <>  0 Тогда
					Таб.Область(ТекСтрокаНачало_3, К3, Строк-1,К3).Объединить(); //--- Объединяем 
					Таб.Область(Строк-1, К3, Строк-1,К3+КПлюс).РамкаСнизу(4);			 //--- подчеркиваем 	
					ТекСтрокаНачало_3 = Строк;
				Иначе
					ТекСтрокаНачало_3 = Строк;		
				КонецЕсли;
				
				ТекГруппа_3 = Таб.Область(Строк, К3, Строк,К3).Текст;				
			КонецЕсли;			
		КонецЦикла;
	
		Таб.Область(ТекСтрокаНачало_1, 1, Строк-1,1).Объединить(); //--- Объединяем 
		Таб.Область(Строк-1, 1, Строк-1, К1+КПлюс).РамкаСнизу(4);
		Таб.Область(ТекСтрокаНачало_2, К2, Строк-1,К2).Объединить(); //--- Объединяем 
		Таб.Область(Строк-1, К2, Строк-1, К2+КПлюс).РамкаСнизу(4);
		Таб.Область(ТекСтрокаНачало_3, К3, Строк-1,К3).Объединить(); //--- Объединяем 	
		Таб.Область(Строк-1, К3, Строк-1, К3+КПлюс).РамкаСнизу(4);			
	КонецЦикла;	
	
	
	Если ЭкспортВExcel = 1 Тогда //--- УМК Сандомирский В.Ю. (22.12.14)		
		Для ТекСтр = 2 По КоличествоСтрокНаЛисте Цикл				
			ТекСтрокаТаблицы = ТекСтр+ НаПредидущемЛисте;			
			ГруппаСлева = 0;
			ГруппаСправа = 0;
			
			Для ТекКолонка = 1 По 15 Цикл	
				Лист.Cells(ТекСтр, ТекКолонка).NumberFormat 	= "@"; 					
				Лист.Cells(ТекСтр, ТекКолонка).Value 			=	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).Текст;	
				Лист.Cells(ТекСтр, ТекКолонка).Borders.Color 	= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ЦветРамки();	
				Лист.Cells(ТекСтр, ТекКолонка).Interior.Color 	= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ЦветФона();	
				Лист.Cells(ТекСтр, ТекКолонка).Font.Color 		= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ЦветТекста();
				Лист.Cells(ТекСтр, ТекКолонка).Font.Size  		= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).РазмерШрифта();
				Лист.Cells(ТекСтр, ТекКолонка).Font.Bold 		= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).Полужирный();	
				Лист.Cells(ТекСтр, ТекКолонка).RowHeight 		= 	12.6; //--- высота строки
				Лист.Cells(ТекСтр, ТекКолонка).HorizontalAlignment =  -4131;  // --- лево 
			КонецЦикла;	
				
		КонецЦикла;	
			
		ТекГруппа = "";
		ТекСтрокаНачало = 0;
		Для ТекСтр = 2 По КоличествоСтрокНаЛисте Цикл		
			ТекВалю = СокрЛП(Лист.Cells(ТекСтр, 1).Value);	
			Если ТекГруппа <> ТекВалю Тогда		
				Если ТекСтрокаНачало <>  0 Тогда		
					ЯчейкаОбъединить = Лист.Range(Лист.Cells(ТекСтрокаНачало,1),Лист.Cells(ТекСтр-1,1));
					ЯчейкаОбъединить.Merge();
					ЯчейкаОбъединить.Orientation		 = 90;	
					
					Лист.Cells(ТекСтр-1,1).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,2).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,3).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,4).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,5).Borders(4).Weight = 3; // --- нижняя линия жирная
					
					ТекСтрокаНачало = ТекСтр;
				Иначе
					ТекСтрокаНачало = ТекСтр;		
				КонецЕсли;	
				ТекГруппа = ТекВалю;
			КонецЕсли;			
			
			Лист.Cells(ТекСтр,1).HorizontalAlignment = -4131;			
		КонецЦикла;	
		ЯчейкаОбъединить = Лист.Range(Лист.Cells(ТекСтрокаНачало,1),Лист.Cells(ТекСтр-1,1));
		ЯчейкаОбъединить.Merge();
		ЯчейкаОбъединить.Orientation		 = 90;		
		
		Лист.Cells(ТекСтр-1,1).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,2).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,3).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,4).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,5).Borders(4).Weight = 3; // --- нижняя линия жирная
		
		ТекГруппа = "";
		ТекСтрокаНачало = 0;
		Для ТекСтр = 2 По КоличествоСтрокНаЛисте Цикл		
			ТекВалю = СокрЛП(Лист.Cells(ТекСтр, 6).Value);	
			Если ТекГруппа <> ТекВалю Тогда		
				Если ТекСтрокаНачало <>  0 Тогда		
					ЯчейкаОбъединить = Лист.Range(Лист.Cells(ТекСтрокаНачало,6),Лист.Cells(ТекСтр-1,6));
					ЯчейкаОбъединить.Merge();
					ЯчейкаОбъединить.Orientation		 = 90;	
					
					Лист.Cells(ТекСтр-1,6).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,7).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,8).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,9).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,10).Borders(4).Weight = 3; // --- нижняя линия жирная
					
					ТекСтрокаНачало = ТекСтр;
				Иначе
					ТекСтрокаНачало = ТекСтр;		
				КонецЕсли;	
				ТекГруппа = ТекВалю;
			КонецЕсли;
			
			Лист.Cells(ТекСтр,6).HorizontalAlignment = -4131;
			
		КонецЦикла;	
		ЯчейкаОбъединить = Лист.Range(Лист.Cells(ТекСтрокаНачало,6),Лист.Cells(ТекСтр-1,6));
		ЯчейкаОбъединить.Merge();
		ЯчейкаОбъединить.Orientation		 = 90;
		
		Лист.Cells(ТекСтр-1,6).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,7).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,8).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,9).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,10).Borders(4).Weight = 3; // --- нижняя линия жирная
		
		
		ТекГруппа = "";
		ТекСтрокаНачало = 0;
		Для ТекСтр = 2 По КоличествоСтрокНаЛисте Цикл		
			ТекВалю = СокрЛП(Лист.Cells(ТекСтр, 11).Value);	
			Если ТекГруппа <> ТекВалю Тогда		
				Если ТекСтрокаНачало <>  0 Тогда		
					ЯчейкаОбъединить = Лист.Range(Лист.Cells(ТекСтрокаНачало,11),Лист.Cells(ТекСтр-1,11));
					ЯчейкаОбъединить.Merge();
					ЯчейкаОбъединить.Orientation		 = 90;	
					
					Лист.Cells(ТекСтр-1,11).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,12).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,13).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,14).Borders(4).Weight = 3; // --- нижняя линия жирная
					Лист.Cells(ТекСтр-1,15).Borders(4).Weight = 3; // --- нижняя линия жирная
					
					ТекСтрокаНачало = ТекСтр;
				Иначе
					ТекСтрокаНачало = ТекСтр;		
				КонецЕсли;	
				ТекГруппа = ТекВалю;
			КонецЕсли;	
			
			Лист.Cells(ТекСтр,11).HorizontalAlignment = -4131;
				
		КонецЦикла;	
		
		ЯчейкаОбъединить = Лист.Range(Лист.Cells(ТекСтрокаНачало,11),Лист.Cells(ТекСтр-1,11));
		ЯчейкаОбъединить.Merge();
		ЯчейкаОбъединить.Orientation		 = 90;
		
		Лист.Cells(ТекСтр-1,11).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,12).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,13).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,14).Borders(4).Weight = 3; // --- нижняя линия жирная
		Лист.Cells(ТекСтр-1,15).Borders(4).Weight = 3; // --- нижняя линия жирная			
	КонецЕсли;
	

	Если ЭкспортВExcel = 1 Тогда  //--- УМК Сандомирский В.Ю. (22.12.14)
		//--- Задаем формат печати по ширине листа
		ExcelPS= Лист.PageSetup;    
		Попытка
	   		ScrptCtrl = СоздатьОбъект("MSScriptControl.ScriptControl"); 
	        ScrptCtrl.Language="vbscript"; 
	        ScrptCtrl.AddCode("Function SetAutoZoom()   
			 |  ExcelPS.Zoom = False
	         |  ExcelPS.FitToPagesWide = 1 
			 |  ExcelPS.FitToPagesTall = 100
	         |End Function");
			
	        ScrptCtrl.AddObject("ExcelPS", ExcelPS); 
	        ScrptCtrl.Run("SetAutoZoom") 
	    Исключение
	        сообщить("не удалось задать Excel - по ширине листа")
	    КонецПопытки;
				
		//Для Лист = 1 По xl.Sheets.Count() Цикл
		//	xl.Sheets(Лист).Select();
		//	xl.ActiveSheet.PageSetup.PrintTitleRows = "$2:$5";
		//КонецЦикла;

		Лист.PageSetup.Orientation = 2;		// --- Ориентация: 1 — книжная, 2 — альбомная.
		
		Книга.Save();
		xl.Workbooks.Close();
			
		xl.DisplayAlerts = 1;
		
		xl = "";
		
		Сообщить("Экспорт отгрузочного в файл " + СкопированныйШаблонXLS + " завершен.");	
	Иначе	
		Таб.ПараметрыСтраницы(2,,,0,0,0,0,0,0,1,,);
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Опции(0,0,,);
		Таб.Показать();		
	КонецЕсли;	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (24.03.15)
Процедура ВыбрКат()  
	Пт = СокрЛП(Путь);  
	ФС.ВыбратьКаталог(Пт,"Выберите место записи прайсов Excel", 0);  
	Путь = СокрЛП(Пт); 
КонецПроцедуры

//====================================================================== 
Процедура ПечатьОтгрузочного(ЭкспортВExcel = "", Выделять = "")		
	Перем ВыбЗначение;

	ТекВыделять = Выделять;	
	Если Выделять = "" Тогда
		ВыбПечать = СоздатьОбъект("СписокЗначений");
		
		ВыбПечать.ДобавитьЗначение("Ф1","&Выделять Ф2");
		ВыбПечать.ДобавитьЗначение("Новые","&Выделять новые");
		ВыбПечать.ДобавитьЗначение("НеВыделять","&Не выделять");
		ВыбПечать.ДобавитьЗначение("Коды","&Коды для весов");
		ВыбПечать.ДобавитьЗначение("Склад","&Склад в/г упаковки");
		ВыбПечать.ДобавитьЗначение("ДвеКолонки","&Две колонки");
			
		Если ВыбПечать.ВыбратьЗначение(Выделять,"",,3,1) <> 1 Тогда
		    Возврат;
		КонецЕсли;    
	КонецЕсли;

	Если ПустоеЗначение(Спецификация) = 0 Тогда
		ТСпец = СоздатьОбъект("СписокЗначений");
		Спецификация.ВыгрузитьТабличнуюЧасть(ТСпец, "ТМЦ");
	КонецЕсли;
	
	Суффикс = "";
	ВыделятьТовары = Выделять;
	Если ВыделятьТовары = "Коды" Тогда
		Если ТекВыделять <> "" Тогда
			СпрВВ = СоздатьОбъект("Справочник.ВидыВесов");
			Если СпрВВ.Выбрать("Выберите вид весов", "ФормаСписка") = 1 Тогда
				ВидВесов = СпрВВ.ТекущийЭлемент()
			Иначе
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если ВидВесов.Выбран() = 0 Тогда
			Предупреждение("Выберите вид весов");
			Возврат;
		КонецЕсли;
		Суффикс = "Уп";
	ИначеЕсли ВыделятьТовары = "Склад" Тогда
		ВыделятьТовары = "";
		СформироватьВГ();
		Возврат;
	ИначеЕсли ВыделятьТовары = "ДвеКолонки" Тогда
		СформироватьДве();
		Возврат;
	КонецЕсли;

	Сформировать(ЭкспортВExcel, Суффикс);
КонецПроцедуры

//====================================================================== 
Процедура ПриОткрытии()	
	Если (ПустоеЗначение(Форма.Параметр) <> 1) И (ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений") Тогда
		ВыбКатЦен = Форма.Параметр.Получить("ТипЦен");
		ПечатьОтгрузочного(, Форма.Параметр.Получить("Вариант"));
		СтатусВозврата(0);
		Возврат; 		
	КонецЕсли;
	
	Если ПустоеЗначение(Путь) = 1 Тогда
		Путь = ВосстановитьЗначение("Путь");	
	КонецЕсли;		
КонецПроцедуры // гл

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("Путь", Путь);
КонецПроцедуры


СоответствиеРеквизитов[1] = "УсловияХраненияВЦ";
СоответствиеРеквизитов[2] = "УсловияХраненияВП";
СоответствиеРеквизитов[3] = "УсловияХраненияВС";
СоответствиеРеквизитов[4] = "УсловияХраненияГ";
СоответствиеРеквизитов[5] = "УсловияХранения";
