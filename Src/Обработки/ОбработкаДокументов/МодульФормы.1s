Перем спНеПроводимыеДокументы, ВидОбработки, ДокументВладелец;
Перем Комментарий;

// ===============================
Функция УстДоступность()
    Форма.кОчиститьФирму.Доступность(ВыбФирма.Выбран());
	Форма.кОчиститьКонтрагента.Доступность(ВыбКонтрагент.Выбран());
	
	Обработка = спВыбОбработка.ПолучитьЗначение(спВыбОбработка.ТекущаяСтрока());
	Форма.фАктуальностьБИ.Доступность(МонопольныйРежим());
КонецФункции

// ===============================
Процедура ПереносГруппы(Источник,Приемник)
	Для Инд=1 По Источник.РазмерСписка() Цикл
		Представление = "";
		Значение = Источник.ПолучитьЗначение(Инд,Представление);
		Приемник.ДобавитьЗначение(Значение,Представление);
	КонецЦикла;
	Источник.УдалитьВсе();
	Приемник.СортироватьПоПредставлению();
КонецПроцедуры

// ===============================
Процедура ПереносЭлемента(Источник,Приемник)
	Если Источник.ТекущаяСтрока() > 0 Тогда
		Представление = "";
		Значение = Источник.ПолучитьЗначение(Источник.ТекущаяСтрока(),Представление);
		Приемник.ДобавитьЗначение(Значение,Представление);
		ИсточникПозиция = Источник.ТекущаяСтрока();
		Если ИсточникПозиция = Источник.РазмерСписка() Тогда
			ИсточникПозиция = ИсточникПозиция - 1;
		КонецЕсли;
		Источник.УдалитьЗначение(Источник.ТекущаяСтрока());
		Источник.ТекущаяСтрока(ИсточникПозиция);
		Приемник.СортироватьПоПредставлению();
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()
	глСохранитьЗначение("ОбработкаДокументов","ВыбОбработка",спВыбОбработка.ПолучитьЗначение(спВыбОбработка.ТекущаяСтрока()));
	глСохранитьЗначение("ОбработкаДокументов","ВыбТипДок",спВыбТипДок.ПолучитьЗначение(спВыбТипДок.ТекущаяСтрока()));
КонецПроцедуры

// ===============================
Процедура Выполнить(Обработка)
	Перем БИ;
	
	Если ВыбранныеДокументы.РазмерСписка() = 0 Тогда
		Возврат;
	КонецЕсли;
	
   	Если (Обработка <> "Печать") И (Дата1 <= Константа.ДатаЗапретаРедактирования) Тогда
		Предупреждение("Запрещена обработка документов (операций), "+РазделительСтрок+"введенных до "+Формат(Константа.ДатаЗапретаРедактирования,"ДДДММММГГГГ")+" !");
		Возврат;
	КонецЕсли;
	
	НачалоТекущегоПериода 	= НачМесяца(РабочаяДата());
	КонецТекущегоПериода 	= КонМесяца(РабочаяДата());

	Если (Обработка <> "Печать") И ((Дата1 < НачалоТекущегоПериода) Или (Дата2 > КонецТекущегоПериода))
	Или ((Дата2 < НачалоТекущегоПериода) Или (Дата2 > КонецТекущегоПериода)) Тогда
		// проверим, есть ли среди выбранных документов принадлежащие компоненте "Расчет"
		ЕстьДокументыРасчета = 0;
		Для Инд = 1 по ВыбранныеДокументы.РазмерСписка() Цикл
			Стр = "";
			ИдентификаторДокумента = ВыбранныеДокументы.ПолучитьЗначение(Инд,Стр);
			Если Метаданные.Документ(ИдентификаторДокумента).Расчет = 1 Тогда
				ЕстьДокументыРасчета = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьДокументыРасчета = 1 Тогда
			// запрос о необходимости изменения интервала дат выдаем только в случае, 
			// если есть выбранные "расчетные" документы
			Рез = Вопрос("Выбранный интервал выходит за пределы текущего расчетного периода! "+
			"Установить интервал по границам текущего расчетного периода?","Да+Нет+Отмена");
			
			Если Рез = "Да" Тогда
				НачалоТекущегоПериода 	= НачМесяца(РабочаяДата());
				КонецТекущегоПериода 	= КонМесяца(РабочаяДата());
			ИначеЕсли Рез = "Нет" Тогда
				// продолжаем работу, не меняя интервал
			Иначе
				// Рез = "Отмена"
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Док = СоздатьОбъект("Документ");

	Если ВыбКонтрагент.Выбран() = 1 Тогда
		Док.ВыбратьПоЗначению(Дата1,Дата2,"Контрагент",ВыбКонтрагент);
	ИначеЕсли ПустоеЗначение(ДокументВладелец) = 0 Тогда
		Док.ВыбратьПодчиненныеДокументы(Дата1,Дата2,ДокументВладелец);
	Иначе
		Док.ВыбратьДокументы(Дата1,Дата2);
	КонецЕсли;

	Если Обработка = "Печать" Тогда
		Док.ИспользоватьЖурнал("ПолныйЖурнал",0);
		Таб = СоздатьОбъект("Таблица");

		Заг = "";
		Если ВыбФирма.Выбран() = 1 Тогда
			Заг = "по фирме " + СокрП(ВыбФирма.Наименование);
		КонецЕсли;
		Если ВыбКонтрагент.Выбран() = 1 Тогда
		    Если ПустаяСтрока(Заг) = 0 Тогда
		        Заг = Заг + "; ";
		    КонецЕсли;
		    Заг = Заг + "по контрагенту " + СокрП(ВыбКонтрагент.Наименование) + """";
		КонецЕсли;
		Если ПустоеЗначение(ДокументВладелец) = 0 Тогда
		    Если ПустаяСтрока(Заг) = 0 Тогда
		        Заг = Заг + "; ";
		    КонецЕсли;
			Заг = "подчиненных документу " + СокрП(ДокументВладелец);
		КонецЕсли;
		Если ПустаяСтрока(ВыбСтрока) = 0 Тогда
		    Если ПустаяСтрока(Заг) = 0 Тогда
		        Заг = Заг + "; ";
		    КонецЕсли;
		    Заг = Заг + "строка: """ + СокрЛП(ВыбСтрока) + """";
		КонецЕсли;
		Если ПустаяСтрока(ВыбСтрокаКом) = 0 Тогда
		    Если ПустаяСтрока(Заг) = 0 Тогда
		        Заг = Заг + "; ";
		    КонецЕсли;
		    Заг = Заг + "комментарий: """ + СокрП(ВыбСтрокаКом) + """";
		КонецЕсли;
		Если спВыбТипДок.ТекущаяСтрока() > 1 Тогда
		    Если ПустаяСтрока(Заг) = 0 Тогда
		        Заг = Заг + "; ";
		    КонецЕсли;

			Стр = "";
			спВыбТипДок.ПолучитьЗначение(спВыбТипДок.ТекущаяСтрока(),Стр);
		    Заг = Заг + "только " + Нрег(Стр);
		КонецЕсли;

		Таб.ВывестиСекцию("Шапка");
	Иначе // не Печать
		Если фТранзакция = 1 Тогда
			НачатьТранзакцию();
		КонецЕсли;
	КонецЕсли;
	
	Если (Обработка = "Провести") И (МонопольныйРежим() = 1) И (фАктуальностьБИ = 1) Тогда
		БИ = СоздатьОбъект("БухгалтерскиеИтоги");
		БИ.Актуальность(1);
	КонецЕсли;
	
	НПП = 0;
	Пока Док.ПолучитьДокумент() = 1 Цикл

		//Проверка вида документа
		Если ВыбранныеДокументы.НайтиЗначение(Док.Вид()) = 0 Тогда
		    Продолжить;
		КонецЕсли;
		
		//Проверка фирмы
		Если ВыбФирма.Выбран() = 0 Тогда
		ИначеЕсли (Док.Фирма <> ВыбФирма) и ((Док.Вид() <> "Операция") или (Док.Фирма.Выбран() = 1)) Тогда
		    Продолжить;
		КонецЕсли;
		
		//Проверка строки операции
		Если ПустаяСтрока(ВыбСтрока) = 1 Тогда
		ИначеЕсли Док.СуществуетОперация() = 0 Тогда
			Продолжить;
		ИначеЕсли Найти(ВРег(Док.Операция.Содержание),ВРег(ВыбСтрока)) = 0 Тогда
			Продолжить;
		КонецЕсли;

		//Проверка строки комментария
		Если ПустаяСтрока(ВыбСтрокаКом) = 1 Тогда
		ИначеЕсли Найти(ВРег(Док.Примечание),ВРег(ВыбСтрокаКом)) = 0 Тогда
			Продолжить;
		КонецЕсли;

		//Проверка признака документа
		Если Обработка <> "Печать" Тогда
			Сообщить(Док);
		КонецЕсли;
		Признак = спВыбТипДок.ПолучитьЗначение(спВыбТипДок.ТекущаяСтрока());

		Если Признак = "Проведенные" Тогда
		    Если Док.Проведен() = 0 Тогда
			    Продолжить;
		    КонецЕсли;
		ИначеЕсли Признак = "Непроведенные" Тогда
		    Если (Док.Проведен() = 1) или (Док.Вид() = "Операция") Тогда
			    Продолжить;
		    КонецЕсли;
		ИначеЕсли Признак = "НепроведенныеНеПомеченные" Тогда
		    Если (Док.Проведен() = 1) или (Док.Вид() = "Операция") или (Док.ПометкаУдаления() = 1) Тогда
			    Продолжить;
		    КонецЕсли;
		ИначеЕсли Признак = "Помеченные" Тогда
		    Если Док.ПометкаУдаления() = 0 Тогда
		        Продолжить;
		    КонецЕсли;
		ИначеЕсли Признак = "НеПомеченные" Тогда
		    Если Док.ПометкаУдаления() = 1 Тогда
		        Продолжить;
		    КонецЕсли;
		КонецЕсли;

		Состояние("Обработка "+Док.ДатаДок);

		НПП=НПП+1;
		Если Обработка = "Выкл" Тогда
		    Если Док.ПометкаУдаления() = 1 Тогда
		    ИначеЕсли Док.СуществуетОперация() = 0 Тогда
		    ИначеЕсли Док.Операция.ВключитьПроводки() = 0 Тогда
		    Иначе
		    	глКомментарий("Выключение проводок "+Док,2);
		    	Док.Операция.ВключитьПроводки(0);
				глЗаписьЖурналаРегистрации(Комментарий, 2, 10, Док.ТекущийДокумент(), 2);
		    КонецЕсли;

		ИначеЕсли Обработка = "Вкл" Тогда
		    Если Док.ПометкаУдаления() = 1 Тогда
		    ИначеЕсли Док.СуществуетОперация() = 0 Тогда
		    ИначеЕсли Док.Операция.ВключитьПроводки() = 1 Тогда
		    Иначе
		    	глКомментарий("Включение проводок "+Док,2);
		    	Док.Операция.ВключитьПроводки(1);
				глЗаписьЖурналаРегистрации(Комментарий, 2, 11, Док.ТекущийДокумент(), 2);
		    КонецЕсли;

		ИначеЕсли Обработка = "Пометить" Тогда
			Если Док.ПометкаУдаления() = 0 Тогда
				глКомментарий("Пометка на удаление "+Док,2);
				Док.Удалить(0);
				глЗаписьЖурналаРегистрации(Комментарий, 2, 3, Док.ТекущийДокумент(), 2);
			КонецЕсли;
			
		ИначеЕсли Обработка = "ОтменитьПометку" Тогда
		    Если Док.ПометкаУдаления() = 1 Тогда
		    	глКомментарий("Отмена пометки на удаление "+Док,2);
		    	Док.СнятьПометкуУдаления();
				глЗаписьЖурналаРегистрации(Комментарий, 2, 5, Док.ТекущийДокумент(), 2);
		    КонецЕсли;

		ИначеЕсли Обработка = "ОтменаПроведения" Тогда
			Если Док.Проведен() = 1 Тогда
				глКомментарий("Отмена проведения "+Док,2);
				Док.СделатьНеПроведенным();
				глЗаписьЖурналаРегистрации(Комментарий, 2, 7, Док.ТекущийДокумент(), 2);
			КонецЕсли;

		ИначеЕсли Обработка = "Провести" Тогда
			Если Док.ПометкаУдаления() = 1 Тогда
			ИначеЕсли спНеПроводимыеДокументы.НайтиЗначение(Док.Вид()) = 0 Тогда
				// такой комментарий есть в каждом документе
				//глКомментарий("Проведение "+Док,2);
				Если (МонопольныйРежим() = 1) И (фАктуальностьБИ = 1) Тогда
					БИ.Рассчитать(,Док.ТекущийДокумент());
				КонецЕсли;
				Если Док.Провести() = 0 Тогда
					Возврат;
				КонецЕсли;
				глЗаписьЖурналаРегистрации(Комментарий, 2, 6, Док.ТекущийДокумент(), 2);
			КонецЕсли;

		ИначеЕсли Обработка = "Печать" Тогда
			Таб.ВывестиСекцию("Строка");
		КонецЕсли;
	КонецЦикла;

	Если Обработка = "Печать" Тогда
		//Таб.ВывестиСекцию("КонецОтчета");
		Таб.Опции(0,0,Таб.ВысотаСекции("Шапка"),0,"ОпцииПечатиРеестра","ОкноРеестра");
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Реестр документов","");
	Иначе
		Если фТранзакция = 1 Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;

		Предупреждение("Обработка закончена!");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	ВыбФирма = глВосстановитьЗначение(,"БазФирма");
	
	спНеПроводимыеДокументы = СоздатьОбъект("СписокЗначений");
	ВсеДокументы.УдалитьВсе();

	Для Инд=1 По Метаданные.Документ() Цикл
		Значение = Метаданные.Документ(Инд).Идентификатор;
		Представление = Метаданные.Документ(Инд).Представление();
		Комментарий = Метаданные.Документ(Инд).Комментарий;
		Если ПустаяСтрока(Комментарий) = 0 Тогда
			Представление = Представление + " (" + Комментарий +")";
		КонецЕсли;
		ВсеДокументы.ДобавитьЗначение(Значение, Представление);

		Если Метаданные.Документ(Инд).РазрешитьПроведение = 0 Тогда
			спНеПроводимыеДокументы.ДобавитьЗначение(Значение, Представление);
		КонецЕсли;
	КонецЦикла;

	Комментарий = "Обработка документов.";
    спВыбОбработка.УдалитьВсе();
    спВыбОбработка.ДобавитьЗначение("Выкл","Выключить проводки");
    спВыбОбработка.ДобавитьЗначение("Вкл","Включить проводки");
    спВыбОбработка.ДобавитьЗначение("Пометить","Пометить на удаление");
    спВыбОбработка.ДобавитьЗначение("ОтменитьПометку","Отменить пометки на удаление");
    спВыбОбработка.ДобавитьЗначение("ОтменаПроведения","Сделать не проведенными");
    спВыбОбработка.ДобавитьЗначение("Провести","Провести");
	
	фАктуальностьБИ	= МонопольныйРежим();
	фТранзакция		= 1-МонопольныйРежим();
	
    спВыбТипДок.УдалитьВсе();
	спВыбТипДок.ДобавитьЗначение("Все","Все, удовлетворяющие заданным условиям");
	спВыбТипДок.ДобавитьЗначение("Проведенные","Проведенные");
	спВыбТипДок.ДобавитьЗначение("Непроведенные","Непроведенные");
	спВыбТипДок.ДобавитьЗначение("НепроведенныеНеПомеченные","Непроведенные и не помеч.");
	спВыбТипДок.ДобавитьЗначение("Помеченные","Помеченные на удаление");
	спВыбТипДок.ДобавитьЗначение("НеПомеченные","Не помеченные на удаление");

	Дата1 = НачалоПериодаБИ();
	Дата2 = КонецПериодаБИ();
	
	ВсеДокументы.СортироватьПоПредставлению();
	
	ВыбОбработка = глВосстановитьЗначение("ОбработкаДокументов","ВыбОбработка");
	спВыбОбработка.ТекущаяСтрока(спВыбОбработка.НайтиЗначение(ВыбОбработка));
	ВыбТипДок = глВосстановитьЗначение("ОбработкаДокументов","ВыбТипДок");
	спВыбТипДок.ТекущаяСтрока(спВыбТипДок.НайтиЗначение(ВыбТипДок));
	
	

	Если глФлагРасшифровки = 0 Тогда
		Обновить = 0;
		ДокументВладелец = 0;
	Иначе
		Обновить = глОбновить;
		
		Расшифровка = глРасшифровка;
		Дата1 = Расшифровка.Получить("Дата1");
		Дата2 = Расшифровка.Получить("Дата2");
		Спс = Расшифровка.Получить("ВыбранныеДокументы");
		ВыбранныеДокументы.УдалитьВсе();
		Спс.Выгрузить(ВыбранныеДокументы);
        Спс = Расшифровка.Получить("ВсеДокументы");
		ВсеДокументы.УдалитьВсе();
		Спс.Выгрузить(ВсеДокументы);
		ВыбФирма = Расшифровка.Получить("ВыбФирма");
		ВыбКонтрагент = Расшифровка.Получить("ВыбКонтрагент");
		ВыбСтрока = Расшифровка.Получить("ВыбСтрока");
		ВыбСтрокаКом = Расшифровка.Получить("ВыбСтрокаКом");
		Признак = Расшифровка.Получить("Признак");
		спВыбТипДок.ТекущаяСтрока(спВыбТипДок.НайтиЗначение(Признак));
		ВидОбработки = Расшифровка.Получить("ВидОбработки");
		спВыбОбработка.ТекущаяСтрока(спВыбОбработка.НайтиЗначение(ВидОбработки));
		ДокументВладелец = Расшифровка.Получить("ДокументВладелец");
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Выполнить(ВидОбработки);
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриВыбореЗакладки(Номер, Значение)
	Форма.ИспользоватьСлой(Значение);
КонецПроцедуры

// ===============================
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение("Обработка");
Форма.Закладки.ДобавитьЗначение("Настройки");
Форма.ИспользоватьСлой("Обработка");
