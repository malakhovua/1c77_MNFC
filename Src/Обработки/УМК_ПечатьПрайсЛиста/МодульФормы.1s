//Перем сзКонтейнерСутки, сзКонтейнерМесяцы, сзКонтейнерЧасы;
//Перем сзПрописьСутки, сзПрописьМесяцы, сзПрописьЧасы;
//Перем сзСутки, сзМесяцы, сзЧасы, спЧисла;
Перем ТекЕдиница;

Перем СкопированныйШаблонXLS;

//======================================================================
Функция СоздатьТаблицу()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Папка","Справочник.УМК_ПрайсЛист");
	ТЗ.НоваяКолонка("ТМЦ","Справочник.УМК_СтрокиПрайсЛиста");
	ТЗ.НоваяКолонка("Цена", "Число", 15, 2);
	
	Возврат ТЗ;
КонецФункции // СоздатьТаблицу

//======================================================================
Функция ПолучитьЦену(ТМЦ, СпособПечати, КатЦены)
	ТекЦена = 0;
	Если ПустоеЗначение(ТМЦ.ТМЦ) <> 1 Тогда  // --- УМК Сандомирский В.Ю, (10.11.14)
		ТекТМЦ = ТМЦ.ТМЦ;
		ТекЦена = глВернутьЦену(ТекТМЦ, КатЦены, ДатаПрайса,,,1);
		Если ТекЦена > 0 Тогда
			Если (фУпак = 1) И (ПустоеЗначение(ТМЦ.ВидУпаковки) = 0) Тогда
				ТекЦена = ТекЦена + глПолучитьЦенуУпаковки(ТекТМЦ, ТМЦ.ВидУпаковки, ДатаПрайса, КатЦены);
			ИначеЕсли (ТекТМЦ.НетБезУпаковки = 1) ИЛИ ((СпособПечати = 2) И (ПустоеЗначение(ТекТМЦ.ВидУпаковкиПоУмолчанию) = 0)) Тогда // добавляем цену цпаковки по умолчанию
				ТекЦена = ТекЦена + глПолучитьЦенуУпаковки(ТекТМЦ, ТекТМЦ.ВидУпаковкиПоУмолчанию, ДатаПрайса, КатЦены);
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;	
	
	Возврат ТекЦена;
КонецФункции // 


Процедура ДобавитьСтрокуВТаблицу(ТЗ, СпрПрайс, СпрСтрокаПрайса, КвоСтрок, ВыбКатегорияЦены)
	ТемпТЗ = СоздатьТаблицу();
	ТемпТЗ.НоваяКолонка("ПризнакСорт", "Число");
	ТемпТЗ.НоваяКолонка("Наименование", "Строка");
	ТЗ.НоваяСтрока();	
	ТЗ.Папка = СпрПрайс.ТекущийЭлемент();
	
	СпрСтрокаПрайса.ИспользоватьВладельца(СпрПрайс.ТекущийЭлемент());
	СпрСтрокаПрайса.ПорядокКодов();
	СпрСтрокаПрайса.ВыбратьЭлементы();
	Пока СпрСтрокаПрайса.ПолучитьЭлемент() = 1 Цикл		
		Если СпрСтрокаПрайса.ПометкаУдаления() = 0 Тогда
			ТемпТЗ.НоваяСтрока();
			ТемпТЗ.Папка 	= СпрПрайс.ТекущийЭлемент();
			ТемпТЗ.ТМЦ 	= СпрСтрокаПрайса.ТекущийЭлемент();	
			ТемпТЗ.Цена	= ПолучитьЦену(СпрСтрокаПрайса.ТекущийЭлемент(), ?(фУпак = 1, 0, СпрПрайс.ОтображениеУпаковки), ВыбКатегорияЦены);
			ТемпТЗ.ПризнакСорт = ПустоеЗначение(СпрСтрокаПрайса.ТМЦ);
			ТемпТЗ.Наименование = СпрСтрокаПрайса.НаименованиеДляПечати;
			
			Если КвоСтрок >= 0 Тогда
				Если (ПустоеЗначение(СпрСтрокаПрайса.НаименованиеДляПечати) = 1) 
					И (ПустоеЗначение(СпрСтрокаПрайса.ТМЦ) = 1) Тогда					
				Иначе					
					КвоСтрок = КвоСтрок + 1;				
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если СпрПрайс.Сортировка = 2 Тогда
		ТемпТЗ.Сортировать("ПризнакСорт,Цена-");
	ИначеЕсли СпрПрайс.Сортировка = 3 Тогда
		ТемпТЗ.Сортировать("ПризнакСорт,Цена+");
	Иначе
		ТемпТЗ.Сортировать("ПризнакСорт,Наименование");
	КонецЕсли;
	
	ТемпТЗ.ВыбратьСтроки();
	Пока ТемпТЗ.ПолучитьСтроку() = 1 Цикл
		ТЗ.НоваяСтрока();
		ТЗ.Папка = ТемпТЗ.Папка;
		ТЗ.ТМЦ = ТемпТЗ.ТМЦ;
		ТЗ.Цена = ТемпТЗ.Цена;
	КонецЦикла;
КонецПроцедуры

Процедура УстановитьКонтейнерПоЕдинице(Единица)
	Если ТекЕдиница <> Единица Тогда
		Если Единица = Перечисление.ЕдиницыВремени.Час Тогда
			Пропись(КаталогИБ() + "hours.spl");
			//Пропись(сзПрописьЧасы);
		ИначеЕсли Единица = Перечисление.ЕдиницыВремени.День Тогда
			Пропись(КаталогИБ() + "days.spl");
			//Пропись(сзПрописьСутки);
		ИначеЕсли Единица = Перечисление.ЕдиницыВремени.Месяц Тогда
			Пропись(КаталогИБ() + "months.spl");
			//Пропись(сзПрописьМесяцы);
		КонецЕсли;
		ТекЕдиница = Единица;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПолучитьСрокГодности(СрокХранения, РВУ)
	УстановитьКонтейнерПоЕдинице(РВУ.ЕдиницаИзмерения);
	СрокХранения = Формат(РВУ.СрокГодности / 100, "ЧПДС");
	Пока Найти("0123456789", Лев(СрокХранения, 1)) = 0 Цикл
		СрокХранения = Сред(СрокХранения, 2);
	КонецЦикла;
	Если Лев(СрокХранения, 1) = "0" Тогда
		СрокХранения = Сред(СрокХранения, 2);
	КонецЕсли;
КонецПроцедуры // 
				
Функция ПолучитьТекстУпаковки(ТМЦ, СрокХранения, ВидУпаковки)
	РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ.ТМЦ, ВидУпаковки);
	Если ПустоеЗначение(РВУ)= 0 Тогда
		Если (ПустоеЗначение(РВУ.СрокГодности) = 0) И (ПустоеЗначение(РВУ.ЕдиницаИзмерения) = 0) Тогда
			ПолучитьСрокГодности(СрокХранения, РВУ);
		КонецЕсли;
		Возврат " " + СокрЛП(РВУ.ДляПечати.Получить(ДатаПрайса));
	КонецЕсли;
	
	Возврат "";
КонецФункции

Функция ПолучитьНаименованиеДляПечати(ТМЦ, СрокХранения, Группа)
	Наим = СокрЛП(ТМЦ.НаименованиеДляПечати);
	СрокХранения = "";
	
	Если (фУпак = 1) И (ПустоеЗначение(ТМЦ.ВидУпаковки) = 0) Тогда
		ТекстУпаковки = ПолучитьТекстУпаковки(ТМЦ, СрокХранения, ТМЦ.ВидУпаковки); 
		Если ТекстУпаковки <> "" Тогда
			Возврат Наим + ТекстУпаковки; 
		КонецЕсли;
	ИначеЕсли ПустоеЗначение(ТМЦ.ТМЦ) = 0 Тогда
		Если (ПустоеЗначение(ТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию) = 0) И 
			((ТМЦ.ТМЦ.НетБезУпаковки = 1) ИЛИ ((Группа.ОтображениеУпаковки = 2) И (фУпак = 0))) Тогда
			ТекстУпаковки = ПолучитьТекстУпаковки(ТМЦ, СрокХранения, ТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию); 
			Если ТекстУпаковки <> "" Тогда
				Возврат Наим + ТекстУпаковки; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если СокрЛП(ТМЦ.НаименованиеДляПечати) = "" Тогда
		СрокХранения = "";
	Иначе
		Если СрокХранения = "" Тогда
			ПолучитьСрокГодности(СрокХранения, ТМЦ.ТМЦ);
		КонецЕсли;
		
		Если СрокХранения = "" Тогда
			СрокХранения = ТМЦ.СрокХранения;
		КонецЕсли;		
	КонецЕсли;
	
	Возврат Наим;
КонецФункции

//======================================================================
Функция ПолучитьХвост(НомерЛиста, Наименование, Адрес, Телефоны, ПродолжитьНумерацию)
	Хвост = "УМК";
	СпрЛисты = СоздатьОбъект("Справочник.НаименованияЛистовПриёмки");
	СпрЛисты.ВыбратьЭлементыПоРеквизиту("НомерЛиста", НомерЛиста, 0, 0);
	Пока СпрЛисты.ПолучитьЭлемент() = 1 Цикл
		Если (СпрЛисты.ПометкаУдаления() = 0) И (СпрЛисты.ДляПрайса = ?(фУпак = 1, 3, 1)) Тогда
			Наименование = СокрЛП(СпрЛисты.НаименованиеОрг);
			Адрес = СокрЛП(СпрЛисты.Адрес);
			Телефоны = СокрЛП(СпрЛисты.Телефоны);
			ПродолжитьНумерацию = СпрЛисты.ПродолжитьНумерацию;
			Возврат СокрЛП(СпрЛисты.Наименование);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Хвост;
КонецФункции // ПолучитьХвост()

//======================================================================
Функция ПолучитьИмяПоТипуЦены(ВыбКатегорияЦены)
	Имя = Строка(ВыбКатегорияЦены);
	Имя = СтрЗаменить(Имя, "/", "");
	Имя = СтрЗаменить(Имя, "\", "");
	Имя = СтрЗаменить(Имя, "?", "");
	Имя = СтрЗаменить(Имя, "*", "");
	
	Возврат Имя;
КонецФункции // ПолучитьИмяПоТипуЦены(ВыбКатегорияЦены) 

//====================================================================== //--- УМК Сандомирский В.Ю. (22.10.14)
Процедура Сформировать(ТекКатегорияЦены = "",ЭкспортВExcel = "")
Перем Наименование, Адрес, Телефоны;	
Перем ВыбЗначение;

	Наименование = ""; Адрес = ""; Телефоны = "";
	Варианты = СоздатьОбъект("СписокЗначений");
	Варианты.ДобавитьЗначение(1,"&Выделять Ф2");
	Варианты.ДобавитьЗначение(2,"Выделять новые");
	Варианты.ДобавитьЗначение(3,"Не выделять ничего");
	//Варианты.ДобавитьЗначение(3,"Выделять повышение\снижение");
	
	СписК = СоздатьОбъект("СписокЗначений");
	Если списКЦ.РазмерСписка() > 0 Тогда
		СписКЦ.Выгрузить(СписК);
	Иначе
		списК.ДобавитьЗначение(КатегорияЦены);
	КонецЕсли;
	
	Если Варианты.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;
	СписЛистов = СоздатьОбъект("СписокЗначений");
		
	Для Инд = 1 По СписК.РазмерСписка() Цикл
		Если ТекКатегорияЦены = "" Тогда
			ВыбКатегорияЦены = СписК.ПолучитьЗначение(Инд);
		Иначе
			ВыбКатегорияЦены = ТекКатегорияЦены;
		КонецЕсли;
		
		Если ЭкспортВExcel = 1 Тогда	
			Попытка 
		        xl=СоздатьОбъект("Excel.Application");
		    Исключение       
		        Предупреждение("MS Excel не загружен !");
				Возврат;
		    КонецПопытки;
			
			xl.Workbooks.Open(СокрЛП(Константа.УМК_ИмяФайлаШаблонаПрайса),,1);
			Книга = xl.ActiveWorkbook;
			
			Если СписК.РазмерСписка() = 1 Тогда
				Книга.SaveAs(СкопированныйШаблонXLS, 51);
			Иначе
				СкопированныйШаблонXLS = СокрЛП(СокрЛП(Путь) + "\УМКПрайс_"+ глДатаБезТочек(ДатаПрайса)+ "_" + ПолучитьИмяПоТипуЦены(ВыбКатегорияЦены) + ".xlsx");
				Книга.SaveAs(СкопированныйШаблонXLS, 51);
			КонецЕсли;
			
			
			НомерЛиста = 1;
			Лист = Книга.WorkSheets(НомерЛиста);				
		КонецЕсли;
		
		
		Таб = СоздатьОбъект("Таблица");  
		ПечФорма = "Таблица";
		
		СпрПрайс = СоздатьОбъект("Справочник.УМК_ПрайсЛист");
		
		// Определим количество листов прайса
		ВсегоЛистов = 0;
		СпрПрайс.ВыбратьЭлементыПоРеквизиту("ДляВакуума", ?(фУпак = 1, 2, 0), 0, 0);
		Пока СпрПрайс.ПолучитьЭлемент() = 1 Цикл
			Если СпрПрайс.ПометкаУдаления() = 0 Тогда
				Если ВсегоЛистов < СпрПрайс.Лист Тогда				
					ВсегоЛистов = СпрПрайс.Лист;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		СпрПрайс = СоздатьОбъект("Справочник.УМК_ПрайсЛист");
		СпрСтрокаПрайса = СоздатьОбъект("Справочник.УМК_СтрокиПрайсЛиста");
		
		ТекКвоСтрок_2 = 0;
		
		НаПредидущемЛисте = 0;
		
		//--- Формируем Первый лист
		Для К=1 По ВсегоЛистов Цикл			
			Если СокрЛП(Листы) <> "" Тогда
				Если Найти(СокрЛП(Листы) + ",", Строка(К) + ",") = 0 Тогда
					СписЛистов.ДобавитьЗначение(К);
					Продолжить;					
				КонецЕсли;
			КонецЕсли;
			Если ЭкспортВExcel = 1 Тогда	
				НомерЛиста = К;
				Лист = Книга.WorkSheets(НомерЛиста);
			КонецЕсли;
			КоличествоСтрокНаЛисте = 6;
			ПродолжитьНумерацию = 0;
			
			Хвост = ПолучитьХвост(К, Наименование, Адрес, Телефоны, ПродолжитьНумерацию); 
			Если ПродолжитьНумерацию = 0 Тогда
				ТекКвоСтрок_2 = 0;
			КонецЕсли;
			Таб.ВывестиСекцию("Шапка" + Хвост);
			Если ЭкспортВExcel = 1 Тогда //--- УМК Сандомирский В.Ю. (22.12.14)
				Лист.Cells(4, 11).NumberFormat 	= "@"; 					
				Лист.Cells(4, 11).Value 		= Формат(ДатаПрайса,"ДДД.ММ.ГГ");	
			КонецЕсли;
			
			ТзПерваяКолонка 	= СоздатьТаблицу(); 
			ТзВтораяКолонка 	= СоздатьТаблицу();
			
			КвоСтрок_1 = ТекКвоСтрок_2;
					
			СпрПрайс.ВыбратьЭлементыПоРеквизиту("ДляВакуума", ?(фУпак = 1, 2, 0), 0, 0);
			Пока СпрПрайс.ПолучитьЭлемент() = 1 Цикл
				Если СпрПрайс.ПометкаУдаления() = 1 Тогда
					Продолжить;
				КонецЕсли;
				
				Если СпрПрайс.Лист = К Тогда					
					Если СпрПрайс.Колонка = 1 Тогда							
						ДобавитьСтрокуВТаблицу(ТзПерваяКолонка, СпрПрайс.ТекущийЭлемент(), СпрСтрокаПрайса, КвоСтрок_1, ВыбКатегорияЦены);
					ИначеЕсли СпрПрайс.Колонка = 2 Тогда
						ДобавитьСтрокуВТаблицу(ТзВтораяКолонка, СпрПрайс.ТекущийЭлемент(), СпрСтрокаПрайса, -1, ВыбКатегорияЦены);
					КонецЕсли;								
				КонецЕсли;
			КонецЦикла;
			
			//--- смотрим кто больше из колонок
			КоличествоСтрокЛиста = Макс(ТзПерваяКолонка.КоличествоСтрок(),ТзВтораяКолонка.КоличествоСтрок());
			
			ТекКвоСтрок_1 = ТекКвоСтрок_2;
			ТекКвоСтрок_2 = КвоСтрок_1;
			
			
			Для Строк=1 По КоличествоСтрокЛиста Цикл
				
				КоличествоСтрокНаЛисте = КоличествоСтрокНаЛисте + 1;
					
				Попытка
					ТзПерваяКолонка.ПолучитьСтрокуПоНомеру(Строк);
					Если ПустоеЗначение(ТзПерваяКолонка.ТМЦ) = 1 Тогда
						//--- Группа
						
						ПечГруппа_1 = Врег(СокрЛП(ТзПерваяКолонка.Папка.НаименованиеДляПечати));
						
						Таб.ВывестиСекцию("Группа|Колонка_1");			
						
					Иначе
							
						Если (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.НаименованиеДляПечати) = 1) 
							И (ПустоеЗначение(ТзПерваяКолонка.ТМЦ.ТМЦ) = 1) Тогда
							
							НопПП_1 = "";	
								
						Иначе		
							ТекКвоСтрок_1 = ТекКвоСтрок_1 + 1;
							НопПП_1 = ТекКвоСтрок_1;	
						КонецЕсли;

						ПечСрокХранения_1	= "";
						ПечТМЦ_1 	 		= ПолучитьНаименованиеДляПечати(ТзПерваяКолонка.ТМЦ, ПечСрокХранения_1, ТзПерваяКолонка.Папка);
						ПечГатунок_1 		= ТзПерваяКолонка.ТМЦ.Гатунок;
						ПечОболочка_1		= ТзПерваяКолонка.ТМЦ.Оболочка;
						ПечЦена_1 			= Формат(ТзПерваяКолонка.Цена, "Ч012.2");
										
						Если СтрДлина(СокрЛП(ПечТМЦ_1)) > 29 Тогда						
							Если ВыбЗначение = 1 Тогда					//--- УМК Сандомирский В.Ю. (11.05.15) выделять Ф2							
								Ф1 = 0;							
								Если ТзПерваяКолонка.ТМЦ.ТМЦ.ЕстьКодС.Получить(ДатаПрайса) = 1 Тогда  								
									Ф1 = 1;								
									РасчетнаяДекларируемаяЦена = ТзПерваяКолонка.ТМЦ.ТМЦ.Цена_Прод.Получить(ДатаПрайса);
									Если ТзПерваяКолонка.ТМЦ.ТМЦ.ПечататьВДекларацию.Получить(ДатаПрайса) = 1 Тогда
										Если ТзПерваяКолонка.Цена > РасчетнаяДекларируемаяЦена Тогда
											Ф1 = 0;	
										КонецЕсли;
									КонецЕсли;								
								КонецЕсли;
									
								Если СтрДлина(СокрЛП(ПечТМЦ_1)) = 0 Тогда
									Ф1 = 1;
								КонецЕсли;
								
								Если Ф1 = 1 Тогда
									Таб.ВывестиСекцию("Товар_9|Колонка_1");
								Иначе
									Таб.ВывестиСекцию("Товар_9Ф2|Колонка_1");	
								КонецЕсли;								
							ИначеЕсли ВыбЗначение = 2 Тогда								
								Если ТзПерваяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
									Таб.ВывестиСекцию("Товар_9Новый|Колонка_1");								
								ИначеЕсли ТзПерваяКолонка.ТМЦ.фЦеныПовышены = 1 Тогда
									Таб.ВывестиСекцию("Товар_9Повышена|Колонка_1");	
								ИначеЕсли ТзПерваяКолонка.ТМЦ.фЦеныСнижены = 1  Тогда	
									Таб.ВывестиСекцию("Торвар_9Снижена|Колонка_1");	
								Иначе	
									Таб.ВывестиСекцию("Товар_9|Колонка_1");	
								КонецЕсли;
							Иначе
								Таб.ВывестиСекцию("Товар_9|Колонка_1");							
							КонецЕсли;									
							// Таб.ВывестиСекцию("Товар_9|Колонка_1");     //--- без раскрашек										
						Иначе						
							Если ВыбЗначение = 1 Тогда					//--- УМК Сандомирский В.Ю. (11.05.15) выделять Ф2							
								Ф1 = 0;							
								Если ТзПерваяКолонка.ТМЦ.ТМЦ.ЕстьКодС.Получить(ДатаПрайса) = 1 Тогда  								
									Ф1 = 1;								
									РасчетнаяДекларируемаяЦена = ТзПерваяКолонка.ТМЦ.ТМЦ.Цена_Прод.Получить(ДатаПрайса);
									Если ТзПерваяКолонка.ТМЦ.ТМЦ.ПечататьВДекларацию.Получить(ДатаПрайса) = 1 Тогда
										Если ТзПерваяКолонка.Цена > РасчетнаяДекларируемаяЦена Тогда
											Ф1 = 0;	
										КонецЕсли;
									КонецЕсли;
									
								КонецЕсли;
									
								Если СтрДлина(СокрЛП(ПечТМЦ_1)) = 0 Тогда
									Ф1 = 1;
								КонецЕсли;
								
								Если Ф1 = 1 Тогда
									Таб.ВывестиСекцию("Товар|Колонка_1");
								Иначе
									Таб.ВывестиСекцию("ТоварФ2|Колонка_1");	
								КонецЕсли;
												
							ИначеЕсли ВыбЗначение = 2 Тогда								
								Если СтрДлина(СокрЛП(ПечОболочка_1)) > 10 Тогда			
									Если ТзПерваяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
										Таб.ВывестиСекцию("Оболочка_5Новый|Колонка_1");								
									ИначеЕсли ТзПерваяКолонка.ТМЦ.фЦеныПовышены = 1 Тогда
										Таб.ВывестиСекцию("Оболочка_5Повышена|Колонка_1");	
									ИначеЕсли ТзПерваяКолонка.ТМЦ.фЦеныСнижены = 1  Тогда	
										Таб.ВывестиСекцию("Оболочка_5Снижена|Колонка_1");	
									Иначе	
										Таб.ВывестиСекцию("Оболочка_5|Колонка_1");	
									КонецЕсли;
								Иначе
									Если ТзПерваяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
										Таб.ВывестиСекцию("ТоварНовый|Колонка_1");								
									ИначеЕсли ТзПерваяКолонка.ТМЦ.фЦеныПовышены = 1 Тогда
										Таб.ВывестиСекцию("ТоварПовышена|Колонка_1");	
									ИначеЕсли ТзПерваяКолонка.ТМЦ.фЦеныСнижены = 1  Тогда	
										Таб.ВывестиСекцию("ТорварСнижена|Колонка_1");	
									Иначе	
										Таб.ВывестиСекцию("Товар|Колонка_1");	
									КонецЕсли;
								КонецЕсли;
							Иначе
								Если СтрДлина(СокрЛП(ПечОболочка_1)) > 10 Тогда
									Таб.ВывестиСекцию("Оболочка_5|Колонка_1");	
								Иначе								
									Таб.ВывестиСекцию("Товар|Колонка_1");
								КонецЕсли;
							КонецЕсли;						
						КонецЕсли;							
					КонецЕсли;				
				Исключение 			
					Таб.ВывестиСекцию("ПустаяСтрока|Колонка_1");			
				КонецПопытки;
			
				Попытка				
					ТзВтораяКолонка.ПолучитьСтрокуПоНомеру(Строк);
					Если ПустоеЗначение(ТзВтораяКолонка.ТМЦ) = 1 Тогда
						//--- Группа					
						ПечГруппа_2 = Врег(СокрЛП(ТзВтораяКолонка.Папка.НаименованиеДляПечати));					
						Таб.ПрисоединитьСекцию("Группа|Колонка_2");
					Иначе					
						Если (ПустоеЗначение(ТзВтораяКолонка.ТМЦ.НаименованиеДляПечати) = 1) 
							И (ПустоеЗначение(ТзВтораяКолонка.ТМЦ.ТМЦ) = 1) Тогда						
							НопПП_2 = "";							
						Иначе					
							ТекКвоСтрок_2 = ТекКвоСтрок_2 + 1;
							НопПП_2 = ТекКвоСтрок_2;						
						КонецЕсли;

						ПечСрокХранения_2	= "";
						ПечТМЦ_2 			= ПолучитьНаименованиеДляПечати(ТзВтораяКолонка.ТМЦ, ПечСрокХранения_2, ТзВтораяКолонка.Папка);
						ПечГатунок_2 		= ТзВтораяКолонка.ТМЦ.Гатунок;
						ПечОболочка_2		= ТзВтораяКолонка.ТМЦ.Оболочка;
						ПечЦена_2			= Формат(ТзВтораяКолонка.Цена, "Ч012.2");
						
						Если СтрДлина(СокрЛП(ПечТМЦ_2 )) > 29 Тогда						
							Если ВыбЗначение = 1 Тогда					//--- УМК Сандомирский В.Ю. (11.05.15) выделять Ф2							
								Ф1 = 0;							
								Если ТзВтораяКолонка.ТМЦ.ТМЦ.ЕстьКодС.Получить(ДатаПрайса) = 1 Тогда  								
									Ф1 = 1;								
									РасчетнаяДекларируемаяЦена = ТзВтораяКолонка.ТМЦ.ТМЦ.Цена_Прод.Получить(ДатаПрайса);
									Если ТзВтораяКолонка.ТМЦ.ТМЦ.ПечататьВДекларацию.Получить(ДатаПрайса) = 1 Тогда
										Если ТзВтораяКолонка.Цена > РасчетнаяДекларируемаяЦена Тогда
											Ф1 = 0;	
										КонецЕсли;
									КонецЕсли;	
								КонецЕсли;
									
								Если СтрДлина(СокрЛП(ПечТМЦ_2)) = 0 Тогда
									Ф1 = 1;
								КонецЕсли;
								
								Если Ф1 = 1 Тогда
									Таб.ПрисоединитьСекцию("Товар_9|Колонка_2");
								Иначе
									Таб.ПрисоединитьСекцию("Товар_9Ф2|Колонка_2");
								КонецЕсли;
							ИначеЕсли ВыбЗначение = 2 Тогда	
								Если ТзВтораяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
									Таб.ПрисоединитьСекцию("Товар_9Новый|Колонка_2");								
								ИначеЕсли ТзВтораяКолонка.ТМЦ.фЦеныПовышены = 1 Тогда
									Таб.ПрисоединитьСекцию("Товар_9Повышена|Колонка_2");	
								ИначеЕсли ТзВтораяКолонка.ТМЦ.фЦеныСнижены = 1  Тогда	
									Таб.ПрисоединитьСекцию("Товар_9Снижена|Колонка_2");	
								Иначе	
									Таб.ПрисоединитьСекцию("Товар_9|Колонка_2");	
								КонецЕсли;
							Иначе
								Таб.ПрисоединитьСекцию("Товар_9|Колонка_2");
							КонецЕсли;						
						Иначе
							Если ВыбЗначение = 1 Тогда					//--- УМК Сандомирский В.Ю. (11.05.15) выделять Ф2							
								Ф1 = 0;;							
								Если ТзВтораяКолонка.ТМЦ.ТМЦ.ЕстьКодС.Получить(ДатаПрайса) = 1 Тогда  								
									Ф1 = 1;
									
									РасчетнаяДекларируемаяЦена = ТзВтораяКолонка.ТМЦ.ТМЦ.Цена_Прод.Получить(ДатаПрайса);
									
									Если ТзВтораяКолонка.ТМЦ.ТМЦ.ПечататьВДекларацию.Получить(ДатаПрайса) = 1 Тогда
										Если ТзВтораяКолонка.Цена > РасчетнаяДекларируемаяЦена Тогда
											Ф1 = 0;	
										КонецЕсли;
									КонецЕсли;	
									
								КонецЕсли;
									
								Если СтрДлина(СокрЛП(ПечТМЦ_2)) = 0 Тогда
									Ф1 = 1;
								КонецЕсли;
								
								Если Ф1 = 1 Тогда
									Таб.ПрисоединитьСекцию("Товар|Колонка_2");
								Иначе
									Таб.ПрисоединитьСекцию("ТоварФ2|Колонка_2");	
								КонецЕсли;											
							ИначеЕсли ВыбЗначение = 2 Тогда							
								Если СтрДлина(СокрЛП(ПечОболочка_2)) > 10 Тогда
									Если ТзВтораяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
										Таб.ПрисоединитьСекцию("Оболочка_5Новый|Колонка_2");								
									ИначеЕсли ТзВтораяКолонка.ТМЦ.фЦеныПовышены = 1 Тогда
										Таб.ПрисоединитьСекцию("Оболочка_5Повышена|Колонка_2");	
									ИначеЕсли ТзВтораяКолонка.ТМЦ.фЦеныСнижены = 1  Тогда	
										Таб.ПрисоединитьСекцию("Оболочка_5Снижена|Колонка_2");	
									Иначе	
										Таб.ПрисоединитьСекцию("Оболочка_5|Колонка_2");	
									КонецЕсли;								
								Иначе								
									Если ТзВтораяКолонка.ТМЦ.ТМЦ.фНовый = 1 Тогда
										Таб.ПрисоединитьСекцию("ТоварНовый|Колонка_2");								
									ИначеЕсли  ТзВтораяКолонка.ТМЦ.фЦеныПовышены = 1 Тогда
										Таб.ПрисоединитьСекцию("ТоварПовышена|Колонка_2");	
									ИначеЕсли ТзВтораяКолонка.ТМЦ.фЦеныСнижены = 1  Тогда	
										Таб.ПрисоединитьСекцию("ТорварСнижена|Колонка_2");	
									Иначе	
										Таб.ПрисоединитьСекцию("Товар|Колонка_2");	
									КонецЕсли;							
								КонецЕсли;
							Иначе
								Если СтрДлина(СокрЛП(ПечОболочка_2)) > 10 Тогда
									Таб.ПрисоединитьСекцию("Оболочка_5|Колонка_2");
								Иначе
									Таб.ПрисоединитьСекцию("Товар|Колонка_2");
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;	
				Исключение						
					Таб.ПрисоединитьСекцию("ПустаяСтрока|Колонка_2");			
				КонецПопытки;	
					
			КонецЦикла;
			
			Если ЭкспортВExcel = 1 Тогда //--- УМК Сандомирский В.Ю. (22.12.14)
				Для ТекСтр = 7 По КоличествоСтрокНаЛисте Цикл		
					ТекСтрокаТаблицы = ТекСтр + НаПредидущемЛисте;
					
					ГруппаСлева = 0;
					ГруппаСправа = 0;
					
					Если  Таб.Область(ТекСтрокаТаблицы, 1,ТекСтрокаТаблицы, 1).РазмерШрифта() = 9 Тогда //--- Это группа
						ЯчейкаОбъединить = Лист.Range(Лист.Cells(ТекСтр,1),Лист.Cells(ТекСтр,6));
						ЯчейкаОбъединить.Merge();
						ГруппаСлева = 1;
						ЯчейкаОбъединить.Value = Таб.Область(ТекСтрокаТаблицы, 1,ТекСтрокаТаблицы, 1).Текст;
						ЯчейкаОбъединить.Borders.Color 	= 	Таб.Область(ТекСтрокаТаблицы, 1,ТекСтрокаТаблицы, 1).ЦветРамки();	
						ЯчейкаОбъединить.Interior.Color 	= 	Таб.Область(ТекСтрокаТаблицы, 1,ТекСтрокаТаблицы, 1).ЦветФона();	
						ЯчейкаОбъединить.Font.Color 		= 	Таб.Область(ТекСтрокаТаблицы, 1,ТекСтрокаТаблицы, 1).ЦветТекста();
						ЯчейкаОбъединить.Font.Size  		= 	Таб.Область(ТекСтрокаТаблицы, 1,ТекСтрокаТаблицы, 1).РазмерШрифта();
						ЯчейкаОбъединить.Font.Bold 			= 	Таб.Область(ТекСтрокаТаблицы, 1,ТекСтрокаТаблицы, 1).Полужирный();
						ЯчейкаОбъединить.HorizontalAlignment = -4108; //--- По центру
					КонецЕсли;
					
					Если  Таб.Область(ТекСтрокаТаблицы, 8,ТекСтрокаТаблицы, 8).РазмерШрифта() = 9 Тогда //--- Это группа
						ЯчейкаОбъединить = Лист.Range(Лист.Cells(ТекСтр,8),Лист.Cells(ТекСтр,13));
						ЯчейкаОбъединить.Merge();
						ГруппаСправа = 1;
						ЯчейкаОбъединить.Value = Таб.Область(ТекСтрокаТаблицы, 8,ТекСтрокаТаблицы, 8).Текст;
						ЯчейкаОбъединить.Borders.Color 	= 	Таб.Область(ТекСтрокаТаблицы, 8,ТекСтрокаТаблицы, 8).ЦветРамки();	
						ЯчейкаОбъединить.Interior.Color 	= 	Таб.Область(ТекСтрокаТаблицы, 8,ТекСтрокаТаблицы, 8).ЦветФона();	
						ЯчейкаОбъединить.Font.Color 		= 	Таб.Область(ТекСтрокаТаблицы, 8,ТекСтрокаТаблицы, 8).ЦветТекста();
						ЯчейкаОбъединить.Font.Size  		= 	Таб.Область(ТекСтрокаТаблицы, 8,ТекСтрокаТаблицы, 8).РазмерШрифта();
						ЯчейкаОбъединить.Font.Bold 			= 	Таб.Область(ТекСтрокаТаблицы, 8,ТекСтрокаТаблицы, 8).Полужирный();
						ЯчейкаОбъединить.HorizontalAlignment = -4108; //--- По центру
					КонецЕсли;
						
					Если ГруппаСлева = 0 Тогда
					
						Для ТекКолонка = 1 По 6 Цикл	
							Лист.Cells(ТекСтр, ТекКолонка).NumberFormat 	= "@"; 					
							Лист.Cells(ТекСтр, ТекКолонка).Value 			=	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).Текст;	
							Лист.Cells(ТекСтр, ТекКолонка).Borders.Color 	= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ЦветРамки();	
							Лист.Cells(ТекСтр, ТекКолонка).Interior.Color 	= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ЦветФона();	
							Лист.Cells(ТекСтр, ТекКолонка).Font.Color 		= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ЦветТекста();
							Лист.Cells(ТекСтр, ТекКолонка).Font.Size  		= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).РазмерШрифта();
							Лист.Cells(ТекСтр, ТекКолонка).Font.Bold 		= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).Полужирный();		
							Если (ТекКолонка = 6) или (ТекКолонка = 13) Тогда			
								Лист.Columns(ТекКолонка).ColumnWidth 							= 7;
								Лист.Cells(ТекСтрокаТаблицы, ТекКолонка).horizontalalignment 	= 4;  //-4152;			
							Иначе									
								Лист.Columns(ТекКолонка).ColumnWidth 			= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ШиринаСтолбца();					
							КонецЕсли;	
						КонецЦикла;	
					
					КонецЕсли;
					
					
					Лист.Cells(ТекСтр, 7).NumberFormat 	= "@"; 					
					Лист.Cells(ТекСтр, 7).Value 			=	Таб.Область(ТекСтрокаТаблицы, 7,ТекСтрокаТаблицы, 7).Текст;	
					Лист.Cells(ТекСтр, 7).Borders.Color 	= 	Таб.Область(ТекСтрокаТаблицы, 7,ТекСтрокаТаблицы, 7).ЦветРамки();	
					Лист.Cells(ТекСтр, 7).Interior.Color 	= 	Таб.Область(ТекСтрокаТаблицы, 7,ТекСтрокаТаблицы, 7).ЦветФона();	
					Лист.Cells(ТекСтр, 7).Font.Color 		= 	Таб.Область(ТекСтрокаТаблицы, 7,ТекСтрокаТаблицы, 7).ЦветТекста();
					Лист.Cells(ТекСтр, 7).Font.Size  		= 	Таб.Область(ТекСтрокаТаблицы, 7,ТекСтрокаТаблицы, 7).РазмерШрифта();
					Лист.Cells(ТекСтр, 7).Font.Bold 		= 	Таб.Область(ТекСтрокаТаблицы, 7,ТекСтрокаТаблицы, 7).Полужирный();		
					
					Если ГруппаСправа = 0 Тогда
					
						Для ТекКолонка = 8 По 13 Цикл	
							Лист.Cells(ТекСтр, ТекКолонка).NumberFormat 	= "@"; 					
							Лист.Cells(ТекСтр, ТекКолонка).Value 			=	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).Текст;	
							Лист.Cells(ТекСтр, ТекКолонка).Borders.Color 	= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ЦветРамки();	
							Лист.Cells(ТекСтр, ТекКолонка).Interior.Color 	= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ЦветФона();	
							Лист.Cells(ТекСтр, ТекКолонка).Font.Color 		= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ЦветТекста();
							Лист.Cells(ТекСтр, ТекКолонка).Font.Size  		= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).РазмерШрифта();
							Лист.Cells(ТекСтр, ТекКолонка).Font.Bold 		= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).Полужирный();		
							Если (ТекКолонка = 6) или (ТекКолонка = 13) Тогда			
								Лист.Columns(ТекКолонка).ColumnWidth 							= 7;
								Лист.Cells(ТекСтрокаТаблицы, ТекКолонка).horizontalalignment 	= 4;  //-4152;			
							Иначе									
								Лист.Columns(ТекКолонка).ColumnWidth 			= 	Таб.Область(ТекСтрокаТаблицы, ТекКолонка,ТекСтрокаТаблицы, ТекКолонка).ШиринаСтолбца();					
							КонецЕсли;	
						КонецЦикла;	
					
					КонецЕсли;
							
				КонецЦикла;					
			КонецЕсли;
			
			
			//Ячейка2 = ЛистНовый.Range(ЛистНовый.Cells(2,НомерСтолбца),ЛистНовый.Cells(2,НомерСтолбца + 9));
			//Ячейка2.Merge();
			
			Если К <> ВсегоЛистов Тогда	
				Таб.НоваяСтраница();
				
				НаПредидущемЛисте = НаПредидущемЛисте + КоличествоСтрокНаЛисте;
				
				Если ЭкспортВExcel = 1 Тогда
					НомерЛиста = НомерЛиста + 1;
					Лист = Книга.WorkSheets(НомерЛиста);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЭкспортВExcel = 1 Тогда  //--- УМК Сандомирский В.Ю. (22.12.14)
			////--- Задаем формат печати по ширине листа
			//ExcelPS= Лист.PageSetup;    
			//Попытка
		   	//	ScrptCtrl = СоздатьОбъект("MSScriptControl.ScriptControl"); 
		    //    ScrptCtrl.Language="vbscript"; 
		    //    ScrptCtrl.AddCode("Function SetAutoZoom()   
			//	 |  ExcelPS.Zoom = False
		    //     |  ExcelPS.FitToPagesWide = 1 
			//	 |  ExcelPS.FitToPagesTall = 100
		    //     |End Function");
			//	
		    //    ScrptCtrl.AddObject("ExcelPS", ExcelPS); 
		    //    ScrptCtrl.Run("SetAutoZoom") 
		    //Исключение
		    //    сообщить("не удалось задать Excel - по ширине листа")
		    //КонецПопытки;
			//
			////Лист.Protect("123");  //--- защита с паролем листа			
			////xl.ActiveWorkbook.Protect("Structure","Windows","123"); 	//--- защита с паролем структуры книги (защититть структуру книги не удалось)		
			////xl.ScreenUpdating = 1;
			////xl.Visible=1;
		    ////Window.Visible=1;
			
			
			Для Лист = 1 По xl.Sheets.Count() Цикл
				xl.Sheets(Лист).Select();
				xl.ActiveSheet.PageSetup.PrintTitleRows = "$2:$5";
			КонецЦикла;
			
			Если СписЛистов.РазмерСписка() > 0 Тогда
				xl.Application.DisplayAlerts = 0;				
				Для Инд = 1 По СписЛистов.РазмерСписка() Цикл					
					xl.Sheets("Лист" + Число(СписЛистов.ПолучитьЗначение(Инд))).Select();
					xl.ActiveSheet.Delete();
				КонецЦикла;
				xl.Application.DisplayAlerts = 1;
			КонецЕсли;
			
			Книга.Save();
			xl.Workbooks.Close();
			xl = "";
			
			Сообщить("Экспорт прайса в файл " + СкопированныйШаблонXLS + " завершен.");
		Иначе
		
			Таб.ПараметрыСтраницы(1,,,0,0,0,0,0,0,1,,);
			Таб.Защита(Константа.ФлагЗащитыТаблиц);
			Таб.ТолькоПросмотр(1);
			Таб.Опции(0,0,,);
			Таб.Показать(Строка(ВыбКатегорияЦены));
			
		КонецЕсли;
		
		ВыбКатегорияЦены = "";
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыбрКат()  
	Пт = СокрЛП(Путь);  
	ФС.ВыбратьКаталог(Пт,"Выберите место записи прайсов Excel", 0);  
	Путь = СокрЛП(Пт); 
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (22.12.14)
Процедура ЭкспортВExcel()
	
	ОшибкиЗаполнения = 0;
	
	Если ПустоеЗначение(Путь) = 1 Тогда
		Сообщить("Не задан путь записи Прайсов Excel","!");
		ОшибкиЗаполнения = 1;
	КонецЕсли; 	
	
	Если ПустоеЗначение(Путь) = 1 Тогда
		Сообщить("Не задан путь записи Прайсов Excel","!");
		ОшибкиЗаполнения = 1;
	КонецЕсли; 	
	
	Если ОшибкиЗаполнения = 1 Тогда
		Возврат;
	КонецЕсли;
	
	СкопированныйШаблонXLS = СокрЛП(СокрЛП(Путь) + "\УМКПрайс_"+ глДатаБезТочек(ДатаПрайса)+".xlsx");
	
	//ФС.КопироватьФайл(СокрЛП(Константа.УМК_ИмяФайлаШаблонаПрайса),СкопированныйШаблонXLS,0);
	Сформировать("",1); 
	
КонецПроцедуры // 

//====================================================================== //--- УМК Сандомирский В.Ю. (22.10.14)
Процедура ПриОткрытии()	
	ДатаПрайса = РабочаяДата();	
	
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		Листы = Форма.Параметр.Получить("Листы");
		КатегорияЦены = Форма.Параметр.Получить("Категория");
		фУпак = Форма.Параметр.Получить("Упаковки");
		списКЦ.УдалитьВсе();
		Сформировать();
		Форма.Закрыть();		
	КонецЕсли;
	
	Если ПустоеЗначение(Путь) = 1 Тогда
		Путь = ВосстановитьЗначение("Путь");	
	КонецЕсли;
	
КонецПроцедуры // гл

Процедура ПриЗакрытии()
	СохранитьЗначение("Путь", Путь);
КонецПроцедуры

Процедура ДобавитьВСписок(Элт, Наим, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Наим);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	Если Элт.Вид() = "КатегорииЦен" Тогда
		ДобавитьвСписок(Элт, Строка(Элт), списКЦ);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	Если Лев(НазваниеОбъекта, 1) = "С" Тогда
	    КФормы.ВыборГруппы(1);
	КонецЕсли;	
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

////======================================================================
//Процедура ДобавитьКонтейнер(СзОсн, СзКонт, сзПропись, З1, З2, З3);
//	СзОсн = СоздатьОбъект("СписокЗначений");
//	Для Инд = 1 По 2 Цикл
//		СзОсн.ДобавитьЗначение(З1);
//		СзОсн.ДобавитьЗначение(З2);
//		СзОсн.ДобавитьЗначение(З3);	
//	КонецЦикла;
//	
//	СзКонт = СоздатьОбъект("СписокЗначений");
//	СзКонт.ДобавитьЗначение(СзОсн, "Money");
//	СзКонт.ДобавитьЗначение(спЧисла, "Numbers");
//	
//	сзПропись = СоздатьОбъект("СписокЗначений"); 
//	сзПропись.ДобавитьЗначение(СзКонт, "Speller");			
//КонецПроцедуры // гл
//
//спЧисла = СоздатьОбъект("СписокЗначений");
//спЧисла.ИзСтрокиСРазделителями("""Один"",""Два"",""Три"",""Чотири"",""П'ять"",""Шість"",""Сім"",""Вісім"",""Дев'ять"",""Одна"",""Дві"",
//|""Десять"",""Одинадцять"",""Дванадцять"",""Тринадцять"",""Чотирнадцять"",""П'ятнадцять"",""Шістнадцять"",""Сімнадцять"",""Вісімнадцять"",""Дев'ятнадцять"",
//|""Двадцять"",""Тридцять"",""Сорок"",""П'ятдесят"",""Шістдесят"",""Сімдесят"",""Вісімдесят"",""Дев'яносто"",
//|""Сто"",""Двісті"",""Триста"",""Чотириста"",""П'ятсот"",""Шістсот"",""Сімсот"",""Вісімсот"",""Дев'ятсот"",
//|""Тисяча"",""Тисячі"",""Тисяч"",
//|""Мільйон"",""Мільйона"",""Мільйонів"",
//|""Мільярд"",""Мільярда"",""Мільярдів"",
//|""Трильйон"",""Трильйона"",""Трильйонів"",
//|""Нуль""");
//
//ДобавитьКонтейнер(сзСутки, сзКонтейнерСутки, сзПрописьСутки, "доба", "доби", "діб");
//ДобавитьКонтейнер(сзЧасы, сзКонтейнерЧасы, сзПрописьЧасы, "година", "години", "годин");
//ДобавитьКонтейнер(сзМесяцы, сзКонтейнерМесяцы, сзПрописьМесяцы, "місяць", "місяці", "місяців");
