Перем СписокПодбора,СправочникПодбора;
Перем ТЗГрупп;
Перем СписГатунки, СписОболочки, СписСроки;
Перем Модифицировано;
Перем СтарВак;

Функция ПолучитьСправочник()
	Если ргВак = 4 Тогда
		СпрСтрокиПр = СоздатьОбъект("Справочник.УМК_Приемка");
	Иначе
		СпрСтрокиПр = СоздатьОбъект("Справочник." + ?(ргВак = 3, "УМК_СтрокиОтгрузочного", "УМК_СтрокиПрайсЛиста"));
	КонецЕсли;

	Возврат СпрСтрокиПр;	
КонецФункции

Функция ПолучитьГлСправочник()
	Если ргВак = 4 Тогда
		СпрСтрокиПр = СоздатьОбъект("Справочник.УМК_Приемка");
	Иначе
		СпрСтрокиПр = СоздатьОбъект("Справочник." + ?(ргВак = 3, "УМК_Отгрузочный", "УМК_ПрайсЛист"));
	КонецЕсли;

	Возврат СпрСтрокиПр;	
КонецФункции

//======================================================================
Процедура УстГруппы(Элт)
	ТЗ.ПредлагаемаяГруппа = Элт;
	ТЗ.ПредлагаемаяГруппаСтр = Элт.НаименованиеДляПечати;
	ТЗ.УстанавливаемаяГруппа = Элт; 
	ТЗ.УстанавливаемаяГруппаСтр = ТЗ.ПредлагаемаяГруппаСтр; 
	ТЗ.Кол = 2;	
КонецПроцедуры // УстГруппы

//======================================================================
Процедура Заполнить()
	Если ТЗ.КоличествоСтрок() > 0 Тогда
		Отв = Вопрос("Удалить строки?", "Да+Нет+Отмена");
		Если Отв = "Да" Тогда
			ТЗ.УдалитьСтроки();
		ИначеЕсли Отв = "Отмена" Тогда
			Возврат;			
		КонецЕсли;
	КонецЕсли;
	
	СпрСтрокиПр = ПолучитьСправочник();
	
	СписИсключаемых = СоздатьОбъект("СписокЗначений");
	СпрСтрокиПр.ВыбратьЭлементы(0);
	Пока СпрСтрокиПр.ПолучитьЭлемент() = 1 Цикл
		Если СпрСтрокиПр.ПометкаУдаления() = 0 Тогда
			Если ргВак > 2 Тогда
				СписИсключаемых.ДобавитьЗначение(СпрСтрокиПр.ТМЦ);
			Иначе
				Если СпрСтрокиПр.Владелец.ДляВакуума = ргВак - 1 Тогда
					СписИсключаемых.ДобавитьЗначение(СпрСтрокиПр.ТМЦ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	ТекстЗ = 
	"//{{ЗАПРОС(Сформировать)
	|Обрабатывать НеПомеченныеНаУдаление;
	|ТМЦ = Справочник.ТМЦ.ТекущийЭлемент;
	|Функция Счётчик = Счётчик();
	|Группировка ТМЦ упорядочить по ТМЦ.Наименование без групп;
	|Условие(ТМЦ в СписокВыбТМЦ);
	|Условие(НЕ (ТМЦ в СписИсключаемых));" + 
	?(ргВак = 4, "
	|Условие(ПустоеЗначение(ТМЦ.ОдинаковаяПрРазныеМарк) = 1);", "") + "
	|"//}}ЗАПРОС
	;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Если ргВак = 2 Тогда
			СписВУ = СоздатьОбъект("СписокЗначений");
			// тут нужно проанализировать допустимые виды упаковки для ТМЦ и для группы. Ексли все виды упаковки ТМЦ
			// присутствуют в допустимых в группах, то её и берём.
			// для этого выбираем все РВУ. Потом ищем ВУ из РВУ в списке допустимых для каждой группы ваккума.
			// если она есть в допустимых - добавляем эту групп в список предлагаемых групп
			// если нет, то ищем в списке предлагаемых эту группу и удаляем её
			СписДопустимыхГрупп = СоздатьОбъект("СписокЗначений");
			
			ЕстьПозиции = 0;
			СпрРВУ = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
			СпрРВУ.ИспользоватьВладельца(Запрос.ТМЦ);
			СпрРВУ.ВыбратьЭлементы();
			Пока СпрРВУ.ПолучитьЭлемент() = 1 Цикл
				Если СпрРВУ.ПометкаУдаления() = 0 Тогда
					СписВУ.ДобавитьЗначение(СпрРВУ.ВидУпаковки);
					// ищем везде этот вид упаковки
					ТЗГрупп.ВыбратьСтроки();
					Пока ТЗГрупп.ПолучитьСтроку() = 1 Цикл
						Если ТЗГрупп.СписВУ.НайтиЗначение(СпрРВУ.ВидУпаковки) <> 0 Тогда
							Если СписДопустимыхГрупп.НайтиЗначение(ТЗГрупп.Элт) = 0 Тогда
								СписДопустимыхГрупп.ДобавитьЗначение(ТЗГрупп.Элт);								
							КонецЕсли;
						Иначе
							Поз = СписДопустимыхГрупп.НайтиЗначение(ТЗГрупп.Элт); 
							Если Поз <> 0 Тогда
								СписДопустимыхГрупп.УдалитьЗначение(Поз);
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					ЕстьПозиции = 1;
				КонецЕсли;
			КонецЦикла;
			
			Если ЕстьПозиции = 0 Тогда // пропускаем товары, где нет упаковок
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ТЗ.НоваяСтрока();
		ТЗ.Кол = 1;
		ТЗ.ТМЦ = Запрос.ТМЦ;
		Стр = 0;
		
		Если (ргВак <> 2) И (ргВак <> 4) Тогда // если не вак., то предлагаемая группа ищется в прайсе по родителю ТМЦ
			Если ТЗГрупп.НайтиЗначение(Запрос.ТМЦ.Родитель, Стр, "ТМЦ") = 1 Тогда
				УстГруппы(ТЗГрупп.ПолучитьЗначение(Стр, "Элт"));
			КонецЕсли;		
		ИначеЕсли ргВак <> 4 Тогда			
			// сформировали список предлагаемых видов
			Если СписДопустимыхГрупп.РазмерСписка() = 1 Тогда
				УстГруппы(СписДопустимыхГрупп.ПолучитьЗначение(1));
			ИначеЕсли СписДопустимыхГрупп.РазмерСписка() > 1 Тогда
				Для Инд = 1 По СписДопустимыхГрупп.РазмерСписка() Цикл
					Зн = СписДопустимыхГрупп.ПолучитьЗначение(Инд); 
					Если Зн.ГруппаТМЦ = ТЗ.ТМЦ.Родитель Тогда
						УстГруппы(Зн);
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если ПустоеЗначение(ТЗ.ПредлагаемаяГруппа) = 1 Тогда
					УстГруппы(СписДопустимыхГрупп.ПолучитьЗначение(1));
				КонецЕсли;
			КонецЕсли;
			ТЗ.ВУ = СоздатьОбъект("СписокЗначений");
			СписВУ.Выгрузить(ТЗ.ВУ);
		КонецЕсли;
		
		ТЗ.фЦеныПовышены = 1;
		ТЗ.НаименованиеДляПечати = Запрос.ТМЦ.ПолнНаименование;
		ТЗ.фЦеныСнижены = 1;		
		ТЗ.Новый = ТЗ.ТМЦ.фНовый + 1;
		ТЗ.Лист = 1;
		ТЗ.Колонка = 1;
	КонецЦикла;
КонецПроцедуры // Заполнить()

//======================================================================
Функция УстДоступность()
	Если ргВак >= 3 Тогда
		ВидимостьОтгр = 1;
		ВидимостьПрайса = 0;
	Иначе
		ВидимостьОтгр = 0;
		ВидимостьПрайса = 1;		
	КонецЕсли;

	ТЗ.ВидимостьКолонки("ПредлагаемаяГруппаСтр", ?(ргВак <> 4, 1, 0));
	ТЗ.ВидимостьКолонки("УстанавливаемаяГруппаСтр", ?(ргВак <> 4, 1, 0));
	ТЗ.ВидимостьКолонки("Лист", ?(ргВак = 4, 1, 0));
	ТЗ.ВидимостьКолонки("Колонка", ?(ргВак = 4, 1, 0));
	
	ТЗ.ВидимостьКолонки("Гатунок", ВидимостьПрайса);
	ТЗ.ВидимостьКолонки("Новый", ВидимостьОтгр);
	ТЗ.ВидимостьКолонки("СрокХранения", ВидимостьПрайса);
	ТЗ.ВидимостьКолонки("фЦеныПовышены", ВидимостьПрайса);
	ТЗ.ВидимостьКолонки("фЦеныСнижены", ВидимостьПрайса);
КонецФункции // УстДоступность

//======================================================================
Процедура ИзмДляВак()
	Если Модифицировано = 1 Тогда
		Если Вопрос("Таблица будет очищена. Продложить?", "Да+Нет") = "Нет" Тогда
			фДляВак = СтарВак;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТЗ.УдалитьСтроки();
	ТЗГрупп.УдалитьСтроки();
	СпрПрайс = ПолучитьГлСправочник();
	
	Если (ргВак < 3)  Тогда
		СпрПрайс.ВыбратьЭлементыПоРеквизиту("ДляВакуума", ргВак - 1, 0, 0);		
	Иначе
		СпрПрайс.ВыбратьЭлементы(0);
	КонецЕсли;
	
	Пока СпрПрайс.ПолучитьЭлемент() = 1 Цикл
		Если СпрПрайс.ПометкаУдаления() = 0 Тогда
			ТЗГрупп.НоваяСтрока();
			Если ргВак <> 4 Тогда
				ТЗГрупп.ТМЦ = СпрПрайс.ГруппаТМЦ;
			Иначе
				ТЗГрупп.ТМЦ = СпрПрайс.ТМЦ;			
			КонецЕсли;
			
			ТЗГрупп.Элт = СпрПрайс.ТекущийЭлемент();
			Если ргВак = 2 Тогда
				ТЗГрупп.СписВУ = СоздатьОбъект("СписокЗначений");
				СписДВ = глПолучитьСписокДопустимыхВидовУпаковкиДляВакуума(СпрПрайс.ТекущийЭлемент());
				СписДВ.Выгрузить(ТЗГрупп.СписВУ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;		
	
	СтарВак = ргВак;
	Модифицировано = 0;
КонецПроцедуры // ИзмДляВак

Процедура ПриОткрытии()	
	СВыбТМЦ = глПрочитатьФильтр("" + КаталогИБ() + "filter_set1.txt");	
	Попытка
		СВыбТМЦ.Выгрузить(СписокВыбТМЦ);
	Исключение
	КонецПопытки;
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		ргВак = Форма.Параметр;
	Иначе
		ргВак = 1;
	КонецЕсли;
	
	ТЗ.НоваяКолонка("Кол", "Число", 1, 0, "Обр.", 3);
	ТЗ.НоваяКолонка("ТМЦ", "Справочник.ТМЦ", 15);
	ТЗ.НоваяКолонка("ВУ", "СписокЗначений");
	ТЗ.НоваяКолонка("ПредлагаемаяГруппа", "Справочник", ,,"Предл. группа", 15);
	ТЗ.НоваяКолонка("ПредлагаемаяГруппаСтр", "Строка", ,,"Предл. группа", 15);
	ТЗ.НоваяКолонка("УстанавливаемаяГруппа", "Справочник",,, "Уст. группа", 15);
	ТЗ.НоваяКолонка("УстанавливаемаяГруппаСтр", "Строка",,, "Уст. группа", 15);
	ТЗ.НоваяКолонка("Гатунок", "Перечисление.УМК_Гатунки", ,,"Гатунок", 7);
	ТЗ.НоваяКолонка("Оболочка", "Справочник", ,,"Оболочка", 7);
	ТЗ.НоваяКолонка("СрокХранения", "Справочник.УМК_СрокиХранения", ,,"Срок", 7);
	ТЗ.НоваяКолонка("НаименованиеДляПечати", "Строка", 200, ,"Наим. для печати", 50);
	ТЗ.НоваяКолонка("фЦеныПовышены", "Число", 1, , "ЦП", 3);
	ТЗ.НоваяКолонка("фЦеныСнижены", "Число", 1, , "ЦС", 3);
	ТЗ.НоваяКолонка("Новый", "Число", 1, , "Нов.", 3);
	ТЗ.НоваяКолонка("Лист");
	ТЗ.НоваяКолонка("Колонка");
	ТЗ.ВидимостьКолонки("ПредлагаемаяГруппа", 0);
	ТЗ.ВидимостьКолонки("УстанавливаемаяГруппа", 0);
	ТЗ.ВидимостьКолонки("ВУ", 0);
	ТЗ.ВыводитьПиктограммы("Кол", 1);
	ТЗ.ВыводитьПиктограммы("фЦеныПовышены", 1);
	ТЗ.ВыводитьПиктограммы("фЦеныСнижены", 1);
	ТЗ.ВыводитьПиктограммы("Новый", 1);

	ИзмДляВак();
КонецПроцедуры // ПриОткрытии()

Процедура РаботаСоСписком(Режим,Список,ТипСправочника)	
	Перем ТекПоз;
	Перем ТекЭлемент;
	Перем Фрм;
                                     
	ТекПоз = Список.ТекущаяСтрока();
	Если ТекПоз>0 Тогда
		ТекЭлемент=Список.ПолучитьЗначение(ТекПоз);
	КонецЕсли;

	Если Режим="Добавить" Тогда		// добавляем в список один элемент
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,0,ТекЭлемент);
		Фрм.ВыборГруппы(1);
	ИначеЕсли Режим="ДобавитьНесколько" Тогда  // добавляем в список несколько элементов
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,1,ТекЭлемент);
		Фрм.ВыборГруппы(1);
 	ИначеЕсли Режим="УдалитьВсе" Тогда	// удаляем все элементы из списка
		Список.УдалитьВсе();
	ИначеЕсли Режим="Удалить" Тогда	// удаляем из списка один элемент
		Если ТекПоз>0 Тогда
			Список.УдалитьЗначение(ТекПоз);
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры		// работа со списком

//====================================================================== //--- УМК Сандомирский В.Ю. (31.10.14)
Процедура ОбработкаПодбора(Значение) 	
	Перем ПредставлениеЗначения;
	
	Если (ВРег(Значение.Вид())=СправочникПодбора) И (СписокПодбора.НайтиЗначение(Значение)=0) Тогда
		ПредставлениеЗначения = Строка(Значение);
		Если СписокПодбора.НайтиЗначение(Значение) <> 1 Тогда
			СписокПодбора.ДобавитьЗначение(Значение,ПредставлениеЗначения);
		КонецЕсли;
		СписокПодбора.ТекущаяСтрока(СписокПодбора.РазмерСписка());
	КонецЕсли;	
КонецПроцедуры

Процедура УдалитьСтрокуТЗ()
	ТекСтр = ТЗ.ТекущаяСтрока();
	Если ТекСтр = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	Если Вопрос("Удалить строку?", "Да+Нет") = "Да" Тогда
	    ТЗ.УдалитьСтроку(ТекСтр);
		Модифицировано = 1;
	КонецЕсли;	
КонецПроцедуры

Процедура Сортировать()
	ТекКол = ТЗ.ТекущаяКолонка();
	Если ПустоеЗначение(ТекКол) = 0 Тогда
	    ТЗ.Сортировать(ТекКол);
	КонецЕсли;
КонецПроцедуры

Процедура УстПометка(Зн)
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если Зн > 0 Тогда
		    ТЗ.Кол = Зн;
		Иначе
			ТЗ.Кол = 3-ТЗ.Кол;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

//======================================================================
Процедура ИзмТЗ()
	ТекКол = ТЗ.ТекущаяКолонка(); ТекСтр = ТЗ.ТекущаяСтрока();
	
	Если (ТекКол = "УстанавливаемаяГруппаСтр") И (ТекСтр <> 0) Тогда
		СписВыбора = СоздатьОбъект("СписокЗначений");
		ТЗГрупп.Выгрузить(СписВыбора, ,, "Элт");
		Для Инд = 1 По СписВыбора.РазмерСписка() Цикл
			Зн = СписВыбора.ПолучитьЗначение(Инд); 
			СписВыбора.УстановитьЗначение(Инд, Зн, Зн.НаименованиеДляПечати);
		КонецЦикла;
		Зн = ""; Ном = 0;
		Если СписВыбора.ВыбратьЗначение(Зн, , Ном,,2) = 1 Тогда
			ТЗ.УстановитьЗначение(ТекСтр, "УстанавливаемаяГруппа", Зн);
			ТекстЗначения = "";
			СписВыбора.ПолучитьЗначение(Ном, ТекстЗначения);
			ТЗ.УстановитьЗначение(ТекСтр, "УстанавливаемаяГруппаСтр", ТекстЗначения);
			ТЗ.УстановитьЗначение(ТекСтр, "Кол", 2);
		КонецЕсли;
		Модифицировано = 1;
	ИначеЕсли ((ТекКол = "Кол") ИЛИ (ТекКол = "фЦеныПовышены") ИЛИ (ТекКол = "фЦеныСнижены")) И (ТекСтр <> 0) Тогда
		Зн = ТЗ.ПолучитьЗначение(ТекСтр, ТекКол);
		ТЗ.УстановитьЗначение(ТекСтр, ТекКол, 3 - Зн);
		Модифицировано = 1;
	ИначеЕсли (Найти("Оболочка,СрокХранения,", ТекКол) <> 0) И (ТекСтр <> 0) Тогда
		Зн = ТЗ.ПолучитьЗначение(ТекСтр, ТекКол);
		Спр = СоздатьОбъект("Справочник." + ?(ТекКол = "Оболочка", "УМК_Оболочки"+?(ргВак = 3,"Отгрузочного",""), "УМК_СрокиХранения"));
		Если Спр.Выбрать("Выберите " + ?(ТекКол = "Оболочка", "оболочку", "срок хранения"), "ФормаСписка") = 1 Тогда
			ТЗ.УстановитьЗначение(ТекСтр, ТекКол, Спр.ТекущийЭлемент());
		КонецЕсли;
		Модифицировано = 1;
	ИначеЕсли (ТекКол = "Гатунок") И (ТекСтр <> 0) Тогда
		СписВ = СоздатьОбъект("СписокЗначений");
		Для Инд = 1 По Перечисление.УМК_Гатунки.КоличествоЗначений() Цикл
			СписВ.ДобавитьЗначение(Перечисление.УМК_Гатунки.ЗначениеПоНомеру(Инд));
		КонецЦикла;
		Зн = ТЗ.ПолучитьЗначение(ТекСтр, ТекКол);
		Если СписВ.ВыбратьЗначение(Зн,,,,1) = 1 Тогда
			ТЗ.УстановитьЗначение(ТекСтр, ТекКол, Зн);
		КонецЕсли;
		Модифицировано = 1;
	ИначеЕсли (ТекКол = "НаименованиеДляПечати") И (ТекСтр <> 0) Тогда
		Зн = ТЗ.ПолучитьЗначение(ТекСтр, ТекКол);
		Если ВвестиСтроку(Зн, "Введите наименование для печати", 200) = 1 Тогда
			ТЗ.УстановитьЗначение(ТекСтр, ТекКол, Зн);
		КонецЕсли;
		Модифицировано = 1;		
	ИначеЕсли ((ТекКол = "Лист") ИЛИ (ТекКол = "Колонка")) И (ТекСтр <> 0) Тогда
		Зн = ТЗ.ПолучитьЗначение(ТекСтр, ТекКол);
		Если ВвестиСтроку(Зн, "Введите " + ТекКол, 3, 0) = 1 Тогда
			ТЗ.УстановитьЗначение(ТекСтр, ТекКол, Зн);
		КонецЕсли;
		Модифицировано = 1;		
	КонецЕсли;	
КонецПроцедуры // 

Процедура ПриЗакрытии()
	Если Модифицировано = 1 Тогда
		Если Вопрос("Были внесены изменения. Действительно закрыть?", "Да+Нет") = "Нет" Тогда
			СтатусВозврата(0);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Сформировать()
	НачатьТранзакцию();
	Инд = 1;
	СписУдаляемых = СоздатьОбъект("СписокЗначений");
	СпрСорт = СоздатьОбъект("Справочник.ПорядокВыводаУпаковок");
	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если ТЗ.Кол = 2 Тогда
			Если (ПустоеЗначение(ТЗ.УстанавливаемаяГруппа) = 0) ИЛИ (ргВак = 4) Тогда
				СпрСтрокиП = ПолучитьСправочник();
				
				Если ргВак <> 4 Тогда
					СпрСтрокиП.ИспользоватьВладельца(ТЗ.УстанавливаемаяГруппа);
				КонецЕсли;
				Если СпрСтрокиП.НайтиПоРеквизиту("ТМЦ", ТЗ.ТМЦ, 0) = 0 Тогда
					СпрСтрокиП.Новый();
					Если ргВак <> 4 Тогда
						СпрСтрокиП.Владелец = ТЗ.УстанавливаемаяГруппа;
					КонецЕсли;
				ИначеЕсли СпрСтрокиП.ПометкаУдаления() = 1 Тогда
					СпрСтрокиП.СнятьПометкуУдаления();
				КонецЕсли;				
				
				Если ргВак = 3 Тогда
					СпрСтрокиП.Наименование = Строка(ТЗ.ТМЦ);
					СпрСтрокиП.НаименованиеДляПечати = ТЗ.НаименованиеДляПечати;
					СпрСтрокиП.ТМЦ = ТЗ.ТМЦ;
					СпрСтрокиП.Оболочка = ТЗ.Оболочка;
					СпрСтрокиП.Новый = ТЗ.ТМЦ.фНовый;
					СпрСтрокиП.Записать();
					СписУдаляемых.ДобавитьЗначение(ТЗ.ТМЦ);
				ИначеЕсли ргВак = 4 Тогда
					СпрСтрокиП.Наименование = Строка(ТЗ.ТМЦ);
					СпрСтрокиП.КвоПустых = 0;
					СпрСтрокиП.ТМЦ = ТЗ.ТМЦ;
					СпрСтрокиП.НаименованиеДляПечати = ТЗ.НаименованиеДляПечати;
					СпрСтрокиП.Лист = ТЗ.Лист;
					СпрСтрокиП.Колонка = ТЗ.Колонка;
					СпрСтрокиП.Записать();					
				Иначе
					СпрСтрокиП.Наименование = Строка(ТЗ.ТМЦ);
					СпрСтрокиП.ТМЦ = ТЗ.ТМЦ;
					СпрСтрокиП.Гатунок = ТЗ.Гатунок;
					СпрСтрокиП.Оболочка = ТЗ.Оболочка;
					СпрСтрокиП.СрокХранения = ТЗ.СрокХранения;
					СпрСтрокиП.НаименованиеДляПечати = ТЗ.НаименованиеДляПечати;
					СпрСтрокиП.фЦеныПовышены = ТЗ.фЦеныПовышены - 1;
					СпрСтрокиП.фЦеныСнижены = ТЗ.фЦеныСнижены - 1;
					СпрСтрокиП.Записать();
					СписУдаляемых.ДобавитьЗначение(ТЗ.ТМЦ);
					// если для вакуума, добавим виды упакоки в порядок сортировки
					Если ргВак = 2 Тогда
						Для Инд = 1 По ТЗ.ВУ.РазмерСписка() Цикл
							ВУ = ТЗ.ВУ.ПолучитьЗначение(Инд);
							СпрСорт.ИспользоватьВладельца(ТЗ.УстанавливаемаяГруппа);
							Если СпрСорт.НайтиПоРеквизиту("ВидУпаковки", ВУ, 0) = 0 Тогда
								СпрСорт.Новый();
								СпрСорт.Наименование = Строка(ВУ);
								СпрСорт.ВидУпаковки = ВУ;
								СпрСорт.Записать();
								Сообщить("Добавлен новый вид упаковки " + Строка(ВУ) + " в порядок сортировки для: " + Строка(ТЗ.УстанавливаемаяГруппа.НаименованиеДляПечати));
							ИначеЕсли СпрСорт.ПометкаУдаления() = 1 Тогда
								СпрСорт.СнятьПометкуУдаления();
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Сообщить("В строке: " + Строка(ТЗ.НомерСтроки) + " у ТМЦ: " + Строка(ТЗ.ТМЦ) + " не выбрана группа, в которую нужно поместить");
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;

	Если Вопрос("Подтвердить?", "Да+Нет") = "Да" Тогда
		ЗафиксироватьТранзакцию();
		Для Инд = 1 По СписУдаляемых.РазмерСписка() Цикл
			Стр = 0;
			Если ТЗ.НайтиЗначение(СписУдаляемых.ПолучитьЗначение(Инд), Стр, "ТМЦ") = 1 Тогда
				ТЗ.УдалитьСтроку(Стр);
			КонецЕсли;
		КонецЦикла;	
		Модифицировано = 0;		
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;	
КонецПроцедуры

ТЗГрупп = СоздатьОбъект("ТаблицаЗначений");	
ТЗГрупп.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
ТЗГрупп.НоваяКолонка("Элт", "Справочник");
ТЗГрупп.НоваяКолонка("СписВУ", "СписокЗначений");

Модифицировано =0;
СтарВак = 1;