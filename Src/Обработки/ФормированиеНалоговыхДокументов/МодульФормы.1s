Перем спФлагиНУ, спДокументыТЧ;
Перем Конт,фЗаполнилиНаОсновании,фЗаполняемНаОсновании;
Перем ЭтоВводНаОсновании;
Перем СтатусВводаНаОсновании;
Перем тбРезультат;
                                  
// ===============================
Процедура ДобавитьСтрокуКРезультату(РодДок,Контрагент,Счет,ПервоеСобытие,НалДок,Флаг)
	Попытка
		тбРезультат.НоваяСтрока();
		тбРезультат.РодительскийДокумент = РодДок;
		тбРезультат.Контрагент = Контрагент;
		тбРезультат.Счет = Счет;
		тбРезультат.ПервоеСобытие = ПервоеСобытие;
		тбРезультат.НалоговыйДокумент = НалДок.ТекущийДокумент();
		тбРезультат.Флаг = Флаг;     
	Исключение	
	КонецПопытки
КонецПроцедуры

// ===============================
Функция ИтогПоСтавке(Документ,СтавкаНДС)
	ВидДок = Документ.Вид();
	Если глЕстьРеквизитШапки("ВидНДС",ВидДок)=Да Тогда
		СтавкаНДСДок = Документ.ВидНДС;
	КонецЕсли;              
	// для розничных документов учтем скидку, казанную в шапке
	Если Документ.Вид() = "РасходнаяРозничная" Тогда
	    ПроцентСкидки = ?(Документ.Итог("СуммаСНДС") = 0,1,Документ.Скидка/Документ.Итог("СуммаСНДС"));
	КонецЕсли;
	фУчитыватьТару = 1;
	Если глЕстьРеквизитШапки("ВидТары",ВидДок)=Да Тогда
	    Если Документ.ВидТары <> Перечисление.ВидыТары.Покупная Тогда
	        фУчитыватьТару = 0;
	    КонецЕсли;
	КонецЕсли;
	Если глЕстьреквизитМнЧ("ТМЦ",ВидДок) = Да Тогда
	    реквТМЦ = "ТМЦ";
	ИначеЕсли глЕстьреквизитМнЧ("Услуга",ВидДок) = Да Тогда
		реквТМЦ = "Услуга";
	ИначеЕсли глЕстьреквизитМнЧ("НеоборотныйАктив",ВидДок) = Да Тогда
		реквТМЦ = "НеоборотныйАктив";
	КонецЕсли;
	ИтогПоСтавке = 0;
	Документ.ВыбратьСтроки();
	Пока Документ.ПолучитьСтроку() = 1 Цикл
		ТМЦ = Документ.ПолучитьАтрибут(реквТМЦ);
		Если ТМЦ.Вид() = "ТМЦ" Тогда
			Если (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) и (фУчитыватьТару = 0) Тогда
				Продолжить;
			КонецЕсли;
			Если СтавкаНДСДок <> ОсновнаяСтавкаНДС Тогда
			    СтавкаНДСТМЦ = СтавкаНДСДок;
			Иначе
				СтавкаНДСТМЦ = ТМЦ.СтавкаНДС;
			КонецЕсли;
		Иначе
			СтавкаНДСТМЦ = СтавкаНДСДок;
		КонецЕсли;
		Если СтавкаНДСТМЦ = СтавкаНДС Тогда
		    ИтогПоСтавке = ИтогПоСтавке + Документ.СуммаСНДС*(1 - ПроцентСкидки);
		КонецЕсли;
	КонецЦикла;
	Возврат Окр(ИтогПоСтавке,2);
КонецФункции

// ===============================  
// параметры:
// 	РодительскийДокумент - документ, по которому выписываем П2
//			если это Договор - то это выписка итоговых документов
//  тбНО - таблица, в которой содерится информация о суммах первого события
//  СтавкаНДС - ставка по которой нужно выписать П2
//	ЭтоИтоговая - признак выписки итоговых налоговых документов
Процедура ЗаполнитьПриложение2(РодительскийДокумент, тбНО, СтавкаНДС, ЭтоИтоговая = 0, Знач НН = 0)
	
	// Проверка на наличие такого же документа
	СтароеП2 = 0;
	ПервоеСобытиеСНДС = тбНО.СуммаСНДС;
	
	Док = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(,,РодительскийДокумент);
	Пока Док.ПолучитьДокумент()=1 Цикл
		Если Док.Вид() <> "Приложение2" Тогда
		    Продолжить;
		КонецЕсли;
		Если Док.РодительскийДокумент <> РодительскийДокумент Тогда
			Продолжить;
		КонецЕсли;
		Если (Док.Контрагент = тбНО.Контрагент) и (Док.ВидНДС = СтавкаНДС) и (Док.Договор = тбНО.Договор) Тогда
			СтароеП2 = Док.ТекущийДокумент();
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	фИсправляем = 0;
	фВыписанаВерно = 1;
	Если ПустоеЗначение(СтароеП2)=0 Тогда
		ВыписаноННСНДС = СтароеП2.Итог("ИзмСуммыСНДС");
		Если ВыписаноННСНДС <> ПервоеСобытиеСНДС Тогда
			// документ выписан не правильно
			фВыписанаВерно = 0;
			Если Исправлять = 2 Тогда
				Если СтароеП2.Проведен()=0 Тогда
					фИсправляем = 1;
				КонецЕсли;
			ИначеЕсли Исправлять = 3 Тогда
				фИсправляем = 1;				
			КонецЕсли;
		КонецЕсли;
		Флаг = 2;
	    Если фВыписанаВерно = 0 Тогда
	    	Флаг = 3;
	    КонецЕсли;
		Если фИсправляем = 1 Тогда
			Флаг = 4;
		КонецЕсли;
		ДобавитьСтрокуКРезультату(РодительскийДокумент,тбНО.Контрагент,тбНО.Договор,ПервоеСобытиеСНДС,СтароеП2,Флаг);
		Если фИсправляем = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ВидРодителя = РодительскийДокумент.Вид();
	П2 = СоздатьОбъект("Документ.Приложение2");
	Если ПустоеЗначение(СтароеП2)=1 Тогда
		П2.Новый();
		П2.ДатаДок = РодительскийДокумент.ДатаДок;
		
		П2.Фирма = ВыбФирма;
		глУстановитьНомер(П2);
		П2.Контрагент = тбНО.Контрагент;
		П2.Договор = тбНО.Договор;
		П2.ДокументОснование = тбНО.Счет;
		П2.Валюта = Гривня;              
		Попытка 
			П2.Дата_Курса = РодительскийДокумент.Дата_Курса;
		Исключение
			П2.Дата_Курса = РодительскийДокумент.ДатаДок;
		КонецПопытки;
		П2.Курс = глКурсДляВалюты(П2.Валюта,П2.Дата_Курса);
		П2.ВидНДС = СтавкаНДС;
		П2.РодительскийДокумент = РодительскийДокумент;
	Иначе
		П2.НайтиДокумент(СтароеП2);
		П2.УдалитьСтроки();
	КонецЕсли;
	
	П2.Выписал = глВосстановитьЗначение(,"БазВыписалНН");
	П2.Автор = глПользователь;
	П2.ЧтоПродаем = Перечисление.ЧтоПродаем.ТМЦ;
	    
	НН = 0;
	// нужно найти соответствующую НН и заполнить реквизиты НалоговаяНакладная, УсловиеПродажи, ФормаРасчетов
	Док = СоздатьОбъект("Документ");                                                                         
	Если ЭтоИтоговая = 1 Тогда
		// если это выписка итоговых налоговых, то НН ищем по договору
		Док.ВыбратьПодчиненныеДокументы(,,П2.Договор); // в налоговой должен быть указан тот же документ долга
	Иначе
		// если обычные документы - то по документу-основанию
		Док.ВыбратьПодчиненныеДокументы(,,П2.ДокументОснование); // в налоговой должен быть указан тот же документ долга
	КонецЕсли;
	Пока Док.ПолучитьДокумент()=1 Цикл
		Если Док.Вид() <> "НалоговаяНакладная" Тогда
		    Продолжить;
		КонецЕсли;
		Если (Док.Контрагент = П2.Контрагент) И (Док.ВидНДС = П2.ВидНДС) 
		И (Док.Договор = П2.Договор) Тогда
			Если ЭтоИтоговая = 1 Тогда
		    	НН = Док.ТекущийДокумент();
			ИначеЕсли Док.ДокументОснование = П2.ДокументОснование Тогда
		    	НН = Док.ТекущийДокумент();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ПустоеЗначение(НН)=0 Тогда
		П2.НалоговаяНакладная = НН;
		П2.УсловиеПродажи = НН.УсловиеПродажи;
		П2.ФормаРасчетов = НН.ФормаРасчетов;
	КонецЕсли;
	                    
	фЗаполняем = 0;
	// можно попытаться заполнить табличную часть
	Если (ВидРодителя = "ВозвратнаяНакладная") или (ВидРодителя = "ВозвратРозница") Тогда
		Если тбНО.СуммаСНДС = -ИтогПоСтавке(РодительскийДокумент,СтавкаНДС) Тогда
		    фЗаполняем = 1;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(фЗаполняем)=0 Тогда
		Попытка
			ВидНДСДок = РодительскийДокумент.ВидНДС;
		Исключение
			ВидНДСДок = ОсновнаяСтавкаНДС;
		КонецПопытки;
		фТаруПропускаем = 0;
		Если глЕстьРеквизитШапки("ВидТары",ВидРодителя) = Да Тогда
			Если РодительскийДокумент.ВидТары <> Перечисление.ВидыТары.Покупная Тогда
				фТаруПропускаем = 1;
			КонецЕсли;
	    КонецЕсли;
	    РодительскийДокумент.ВыбратьСтроки();
		Пока РодительскийДокумент.ПолучитьСтроку()=1 Цикл
			ТМЦ = РодительскийДокумент.ТМЦ;
			Если (ВидНДСДок <> ОсновнаяСтавкаНДС) Тогда
			    // нужно проверить ставку ТМЦ
				Если ТМЦ.СтавкаНДС <> СтавкаНДС Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Если (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) и (фТаруПропускаем = 1) Тогда
				Продолжить;
			КонецЕсли;
			
			П2.НоваяСтрока();
			П2.ТМЦ = ТМЦ;
			// цены и сумму без НДС попытаемся найти в налоговой
			Если ПустоеЗначение(НН)=0 Тогда
				НН.ВыбратьСтроки();
				Пока НН.ПолучитьСтроку()=1 Цикл
					Если НН.ТМЦ = ТМЦ Тогда
						П2.Кво = НН.Кво;
					    П2.ЦенаБезНДС = НН.ЦенаБезНДС;
						П2.ЦенаСНДС = НН.ЦенаСНДС;
						П2.СуммаБезНДС = НН.СуммаБезНДС;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			СтНДС = П2.ВидНДС.Ставка.Получить(П2.ДатаДок);
			ПервоеСобытиеНДС = тбНО.СуммаСНДС * СтНДС / (1 + СтНДС);
			
			П2.ИзмЦены = 0;
			П2.ИзмКво = - РодительскийДокумент.Кво;
			Если (ВидРодителя = "ВозвратРозница") Тогда
				П2.ИзмСуммыСНДС = - РодительскийДокумент.СуммаСНДС;
				П2.ИзмНДС = - РодительскийДокумент.СуммаСНДС * СтНДС / (1 + СтНДС);
				П2.ИзмСуммыБезНДС = - РодительскийДокумент.СуммаСНДС / (1 + СтНДС);
			Иначе
				П2.ИзмСуммыБезНДС = - РодительскийДокумент.СуммаБезНДС;
				П2.ИзмНДС = - РодительскийДокумент.НДС;
				П2.ИзмСуммыСНДС = - РодительскийДокумент.СуммаСНДС;
			КонецЕсли;
			глУстановкаБазЕд(П2,П2.ТМЦ,П2.ТМЦ.БазоваяЕдиница);
			П2.Причина = "возврат";
		КонецЦикла;
	Иначе
		П2.НоваяСтрока();
		Если (ВидРодителя = "БанковскаяВыписка") или (ВидРодителя = "РасходныйКассовый") Тогда
			П2.ТМЦ = Константа.АвансовыйПлатеж;
		Иначе
			П2.ТМЦ = Константа.ЧастичнаяОтгрузка;
		КонецЕсли;
		
		Если ПустоеЗначение(НН)=0 Тогда
			// возьмем сумму без НДС из налоговой накладной
		    П2.ЦенаБезНДС = НН.Итог("СуммаБезНДС");
			П2.ЦенаСНДС = НН.Итог("СуммаСНДС");
			П2.СуммаБезНДС = П2.ЦенаБезНДС;
		КонецЕсли;
	    
		СтНДС = П2.ВидНДС.Ставка.Получить(П2.ДатаДок);
		ПервоеСобытиеНДС = тбНО.СуммаСНДС * СтНДС / (1 + СтНДС);
		
		Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС Тогда
			П2.ИзмЦены = тбНО.СуммаСНДС;
		Иначе
			П2.ИзмЦены = тбНО.СуммаСНДС - ПервоеСобытиеНДС;
		КонецЕсли;
		
		П2.ИзмСуммыБезНДС = тбНО.СуммаСНДС - ПервоеСобытиеНДС;
		П2.ИзмНДС = ПервоеСобытиеНДС;
		П2.ИзмСуммыСНДС = тбНО.СуммаСНДС;
		П2.Кво = 1;
		глУстановкаБазЕд(П2,П2.ТМЦ,П2.ТМЦ.БазоваяЕдиница);
		П2.Причина = "возврат";
	КонецЕсли;
	
    НачВалюта = ?(ПустоеЗначение(П2.Валюта)=1,Гривня,П2.Валюта);
	П2.ИзмСуммыНДС = глПересчет(П2.Итог("ИзмНДС"),НачВалюта,Гривня,П2.Курс,П2.ДатаДок);
	П2.ИзмБазыНДС  = глПересчет(П2.Итог("ИзмСуммыБезНДС"),НачВалюта,Гривня,П2.Курс,П2.ДатаДок);
	П2.Записать();
	Если ПустоеЗначение(П2.НалоговаяНакладная)=1 Тогда
		глКомментарий("Не найдена налоговая накладная для "+ П2,1);
	КонецЕсли;
	Если ЭтоВводНаОсновании = 1 Тогда
		Если фИсправляем=1 Тогда
			глКомментарий("Исправлен документ "+П2.ТекущийДокумент(),1);
		Иначе
			глКомментарий("Сформирован документ "+П2.ТекущийДокумент(),1);
		КонецЕсли;
	КонецЕсли;

	Если ПустоеЗначение(СтароеП2)=1 Тогда
	    ДобавитьСтрокуКРезультату(РодительскийДокумент,П2.Контрагент,П2.Договор,ПервоеСобытиеСНДС,П2,1);
	КонецЕсли;
	
КонецПроцедуры


// ===============================
Процедура СкопироватьМнЧ(НН,РодительскийДокумент,ДокЗаполнения,СтавкаНДС,ПервоеСобытиеСНДС,ПервоеСобытиеНДС)

	ВидДокЗаполнения = ДокЗаполнения.Вид();
	ВидРодителя = РодительскийДокумент.Вид();
	
	ДокументКопирования = 0;
	ВидДокументаКопирования = "";
	Если спДокументыТЧ.Принадлежит(ВидДокЗаполнения) = 1 Тогда // ДокЗаполнения - документ с табличной частью 
		Если (ПервоеСобытиеСНДС = ИтогПоСтавке(ДокЗаполнения,СтавкаНДС)) Тогда
			// копируем табличную часть из заказа
			ДокументКопирования = ДокЗаполнения;
			ВидДокументаКопирования = ВидДокЗаполнения;
		КонецЕсли;
	ИначеЕсли спДокументыТЧ.Принадлежит(ВидРодителя) = 1 Тогда // родитель - документ с табличной частью
		Если (ПервоеСобытиеСНДС = ИтогПоСтавке(РодительскийДокумент,СтавкаНДС)) Тогда
			// копируем табличную часть из родительского документа
			ДокументКопирования = РодительскийДокумент;
			ВидДокументаКопирования = ВидРодителя;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(ДокументКопирования) = 0 Тогда
		Если ВидДокументаКопирования = "ЛиквидацияНеоборАктивов" Тогда
			НН.ЧтоПродаем = Перечисление.ЧтоПродаем.НеоборотныеАктивы;
		КонецЕсли;
		Если глЕстьРеквизитМнЧ("НеоборотныйАктив",ВидДокументаКопирования) = Да Тогда
		    реквТМЦ = "НеоборотныйАктив";
		ИначеЕсли глЕстьРеквизитМнЧ("Услуга",ВидДокументаКопирования) = Да  Тогда
			реквТМЦ = "Услуга";
		ИначеЕсли глЕстьРеквизитМнЧ("ТМЦ",ВидДокументаКопирования) = Да  Тогда
			реквТМЦ = "ТМЦ";
		КонецЕсли;
		             
		// для розничных документов учтем скидку, казанную в шапке
		Если ВидДокументаКопирования = "РасходнаяРозничная" Тогда
		    ПроцентСкидки = ?(ДокументКопирования.Итог("СуммаСНДС") = 0,1,ДокументКопирования.Скидка/ДокументКопирования.Итог("СуммаСНДС"));
		КонецЕсли;
		
		Попытка
			ВидНДСДК = ДокументКопирования.ВидНДС;
		Исключение
			ВидНДСДК = ОсновнаяСтавкаНДС;
		КонецПопытки;
		
		фТаруПропускаем = 0;
		Если глЕстьРеквизитШапки("ВидТары",ВидДокументаКопирования) = Да Тогда
			Если ДокументКопирования.ВидТары <> Перечисление.ВидыТары.Покупная Тогда
				// возвратную тару пропускаем
				фТаруПропускаем = 1;
			КонецЕсли;
		КонецЕсли;
		
		ДокументКопирования.ВыбратьСтроки();
		Пока ДокументКопирования.ПолучитьСтроку() = 1 Цикл
			ТМЦ = ДокументКопирования.ПолучитьАтрибут(реквТМЦ);
			Если ТМЦ.Вид() = "ТМЦ" Тогда
				Если (ВидНДСДК = ОсновнаяСтавкаНДС) Тогда
					// ставку НДС провераяем только если в накдадной/счете указано 20%
					Если ТМЦ.СтавкаНДС <> СтавкаНДС Тогда
					    // пропускаем строки с другим видом НДС
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			    Если (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) и (фТаруПропускаем = 1) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		    // добавим строку
			НН.НоваяСтрока();
			НН.ОперДата = ДокументКопирования.ДатаДок;
			НН.ТМЦ		= ТМЦ;
			Если глЕстьРеквизитМнЧ("ЦенаБезНДС",ВидДокументаКопирования) = Да Тогда
				НН.ЦенаБезНДС = ДокументКопирования.ЦенаБезНДС;
				Если глЕстьРеквизитМнЧ("ЦенаСНДС",ВидДокументаКопирования) = Да Тогда
					НН.ЦенаСНДС = ДокументКопирования.ЦенаСНДС;
				Иначе
					НН.ЦенаСНДС = НН.ЦенаБезНДС * (1 + НН.ВидНДС.Ставка.Получить(НН.ДатаДок));
				КонецЕсли;
			Иначе
				НН.ЦенаСНДС = ДокументКопирования.ЦенаСНДС;
				НН.ЦенаБезНДС = НН.ЦенаСНДС / (1 + НН.ВидНДС.Ставка.Получить(НН.ДатаДок));
			КонецЕсли;
			
			Если глЕстьРеквизитМнЧ("СуммаБезНДС",ВидДокументаКопирования) = Да Тогда
				НН.СуммаБезНДС = ДокументКопирования.СуммаБезНДС;
				Если глЕстьРеквизитМнЧ("СуммаСНДС",ВидДокументаКопирования) = Да Тогда
					НН.СуммаСНДС = ДокументКопирования.СуммаСНДС;
				Иначе
					НН.СуммаСНДС = НН.СуммаБезНДС * (1 + НН.ВидНДС.Ставка.Получить(НН.ДатаДок));
				КонецЕсли;
			Иначе
				НН.СуммаСНДС = ДокументКопирования.СуммаСНДС;
				НН.СуммаБезНДС = НН.СуммаСНДС/ (1 + НН.ВидНДС.Ставка.Получить(НН.ДатаДок));
			КонецЕсли;			
			Попытка
				НН.НДС = ДокументКопирования.НДС;
			Исключение
				НН.НДС = НН.СуммаСНДС - НН.СуммаБезНДС;
			КонецПопытки;
			Если ВидДокументаКопирования = "ЛиквидацияНеоборАктивов" Тогда
				НН.СуммаБезСкидки = НН.СуммаБезНДС;
				НН.Кво = 1;
				глУстановкаБазЕд(НН,,ТМЦ.БазЕдиница);
			ИначеЕсли ВидДокументаКопирования = "РасходнаяРозничная" Тогда
				// для розничных документов рассчитаем суммы с учетом скидки
				НН.Кво			  = ДокументКопирования.Кво;
				НН.Ед			  = ДокументКопирования.Ед;
				НН.Коэффициент	  = ДокументКопирования.Коэффициент;
				НН.Скидка 		  = ДокументКопирования.СуммаСНДС * ПроцентСкидки;
				НН.СуммаСНДС   	  = ДокументКопирования.СуммаСНДС - НН.Скидка;
				НН.СуммаБезНДС 	  = НН.СуммаСНДС/ (1 + НН.ВидНДС.Ставка.Получить(НН.ДатаДок));
				Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС Тогда
					НН.СуммаБезСкидки = ДокументКопирования.СуммаСНДС;
				Иначе
					НН.СуммаБезСкидки = ДокументКопирования.СуммаСНДС/ (1 + НН.ВидНДС.Ставка.Получить(НН.ДатаДок));
				КонецЕсли;	
				НН.НДС = НН.СуммаСНДС - НН.СуммаБезНДС;
			Иначе
				НН.Кво = ДокументКопирования.Кво;
				НН.Ед = ДокументКопирования.Ед;
				НН.Коэффициент = ДокументКопирования.Коэффициент;
				Если глЕстьРеквизитМнЧ("Скидка",ВидДокументаКопирования) = Да Тогда
					НН.Скидка = ДокументКопирования.Скидка;
					НН.СуммаБезСкидки = ДокументКопирования.СуммаБезСкидки;
				Иначе
					НН.Скидка = 0;
					Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС Тогда
						НН.СуммаБезСкидки = НН.СуммаСНДС;
					Иначе
						НН.СуммаБезСкидки = НН.СуммаБезНДС;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		// точно определить состав табличной части невозможно
		НН.ЧтоПродаем = Перечисление.ЧтоПродаем.ТМЦ;
		НН.НоваяСтрока();
		НН.ОперДата = РодительскийДокумент.ДатаДок;
		Если (ВидРодителя = "БанковскаяВыписка") или (ВидРодителя = "ПриходныйКассовый") Тогда
			// если налоговая накладная сформирована платежным документом,
			// значит, частичный авансовый платеж
			НН.ТМЦ = Константа.АвансовыйПлатеж;
		Иначе
			// если налоговая накладная сформирована отгрузочным документом,
			// значит, частичная отгрузка
			НН.ТМЦ = Константа.ЧастичнаяОтгрузка;
		КонецЕсли;
		НН.ЦенаБезНДС = ПервоеСобытиеСНДС - ПервоеСобытиеНДС;
		НН.ЦенаСНДС = ПервоеСобытиеСНДС;
		НН.СуммаБезНДС = НН.ЦенаБезНДС;
		НН.НДС = ПервоеСобытиеНДС;
		НН.СуммаСНДС = НН.ЦенаСНДС;
		Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС Тогда
			НН.СуммаБезСкидки = НН.ЦенаСНДС;
		Иначе
			НН.СуммаБезСкидки = НН.ЦенаБезНДС;
		КонецЕсли;
		НН.Кво = 1;
		глУстановкаБазЕд(НН,НН.ТМЦ,НН.ТМЦ.БазоваяЕдиница);
	КонецЕсли;
КонецПроцедуры

// ===============================  
// параметры:
// 	РодительскийДокумент - документ, по которому выписываем НН
//			если это Договор - то это выписка итоговых документов
//  тбНО - таблица, в которой содерится информация о суммах первого события
//  СтавкаНДС - ставка по которой нужно выписать НН
Процедура ЗаполнитьНалоговуюНакладную(РодительскийДокумент, тбНО, СтавкаНДС)

	Перем ЭтоИтоговая, ДатаИтоговойНН;
	
	ВидРодителя = РодительскийДокумент.Вид();
	
	Если (ВидРодителя = "Договор") или (ВидРодителя = "Заказ") Тогда
	    ЭтоИтоговая = 1; // если РодительскийДокумент это Договор или Заказ, то это выписка итоговых документов
		ДокЗаполнения = РодительскийДокумент;
		Договор = РодительскийДокумент;
		Контрагент = РодительскийДокумент.Контрагент;
		Попытка 
			ДатаИтоговойНН = Конт.ДатаДок;
		Исключение
			ДатаИтоговойНН = РабочаяДата();
		КонецПопытки;            
		Если ВидРодителя = "Договор" Тогда
			Валюта = РодительскийДокумент.Валюта;
		КонецЕсли;
		ДатаКурса = РабочаяДата();
	Иначе
		ЭтоИтоговая = 0;
		ДокЗаполнения = тбНО.Счет; // заказом считаем документ долга
		Договор = тбНО.Договор;
		Контрагент = тбНО.Контрагент;
		Валюта = тбНО.Валюта;
		ДатаКурса = тбНО.ТекДокумент.ДатаДок;
	КонецЕсли;
	
	// проверим, есть ли уже выписанные налоговые
	// есть возможность проверить сумму налоговой
	// для этого вычислим сумму первого события
	Если  (ЭтоИтоговая = 1) Тогда
		ПервоеСобытиеСНДС = 0;
		тбНО.ВыбратьСтроки();
		Пока тбНО.ПолучитьСтроку() =1 Цикл
			Если тбНО.СтавкаНДС = СтавкаНДС Тогда
				ПервоеСобытиеСНДС = ПервоеСобытиеСНДС + Макс(тбНО.СуммаСНДС,0) ;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ПервоеСобытиеСНДС = тбНО.СуммаСНДС;
	КонецЕсли;
	
	Док = СоздатьОбъект("Документ");
	Если ЭтоИтоговая = 0 Тогда
		// выбираем налоговые накладные, введенные родительским документом
		Док.ВыбратьПодчиненныеДокументы(,,РодительскийДокумент);
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Вид() <> "НалоговаяНакладная" Тогда
				Продолжить;
			КонецЕсли;
			Если Док.РодительскийДокумент <> РодительскийДокумент Тогда
				Продолжить;
			КонецЕсли;
			Если (Док.Контрагент = Контрагент) и (Док.ВидНДС = СтавкаНДС) Тогда
				Если (Док.Договор = Договор) и (Док.ДокументОснование = ДокЗаполнения) Тогда
					СтараяНалоговаяНакладная = Док.ТекущийДокумент();
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		// выбираем налоговые накладные за месяц по заказу
		Док.ВыбратьПодчиненныеДокументы(НачМесяца(ДатаИтоговойНН),КонМесяца(ДатаИтоговойНН),ДокЗаполнения);
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Вид() <> "НалоговаяНакладная" Тогда
				Продолжить;
			КонецЕсли;
			Если Док.ВидНДС <> СтавкаНДС Тогда
				Продолжить;
			КонецЕсли;
			Если НачМесяца(Док.ДатаДок) = НачМесяца(ДатаИтоговойНН) Тогда
				СтараяНалоговаяНакладная = Док.ТекущийДокумент();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	                   
	Если ЭтоИтоговая = 1 Тогда
		// для итоговых налоговых сделаем сделаем провекру на наличие новых возвратов по старым налоговым
		тбНО.ВыбратьСтроки();
		Пока тбНО.ПолучитьСтроку() =1 Цикл
			Если тбНО.СтавкаНДС = СтавкаНДС Тогда
				Если тбНО.СуммаСНДС < 0 Тогда    
					Если ПустоеЗначение(СтараяНалоговаяНакладная)=0 Тогда
						текНалоговаяНакладная = СтараяНалоговаяНакладная;
					Иначе
						// возможно это возврат по старой налоговой
						текДокОсноване = глПолучитьДокументВзаиморасчетов(тбНО.ТекДокумент);
						ДатаДокВозврата = Мин(тбНО.ТекДокумент.ДатаДок,?(ПустоеЗначение(текДокОсноване)=1,тбНО.ТекДокумент.ДатаДок,текДокОсноване.ДатаДок));
						Если  ДатаДокВозврата < НачМесяца(ДатаИтоговойНН) Тогда
							// выбираем налоговые накладные за месяц, в котром была налоговая
							Док.ВыбратьПодчиненныеДокументы(НачМесяца(ДатаДокВозврата),КонМесяца(ДатаДокВозврата),ДокЗаполнения);
							Пока Док.ПолучитьДокумент() = 1 Цикл
								Если Док.Вид() <> "НалоговаяНакладная" Тогда
									Продолжить;
								КонецЕсли;
								Если Док.ВидНДС <> СтавкаНДС Тогда
									Продолжить;
								КонецЕсли;
								текНалоговаяНакладная = Док.ТекущийДокумент();
								Прервать;
							КонецЦикла;
						Иначе
							Продолжить;
						КонецЕсли;
					КонецЕсли;                           
					Если ПустоеЗначение(текНалоговаяНакладная) = 1 Тогда
						// налоговую не нашли
						Продолжить;
					КонецЕсли;
				    ЗаполнитьПриложение2(тбНО.ТекДокумент,тбНО,тбНО.СтавкаНДС,ЭтоИтоговая,текНалоговаяНакладная.ТекущийДокумент());
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	Если (ПустоеЗначение(СтараяНалоговаяНакладная) = 1) 
	И (ПустоеЗначение(ПервоеСобытиеСНДС) = 1) Тогда
		// нет данных для заполнения НН
		Возврат;
	КонецЕсли;
	
	фИсправляем = 0;
	фВыписанаВерно = 1;
	Если ПустоеЗначение(СтараяНалоговаяНакладная) = 0 Тогда
		// что-то делаем с уже существующей
		Если ЭтоВводНаОсновании = 1 Тогда
			ТекстВопроса = "";
			Если ЭтоИтоговая = 1 Тогда
				ТекстВопроса = "Итоговая налоговая накладная по контрагенту " + Контрагент +", договору "+ Договор +" и виду НДС "+СтавкаНДС+" за "+ПериодСтр(НачМесяца(ДатаИтоговойНН),КонМесяца(ДатаИтоговойНН))+" уже существует!";
			Иначе
				ТекстВопроса = "Налоговая накладная по контрагенту " + Контрагент +", договору "+ Договор +", счету "+ДокЗаполнения+" и виду НДС "+СтавкаНДС+" на основании "+ РодительскийДокумент +" уже существует!";
			КонецЕсли;			
			ТекстВопроса = ТекстВопроса + " Заполнить ее снова?";
			Рез = Вопрос(ТекстВопроса,"Да+Нет");
			Если Рез = "Да" Тогда
				фИсправляем = 1;
			КонецЕсли;
		Иначе
			ВыписаноННСНДС = СтараяНалоговаяНакладная.Итог("СуммаСНДС");
			Если ВыписаноННСНДС <> ПервоеСобытиеСНДС Тогда
				// документ выписан не правильно
				фВыписанаВерно = 0;
				Если Исправлять = 2 Тогда
					Если СтараяНалоговаяНакладная.Проведен()=0 Тогда
						фИсправляем = 1;
					КонецЕсли;
				ИначеЕсли Исправлять = 3 Тогда
					фИсправляем = 1;				
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Флаг = 2;
	    Если фВыписанаВерно = 0 Тогда
			Флаг = 3;
	    КонецЕсли;
		Если фИсправляем = 1 Тогда
			Флаг = 4;
		КонецЕсли;
		
		ДобавитьСтрокуКРезультату(РодительскийДокумент,Контрагент,ДокЗаполнения,ПервоеСобытиеСНДС,СтараяНалоговаяНакладная,Флаг);
		
		Если фИсправляем = 0 Тогда
		    Возврат;
		КонецЕсли;
	Иначе
		Если ЭтоИтоговая=0 Тогда
			Если ЭтоВводНаОсновании = 0 Тогда
				Если тбНО.СуммаСНДС > 0 Тогда
					// вводим новую налоговую накладную
				Иначе
					// первого события нет
					Возврат;
				КонецЕсли;
			Иначе
				// вводим на основании
				Если тбНО.СуммаСНДС = 0 Тогда
					Рез = Вопрос("По указанному документу не возникает ""первое событие""."+РазделительСтрок+"Продолжить формирование налоговой накладной?","Да+Нет");
					Если Рез = "Нет" Тогда
						СтатусВводаНаОсновании = 0;
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	        
	фЗаполняемНаОсновании = 0;
	Если ПустоеЗначение(СтараяНалоговаяНакладная)=0 Тогда
		НН = СоздатьОбъект("Документ.НалоговаяНакладная");
		НН.НайтиДокумент(СтараяНалоговаяНакладная);
		НН.УдалитьСтроки();
	Иначе
		// Если в обработку передали контекст налоговой, то нужно первой заполнить её
		Если (ЭтоВводНаОсновании = 1) и (фЗаполнилиНаОсновании = 0) Тогда
		    Если ПустоеЗначение(Конт)=0 Тогда
		        НН = Конт;
				фЗаполнилиНаОсновании = 1;
				фЗаполняемНаОсновании = 1; // флаг того, что мы заполняем документ, чей контекст был передан
		    КонецЕсли;
		КонецЕсли;
		// а если нет, то создадим новую 
		Если ПустоеЗначение(НН)=1 Тогда
			НН = СоздатьОбъект("Документ.НалоговаяНакладная");
			НН.Новый();
		КонецЕсли;
	КонецЕсли;
	
	НН.Фирма = РодительскийДокумент.Фирма;
	
	Если ЭтоИтоговая = 0 Тогда
		Если фИсправляем = 0 Тогда
			НН.ДатаДок = РодительскийДокумент.ДатаДок;
		КонецЕсли;
		НН.РодительскийДокумент = РодительскийДокумент;
		// контрагент может не соответствовать контрагенту из родительского документа
		НН.Контрагент = Контрагент;
		НН.Договор = Договор;
		НН.ДокументОснование = ДокЗаполнения;
		
		Если глЕстьРеквизитШапки("ВидТорговли",ДокЗаполнения.Вид()) = Да Тогда
		    НН.ВидТорговли = ДокЗаполнения.ВидТорговли;
		КонецЕсли;
		Если ПустоеЗначение(НН.ВидТорговли)=1 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли",Договор.Вид()) = Да Тогда
			    НН.ВидТорговли = Договор.ВидТорговли;
			КонецЕсли;
		КонецЕсли;
		Если ПустоеЗначение(НН.ВидТорговли)=1 Тогда
			НН.ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;
	Иначе
		Если фИсправляем = 0 Тогда
			НН.ДатаДок = ДатаИтоговойНН;
		КонецЕсли;
		НН.РодительскийДокумент = 0;
		НН.Контрагент = РодительскийДокумент.Контрагент;
		НН.Договор = РодительскийДокумент; // договор
		НН.ДокументОснование = 0;
		Если (ВидРодителя = "Договор")  Тогда
			НН.ВидТорговли = РодительскийДокумент.ВидТорговли;
		КонецЕсли;
		Если ПустоеЗначение(НН.ВидТорговли)=1 Тогда
			НН.ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;
		НН.Итоговая = 1;
	КонецЕсли;
	
	Если фИсправляем = 0 Тогда
	    глУстановитьНомер(НН);
	КонецЕсли;
	
	ВидДокЗаполнения = ДокЗаполнения.Вид();
	НН.Валюта = Валюта;
	НН.Дата_Курса = ДатаКурса;
	Если спДокументыТЧ.Принадлежит(ВидДокЗаполнения) = 1 Тогда
		// если заказ - документ с табличной частью
		Если ПустоеЗначение(НН.Валюта)=1 Тогда
		    НН.Валюта = ДокЗаполнения.Валюта;
		КонецЕсли;
		НН.Курс = глКурсДляВалюты(НН.Валюта,НН.Дата_Курса);
		Если ВидДокЗаполнения = "Счет" Тогда
			НН.ЧтоПродаем = ДокЗаполнения.ЧтоПродаем;
		ИначеЕсли (ВидДокЗаполнения = "РасходнаяНакладная") или (ВидДокЗаполнения = "РасходнаяРозничная") 
			или  (ВидДокЗаполнения = "ОказаниеУслуг")  Тогда
		    НН.ЧтоПродаем = Перечисление.ЧтоПродаем.ТМЦ;
		ИначеЕсли ВидДокЗаполнения = "ЛиквидацияНеоборАктивов" Тогда
			НН.ЧтоПродаем = Перечисление.ЧтоПродаем.НеоборотныеАктивы;
		КонецЕсли;
	ИначеЕсли ВидДокЗаполнения = "Договор" Тогда
		Если ПустоеЗначение(НН.Валюта)=1 Тогда
		    НН.Валюта = ДокЗаполнения.Валюта;
		КонецЕсли;
		НН.Курс = глКурсДляВалюты(НН.Валюта,НН.Дата_Курса);
		// по умолчанию
		НН.ЧтоПродаем = Перечисление.ЧтоПродаем.ТМЦ;
	ИначеЕсли ВидДокЗаполнения = "Заказ" Тогда
		НН.Валюта = Гривня;
		НН.Курс = глКурсДляВалюты(НН.Валюта,НН.Дата_Курса);
		// по умолчанию
		НН.ЧтоПродаем = Перечисление.ЧтоПродаем.ТМЦ;
	Иначе
		Если ПустоеЗначение(НН.Валюта)=1 Тогда
			Попытка
		    	НН.Валюта = ДокЗаполнения.Валюта;
			Исключение
				НН.Валюта = Гривня;
			КонецПопытки;
		КонецЕсли;
		НН.Курс = глКурсДляВалюты(НН.Валюта,НН.Дата_Курса);
	КонецЕсли;
	
	// заполним текстовые реквизиты по-украински
	Если ВидДокЗаполнения = "Счет" Тогда
		НН.УсловиеПродажи = "Рахунок № "+ДокЗаполнения.НомерДок+" вiд "+ДокЗаполнения.ДатаДок;
	ИначеЕсли (ВидДокЗаполнения = "РасходнаяНакладная") или (ВидДокЗаполнения = "ЛиквидацияНеоборАктивов") 
		или (ВидДокЗаполнения = "РасходнаяРозничная") Тогда
		НН.УсловиеПродажи = "Накладна № "+ДокЗаполнения.НомерДок+" вiд "+ДокЗаполнения.ДатаДок;
	ИначеЕсли ВидДокЗаполнения = "ОказаниеУслуг" Тогда
		НН.УсловиеПродажи = "Акт № "+ДокЗаполнения.НомерДок+" вiд "+ДокЗаполнения.ДатаДок;
	ИначеЕсли ВидДокЗаполнения = "Договор" Тогда
		НН.УсловиеПродажи = "Договiр № "+СокрЛП(ДокЗаполнения.НомерДоговора)+" вiд "+ДокЗаполнения.ДатаДок;
	ИначеЕсли ВидДокЗаполнения = "Заказ" Тогда
	    НН.УсловиеПродажи = "Замовлення № "+ДокЗаполнения.НомерДок+" вiд "+ДокЗаполнения.ДатаДок;
	КонецЕсли;
    
	Если (ВидДокЗаполнения = "Счет") 			или (ВидДокЗаполнения = "РасходнаяНакладная") 
	или  (ВидДокЗаполнения = "ОказаниеУслуг")   или (ВидДокЗаполнения = "ЛиквидацияНеоборАктивов") 
	или  (ВидДокЗаполнения = "Договор") 		или (ВидДокЗаполнения = "РасходнаяРозничная") Тогда
		Если ДокЗаполнения.ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
			НН.ФормаРасчетов = "готiвка";
		ИначеЕсли ДокЗаполнения.ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
			НН.ФормаРасчетов = "бартерна угода";
		Иначе
			НН.ФормаРасчетов = "оплата з розрахункового рахунку";
		КонецЕсли;
	КонецЕсли;
	
	НН.Автор = глПользователь;
	
	Если ПустоеЗначение(НН.Выписал) = 1 Тогда
		НН.Выписал = глВосстановитьЗначение(,"БазВыписалНН");
	КонецЕсли;

	НН.ВидНДС = СтавкаНДС;
	НН.СуммаВозвратнойТары = тбНО.СуммаВозвратнойТары;
	
	Если (ЭтоИтоговая = 1 ) Тогда
        НН.КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		тбНО.ВыбратьСтроки();
		Пока тбНО.ПолучитьСтроку()=1 Цикл
			Если тбНО.Договор <> ДокЗаполнения Тогда
			    Продолжить;
			КонецЕсли;
			Если тбНО.СтавкаНДС <> СтавкаНДС Тогда
			    Продолжить;
			КонецЕсли;
			Если тбНО.СуммаСНДС > 0 Тогда
				СкопироватьМнЧ(НН,тбНО.ТекДокумент,тбНО.Счет,СтавкаНДС,тбНО.СуммаСНДС,тбНО.СуммаНДС);
			ИначеЕсли тбНО.СуммаСНДС < 0 Тогда
				Если ПустоеЗначение(НН.ТекущийДокумент()) = 1 Тогда
					// заполним скрытые реквизиты шапки
					НН.СуммаНДС = глПересчет(НН.Итог("НДС"),НН.Валюта,Гривня,НН.Курс,НН.ДатаДок);
					НН.БазаНДС  = глПересчет(НН.Итог("СуммаБезНДС"),НН.Валюта,Гривня,НН.Курс,НН.ДатаДок);
					НН.СортироватьСтроки("ОперДата");
					НН.Записать();
				КонецЕсли;
			    ЗаполнитьПриложение2(тбНО.ТекДокумент,тбНО,тбНО.СтавкаНДС,1,НН.ТекущийДокумент());
			КонецЕсли;			
		КонецЦикла;
	Иначе
		Если глЕстьРеквизитШапки("КатегорияЦен",ВидДокЗаполнения) = Да Тогда
			НН.КатегорияЦен = ДокЗаполнения.КатегорияЦен;
		ИначеЕсли глЕстьРеквизитШапки("КатегорияЦен",ВидРодителя) = Да Тогда
		    НН.КатегорияЦен = РодительскийДокумент.КатегорияЦен;
		Иначе
			НН.КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		КонецЕсли;
		СкопироватьМнЧ(НН,РодительскийДокумент,ДокЗаполнения,СтавкаНДС,тбНО.СуммаСНДС,тбНО.СуммаНДС);
	КонецЕсли;
	
    НачВалюта = ?(ПустоеЗначение(НН.Валюта)=1,Гривня,НН.Валюта);
	НН.СуммаНДС = глПересчет(НН.Итог("НДС"),НачВалюта,Гривня,НН.Курс,НН.ДатаДок);
	НН.БазаНДС  = глПересчет(НН.Итог("СуммаБезНДС"),НачВалюта,Гривня,НН.Курс,НН.ДатаДок);
	Если ЭтоВводНаОсновании = 1 Тогда
		Если фЗаполняемНаОсновании = 0 Тогда
			НН.СортироватьСтроки("ОперДата");
		    НН.Записать();
			Если фИсправляем=1 Тогда
			    НН.Провести();
				глКомментарий("Исправлен документ "+НН.ТекущийДокумент(),1);
			Иначе
				глКомментарий("Сформирован документ "+НН.ТекущийДокумент(),1);
			КонецЕсли;
		КонецЕсли;
	Иначе
		НН.СортироватьСтроки("ОперДата");
	    НН.Записать();
		Если фИсправляем=1 Тогда
		    НН.Провести();
		КонецЕсли;
	КонецЕсли;
	Если (ЭтоВводНаОсновании = 0) и (ПустоеЗначение(СтараяНалоговаяНакладная)=1) Тогда
		ДобавитьСтрокуКРезультату(РодительскийДокумент,Контрагент,ДокЗаполнения,ПервоеСобытиеСНДС,НН,1);
	КонецЕсли;
КонецПроцедуры

// ===============================
Функция СоздатьТаблицуНО()
    тбНО = СоздатьОбъект("ТаблицаЗначений");
	тбНО.НоваяКолонка("НС","Число",5,0);
	тбНО.НоваяКолонка("Контрагент","Справочник");
	тбНО.НоваяКолонка("Договор","Документ");
	тбНО.НоваяКолонка("Счет","Документ");
	тбНО.НоваяКолонка("ТекДокумент","Документ");
	тбНО.НоваяКолонка("СтавкаНДС");
	тбНО.НоваяКолонка("Валюта");
	тбНО.НоваяКолонка("СуммаСНДС","Число",14,2);
	тбНО.НоваяКолонка("СуммаНДС","Число",14,2);
	тбНО.НоваяКолонка("СуммаВозвратнойТары","Число",14,2);
	Возврат тбНО;
КонецФункции

// ===============================
Процедура ОбработатьРодительскийДокумент(РодДок)
	
	Состояние("Обрабатывается документ " + РодДок);
	
	тбНО = СоздатьТаблицуНО();
	
	Рег = СоздатьОбъект("Регистр.ВзаиморасчетыПокупателей");
	Если Действие = 1 Тогда
	    Рег.ВыбратьДвиженияДокумента(РодДок);
	Иначе
		Рег.УстановитьЗначениеФильтра("Договор",РодДок,1);
		Рег.ВыбратьДвижения(Дата1,Дата2);
	КонецЕсли;
	
	Пока Рег.ПолучитьДвижение()=1 Цикл
		Если Рег.Фирма <> ВыбФирма Тогда
		    Продолжить;
		КонецЕсли;
		Если (Рег.Контрагент <> ВыбКонтрагент) и (ПустоеЗначение(ВыбКонтрагент)=0) Тогда
		    Продолжить;
		КонецЕсли;
		Если (Рег.Договор <> ВыбДоговор) и (ПустоеЗначение(ВыбДоговор)=0) Тогда
		    Продолжить;
		КонецЕсли;
		Если спФлагиНУ.Принадлежит(Рег.Флаг_НУ)=0 Тогда
		    Продолжить;
		КонецЕсли;
		Если Действие = 1 Тогда
			// выписываем обычные налоговые накладные, итоговые пропускаем
			Если ПустоеЗначение(Рег.Договор)=0 Тогда
			    Если Рег.Договор.СпособФормированияНалоговыхДокументов = 2 Тогда
			        Продолжить;
				КонецЕсли;
			КонецЕсли;
		Иначе	
			// выписываем итоговые налоговые накладные, обычные пропускаем
			Если ПустоеЗначение(Рег.Договор)=1 Тогда
			    Продолжить;
			КонецЕсли;
			Если ПустоеЗначение(Рег.Договор)=0 Тогда
			    Если Рег.Договор.СпособФормированияНалоговыхДокументов = 1 Тогда
			        Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		тбНО.НоваяСтрока();
		тбНО.НС = Рег.НомерСтроки();
		тбНО.Контрагент = Рег.Контрагент;
		тбНО.Договор = Рег.Договор;
		тбНО.Счет = Рег.Счет;
		тбНО.ТекДокумент = Рег.ТекущийДокумент();
		тбНО.СтавкаНДС = Рег.СтавкаНДС;
		тбНО.Валюта = Рег.Валюта;
		
		ДатаКурса = тбНО.ТекДокумент.ДатаДок;
		тбНО.СуммаСНДС = глПересчет(Рег.СуммаСНДС_НУ,Гривня,тбНО.Валюта,ДатаКурса);
		тбНО.СуммаНДС = глПересчет(Рег.НДС,Гривня,тбНО.Валюта,ДатаКурса);
	КонецЦикла;
	
	Если тбНО.КоличествоСтрок() =0 Тогда
		Если ЭтоВводНаОсновании = 1 Тогда
		    Предупреждение("По документу " + РодДок +  " не возникают налоговые обязательства!");
			СтатусВводаНаОсновании = 0;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	тбНО.Сортировать("Контрагент*,Договор,Счет,СтавкаНДС,Валюта");
	
	Если Действие = 1 Тогда // обыкновенные накладные
		СуммаВозвратнойТары = 0;
		Если (РодДок.Вид() = "РасходнаяНакладная") Тогда
			// вычислим сумму возвратной тары
			Если РодДок.ВидТары <> Перечисление.ВидыТары.Покупная Тогда
				РодДок.ВыбратьСтроки();
				Пока РодДок.ПолучитьСтроку()=1 Цикл
					Если РодДок.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					    СуммаВозвратнойТары = СуммаВозвратнойТары + РодДок.СуммаБезНДС;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли (РодДок.Вид() = "БанковскаяВыписка") и (ЭтоВводНаОсновании = 1) Тогда
			// для банковской выписки нужно выбрать строчку по которой вводить НН			
			// составим таблицу для выбора, включаем туда те строчки, по которым возникали налоговые обязательства
			тбДляВыбора = СоздатьОбъект("ТаблицаЗначений");
			тбДляВыбора.НоваяКолонка("НС");
			тбДляВыбора.НоваяКолонка("Счет",,,,,6);
			тбДляВыбора.НоваяКолонка("Контрагент");
			тбДляВыбора.НоваяКолонка("Договор");
			тбДляВыбора.НоваяКолонка("ДокументОснование",,,,"Документ основание");
			тбДляВыбора.НоваяКолонка("РежимОплаты",,,,"Режим оплаты");
			РодДок.ВыбратьСтроки();
			Пока РодДок.ПолучитьСтроку()=1 Цикл
				ИскомыйНС = 0;
				Если тбНО.НайтиЗначение(РодДок.НомерСтроки,ИскомыйНС,"НС")=1 Тогда
					// добавляем в таблицу для выбора
					тбДляВыбора.НоваяСтрока();
					тбДляВыбора.НС = РодДок.НомерСтроки;
					тбДляВыбора.Счет = РодДок.Счет;
					тбДляВыбора.Контрагент = РодДок.Субконто1;
					тбДляВыбора.Договор = РодДок.Субконто2;
					тбДляВыбора.ДокументОснование = РодДок.ДокументОснование;
					тбДляВыбора.РежимОплаты = РодДок.РежимОплаты;
				КонецЕсли;
			КонецЦикла;
			Если тбДляВыбора.КоличествоСтрок()>1 Тогда
				Парам = СоздатьОбъект("СписокЗначений");
				Парам.Установить("Таблица",тбДляВыбора);
				Парам.Установить("Заголовок","Выберите строки документа, по которым необходимо выписать налоговые накладные");
				ОткрытьФормуМодально("Обработка.ВыборСтрокВТаблице",Парам);
				спРезультат = глРасшифровка;
				спНомераСтрокДок = СоздатьОбъект("СписокЗначений");
				Для Инд = 1 по спРезультат.РазмерСписка() Цикл
					тбДляВыбора.ПолучитьСтрокуПоНомеру(спРезультат.ПолучитьЗначение(Инд));
					спНомераСтрокДок.ДобавитьЗначение(тбДляВыбора.НС);
				КонецЦикла;
				текСтрока = 1;
				Пока текСтрока <= тбНО.КоличествоСтрок() Цикл
					тбНО.ПолучитьСтрокуПоНомеру(текСтрока);
					Если спНомераСтрокДок.Принадлежит(тбНО.НС)=0 Тогда
						тбНО.УдалитьСтроку();
					Иначе
						текСтрока = текСтрока +1;
					КонецЕсли;
				КонецЦикла;
				Если тбНО.КоличествоСтрок() = 0 Тогда
					// Если пользователь не выбрал ни одной строки
					Предупреждение("Не выбрано ни одной строки документа, налоговые накладные не сформированы!");
					СтатусВводаНаОсновании = 0;
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если тбНО.КоличествоСтрок() = 1 Тогда
			// выписывается одна налоговая накладная, укажем в ней сумму возвратной тары
			тбНО.ПолучитьСтрокуПоНомеру(1);
			тбНО.СуммаВозвратнойТары = СуммаВозвратнойТары;
			Если тбНО.СуммаСНДС > 0 Тогда
				ЗаполнитьНалоговуюНакладную(РодДок,тбНО,тбНО.СтавкаНДС);
			ИначеЕсли тбНО.СуммаСНДС < 0 Тогда
			    ЗаполнитьПриложение2(РодДок,тбНО,тбНО.СтавкаНДС);
			КонецЕсли;
		Иначе
			Если СуммаВозвратнойТары <> 0 Тогда
			    глКомментарий(Сокрлп(РодДок)+". Сумму возвратной тары в налогвых накладных нужно будет указать вручную.", 1,,"!");
			КонецЕсли;
		    // вызываем ЗаполнитьНН для каждой строчки
			тбНО.ВыбратьСтроки();
			Пока тбНО.ПолучитьСтроку()=1 Цикл
				Если тбНО.СуммаСНДС > 0 Тогда
					ЗаполнитьНалоговуюНакладную(РодДок,тбНО,тбНО.СтавкаНДС);
				ИначеЕсли тбНО.СуммаСНДС < 0 Тогда
				    ЗаполнитьПриложение2(РодДок,тбНО,тбНО.СтавкаНДС);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Иначе // итоговые
		//  вызываем ЗаполнитьНН для каждой ставки НДС
		спВидыНДС = СоздатьОбъект("СписокЗначений");
		тбНО.ВыбратьСтроки();
		Пока тбНО.ПолучитьСтроку()=1 Цикл
			Если спВидыНДС.Принадлежит(тбНО.СтавкаНДС)=0 Тогда
			    спВидыНДС.ДобавитьЗначение(тбНО.СтавкаНДС);
			КонецЕсли;
		КонецЦикла;
		Для номВида = 1 по спВидыНДС.РазмерСписка() Цикл
			ЗаполнитьНалоговуюНакладную(РодДок,тбНО,спВидыНДС.ПолучитьЗначение(номВида));
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура Сформировать()        
	
	глПроверкаДаты(Дата1,Дата2);
	
	тбРезультат = СоздатьОбъект("ТаблицаЗначений");
	тбРезультат.НоваяКолонка("РодительскийДокумент");
	тбРезультат.НоваяКолонка("Контрагент","Справочник");
	тбРезультат.НоваяКолонка("Счет");
	тбРезультат.НоваяКолонка("ПервоеСобытие","Число",15,2);
	тбРезультат.НоваяКолонка("НалоговыйДокумент");
	тбРезультат.НоваяКолонка("Флаг","Число",1,0);
	// 1 - налоговый документ новый, 
	// 2 - старый, не изменялся
	// 3 - старый, не изменялся, сумма по документу  не совпадает с суммой первого события
	// 4 - старый, был заполнен заново
	тбРезультат.НоваяКолонка("Комментарий");
	
	// Отбираем документы, сформировавшие первое событие
	
	тЗапрос = "//{{ЗАПРОС(РодительскиеДокументы)
	|Период с Дата1 по Дата2;
	|Фирма = Регистр.ВзаиморасчетыПокупателей.Фирма;
	|Контрагент = Регистр.ВзаиморасчетыПокупателей.Контрагент;
	|Договор = Регистр.ВзаиморасчетыПокупателей.Договор;
	|ТекущийДокумент = Регистр.ВзаиморасчетыПокупателей.ТекущийДокумент;
	|СуммаСНДС_НУ = Регистр.ВзаиморасчетыПокупателей.СуммаСНДС_НУ;
	|Флаг_НУ = Регистр.ВзаиморасчетыПокупателей.Флаг_НУ;
	|Функция СуммаСНДС_НУСумма = Сумма(СуммаСНДС_НУ);";
	
	Если Действие = 1 Тогда
		// обычные накладные, группируем по родительским документам
		тЗапрос = тЗапрос + "Группировка ТекущийДокумент;";
	Иначе // итоговые накладные, группируем по договорам
		тЗапрос = тЗапрос + "Группировка Договор;";
	КонецЕсли;
	
	тЗапрос = тЗапрос + "Условие(Флаг_НУ в спФлагиНУ);
	|Условие(Фирма = ВыбФирма);
	|"//}}ЗАПРОС
	;
	Если ВыбКонтрагент.Выбран()=1 Тогда
	    тЗапрос = тЗапрос + "Условие(Контрагент = ВыбКонтрагент);";
	КонецЕсли;
	Если ВыбДоговор.Выбран()=1 Тогда
	    тЗапрос = тЗапрос + "Условие(Договор = ВыбДоговор);";
	КонецЕсли;
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(тЗапрос) = 0 Тогда
	    Возврат;
	КонецЕсли;
	Пока Запрос.Группировка(1) = 1 Цикл
		Если Действие = 1 Тогда
			ОбработатьРодительскийДокумент(Запрос.ТекущийДокумент);
		Иначе	
			ОбработатьРодительскийДокумент(Запрос.Договор);
		КонецЕсли;
	КонецЦикла;
	
	Если тбРезультат.КоличествоСТрок()=0 Тогда
		Предупреждение("Не обнаружено ни одного документа, по которому необходимо выписать налоговые!");
	Иначе
		Т = СоздатьОбъект("Таблица");
		Т.ИсходнаяТаблица("Результат");
		
		Заголовок = "По фирме "+ВыбФирма+". ";
		Если ВыбКонтрагент.Выбран() = 1 Тогда
		    Заголовок = "По контрагенту "+ВыбКонтрагент+". ";
		КонецЕсли;
		Если ВыбДоговор.Выбран() = 1 Тогда
		    Заголовок = "По договору "+ВыбДоговор+". ";
		КонецЕсли;
		Т.ВывестиСекцию("Шапка");
	    тбРезультат.ВыбратьСтроки();
		Пока тбРезультат.ПолучитьСтроку()=1 Цикл
			
			СуммаПС = глФРМ(тбРезультат.ПервоеСобытие,тбРезультат.НалоговыйДокумент.Валюта,1);
			
			Если тбРезультат.Флаг = 1 Тогда
			    Примечание = "Новый документ";
			ИначеЕсли тбРезультат.Флаг = 2 Тогда
				Примечание = "Старый документ, выписан верно";
			ИначеЕсли тбРезультат.Флаг = 3 Тогда
			    Примечание = "Старый документ, ошибка";
			ИначеЕсли тбРезультат.Флаг = 4 Тогда
			    Примечание = "Старый документ, исправлен";
			КонецЕсли;
			
			Т.ВывестиСекцию("Строка");
		КонецЦикла;
		Т.Опции(0,0,5,0);
		Т.ТолькоПросмотр(1);
		Т.Показать("Результат формирования налоговых документов");
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Элемент,Флаг)	// Предопределенная процедура
	Если Элемент="ВыбДоговор" Тогда	// выбираем договор
		Фрм = СоздатьОбъект("СписокЗначений");
		Фрм.ДобавитьЗначение("ДоговораКонтрагентов","ГрафаОтбора");
		Если ПустоеЗначение(ВыбКонтрагент)=0 Тогда
			Фрм.ДобавитьЗначение(ВыбКонтрагент,"Контрагент");
		КонецЕсли;
		ОткрытьПодбор("Журнал.ПолныйЖурнал","ДляВыбораДоговоровИСчетов",Фрм,0,ВыбДоговор);
		Флаг=0;
	КонецЕсли;	
КонецПроцедуры	// ПриНачалеВыбораЗначения

// ===============================
Процедура ПриОткрытии()
	Если Действие = 0 Тогда
	    Действие = 1;
	КонецЕсли;
	Если Исправлять = 0 Тогда
	    Исправлять = 1;
	КонецЕсли;
	фЗаполнилиНаОсновании = 0;
	ЭтоВводНаОсновании = 0;
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
	    // интерактивное формирование налогового документа
		Документ = Форма.Параметр.Получить("ДокументОснование");
		ВыбФирма = Документ.Фирма;
		Конт = Форма.Параметр.Получить("Контекст");
		Если ПустоеЗначение(Конт)=0 Тогда
			// передали контекст документа
			ЭтоВводНаОсновании = 1;
			СтатусВводаНаОсновании = 1;
			Если глЕстьРеквизитШапки("КонечныйПотребитель",Документ.Вид()) = Да Тогда
				Если Документ.КонечныйПотребитель = 1 Тогда
					СтатусВводаНаОсновании = 0;
					глКомментарий("Конечным потребителям налоговая накладная не выписывается!",0);
					Форма.Параметр.ДобавитьЗначение(СтатусВводаНаОсновании,"СтатусВозврата");
					СтатусВозврата(0);
					Возврат;
				КонецЕсли;
			КонецЕсли;  			
		КонецЕсли;
		Действие = 1;
		Исправлять = 1;
		Дата2 = Документ.ДатаДок;
		Дата1 = Документ.ДатаДок;
		Если (Документ.Вид()="Договор") или (Документ.Вид()="Заказ") Тогда
		    Если Документ.СпособФормированияНалоговыхДокументов = 2 Тогда
		        Действие = 2;
				Дата2 = КонМесяца(РабочаяДата());
				Дата1 = НачМесяца(РабочаяДата());
		    КонецЕсли;
		КонецЕсли;
		ОбработатьРодительскийДокумент(Документ);
		Если фЗаполнилиНаОсновании=0 Тогда
			СтатусВводаНаОсновании = 0;
		КонецЕсли;
		Форма.Параметр.ДобавитьЗначение(СтатусВводаНаОсновании,"СтатусВозврата");
		СтатусВозврата(0);
		Возврат;
	Иначе
		Дата2 = ПолучитьДатуТА();
		Дата1 = НачМесяца(Дата2);
		ВыбФирма=глВосстановитьЗначение(,"БазФирма");
	КонецЕсли;
КонецПроцедуры

спФлагиНУ = СоздатьОбъект("СписокЗначений");
спФлагиНУ.ДобавитьЗначение(НУ_ВозникновениеНОиВДВР);
спФлагиНУ.ДобавитьЗначение(НУ_СторноНОиВДВР);
спФлагиНУ.ДобавитьЗначение(НУ_ВозникновениеНО);
спФлагиНУ.ДобавитьЗначение(НУ_СторноНО);

спДокументыТЧ = СоздатьОбъект("СписокЗначений");
спДокументыТЧ.ДобавитьЗначение("Счет");
спДокументыТЧ.ДобавитьЗначение("РасходнаяНакладная");
спДокументыТЧ.ДобавитьЗначение("ЛиквидацияНеоборАктивов");
спДокументыТЧ.ДобавитьЗначение("ОказаниеУслуг");
спДокументыТЧ.ДобавитьЗначение("РасходнаяРозничная");