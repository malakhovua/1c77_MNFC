Перем ИсторияПоиска;
Перем ВнКонтекст;		// контекст вызвавшей формы
Перем ВидСправочника;	// "Прайс_лист" или 
Перем КатегорияЦен;

Перем ДатаПериодическихРеквизитов;
// ===============================
Процедура ПоискЭлемента(РеквизитДляПоиска,Список)
	Перем ИскомыйЭлемент, ТекЦена, ПрайсТовар;
	                               
	
	Поисковая = СокрЛП(СтрПоиска);
	
	Спр = СоздатьОбъект("Справочник."+ВидСправочника);
	
	Колво=0; // количество обработанных элементов
	КолЭлементов=0; // количество отобранных элементов
	
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент()>0 Цикл
		Если Спр.ПометкаУдаления()=1 Тогда
		    //Пропускаем помеченные на удаление
			Продолжить;
		КонецЕсли;

		Если Спр.ЭтоГруппа()=1 Тогда
		    //Пропускаем группы
			Продолжить;
		КонецЕсли;
		
		Если ВидСправочника="Прайс_лист" Тогда
			ТекТовар=Спр.Товар;
			ТекЦена=глВернутьЦену(ТекТовар,КатегорияЦен);
			Если ПустоеЗначение(ТекЦена)=1 Тогда
				// Нет цены, нет товара
				Продолжить;
			КонецЕсли;
			ПрайсТовар=Спр.ТекущийЭлемент();
		Иначе
			ТекТовар=Спр.ТекущийЭлемент();
		КонецЕсли;
		
		Колво = Колво + 1;
		УдовлетворяетУсловию = 0;
	    ЗначениеРеквизита =ТекТовар.ПолучитьАтрибут(РеквизитДляПоиска);
		Если ПоПервым=1 Тогда
			// по первым символам
		    Если Найти(ВРег(ЗначениеРеквизита),ВРег(Поисковая))=1 Тогда 
				УдовлетворяетУсловию = 1;
			КонецЕсли;	                 
		Иначе	  
			// по подстроке
			Если Найти(ВРег(ЗначениеРеквизита),ВРег(Поисковая))>0 Тогда 
				УдовлетворяетУсловию = 1;
			КонецЕсли;	                 
		КонецЕсли;         
		
		Если УдовлетворяетУсловию = 1 Тогда    
			// добавляем новый элемент в список
			КолЭлементов = КолЭлементов+1;
			Список.НоваяСтрока();
			Список.Товар = ТекТовар;
			Список.ПрайсТовар = ПрайсТовар;
			Список.Код = ТекТовар.Код;
			Список.Наименование = ТекТовар.Наименование;
			
			Если ТекТовар.ВидТМЦ <> перечисление.ВидыТМЦ.Услуга Тогда
				// считаем остатки только по наборам и товарам
				Если ПустоеЗначение(ВнКонтекст.Склад)=0 Тогда
				    Список.Остаток = Регистр.Остатки.СводныйОстаток(ВнКонтекст.Фирма,ТекТовар,ВнКонтекст.Склад,"ОстатокТовара");
				Иначе
					Список.Остаток = Регистр.Остатки.СводныйОстаток(ВнКонтекст.Фирма,ТекТовар,,"ОстатокТовара");
				КонецЕсли;
				Если ВидСправочника="Прайс_лист" Тогда
					ТекЕдиница=ТекЦена.Единица.Получить(ДатаПериодическихРеквизитов);
				Иначе
					ТекЕдиница=ТекТовар.ЕдиницаПоУмолчанию;
				КонецЕсли;
				Список.Единица=ТекЕдиница;
				Если ТекЕдиница.Коэффициент<>0 Тогда
					Список.Остаток = Список.Остаток/ТекЕдиница.Коэффициент;
				КонецЕсли;
			КонецЕсли;
			Список.Цена = ТекЦена;
		КонецЕсли;

		Если Колво%50=0 Тогда
			Состояние("Отработано - "+Строка(Колво)+ "позиций");
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры	// ПоискЭлемента

Процедура ПоискПоКатегории(Список)
	Перем ТекстЗапроса, Запрос, ТекЦена, ПрайсТовар;
	
	ТекстЗапроса="
	|ТекКатегория = Справочник.КатегорииТоваров.Категория;
	|ТекТовар = Справочник.КатегорииТоваров.Владелец;
	|Группировка ТекТовар упорядочить по ТекТовар.Наименование;
	|Условие(ТекКатегория в СтрПоиска);";
	
	Запрос=СоздатьОбъект("Запрос");
	Попытка
		Запрос.Выполнить(ТекстЗапроса);
	Исключение
		Предупреждение("Системная ошибка при отборе товаров!!!");
		Возврат;
	КонецПопытки;
		                                           
	СпрПрайс = СоздатьОбъект("Справочник.Прайс_лист");
	Колво=0;
	Пока Запрос.Группировка("ТекТовар")=1 Цикл
		ТекТовар=Запрос.ТекТовар;
		Если ТекТовар.ЭтоГруппа()=1 Тогда
			// Группы пропускаем
			Продолжить;
		КонецЕсли;
		Если ВидСправочника="Прайс_лист" Тогда
			ТекЦена=глВернутьЦену(ТекТовар,КатегорияЦен);
			Если ПустоеЗначение(ТекЦена)=1 Тогда
				// Нет цены, нет товара
				Продолжить;
			КонецЕсли;
			// поищем в прайсе
			
			Если СпрПрайс.НайтиПоРеквизиту("Товар",ТекТовар,1)=0 Тогда
			    Продолжить;
			КонецЕсли;
			ПрайсТовар = СпрПрайс.ТекущийЭлемент();
		КонецЕсли;

		Список.НоваяСтрока();
		Список.Товар=ТекТовар;
		Список.ПрайсТовар=ПрайсТовар;
		Список.Код=Запрос.ТекТовар.Код;
		Список.Наименование=Запрос.ЗначениеУпорядочивания(1,1);
		Если ТекТовар.ВидТМЦ <> перечисление.ВидыТМЦ.Услуга Тогда
			// считаем остатки только по наборам и товарам
			Если ПустоеЗначение(ВнКонтекст.Склад)=0 Тогда
			    Список.Остаток = Регистр.Остатки.СводныйОстаток(ВнКонтекст.Фирма,ТекТовар,ВнКонтекст.Склад,"ОстатокТовара");
			Иначе
				Список.Остаток = Регистр.Остатки.СводныйОстаток(ВнКонтекст.Фирма,ТекТовар,,"ОстатокТовара");
			КонецЕсли;
			Если ВидСправочника="Прайс_лист" Тогда
				ТекЕдиница=ТекЦена.Единица.Получить(ДатаПериодическихРеквизитов);
			Иначе
				ТекЕдиница=ТекТовар.ЕдиницаПоУмолчанию;
			КонецЕсли;
			Список.Единица=ТекЕдиница;
			Если ТекЕдиница.Коэффициент<>0 Тогда
				Список.Остаток = Список.Остаток/ТекЕдиница.Коэффициент;
			КонецЕсли;
		КонецЕсли;
		Список.Цена = ТекЦена;
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура ВыполнитьПоиск()
	Активизировать("СтрПоиска");
	Если ПустоеЗначение(СтрПоиска)=1 Тогда
	    Возврат;
	КонецЕсли;
	
	РеквизитДляПоиска = ВидПоиска.ПолучитьЗначение(ВидПоиска.ТекущаяСтрока());

	Список = СоздатьОбъект("ТаблицаЗначений");
	// формируем выходную таблицу значений с результатами поиска
	Список.НоваяКолонка("Товар");
	Список.НоваяКолонка("ПрайсТовар");
	Список.НоваяКолонка("Код",,,,"Код",10); 
	Список.НоваяКолонка("Наименование",,,,"Наименование",40); 
	Список.НоваяКолонка("Остаток",,,,"Остаток",10);
	Список.НоваяКолонка("Единица",,,,"Единица",10);
	Список.НоваяКолонка("Цена");

	// колонку с сылкой не показываем
	Список.ВидимостьКолонки("Товар,ПрайсТовар,Цена",0);
	
	Если РеквизитДляПоиска="Категория" Тогда
		ПоискПоКатегории(Список);
	Иначе
		ПоискЭлемента(РеквизитДляПоиска,Список);
	КонецЕсли;

	Поз = 0;
	Если Список.КоличествоСтрок() > 0 Тогда
		Если Список.ВыбратьСтроку(Поз,"Результат поиска по "+
		                              ВидПоиска.ПолучитьЗначение(ВидПоиска.ТекущаяСтрока())+
									  " """+СтрПоиска+"""") = 0 Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Предупреждение("Элемент не найден!");
		Возврат;
	КонецЕсли;

	Если Поз > 0 Тогда
	    ИскомыйЭлемент	= Список.ПолучитьЗначение(Поз,"Товар");
	    ИскомыйЭлПрайса	= Список.ПолучитьЗначение(Поз,"ПрайсТовар");
		ИскомаяЦена		= Список.ПолучитьЗначение(Поз,"Цена");
	Иначе
		Возврат;
	КонецЕсли;
	
	Поз = 0;
	ВнКонтекст.ТаблицаПодбора.НайтиЗначение(ИскомыйЭлемент,Поз,"Элемент");
	
	Если Поз = 0 Тогда
		КолвоВтаблице=0;
	Иначе
		КолвоВтаблице=ВнКонтекст.ТаблицаПодбора.ПолучитьЗначение(Поз,"Количество");
	КонецЕсли;
		
	Колво=1;
	Если глВосстановитьЗначение(,"ЗапрашиватьКоличество")=Да Тогда
		Если ВвестиЧисло(Колво,"Количество товара '"+ИскомыйЭлемент.Наименование+"'",14,3)=0 Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли;
	Если  Поз>0 Тогда
		ВнКонтекст.ТаблицаПодбора.УстановитьЗначение(Поз,"Количество",КолвоВтаблице+Колво);
	Иначе
	    // Не нашли значит нужно добавить
		ВнКонтекст.ТаблицаПодбора.НоваяСтрока();
		ВнКонтекст.ТаблицаПодбора.Элемент = ИскомыйЭлемент;
		ВнКонтекст.ТаблицаПодбора.ЭлементПрайса = ИскомыйЭлПрайса;
		ВнКонтекст.ТаблицаПодбора.Количество = Колво;
		ВнКонтекст.ТаблицаПодбора.ЭлементЦены = ИскомаяЦена;
		ВнКонтекст.ТаблицаПодбора.Плюс=1;
		ВнКонтекст.ТаблицаПодбора.Минус=2;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриВыбореВидаПоиска()
	Вид=ВидПоиска.ПолучитьЗначение(ВидПоиска.ТекущаяСтрока());
	Если Вид="Категория" Тогда
	    Форма.СтрПоиска.НазначитьТип("Справочник.ВидыКатегорий");
		СтрПоиска=ПолучитьПустоеЗначение("Справочник.ВидыКатегорий");
		Форма.ПоПервым.Доступность(0);
		Форма.ПоВхождению.Доступность(0);
	Иначе
		ТипЗнач = ТипЗначенияСтр(СтрПоиска);
		Форма.СтрПоиска.НазначитьТип("Строка");
		Если ТипЗнач<>"Строка" Тогда
    		СтрПоиска="";
		КонецЕсли;
		Форма.ПоПервым.Доступность(1);
		Форма.ПоВхождению.Доступность(1);
	КонецЕсли;
КонецПроцедуры

                   
// ===============================
Процедура ОбновитьИсторию()
	Поз = ИсторияПоиска.НайтиЗначение(СтрПоиска);
	Если Поз=0 Тогда
	    //не нашли. нужно добавить
		ИсторияПоиска.ВставитьЗначение(1,СтрПоиска);
		// удалим последнне значение
		Если ИсторияПоиска.РазмерСписка()>15 Тогда
		    ИсторияПоиска.УдалитьЗначение(ИсторияПоиска.РазмерСписка());
		КонецЕсли;
	Иначе
		// переместим значение в начало
		ИсторияПоиска.УдалитьЗначение(Поз);
		ИсторияПоиска.ВставитьЗначение(1,СтрПоиска);
	КонецЕсли;
	
	//ВыполнитьПоиск(); 
	Форма.Обновить();
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	Перем Парам;
	Перем СписокРеквизитов,СтрокаСпискаРеквизитов;
	Перем Значение,Представление;
	
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)<>"СписокЗначений" Тогда
		Предупреждение("Через параметр формы должен быть передан список значений,"+РазделительСтрок+
		               "который содержит контекст выбранной формы и вид справочника!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	ВнКонтекст		= Парам.Получить("КонтекстВнешнейФормы");
	ВидСправочника	= Парам.Получить("ВидСправочника");
	КатегорияЦен	= Парам.Получить("КатегорияЦен");		// для прайса
	ДатаПериодическихРеквизитов = ТекущаяДата();
	// заполним список видов поиска
	ВидПоиска.ДобавитьЗначение("Код","коду");
	ВидПоиска.ДобавитьЗначение("Наименование","наименованию");
	ВидПоиска.ДобавитьЗначение("Артикул","артикулу");
	ВидПоиска.ДобавитьЗначение("Категория","категории");
	
	ВосстановитьЗначение(ВидСправочника+"ПодборТоваров",ИсторияПоиска);
	ПоПервым		= ВосстановитьЗначение(ВидСправочника+"ПоискПоПервым");
	ВидРеквизита	= ВосстановитьЗначение(ВидСправочника+"РеквизитПоиска");
	
	Поз	= ВидПоиска.НайтиЗначение(ВидРеквизита);
	Если Поз>0 Тогда
	    ВидПоиска.ТекущаяСтрока(Поз);
	Иначе
		ВидПоиска.ТекущаяСтрока(1);
	КонецЕсли;
	
	ПриВыбореВидаПоиска();
	
	Если ПоПервым=0 Тогда
	    ПоПервым=1;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога,ФлагСтандОбр)
	Перем Рез;
	Если ИдентЭлемДиалога = "СтрПоиска" Тогда
		Если ТипЗначения(СтрПоиска) = 2 Тогда
			// история сохраняется только для строки
			ФлагСтандОбр = 0;
			Если ИсторияПоиска.ВыбратьЗначение(Рез,,,,2) = 1 Тогда
				СтрПоиска = Рез;
		    КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()
	СохранитьЗначение(ВидСправочника+"ПодборТоваров",ИсторияПоиска);
	СохранитьЗначение(ВидСправочника+"РеквизитПоиска",ВидПоиска.ПолучитьЗначение(ВидПоиска.ТекущаяСтрока()));
	СохранитьЗначение(ВидСправочника+"ПоискПоПервым",ПоПервым);
КонецПроцедуры   

ИсторияПоиска = СоздатьОбъект("СписокЗначений");
