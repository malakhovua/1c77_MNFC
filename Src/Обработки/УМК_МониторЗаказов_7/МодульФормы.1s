Перем СтатическаяСтрокаНезавершенка;
Перем СтатическаяСтрокаВыпускиБудущихПериодов;
Перем ТекСтрокаЗаявкиНаПроизводствоКутер , ТекСтрокаЗаявкиНаПроизводствоКг, ТекСтрокаЗаявкиНаПроизводствоФарш;
Перем ТекСтрока, ТекКолонка;
Перем Тз_ТМЦ, Тз_Упаковки, ТЗ_ТМЦ_Упаковки, Тз_Родители , ТЗ_Фаршей, ТЗ_ФаршейСтроки, ТЗ_Инвентаризации,Тз_Итоги_Заданий_У; 
Перем ТЗ_КэшФаршей;
Перем Тз_ГруппировкиТМЦ, Тз_ГруппировкиТМЦУпаковки, Тз_Итоги_ТМЦ, Тз_Итоги_ТМЦУпаковки; 
Перем Тз_Остатки_ТМЦ,ТЗ_Остатки_Фактические, Тз_Незавершенка_ТМЦ, Тз_Итоги_Заданий, ТЗ_Вес_Кутера;
Перем ТЗ_РасшифровкаЗаказов; //--- будет использована для расшифровки ячеек Заказ\ТМЦ
Перем КоличествоСтрокТаблицыВводаДанных, КоличествоКолонокТаблицыВводаДанных;
Перем СамоеПервоеЗаполнение;
Перем СтатическаяСтрокаЗапас;
Перем СтатическаяСтрокаМаркировка;
Перем СтатическаяСтрокаОстаткиФактические;
Перем СтатическаяСтрокаОстатки;
Перем СтатическаяСтрокаВесКутера;
Перем СтатическаяСтрокаВесКутераФарша;
Перем СтатическаяСтрокаИтогиПроизводства;
Перем СтатическаяСтрокаИтогиПроизводстваСледующегоПериода; 
Перем СтатическаяПоследняяСтрокаОтчета;
Перем СтатическаяСтрокаПоследнегоЗаказаКлиента;
Перем СтатическаяСтрокаИтогиЗаказовКлиентов_раз;
Перем СтатическаяСтрокаИтогиЗаказовКлиентов_два;
Перем СтатическаяСтрокаНорма;
Перем СтатическаяСтрокаПоследнегоЗадания;
Перем СтатическаяСтрокаПоляВвода;
Перем СтатическаяСтрокаВыпуски;
Перем СкладОстатков;
Перем ВсегоКолонок;
Перем ТекЯчейка;
Перем ТЗ_ТМЦ_ДляВыборки;
Перем ВремяОбновления;
Перем СтрМаршруты, СписДобавленныхМаршрутов;
Перем ФильтрТМЦ;
Перем ТЗАкций;

//======================================================================
Процедура ДобавитьСтрокуЗадание() Далее
Процедура ВывестиТаблицуПолностью(ЗапомнитьЗначения = 0) Далее
Процедура ОбновитьЧисла(НомерСтроки, НомерКолонки, ТекЗначениеЯчейкиСтало, ТекЗначениеЯчейкиБыло, ТекАдрес, НеВводитьНовоеЗначение = 0) Далее

//======================================================================
Функция ПолучитьТМЦУпаковку(ТМЦ, Упаковка)
	Возврат СокрЛП(Строка(ТМЦ)) + "/**/" + СокрЛП(Строка(Упаковка));	
КонецФункции // гл

//======================================================================
Процедура ДобавитьСтрокуУпаковки(ТМЦ, Упаковка, ФормаУпаковки = 0)
	Если ФормаУпаковки <> 0 Тогда
		Если (СписокФормы.РазмерСписка() <> 0) Тогда
			Если СписокФормы.НайтиЗначение(ФормаУпаковки) = 0 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТЗ_ТМЦ_Упаковки.НоваяСтрока();
	ТЗ_ТМЦ_Упаковки.ТМЦ 		= ТМЦ;
	ТЗ_ТМЦ_Упаковки.Упаковка	= Упаковка;
	ТЗ_ТМЦ_Упаковки.ТМЦУпаковка = ПолучитьТМЦУпаковку(Тз_ТМЦ.ТМЦ, Упаковка);
	Если фНоваяВерсия = 1 Тогда
		ТЗ_ТМЦ_Упаковки.Головной	= ?(ПустоеЗначение(ТМЦ.ТМЦСТакимЖеФаршем) = 1, ТМЦ, ТМЦ.ТМЦСТакимЖеФаршем);
		ТЗ_ТМЦ_Упаковки.ГоловнойДО	= ТМЦ.ТМЦСТакимЖеФаршем;
	Иначе
		ТЗ_ТМЦ_Упаковки.Головной	= ?(ПустоеЗначение(ТМЦ.ОдинаковаяПрРазныеМарк) = 1, ТМЦ, ТМЦ.ОдинаковаяПрРазныеМарк);
		ТЗ_ТМЦ_Упаковки.ГоловнойДО	= ТМЦ.ОдинаковаяПрРазныеМарк;
	КонецЕсли;
	ТЗ_ТМЦ_Упаковки.Уровень = Тз_ТМЦ.ТМЦ.Уровень();
КонецПроцедуры // ДобавитьСтрокуУпаковки()

//======================================================================
Процедура ЗаполнитьТЗУпаковки()
 	ТЗ_ТМЦ_Упаковки.УдалитьСтроки();	
 	Тз_ТМЦ.ВыбратьСтроки();
	Пока Тз_ТМЦ.ПолучитьСтроку() = 1 Цикл
		ДобавитьСтрокуУпаковки(Тз_ТМЦ.ТМЦ, "");
//		Если Тз_ТМЦ.ТМЦ.НетБезУпаковки = 0 Тогда
			ДобавитьСтрокуУпаковки(Тз_ТМЦ.ТМЦ, НетУп);
		//КонецЕсли;
		
		списУпаковок = глПолучитьСписокВидовУпаковкиДляТМЦ(Тз_ТМЦ.ТМЦ, 1, 1, 1);
		списУпаковок.ВыбратьСтроки();
		Пока списУпаковок.ПолучитьСтроку() = 1 Цикл
			Если списУпаковок.ВидУпаковки <> НетУп Тогда
				ДобавитьСтрокуУпаковки(Тз_ТМЦ.ТМЦ, списУпаковок.ВидУпаковки, списУпаковок.ФормаУпаковки);
			КонецЕсли;			
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры // ЗаполнитьТЗУпаковки()

//======================================================================
Процедура ПолучитьТаблицуДляВыборки()
	//Если фНоваяВерсия = 1 Тогда
		ТЗ_ТМЦ.Сортировать("Порядок,ПорядокС,ТМЦ");
	//КонецЕсли;
	Если перСыБезУпаковки = 1 Тогда
		Тз_ТМЦ.Выгрузить(ТЗ_ТМЦ_ДляВыборки);
	ИначеЕсли перСыБезУпаковки = 2 Тогда	
		ТЗ_ТМЦ_Упаковки.Выгрузить(ТЗ_ТМЦ_ДляВыборки);
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Процедура ВывестиБлокТаблицы(РамкаЛево, РамкаВерх, РамкаПраво, РамкаНиз, ЦветФона1, ЦветФона2, ЦветФона3, ЦветТекста1, ЦветТекста2, ЦветТекста3,
	Контроль, ВертикальноеПоложение, ГоризонтальноеПоложение, Текст, Полужирный, РазмерШрифта, Доступность, Редактирование, ТекКол = 0, ТекСтр = 0, Курсив = 0)

	ТекКол = ?(ТекКол = 0, ТекКолонка, ТекКол);
	ТекСтр = ?(ТекСтр = 0, ТекСтрока, ТекСтр);
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).РамкаОбвести(РамкаЛево, РамкаВерх, РамкаПраво, РамкаНиз);	
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).ЦветФона(ЦветФона1, ЦветФона2, ЦветФона3);
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).ЦветТекста(ЦветТекста1, ЦветТекста2, ЦветТекста3);
 	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).Текст = Текст;
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).Контроль(Контроль);	
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).ВертикальноеПоложение(ВертикальноеПоложение);	//--- Число: 1 - снизу; 2 - сверху; 3 - по центру. 
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).ГоризонтальноеПоложение(ГоризонтальноеПоложение); //--- Число: 1 - слева; 2 - справа; 3 - по центру; 4 - по ширине. (5 - 8) - по выделенным столбцам: слева/справа/по центру/по ширине.
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).Полужирный(Полужирный);
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).Курсив(Курсив);
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).РазмерШрифта(РазмерШрифта);
	
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).Доступность(Доступность); 			//--- запретить на ввод данных
	Таблица.Область(ТекСтр, ТекКол,ТекСтр, ТекКол).Редактирование(Редактирование);			//--- запретить на ввод данных	
КонецПроцедуры // 

//======================================================================
Функция ПолучитьНомерСтрокиПоАдресу(ТекАдрес)	
	ПозицияКолонка 		= Найти(ТекАдрес,"C");
	СтрокаНОмерСтроки 	= Лев(ТекАдрес,ПозицияКолонка-1);
	НомерСтроки		 	= Сред(СтрокаНОмерСтроки,2);
	
	Возврат НомерСтроки;	
КонецФункции // ПолучитьНомерСтрокиПоАдресу(ТекАдрес)

//======================================================================
Функция ПолучитьНомерКолонкиПоАдресу(ТекАдрес)
	//Ищем букву "C"
	Позиция = Найти(ТекАдрес,"C");
	НомерКолонки = Сред(ТекАдрес,Позиция+1);
	
	Возврат НомерКолонки;	
КонецФункции // ПолучитьНомерКолонкиПоАдресу(ТекАдрес)

//====================================================================== //--- УМК Сандомирский В.Ю. (14.04.15)
Функция УстДоступность()	
	Возврат "";
КонецФункции // УстДоступность

//======================================================================
Процедура ДобавитьСтрокуТЗТМЦ(СпрТМЦ)
	Тз_ТМЦ.НоваяСтрока();
	Тз_ТМЦ.ТМЦ 			= СпрТМЦ.ТекущийЭлемент();
	Тз_ТМЦ.ТМЦУпаковка	= ПолучитьТМЦУпаковку(Тз_ТМЦ.ТМЦ, "");
	Если фНоваяВерсия = 1 Тогда	
		Тз_ТМЦ.Головной		= ?(ПустоеЗначение(СпрТМЦ.ТМЦСТакимЖеФаршем) = 1, СпрТМЦ.ТекущийЭлемент(), СпрТМЦ.ТМЦСТакимЖеФаршем);
		Тз_ТМЦ.ГоловнойДО = СпрТМЦ.ТМЦСТакимЖеФаршем; 
	Иначе
		Тз_ТМЦ.Головной		= ?(ПустоеЗначение(СпрТМЦ.ОдинаковаяПрРазныеМарк) = 1, СпрТМЦ.ТекущийЭлемент(), СпрТМЦ.ОдинаковаяПрРазныеМарк);
		Тз_ТМЦ.ГоловнойДО = СпрТМЦ.ОдинаковаяПрРазныеМарк; 				
	КонецЕсли;
	Тз_ТМЦ.Порядок = Тз_ТМЦ.НомерСтроки;
	Тз_ТМЦ.ПорядокС = ?(ПустоеЗначение(Тз_ТМЦ.ГоловнойДО) = 1, 0, Тз_ТМЦ.НомерСтроки);
	// колбаса с одинаковой маркировкой всё равно должна идти раньше та, где маркировка пустая
	Тз_ТМЦ.ПорядокД = ?(ПустоеЗначение(СпрТМЦ.ОдинаковаяПрРазныеМарк) = 1, 0, Тз_ТМЦ.НомерСтроки);
	Тз_ТМЦ.Уровень = Тз_ТМЦ.ТМЦ.Уровень();	
КонецПроцедуры // гл

//====================================================================== //--- Заполнение ТЗ ТМЦ по фильтру для вывода в таблицу
Процедура Заполнить_ТЗ_ТМЦ()	
	//--- тз тмц
	Тз_ТМЦ = СоздатьОбъект("ТаблицаЗначений");
	Тз_ТМЦ.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	Тз_ТМЦ.НоваяКолонка("Упаковка","Справочник.ВидыУпаковки");
	Тз_ТМЦ.НоваяКолонка("ТМЦУпаковка","Строка");
	Тз_ТМЦ.НоваяКолонка("Порядок","Число");
	Тз_ТМЦ.НоваяКолонка("ПорядокС","Число");
	Тз_ТМЦ.НоваяКолонка("ПорядокД","Число");
	Тз_ТМЦ.НоваяКолонка("Головной","Справочник.ТМЦ");
	Тз_ТМЦ.НоваяКолонка("ГоловнойДО","Справочник.ТМЦ");
	Тз_ТМЦ.НоваяКолонка("ЗКво1","Число");
	Тз_ТМЦ.НоваяКолонка("ЗКво2","Число");
	Тз_ТМЦ.НоваяКолонка("ЗКво3","Число");
	Тз_ТМЦ.НоваяКолонка("Уровень", "Число");
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	СпрТМЦ.ИспользоватьРодителя(ГотоваяПродукция);
	СпрТМЦ.ВыбратьЭлементы(1);
	Если (СписокТМЦ.РазмерСписка() = 0) ИЛИ (фСотрКакСписок = 0) Тогда
		Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
			Если СписокТМЦ.РазмерСписка() > 0 Тогда
				Если СписокТМЦ.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Если СпрТМЦ.ЭтоГруппа() = 0 Тогда
				ДобавитьСтрокуТЗТМЦ(СпрТМЦ.ТекущийЭлемент());
				Стр = 0;
			КонецЕсли;
		КонецЦикла;		
	Иначе
		Для Инд = 1 По СписокТМЦ.РазмерСписка() Цикл
			Зн = СписокТМЦ.ПолучитьЗначение(Инд);
			Если Зн.ЭтоГруппа() = 1 Тогда
				СпрТМЦ.ИспользоватьРодителя(Зн);
				СпрТМЦ.ВыбратьЭлементы();
				Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
					ДобавитьСтрокуТЗТМЦ(СпрТМЦ.ТекущийЭлемент());
				КонецЦикла;
			Иначе
				ДобавитьСтрокуТЗТМЦ(Зн);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ФильтрТМЦ = СоздатьОбъект("СписокЗначений");
	//Если фНоваяВерсия = 1 Тогда	
	// исполним хитрую сортировку. Нам нужно "сбить" товары с одним ТМЦ с таким же фаршем в блоки. Для этого идём по строкам.
	// для каждой строки проверяем есть ли ТМЦ с таким же фаршем, но с более ранним порядком. Если есть, то присваиваем ему этот же порядок
	// потом сортируем по порядку и наименованию
	// также проверим, чтобы колбаса не выступала родителем блока и при этом имела ссылку на другой ТМЦ с таким же фаршем
	// также нужен ещё один порядок для того, чтобы колбаса с одинаковой маркировкой вначале шла главная, потом та, где она используется
	
	Тз_ТМЦ.ВыбратьСтроки();
	Пока Тз_ТМЦ.ПолучитьСтроку() = 1 Цикл
		СтрК = Тз_ТМЦ.НомерСтроки;
		Стр = 0;
		Если ПустоеЗначение(Тз_ТМЦ.ГоловнойДО) = 0 Тогда			
			Если Тз_ТМЦ.НайтиЗначение(Тз_ТМЦ.ГоловнойДО, Стр, "ТМЦ") = 1 Тогда // находим первый ТМЦ блока. 				
				Если Тз_ТМЦ.НомерСтроки <> Стр Тогда
					Тз_ТМЦ.Порядок = Тз_ТМЦ.ПолучитьЗначение(Стр, "Порядок");
				КонецЕсли;
			Иначе // такого ТМЦ вообще нет в таблице, нужно добавить 
				Тз_ТМЦ.НоваяСтрока();
				Тз_ТМЦ.ТМЦ = ТЗ_ТМЦ.ПолучитьЗначение(СтрК, "ГоловнойДО");
				Тз_ТМЦ.ТМЦУпаковка	= ПолучитьТМЦУпаковку(Тз_ТМЦ.ТМЦ, "");
				Тз_ТМЦ.Головной = Тз_ТМЦ.ТМЦ;
				Тз_ТМЦ.ГоловнойДО = "";
				Тз_ТМЦ.Порядок = ТЗ_ТМЦ.ПолучитьЗначение(СтрК, "Порядок");
				Тз_ТМЦ.ПорядокС = 0;
				Тз_ТМЦ.Уровень = Тз_ТМЦ.ТМЦ.Уровень();
				Тз_ТМЦ.ПолучитьСтрокуПоНомеру(СтрК);
			КонецЕсли;
			
			Стр = 0;
			Если Тз_ТМЦ.НайтиЗначение(Тз_ТМЦ.ТМЦ, Стр, "ГоловнойДО") = 1 Тогда
				Сообщить("ТМЦ: " + Строка(Тз_ТМЦ.ТМЦ) + " выступает ТМЦ с таким же фаршем для других ТМЦ, но при этом в нём заполнено ТМЦ с таким же фаршем");
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Тз_ТМЦ.Сортировать("Порядок,ПорядокС,ПорядокД");	
	ТЗ_ТМЦ.Выгрузить(ФильтрТМЦ,,,"ТМЦ");		
КонецПроцедуры // Заполнить_ТЗ_Остатки()

//====================================================================== ТЗ кутеров
Процедура Заполнить_ТЗ_Кутеров()	
	//--- тз Фаршей 
	ТЗ_Фаршей = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Фаршей.НоваяКолонка("Фарш","Справочник.ТМЦ");
	ТЗ_Фаршей.НоваяКолонка("Кво");
	
	//--- тз Фаршей строки
	ТЗ_ФаршейСтроки = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_ФаршейСтроки.НоваяКолонка("Фарш","Справочник.ТМЦ");
	ТЗ_ФаршейСтроки.НоваяКолонка("Кво");
	
	//--- тз КэшФаршей 
	ТЗ_КэшФаршей = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_КэшФаршей.НоваяКолонка("Фарш","Справочник.ТМЦ");
	ТЗ_КэшФаршей.НоваяКолонка("Кутеров","Число",14);
	ТЗ_КэшФаршей.НоваяКолонка("НормаКутеров","Число",14);
		
	//--- Запрос и ТЗ по весу кутеров 
	ТЗ_Вес_Кутера = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Вес_Кутера.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	ТЗ_Вес_Кутера.НоваяКолонка("ВесКутера","Число",10);
	ТЗ_Вес_Кутера.НоваяКолонка("ВыходБезПотерь","Число",10);
	ТЗ_Вес_Кутера.НоваяКолонка("Норма","Документ.НормыЗатрат");
 	
	ВыборкаНорм = СоздатьОбъект("Документ.НормыЗатрат");
	ВыборкаНорм.ОбратныйПорядок();
	ВыборкаНорм.УстановитьФильтр(1,0);
	ВыборкаНорм.ВыбратьДокументы();
	Пока ВыборкаНорм.ПолучитьДокумент() = 1 Цикл		
		Если ВыборкаНорм.фДляЗаказа <> 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ЭнСтрока 	= "";
		ЭнСтолбец 	= "";
		 
		Если ТЗ_Вес_Кутера.НайтиЗначение(ВыборкаНорм.Продукция,ЭнСтрока,ЭнСтолбец) <> 1 Тогда
			ТЗ_Вес_Кутера.НоваяСтрока();
			ТЗ_Вес_Кутера.ТМЦ 			= ВыборкаНорм.Продукция;
			ТЗ_Вес_Кутера.ВесКутера 	= ВыборкаНорм.КвоПродукции - (ВыборкаНорм.КвоПродукции * ВыборкаНорм.Продукция.ПроцПотерь.Получить(ДатаЗаказа)/100);
			ТЗ_Вес_Кутера.ВыходБезПотерь= ВыборкаНорм.КвоПродукции;
			ТЗ_Вес_Кутера.Норма			= ВыборкаНорм.ТекущийДокумент();
		КонецЕсли;		
		
		ЭнСтрока_ 	= "";
		ЭнСтолбец_ 	= "";
		 
		Если ТЗ_Фаршей.НайтиЗначение(ВыборкаНорм.Продукция,ЭнСтрока_,ЭнСтолбец_) <> 1 Тогда
			ТЗ_Фаршей.НоваяСтрока();
			ТЗ_Фаршей.Фарш 	= ВыборкаНорм.Продукция;;
			ТЗ_Фаршей.Кво 	= ВыборкаНорм.КвоПродукции;
		КонецЕсли; 			
	КонецЦикла;
	
	//ТЗ_Вес_Кутера.ВыбратьСтроку();
	//ТЗ_Фаршей.ВыбратьСтроку();
	
	ТЗ_Фаршей.Выгрузить(ТЗ_ФаршейСтроки);	
КонецПроцедуры // Заполнить_ТЗ_Кутеров

//======================================================================
Процедура ДобавитьСтрокуТЗОстатков(ТМЦ, ВидУпаковки, ТМЦУпаковка, Остаток)
	Тз_Остатки_ТМЦ.НоваяСтрока();	
	Тз_Остатки_ТМЦ.ТМЦ				= ТМЦ;			
	Тз_Остатки_ТМЦ.Упаковка			= ВидУпаковки;
	Тз_Остатки_ТМЦ.ТМЦУпаковка		= ТМЦУпаковка;
	Тз_Остатки_ТМЦ.ОстатокТовара	= Остаток;
КонецПроцедуры // 

//====================================================================== ТЗ по остаткам
Процедура Заполнить_ТЗ_Остатки()	
	//--- ТЗ Остатки ТМЦ
	Тз_Остатки_ТМЦ = СоздатьОбъект("ТаблицаЗначений");
	Тз_Остатки_ТМЦ.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	Тз_Остатки_ТМЦ.НоваяКолонка("Упаковка","Справочник.ВидыУпаковки");
	Тз_Остатки_ТМЦ.НоваяКолонка("ТМЦУпаковка","Строка");
	Тз_Остатки_ТМЦ.НоваяКолонка("ОстатокТовара");
	
	ТЗ_Остатки_Фактические = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Остатки_Фактические.Загрузить(Тз_Остатки_ТМЦ);
	РегОст = СоздатьОбъект("Регистр.Остатки");
	
	//--- Делаем такуюже ТЗ инвентаризации
	ТЗ_Инвентаризации = СоздатьОбъект("ТаблицаЗначений");
	Тз_Остатки_ТМЦ.Выгрузить(ТЗ_Инвентаризации);	
	НуженРасчет = 0;
	Если ПустоеЗначение(ДокКонца) = 1 Тогда
		ДатаОстатков = ДатаЗадания; 
		Если ДатаОстатков < ПолучитьДатуТА() Тогда
			НуженРасчет = 1;
		КонецЕсли;
	Иначе
		ДатаОстатков = ДокКонца.ТекущийДокумент();
		Если ДокКонца.СравнитьТА() = -1 Тогда
			НуженРасчет = 1;
		КонецЕсли;
	КонецЕсли;
	
	РегОст.УстановитьЗначениеФильтра("МестоХранения", СкладОстатков, 1);
	Если ФильтрТМЦ.РазмерСписка() > 0 Тогда
		РегОст.УстановитьЗначениеФильтра("ТМЦ", ФильтрТМЦ, 2);
	Иначе
		РегОст.УстановитьЗначениеФильтра("ТМЦ", ГотоваяПродукция, 2);
	КонецЕсли;
	
	Если НуженРасчет = 1 Тогда
		РегОст.ВременныйРасчет(1);
		РассчитатьРегистрыПо(ДатаОстатков);
	КонецЕсли;

	ТИтоги = СоздатьОбъект("ТаблицаЗначений");
	РегОст.ВыгрузитьИтоги(ТИтоги, 1, 1);	
	ТИтоги.Свернуть("ТМЦ" + ?(перСыБезУпаковки = 1, "", ",ВидУпаковки"), "ОстатокТовара");
	
	ТИтоги.ВыбратьСтроки();
	Пока ТИтоги.ПолучитьСтроку() = 1 Цикл
		ДобавитьСтрокуТЗОстатков(ТИтоги.ТМЦ, "", ПолучитьТМЦУпаковку(ТИтоги.ТМЦ, ""), ТИтоги.ОстатокТовара);
		Если перСыБезУпаковки = 2 Тогда
			ТекВУП = ?(ПустоеЗначение(ТИтоги.ВидУпаковки) = 1, НетУп, ТИтоги.ВидУпаковки);
			ДобавитьСтрокуТЗОстатков(ТИтоги.ТМЦ, ТекВУП, ПолучитьТМЦУпаковку(ТИтоги.ТМЦ, ТекВУП), ТИтоги.ОстатокТовара);			
		КонецЕсли;
	КонецЦикла;
	Если перСыБезУпаковки = 2 Тогда
		Тз_Остатки_ТМЦ.Свернуть("ТМЦ,Упаковка,ТМЦУпаковка", "ОстатокТовара");
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбИнвентаризация) = 1 Тогда
		ТЗ_Остатки_Фактические.Загрузить(Тз_Остатки_ТМЦ);
	КонецЕсли;
КонецПроцедуры // Заполнить_ТЗ_Остатки()

//====================================================================== ТЗ незавершентка
Процедура Заполнить_ТЗ_Незавершенка()	
	Если ПустоеЗначение(ДокКонца) = 1 Тогда
		НачалоПериода 	= ДатаЗадания; 
	Иначе
		НачалоПериода 	= ДокКонца.ТекущийДокумент();
	КонецЕсли;	
	КонецПериода	= ДатаЗаказа;
	
	//--- Сформируем ТЗ Фаршей Ветчин	
	Тз_ФаршейВетчин = СоздатьОбъект("ТаблицаЗначений");
	Тз_ФаршейВетчин.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	Тз_ФаршейВетчин.НоваяКолонка("ОстатокТовара");
	
	Тз_Незавершенка_ТМЦ = СоздатьОбъект("ТаблицаЗначений");
	Тз_Незавершенка_ТМЦ.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	Тз_Незавершенка_ТМЦ.НоваяКолонка("ТМЦУпаковка","Строка");
	Тз_Незавершенка_ТМЦ.НоваяКолонка("ОстатокТовара");
	// сформируем фильтр по ТМЦ, у которых уровень передела 1
	СписПФ = СоздатьОбъект("СписокЗначений");
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	СпрТМЦ.ВыбратьЭлементыПоРеквизиту("ВидТМЦ", Перечисление.ВидыТМЦ.Полуфабрикат, 0, 0);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если СпрТМЦ.УровеньПередела.Получить(НачалоПериода) = 1 Тогда
			СписПФ.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
		КонецЕсли;
	КонецЦикла;
	
	Запрос_ФаршейВитчин = СоздатьОбъект("Запрос");
	ТекстЗапросаФаршейВитчин = 
	"//{{ЗАПРОС(по фаршам для ветчин)
	|Период с НачалоПериода по НачалоПериода;	
	|ТМЦ  					= Регистр.Остатки.ТМЦ;
//	|ТМЦУровеньПередела		= Регистр.Остатки.ТМЦ.УровеньПередела;
	|Количество				= Регистр.Остатки.ОстатокТовара;
	|Функция ОстатокТовара 	= НачОст(Количество);
	|Группировка ТМЦ без групп без упорядочивания;
//	|Условие(ТМЦУровеньПередела = 1);
	|Условие(ТМЦ в СписПФ);
	|Условие(Количество > 0);
	|
	|";
	Если Запрос_ФаршейВитчин.Выполнить(ТекстЗапросаФаршейВитчин) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос_ФаршейВитчин.Выгрузить(Тз_ФаршейВетчин);
		
	
	//--- ЗАПРОС по незавершенке	 	
	//--- ТЗ Незавершенка ТМЦ
	
 	Запрос_Незавершенка_ТМЦ = СоздатьОбъект("Запрос");
	ТекстЗапроса_Незавершенка_ТМЦ = 
	
	// --- Вариант № 1
 	
	//"//{{ЗАПРОС(по незавершенке)
	//|Период с НачалоПериода по КонецПериода;	
	//|ТМЦ  		= Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Продукция;
	//|Заказ      = Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Заказ;
	//|ДатаЗаказ  = Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Заказ.ДатаДок;
	//|Количество = Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Количество;
	//|Функция ОстатокТовара = Сумма(Количество);
	//|Группировка ТМЦ без групп без упорядочивания;
	//|Условие(ДатаЗаказ < ДатаЗаказа);
	//|
	//|";
	
	
	//// --- Вариант № 2
	//"//{{ЗАПРОС(по незавершенке)
	//|Период с НачалоПериода по КонецПериода;	
	//|ТМЦ  	           	= Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Продукция , Регистр.ПроизводственныеЗатраты.Продукция;
	//|Заказ             	= Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Заказ,      Регистр.ПроизводственныеЗатраты.Заказ;
	//|ДатаСписания  		= Регистр.ПроизводственныеЗатраты.ТекущийДокумент.ДатаДок;
	//|Количество       	= Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Количество;
	//|Функция ОстатокТовара = Сумма(Количество);
	//|Группировка ТМЦ без групп без упорядочивания;
	//|Условие(ДатаСписания <  НачалоПериода);
 	//|
	//|";
	
	// --- Вариант № 3
 	
	"//{{ЗАПРОС(по незавершенке)
	|Период с НачалоПериода по КонецПериода;	
	|	
	|ТМЦ  		= Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Продукция;
	|Заказ      = Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Заказ;
	|ДатаЗаказ  = Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Заказ.ДатаДок;
	|Количество = Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Количество;
	|Функция ОстатокТовара = Сумма(Количество);
	|Группировка Заказ;
	|Группировка ТМЦ без групп без упорядочивания;
	|
	|";
	
	Если ФильтрТМЦ.РазмерСписка() > 0 Тогда
		ТекстЗапроса_Незавершенка_ТМЦ = ТекстЗапроса_Незавершенка_ТМЦ + "
		|
		|Условие (ТМЦ в ФильтрТМЦ);
		|";
	Иначе
		ТекстЗапроса_Незавершенка_ТМЦ = ТекстЗапроса_Незавершенка_ТМЦ + "
		|
		|Условие (ТМЦ в ГотоваяПродукция);
		|
		|";	
	КонецЕсли;
	
	Если Запрос_Незавершенка_ТМЦ.Выполнить(ТекстЗапроса_Незавершенка_ТМЦ) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока Запрос_Незавершенка_ТМЦ.Группировка(1) = 1 Цикл	//--- Заказ		
		Если ПустоеЗначение(Запрос_Незавершенка_ТМЦ.Заказ) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
 		Пока Запрос_Незавершенка_ТМЦ.Группировка(2) = 1 Цикл	//--- Продукция 			
 				НашлиСписание = 0;
			ЭтоВетчина =  0;
			
	 		//--- Проверяем когда было списание
			Док = СоздатьОбъект("Документ");
			СписДок = СоздатьОбъект("СписокЗначений");
			Док.ВыбратьПодчиненныеДокументы(,,Запрос_Незавершенка_ТМЦ.Заказ);
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если Док.Вид() = "СписаниеТМЦВПроизводство" Тогда
					Если Док.ПродукцияШ = Запрос_Незавершенка_ТМЦ.ТМЦ Тогда
						//--- Ищем содержимое таблице фаршей ветчины
						ЭтоВетчина = 0;
						Док.ВыбратьСтроки();
						Пока Док.ПолучитьСтроку() = 1 Цикл
							ТекСтр = "";
							ТекСтлб = "";
							Если Тз_ФаршейВетчин.НайтиЗначение(Док.ТМЦ,ТекСтр,ТекСтлб) = 1 Тогда
								//Тз_ФаршейВетчин.ПолучитьСтрокуПоНомеру(ТекСтр);								//--- технологически
								//Сообщить("" + Тз_ФаршейВетчин.ТМЦ + " " + Тз_ФаршейВетчин.ОстатокТовара);		//--- технологически									
								ПозицияВСпискеВетчины = СписокВетчины.НайтиЗначение(Запрос_Незавершенка_ТМЦ.ТМЦ);
								
								Если ПозицияВСпискеВетчины = 0 Тогда
									Представление=""+Запрос_Незавершенка_ТМЦ.ТМЦ + " (" + Запрос_Незавершенка_ТМЦ.ТМЦ.Код + ")" ;
									СписокВетчины.ДобавитьЗначение(Запрос_Незавершенка_ТМЦ.ТМЦ,Представление);
									СписокВетчины.Пометка(СписокВетчины.РазмерСписка(),1);
									ЭтоВетчина = 1;								
								Иначе
									Если СписокВетчины.Пометка(ПозицияВСпискеВетчины) = 1 Тогда
										ЭтоВетчина = 1;
									КонецЕсли;										
								КонецЕсли;										
							КонецЕсли;		
						КонецЦикла;
						
						Если ЭтоВетчина = 1 Тогда
							Прервать;
						КонецЕсли;
						
						Если ПустоеЗначение(ДокКонца) = 1 Тогда		
							Если Док.ДатаДок < ДатаЗадания Тогда
								НашлиСписание = 1;
								Прервать;
							КонецЕсли;					
						Иначе								
							Если Док.ДатаДок < ДокКонца.ДатаДок Тогда
								НашлиСписание = 1;
								Прервать;
							ИначеЕсли Док.ДатаДок = ДокКонца.ДатаДок Тогда										
								ТекЧасы = "";
								ТекМинуты = "";
								ТекСекунды = "";
								Док.ПолучитьВремя(ТекЧасы,ТекМинуты,ТекСекунды);
								ДокТекПозицияСек = (ТекЧасы * 3600) + (ТекМинуты * 60) + ТекСекунды;
								
								ТекЧасы = "";
								ТекМинуты = "";
								ТекСекунды = "";
								ДокКонца.ПолучитьВремя(ТекЧасы,ТекМинуты,ТекСекунды);
								ДокКонцаТекПозицияСек = (ТекЧасы * 3600) + (ТекМинуты * 60) + ТекСекунды;								
								
								Если ДокТекПозицияСек < ДокКонцаТекПозицияСек Тогда
									НашлиСписание = 1;
									Прервать;
								КонецЕсли;								
							КонецЕсли;								
						КонецЕсли;								
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
			
			Если (ЭтоВетчина = 1) ИЛИ (НашлиСписание = 1)  Тогда
				Тз_Незавершенка_ТМЦ.НоваяСтрока();
				Тз_Незавершенка_ТМЦ.ТМЦ = Запрос_Незавершенка_ТМЦ.ТМЦ;
				Тз_Незавершенка_ТМЦ.ТМЦУпаковка = ПолучитьТМЦУпаковку(Запрос_Незавершенка_ТМЦ.ТМЦ, ""); 
				Тз_Незавершенка_ТМЦ.ОстатокТовара = Запрос_Незавершенка_ТМЦ.ОстатокТовара;
				Если перСыБезУпаковки = 2 Тогда
					Тз_Незавершенка_ТМЦ.НоваяСтрока();
					Тз_Незавершенка_ТМЦ.ТМЦ = Запрос_Незавершенка_ТМЦ.ТМЦ;
					Тз_Незавершенка_ТМЦ.ТМЦУпаковка = ПолучитьТМЦУпаковку(Запрос_Незавершенка_ТМЦ.ТМЦ, НетУп); 
					Тз_Незавершенка_ТМЦ.ОстатокТовара = Запрос_Незавершенка_ТМЦ.ОстатокТовара;					
				КонецЕсли;
			КонецЕсли;								
 		КонецЦикла; 		
 	КонецЦикла;
 	
 	Тз_Незавершенка_ТМЦ.Свернуть("ТМЦ,ТМЦУпаковка", "ОстатокТовара");
КонецПроцедуры // Заполнить_ТЗ_Остатки()

//======================================================================
Процедура ПодготовитьТЗДляЗаказовПокупателей(НачалоПериода, КонецПериода, ТекстЗапросаЗаказовКлиентов, ГруппировкаПоДокРезерва = 0, ПериодПоДокСнятия = 0)
	Позиция = СформироватьПозициюДокумента(ДатаЗаказа, Число(Лев(Время,2)), Число(Прав(Время, 2)), 59);
	Если ПериодПоДокСнятия = 0 Тогда
		//--- тз групп Контрагентов
		Тз_Родители = СоздатьОбъект("ТаблицаЗначений");
		Тз_Родители.НоваяКолонка("Родитель");
		Тз_Родители.НоваяКолонка("Контрагент");
		Тз_Родители.НоваяКолонка("ДатаРезерва");		
		Тз_Родители.НоваяКолонка("ОриентировочныйЗаказ","Число",1); //--- Флаг ориентировочного заказа	
		
		//--- тз группировки ТМЦ
		Тз_ГруппировкиТМЦ = СоздатьОбъект("ТаблицаЗначений");
		Тз_ГруппировкиТМЦ.НоваяКолонка("РодительТМЦ");
		Тз_ГруппировкиТМЦ.НоваяКолонка("КонтрагентТМЦ");
		Тз_ГруппировкиТМЦ.НоваяКолонка("КвоСумма","Число",14,0);
		Тз_ГруппировкиТМЦ.НоваяКолонка("КвоШтСумма","Число",14,0); 
		Тз_ГруппировкиТМЦ.НоваяКолонка("КвоПересчетСумма","Число",14,0);
		
		//--- тз группировки ТМЦУпаковки
		Тз_ГруппировкиТМЦУпаковки = СоздатьОбъект("ТаблицаЗначений");
		Тз_ГруппировкиТМЦУпаковки.НоваяКолонка("РодительТМЦУпаковка");
		Тз_ГруппировкиТМЦУпаковки.НоваяКолонка("КонтрагентТМЦУпаковка");
		Тз_ГруппировкиТМЦУпаковки.НоваяКолонка("КвоСумма","Число",14,0);
		Тз_ГруппировкиТМЦУпаковки.НоваяКолонка("КвоШтСумма","Число",14,0); 
		Тз_ГруппировкиТМЦУпаковки.НоваяКолонка("КвоПересчетСумма","Число",14,0);
		Тз_ГруппировкиТМЦУпаковки.НоваяКолонка("Стикеровать", "Число");
		
		//--- ТЗ Итоги ТМЦ
		Тз_Итоги_ТМЦ = СоздатьОбъект("ТаблицаЗначений");
		Тз_Итоги_ТМЦ.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
		Тз_Итоги_ТМЦ.НоваяКолонка("КвоСумма","Число",14,0);
		Тз_Итоги_ТМЦ.НоваяКолонка("КвоШтСумма","Число",14,0); 
		Тз_Итоги_ТМЦ.НоваяКолонка("КвоПересчетСумма","Число",14,0);	
		
		//--- ТЗ Итоги ТМЦУпаковки
		Тз_Итоги_ТМЦУпаковки = СоздатьОбъект("ТаблицаЗначений");
		Тз_Итоги_ТМЦУпаковки.НоваяКолонка("ТМЦУпаковка");
		Тз_Итоги_ТМЦУпаковки.НоваяКолонка("КвоСумма","Число",14,0);
		Тз_Итоги_ТМЦУпаковки.НоваяКолонка("КвоШтСумма","Число",14,0); 
		Тз_Итоги_ТМЦУпаковки.НоваяКолонка("КвоПересчетСумма","Число",14,0);	
		
		Тз_Упаковки.УдалитьСтроки();	
		//--- Добавляем Ориентировочные заказы	
		Для А=1 По СписокОриентировочныхЗаказов.РазмерСписка() Цикл			
			ТекОриентировочныйЗаказ = СписокОриентировочныхЗаказов.ПолучитьЗначение(А);		
			Если (фТолькоДейств = 1) И (ТекОриентировочныйЗаказ.Действующий = 0) Тогда
				Продолжить;				
			КонецЕсли;
			Тз_Родители.НоваяСтрока();	
			Тз_Родители.Родитель 	= СокрЛП(Строка("Ориентировочные заказы")) + СокрЛП(ТекОриентировочныйЗаказ.Примечание);
			Тз_Родители.Контрагент 	= СокрЛП(Строка("Ориентировочные заказы")) + СокрЛП(ТекОриентировочныйЗаказ.Примечание);
			Тз_Родители.ОриентировочныйЗаказ = 1;
			
			ТекОриентировочныйЗаказ.ВыбратьСтроки();
			Пока ТекОриентировочныйЗаказ.ПолучитьСтроку() = 1 Цикл					
				Тз_ГруппировкиТМЦ.НоваяСтрока();	
				Тз_ГруппировкиТМЦ.РодительТМЦ 		= СокрЛП(Строка("Ориентировочные заказы"))+ СокрЛП(ТекОриентировочныйЗаказ.Примечание) + СокрЛП(Строка(ТекОриентировочныйЗаказ.ТМЦ));
				Тз_ГруппировкиТМЦ.КонтрагентТМЦ		= СокрЛП(Строка("Ориентировочные заказы"))+ СокрЛП(ТекОриентировочныйЗаказ.Примечание) + СокрЛП(Строка(ТекОриентировочныйЗаказ.ТМЦ));
				Тз_ГруппировкиТМЦ.КвоПересчетСумма	= ТекОриентировочныйЗаказ.Кво;	
				
				Тз_Итоги_ТМЦ.НоваяСтрока();
				Тз_Итоги_ТМЦ.ТМЦ 					= ТекОриентировочныйЗаказ.ТМЦ;
				Тз_Итоги_ТМЦ.КвоПересчетСумма 		= ТекОриентировочныйЗаказ.Кво;				
				Если перСыБезУпаковки = 2 Тогда
					Тз_Итоги_ТМЦУпаковки.НоваяСтрока();
					Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка				= ПолучитьТМЦУпаковку(ТекОриентировочныйЗаказ.ТМЦ, ТекОриентировочныйЗаказ.ВидУпаковки);
					Тз_Итоги_ТМЦУпаковки.КвоПересчетСумма 			= ТекОриентировочныйЗаказ.Кво;				
					Тз_ГруппировкиТМЦУпаковки.НоваяСтрока();	
					Тз_ГруппировкиТМЦУпаковки.РодительТМЦУпаковка 	= СокрЛП(Строка("Ориентировочные заказы"))+ СокрЛП(ТекОриентировочныйЗаказ.Примечание) + Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;
					Тз_ГруппировкиТМЦУпаковки.КонтрагентТМЦУпаковка = СокрЛП(Строка("Ориентировочные заказы"))+ СокрЛП(ТекОриентировочныйЗаказ.Примечание) + Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;
					Тз_ГруппировкиТМЦУпаковки.КвоПересчетСумма 		= ТекОриентировочныйЗаказ.Кво;					
					Тз_Упаковки.НоваяСтрока();
					Тз_Упаковки.ТМЦ 								= ТекОриентировочныйЗаказ.ТМЦ;
					Тз_Упаковки.Упаковка							= ТекОриентировочныйЗаказ.ВидУпаковки;
					Тз_Упаковки.ТМЦУпаковка 						= Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;
				КонецЕсли;				
			КонецЦикла;			
		КонецЦикла;
		Если ПустоеЗначение(ДокСнятие) = 1 Тогда		
			НачалоПериода 	= ДатаЗаказа;			
			КонецПериода	= Позиция;	
		Иначе		
			НачалоПериода 	= ДокСнятие.ТекущийДокумент();
			КонецПериода	= ДокСнятие.ТекущийДокумент();		
		КонецЕсли;		
	Иначе
		НачалоПериода 	= ДокСнятие.ТекущийДокумент();
		КонецПериода	= Позиция;		
	КонецЕсли;

	Если СписокЗаказов.РазмерСписка() > 0 Тогда
		НачалоПериода = '01.01.2099';
		КонецПериода = '01.01.2000'; 
		Для Инд = 1 По СписокЗаказов.РазмерСписка() Цикл
			НачалоПериода = Мин(СписокЗаказов.ПолучитьЗначение(Инд).ДатаДок, НачалоПериода);
			КонецПериода = Макс(СписокЗаказов.ПолучитьЗначение(Инд).ДатаДок, КонецПериода);
		КонецЦикла;
	КонецЕсли;
	ТекстЗапросаЗаказовКлиентов = 
	"//{{ЗАПРОС(по заказам клиентов)
	|Период с НачалоПериода по КонецПериода;
	|Контрагент 		= Регистр.Резервы.ДокументРезерва.Контрагент;
	|ТМЦ 				= Регистр.Резервы.ТМЦ;
	|ДокументРезерва	= Регистр.Резервы.ДокументРезерва;
	|ДатаРезерва		= Регистр.Резервы.ДокументРезерва.ДатаДок;";
	
	Если перСыБезУпаковки = 2 Тогда
		ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "	
		|ВидУпаковки 	= Регистр.Резервы.ВидУпаковки;";
	КонецЕсли;	
	
	ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
	|Резерв 		= Регистр.Резервы.Резерв;";
	
	Если (СписокЗаказов.РазмерСписка() > 0) ИЛИ (ПериодПоДокСнятия = 1) Тогда
		ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
		|Функция КвоПересчетСумма 	= Приход(Резерв);";
	Иначе
		ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
		|Функция КвоПересчетСумма 	= КонОст(Резерв);";
	КонецЕсли;
	
	ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
	|Группировка ДатаРезерва;" + 
	?(ГруппировкаПоДокРезерва = 1, "
	|Группировка ДокументРезерва;","
	|Группировка Контрагент без групп без упорядочивания;") + "
	|Группировка ТМЦ без групп без упорядочивания;
	|";
	
	Если перСыБезУпаковки = 2 Тогда
		ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
		|Группировка ВидУпаковки без групп без упорядочивания;
		|";
	КонецЕсли;
	
	Если ГруппировкаПоДокРезерва = 0 Тогда
		ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
		|Группировка ДокументРезерва;";
	КонецЕсли;
	
	Если ФильтрТМЦ.РазмерСписка() > 0 Тогда
		ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
		|Условие (ТМЦ в ФильтрТМЦ);";
	Иначе
		ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
		|Условие (ТМЦ в ГотоваяПродукция);";	
	КонецЕсли;
	
	Если СписокКонтрагентов.РазмерСписка() > 0 Тогда		
		Если фКромеСписокКонтрагентов = 0 Тогда			
			ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
			|Условие (Контрагент в СписокКонтрагентов);";			
		Иначе				
			ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
			|Условие (НЕ (Контрагент в СписокКонтрагентов));";			
		КонецЕсли;		
	КонецЕсли;
	ТекстЗапросаЗаказовКлиентов = ТекстЗапросаЗаказовКлиентов + "
	|Условие (ДокументРезерва В СписокЗаказов);";	
КонецПроцедуры // 

Процедура ДобавитьСтрокиВТаблицу_ПоЗаказамПокупателей_2йУровень(ЗапросЗаказыКлиентов, СУпаковкой = 0)
	ДобавляемоеКво = ЗапросЗаказыКлиентов.КвоПересчетСумма;
	Тз_Родители.НоваяСтрока();	
	Тз_Родители.Контрагент 		= ЗапросЗаказыКлиентов.Контрагент;
	Если Тз_Родители.Контрагент.Уровень() = 2 Тогда 					//--- по уровню все что на 2м уровне то родители даже контрагенты
		Тз_Родители.Родитель 		= ЗапросЗаказыКлиентов.Контрагент;
	Иначе
		Тз_Родители.Родитель 		= ЗапросЗаказыКлиентов.Контрагент.Родитель;
	КонецЕсли;	
	Тз_Родители.ДатаРезерва	 	= ЗапросЗаказыКлиентов.ДатаРезерва;								
	
	Тз_ГруппировкиТМЦ.НоваяСтрока();								
	Если Тз_Родители.Контрагент.Уровень() = 2 Тогда 					//--- по уровню все что на 2м уровне то родители даже контрагенты
		Тз_ГруппировкиТМЦ.РодительТМЦ 		= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДатаРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.Контрагент)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.ТМЦ));
	Иначе
		Тз_ГруппировкиТМЦ.РодительТМЦ 		= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДатаРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.Контрагент.Родитель)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.ТМЦ));
	КонецЕсли;	
	
	Тз_ГруппировкиТМЦ.КонтрагентТМЦ 	= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДатаРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.Контрагент)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.ТМЦ));			
	Тз_ГруппировкиТМЦ.КвоПересчетСумма	= ДобавляемоеКво;	
	Тз_Итоги_ТМЦ.НоваяСтрока();
	Тз_Итоги_ТМЦ.ТМЦ 					= ЗапросЗаказыКлиентов.ТМЦ;
	Тз_Итоги_ТМЦ.КвоПересчетСумма 		= ДобавляемоеКво;	

	Если СУпаковкой = 1 Тогда
		Тз_Итоги_ТМЦУпаковки.НоваяСтрока();
		Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка		= ПолучитьТМЦУпаковку(ЗапросЗаказыКлиентов.ТМЦ, ЗапросЗаказыКлиентов.ВидУпаковки);
		Тз_Итоги_ТМЦУпаковки.КвоПересчетСумма 	= ДобавляемоеКво;
		
		Тз_ГруппировкиТМЦУпаковки.НоваяСтрока();	
		Если Тз_Родители.Контрагент.Уровень() = 2 Тогда 					//--- по уровню все что на 2м уровне то родители даже контрагенты
			Тз_ГруппировкиТМЦУпаковки.РодительТМЦУпаковка 		= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДатаРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.Контрагент)) + Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;
		Иначе
			Тз_ГруппировкиТМЦУпаковки.РодительТМЦУпаковка 		= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДатаРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.Контрагент.Родитель)) + Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;
		КонецЕсли;										
		Тз_ГруппировкиТМЦУпаковки.КонтрагентТМЦУпаковка 	= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДатаРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.Контрагент)) + Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;
		Тз_ГруппировкиТМЦУпаковки.КвоПересчетСумма 		= ДобавляемоеКво;
		Тз_Упаковки.НоваяСтрока();
		Тз_Упаковки.ТМЦ 						= ЗапросЗаказыКлиентов.ТМЦ;
		Тз_Упаковки.Упаковка					= ЗапросЗаказыКлиентов.ВидУпаковки;
		Тз_Упаковки.ТМЦУпаковка 				= Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;		
	КонецЕсли;	
КонецПроцедуры

//====================================================================== ТЗ по заказам покупателей
Процедура Заполнить_ТЗ_ПоЗаказамПокупателей_2йУровень()
Перем НачалоПериода, КонецПериода, ТекстЗапросаЗаказовКлиентов;
	ПодготовитьТЗДляЗаказовПокупателей(НачалоПериода, КонецПериода, ТекстЗапросаЗаказовКлиентов, 0);

	//--- Формирую Таблицы Значений по зказам покупателей	
	ДокЗаказПокупателя = СоздатьОбъект("Документ.УМК_ЗаказКлиента");
	ЗапросЗаказыКлиентов = СоздатьОбъект("Запрос");		
		
	Если ЗапросЗаказыКлиентов.Выполнить(ТекстЗапросаЗаказовКлиентов) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если перСыБезУпаковки = 1 Тогда //--- без учета упаковки 	
	 	Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва	 		
	 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- Конетрагент		 				
				Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ					
					Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда									
						Пока ЗапросЗаказыКлиентов.Группировка(4) = 1 Цикл	//--- ДокументРезерва								
							ТекДокСнятие = СоздатьОбъект("Документ");
							ТекДокСнятие.ВыбратьПодчиненныеДокументы(,,ЗапросЗаказыКлиентов.ДокументРезерва);
							ЗаказСнят = 0;
							Пока ТекДокСнятие.ПолучитьДокумент() = 1 Цикл
								Если ТекДокСнятие.Вид() = "УМК_СнятиеРезерва" Тогда
									Если ТекДокСнятие.Проведен() = 1 Тогда
										ЗаказСнят = 1;
										Прервать;
									КонецЕсли;	
								КонецЕсли;
							КонецЦикла;
							
							Если ЗаказСнят = 0 Тогда										
								ДобавитьСтрокиВТаблицу_ПоЗаказамПокупателей_2йУровень(ЗапросЗаказыКлиентов);
							КонецЕсли;											
						КонецЦикла;								
					КонецЕсли;					
				КонецЦикла;				
			КонецЦикла;								
		КонецЦикла;			
	ИначеЕсли перСыБезУпаковки = 2 Тогда //--- с учетом упаковки					
		Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва	 		
	 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- Конетрагент		 				
				Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ					
					Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда						
						Пока ЗапросЗаказыКлиентов.Группировка(4) = 1 Цикл	//--- Упаковка							
							Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда									
								Пока ЗапросЗаказыКлиентов.Группировка(5) = 1 Цикл	//--- ДокументРезерва										
									ТекДокСнятие = СоздатьОбъект("Документ");
									ТекДокСнятие.ВыбратьПодчиненныеДокументы(,,ЗапросЗаказыКлиентов.ДокументРезерва);
									ЗаказСнят = 0;
									Пока ТекДокСнятие.ПолучитьДокумент() = 1 Цикл
										Если ТекДокСнятие.Вид() = "УМК_СнятиеРезерва" Тогда
											Если ТекДокСнятие.Проведен() = 1 Тогда
												ЗаказСнят = 1;
												Прервать;
											КонецЕсли;	
										КонецЕсли;
									КонецЦикла;
									
									Если ЗаказСнят = 0 Тогда
										ДобавитьСтрокиВТаблицу_ПоЗаказамПокупателей_2йУровень(ЗапросЗаказыКлиентов, 1);
									КонецЕсли;													
								КонецЦикла;
							КонецЕсли;	
						КонецЦикла;		
					КонецЕсли;					
				КонецЦикла;				
			КонецЦикла;								
		КонецЦикла;				
	КонецЕсли;
	
	//--- Если документ снятия задан прибавляем дельту заказов		
	Если (ПустоеЗначение(ДокСнятие) = 0) И (СписокЗаказов.РазмерСписка() = 0) Тогда
		ПодготовитьТЗДляЗаказовПокупателей(НачалоПериода, КонецПериода, ТекстЗапросаЗаказовКлиентов, 0, 1);
		Если ЗапросЗаказыКлиентов.Выполнить(ТекстЗапросаЗаказовКлиентов) = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если перСыБезУпаковки = 1 Тогда //--- без учета упаковки 		
		 	Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва		 		
		 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- Конетрагент			 				
					Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ						
						Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда										
							Пока ЗапросЗаказыКлиентов.Группировка(4) = 1 Цикл	//--- ДокументРезерва																												
								ДобавитьСтрокиВТаблицу_ПоЗаказамПокупателей_2йУровень(ЗапросЗаказыКлиентов);
							КонецЦикла;													
						КонецЕсли;						
					КонецЦикла;					
				КонецЦикла;									
			КонецЦикла;
			
		ИначеЕсли перСыБезУпаковки = 2 Тогда //--- с учетом упаковки			
			Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва		 		
		 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- Конетрагент			 				
					Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ						
						Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда						
							Пока ЗапросЗаказыКлиентов.Группировка(4) = 1 Цикл	//--- Упаковка								
								Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда										
									Пока ЗапросЗаказыКлиентов.Группировка(5) = 1 Цикл	//--- ДокументРезерва
										ДобавитьСтрокиВТаблицу_ПоЗаказамПокупателей_2йУровень(ЗапросЗаказыКлиентов, 1);
									КонецЦикла;																	
								КонецЕсли;														
							КонецЦикла;							
						КонецЕсли;							
					КонецЦикла;					
				КонецЦикла;									
			КонецЦикла;			
		КонецЕсли;			
	КонецЕсли;		
	
	Тз_Родители.Свернуть("ДатаРезерва,Родитель,ОриентировочныйЗаказ","");
	Тз_ГруппировкиТМЦ.Свернуть("РодительТМЦ","КвоПересчетСумма");	
 	Тз_ГруппировкиТМЦУпаковки.Свернуть("РодительТМЦУпаковка,Стикеровать","КвоПересчетСумма");
	Тз_Родители.Сортировать("ДатаРезерва+");		
 	Тз_Итоги_ТМЦ.Свернуть("ТМЦ","КвоПересчетСумма");	
 	Тз_Итоги_ТМЦУпаковки.Свернуть("ТМЦУпаковка","КвоПересчетСумма");	
 	Тз_Упаковки.Свернуть("ТМЦ,Упаковка,ТМЦУпаковка","");
 	СпрРазрешенныеВидыУпаковок = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ"); 	
 	//Тз_Родители.ВыбратьСтроку();		//--- Технологически
 	
 	//Тз_ГруппировкиТМЦ.ВыбратьСтроку(); 	//--- Технологически 	
 	//--- ТЗ_ТМЦ_Упаковки.ВыбратьСтроку(); 	
КонецПроцедуры // Заполнить_ТЗ_Контрагентов

//======================================================================
Процедура ДобавитьСтроку_ПоЗаказамПокупателей_поКлиентам(ЗапросЗаказыКлиентов, СУпаковкой = 0)
	ДобавляемоеКво = ЗапросЗаказыКлиентов.КвоПересчетСумма;
	Тз_Родители.НоваяСтрока();	
	Тз_Родители.Родитель 		= ЗапросЗаказыКлиентов.Контрагент;
	Тз_Родители.ДатаРезерва	 	= ЗапросЗаказыКлиентов.ДатаРезерва;

	Тз_ГруппировкиТМЦ.НоваяСтрока();		
	Тз_ГруппировкиТМЦ.РодительТМЦ 		= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДатаРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.Контрагент)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.ТМЦ));					
	Тз_ГруппировкиТМЦ.КвоПересчетСумма	= ДобавляемоеКво;	
	Тз_Итоги_ТМЦ.НоваяСтрока();
	Тз_Итоги_ТМЦ.ТМЦ 					= ЗапросЗаказыКлиентов.ТМЦ;
	Тз_Итоги_ТМЦ.КвоПересчетСумма 		= ДобавляемоеКво;
	
	Если СУпаковкой = 1 Тогда
		Тз_Родители.Контрагент 		= ЗапросЗаказыКлиентов.Контрагент;		
		Тз_ГруппировкиТМЦ.КонтрагентТМЦ 	= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДатаРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.Контрагент)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.ТМЦ));			
				
		Тз_Итоги_ТМЦУпаковки.НоваяСтрока();
		Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка		= ПолучитьТМЦУпаковку(ЗапросЗаказыКлиентов.ТМЦ, ЗапросЗаказыКлиентов.ВидУпаковки);
		Тз_Итоги_ТМЦУпаковки.КвоПересчетСумма 	= ДобавляемоеКво;
		
		Тз_ГруппировкиТМЦУпаковки.НоваяСтрока();	
		Тз_ГруппировкиТМЦУпаковки.РодительТМЦУпаковка 		= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДатаРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.Контрагент)) + Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;
		Тз_ГруппировкиТМЦУпаковки.КонтрагентТМЦУпаковка 	= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДатаРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.Контрагент)) + Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;
		Тз_ГруппировкиТМЦУпаковки.КвоПересчетСумма 		= ДобавляемоеКво;
		Тз_Упаковки.НоваяСтрока();
		Тз_Упаковки.ТМЦ 						= ЗапросЗаказыКлиентов.ТМЦ;
		Тз_Упаковки.Упаковка					= ЗапросЗаказыКлиентов.ВидУпаковки;
		Тз_Упаковки.ТМЦУпаковка 				= СокрЛП(ЗапросЗаказыКлиентов.ТМЦ.Наименование) + СокрЛП(ЗапросЗаказыКлиентов.ВидУпаковки.Наименование);		
	КонецЕсли;
КонецПроцедуры // 

//====================================================================== ТЗ по заказам покупателей
Процедура Заполнить_ТЗ_ПоЗаказамПокупателей_поКлиентам()
Перем НачалоПериода, КонецПериода, ТекстЗапросаЗаказовКлиентов;
	ПодготовитьТЗДляЗаказовПокупателей(НачалоПериода, КонецПериода, ТекстЗапросаЗаказовКлиентов, 0);
	
	//-------------------------------------------------------------	
	//--- Формирую Таблицы Значений по зказам покупателей
	ДокЗаказПокупателя = СоздатьОбъект("Документ.УМК_ЗаказКлиента");
	ЗапросЗаказыКлиентов = СоздатьОбъект("Запрос");
	
	Если ЗапросЗаказыКлиентов.Выполнить(ТекстЗапросаЗаказовКлиентов) = 0 Тогда
		Возврат;
	КонецЕсли;
	
 	Если перСыБезУпаковки = 1 Тогда //--- без учета упаковки 	
	 	Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва	 		
	 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- Конетрагент		 				
				Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ					
					Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда									
						Пока ЗапросЗаказыКлиентов.Группировка(4) = 1 Цикл	//--- ДокументРезерва								
							ТекДокСнятие = СоздатьОбъект("Документ");
							ТекДокСнятие.ВыбратьПодчиненныеДокументы(,,ЗапросЗаказыКлиентов.ДокументРезерва);
							ЗаказСнят = 0;
							Пока ТекДокСнятие.ПолучитьДокумент() = 1 Цикл
								Если ТекДокСнятие.Вид() = "УМК_СнятиеРезерва" Тогда
									Если ТекДокСнятие.Проведен() = 1 Тогда
										ЗаказСнят = 1;
										Прервать;
									КонецЕсли;	
								КонецЕсли;
							КонецЦикла;									
									
							Если ЗаказСнят = 0 Тогда
								ДобавитьСтроку_ПоЗаказамПокупателей_поКлиентам(ЗапросЗаказыКлиентов, 0);
							КонецЕсли;										
						КонецЦикла;							
					КонецЕсли;					
				КонецЦикла;				
			КонецЦикла;								
		КонецЦикла;		
	ИначеЕсли перСыБезУпаковки = 2 Тогда		
		Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва	 		
	 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- Конетрагент		 				
				Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ					
					Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда						
						Пока ЗапросЗаказыКлиентов.Группировка(4) = 1 Цикл	//--- Упаковка							
							Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда									
								Пока ЗапросЗаказыКлиентов.Группировка(5) = 1 Цикл	//--- ДокументРезерва										
									ТекДокСнятие = СоздатьОбъект("Документ");
									ТекДокСнятие.ВыбратьПодчиненныеДокументы(,,ЗапросЗаказыКлиентов.ДокументРезерва);
									ЗаказСнят = 0;
									Пока ТекДокСнятие.ПолучитьДокумент() = 1 Цикл
										Если ТекДокСнятие.Вид() = "УМК_СнятиеРезерва" Тогда
											Если ТекДокСнятие.Проведен() = 1 Тогда
												ЗаказСнят = 1;
												Прервать;
											КонецЕсли;	
										КонецЕсли;
									КонецЦикла;
									
									Если ЗаказСнят = 0 Тогда
										ДобавитьСтроку_ПоЗаказамПокупателей_поКлиентам(ЗапросЗаказыКлиентов, 1);
									КонецЕсли;													
								КонецЦикла;
							КонецЕсли;	
						КонецЦикла;		
					КонецЕсли;					
				КонецЦикла;				
			КонецЦикла; 									
		КонецЦикла;				
	КонецЕсли;	
	
	//--- Если документ снятия задан прибавляем дельту заказов		
	Если (ПустоеЗначение(ДокСнятие) = 0) И (СписокЗаказов.РазмерСписка() = 0) Тогда		
		ПодготовитьТЗДляЗаказовПокупателей(НачалоПериода, КонецПериода, ТекстЗапросаЗаказовКлиентов, 0, 1);
		Если ЗапросЗаказыКлиентов.Выполнить(ТекстЗапросаЗаказовКлиентов) = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если перСыБезУпаковки = 1 Тогда //--- без учета упаковки 		
		 	Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва		 		
		 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- Конетрагент			 				
					Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ						
						Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда										
							Пока ЗапросЗаказыКлиентов.Группировка(4) = 1 Цикл	//--- ДокументРезерва
								ДобавитьСтроку_ПоЗаказамПокупателей_поКлиентам(ЗапросЗаказыКлиентов, 0);
							КонецЦикла;													
						КонецЕсли;						
					КонецЦикла;					
				КонецЦикла;									
			КонецЦикла;			
		ИначеЕсли перСыБезУпаковки = 2 Тогда //--- с учетом упаковки			
			Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва		 		
		 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- Конетрагент			 				
					Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ						
						Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда						
							Пока ЗапросЗаказыКлиентов.Группировка(4) = 1 Цикл	//--- Упаковка								
								Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда										
									Пока ЗапросЗаказыКлиентов.Группировка(5) = 1 Цикл	//--- ДокументРезерва
										ДобавитьСтроку_ПоЗаказамПокупателей_поКлиентам(ЗапросЗаказыКлиентов, 1);
									КонецЦикла;																	
								КонецЕсли;														
							КонецЦикла;							
						КонецЕсли;							
					КонецЦикла;					
				КонецЦикла;
			КонецЦикла;			
		КонецЕсли;			
	КонецЕсли;	
		
	Тз_Родители.Свернуть("ДатаРезерва,Родитель,ОриентировочныйЗаказ","");
	Тз_ГруппировкиТМЦ.Свернуть("РодительТМЦ","КвоПересчетСумма");	
 	Тз_ГруппировкиТМЦУпаковки.Свернуть("РодительТМЦУпаковка,Стикеровать","КвоПересчетСумма");

	Тз_Родители.Сортировать("ДатаРезерва+");		
 	Тз_Итоги_ТМЦ.Свернуть("ТМЦ","КвоПересчетСумма");		
 	Тз_Итоги_ТМЦУпаковки.Свернуть("ТМЦУпаковка","КвоПересчетСумма");	
 	Тз_Упаковки.Свернуть("ТМЦ,Упаковка,ТМЦУпаковка","");
 	СпрРазрешенныеВидыУпаковок = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
 	
 	//Тз_Родители.ВыбратьСтроку();		//--- Технологически
 	//Тз_ГруппировкиТМЦ.ВыбратьСтроку(); 	//--- Технологически
КонецПроцедуры // Заполнить_ТЗ_Контрагентов

//======================================================================
Процедура ДобавитьСтроку_ПоЗаказамПокупателей_Заказы(ЗапросЗаказыКлиентов, СУпаковкой = 0, ТЗРезерва)
	ДобавляемоеКво = ЗапросЗаказыКлиентов.КвоПересчетСумма;
	Тз_Родители.НоваяСтрока();	
	Тз_Родители.Контрагент 				= ЗапросЗаказыКлиентов.ДокументРезерва;
	Тз_Родители.Родитель 				= ЗапросЗаказыКлиентов.ДокументРезерва;
	Тз_Родители.ДатаРезерва	 			= ЗапросЗаказыКлиентов.ДатаРезерва;	
	Тз_ГруппировкиТМЦ.НоваяСтрока();		
	Тз_ГруппировкиТМЦ.РодительТМЦ 		= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДокументРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.ТМЦ));		
	Тз_ГруппировкиТМЦ.КонтрагентТМЦ 	= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДокументРезерва)) + СокрЛП(Строка(ЗапросЗаказыКлиентов.ТМЦ));				
	Тз_ГруппировкиТМЦ.КвоПересчетСумма	= ДобавляемоеКво;
	Тз_Итоги_ТМЦ.НоваяСтрока();
	Тз_Итоги_ТМЦ.ТМЦ 					= ЗапросЗаказыКлиентов.ТМЦ;
	Тз_Итоги_ТМЦ.КвоПересчетСумма 		= ДобавляемоеКво;
	
	Если СУпаковкой = 1 Тогда
		Тз_Итоги_ТМЦУпаковки.НоваяСтрока();
		Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка		= ПолучитьТМЦУпаковку(ЗапросЗаказыКлиентов.ТМЦ, ЗапросЗаказыКлиентов.ВидУпаковки);
		Тз_Итоги_ТМЦУпаковки.КвоПересчетСумма 	= ДобавляемоеКво;
		Тз_ГруппировкиТМЦУпаковки.НоваяСтрока();	
		Тз_ГруппировкиТМЦУпаковки.РодительТМЦУпаковка 		= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДокументРезерва)) + Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;
		Тз_ГруппировкиТМЦУпаковки.КонтрагентТМЦУпаковка 	= СокрЛП(Строка(ЗапросЗаказыКлиентов.ДокументРезерва)) + Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;
		Стр = 0;
		Если ТЗРезерва.НайтиЗначение(Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка, Стр, "Ключ") = 1 Тогда
			Тз_ГруппировкиТМЦУпаковки.Стикеровать = 1;
		КонецЕсли;		
		Тз_ГруппировкиТМЦУпаковки.КвоПересчетСумма 		= ДобавляемоеКво;
		Тз_Упаковки.НоваяСтрока();
		Тз_Упаковки.ТМЦ 						= ЗапросЗаказыКлиентов.ТМЦ;
		Тз_Упаковки.Упаковка					= ЗапросЗаказыКлиентов.ВидУпаковки;
		Тз_Упаковки.ТМЦУпаковка 				= Тз_Итоги_ТМЦУпаковки.ТМЦУпаковка;		
	КонецЕсли;
КонецПроцедуры // ДобавитьСтроку

//======================================================================
Процедура ЗаполнитьТЗРезерва(ЗапросЗаказыКлиентов, ТЗРезерва)
	Если ТипЗначенияСтр(ТЗРезерва) = "ТаблицаЗначений" Тогда		
		ЗапросЗаказыКлиентов.ДокументРезерва.ВыгрузитьТабличнуюЧасть(ТЗРезерва);
		ТЗРезерва.НоваяКолонка("Ключ");
		Инд = 1;
		Пока Инд <= ТЗРезерва.КоличествоСтрок() Цикл
			ТЗРезерва.ПолучитьСтрокуПоНомеру(Инд);
			Если ТЗРезерва.Стикеровать = Да Тогда
				ТЗРезерва.Ключ = ПолучитьТМЦУпаковку(ТЗРезерва.ТМЦ, ТЗРезерва.ВидУпаковки);
				Инд = Инд + 1;
			Иначе
				ТЗРезерва.УдалитьСтроку(Инд);
			КонецЕсли;			
		КонецЦикла;
	КонецЕсли;		
КонецПроцедуры // 

//======================================================================
Функция ПолучитьСнят(ЗапросЗаказыКлиентов, ТЗРезерва)
	ЗаполнитьТЗРезерва(ЗапросЗаказыКлиентов, ТЗРезерва);
	
	ТекДокСнятие = СоздатьОбъект("Документ");
	ТекДокСнятие.ВыбратьПодчиненныеДокументы(,,ЗапросЗаказыКлиентов.ДокументРезерва);
	Пока ТекДокСнятие.ПолучитьДокумент() = 1 Цикл
		Если ТекДокСнятие.Вид() = "УМК_СнятиеРезерва" Тогда
			Если ТекДокСнятие.Проведен() = 1 Тогда
				Возврат 1;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;

	Возврат 0;	
КонецФункции

//====================================================================== ТЗ по заказам покупателей
Процедура Заполнить_ТЗ_ПоЗаказамПокупателей_Заказы()	
Перем НачалоПериода, КонецПериода, ТекстЗапросаЗаказовКлиентов;
	ПодготовитьТЗДляЗаказовПокупателей(НачалоПериода, КонецПериода, ТекстЗапросаЗаказовКлиентов, 1);

	//--- Формирую Таблицы Значений по зказам покупателей	
	ДокЗаказПокупателя = СоздатьОбъект("Документ.УМК_ЗаказКлиента");
	ЗапросЗаказыКлиентов = СоздатьОбъект("Запрос");			
	
	Если ЗапросЗаказыКлиентов.Выполнить(ТекстЗапросаЗаказовКлиентов) = 0 Тогда
		Возврат;
	КонецЕсли;
	ТЗРезерва = СоздатьОбъект("ТаблицаЗначений");
	
	Если перСыБезУпаковки = 1 Тогда //--- без учета упаковки 	
	 	Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва	 		
	 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- Документ резерва
	 			Если ПолучитьСнят(ЗапросЗаказыКлиентов, "") = 0 Тогда
					Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ					
						Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда							
							ДобавитьСтроку_ПоЗаказамПокупателей_Заказы(ЗапросЗаказыКлиентов, 0, "");
						КонецЕсли;					
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;								
		КонецЦикла;		
	ИначеЕсли перСыБезУпаковки = 2 Тогда		
		Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва	 		
	 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- Документ резерва
	 			Если ПолучитьСнят(ЗапросЗаказыКлиентов, ТЗРезерва) = 0 Тогда
					Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ					
						Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда						
							Пока ЗапросЗаказыКлиентов.Группировка(4) = 1 Цикл	//--- Упаковки						
								Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда								
									ДобавитьСтроку_ПоЗаказамПокупателей_Заказы(ЗапросЗаказыКлиентов, 1, ТЗРезерва);
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;									
		КонецЦикла;			
	КонецЕсли;
		
	//--- Если документ снятия задан прибавляем дельту заказов
	Если (ПустоеЗначение(ДокСнятие) = 0) И (СписокЗаказов.РазмерСписка() = 0) Тогда		
		ПодготовитьТЗДляЗаказовПокупателей(НачалоПериода, КонецПериода, ТекстЗапросаЗаказовКлиентов, 1, 1);
		Если ЗапросЗаказыКлиентов.Выполнить(ТекстЗапросаЗаказовКлиентов) = 0 Тогда
			Возврат;
		КонецЕсли;		
		
		Если перСыБезУпаковки = 1 Тогда //--- без учета упаковки 		
		 	Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва		 		
		 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- ДокументРезерва			 				
					Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- контрагент
						Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда
							ДобавитьСтроку_ПоЗаказамПокупателей_Заказы(ЗапросЗаказыКлиентов, 0, "");
						КонецЕсли;
					КонецЦикла;					
				КонецЦикла;										
			КонецЦикла;			
		ИначеЕсли перСыБезУпаковки = 2 Тогда //--- с упаковкой			
			Пока ЗапросЗаказыКлиентов.Группировка(1) = 1 Цикл	//--- ДатаРезерва		 		
		 		Пока ЗапросЗаказыКлиентов.Группировка(2) = 1 Цикл	//--- ДокументРезерва			 				
					Пока ЗапросЗаказыКлиентов.Группировка(3) = 1 Цикл	//--- ТМЦ
						ЗаполнитьТЗРезерва(ЗапросЗаказыКлиентов, ТЗРезерва);
						Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда
							Пока ЗапросЗаказыКлиентов.Группировка(4) = 1 Цикл	//--- Упаковки
								Если Окр(ЗапросЗаказыКлиентов.КвоПересчетСумма) > 0 Тогда
									ДобавитьСтроку_ПоЗаказамПокупателей_Заказы(ЗапросЗаказыКлиентов, 1, ТЗРезерва);
								КонецЕсли;
							КонецЦикла;								
						КонецЕсли;						
					КонецЦикла;					
				КонецЦикла;									
			КонецЦикла;			
		КонецЕсли;		
	КонецЕсли;	
		
	Тз_Родители.Свернуть("ДатаРезерва,Родитель,ОриентировочныйЗаказ","");
	Тз_ГруппировкиТМЦ.Свернуть("РодительТМЦ","КвоПересчетСумма");	
 	Тз_ГруппировкиТМЦУпаковки.Свернуть("РодительТМЦУпаковка,Стикеровать","КвоПересчетСумма");

	//Тз_Родители.Сортировать("ДатаРезерва+");
		
 	Тз_Итоги_ТМЦ.Свернуть("ТМЦ","КвоПересчетСумма");	
 	
 	Тз_Итоги_ТМЦУпаковки.Свернуть("ТМЦУпаковка","КвоПересчетСумма");	
 	Тз_Упаковки.Свернуть("ТМЦ,Упаковка,ТМЦУпаковка","");
 	СпрРазрешенныеВидыУпаковок = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
 	
 	//Тз_Родители.ВыбратьСтроку();		//--- Технологически
 	
КонецПроцедуры // Заполнить_ТЗ_Контрагентов

//====================================================================== //--- УМК Сандомирский В.Ю. (29.06.15)
Процедура ВывестиШапку()
	//--- Вывод таблицы
 	//--------------------------------------------------------------------------------------------------------------------------
	Таблица.Область(1, , 8).ВысотаСтроки(11.25);
	Таблица.Область(1, , 8).ОриентацияТекста(0);
	Таблица.Область(1, , 8).Полужирный(0);
	Таблица.Область(1, , 8).Рамка(0, 0, 0, 0);
	Таблица.Область(1,  ,8).ЦветФона(255,255,255);
 	
 	ТекСтрока = 1; 	
 	ТекКолонка = 4;
 	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(3,3,3,4);	
 	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
 	//Если фНоваяВерсия = 1 Тогда
	 	Таблица.Область(3, ТекКолонка,3, ТекКолонка).ВысотаСтроки(0.25);
	//Иначе
	// 	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ВысотаСтроки(0.25);
	//КонецЕсли;
 	
 	ТекКолонка = 6;
 	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(3,3,3,4);	
 	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
 	// выводим заголовки параллельно
 	//---- Выводим ШАПКУ первую строку
 	
 	//Если фНоваяВерсия = 1 Тогда
	 	ТекСтрока = ТекСтрока + 3; 	
	//Иначе
	// 	ТекСтрока = ТекСтрока + 1; 	
	//КонецЕсли;
 	ТекКолонка = 4;
 	
 	Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).РамкаОбвести(3,3,3,4);	
 	Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).РамкаОбвести(3,3,3,4);	
 	Таблица.Область(ТекСтрока, 5,ТекСтрока, 5).РамкаОбвести(3,3,3,4);
 
 	Таблица.Область(ТекСтрока, 5,ТекСтрока, 5).Текст = "удалить строку";
	Таблица.Область(ТекСтрока, 5,ТекСтрока, 5).ОриентацияТекста(90);
	Таблица.Область(ТекСтрока, 5,ТекСтрока, 5).ГоризонтальноеПоложение(1);
	
 	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(3,3,3,4);	
 	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
 	//Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = СокрЛП(Запрос.Товар.Наименование);
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(1);
 
	ТекКолонка = 6;
	
	ВывестиБлокТаблицы(3,3,3,4, 255, 255, 255, 0, 0, 0, 4, 3, 1, "Итого по строке (кг.)", 1, 10, 0, 0);
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ОриентацияТекста(90);	
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ВысотаСтроки(150);	
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ШиринаСтолбца(7);			//--- Ширина
	
	ТекГруппа = "";
	фЦвет = 0;
	тЦвет = 0;
	НачалоГруппы = ТекКолонка; СтарГоловной = ""; СтарТМЦ = ""; Счетчик = 0; Счт = 1;
	
 	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл		
		ТекКолонка = ТекКолонка + 1;		
		//Если фНоваяВерсия = 1 Тогда
			Таблица.Область(ТекСтрока-2, ТекКолонка,ТекСтрока-2, ТекКолонка).РамкаОбвести(3,3,3,4);	
			
			Если ТЗ_ТМЦ_ДляВыборки.Головной <> СтарГоловной Тогда
				Если СтарГоловной <> "" Тогда
					// выводим блок только если количество колонок в блоке больше 1 или ТМЦ с таким же фаршем не равно ТМЦ				
					Если (СтарТМЦ <> СтарГоловной) ИЛИ (Счетчик <> 1) Тогда
						Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка-1).ГоризонтальноеПоложение(3+4);
						//Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка-1).Значение = ЗначениеВСтрокуВнутр(СтарГоловной);
						Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка-1).РамкаОбвести(3,3,3,4);
						Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка-1).РазмерШрифта(8);
						Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка-1).Контроль(4);
						Если Счт / 2 = Цел(Счт / 2) Тогда
							Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка-1).ЦветФона(223,223,223);
						Иначе
							Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка-1).ЦветФона(255,255,164);
						КонецЕсли;
						Счт = Счт + 1;
					Иначе
						Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, НачалоГруппы).Текст = "";
					КонецЕсли;
				КонецЕсли;
				
				СтарГоловной = ТЗ_ТМЦ_ДляВыборки.Головной;
				Счетчик = 0;
				СтарТМЦ = ТЗ_ТМЦ_ДляВыборки.ТМЦ;
				Таблица.Область(ТекСтрока-3, ТекКолонка, ТекСтрока-3, ТекКолонка).Текст = Строка(ТЗ_ТМЦ_ДляВыборки.Головной.Код);
				НачалоГруппы = ТекКолонка;
			КонецЕсли;
			Счетчик = Счетчик + 1;
		//КонецЕсли;
		Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 1 Тогда
			Замес = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Замес.Получить(ДатаЗадания);
			Замес = ?(Замес = 0, ТЗ_ТМЦ_ДляВыборки.ТМЦ.Замес.Получить(ТекущаяДата()), Замес);
			ТекстВЯчейку = СокрЛП(ТЗ_ТМЦ_ДляВыборки.ТМЦ.Наименование) + " (" + Замес + ")" + ?(ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ.Маркировка) = 1, "","
			|" + ТЗ_ТМЦ_ДляВыборки.ТМЦ.Маркировка);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(1);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ВертикальноеПоложение(3);	//--- Число: 1 - снизу; 2 - сверху; 3 - по центру. 
			Таблица.Область(ТекСтрока-1, ТекКолонка,ТекСтрока-1, ТекКолонка).Текст = "+";	
		Иначе	
			ТекстВЯчейку =  СокрЛП(ТЗ_ТМЦ_ДляВыборки.Упаковка);
			Если (перСыБезУпаковки = 2) И (ТЗ_ТМЦ_ДляВыборки.Упаковка = НетУп) И (ТЗ_ТМЦ_ДляВыборки.ТМЦ.НетБезУпаковки = 1) Тогда
				ТекстВЯчейку = "отсутствует без уп.";
			КонецЕсли;
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(0);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ВертикальноеПоложение(2);	//--- Число: 1 - снизу; 2 - сверху; 3 - по центру. 
			Таблица.Область(ТекСтрока-1, ТекКолонка,ТекСтрока-1, ТекКолонка).Текст = "-";
		КонецЕсли;
	
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(3,3,3,4);	
		
		Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
			Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда				
				Если тЦвет <> 1 Тогда
					тЦвет = 1;
				Иначе
					тЦвет = 0;
				КонецЕсли;				
				ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
			КонецЕсли;		
		КонецЕсли;
		
		Если перСыБезУпаковки = 2 Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
				фЦвет = 2;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;
		Иначе
			фЦвет = тЦвет;
		КонецЕсли;

		//Если фНоваяВерсия = 1 Тогда
		Если (ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.ГоловнойДО) = 0) И (ТЗ_ТМЦ_ДляВыборки.ГоловнойДО.Родитель <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель) И (фЦвет = тЦвет) Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,128,192);
			//КонецЕсли;
		ИначеЕсли фЦвет = 1 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,198);
		ИначеЕсли фЦвет = 2 Тогда	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
		ИначеЕсли фЦвет = 0 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
		КонецЕсли;			

		Если (перСыБезУпаковки = 2) Тогда
			Если (ТЗ_ТМЦ_ДляВыборки.Упаковка = НетУп) И (ТЗ_ТМЦ_ДляВыборки.ТМЦ.НетБезУпаковки = 1) Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,0,0);
			ИначеЕсли (ТЗ_ТМЦ_ДляВыборки.Упаковка = ТЗ_ТМЦ_ДляВыборки.ТМЦ.ВидУпаковкиПоУмолчанию) И (ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 0) Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(128,255,255);				
			КонецЕсли;
		КонецЕсли;
		
		
 		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = ТекстВЯчейку;
 		//Если фНоваяВерсия = 1 Тогда
	 		Таблица.Область(ТекСтрока-2, ТекКолонка,ТекСтрока-2, ТекКолонка).Текст = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Код;
			// найдём позицию в акциях и покрасим
			ПозАкций = 0;
			Если ТЗАкций.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ, ПозАкций, "ТМЦ") = 1 Тогда
				Таблица.Область(ТекСтрока-2, ТекКолонка,ТекСтрока-2, ТекКолонка).ЦветФона(255, 128, 128);
				//Таблица.Область(ТекСтрока-2, ТекКолонка,ТекСтрока-2, ТекКолонка).Расшифровка(ТЗАкций.ПолучитьЗначение(ПозАкций, "СписДок"), 0);
			КонецЕсли;	 		
	 	//КонецЕсли;
 		
 		//Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Расшифровка = ТЗ_ТМЦ_ДляВыборки.ТМЦ;
		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ОриентацияТекста(90);
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Контроль(4);	
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ВысотаСтроки(150);	
		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ШиринаСтолбца(7);			//--- Ширина
		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ГоризонтальноеПоложение(1); //--- Число: 1 - слева; 2 - справа; 3 - по центру; 4 - по ширине. (5 - 8) - по выделенным столбцам: слева/справа/по центру/по ширине.	
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РазмерШрифта(10);
				
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Доступность(0); 			//--- запретить на ввод данных
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Редактирование(0);			//--- запретить на ввод данных		
	КонецЦикла;
	
	//Если фНоваяВерсия = 1 Тогда
		Если СтарГоловной <> "" Тогда
			Если (СтарТМЦ <> СтарГоловной) ИЛИ (Счетчик <> 1) Тогда
				Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка).ГоризонтальноеПоложение(3+4);
				Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка).РамкаОбвести(3,3,3,4);
				Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка).РазмерШрифта(8);
				Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка).Контроль(4);
				Если Счт / 2 = Цел(Счт / 2) Тогда
					Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка).ЦветФона(223,223,223);
				Иначе
					Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, ТекКолонка).ЦветФона(255,255,164);
				КонецЕсли;
			Иначе
				Таблица.Область(ТекСтрока-3, НачалоГруппы, ТекСтрока-3, НачалоГруппы).Текст = "";
			КонецЕсли;
		КонецЕсли;
	//КонецЕсли;
	ВсегоКолонок = ТекКолонка;
	
	//---- Выводим ШАПКУ Вторую строку "норма" 	
 	ТекСтрока = ТекСтрока + 1; 	
 	ТекКолонка = 4;
 	Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).РамкаОбвести(3,3,3,4);	
 	Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).РамкаОбвести(3,3,3,4);	
 	Таблица.Область(ТекСтрока, 5,ТекСтрока, 5).РамкаОбвести(3,3,3,4);
 	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(3,3,3,4);	
 	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(1);
 
	ТекКолонка = 6;
	
	ТекГруппа = "";
	фЦвет = 0;
	тЦвет = 0;
	
 	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
		
		ТекКолонка = ТекКолонка + 1;
		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(1);
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РазмерШрифта(9);
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = "-";
		ТкСтр 	= "";
		ТкСтлб 	= "";
		Если ТЗ_Вес_Кутера.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТкСтр,ТкСтлб) = 1 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(1);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РазмерШрифта(8);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = "Норма";
		КонецЕсли;
			
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(3,3,3,4);	
		
		Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
			Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда
				
				Если тЦвет = 0 Тогда
					тЦвет = 1;
				Иначе
					тЦвет = 0;
				КонецЕсли;
				
				ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
			КонецЕсли;		
		КонецЕсли;
				
		фЦвет = тЦвет;
		Если перСыБезУпаковки = 2 Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
				фЦвет = 2;
			КонецЕсли;
		КонецЕсли;
		МинусСтрока = 0;
		Если (фЦвет <> 2) Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ.ОдинаковаяПрРазныеМарк) = 0 Тогда
				МинусСтрока = 1;
				фЦвет = 4;
			КонецЕсли;
		КонецЕсли;
		
		Если фЦвет = 1 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,198);
		ИначеЕсли фЦвет = 2 Тогда	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
		ИначеЕсли фЦвет = 0 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
		ИначеЕсли фЦвет = 4 Тогда
			Таблица.Область(ТекСтрока - МинусСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,231,10);	
		КонецЕсли;		
		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Контроль(4);		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ШиринаСтолбца(7);			//--- Ширина	
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ГоризонтальноеПоложение(3); //--- Число: 1 - слева; 2 - справа; 3 - по центру; 4 - по ширине. (5 - 8) - по выделенным столбцам: слева/справа/по центру/по ширине.	
				
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Доступность(0); 			//--- запретить на ввод данных
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Редактирование(0);			//--- запретить на ввод данных		
	КонецЦикла;	
	СтатическаяСтрокаНорма = ТекСтрока;	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (29.06.15)
Процедура ВывестиСтрокуВесКутера()

	//--- Вес кутера на выходе
	ТекСтрока = СтатическаяСтрокаНорма;

	ТекСтрока = ТекСтрока + 1;
	ТекКолонка = 4;
	
	ВывестиБлокТаблицы(3,4,3,5,255,255,255,0,0,0,4,3,2,"Вес кутера на выходе (кг):",1,8,0,0);
		
	ТекКолонка = 6;
	
	ТекГруппа = "";
	фЦвет = 0;
	тЦвет = 0;	
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл		
		ТекстВЯчейку = "";
		ТекСтр 	= "";
		ТекКол 	= "";
		Если ТЗ_Вес_Кутера.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТекСтр,ТекКол) = 1 Тогда
			
			ТЗ_Вес_Кутера.ПолучитьСтрокуПоНомеру(ТекСтр);
			
			Если ТЗ_Вес_Кутера.Норма.Действует <> 1 Тогда
				Сообщить("Внимание !!! , норма " + ТЗ_Вес_Кутера.Норма + " для " + ТЗ_ТМЦ_ДляВыборки.ТМЦ + " НЕ ДЕЙСТВУЕТ !" , "!!!");
			Иначе
				ТекстВЯчейку = Окр(ТЗ_Вес_Кутера.ВесКутера,0,1);
			КонецЕсли;
				
		Иначе
			Сообщить("Внимание !!! , нормы с флагом ""Для заказов "" для " + ТЗ_ТМЦ_ДляВыборки.ТМЦ + " не заданы !" , "!!!");
		КонецЕсли;	
			
		ТекКолонка = ТекКолонка + 1;
		ВывестиБлокТаблицы(3,4,3,5,255,255,198,0,0,0,4,3,2,ТекстВЯчейку,0,8,1,1);
		
		Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
			Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда
				
				Если тЦвет = 0 Тогда
					тЦвет = 1;
				Иначе
					тЦвет = 0;
				КонецЕсли;
				
				ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
			КонецЕсли;		
		КонецЕсли;
				
		Если перСыБезУпаковки = 2 Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
				фЦвет = 2;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;
		Иначе
			фЦвет = тЦвет;
		КонецЕсли;
				
		Если фЦвет = 2 Тогда	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
		ИначеЕсли фЦвет = 0 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
		КонецЕсли;		
	КонецЦикла;

	СтатическаяСтрокаВесКутера = ТекСтрока;		
КонецПроцедуры // гл

//====================================================================== //--- УМК Сандомирский В.Ю. (29.06.15)
Процедура ВывестиСтрокуВесФарша()

	//--- Выход без потерь (Вес кутера фарша)
	
	ТекСтрока = СтатическаяСтрокаВесКутера;
	
	ТекСтрока = ТекСтрока + 1;
	ТекКолонка = 4;
	
	ВывестиБлокТаблицы(3,4,3,5,255,255,255,0,0,0,4,3,2,"Вес кутера фарша(кг):",1,8,0,0);
		
	ТекКолонка = 6;
	
	ТекГруппа = "";
	фЦвет = 0;
	тЦвет = 0;
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
		
		ТекстВЯчейку = "";
		ТекСтр 	= "";
		ТекКол 	= "";
		Если ТЗ_Вес_Кутера.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТекСтр,ТекКол) = 1 Тогда
			ТЗ_Вес_Кутера.ПолучитьСтрокуПоНомеру(ТекСтр);
			ТекстВЯчейку = Окр(ТЗ_Вес_Кутера.ВыходБезПотерь,0,1);	
		КонецЕсли;	
			
		ТекКолонка = ТекКолонка + 1;
		ВывестиБлокТаблицы(3,4,3,5,255,255,198,0,0,0,4,3,2,ТекстВЯчейку,0,8,1,1);
		
		Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
			Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда				
				Если фЦвет = 0 Тогда
					тЦвет = 1;
				Иначе
					тЦвет = 0;
				КонецЕсли;
				
				ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
			КонецЕсли;		
		КонецЕсли;
				
		Если перСыБезУпаковки = 2 Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
				фЦвет = 2;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;
		Иначе
			фЦвет = тЦвет;
		КонецЕсли;
				
		Если фЦвет = 2 Тогда	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
		ИначеЕсли фЦвет = 0 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
		КонецЕсли;		
	КонецЦикла;	
	
	СтатическаяСтрокаВесКутераФарша = ТекСтрока;		
КонецПроцедуры // гл

//====================================================================== //--- УМК Сандомирский В.Ю. (29.06.15)
Процедура ВывестиЗаказыКлиентов()
	
	ТЗ_РасшифровкаЗаказов = СоздатьОбъект("ТаблицаЗначений");
	
	Если перКлиенты = 1 Тогда
		ТЗ_РасшифровкаЗаказов.НоваяКолонка("Заказ","Справочник.Контрагенты");
	ИначеЕсли перКлиенты = 2 Тогда
		ТЗ_РасшифровкаЗаказов.НоваяКолонка("Заказ","Справочник.Контрагенты");
	ИначеЕсли перКлиенты = 3 Тогда
		ТЗ_РасшифровкаЗаказов.НоваяКолонка("Заказ","Документ.УМК_ЗаказКлиента");
	КонецЕсли;
	
	//--- Заказы клиентов !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	
	ТекСтрока = СтатическаяСтрокаВесКутераФарша;
	
	ТекДатаРезерва = "";
	
 	Тз_Родители.ВыбратьСтроки();
	Пока Тз_Родители.ПолучитьСтроку() = 1 Цикл		
		Если (ТекДатаРезерва <> Тз_Родители.ДатаРезерва) И (СокрЛП(Тз_Родители.ОриентировочныйЗаказ) <> 1) Тогда
			ТекДатаРезерва = Тз_Родители.ДатаРезерва;
				
			ТекСтрока = ТекСтрока + 1;
			
			ТЗ_РасшифровкаЗаказов.НоваяСтрока();
			ТЗ_РасшифровкаЗаказов.Заказ = Тз_Родители.ДатаРезерва;
					
			ТекКолонка = 4;
			ВывестиБлокТаблицы(3,3,3,3,255,255,255,0,0,0,4,3,3,СокрЛП(Строка(Тз_Родители.ДатаРезерва)),1,10,0,0);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(3,3,3,3);
			
			Если СокрЛП(Тз_Родители.ОриентировочныйЗаказ) = 1 Тогда //--- ориентировочный побольше
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РазмерШрифта(10);
			Иначе	
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РазмерШрифта(10);
			КонецЕсли;
			
		КонецЕсли;
		
		ТекСтрока = ТекСтрока + 1;
		ТекКолонка = 4;
		
		Таблица.Область(ТекСтрока, 1,ТекСтрока, 1).Текст = Тз_Родители.ДатаРезерва; //--- Дату в первую ячейку
		Таблица.Область(ТекСтрока, 1,ТекСтрока, 1).ГоризонтальноеПоложение(2);
		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(3,3,3,3);
		
		Если СокрЛП(Тз_Родители.ОриентировочныйЗаказ) = 1 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РазмерШрифта(10);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(1);
		Иначе	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РазмерШрифта(10);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(0);
		КонецЕсли;
		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
		
		Таблица.Область(ТекСтрока, 5,ТекСтрока, 5).ШиринаСтолбца(3);			//--- Ширина
		Таблица.Область(ТекСтрока, 5,ТекСтрока, 5).Текст = "Х";
		
		Если перКлиенты = 1 Тогда		//--- группировка по контрагентам 2го уровня
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = СокрЛП(Тз_Родители.Родитель);
			ТЗ_РасшифровкаЗаказов.НоваяСтрока();
			ТЗ_РасшифровкаЗаказов.Заказ = Тз_Родители.Родитель;
			
			Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).ШиринаСтолбца(1);			//--- Ширина
			Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).ШиринаСтолбца(1);			//--- Ширина		
			
		ИначеЕсли перКлиенты = 2 Тогда		//--- группировка по клиентам
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = СокрЛП(Тз_Родители.Родитель);
			ТЗ_РасшифровкаЗаказов.НоваяСтрока();
			ТЗ_РасшифровкаЗаказов.Заказ = Тз_Родители.Родитель;	
			
			Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).ШиринаСтолбца(1);			//--- Ширина
			Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).ШиринаСтолбца(1);			//--- Ширина						
		ИначеЕсли перКлиенты = 3 Тогда	 	//--- группировка по заказам			
			Если ТипЗначенияСтр(Тз_Родители.Родитель) = "Документ" Тогда
				Прим = СокрЛП(Тз_Родители.Родитель.Примечание);
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = Сред(СокрЛП(Тз_Родители.Родитель.НомерДок),4) + " " + " (вр.:" + СокрЛП(Тз_Родители.Родитель.ВремяЗаказа) + ")"  +
				", М: "+ Строка(Тз_Родители.Родитель.Маршрут) + 
				?(Прим = "", "", " /" + Прим);  //--- + СокрЛП(Тз_Родители.Родитель.ДатаДок)
				Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).Текст = СокрЛП(Тз_Родители.Родитель.Контрагент);
				Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).Текст = СокрЛП(Тз_Родители.Родитель.Контрагент);
				Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).Текст = СокрЛП(Тз_Родители.Родитель.Контрагент.Родитель);
				Если Тз_Родители.Родитель.ДокументВзвешен = 1 Тогда
					Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(57, 186, 206);
				КонецЕсли;
			Иначе
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = Строка(Тз_Родители.Родитель);				
				Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).Текст = "";
				Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).Текст = "";
			КонецЕсли;

			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ШиринаСтолбца(45);	//--- Ширина
			
			ТЗ_РасшифровкаЗаказов.НоваяСтрока();
			ТЗ_РасшифровкаЗаказов.Заказ = Тз_Родители.Родитель;
			
			//--- Когда заказы выводить контрагента \ родителя \ время
			Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).ШиринаСтолбца(20);			//--- Ширина
			Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).РамкаОбвести(3,3,3,3);
			Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).РазмерШрифта(9);
			Таблица.Область(ТекСтрока, 2,ТекСтрока, 2).Полужирный(1);			
		
			Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).ШиринаСтолбца(20);			//--- Ширина
			Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).РамкаОбвести(3,3,3,3);
			Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).РазмерШрифта(9);
			Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).Полужирный(1);
			Таблица.Область(ТекСтрока, 3,ТекСтрока, 3).ГоризонтальноеПоложение(2); //--- Число: 1 - слева; 2 - справа; 3 - по центру; 4 - по ширине. (5 - 8)
		КонецЕсли;

		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Контроль(4);	
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ВертикальноеПоложение(3);	//--- Число: 1 - снизу; 2 - сверху; 3 - по центру. 
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ГоризонтальноеПоложение(1); //--- Число: 1 - слева; 2 - справа; 3 - по центру; 4 - по ширине. (5 - 8) - по выделенным столбцам: слева/справа/по центру/по ширине.
		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Доступность(0); 			//--- запретить на ввод данных
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Редактирование(0);			//--- запретить на ввод данных
		
		
		ТекКолонка = 6;
		
		ТекГруппа = "";
		фЦвет = 0;
		тЦвет = 0;
		
		КвоСтрокРодителей = Тз_Родители.КоличествоСтрок();
		
		ИтогоПоСТроке = 0;
		
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл			
			ТекстВЯчейку = "";
			ТекСтр 	= "";
			ТекКол 	= "";
			Стикеровать = 0;
			
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 1 Тогда //--- Итоговая таблица по тмц					
				Если перКлиенты = 1 Тогда //--- группировка по родителям и 2му уровню
					КлиентПоиска = СокрЛП(Строка(Тз_Родители.ДатаРезерва)) + СокрЛП(Строка(Тз_Родители.Родитель))+СокрЛП(Строка(ТЗ_ТМЦ_ДляВыборки.ТМЦ));
				ИначеЕсли перКлиенты = 2 Тогда //--- группировка по клиентам	
					КлиентПоиска = СокрЛП(Строка(Тз_Родители.ДатаРезерва)) + СокрЛП(Строка(Тз_Родители.Родитель))+СокрЛП(Строка(ТЗ_ТМЦ_ДляВыборки.ТМЦ));
				ИначеЕсли перКлиенты = 3 Тогда //--- группировка по заказам
					КлиентПоиска = СокрЛП(Строка(Тз_Родители.Родитель))+СокрЛП(Строка(ТЗ_ТМЦ_ДляВыборки.ТМЦ));
				КонецЕсли;
				
				Если Тз_ГруппировкиТМЦ.НайтиЗначение(КлиентПоиска,ТекСтр,ТекКол) = 1 Тогда
					Тз_ГруппировкиТМЦ.ПолучитьСтрокуПоНомеру(ТекСтр);
					ТекстВЯчейку = Тз_ГруппировкиТМЦ.КвоПересчетСумма;						
					ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;					
				КонецЕсли;
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(0);				
			Иначе	//--- таблица по упаковкам			
				Если перКлиенты = 1 Тогда //--- группировка по родителям и 2му уровню
					КлиентПоиска = СокрЛП(Строка(Тз_Родители.ДатаРезерва)) + СокрЛП(Строка(Тз_Родители.Родитель)) + ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка;
				ИначеЕсли перКлиенты = 2 Тогда //--- группировка по родителям и 2му уровню
					КлиентПоиска = СокрЛП(Строка(Тз_Родители.ДатаРезерва)) + СокрЛП(Строка(Тз_Родители.Родитель)) + ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка;
				ИначеЕсли перКлиенты = 3 Тогда //--- группировка по заказам
					КлиентПоиска = СокрЛП(Строка(Тз_Родители.Родитель)) + ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка;
				КонецЕсли;
				
				Если Тз_ГруппировкиТМЦУпаковки.НайтиЗначение(КлиентПоиска,ТекСтр,ТекКол) = 1 Тогда
					Тз_ГруппировкиТМЦУпаковки.ПолучитьСтрокуПоНомеру(ТекСтр);
					Если перКлиенты = 3 Тогда //--- группировка по заказам
						Стикеровать = Тз_ГруппировкиТМЦУпаковки.Стикеровать;
					КонецЕсли;
					ТекстВЯчейку = Тз_ГруппировкиТМЦУпаковки.КвоПересчетСумма;	
				КонецЕсли;
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(0);				
			КонецЕсли;
							
			ТекКолонка = ТекКолонка + 1;		
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(3,3,3,3);	
			
			Если СокрЛП(Тз_Родители.ОриентировочныйЗаказ) = 1 Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РазмерШрифта(10);
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(1);
			Иначе	
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РазмерШрифта(8);
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(0);
			КонецЕсли;
			
			Если Стикеровать = 1 Тогда
				фЦвет = 4;
			Иначе
				Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
					Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда					
						Если тЦвет = 0 Тогда
							тЦвет = 1;
						Иначе
							тЦвет = 0;
						КонецЕсли;
						
						ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
					КонецЕсли;		
				КонецЕсли;
						
				Если перСыБезУпаковки = 2 Тогда
					Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
						фЦвет = 2;
					Иначе
						фЦвет = тЦвет;
					КонецЕсли;
				Иначе
					фЦвет = тЦвет;
				КонецЕсли;
			КонецЕсли;
					
			Если фЦвет = 1 Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,198);
			ИначеЕсли фЦвет = 2 Тогда	
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
			ИначеЕсли фЦвет = 4 Тогда	
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,128,255); 				
			ИначеЕсли фЦвет = 0 Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
			КонецЕсли;	
				
 			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = ТекстВЯчейку;
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Контроль(4);	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ВертикальноеПоложение(3);	//--- Число: 1 - снизу; 2 - сверху; 3 - по центру. 
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ГоризонтальноеПоложение(2); //--- Число: 1 - слева; 2 - справа; 3 - по центру; 4 - по ширине. (5 - 8) - по выделенным столбцам: слева/справа/по центру/по ширине.	
				
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Доступность(0); 			//--- запретить на ввод данных
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Редактирование(0);			//--- запретить на ввод данных
				
			Состояние("Заказы клиентов - " + Окр((Тз_Родители.НомерСтроки / КвоСтрокРодителей) * 100,0) + "%");						
		КонецЦикла;

		ВывестиБлокТаблицы(3,3,3,3,255,255,255,0,0,0,4,3,2,ИтогоПоСТроке,1,10,0,0, 6);
		//--- ИТОГ по строке
			
		Если ИтогоПоСТроке = 0 Тогда //--- нулевые строки не выводим
			ТекСтрока = ТекСтрока - 1;
		КонецЕсли;		
	КонецЦикла;
	
	СтатическаяСтрокаПоследнегоЗаказаКлиента = ТекСтрока;		
КонецПроцедуры // ВывстиЗаказыКлиентов()

Функция ПолучитьИтогИзЗаказов(ТМЦ, Упаковка, ТМЦУпаковка, ИтогоПоСтроке = 0)
	ТекстВЯчейку = 0;
	ТекСтр 	= 0;
	Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 1 Тогда
		Если Тз_Итоги_ТМЦ.НайтиЗначение(ТМЦ,ТекСтр,"ТМЦ") = 1 Тогда
			ТекстВЯчейку = Тз_Итоги_ТМЦ.ПолучитьЗначение(ТекСтр, "КвоПересчетСумма");
			ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;
		КонецЕсли;
	ИначеЕсли перСыБезУпаковки = 2 Тогда
		Если Тз_Итоги_ТМЦУпаковки.НайтиЗначение(ТМЦУпаковка,ТекСтр,"ТМЦУпаковка") = 1 Тогда
			ТекстВЯчейку = Тз_Итоги_ТМЦУпаковки.ПолучитьЗначение(ТекСтр, "КвоПересчетСумма");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТекстВЯчейку;
КонецФункции

Функция ПолучитьЗначениеИзЕдинойТаблицы(ТМЦ, Упаковка, ТМЦУпаковка, ТЗПоиска, ИмяРекв, ИтогоПоСтроке = 0)
	ТекСтр = 0;
	Значение = 0;
	Если перСыБезУпаковки = 1 Тогда
		Если ТЗПоиска.НайтиЗначение(ТМЦ, ТекСтр, "ТМЦ") = 1 Тогда
			Значение = ТЗПоиска.ПолучитьЗначение(ТекСтр, ИмяРекв);
		КонецЕсли;	
	Иначе
		Если ТЗПоиска.НайтиЗначение(ТМЦУпаковка,ТекСтр,"ТМЦУпаковка") = 1 Тогда
			Значение = ТЗПоиска.ПолучитьЗначение(ТекСтр, ИмяРекв);
		КонецЕсли;
	КонецЕсли;
	Если ПустоеЗначение(Упаковка) = 1 Тогда
		ИтогоПоСтроке = ИтогоПоСтроке + Значение;
	КонецЕсли;
	Возврат Значение;
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю. (03.07.15)
Процедура ВыводСтрокиИтогПоЗаказамКлиентов(Индекс)	
	//--- ИТОГИ заказов клиентов
	Если Индекс = 1 Тогда
		ТекСтрока = СтатическаяСтрокаПоследнегоЗаказаКлиента;
	Иначе
		ТекСтрока = СтатическаяСтрокаПоследнегоЗадания;		
	КонецЕсли;
	
	ТекСтрока = ТекСтрока + 1;
	ТекКолонка = 4;
	
	ВывестиБлокТаблицы(3,4,3,4,198,198,198,0,0,0,4,3,2,"Итого заказов клиентов(кг):",1,10,0,0);
	ТекКолонка = 6;
	
	ИтогоПоСТроке = 0;	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл		
		ТекКолонка = ТекКолонка + 1;		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(0);
		ТекстВЯчейку = ПолучитьИтогИзЗаказов(ТЗ_ТМЦ_ДляВыборки.ТМЦ, ТЗ_ТМЦ_ДляВыборки.Упаковка, ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка, ИтогоПоСТроке);
		ВывестиБлокТаблицы(3,4,3,4,198,198,198,0,0,0,4,3,2,ТекстВЯчейку,0,10,0,0);
	КонецЦикла;
	
	ВывестиБлокТаблицы(3,3,3,3,198,198,198,0,0,0,4,3,2,ИтогоПоСТроке,1,10,0,0,6);	
	
	Если Индекс = 1 Тогда
		СтатическаяСтрокаИтогиЗаказовКлиентов_раз = ТекСтрока;
	Иначе
		СтатическаяСтрокаИтогиЗаказовКлиентов_Два = ТекСтрока;
	КонецЕсли;	
КонецПроцедуры // 

Процедура ВыводСтрокиИтогПоВыпускам()	
	//--- ИТОГИ заказов клиентов
	ТекСтрока = СтатическаяСтрокаИтогиЗаказовКлиентов_два;
	
	ТекСтрока = ТекСтрока + 1;
	ТекКолонка = 4;
	
	ВывестиБлокТаблицы(3,4,3,4,255,255,255,0,0,0,4,3,2,"Самый ранний выпуск:",1,10,0,0);
	ТекКолонка = 6;
	
	Состояние("Обработка выпусков");
	СтарТМЦ = ""; СтарДатаВыпуска = Дата(0); ПредельнаяДата = Дата(0);
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
		Если СтарТМЦ <> ТЗ_ТМЦ_ДляВыборки.ТМЦ Тогда
			Остаток = 0; ТекСтр = 0;
			Если ПустоеЗначение(ВыбИнвентаризация) = 0 Тогда
				Если ТЗ_Инвентаризации.НайтиЗначение(ПолучитьТМЦУпаковку(ТЗ_ТМЦ_ДляВыборки.ТМЦ, ""), ТекСтр, "ТМЦУпаковка") = 1 Тогда
					Остаток = ТЗ_Инвентаризации.ПолучитьЗначение(ТекСтр, "ОстатокТовара");
				КонецЕсли;								
			Иначе
				Если Тз_Остатки_ТМЦ.НайтиЗначение(ПолучитьТМЦУпаковку(ТЗ_ТМЦ_ДляВыборки.ТМЦ, ""), ТекСтр, "ТМЦУпаковка") = 1 Тогда
					Остаток = Тз_Остатки_ТМЦ.ПолучитьЗначение(ТекСтр, "ОстатокТовара");
				КонецЕсли;				
			КонецЕсли;

			СтарДатаВыпуска = Дата(0);
			СтарТМЦ = ТЗ_ТМЦ_ДляВыборки.ТМЦ;
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ.ОдинаковаяПрРазныеМарк) = 1 Тогда
				РегВ = СоздатьОбъект("Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции");
				РегВ.УстановитьЗначениеФильтра("Продукция", ТЗ_ТМЦ_ДляВыборки.ТМЦ, 1);
				РегВ.ОбратныйПорядок(1);
				РегВ.ВыбратьДвижения(, СформироватьПозициюДокумента(ДокКонца));
				Пока РегВ.ПолучитьДвижение() = 1 Цикл
					СтарДатаВыпуска = РегВ.ТекущийДокумент().ДатаДок;
					Остаток = Макс(0, Остаток - РегВ.Количество);
					Если Остаток = 0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			СрокГодности = ?(ТЗ_ТМЦ_ДляВыборки.ТМЦ.СрокГодностиПр = 0, ТЗ_ТМЦ_ДляВыборки.ТМЦ.СрокГодности, ТЗ_ТМЦ_ДляВыборки.ТМЦ.СрокГодностиПр);
			Если ТЗ_ТМЦ_ДляВыборки.ТМЦ.ЕдиницаИзмерения = Перечисление.ЕдиницыВремени.День Тогда
				ПредельнаяДата = ДатаЗадания - Окр(СрокГодности / 3 * 2, 0);
			ИначеЕсли ТЗ_ТМЦ_ДляВыборки.ТМЦ.ЕдиницаИзмерения = Перечисление.ЕдиницыВремени.Месяц Тогда
				ПредельнаяДата = ДобавитьМесяц(ДатаЗадания, -СрокГодности) + 10;
			Иначе
				ПредельнаяДата = ДатаЗадания - Окр(Окр(СрокГодности / 24, 0) / 3 * 2, 0);
			КонецЕсли;
		КонецЕсли;
		
		ТекКолонка = ТекКолонка + 1;		
		ВывестиБлокТаблицы(3,4,3,4,255,255,255,0,0,0,4,3,2,Лев(Формат(СтарДатаВыпуска, "ДДДММГГ"), 5),0,8,0,0,,,1);
		Если (ПредельнаяДата > СтарДатаВыпуска) И (СтарДатаВыпуска <> Дата(0)) Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255, 128, 128);
		КонецЕсли;		
	КонецЦикла;
	
	СтатическаяСтрокаВыпуски = ТекСтрока;	
КонецПроцедуры // ВыводСтрокиИто

//====================================================================== //--- УМК Сандомирский В.Ю. (30.04.15)
Процедура ВывестиЗаданияНаПроизводство()	
	ТекСтрока = СтатическаяСтрокаИтогиЗаказовКлиентов_раз;
	
	Тз_Итоги_Заданий = СоздатьОбъект("ТаблицаЗначений");
	Тз_Итоги_Заданий.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	Тз_Итоги_Заданий.НоваяКолонка("ТМЦУпаковка","Строка");
	Тз_Итоги_Заданий.НоваяКолонка("КвоСумма","Число",14,0);
	Тз_Итоги_Заданий.НоваяКолонка("КвоКг","Число",14,0);
	Тз_Итоги_Заданий.УдалитьСтроки();
	
	//--- Читаем задания за текущий день
	ДокЗаданиеПроизводство = СоздатьОбъект("Документ.УМК_ЗаданиеНаПроизводство");
	

	НачалоПериода = ДатаЗадания;	
	КонецПериода  = ДатаЗаказа-1;
	ДокЗаданиеПроизводство.ВыбратьДокументы(НачалоПериода,КонецПериода);

	Пока ДокЗаданиеПроизводство.ПолучитьДокумент() = 1 Цикл		
		//--- Проверим чтобы дата документа и дата выпуска были в периоде
		//Если  ((НачалоПериода <= ДокЗаданиеПроизводство.ДатаДок) И ( ДокЗаданиеПроизводство.ДатаДок <= КонецПериода)) Тогда			
		//КонецЕсли;
		Если ДокЗаданиеПроизводство.ПометкаУдаления() = 1 Тогда // --- УМК Сандомирский В.Ю. (26.06.15)
			Продолжить;	
		КонецЕсли;
		
		// ---- НашлиТМЦЗадания в ТЗ_ТМЦ_ДляВыборки если нет но и не создаем строку
		Тз_СтрокиЗадания = СоздатьОбъект("ТаблицаЗначений");
		ДокЗаданиеПроизводство.ВыгрузитьТабличнуюЧасть(Тз_СтрокиЗадания);
		Инд = 1;
		Пока Инд <= Тз_СтрокиЗадания.КоличествоСтрок() Цикл
			Тз_СтрокиЗадания.ПолучитьСтрокуПоНомеру(Инд);
			ТекСтрока_	 = "";
			ТекКолонка_  = "";
			Если ТЗ_ТМЦ_ДляВыборки.НайтиЗначение(Тз_СтрокиЗадания.Продукция,ТекСтрока_,ТекКолонка_) = 0 Тогда
				Тз_СтрокиЗадания.УдалитьСтроку(Инд);
				Продолжить;
			Иначе
				ДатаВыпуска = ?(Тз_СтрокиЗадания.ДатаВыпускаС = Дата(0), ДокЗаданиеПроизводство.ДатаВыпуска, Тз_СтрокиЗадания.ДатаВыпускаС);
				Если НЕ((НачалоПериода <= ДатаВыпуска) И (ДатаВыпуска <= КонецПериода)) Тогда //--- УМК Сандомирский В.Ю. (26.06.15) не должны попадать задания у которіх віпуск другой датой	
					Тз_СтрокиЗадания.УдалитьСтроку(Инд);
					Продолжить;					
				КонецЕсли;
			КонецЕсли;
			
			Инд = Инд + 1;
		КонецЦикла;
		
		НашлиЧтоНибуть = Тз_СтрокиЗадания.КоличествоСтрок();		
		Если НашлиЧтоНибуть = 0 Тогда // --- задание не попало в фильр ТМЦ
			Продолжить; //--- следующее задание.
		КонецЕсли;	
		//---
		
		Тз_СтрокиЗадания.Свернуть("Продукция","КвоФаршаИзКутеров,КвоФарша,КвоКутеров,КвоКг"); //--- сворачиваем по продукции		
		//--- Первая строка (Кг приведеные - участвуют в расчете)
		
		ТекСтрока = ТекСтрока + 1;
		ТекКолонка = 4;
		ВывестиБлокТаблицы(3,3,3,3,255,255,255,0,0,0,4,3,2,"Произ. " + ДокЗаданиеПроизводство.НомерДок + " (" + ДокЗаданиеПроизводство.ДатаДок 
	 																		+ ")" + глПравильныйСимволПереноса + "(" + ДокЗаданиеПроизводство.ДатаВыпуска +   ") "  + 
	 																		"соз. " + Строка(ДокЗаданиеПроизводство.ДатаСоздания) + " " + ДокЗаданиеПроизводство.ВремяСоздания + 
	 																		СокрЛП(ДокЗаданиеПроизводство.Примечание),
	 																		1,10,0,0);			
		//Тз_СтрокиЗадания.НоваяКолонка();		
		ТекКолонка = 6;		
		ИтогоПоСТроке = 0;
		
		ТекГруппа = "";
		фЦвет = 0;
		тЦвет = 0;			
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл			
			ТекстВЯчейку = "";
			ТекСтр 	= 0;
			ТекКол 	= "Продукция";

			Если (ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 1) ИЛИ (ТЗ_ТМЦ_ДляВыборки.Упаковка = НетУп) Тогда
				Тз_СтрокиЗадания.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТекСтр,ТекКол);
				Если ТекСтр <> 0 Тогда
					Тз_СтрокиЗадания.ПолучитьСтрокуПоНомеру(ТекСтр);	
					ТекстВЯчейку = ?(ТЗ_ТМЦ_ДляВыборки.Упаковка = НетУп, Окр(Тз_СтрокиЗадания.КвоКг,0,1), Окр(Тз_СтрокиЗадания.КвоКутеров,0,1));	//--- в кутерах
					Кг			 = Окр(Тз_СтрокиЗадания.КвоКг,0,1);
					
					Тз_Итоги_Заданий.НоваяСтрока();
					Тз_Итоги_Заданий.ТМЦ 		= ТЗ_ТМЦ_ДляВыборки.ТМЦ;
					Тз_Итоги_Заданий.ТМЦУпаковка = ПолучитьТМЦУпаковку(ТЗ_ТМЦ_ДляВыборки.ТМЦ, ТЗ_ТМЦ_ДляВыборки.Упаковка);
					Тз_Итоги_Заданий.КвоСумма 	= Кг;	
					Тз_Итоги_Заданий.КвоКг		= Кг;
					Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 1 Тогда
						ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;
					КонецЕсли;					
				КонецЕсли;				
			КонецЕсли;
					
			ТекКолонка = ТекКолонка + 1;
			ВывестиБлокТаблицы(3,3,3,3,255,255,198,0,0,0,4,3,2,ТекстВЯчейку,1,10,1,1);				
			
			Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
				Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда
					
					Если тЦвет = 0 Тогда
						тЦвет = 1;
					Иначе
						тЦвет = 0;
					КонецЕсли;
					
					ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
				КонецЕсли;		
			КонецЕсли;
					
			Если перСыБезУпаковки = 2 Тогда
				Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
					фЦвет = 2;
				Иначе
					фЦвет = тЦвет;
				КонецЕсли;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;

			Если фЦвет = 2 Тогда	
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
			ИначеЕсли фЦвет = 0 Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
			КонецЕсли;				
		КонецЦикла;
		
		ВывестиБлокТаблицы(3,3,3,3,255,255,255,0,0,0,4,3,2,ИтогоПоСТроке,1,10,0,0, 6);
		
		//--- Вторая колонка (Кг фарша)
		
		ТекСтрока = ТекСтрока + 1;
		ТекКолонка = 4;
		
		ВывестиБлокТаблицы(3,3,3,3,255,255,255,0,0,0,4,3,2,"(Кг фарша)",1,9,0,0);
		
		ТекКолонка = 6;
		
		ИтогоПоСТроке = 0;
		
		ТекГруппа = "";
		фЦвет = 0;
		тЦвет = 0;
		
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
			
			ТекстВЯчейку = "";
			ТекСтр 	= "";
			ТекКол 	= "";

			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка)	= 1 Тогда
				Если Тз_СтрокиЗадания.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТекСтр,ТекКол) = 1 Тогда
					Тз_СтрокиЗадания.ПолучитьСтрокуПоНомеру(ТекСтр);
					ТекстВЯчейку = Окр(Тз_СтрокиЗадания.КвоФарша,0,1);	//--- в КвоКутеров
					ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;	
				КонецЕсли;				
			КонецЕсли;					
			ТекКолонка = ТекКолонка + 1;
			
			ВывестиБлокТаблицы(3,3,3,3,255,255,198,0,0,0,4,3,2,ТекстВЯчейку,1,9,1,1);
			
			Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
				Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда	
					Если тЦвет = 0 Тогда
						тЦвет = 1;
					Иначе
						тЦвет = 0;
					КонецЕсли;	
					ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
				КонецЕсли;		
			КонецЕсли;
					
			Если перСыБезУпаковки = 2 Тогда
				Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
					фЦвет = 2;
				Иначе
					фЦвет = тЦвет;
				КонецЕсли;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;
					
			Если фЦвет = 2 Тогда	
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
			ИначеЕсли фЦвет = 0 Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
			КонецЕсли;			
		КонецЦикла;
		
		ВывестиБлокТаблицы(3,3,3,3,255,255,255,0,0,0,4,3,2,ИтогоПоСТроке,1,9,0,0,6);
		
		Если ИтогоПоСТроке = 0 Тогда //--- не выводим пустое
			ТекСтрока = ТекСтрока - 1;			
		КонецЕсли;		
	КонецЦикла;
		
	СтатическаяСтрокаПоследнегоЗадания = ТекСтрока;	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (14.07.15)
Процедура ВывестиЗаданияНаУпаковку()	
	ТекСтрока = СтатическаяСтрокаПоследнегоЗадания;	
	Тз_Итоги_Заданий_У = СоздатьОбъект("ТаблицаЗначений");
	Тз_Итоги_Заданий_У.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	Тз_Итоги_Заданий_У.НоваяКолонка("Упаковка","Справочник.ВидыУпаковки");
	Тз_Итоги_Заданий_У.НоваяКолонка("ТМЦУпаковка","Строка");
	Тз_Итоги_Заданий_У.НоваяКолонка("КвоСумма","Число",14,0);
	Тз_Итоги_Заданий_У.НоваяКолонка("КвоКг","Число",14,0);
	
	//--- Читаем задания за текущий день
	ДокЗаданиеПроизводство = СоздатьОбъект("Документ.УМК_ЗаданиеНаУпаковку");
	НачалоПериода = ДатаЗадания;	
	КонецПериода  = ДатаЗаказа-1;

	ДокЗаданиеПроизводство.ВыбратьДокументы(НачалоПериода,КонецПериода);
	Пока ДокЗаданиеПроизводство.ПолучитьДокумент() = 1 Цикл		
		//--- Проверим чтобы дата документа и дата выпуска были в периоде
		Если  ((НачалоПериода <= ДокЗаданиеПроизводство.ДатаДок) И ( ДокЗаданиеПроизводство.ДатаДок <= КонецПериода)) 
			  И 
			  ((НачалоПериода <= ДокЗаданиеПроизводство.ДатаВыпуска) И ( ДокЗаданиеПроизводство.ДатаВыпуска <= КонецПериода)) Тогда //--- УМК Сандомирский В.Ю. (26.06.15) не должны попадать задания у которіх віпуск другой датой	
			//--- НОРМ
		Иначе
			Продолжить;	
		КонецЕсли;

		Если ДокЗаданиеПроизводство.ПометкаУдаления() = 1 Тогда // --- УМК Сандомирский В.Ю. (26.06.15)
			Продолжить;
		КонецЕсли;
		
		// ---- НашлиТМЦЗадания в ТЗ_ТМЦ_ДляВыборки если нет но и не создаем строку
		Тз_СтрокиЗадания_ = СоздатьОбъект("ТаблицаЗначений");
		ДокЗаданиеПроизводство.ВыгрузитьТабличнуюЧасть(Тз_СтрокиЗадания_);
		ЕстьСтрокиСМинусом = 0;
		Тз_СтрокиЗадания_.ВыбратьСтроки();
		Пока Тз_СтрокиЗадания_.ПолучитьСтроку() = 1 Цикл
			Если (Тз_СтрокиЗадания_.ВидУпаковки = НетУп) И (Тз_СтрокиЗадания_.КвоКг < 0) Тогда
				ЕстьСтрокиСМинусом = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		НашлиЧтоНибуть = 0;
		Тз_СтрокиЗадания_.ВыбратьСтроки();
		Пока Тз_СтрокиЗадания_.ПолучитьСтроку() = 1 Цикл
			ТекСтрока_	 = "";
			ТекКолонка_  = "";
			Если ТЗ_ТМЦ_ДляВыборки.НайтиЗначение(Тз_СтрокиЗадания_.Продукция,ТекСтрока_,ТекКолонка_) = 1 Тогда
				НашлиЧтоНибуть = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НашлиЧтоНибуть = 0 Тогда // --- задание не попало в фильр ТМЦ
			Продолжить; //--- следующее задание.
		КонецЕсли;	
		//---
		
		Если ЕстьСтрокиСМинусом = 0 Тогда
			КвоСтрок = Тз_СтрокиЗадания_.КоличествоСтрок(); 
			Для Инд = 1 По КвоСтрок Цикл
				Тз_СтрокиЗадания_.НоваяСтрока();
				Тз_СтрокиЗадания_.СтараяПродукция = Тз_СтрокиЗадания_.ПолучитьЗначение(Инд, "СтараяПродукция");
				Тз_СтрокиЗадания_.ПродукцияЗаменена = 1;
				Тз_СтрокиЗадания_.Продукция = Тз_СтрокиЗадания_.ПолучитьЗначение(Инд, "Продукция");
				Тз_СтрокиЗадания_.ВидУпаковки = НетУп;
				Тз_СтрокиЗадания_.КвоКг = -Тз_СтрокиЗадания_.ПолучитьЗначение(Инд, "КвоКг");
			КонецЦикла;
		КонецЕсли;
		Тз_СтрокиЗадания_.Свернуть("СтараяПродукция,Продукция,ВидУпаковки","КвоКг"); //--- сворачиваем по продукции
		Тз_СтрокиЗадания_.НоваяКолонка("ТМЦУпаковка","Строка");
		Тз_СтрокиЗадания_.ВыбратьСтроки();
		Пока Тз_СтрокиЗадания_.ПолучитьСтроку() = 1 Цикл
			Прод = ?(ПустоеЗначение(Тз_СтрокиЗадания_.СтараяПродукция) = 0, Тз_СтрокиЗадания_.СтараяПродукция, Тз_СтрокиЗадания_.Продукция);
			Тз_СтрокиЗадания_.ТМЦУпаковка =ПолучитьТМЦУпаковку(Прод.Наименование, Тз_СтрокиЗадания_.ВидУпаковки);
		КонецЦикла;
		
		//--- Первая строка (Кг приведеные - участвуют в расчете)		
		ТекСтрока = ТекСтрока + 1;
		ТекКолонка = 4;
		ВывестиБлокТаблицы(3,3,3,3,255,255,255,0,0,132,4,3,2,"Упак. " + ДокЗаданиеПроизводство.НомерДок +  " (" + ДокЗаданиеПроизводство.ДатаДок 
	 																		+ ")" + глПравильныйСимволПереноса + "(" + ДокЗаданиеПроизводство.ДатаВыпуска +   ") "  +
	 																		"соз. " + Строка(ДокЗаданиеПроизводство.ДатаСоздания) + " " + ДокЗаданиеПроизводство.ВремяСоздания + 
	 																		СокрЛП(ДокЗаданиеПроизводство.Примечание),
	 																		1,10,0,0);			
		ТекКолонка = 6;		
		ИтогоПоСТроке = 0;		
		ТекГруппа = "";
		фЦвет = 0;
		тЦвет = 0;	
		
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл			
			ТекстВЯчейку = "";
			ТекСтр 	= "";
			ТекКол 	= "ТМЦУпаковка";
			
			Если перСыБезУпаковки = 2 Тогда
				Если Тз_СтрокиЗадания_.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка,ТекСтр, ТекКол) = 1 Тогда
					Тз_СтрокиЗадания_.ПолучитьСтрокуПоНомеру(ТекСтр);
					ТекстВЯчейку = Окр(Тз_СтрокиЗадания_.КвоКг,0,1);	 //--- в приведенных килограммах 
					Кг			 = Окр(Тз_СтрокиЗадания_.КвоКг,0,1);  
					ИтогоПоСТроке = ИтогоПоСТроке + ?(ТекстВЯчейку > 0, ТекстВЯчейку, 0);
					Тз_Итоги_Заданий_У.НоваяСтрока();
					Тз_Итоги_Заданий_У.ТМЦ 		= ТЗ_ТМЦ_ДляВыборки.ТМЦ;
					Тз_Итоги_Заданий_У.Упаковка = ТЗ_ТМЦ_ДляВыборки.Упаковка; 
					Тз_Итоги_Заданий_У.ТМЦУпаковка = ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка; 					
					Тз_Итоги_Заданий_У.КвоСумма 	= Кг;	
					Тз_Итоги_Заданий_У.КвоКг		= Кг;	
				КонецЕсли;	
			КонецЕсли;
					
			ТекКолонка = ТекКолонка + 1;
			ВывестиБлокТаблицы(3,3,3,3,255,255,198,0,0,132,4,3,2,ТекстВЯчейку,1,10,1,1);
			
			Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
				Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда					
					Если тЦвет = 0 Тогда
						тЦвет = 1;
					Иначе
						тЦвет = 0;
					КонецЕсли;					
					ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
				КонецЕсли;		
			КонецЕсли;
					
			Если перСыБезУпаковки = 2 Тогда
				Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
					фЦвет = 2;
				Иначе
					фЦвет = тЦвет;
				КонецЕсли;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;					
			
			Если фЦвет = 2 Тогда	
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
			ИначеЕсли фЦвет = 0 Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
			КонецЕсли;				
		КонецЦикла;
		
		ВывестиБлокТаблицы(3,3,3,3,255,255,255,0,0,132,4,3,2,ИтогоПоСТроке,1,10,0,0, 6);
	КонецЦикла;
		
	СтатическаяСтрокаПоследнегоЗадания = ТекСтрока;
	
	Тз_Итоги_Заданий_У.Свернуть("ТМЦ,Упаковка,ТМЦУпаковка","КвоСумма,КвоКг");
КонецПроцедуры // --- ВывестиЗаданияНаУпаковку()

//====================================================================== //--- УМК Сандомирский В.Ю. (29.06.15)
Процедура ВывестиСтрокуОстатки()	
	//--- ОСТАТКИ 
	ТекСтрока = СтатическаяСтрокаВыпуски;
	
	ТекСтрока = ТекСтрока + 1;
	СтатическаяСтрокаОстаткиФактические = ТекСтрока + 1;
	ТекКолонка = 4;
	
	ВывестиБлокТаблицы(3,4,3,4,255,255,255,0,0,0,4,3,2,"Остатки(кг):",1,10,0,0);
	Если ПустоеЗначение(ВыбИнвентаризация) = 1 Тогда
		ВывестиБлокТаблицы(3,4,3,4,255,255,255,0,0,0,4,3,2,"Остатки ФАКТИЧЕСКИЕ(кг):",1,10,0,0,,ТекСтрока + 1);	
	КонецЕсли;
	ТекКолонка = 6;	
	ИтогоПоСТроке = 0;
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл		
		ТекстВЯчейку = "";
		ТекСтр 	= "";
		ТекКол 	= "ТМЦУпаковка";
		
		Если Тз_Остатки_ТМЦ.НайтиЗначение(СокрЛП(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка),ТекСтр,ТекКол) = 1 Тогда
			Тз_Остатки_ТМЦ.ПолучитьСтрокуПоНомеру(ТекСтр);
			ТекстВЯчейку = Окр(Тз_Остатки_ТМЦ.ОстатокТовара,0,1);
			Если (перСыБезУпаковки = 1) ИЛИ ((перСыБезУпаковки = 2) И (ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 1)) Тогда
				ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;
			КонецЕсли;			
		КонецЕсли;	
			
		ТекКолонка = ТекКолонка + 1;
		ВывестиБлокТаблицы(3,4,3,4,255,255,255,0,0,0,4,3,2,ТекстВЯчейку,0,10,0,0);
		Если ПустоеЗначение(ВыбИнвентаризация) = 1 Тогда
			ВывестиБлокТаблицы(3,4,3,4,255,255,255,0,0,0,4,3,2,ТекстВЯчейку,0,10,0,0,,ТекСтрока + 1);
		КонецЕсли;
	КонецЦикла;
	
	ВывестиБлокТаблицы(3,3,3,3,255,255,255,0,0,0,4,3,2,ИтогоПоСТроке,1,10,0,0,6);
	Если ПустоеЗначение(ВыбИнвентаризация) = 1 Тогда
		ВывестиБлокТаблицы(3,4,3,4,255,255,255,0,0,0,4,3,2,ИтогоПоСТроке,0,10,0,0,6,ТекСтрока + 1);
	КонецЕсли;	
	СтатическаяСтрокаОстатки = ТекСтрока;
КонецПроцедуры // ВывестиСтрокуОстатки

//====================================================================== //--- УМК Сандомирский В.Ю. (29.06.15)	
Процедура ВыводСтрокВводаЗаданий() 
	//--- 1-я ПУСТАЯ СТРОКА ЗАКАЗА
	
	ТекСтрока = СтатическаяСтрокаОстаткиФактические;
	
	ТекСтрока = ТекСтрока + 1;
	ТекКолонка = 4;
	
	ВывестиБлокТаблицы(3, 3, 3, 3, 165, 206, 247, 0, 0, 0, 4, 3, 2, "Задание ввести " + " кутера (кг. уп.)", 1, 10, 0, 0); 
	
	ТекКолонка = 6;
	//--- чистим ячейки пригодится при интерактивном переформировании
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветТекста(0,0,0);
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = "";
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл					
		ТекКолонка = ТекКолонка + 1;
		ВывестиБлокТаблицы(3, 3, 3, 3, 165, 206, 247, 0, 0, 0, 4, 3, 2, "", 0, 10, 1, 1); 
		
		Если перСыБезУпаковки = 2 Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
				Если ТЗ_ТМЦ_ДляВыборки.Упаковка = НетУп Тогда
					Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
				Иначе	
					Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(0,132,198);	
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
	ТекСтрокаЗаявкиНаПроизводствоКутер = ТекСтрока;		//--- запоминаю номер строки для последующего чтения
	
	//--- 2-я ПУСТАЯ СТРОКА ЗАКАЗА
	
	ТекСтрока = ТекСтрока + 1;
	ТекКолонка = 4;
	ВывестиБлокТаблицы(3, 3, 3, 3, 165, 206, 247, 0, 0, 0, 4, 3, 2, "Задание ввести "  + "(КГ)", 1, 10, 0, 0); 
		
	ТекКолонка = 6;
	//--- чистим ячейки пригодится при интерактивном переформировании
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветТекста(0,0,0);
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = "";
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл					
		ТекКолонка = ТекКолонка + 1;
		ВывестиБлокТаблицы(3, 3, 3, 3, 165, 206, 247, 0, 0, 0, 4, 3, 2, "", 0, 10, 1, 1); 
		
		Если перСыБезУпаковки = 2 Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТекСтрокаЗаявкиНаПроизводствоКг = ТекСтрока;		//--- запоминаю номер строки для последующего чтения	
	//--- 3-я ПУСТАЯ СТРОКА ЗАКАЗА
	
	ТекСтрока = ТекСтрока + 1;
	ТекКолонка = 4;

	ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 0, 4, 3, 2, "Задание ввести "  + "(фарш)", 1, 10, 0, 0); 	
		
	ТекКолонка = 6;
	//--- чистим ячейки пригодится при интерактивном переформировании
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветТекста(0,0,0);
	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = "";
	
	ТекГруппа = "";
	фЦвет = 0;
	тЦвет = 0;
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл					
		ТекКолонка = ТекКолонка + 1;
		
		ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 0, 4, 3, 2, "", 0, 9, 1, 1); 		
		Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
			Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда				
				Если фЦвет = 0 Тогда
					фЦвет = 1;
				Иначе
					фЦвет = 0;
				КонецЕсли;
				
				ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
			КонецЕсли;		
		КонецЕсли;
				
		Если перСыБезУпаковки = 2 Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
				фЦвет = 2;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;
		Иначе
			фЦвет = тЦвет;
		КонецЕсли;
				
		Если (фЦвет <= 2) И (фЦвет >= 0) Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
		КонецЕсли;			
		
		ТекСтрокаЗаявкиНаПроизводствоФарш = ТекСтрока;		//--- запоминаю номер строки для последующего чтения							
	КонецЦикла;
	
	СтатическаяСтрокаПоляВвода = ТекСтрока;	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (29.06.15)
Процедура ВывестиСтрокуНезавершенка()
	//--- НЕЗАВЕРШЕНКА
	
	ТекСтрока = СтатическаяСтрокаПоляВвода;

	ТекСтрока = ТекСтрока + 1;
	ТекКолонка = 4;
	
	ВывестиБлокТаблицы(3,4,3,4,107,255,255,0,0,0, 4, 3, 2, "не выпущено на мом.остат.(КГ):", 1, 9, 0, 0);	
	ТекКолонка = 6;
	
	ИтогоПоСТроке = 0;
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
		Если ТЗ_ТМЦ_ДляВыборки.Упаковка = НетУп Тогда
			ТМЦУпаковка = ПолучитьТМЦУпаковку(ТЗ_ТМЦ_ДляВыборки.ТМЦ, "");
		Иначе
			ТМЦУпаковка = ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка;
		КонецЕсли;
		ТекстВЯчейку = Окр(ПолучитьЗначениеИзЕдинойТаблицы(ТЗ_ТМЦ_ДляВыборки.ТМЦ, ТЗ_ТМЦ_ДляВыборки.Упаковка, ТМЦУпаковка, Тз_Незавершенка_ТМЦ, "ОстатокТовара", ИтогоПоСТроке), 0);
		
		ТекКолонка = ТекКолонка + 1;
		ВывестиБлокТаблицы(3,4,3,4,0,132,132,0,0,0, 4, 3, 2, ТекстВЯчейку, 0, 10, 0, 0);
		
		Если СписокВетчины.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ) = 0 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(107,255,255);
		КонецЕсли;		
	КонецЦикла;	
	
	ВывестиБлокТаблицы(3,4,3,4,107,255,255,0,0,0, 4, 3, 2, Окр(ИтогоПоСТроке, 0), 1, 10, 0, 0, 6);	
	СтатическаяСтрокаНезавершенка = ТекСтрока;		
КонецПроцедуры // гл

//====================================================================== //--- УМК Сандомирский В.Ю. (01.07.15)
Процедура ВывестиСтрокуВсегоПроизводство()	
	//--- ВСЕГО ПРОИЗВОДСТВО (КГ)
	
	ТекСтрока = СтатическаяСтрокаНезавершенка;
	
	Тз_Итоги_Заданий.Свернуть("ТМЦ,ТМЦУпаковка","КвоСумма,КвоКг");
	
	//Тз_Итоги_Заданий.ВыбратьСтроку();
	
	ТекСтрока = ТекСтрока + 1;
	ТекКолонка = 4;
	
	ВывестиБлокТаблицы(3, 5, 3, 5, 255, 255, 255, 0, 0, 0, 4, 3, 2, "ВСЕГО ПРОИЗВОДСТВО(КГ)", 1, 9, 0, 0); 	
	ТекКолонка = 6;	
	ИтогоПоСТроке = 0;
	
	ТекГруппа = "";
	фЦвет = 0;
	тЦвет = 0;
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл		
		ТекстВЯчейку = "";
		ТекСтр 	= 0;
		ТекСтрЗаданийУ = 0;
		ТекКол 	= "";
		
		Если перСыБезУпаковки = 1 Тогда			
			Тз_Итоги_Заданий.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТекСтр,"ТМЦ");
		Иначе
			Тз_Итоги_Заданий.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка,ТекСтр,"ТМЦУпаковка");
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка)	= 0 Тогда
				Тз_Итоги_Заданий_У.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка, ТекСтрЗаданийУ, "ТМЦУпаковка");
				ТекстВЯчейку = ?(ТекСтрЗаданийУ = 0, 0, Тз_Итоги_Заданий_У.ПолучитьЗначение(ТекСтрЗаданийУ, "КвоКг")); 
			КонецЕсли;
		КонецЕсли;
		
		Если ТекСтр <> 0 Тогда
			Тз_Итоги_Заданий.ПолучитьСтрокуПоНомеру(ТекСтр);
			ТекстВЯчейку = ?(ТекстВЯчейку = "", 0, ТекстВЯчейку) + Окр(Тз_Итоги_Заданий.КвоКг,0,1);
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 1 Тогда
				ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;	
			КонецЕсли;
		КонецЕсли;
			
		ТекКолонка = ТекКолонка + 1;
		ВывестиБлокТаблицы(3, 5, 3, 5, 255, 255, 198, 0, 0, 0, 4, 3, 2, ТекстВЯчейку, 0, 10, 1, 1); 
		
		Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
			Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда				
				Если тЦвет = 0 Тогда
					тЦвет = 1;
				Иначе
					тЦвет = 0;
				КонецЕсли;				
				ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
			КонецЕсли;		
		КонецЕсли;
				
		Если перСыБезУпаковки = 2 Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
				фЦвет = 2;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;
		Иначе
			фЦвет = тЦвет;
		КонецЕсли;
				
		Если фЦвет = 2 Тогда	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
		ИначеЕсли фЦвет = 0 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
		КонецЕсли;			
	КонецЦикла;
	
	ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 0, 4, 3, 2, ИтогоПоСТроке, 1, 10, 1, 1, 6); 	
	СтатическаяСтрокаИтогиПроизводства = ТекСтрока;	
КонецПроцедуры // ВывестиЗаданияНаПроизводство()

//======================================================================
Функция РассчитатьЗапасПоКолонке(ТМЦ, Упаковка, ТМЦУпаковка, ИтогоПоСтроке)
	ИтогоЗапас = 0;	
	//--- Итоги заказов покупателей
	ИтогоЗапас = -ПолучитьИтогИзЗаказов(ТМЦ, Упаковка, ТМЦУпаковка);
	
	ТекСтр 	= 0;	
	Если ТЗ_Остатки_Фактические.НайтиЗначение(СокрЛП(ТМЦУпаковка),ТекСтр,"ТМЦУпаковка") = 1 Тогда
		ИтогоЗапас = ИтогоЗапас + Окр(ТЗ_Остатки_Фактические.ПолучитьЗначение(ТекСтр, "ОстатокТовара"),0,1);	
	КонецЕсли;
	
	//--- Незавершенка
	ИтогоЗапас = ИтогоЗапас + ПолучитьЗначениеИзЕдинойТаблицы(ТМЦ, Упаковка, ТМЦУпаковка, Тз_Незавершенка_ТМЦ, "ОстатокТовара");
	ИтогоЗапас = ИтогоЗапас + ПолучитьЗначениеИзЕдинойТаблицы(ТМЦ, Упаковка, ТМЦУпаковка, Тз_Итоги_Заданий, "КвоСумма");
	Если перСыБезУпаковки = 2 Тогда
		ИтогоЗапас = ИтогоЗапас + ПолучитьЗначениеИзЕдинойТаблицы(ТМЦ, Упаковка, ТМЦУпаковка, Тз_Итоги_Заданий_У, "КвоКг");
	КонецЕсли;

	Если ПустоеЗначение(Упаковка) = 1 Тогда
		ИтогоПоСТроке = ИтогоПоСТроке + ИтогоЗапас;
	КонецЕсли;	

	Возврат Окр(ИтогоЗапас, 0);	
КонецФункции

//====================================================================== 
Процедура ВывестиСтрокуЗапас()
	//--- ЗАПАС	
	ТекСтрока = СтатическаяСтрокаИтогиПроизводства;
	
	ТекСтрока = ТекСтрока + 1;
	ТекКолонка = 4;
	
	ВывестиБлокТаблицы(3, 5, 3, 5, 255, 255, 255, 0, 0, 0, 4, 3, 2, "ЗАПАС (КГ):", 1, 10, 0, 0);
	ТекКолонка = 6;	
	ИтогоПоСТроке = 0;
	//--- делаем пустую строку
	КвоЯчеекЧистить = ТЗ_ТМЦ_ДляВыборки.КоличествоСтрок()+6;
	Для ТекКол = 1 По КвоЯчеекЧистить Цикл
		Таблица.Область(ТекСтрока + 1, ТекКол,ТекСтрока + 1, ТекКол).РамкаОбвести(0,4,0,4);	
		Таблица.Область(ТекСтрока + 1, ТекКол,ТекСтрока + 1, ТекКол).ЦветФона(255,255,255);	
		Таблица.Область(ТекСтрока + 1, ТекКол,ТекСтрока + 1, ТекКол).Текст = "";
	КонецЦикла;
	//Если (фНоваяВерсия = 1) И (перСыБезУпаковки = 1) Тогда
	Если (перСыБезУпаковки = 1) Тогда
		ТекКолонка = 4;
		ТекСтрока = ТекСтрока + 1;
		ВывестиБлокТаблицы(3, 5, 3, 5, 255, 255, 255, 0, 0, 0, 4, 3, 2, "маркировка:", 0, 10, 0, 0);
		Для ТекКол = 1 По КвоЯчеекЧистить Цикл
			Таблица.Область(ТекСтрока, ТекКол, ТекСтрока, ТекКол).РамкаОбвести(3,4,3,4);	
			Таблица.Область(ТекСтрока, ТекКол, ТекСтрока, ТекКол).ГоризонтальноеПоложение(2);
		КонецЦикла;
		ТекСтрока = ТекСтрока - 1;
		ТекКолонка = 6;
	КонецЕсли;		
	
	ТекГруппа = "";
	фЦвет = 0;
	тЦвет = 0;	
	КолНет = 0; СуммаОтрицательных = 0; СуммаКол = 0;
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
		ТекстВЯчейку = РассчитатьЗапасПоКолонке(ТЗ_ТМЦ_ДляВыборки.ТМЦ, ТЗ_ТМЦ_ДляВыборки.Упаковка, ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка, ИтогоПоСТроке);
		ТекКолонка = ТекКолонка + 1;
		// в новой версии, если у ТМЦ есть такое же ТМЦ с другой маркировкой, то нужно отрицательный запас вычесть из запаса в головном ТМЦ
		ЗапасТек = Число(ТекстВЯчейку);
		Если (ЗапасТек < 0) И (фНоваяВерсия = 1) И (перСыБезУпаковки = 1) Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ.ОдинаковаяПрРазныеМарк) = 0 Тогда
				СтрГоловной = 0;
				Если ТЗ_ТМЦ_ДляВыборки.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ.ОдинаковаяПрРазныеМарк, СтрГоловной, "ТМЦ") = 1 Тогда
					СтарыйЗапас = Число(Таблица.Область(ТекСтрока, СтрГоловной + 6, ТекСтрока, СтрГоловной + 6).Текст);
					СтарыйЗапас2 = Число(Таблица.Область(ТекСтрока + 1, СтрГоловной + 6, ТекСтрока + 1, СтрГоловной + 6).Текст); 
					Таблица.Область(ТекСтрока, СтрГоловной + 6, ТекСтрока, СтрГоловной + 6).Текст = СтарыйЗапас + ЗапасТек; 
					Если СтарыйЗапас + ЗапасТек < 0 Тогда //--- УМК Сандомирский В.Ю. (18.05.16)
						Таблица.Область(ТекСтрока, СтрГоловной + 6,ТекСтрока, СтрГоловной + 6).Полужирный(1);
						Таблица.Область(ТекСтрока, СтрГоловной + 6,ТекСтрока, СтрГоловной + 6).РазмерШрифта(10);
						Таблица.Область(ТекСтрока, СтрГоловной + 6,ТекСтрока, СтрГоловной + 6).ЦветФона(255,0,0);
					КонецЕсли;					
					Таблица.Область(ТекСтрока + 1, СтрГоловной + 6, ТекСтрока + 1, СтрГоловной + 6).Текст = СтарыйЗапас2 + ЗапасТек;
					Таблица.Область(ТекСтрока + 1, ТекКолонка, ТекСтрока + 1, ТекКолонка).Текст = -ЗапасТек;
					ТекстВЯчейку = 0;
				КонецЕсли;
				// стары запас запишем в строку ниже
			КонецЕсли;
		КонецЕсли;		
		ВывестиБлокТаблицы(3, 5, 3, 5, 255, 255, 198, 0, 0, 0, 4, 3, 2, ТекстВЯчейку, 0, 10, 1, 1);
		
		Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
			Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда				
				Если тЦвет = 0 Тогда
					тЦвет = 1;
				Иначе
					тЦвет = 0;
				КонецЕсли;				
				ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
			КонецЕсли;		
		КонецЕсли;
				
		Если перСыБезУпаковки = 2 Тогда
			Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
				фЦвет = 2;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;
		Иначе
			фЦвет = тЦвет;
		КонецЕсли;

		Если фЦвет = 2 Тогда	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
		ИначеЕсли фЦвет = 0 Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
		КонецЕсли;	

		Если (ТЗ_ТМЦ_ДляВыборки.Упаковка = НетУп) Тогда
			Если КолНет <> 0 Тогда
				// нужно обновить предыдущюу колонку, где был нет
				Если Число(Таблица.Область(ТекСтрока, КолНет,ТекСтрока, КолНет).Текст) < -СуммаОтрицательных Тогда
					Таблица.Область(ТекСтрока, КолНет,ТекСтрока, КолНет).ЦветФона(231,252,28);
				КонецЕсли;
			КонецЕсли;
			КолНет = ТекКолонка;
			СуммаОтрицательных = 0;
		Иначе
			Если Число(ТекстВЯчейку) < 0 Тогда
				СуммаОтрицательных = СуммаОтрицательных + Число(ТекстВЯчейку)
			КонецЕсли;
		КонецЕсли;
		
		Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветТекста(0,0,0);
		
		Если ТекстВЯчейку < 0 Тогда //--- УМК Сандомирский В.Ю. (18.05.16)
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Полужирный(1);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РазмерШрифта(10);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,0,0);
		КонецЕсли;
	КонецЦикла;
	
	Если КолНет <> 0 Тогда
	// нужно обновить предыдущюу колонку, где был нет
		Если Число(Таблица.Область(ТекСтрока, КолНет,ТекСтрока, КолНет).Текст) < -СуммаОтрицательных Тогда
			Таблица.Область(ТекСтрока, КолНет,ТекСтрока, КолНет).ЦветФона(231,252,28);
		КонецЕсли;
	КонецЕсли;
	
	ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 0, 4, 3, 2, Окр(ИтогоПоСТроке,0), 1, 10, 0, 0, 6);					
	СтатическаяСтрокаЗапас = ТекСтрока;	
	СтатическаяСтрокаМаркировка = ТекСтрока + 1;	
КонецПроцедуры // ВывестиСтрокуЗапас()

//====================================================================== //--- УМК Сандомирский В.Ю. (30.04.15)
Процедура ВывестиЗаданияНаПроизводствоСледующегоПериода()
	
	ТекСтрока = СтатическаяСтрокаЗапас;
	
	Тз_Итоги_Заданий_ = СоздатьОбъект("ТаблицаЗначений");
	Тз_Итоги_Заданий_.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	Тз_Итоги_Заданий_.НоваяКолонка("ТМЦУпаковка","Строка");
	Тз_Итоги_Заданий_.НоваяКолонка("КвоСумма","Число",14,0);
	Тз_Итоги_Заданий_.НоваяКолонка("КвоКг","Число",14,0);
	Тз_Итоги_Заданий_.УдалитьСтроки();
	
	ТекСтрока = ТекСтрока + 2;
	
	ТекСтрока = ТекСтрока + 1;
	
	//--- Читаем задания за текущий день
	ДокЗаданиеПроизводство = СоздатьОбъект("Документ.УМК_ЗаданиеНаПроизводство");
	
	НачалоПериода = ДатаЗадания;
	КонецПериода  = ДатаЗаказа-1;

	ДокЗаданиеПроизводство.ВыбратьДокументы(НачалоПериода,КонецПериода);
	Пока ДокЗаданиеПроизводство.ПолучитьДокумент() = 1 Цикл
				
		//--- Проверим чтобы дата документа и дата выпуска были в периоде
		Если  ((НачалоПериода <= ДокЗаданиеПроизводство.ДатаДок) И ( ДокЗаданиеПроизводство.ДатаДок <= КонецПериода)) 
			  И 
			  (ДокЗаданиеПроизводство.ДатаВыпуска > КонецПериода) Тогда //--- УМК Сандомирский В.Ю. (26.06.15) не должны попадать задания у которіх віпуск другой датой	
			//--- НОРМ
		Иначе
			Продолжить;	
		КонецЕсли;
		
		Если ДокЗаданиеПроизводство.ПометкаУдаления() = 1 Тогда // --- УМК Сандомирский В.Ю. (26.06.15)
			Продолжить;
		КонецЕсли;
		
		// ---- НашлиТМЦЗадания в ТЗ_ТМЦ_ДляВыборки если нет но и не создаем строку
		Тз_СтрокиЗадания = СоздатьОбъект("ТаблицаЗначений");
		ДокЗаданиеПроизводство.ВыгрузитьТабличнуюЧасть(Тз_СтрокиЗадания);
		
		НашлиЧтоНибуть = 0;
		Тз_СтрокиЗадания.ВыбратьСтроки();
		Пока Тз_СтрокиЗадания.ПолучитьСтроку() = 1 Цикл
			ТекСтрока_	 = "";
			ТекКолонка_  = "";
			Если ТЗ_ТМЦ_ДляВыборки.НайтиЗначение(Тз_СтрокиЗадания.Продукция,ТекСтрока_,ТекКолонка_) = 1 Тогда
				НашлиЧтоНибуть = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НашлиЧтоНибуть = 0 Тогда // --- задание не попало в фильр ТМЦ
			Продолжить; //--- следующее задание.
		КонецЕсли;	
		//---
		
		Тз_СтрокиЗадания.Свернуть("Продукция","КвоФаршаИзКутеров,КвоФарша,КвоКутеров,КвоКг"); //--- сворачиваем по продукции
		
		//--- Первая строка (Кг приведеные - участвуют в расчете)
		
		ТекСтрока = ТекСтрока + 1;
		ТекКолонка = 4;
		ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 0, 4, 3, 2, "Произ. " + ДокЗаданиеПроизводство.НомерДок + " (" + ДокЗаданиеПроизводство.ДатаДок 
	 																		+ ")" + глПравильныйСимволПереноса + "(" + ДокЗаданиеПроизводство.ДатаВыпуска +   ") "  + 
	 																		"соз. " + Строка(ДокЗаданиеПроизводство.ДатаСоздания) + " " + ДокЗаданиеПроизводство.ВремяСоздания + 
	 																		СокрЛП(ДокЗаданиеПроизводство.Примечание), 1, 10, 0, 0);		
		
		//Тз_СтрокиЗадания.НоваяКолонка();
		
		ТекКолонка = 6;		
		ИтогоПоСТроке = 0;
		
		ТекГруппа = "";
		фЦвет = 0;
		тЦвет = 0;
		
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл			
			ТекстВЯчейку = "";
			ТекСтр 	= "";
			ТекКол 	= "";
			
			Если перСыБезУпаковки = 1 Тогда
				Если Тз_СтрокиЗадания.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТекСтр,ТекКол) = 1 Тогда
					Тз_СтрокиЗадания.ПолучитьСтрокуПоНомеру(ТекСтр);	
					ТекстВЯчейку = Окр(Тз_СтрокиЗадания.КвоКутеров,0,1);	//--- в кутерах
					Кг			 = Окр(Тз_СтрокиЗадания.КвоКг,0,1);  
					Тз_Итоги_Заданий_.НоваяСтрока();
					Тз_Итоги_Заданий_.ТМЦ 		= ТЗ_ТМЦ_ДляВыборки.ТМЦ;
					Тз_Итоги_Заданий_.КвоСумма 	= Кг;	
					Тз_Итоги_Заданий_.КвоКг		= Кг;
					ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;
				КонецЕсли;
			Иначе
				Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 1 Тогда
					Если Тз_СтрокиЗадания.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТекСтр,ТекКол) = 1 Тогда
						Тз_СтрокиЗадания.ПолучитьСтрокуПоНомеру(ТекСтр);	
						ТекстВЯчейку = Окр(Тз_СтрокиЗадания.КвоКутеров,0,1);	//--- в кутерах
						Кг			 = Окр(Тз_СтрокиЗадания.КвоКг,0,1);  
						Тз_Итоги_Заданий_.НоваяСтрока();
						Тз_Итоги_Заданий_.ТМЦ 		= ТЗ_ТМЦ_ДляВыборки.ТМЦ;
						Тз_Итоги_Заданий_.ТМЦУпаковка= ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка;
						Тз_Итоги_Заданий_.КвоСумма 	= Кг;	
						Тз_Итоги_Заданий_.КвоКг		= Кг;
						ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;
					КонецЕсли;
				Иначе
					Если Тз_СтрокиЗадания.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка,ТекСтр,ТекКол) = 1 Тогда
						Тз_СтрокиЗадания.ПолучитьСтрокуПоНомеру(ТекСтр);
						ТекстВЯчейку = Окр(Тз_СтрокиЗадания.КвоКутеров,0,1);	 //--- в приведенных килограммах 
						Кг			 = Окр(Тз_СтрокиЗадания.КвоКг,0,1);  
						Тз_Итоги_Заданий_.НоваяСтрока();
						Тз_Итоги_Заданий_.ТМЦ 		= ТЗ_ТМЦ_ДляВыборки.ТМЦ;
						Тз_Итоги_Заданий_.ТМЦУпаковка= ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка;
						Тз_Итоги_Заданий_.КвоСумма 	= Кг;	
						Тз_Итоги_Заданий_.КвоКг		= Кг;	
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
					
			ТекКолонка = ТекКолонка + 1;
			ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 198, 0, 0, 0, 4, 3, 2, ТекстВЯчейку, 1, 10, 1, 1);	
			
			Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
				Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда					
					Если тЦвет = 0 Тогда
						тЦвет = 1;
					Иначе
						тЦвет = 0;
					КонецЕсли;
					
					ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
				КонецЕсли;		
			КонецЕсли;
					
			Если перСыБезУпаковки = 2 Тогда
				Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
					фЦвет = 2;
				Иначе
					фЦвет = тЦвет;
				КонецЕсли;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;
					
			Если фЦвет = 2 Тогда	
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
			ИначеЕсли фЦвет = 0 Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
			КонецЕсли;			
		КонецЦикла;
		
		ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 0, 4, 3, 2, ИтогоПоСТроке, 1, 10, 0, 0, 6);
		
		//--- Вторая колонка (Кг фарша)
		
		ТекСтрока = ТекСтрока + 1;
		ТекКолонка = 4;
		ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 0, 4, 3, 2, "(Кг фарша)", 1, 9, 0, 0);		
		ТекКолонка = 6;
		
		ИтогоПоСТроке = 0;
		
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл			
			ТекстВЯчейку = "";
			ТекСтр 	= "";
			ТекКол 	= "";
			
			Если перСыБезУпаковки = 1 Тогда
				Если Тз_СтрокиЗадания.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТекСтр,ТекКол) = 1 Тогда
					Тз_СтрокиЗадания.ПолучитьСтрокуПоНомеру(ТекСтр);		
					ТекстВЯчейку = Окр(Тз_СтрокиЗадания.КвоФарша,0,1);	//--- в КвоКутеров
					ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;	
				КонецЕсли;
			Иначе
				Если Тз_СтрокиЗадания.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка,ТекСтр,ТекКол) = 1 Тогда
					Тз_СтрокиЗадания.ПолучитьСтрокуПоНомеру(ТекСтр);	
					ТекстВЯчейку = Окр(Тз_СтрокиЗадания.КвоФарша,0,1);	//--- в КвоКутеров			
				КонецЕсли;	
			КонецЕсли;
					
			ТекКолонка = ТекКолонка + 1;
			ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 0, 4, 3, 2, ТекстВЯчейку, 1, 9, 1, 1);		
		КонецЦикла;
		
		ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 0, 4, 3, 2, ИтогоПоСТроке, 1, 9, 0, 0,6);
		
		Если ИтогоПоСТроке = 0 Тогда //--- не выводим пустое			
			ТекСтрока = ТекСтрока - 1;			
		КонецЕсли;			
	КонецЦикла;
	
	Если ИтогоПоСТроке = 0 Тогда //--- Фиксируем аоследние ФАРША 
		ТекСтрока = ТекСтрока + 1;	
		
		Для ТекКол_ = 1 По 6 Цикл
			Таблица.Область(ТекСтрока, ТекКол_,ТекСтрока, ТекКол_).РамкаОбвести(0,0,0,0);	
			Таблица.Область(ТекСтрока, ТекКол_,ТекСтрока, ТекКол_).ЦветФона(255,255,255);
			Таблица.Область(ТекСтрока, ТекКол_,ТекСтрока, ТекКол_).ЦветТекста(0,0,0);
			Таблица.Область(ТекСтрока, ТекКол_,ТекСтрока, ТекКол_).Текст = "";	
		КонецЦикла;
		
		ТекКолонка = 6;	
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл		
			ТекКолонка = ТекКолонка + 1;	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(0,0,0,0);	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветТекста(0,0,0);
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = "";			
		КонецЦикла;	
	КонецЕсли;
		
	Если перСыБезУпаковки = 1 Тогда
		СтатическаяПоследняяСтрокаОтчета = ТекСтрока + 5;
	ИначеЕсли перСыБезУпаковки = 2 Тогда	
		СтатическаяПоследняяСтрокаОтчета = ТекСтрока;
	КонецЕсли;
	
	Тз_Итоги_Заданий_.Свернуть("ТМЦ,ТМЦУпаковка","КвоСумма,КвоКг");
	Если фНоваяВерсия = 1 Тогда
		НачДатаБуд = ДатаЗаказа + 1;
		ТекстЗ = 
		"//{{ЗАПРОС(ВыпускиБуд)
		|Период с НачДатаБуд;
		|Продукция = Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Продукция;
		|Количество = Регистр."+глПрефиксПлановыйВыпуск+"ВыпускПродукции.Количество;
		|Функция КвоВып = Сумма(Количество);
		|Группировка Продукция без упорядочивания без групп;
		|Условие(Продукция в СписокТМЦ);
		|"//}}ЗАПРОС
		;
		
		ЗапросВыпускиБуд = СоздатьОбъект("Запрос");
		Если ЗапросВыпускиБуд.Выполнить(ТекстЗ) = 0 Тогда
			Сообщить("Не выполнился запрос по выпускам буд.");
			Возврат;
		КонецЕсли;
	
		// ожидаемое производство 
		ТекСтрока = СтатическаяСтрокаЗапас + 3;
		ТекКолонка = 4;
		ВывестиБлокТаблицы(2, 2, 2, 2, 255, 255, 255, 0, 0, 0, 4, 3, 2, "выпуски буд. периодов (кг)", 0, 10, 0, 0);
		ТекКолонка = 6;
		
		ИтогоПоСТроке = 0;
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
			ТекстВЯчейку = ""; ТекСтр 	= ""; ТекКол 	= "";
			ЗапросВыпускиБуд.ВНачалоВыборки();
			Если ЗапросВыпускиБуд.Получить(ТЗ_ТМЦ_ДляВыборки.ТМЦ) = 1 Тогда
				ТекстВЯчейку = Окр(ЗапросВыпускиБуд.КвоВып,0,1);
				ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;
			КонецЕсли;
			
			ТекКолонка = ТекКолонка + 1;
			ВывестиБлокТаблицы(2, 2, 2, 2, 255, 255, 255, 0, 0, 0, 4, 3, 2, ТекстВЯчейку, 0, 10, 1, 1);
		КонецЦикла;
		
		ТекКолонка = 6;
		ВывестиБлокТаблицы(2, 2, 2, 2, 255, 255, 255, 0, 0, 0, 4, 3, 2, ИтогоПоСТроке, 1, 10, 0, 0, 6);	
		СтатическаяСтрокаВыпускиБудущихПериодов = ТекСтрока;
	Иначе
		СтатическаяСтрокаВыпускиБудущихПериодов = 0;
	КонецЕсли;	
	
	//--- ВСЕГО ПРОИЗВОДСТВО СЛЕДУЮЩЕГО ПЕРИОДА (КГ)
	
	ТекСтрока = СтатическаяСтрокаЗапас + 2;
	
	ТекКолонка = 4;
	ВывестиБлокТаблицы(3, 5, 3, 5, 198, 198, 255, 0, 0, 0, 4, 3, 2, "ВСЕГО ПРОИЗ.след.пер.(КГ)", 1, 10, 0, 0);
	ТекКолонка = 6;
	
	ИтогоПоСТроке = 0;
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
		ИтогоПоКолонке = 0;
		ТекстВЯчейку = "";
		ТекСтр 	= "";
		ТекКол 	= "";
		
		Если перСыБезУпаковки = 1 Тогда			
			Если Тз_Итоги_Заданий_.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТекСтр,"ТМЦ") = 1 Тогда
				Тз_Итоги_Заданий_.ПолучитьСтрокуПоНомеру(ТекСтр);
				ТекстВЯчейку = Окр(Тз_Итоги_Заданий_.КвоКг,0,1);				
				ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;
			КонецЕсли;			
		ИначеЕсли перСыБезУпаковки = 2 Тогда			
			Если Тз_Итоги_Заданий_.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка,ТекСтр,"ТМЦУпаковка") = 1 Тогда
				Тз_Итоги_Заданий_.ПолучитьСтрокуПоНомеру(ТекСтр);				
				ТекстВЯчейку = Окр(Тз_Итоги_Заданий_.КвоКг,0,1);
				ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;
			КонецЕсли;			
		КонецЕсли;

		ТекКолонка = ТекКолонка + 1;
		ВывестиБлокТаблицы(3, 5, 3, 5, 198, 198, 255, 0, 0, 0, 4, 3, 2, ТекстВЯчейку, 0, 10, 1, 1);
	КонецЦикла;
	
	ТекКолонка = 6;
	ВывестиБлокТаблицы(3, 3, 3, 3, 198, 198, 255, 0, 0, 0, 4, 3, 2, ИтогоПоСТроке, 1, 10, 0, 0, 6);
	СтатическаяСтрокаИтогиПроизводстваСледующегоПериода = ТекСтрока;	
КонецПроцедуры // ВывестиЗаданияНаПроизводство()
	
//====================================================================== //--- УМК Сандомирский В.Ю. (30.04.15)
Процедура ВывестиЗаданияНаУпаковкуСледующегоПериода()
	ТекСтрока = СтатическаяПоследняяСтрокаОтчета;	
	Тз_Итоги_Заданий_У_СП = СоздатьОбъект("ТаблицаЗначений");
	Тз_Итоги_Заданий_У_СП.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	Тз_Итоги_Заданий_У_СП.НоваяКолонка("Упаковка","Справочник.ВидыУпаковки");
	Тз_Итоги_Заданий_У_СП.НоваяКолонка("ТМЦУпаковка","Строка");
	Тз_Итоги_Заданий_У_СП.НоваяКолонка("КвоСумма","Число",14,0);
	Тз_Итоги_Заданий_У_СП.НоваяКолонка("КвоКг","Число",14,0);
	
	//--- Читаем задания за текущий день
	ДокЗаданиеПроизводство = СоздатьОбъект("Документ.УМК_ЗаданиеНаУпаковку");
	
	//ТекСтрока = ТекСтрока + 1;
	
	//--- Читаем задания за текущий день
	
	НачалоПериода = ДатаЗадания;
	КонецПериода  = ДатаЗаказа-1;

	ДокЗаданиеПроизводство.ВыбратьДокументы(НачалоПериода,КонецПериода);
	Пока ДокЗаданиеПроизводство.ПолучитьДокумент() = 1 Цикл
				
		//--- Проверим чтобы дата документа и дата выпуска были в периоде
		Если  ((НачалоПериода <= ДокЗаданиеПроизводство.ДатаДок) И ( ДокЗаданиеПроизводство.ДатаДок <= КонецПериода)) 
			  И 
			  (ДокЗаданиеПроизводство.ДатаВыпуска > КонецПериода) Тогда //--- УМК Сандомирский В.Ю. (26.06.15) не должны попадать задания у которіх віпуск другой датой	
			//--- НОРМ
		Иначе
			Продолжить;	
		КонецЕсли;
		
		Если ДокЗаданиеПроизводство.ПометкаУдаления() = 1 Тогда // --- УМК Сандомирский В.Ю. (26.06.15)
			Продолжить;
		КонецЕсли;
		
		// ---- НашлиТМЦЗадания в ТЗ_ТМЦ_ДляВыборки если нет но и не создаем строку
		Тз_СтрокиЗадания_ = СоздатьОбъект("ТаблицаЗначений");
		ДокЗаданиеПроизводство.ВыгрузитьТабличнуюЧасть(Тз_СтрокиЗадания_);
		
		НашлиЧтоНибуть = 0;
		Тз_СтрокиЗадания_.ВыбратьСтроки();
		Пока Тз_СтрокиЗадания_.ПолучитьСтроку() = 1 Цикл
			ТекСтрока_	 = "";
			ТекКолонка_  = "";
			Если ТЗ_ТМЦ_ДляВыборки.НайтиЗначение(Тз_СтрокиЗадания_.Продукция,ТекСтрока_,ТекКолонка_) = 1 Тогда
				НашлиЧтоНибуть = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НашлиЧтоНибуть = 0 Тогда // --- задание не попало в фильр ТМЦ
			Продолжить; //--- следующее задание.
		КонецЕсли;	
		//---
		
		Тз_СтрокиЗадания_.Свернуть("Продукция,ВидУпаковки","КвоКг"); //--- сворачиваем по продукции
		Тз_СтрокиЗадания_.НоваяКолонка("ТМЦУпаковка","Строка");
		Тз_СтрокиЗадания_.ВыбратьСтроки();
		Пока Тз_СтрокиЗадания_.ПолучитьСтроку() = 1 Цикл
			Тз_СтрокиЗадания_.ТМЦУпаковка = ПолучитьТМЦУпаковку(Тз_СтрокиЗадания_.Продукция, Тз_СтрокиЗадания_.ВидУпаковки);
		КонецЦикла;
		
		//--- Первая строка (Кг приведеные - участвуют в расчете)		
		ТекСтрока = ТекСтрока + 1;
		ТекКолонка = 4;
		ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 132, 4, 3, 2, "Упак. " + ДокЗаданиеПроизводство.НомерДок + " (" + ДокЗаданиеПроизводство.ДатаДок 
	 																		+ ")" + глПравильныйСимволПереноса + "(" + ДокЗаданиеПроизводство.ДатаВыпуска +   ") "  + 
	 																		"соз. " + Строка(ДокЗаданиеПроизводство.ДатаСоздания) + " " + ДокЗаданиеПроизводство.ВремяСоздания + 
	 																		СокрЛП(ДокЗаданиеПроизводство.Примечание),
	 																		1, 10, 0, 0);		
		ТекКолонка = 6;		
		ИтогоПоСТроке = 0;
		
		ТекГруппа = "";
		фЦвет = 0;
		тЦвет = 0;	
		
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл			
			ТекстВЯчейку = "";
			ТекСтр 	= "";
			ТекКол 	= "ТМЦУпаковка";
			
			Если перСыБезУпаковки = 2 Тогда
				Если Тз_СтрокиЗадания_.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка,ТекСтр,ТекКол) = 1 Тогда
					Тз_СтрокиЗадания_.ПолучитьСтрокуПоНомеру(ТекСтр);
					ТекстВЯчейку = Окр(Тз_СтрокиЗадания_.КвоКг,0,1);	 //--- в приведенных килограммах 
					Кг			 = Окр(Тз_СтрокиЗадания_.КвоКг,0,1);  
					Тз_Итоги_Заданий_У_СП.НоваяСтрока();
					Тз_Итоги_Заданий_У_СП.ТМЦ 		= ТЗ_ТМЦ_ДляВыборки.ТМЦ;
					Тз_Итоги_Заданий_У_СП.Упаковка  = ТЗ_ТМЦ_ДляВыборки.Упаковка;
					Тз_Итоги_Заданий_У_СП.ТМЦУпаковка  = ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка;
					Тз_Итоги_Заданий_У_СП.КвоСумма 	= Кг;	
					Тз_Итоги_Заданий_У_СП.КвоКг		= Кг;	
				КонецЕсли;	
			КонецЕсли;
					
			ТекКолонка = ТекКолонка + 1;
			ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 198, 0, 0, 132, 4, 3, 2, ТекстВЯчейку, 1, 10, 1, 1);
			
			Если ТЗ_ТМЦ_ДляВыборки.Уровень = 3 Тогда
				Если ТекГруппа <> ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель Тогда					
					Если тЦвет = 0 Тогда
						тЦвет = 1;
					Иначе
						тЦвет = 0;
					КонецЕсли;					
					ТекГруппа = ТЗ_ТМЦ_ДляВыборки.ТМЦ.Родитель
				КонецЕсли;		
			КонецЕсли;
					
			Если перСыБезУпаковки = 2 Тогда
				Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) <> 1 Тогда
					фЦвет = 2;
				Иначе
					фЦвет = тЦвет;
				КонецЕсли;
			Иначе
				фЦвет = тЦвет;
			КонецЕсли;
					
			Если фЦвет = 2 Тогда	
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(198,222,198); 
			ИначеЕсли фЦвет = 0 Тогда
				Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);	
			КонецЕсли;			
		КонецЦикла;
		
		ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 135, 4, 3, 2, ИтогоПоСТроке, 1, 10, 0, 0, 6);
	КонецЦикла;
	
	Тз_Итоги_Заданий_У_СП.Свернуть("ТМЦ,Упаковка,ТМЦУпаковка", "КвоСумма,КвоКг");
	ТекКол 	= "ТМЦУпаковка";
	ТекКолонка = 7;
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл			
		ТекстВЯчейку = "";
		ТекСтр 	= "";
		
		Если Тз_Итоги_Заданий_У_СП.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка, ТекСтр, ТекКол) = 1 Тогда
			Таблица.Область(СтатическаяСтрокаИтогиПроизводстваСледующегоПериода, ТекКолонка).Текст = Тз_Итоги_Заданий_У_СП.ПолучитьЗначение(ТекСтр, "КвоКг");
		КонецЕсли;
		ТекКолонка = ТекКолонка + 1;
	КонецЦикла;
	
	ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 135, 4, 3, 2, ИтогоПоСТроке, 1, 10, 0, 0, 6);	
	
	СтатическаяПоследняяСтрокаОтчета = ТекСтрока + 5;	
КонецПроцедуры // ВывестиЗаданияНаПроизводство()
	
//======================================================================
Процедура ДобавитьСтрокуТИнв(ТМЦ, ВидУпаковки, Остаток, Расчетная)
	ТЗ_Инвентаризации.НоваяСтрока();
	ТЗ_Инвентаризации.ТМЦ 			= ТМЦ;
	ТЗ_Инвентаризации.ТМЦУпаковка 	= ПолучитьТМЦУпаковку(ТМЦ, ВидУпаковки);
	ТЗ_Инвентаризации.ОстатокТовара = Остаток;
	ТЗ_Инвентаризации.Расчетная		= Расчетная;
КонецПроцедуры // 

//====================================================================== заполнение фактических остатков из инвентаризации
Процедура ФактическиеОстаткиИзИнвентаризации()	
	Если ПустоеЗначение(ВыбИнвентаризация) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ТЗ_Инвентаризации.УдалитьСтроки();
	Исключение
		Возврат;
	КонецПопытки;	
	ТЗ_Инвентаризации.НоваяКолонка("Расчетная","Перечисление.ДаНет");	
	
	ТИнв = СоздатьОбъект("ТаблицаЗначений");
	ВыбИнвентаризация.ВыгрузитьТабличнуюЧасть(ТИнв, "ТМЦ,ВидУпаковки,КвоПоФакту,фРасчетноеКвоПоФакту");
	
	Если перСыБезУпаковки = 1 Тогда // нужно заполнить Расчетную для всего товара
		ТИнв.Свернуть("ТМЦ,фРасчетноеКвоПоФакту", "КвоПоФакту");
		ТИнв.Сортировать("ТМЦ*");
		ТИнв.ВыбратьСтроки();
		Пока ТИнв.ПолучитьСтроку() = 1 Цикл
			Если ТИнв.фРасчетноеКвоПоФакту = Да Тогда
				// установим признак для всего товара
				Стр = 0;
				ТИнв.НайтиЗначение(ТИнв.ТМЦ, Стр, "ТМЦ");
				Пока ТИнв.ПолучитьЗначение(Стр, "ТМЦ") = ТИнв.ТМЦ Цикл
					ТИнв.УстановитьЗначение(Стр, "фРасчетноеКвоПоФакту", Да);
					Стр = Стр + 1;
					Если Стр > ТИнв.КоличествоСтрок() Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		ТИнв.Свернуть("ТМЦ,фРасчетноеКвоПоФакту", "КвоПоФакту");
	КонецЕсли;
	
	ТЗ_Инвентаризации.УдалитьСтроки();
	ТИнв.ВыбратьСтроки();
	Пока ТИнв.ПолучитьСтроку() = 1 Цикл
		Расчетная = ?(ТИнв.фРасчетноеКвоПоФакту = Да, Да, ПолучитьПустоеЗначение("Перечисления.ДаНет")); 
		Если перСыБезУпаковки = 2 Тогда
			ТекВУП = ?(ПустоеЗначение(ТИнв.ВидУпаковки) = 1, НетУп, ТИнв.ВидУпаковки);			
			ДобавитьСтрокуТИнв(ТИнв.ТМЦ, ТекВУП, ТИнв.КвоПоФакту, Расчетная);
		КонецЕсли;
		ДобавитьСтрокуТИнв(ТИнв.ТМЦ, "", ТИнв.КвоПоФакту, ?(перСыБезУпаковки = 2, Нет, Расчетная));
	КонецЦикла;
	
	//Если перСыБезУпаковки = 2 Тогда // добавим строку с пустой упаковкой
		ТЗ_Инвентаризации.Свернуть("ТМЦ,ТМЦУпаковка,Расчетная", "ОстатокТовара");
	//КонецЕсли;	
	
	//--- ОСТАТКИ Фактические	
	ТекСтрока = СтатическаяСтрокаОстаткиФактические;
	ТекКолонка = 4;
	ВывестиБлокТаблицы(3, 4, 3, 4, 255, 255, 255, 0, 0, 0, 4, 3, 2, "Остатки ФАКТИЧЕСКИЕ(кг):", 1, 10, 0, 0);
	ТекКолонка = 6;
	ИтогоПоСТроке = 0;
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл		
		ТекстВЯчейку = "";
		ТекСтр 	= "";
		ТекКол 	= "ТМЦУпаковка";		
		ТекКолонка = ТекКолонка + 1;
		Расчетная = Нет;		
		
		Если ТЗ_Инвентаризации.НайтиЗначение(СокрЛП(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка),ТекСтр,ТекКол) = 1 Тогда
			ТЗ_Инвентаризации.ПолучитьСтрокуПоНомеру(ТекСтр);
			ТекстВЯчейку = Окр(ТЗ_Инвентаризации.ОстатокТовара,0,1);	
			Расчетная = ТЗ_Инвентаризации.Расчетная;
		КонецЕсли;
		
		ВывестиБлокТаблицы(3, 4, 3, 4, 198, 233, 198, 0, 0, 0, 4, 3, 2, ТекстВЯчейку, 0, 10, 0, 0);		
			
		Если Расчетная = Да Тогда
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(41,107,255);
		КонецЕсли;
		Если (перСыБезУпаковки = 1) ИЛИ ((перСыБезУпаковки = 2) И (ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 1)) Тогда
			ИтогоПоСТроке = ИтогоПоСТроке + ТекстВЯчейку;
		КонецЕсли;
	КонецЦикла;

	//--- ИТОГ по строке ОСТАТКИ фактические
	ВывестиБлокТаблицы(3, 3, 3, 3, 255, 255, 255, 0, 0, 0, 4, 3, 2, ИтогоПоСТроке, 1, 10, 0, 0, 6);	
	ТЗ_Инвентаризации.Выгрузить(ТЗ_Остатки_Фактические);	
	ВывестиСтрокуЗапас(); //--- перезаполним запас		
КонецПроцедуры // ФактическиеОстаткиИзИнвентаризации()

//======================================================================
Процедура ОчиститьТабличнуюЧасть()
	
	Если ПустоеЗначение(СтатическаяПоследняяСтрокаОтчета) = 1 Тогда
		СтатическаяПоследняяСтрокаОтчета = 0;
	КонецЕсли;
	Если ПустоеЗначение(ВсегоКолонок) = 1 Тогда
		ВсегоКолонок = 0;
	КонецЕсли;
	
	Для ТекСтрока = 1 По СтатическаяПоследняяСтрокаОтчета Цикл
		Для ТекКолонка = 1 По ВсегоКолонок Цикл			
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).РамкаОбвести(0,0,0,0);	
			Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).ЦветФона(255,255,255);
		 	Таблица.Область(ТекСтрока, ТекКолонка,ТекСтрока, ТекКолонка).Текст = "";
		КонецЦикла;	
	КонецЦикла;
КонецПроцедуры // ОчиститьТабличнуюЧасть()

//====================================================================== //--- УМК Сандомирский В.Ю. (29.10.14)
Процедура ПервоначальноеЗаполнениеТаблицы(НеВыгружатьВЗаказник = 0) //--- УМК Сандомирский В.Ю. (06.04.15) 		
	ВсеНорм = "Да";
	//Если (ПустоеЗначение(ДокНачала) = 1) Тогда
	//	Сообщить("Не заполнен документ начала заказов клиентов");
	//	ВсеНорм = "Нет";	
	//КонецЕсли;
	
	Если (ПустоеЗначение(ДатаЗадания) = 1)  Тогда
		Сообщить("Не заполнена дата заданий на производство");
		ВсеНорм = "Нет";		
	КонецЕсли;
	
	Если (ПустоеЗначение(ДатаЗаказа) = 1)  Тогда
		Сообщить("Не заполнена дата заказов клиентов");
		ВсеНорм = "Нет";		
	КонецЕсли;
	
	Если ВсеНорм = "Нет" Тогда
		Предупреждение("Ошибки заполнения формы");
		Возврат;
	КонецЕсли;
	
	КоличествоСтрокТаблицыВводаДанных 	= 0;
	КоличествоКолонокТаблицыВводаДанных = 0;	
	Заполнить_ТЗ_ТМЦ(); 					//--- заполняем таблицу ТМЦ
	Заполнить_ТЗ_Кутеров(); 				//--- заполнить ТЗ кутеров (тут же заполняем ТЗ по фаршам)
	
	Если  перКлиенты = 1 Тогда 	//--- заполняем ТЗ по заказам покупателей 2й уровень
		Заполнить_ТЗ_ПоЗаказамПокупателей_2йУровень();
	ИначеЕсли  перКлиенты = 2 Тогда 	//--- заполняем ТЗ по заказам покупателей по клиентам
		Заполнить_ТЗ_ПоЗаказамПокупателей_поКлиентам();
	ИначеЕсли  перКлиенты = 3 Тогда 	//--- заполняем ТЗ по заказам покупателей по заказам
		Заполнить_ТЗ_ПоЗаказамПокупателей_Заказы();
	КонецЕсли;
	
	Если перСыБезУпаковки = 2 Тогда
		ЗаполнитьТЗУпаковки();
	КонецЕсли;	
 	Заполнить_ТЗ_Остатки(); 				//--- заполняем ТЗ остатки
 	Заполнить_ТЗ_Незавершенка();			//--- заполняем ТЗ незавершенки
 	ТЗАкций = глЗаполнитьТЗАкций(ДатаЗаказа, СписокТМЦ);
 	// для заполнения таблицы нужно взять упаковку
 	
 	ВывестиТаблицуПолностью();	
КонецПроцедуры // ПервоначальноеЗаполнениеТаблицы

//======================================================================
Процедура ОбновитьЗаказыКлиентов()
	
	Если  перКлиенты = 1 Тогда 	//--- заполняем ТЗ по заказам покупателей
		Заполнить_ТЗ_ПоЗаказамПокупателей_2йУровень();
	ИначеЕсли  перКлиенты = 2 Тогда 	//--- заполняем ТЗ по заказам покупателей
		Заполнить_ТЗ_ПоЗаказамПокупателей_поКлиентам();
	ИначеЕсли  перКлиенты = 3 Тогда 	//--- заполняем ТЗ по заказам покупателей
		Заполнить_ТЗ_ПоЗаказамПокупателей_Заказы();
	КонецЕсли;
	
 	ВывестиТаблицуПолностью(1);
	
КонецПроцедуры // ОбновитьЗаказыКлиентов()

//====================================================================== 
Процедура ВывестиТаблицуПолностью(ЗапомнитьЗначения = 0)	
	Ч = 0; М = 0; С = 0;
	ТекущееВремя(Ч,М,С);
	
	ВремяОбновления = "" + Формат(Ч,"Ч(0)2.0") + ":" + Формат(М,"Ч(0)2.0") + ":" + Формат(С,"Ч(0)2.0");	
 	Если ЗапомнитьЗначения = 1 Тогда
 		ТекКолонка = 6;
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
			ТекКолонка = ТекКолонка + 1;
			Если (перСыБезУпаковки = 2) И (ТЗ_ТМЦ_ДляВыборки.Упаковка = НетУп) Тогда
				Продолжить;
			КонецЕсли;						
			ТЗ_ТМЦ_ДляВыборки.ЗКво1 = Число(Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоКутер, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоКутер, ТекКолонка).Текст);
			ТЗ_ТМЦ_ДляВыборки.ЗКво2 = СокрЛП(Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоКг, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоКг, ТекКолонка).Текст);
			ТЗ_ТМЦ_ДляВыборки.ЗКво3 = Число(Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоФарш, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоФарш, ТекКолонка).Значение);
		КонецЦикла;
		ТСохраненныеЗначения = СоздатьОбъект("ТаблицаЗначений");
		ТЗ_ТМЦ_ДляВыборки.Выгрузить(ТСохраненныеЗначения);
 	КонецЕсли;
	
	ОчиститьТабличнуюЧасть();	
	ПолучитьТаблицуДляВыборки(); 	
 	ВывестиШапку();
 	ВывестиСтрокуВесКутера();
 	ВывестиСтрокуВесФарша();
 	ВывестиЗаказыКлиентов();
 	ВыводСтрокиИтогПоЗаказамКлиентов(1); 	 	
 	
 	ВывестиЗаданияНаПроизводство();
 	
 	Если перСыБезУпаковки = 2 Тогда	
 		ВывестиЗаданияНаУпаковку();
 	КонецЕсли;
 	
	ВыводСтрокиИтогПоЗаказамКлиентов(2);
	ВыводСтрокиИтогПоВыпускам(); 
 	ВывестиСтрокуОстатки(); 	
 	ВыводСтрокВводаЗаданий();
 	// теперь вернём числа
 	ТекКолонка = 6;
 	Если ЗапомнитьЗначения = 1 Тогда
		ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
		Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
			ТекКолонка = ТекКолонка + 1;
			Стр = 0;
			Если ТСохраненныеЗначения.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка, Стр, "ТМЦУпаковка") = 1 Тогда
				ТСохраненныеЗначения.ПолучитьСтрокуПоНомеру(Стр);
				Если Число(ТСохраненныеЗначения.ЗКво1) <> 0 Тогда
					Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоКутер, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоКутер, ТекКолонка).Текст = ТСохраненныеЗначения.ЗКво1;
					// нужно пересчитать таблицу
					ОбновитьЧисла(ТекСтрокаЗаявкиНаПроизводствоКутер, ТекКолонка, ТСохраненныеЗначения.ЗКво1, 0, "R" + ТекСтрокаЗаявкиНаПроизводствоКутер + "C" + ТекКолонка, 1);
				КонецЕсли;
				Если Число(ТСохраненныеЗначения.ЗКво2) <> 0 Тогда
					Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоКг, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоКг, ТекКолонка).Текст = ТСохраненныеЗначения.ЗКво2;
				КонецЕсли;
				Если Число(ТСохраненныеЗначения.ЗКво3) <> 0 Тогда
					Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоФарш, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоФарш, ТекКолонка).Значение = ТСохраненныеЗначения.ЗКво3;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
 	КонецЕсли;
 	
 	ВывестиСтрокуНезавершенка();
 	ВывестиСтрокуВсегоПроизводство();
 	
 	ВывестиСтрокуЗапас();
 	ВывестиЗаданияНаПроизводствоСледующегоПериода();
 	
 	Если перСыБезУпаковки = 2 Тогда
 		ВывестиЗаданияНаУпаковкуСледующегоПериода();
 	КонецЕсли;
 	
 	Если ПустоеЗначение(ВыбИнвентаризация) <> 1  Тогда
 		ФактическиеОстаткиИзИнвентаризации();
 	КонецЕсли;	
КонецПроцедуры // гл

//======================================================================
Процедура ОбновитьЯчейкуЗапас(НашлиТМЦ, НашлиУпаковку, ТМЦУпаковка, ИтогоПоСтроке, РасшифровкаГоризонталь, НомерКолонки, ТекЗначениеЯчейкиСтало, СуммаОтрицательных = 0)
	ИтогоПоСтроке = 0;					
	ИтогоЗапас = РассчитатьЗапасПоКолонке(НашлиТМЦ, НашлиУпаковку, ТМЦУпаковка, ИтогоПоСтроке);

	Если (Найти(РасшифровкаГоризонталь,"кутера") > 0) И (ПустоеЗначение(НашлиУпаковку) = 1) Тогда
		РазмерКутера 	 = Число(Таблица.Область(СтатическаяСтрокаВесКутера, НомерКолонки,СтатическаяСтрокаВесКутера , НомерКолонки).Текст);	
		КутераКилограммов = ТекЗначениеЯчейкиСтало / 100 * РазмерКутера;
		ТекстВЯчейкуЗапас = ИтогоЗапас + КутераКилограммов;
	Иначе
		ТекстВЯчейкуЗапас = ИтогоЗапас +  ТекЗначениеЯчейкиСтало;
	КонецЕсли;
	Вычесть = 0;
	Если (фНоваяВерсия = 1) И (перСыБезУпаковки = 1) Тогда
		// нужно вычесть остаток маркировки
		Вычесть = Число(Таблица.Область(СтатическаяСтрокаМаркировка,НомерКолонки,СтатическаяСтрокаМаркировка,НомерКолонки).Текст);		
	КонецЕсли;
					
	Таблица.Область(СтатическаяСтрокаЗапас,НомерКолонки,СтатическаяСтрокаЗапас,НомерКолонки).Текст 	= Окр(ТекстВЯчейкуЗапас + Вычесть);
					
	Если Окр(ТекстВЯчейкуЗапас + Вычесть) < 0 Тогда //--- УМК Сандомирский В.Ю. (18.05.16)
		Таблица.Область(СтатическаяСтрокаЗапас,НомерКолонки,СтатическаяСтрокаЗапас,НомерКолонки).Полужирный(1);
		Таблица.Область(СтатическаяСтрокаЗапас,НомерКолонки,СтатическаяСтрокаЗапас,НомерКолонки).РазмерШрифта(10);
		Таблица.Область(СтатическаяСтрокаЗапас,НомерКолонки,СтатическаяСтрокаЗапас,НомерКолонки).ЦветФона(255,0,0);
	Иначе	
		Таблица.Область(СтатическаяСтрокаЗапас,НомерКолонки,СтатическаяСтрокаЗапас,НомерКолонки).Полужирный(0);
		Таблица.Область(СтатическаяСтрокаЗапас,НомерКолонки,СтатическаяСтрокаЗапас,НомерКолонки).РазмерШрифта(8);	
		Таблица.Область(СтатическаяСтрокаЗапас,НомерКолонки,СтатическаяСтрокаЗапас,НомерКолонки).ЦветФона(255,255,255);
	КонецЕсли;	
	Если (СуммаОтрицательных <> 0) И (ИтогоЗапас < -СуммаОтрицательных) Тогда
		Таблица.Область(СтатическаяСтрокаЗапас, НомерКолонки,СтатическаяСтрокаЗапас, НомерКолонки).ЦветФона(231,252,28);
	КонецЕсли;
КонецПроцедуры //

//======================================================================
Процедура ОбработкаСтрокиОстаткиФактические(ЗначениеПоиска, НашлиТМЦ, ТкСтрока, ИмяКол, НашлиТМЦУпаковку, ТекЗначениеЯчейкиСтало, Прибавлять = 0);
	Если ТЗ_Остатки_Фактические.НайтиЗначение(ЗначениеПоиска, ТкСтрока, ИмяКол) = 1 Тогда
		ТЗ_Остатки_Фактические.ПолучитьСтрокуПоНомеру(ТкСтрока);
	Иначе						
		ТЗ_Остатки_Фактические.НоваяСтрока();
		ТЗ_Остатки_Фактические.ТМЦ = НашлиТМЦ;
		ТЗ_Остатки_Фактические.ТМЦУпаковка = НашлиТМЦУпаковку;
		ТЗ_Остатки_Фактические.ОстатокТовара = 0;
//		ТЗ_Остатки_Фактические.ПолучитьСтрокуПоНомеру(ТЗ_Остатки_Фактические.КоличествоСтрок());
	КонецЕсли;					
	ТЗ_Остатки_Фактические.ОстатокТовара = Окр(ТЗ_Остатки_Фактические.ОстатокТовара * Прибавлять + ТекЗначениеЯчейкиСтало, 0);	
КонецПроцедуры //

Процедура ОбновитьЧисла(НомерСтроки, НомерКолонки, ТекЗначениеЯчейкиСтало, ТекЗначениеЯчейкиБыло, ТекАдрес, НеВводитьНовоеЗначение = 0)
	РасшифровкаГоризонталь = СокрЛП(Таблица.Область(НомерСтроки,4).Текст);
	Если НеВводитьНовоеЗначение = 0 Тогда
		Если Найти(РасшифровкаГоризонталь,"кутера") > 0 Тогда				
			Если Таблица.Область(2,НомерКолонки,2,НомерКолонки).Текст = "нет" Тогда //--- Это упаковка там нет фарша сюда ничего не вводим
				Возврат;
			КонецЕсли;
			
			//Если (перСыБезУпаковки = 1) И (фНоваяВерсия = 1) Тогда
			Если (перСыБезУпаковки = 1) Тогда
				ТМЦ = ТЗ_ТМЦ_ДляВыборки.ПолучитьЗначение(НомерКолонки - 6, 1);
				Если ТипЗначенияСтр(ТМЦ) = "Справочник" Тогда
					Если ПустоеЗначение(ТМЦ.ОдинаковаяПрРазныеМарк) = 0 Тогда
						Предупреждение("Эта продукция маркируется на экспедиции");
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если Таблица.Область(2,НомерКолонки,2,НомерКолонки).ЦветФона() = 12639424 Тогда //--- Это упаковка там нет фарша сюда ничего не вводим
				ВвестиЧисло(ТекЗначениеЯчейкиСтало,"Введите вес:", 15,3);
			Иначе
				ВвестиЧисло(ТекЗначениеЯчейкиСтало,"Введите количество кутеров:", 14,0);
			КонецЕсли;				
		ИначеЕсли Найти(РасшифровкаГоризонталь,"КГ") > 0 Тогда
			Если Таблица.Область(2,НомерКолонки,2,НомерКолонки).ЦветФона() = 12639424 Тогда //--- Это упаковка там нет фарша сюда ничего не вводим
				Возврат;
			КонецЕсли;
			
			глВыборИзЗаказа = 2; //--- попадаем в фарш			
			
			Если фНоваяВерсия = 1 Тогда
				Если (перСыБезУпаковки = 1) Тогда
					ТМЦ = ТЗ_ТМЦ_ДляВыборки.ПолучитьЗначение(НомерКолонки - 6, 1);
					Если ТипЗначенияСтр(ТМЦ) = "Справочник" Тогда
						Если ПустоеЗначение(ТМЦ.ОдинаковаяПрРазныеМарк) = 0 Тогда
							Предупреждение("Эта продукция маркируется на экспедиции");
							Возврат;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				// проверим нет ли головного фарша. Вначале проверим заполнено ли поле Головной ДО. Если да, от на него позиционируемся.
				// если нет, проверим, не участвует ли выбранный ТМЦ в Головной ДО для других колбаса
				БылоКвоКг = 0; БылоИзКутеров = 0;
				Если ТипЗначенияСтр(ТекЗначениеЯчейкиБыло) = "Строка" Тогда
					Позиция = Найти(ТекЗначениеЯчейкиБыло,"к.");				
					БылоКвоКг 		= Окр(Число(Лев(ТекЗначениеЯчейкиБыло,Позиция-1)), 0);
					БылоИзКутеров 	= Число(Сред(ТекЗначениеЯчейкиБыло,Позиция+2)); 				
				КонецЕсли;
				
				СтрПоиска = 0;
				ГоловнойДО = ТЗ_ТМЦ_ДляВыборки.ГоловнойДО; 
				Если ПустоеЗначение(ГоловнойДО) = 1 Тогда
					Если ТЗ_ТМЦ_ДляВыборки.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ, СтрПоиска, "ГоловнойДО") = 1 Тогда
						ГоловнойДО = ТЗ_ТМЦ_ДляВыборки.ТМЦ;
					КонецЕсли;
				КонецЕсли;
				
				Справ=СоздатьОбъект("Справочник.ТМЦ");
				Если ((ПустоеЗначение(ТекЗначениеЯчейкиБыло) = 1) ИЛИ (ТипЗначенияСтр(ТекЗначениеЯчейкиБыло) = "Строка")) И (ПустоеЗначение(ГоловнойДО) = 0) Тогда
					Справ.НайтиЭлемент(ГоловнойДО);
				Иначе
					Справ.НайтиЭлемент(ТекЗначениеЯчейкиБыло);
				КонецЕсли;
				Справ.ВыборГруппы(0);
				ФлВвода=Справ.Выбрать("Выберите фарш","ДляВыбора");
				Если ФлВвода=1 Тогда
					ТекФарш=Справ.ТекущийЭлемент();
				КонецЕсли;
				
				Если ПустоеЗначение(ТекФарш) <> 1 Тогда					
					ТекСтр 	= "";
					ТекКол 	= "";
					Если ТЗ_ФаршейСтроки.НайтиЗначение(ТекФарш,ТекСтр,ТекКол) = 1 Тогда
					
						ТЗ_ФаршейСтроки.ПолучитьСтрокуПоНомеру(ТекСтр);
						Таблица.Область(НомерСтроки+1,НомерКолонки,НомерСтроки+1,НомерКолонки).Текст 	= ТекФарш.Код; //--- устанавливаем код фарша
						
						ТекСтр 	= "";
						ТекКол 	= ""; ТекКутеровФарша = 0;
									
						Если ВвестиЧисло(ТекКутеровФарша,"Введите из КУТЕРОВ Фарша:",14,0) = 1 Тогда							
							Замес = ТекФарш.Замес.Получить(ДатаЗадания);
							Если Замес <> 0 Тогда
								Если ТекКутеровФарша / Замес <> Цел(ТекКутеровФарша / Замес) Тогда
									Предупреждение("К-во кутеров должно быть кратно замесу");
								КонецЕсли;
							КонецЕсли;
							ТекСтр 	= "";
							ТекКол 	= "";
							Если ТЗ_КэшФаршей.НайтиЗначение(ТекФарш,ТекСтр,ТекСтр) = 1 Тогда
								ТЗ_КэшФаршей.ПолучитьСтрокуПоНомеру(ТекСтр);							
								ТекКгФарша = ТЗ_КэшФаршей.НормаКутеров;
							Иначе
								ТекКгФарша = ТекКутеровФарша / 100 * ТЗ_ФаршейСтроки.Кво;
							КонецЕсли;							
							
							ПроцПотерь    			= ТЗ_ТМЦ_ДляВыборки.ТМЦ.ПроцПотерь.Получить(ДатаЗадания);
							ТекКГ 				    = Окр(ТекКгФарша, 0) + БылоКвоКг;
							ТекКгФарша				= Окр(ТекКгФарша * ((100-ПроцПотерь)/100), 0);
							БылоДоВводаПродукции = ТекКгФарша;
							
							Если ВвестиЧисло(ТекКгФарша,"Введите число КГ продукции:",14,0) = 1 Тогда
								ВычитаемоеКГ = Окр(ТекКгФарша / ((100 - ПроцПотерь) / 100), 0);
								Если ВычитаемоеКГ > ТекКГ Тогда
									Предупреждение("Введенное количество продукции больше, чем остаток фарша в замесе");
									ВычитаемоеКГ = Мин(ВычитаемоеКГ, ТекКГ - БылоКвоКг);
								КонецЕсли;
								
								ТекЗначениеЯчейкиСтало = "" + Строка(ВычитаемоеКГ) + глПравильныйСимволПереноса + "к." + ТекКутеровФарша;
								ТекСтр 	= "";
								ТекКол 	= "";
								Если ТЗ_КэшФаршей.НайтиЗначение(ТекФарш,ТекСтр,ТекСтр) = 1 Тогда
									ТЗ_КэшФаршей.ПолучитьСтрокуПоНомеру(ТекСтр);
									ТЗ_КэшФаршей.НормаКутеров = ТЗ_КэшФаршей.НормаКутеров + БылоКвоКг - ВычитаемоеКГ;	
								Иначе
									ТЗ_КэшФаршей.НоваяСтрока();
									ТЗ_КэшФаршей.Фарш = ТекФарш;
									ТЗ_КэшФаршей.Кутеров = ТекКутеровФарша;
									ТЗ_КэшФаршей.НормаКутеров = (ТекКутеровФарша / 100 * ТЗ_ФаршейСтроки.Кво )- ВычитаемоеКГ;		
								КонецЕсли; 						
							КонецЕсли;							
						КонецЕсли;							
					Иначе						
						Сообщить("Внимание !!! , нормы фарша " + ТекФарш + " не заданы !" , "!!!");
					КонецЕсли;					
				КонецЕсли;				
			Иначе
				Справ=СоздатьОбъект("Справочник.ТМЦ");
				Справ.НайтиЭлемент(ТекЗначениеЯчейкиБыло);
				Справ.ВыборГруппы(0);
				ФлВвода=Справ.Выбрать("Выберите фарш","ДляВыбора");
				Если ФлВвода=1 Тогда
					ТекФарш=Справ.ТекущийЭлемент();
				КонецЕсли;
				
				Если ПустоеЗначение(ТекФарш) <> 1 Тогда					
					ТекСтр 	= "";
					ТекКол 	= "";
					Если ТЗ_ФаршейСтроки.НайтиЗначение(ТекФарш,ТекСтр,ТекКол) = 1 Тогда
					
						ТЗ_ФаршейСтроки.ПолучитьСтрокуПоНомеру(ТекСтр);
						Таблица.Область(НомерСтроки+1,НомерКолонки,НомерСтроки+1,НомерКолонки).Текст 	= ТекФарш.Код; //--- устанавливаем код фарша
						
						ТекСтр 	= "";
						ТекКол 	= "";
						Если ТЗ_КэшФаршей.НайтиЗначение(ТекФарш,ТекСтр,ТекСтр) = 1 Тогда
							ТЗ_КэшФаршей.ПолучитьСтрокуПоНомеру(ТекСтр);
							ТекКутеровФарша = ТЗ_КэшФаршей.Кутеров;
						Иначе
							ТекКутеровФарша = 0;
						КонецЕсли;	
									
						Если ВвестиЧисло(ТекКутеровФарша,"Введите из КУТЕРОВ Фарша:",14,0) = 1 Тогда							
							ТекСтр 	= "";
							ТекКол 	= "";
							Если ТЗ_КэшФаршей.НайтиЗначение(ТекФарш,ТекСтр,ТекСтр) = 1 Тогда
								ТЗ_КэшФаршей.ПолучитьСтрокуПоНомеру(ТекСтр);
								ТекКгФарша = ТЗ_КэшФаршей.НормаКутеров;
							Иначе
								ТекКгФарша = ТекКутеровФарша / 100 * ТЗ_ФаршейСтроки.Кво;
							КонецЕсли;	
									
							Если ВвестиЧисло(ТекКгФарша,"Введите число КГ Фарша:",14,0) = 1 Тогда
								
								ТекЗначениеЯчейкиСтало = "" + Строка(ТекКгФарша) + глПравильныйСимволПереноса + "к." + ТекКутеровФарша;
								ТекСтр 	= "";
								ТекКол 	= "";
								Если ТЗ_КэшФаршей.НайтиЗначение(ТекФарш,ТекСтр,ТекСтр) = 1 Тогда
									ТЗ_КэшФаршей.ПолучитьСтрокуПоНомеру(ТекСтр);
									ТЗ_КэшФаршей.НормаКутеров = ТЗ_КэшФаршей.НормаКутеров - ТекКгФарша;	
								Иначе
									ТЗ_КэшФаршей.НоваяСтрока();
									ТЗ_КэшФаршей.Фарш = ТекФарш;
									ТЗ_КэшФаршей.Кутеров = ТекКутеровФарша;
									ТЗ_КэшФаршей.НормаКутеров = (ТекКутеровФарша / 100 * ТЗ_ФаршейСтроки.Кво )- ТекКгФарша;		
								КонецЕсли; 						
							КонецЕсли;							
						КонецЕсли;							
					Иначе						
						Сообщить("Внимание !!! , нормы фарша " + ТекФарш + " не заданы !" , "!!!");
					КонецЕсли;					
				КонецЕсли;				
			КонецЕсли;
		ИначеЕсли РасшифровкаГоризонталь = "Остатки ФАКТИЧЕСКИЕ(кг):" Тогда	
			ВвестиЧисло(ТекЗначениеЯчейкиСтало,"Ввод остатков вручную:",14,0);	
		КонецЕсли;
	КонецЕсли;
	
	Если ТекЗначениеЯчейкиБыло <> ТекЗначениеЯчейкиСтало Тогда				
		//--- Проверим это остаки --- и надо менять что то в ТЗ
		ТекНомерСтроки   = Число(ПолучитьНомерСтрокиПоАдресу(ТекАдрес));
		ТекНомерКолонки	 = Число(ПолучитьНомерКолонкиПоАдресу(ТекАдрес));
		
		НашлиУпаковку = "";
		Если перСыБезУпаковки = 1 Тогда //ищем ТМЦ в ТЗ ТМЦ 
			Тз_ТМЦ.ПолучитьСтрокуПоНомеру(ТекНомерКолонки-6);
			НашлиТМЦ = Тз_ТМЦ.ТМЦ;
			НашлиУпаковку = ПолучитьПустоеЗначение("Справочник.ВидыУпаковки");
			НашлиТМЦУпаковку = ПолучитьТМЦУпаковку(НашлиТМЦ, "");
		ИначеЕсли перСыБезУпаковки = 2 Тогда	
			СтрУпаковкаНет = 0;
			ТЗ_ТМЦ_Упаковки.ПолучитьСтрокуПоНомеру(ТекНомерКолонки-6);
			НашлиТМЦ = ТЗ_ТМЦ_Упаковки.ТМЦ;
			НашлиУпаковку = ТЗ_ТМЦ_Упаковки.Упаковка;
			НашлиТМЦУпаковку = ПолучитьТМЦУпаковку(НашлиТМЦ, НашлиУпаковку);
			Если ПустоеЗначение(НашлиУпаковку) = 0 Тогда						
				ТЗ_ТМЦ_Упаковки.НайтиЗначение(ПолучитьТМЦУпаковку(НашлиТМЦ, НетУп), СтрУпаковкаНет, "ТМЦУпаковка");
			КонецЕсли;
		КонецЕсли;				
			
		Если ТекНомерСтроки = СтатическаяСтрокаОстаткиФактические Тогда 
			//--- надо найти тмц в таблице значений Товаров или ТОвароУпаковок потом найти в тз остатки фактические этот товар и поменять значение тз введенное вручную						
			ТкСтрока 	= "";
			ТкСтолбец 	= "";
			
			Если перСыБезУпаковки = 1 Тогда
				ОбработкаСтрокиОстаткиФактические(НашлиТМЦ, НашлиТМЦ, ТкСтрока, "ТМЦ", НашлиТМЦУпаковку, Число(ТекЗначениеЯчейкиСтало));
			Иначе // тут более сложный случай. Если исправили колонку, где ТМЦ в целом, то нужно добавить это же количество в поле без упаковки
				// для начала ищем ТМЦУпаковку, а иначе пересчитать ТМЦ в целом
				ОбработкаСтрокиОстаткиФактические(НашлиТМЦУпаковку, НашлиТМЦ, ТкСтрока, "ТМЦУпаковка", НашлиТМЦУпаковку, Число(ТекЗначениеЯчейкиСтало));
				Разница = Число(ТекЗначениеЯчейкиСтало) - Число(ТекЗначениеЯчейкиБыло);
				СтрДляПоиска = 0; ТкСтрока = 0;
				
				Если Строка(НашлиУпаковку) = "" Тогда // ТМЦ в целом. Добавляем значение в строке, где нет упаковки
					ЗначениеПоиска = ПолучитьТМЦУпаковку(НашлиТМЦ, НетУп); 
					НашлиТМЦУпаковку = НетУп;
				Иначе // увеличиваем общее количество
					ЗначениеПоиска = ПолучитьТМЦУпаковку(НашлиТМЦ, "");
					НашлиТМЦУпаковку = "";
				КонецЕсли;
				
				ТЗ_ТМЦ_Упаковки.НайтиЗначение(ЗначениеПоиска, СтрДляПоиска, "ТМЦУпаковка");							
				ОбработкаСтрокиОстаткиФактические(ЗначениеПоиска, НашлиТМЦ, ТкСтрока, "ТМЦУпаковка", ЗначениеПоиска, Разница, 1);
				Таблица.Область(НомерСтроки, СтрДляПоиска + 6, НомерСтроки, СтрДляПоиска + 6).Текст =  ТЗ_Остатки_Фактические.ОстатокТовара;
			КонецЕсли;
			
			Таблица.Область(ТекАдрес).Текст 	= ТекЗначениеЯчейкиСтало;					
			ВывестиСтрокуЗапас();					
		ИначеЕсли (Найти(РасшифровкаГоризонталь,"(КГ)") > 0) 
					ИЛИ (Найти(РасшифровкаГоризонталь,"кутера") > 0) Тогда 			//--- меняем итоги
			//итоги, возможно, придётся менять в нескольких колонках
			Если (Найти(РасшифровкаГоризонталь,"кутера") > 0) Тогда
				Замес = НашлиТМЦ.Замес.Получить(ДатаЗадания);
				Замес = ?(Замес = 0, НашлиТМЦ.Замес.Получить(ТекущаяДата()), Замес);

				Если фНоваяВерсия = 1 Тогда
					КвоКутеров = ТекЗначениеЯчейкиСтало;
					Если (Замес <> 0) И (Число(КвоКутеров) <> 0) Тогда
						Рез = ?(КвоКутеров > Замес, КвоКутеров / Замес, Замес / КвоКутеров);
						Если Цел(Рез) <> Рез Тогда
							Предупреждение("Количество кутеров должно быть кратно замесу");
						КонецЕсли;
					КонецЕсли;
				Иначе
					Если (Замес <> 0) И (Число(ТекЗначениеЯчейкиСтало) <> 0) Тогда
						Рез = ?(ТекЗначениеЯчейкиСтало > Замес, ТекЗначениеЯчейкиСтало / Замес, Замес / ТекЗначениеЯчейкиСтало);
						Если Цел(Рез) <> Рез Тогда
							Предупреждение("Количество кутеров должно быть кратно замесу");
						КонецЕсли;
					КонецЕсли;					
				КонецЕсли;
			КонецЕсли;
			Таблица.Область(ТекАдрес).Текст 	= ТекЗначениеЯчейкиСтало;						
			//--- Меняем Итоги как в экселе при изменении значения
			Если перСыБезУпаковки = 2 Тогда
				// нужно изменить значение в колонке, где нет уп. для этого, смотрим в какой колонке поменялось значение, потом находим колонку, где нет уп. и суммируем
				Если (ПустоеЗначение(НашлиУпаковку) = 0) И (НашлиУпаковку <> НетУп) И (СтрУпаковкаНет <> 0) Тогда
					ТекКвоНетУп = 0; СуммаОтрицательных = 0;
					Для Инд = СтрУпаковкаНет + 1 По ТЗ_ТМЦ_Упаковки.КоличествоСтрок() Цикл
						Чис = Число(Таблица.Область(СтатическаяСтрокаЗапас, Инд + 6, СтатическаяСтрокаЗапас, Инд + 6).Текст);
						СуммаОтрицательных = СуммаОтрицательных + ?(Чис < 0, Чис, 0);
						ТекКвоНетУп = ТекКвоНетУп + Число(Таблица.Область(ТекНомерСтроки, Инд + 6, ТекНомерСтроки, Инд + 6).Текст);
						Если ТЗ_ТМЦ_Упаковки.ПолучитьЗначение(Инд, "ТМЦ") <> НашлиТМЦ Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Таблица.Область(ТекНомерСтроки, СтрУпаковкаНет + 6, ТекНомерСтроки, СтрУпаковкаНет + 6).Текст = -ТекКвоНетУп;
					ОбновитьЯчейкуЗапас(НашлиТМЦ, НетУп, ПолучитьТМЦУпаковку(НашлиТМЦ, НетУп), 0, РасшифровкаГоризонталь, СтрУпаковкаНет + 6, -ТекКвоНетУп, СуммаОтрицательных);
				КонецЕсли;
			КонецЕсли;

			ИтогоПоСтроке = 0;
			ОбновитьЯчейкуЗапас(НашлиТМЦ, НашлиУпаковку, ПолучитьТМЦУпаковку(НашлиТМЦ, НашлиУпаковку), ИтогоПоСтроке, РасшифровкаГоризонталь, НомерКолонки, ТекЗначениеЯчейкиСтало);
		КонецЕсли;
		
		Если  Таблица.Область(2,НомерКолонки,2,НомерКолонки).ЦветФона() = 12639424 Тогда
			Таблица.Область(ТекАдрес).ЦветФона(222,156,181);
		Иначе	
			Таблица.Область(ТекАдрес).ЦветФона(255,130,132);
		КонецЕсли;					
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Процедура ПриВыбореЯчейкиТаблицы(ТекАдрес,ТекЗначение,НеВводитьЗначение = 0)	
Перем МасПересчитываемых[10];

	ТекЯчейка = ТекАдрес;

	ТекЗначениеЯчейкиБыло = Таблица.Область(ТекАдрес).Текст;
	ТекЗначениеЯчейкиСтало = Таблица.Область(ТекАдрес).Текст;
	
	ПозицияС = Найти(ТекАдрес,"C");		
	НомерКолонки  	= Число(Сред(ТекАдрес,ПозицияС+1));
	НомерСтроки 	= Число(Сред(Лев(ТекАдрес,ПозицияС-1),2));
	
	ТекДата = Таблица.Область(НомерСтроки,1,НомерСтроки,1).Текст;
	
	ПолучитьТаблицуДляВыборки();	
	Если НомерКолонки > 6 Тогда
		ТЗ_ТМЦ_ДляВыборки.ПолучитьСтрокуПоНомеру(НомерКолонки-6);
	КонецЕсли;
	
	Если Лев(ТекЗначениеЯчейкиБыло, 6) = "Произ." Тогда
		ДокЗаданиеНаПроизводство = СоздатьОбъект("Документ.УМК_ЗаданиеНаПроизводство");
		ТекНомерДок	= Сред(Таблица.Область(ТекАдрес).Текст,8,10);
		ТекДатаДок	= Сред(Таблица.Область(ТекАдрес).Текст,20,8);
		ДокЗаданиеНаПроизводство.НайтиПоНомеру(ТекНомерДок,ТекДатаДок);
		ОткрытьФорму(ДокЗаданиеНаПроизводство.ТекущийДокумент());		
	ИначеЕсли Лев(ТекЗначениеЯчейкиБыло, 5) = "Упак." Тогда
		ДокЗаданиеНаПроизводство = СоздатьОбъект("Документ.УМК_ЗаданиеНаУпаковку");
		ТекНомерДок	= Сред(Таблица.Область(ТекАдрес).Текст,7,10);
		ТекДатаДок	= Сред(Таблица.Область(ТекАдрес).Текст,19,8);
		ДокЗаданиеНаПроизводство.НайтиПоНомеру(ТекНомерДок,ТекДатаДок);
		ОткрытьФорму(ДокЗаданиеНаПроизводство.ТекущийДокумент());	
	Иначе		
		//Если (НомерСтроки = ?(фНоваяВерсия = 1, 5, 3)) ИЛИ (НомерСтроки = ?(фНоваяВерсия = 1, 6, 4)) Тогда
		Если (НомерСтроки = 5) ИЛИ (НомерСтроки = 6) Тогда
			ТкСтр 	= "";
			ТкСтлб 	= "";
			Если ТЗ_Вес_Кутера.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТкСтр,ТкСтлб) = 1 Тогда
				ТЗ_Вес_Кутера.ПолучитьСтрокуПоНомеру(ТкСтр);
				ОткрытьФорму(ТЗ_Вес_Кутера.Норма);
			КонецЕсли;			
		//ИначеЕсли НомерСтроки = ?(фНоваяВерсия = 1, 4, 2) Тогда //--- открываем карточку ТМЦ
		ИначеЕсли НомерСтроки = 4 Тогда //--- открываем карточку ТМЦ
			ОткрытьФорму(ТЗ_ТМЦ_ДляВыборки.ТМЦ);		
		//ИначеЕсли НомерСтроки = ?(фНоваяВерсия = 1, 8, 6) Тогда
		ИначеЕсли НомерСтроки = 8 Тогда	
			ОткрытьФорму("Журнал.УМК_ОриентировочныеЗаказы");
		//ИначеЕсли НомерСтроки = ?(фНоваяВерсия = 1, 2, 0) Тогда
		ИначеЕсли НомерСтроки = 2 Тогда	
			ПозАкций = 0;
			Если ТЗАкций.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ, ПозАкций, "ТМЦ") = 1 Тогда
				ТЗАкций.ПолучитьСтрокуПоНомеру(ПозАкций);
				ТекДокАкций = "";
				Если ТЗАкций.СписДок.РазмерСписка() = 1 Тогда
					ТекДокАкций = ТЗАкций.СписДок.ПолучитьЗначение(1);
				ИначеЕсли ТЗАкций.СписДок.РазмерСписка() > 1 Тогда					
					ТЗАкций.СписДок.ВыбратьЗначение(ТекДокАкций, "Выберите документ акции",,,2);
				КонецЕсли;
				
				Если ТекДокАкций <> "" Тогда
					ОткрытьФорму(ТекДокАкций);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли (СтатическаяСтрокаВесКутераФарша < НомерСтроки) И (СтатическаяСтрокаИтогиЗаказовКлиентов_раз > НомерСтроки) Тогда		 //--- расшифровка заказов				
			Если НомерКолонки = 2 Тогда				
				//Если перКлиенты = 3 Тогда	
				//	СпрКонтрагенты = СоздатьОбъект("Справочник.Контрагенты");
				//	Если СпрКонтрагенты.НайтиЭлемент(ТЗ_РасшифровкаЗаказов.Заказ.Контрагент) = 1 Тогда
				//		ОткрытьФорму(СпрКонтрагенты.ТекущийЭлемент());	
				//	КонецЕсли;
				//КонецЕсли;				
			ИначеЕсли НомерКолонки = 3 Тогда				
			ИначеЕсли НомерКолонки = 4 Тогда				
				//ТЗ_РасшифровкаЗаказов.ПолучитьСтрокуПоНомеру(НомерСтроки - ?(фНоваяВерсия = 1, 7, 5));
				ТЗ_РасшифровкаЗаказов.ПолучитьСтрокуПоНомеру(НомерСтроки - 7);
				Если (перКлиенты = 1) ИЛИ (перКлиенты = 2) Тогда
					//СпрКонтрагенты = СоздатьОбъект("Справочник.Контрагенты");
					//Если СпрКонтрагенты.НайтиЭлемент(ТЗ_РасшифровкаЗаказов.Заказ) = 1 Тогда
					//	ОткрытьФорму(СпрКонтрагенты.ТекущийЭлемент());	
					//КонецЕсли;
				ИначеЕсли перКлиенты = 3 Тогда	
					ДокЗаказПокупателя = СоздатьОбъект("Документ.УМК_ЗаказКлиента");
					ДокЗаказПокупателя.НайтиДокумент(ТЗ_РасшифровкаЗаказов.Заказ);
					ОткрытьФорму(ДокЗаказПокупателя.ТекущийДокумент());	
				КонецЕсли;				
			ИначеЕсли НомерКолонки = 5 Тогда				
				//ТЗ_РасшифровкаЗаказов.ПолучитьСтрокуПоНомеру(НомерСтроки - ?(фНоваяВерсия = 1, 7, 5));
				ТЗ_РасшифровкаЗаказов.ПолучитьСтрокуПоНомеру(НомерСтроки - 7);
				ТекЗаказКУдалениюИзВыборки = ТЗ_РасшифровкаЗаказов.Заказ;
				
				Таблица.Область(НомерСтроки , 4,НомерСтроки, 4).ЦветФона(222,132,57);	
				//Сообщить(Таблица.Область(НомерСтроки , 4,НомерСтроки, 4).ЦветФона());
				
				ТекНомерКолонки = 6;
				
				ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
				Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
					
					ТекстВЯчейку = "";
					ТекСтр 	= "";
					ТекКол 	= "";
					
					ТекНомерКолонки = ТекНомерКолонки + 1;
					
					Таблица.Область(НомерСтроки , ТекНомерКолонки,НомерСтроки, ТекНомерКолонки).ЦветФона(222,132,57);	
					
					Если перКлиенты = 1 Тогда //--- группировка по родителям и 2му уровню
						КлиентПоиска = СокрЛП(Строка(ТекДата)) + СокрЛП(Строка(ТекЗаказКУдалениюИзВыборки))+СокрЛП(Строка(ТЗ_ТМЦ_ДляВыборки.ТМЦ));
					ИначеЕсли перКлиенты = 2 Тогда //--- группировка по клиентам	
						КлиентПоиска = СокрЛП(Строка(ТекДата)) + СокрЛП(Строка(ТекЗаказКУдалениюИзВыборки))+СокрЛП(Строка(ТЗ_ТМЦ_ДляВыборки.ТМЦ));
					ИначеЕсли перКлиенты = 3 Тогда //--- группировка по заказам
						КлиентПоиска = СокрЛП(Строка(ТекЗаказКУдалениюИзВыборки))+СокрЛП(Строка(ТЗ_ТМЦ_ДляВыборки.ТМЦ));
					КонецЕсли;
					
					ВычестьИзИтогов = 0;
					Если Тз_ГруппировкиТМЦ.НайтиЗначение(КлиентПоиска,ТекСтр,ТекКол) = 1 Тогда
						Тз_ГруппировкиТМЦ.ПолучитьСтрокуПоНомеру(ТекСтр);
						ВычестьИзИтогов = Тз_ГруппировкиТМЦ.КвоПересчетСумма;
						Тз_ГруппировкиТМЦ.УдалитьСтроку(ТекСтр);
					КонецЕсли;
					ТекСтр 	= "";
					ТекКол 	= "";
					Если Тз_Итоги_ТМЦ.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТекСтр,ТекКол) = 1 Тогда
						Тз_Итоги_ТМЦ.ПолучитьСтрокуПоНомеру(ТекСтр);
						Тз_Итоги_ТМЦ.КвоПересчетСумма = Тз_Итоги_ТМЦ.КвоПересчетСумма - ВычестьИзИтогов;	
					КонецЕсли;
					
					Если перСыБезУпаковки = 2 Тогда
						Если перКлиенты = 1 Тогда //--- группировка по родителям и 2му уровню
							КлиентПоиска = СокрЛП(Строка(ТекДата)) + СокрЛП(Строка(ТекЗаказКУдалениюИзВыборки)) + ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка;
						ИначеЕсли перКлиенты = 2 Тогда //--- группировка по клиентам	
							КлиентПоиска = СокрЛП(Строка(ТекДата)) + СокрЛП(Строка(ТекЗаказКУдалениюИзВыборки)) + ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка;
						ИначеЕсли перКлиенты = 3 Тогда //--- группировка по заказам
							КлиентПоиска = СокрЛП(Строка(ТекЗаказКУдалениюИзВыборки)) + ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка;
						КонецЕсли;
						
						ТекСтр 	= "";
						ТекКол = "";
						ВычестьИзИтогов = 0;
						Если Тз_ГруппировкиТМЦУпаковки.НайтиЗначение(КлиентПоиска,ТекСтр, ТекКол) = 1 Тогда
							Тз_ГруппировкиТМЦУпаковки.ПолучитьСтрокуПоНомеру(ТекСтр);
							ВычестьИзИтогов = Тз_ГруппировкиТМЦУпаковки.КвоПересчетСумма;
							Тз_ГруппировкиТМЦУпаковки.УдалитьСтроку(ТекСтр);
						КонецЕсли;
						ТекСтр 	= "";
						Если Тз_Итоги_ТМЦУпаковки.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦУпаковка,ТекСтр,"ТМЦУпаковка") = 1 Тогда
							Тз_Итоги_ТМЦУпаковки.ПолучитьСтрокуПоНомеру(ТекСтр);
							Тз_Итоги_ТМЦУпаковки.КвоПересчетСумма = Тз_Итоги_ТМЦУпаковки.КвоПересчетСумма - ВычестьИзИтогов;	
						КонецЕсли;						
					КонецЕсли;					
				КонецЦикла;				
				
				// --- Обновляем все ниже заказов
				ВыводСтрокиИтогПоЗаказамКлиентов(1);
			 	ВывестиЗаданияНаПроизводство();
			 	
			 	Если перСыБезУпаковки = 2 Тогда
			 		ВывестиЗаданияНаУпаковку();
			 	КонецЕсли;
			 	
				ВыводСтрокиИтогПоЗаказамКлиентов(2);
			 	ВывестиСтрокуОстатки();
			 	ВыводСтрокВводаЗаданий();
			 	ВывестиСтрокуНезавершенка();
			 	ВывестиСтрокуВсегоПроизводство();
			 
			 	ВывестиСтрокуЗапас();
			 	ВывестиЗаданияНаПроизводствоСледующегоПериода();
			 	
			 	Если перСыБезУпаковки = 2 Тогда
			 		ВывестиЗаданияНаУпаковкуСледующегоПериода();
			 	КонецЕсли;
			 	
			 	Если ПустоеЗначение(ВыбИнвентаризация) <> 1  Тогда
			 		ФактическиеОстаткиИзИнвентаризации();
			 	КонецЕсли;				
			Иначе	
				//ТЗ_РасшифровкаЗаказов.ПолучитьСтрокуПоНомеру(НомерСтроки - ?(фНоваяВерсия = 1, 7, 5));
				ТЗ_РасшифровкаЗаказов.ПолучитьСтрокуПоНомеру(НомерСтроки - 7);
				РасшифровкаГоризонталь = ТЗ_РасшифровкаЗаказов.Заказ;				
				РасшифровкаВертикаль   = ТЗ_ТМЦ_ДляВыборки.ТМЦ;
				Попытка
					РасшифровкаВертикальУп   = ТЗ_ТМЦ_ДляВыборки.Упаковка;
				Исключение
					РасшифровкаВертикальУп = "";
				КонецПопытки;				
				
				//СписПараметров		
				глФлагРасшифровки = 1;
				глОбновить		  = 0;		
				глРасшифровка = СоздатьОбъект("СписокЗначений");
				
				Если ПустоеЗначение(ДокСнятие) = 1 Тогда					
					глРасшифровка.Установить("Дата1", ДатаЗаказа);				
				Иначе					
					глРасшифровка.Установить("Дата1", ДокСнятие.ДатаДок);
					глРасшифровка.Установить("ДокНачала", 	ДокСнятие.ТекущийДокумент());					
				КонецЕсли;
				
				глРасшифровка.Установить("Дата2", ДатаЗаказа);				
				глРасшифровка.Установить("ВыбФирма",Константа.БазФирма);
				глРасшифровка.Установить("ВыбНоменклатура", РасшифровкаВертикаль);
				
				Если перКлиенты = 1 Тогда
					глРасшифровка.Установить("ВыбПокупатель",РасшифровкаГоризонталь);	
				ИначеЕсли перКлиенты = 2 Тогда
					глРасшифровка.Установить("ВыбПокупатель",РасшифровкаГоризонталь);		
				ИначеЕсли перКлиенты = 3 Тогда
					Парам = СоздатьОбъект("СписокЗначений");
					Парам.Установить("ТМЦ", РасшифровкаВертикаль);
					Парам.Установить("ВидУпаковки", РасшифровкаВертикальУп);
					ОткрытьФорму(РасшифровкаГоризонталь, Парам);
					
					Возврат;
					//глРасшифровка.Установить("ВыбЗаказ",РасшифровкаГоризонталь);			
				КонецЕсли;				
				
				глРасшифровка.Установить("фНачОст",1);	//--- УМК Сандомирский В.Ю. (08.04.15)
				глРасшифровка.Установить("фПриход",1);	//--- УМК Сандомирский В.Ю. (08.04.15)
				глРасшифровка.Установить("фРасход",1);	//--- УМК Сандомирский В.Ю. (08.04.15)
				глРасшифровка.Установить("фКонОст",1);	//--- УМК Сандомирский В.Ю. (08.04.15)
				
				Группировки = СоздатьОбъект("СписокЗначений");
				Группировки.ДобавитьЗначение("Номенклатура", 	"Номенклатура");
				Группировки.ДобавитьЗначение("ВидУпаковки",   	"Вид упаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
				Группировки.ДобавитьЗначение("ГруппировкаРазрешенныхВидовУпаковки", "Группировка видов упаковки"); //--- УМК Сандомирский В.Ю. (29.05.15) + группировка ГруппировокВидУпаковки
				Группировки.ДобавитьЗначение("Покупатель",  	"Покупатель");
				Группировки.ДобавитьЗначение("Договор",   		"Договор");
				Группировки.ДобавитьЗначение("ДокументРезерва", "Документ резерва");
				Группировки.ДобавитьЗначение("Документ", 	    "Документ движения");
				// по умолчанию
				Группировки.Пометка(1,1);
				//Группировки.Пометка(2,1);
				Группировки.Пометка(6,1);				
				глРасшифровка.Установить("Группировки",	Группировки);
				
				ОткрытьФорму("Отчет.Резервы");	
				глФлагРасшифровки = 0;
				глРасшифровка = 0;
				глОбновить = 0;				
			КонецЕсли;					
		ИначеЕсли  (СтатическаяСтрокаОстатки < НомерСтроки) 
				И (СтатическаяСтрокаНезавершенка > НомерСтроки) Тогда
			ОбновитьЧисла(НомерСтроки, НомерКолонки, ТекЗначениеЯчейкиСтало, ТекЗначениеЯчейкиБыло, ТекАдрес);
		ИначеЕсли (СтатическаяСтрокаНезавершенка = НомерСтроки) Тогда //--- Расшифровка незавершенки
			РасшифровкаВертикаль   = ТЗ_ТМЦ_ДляВыборки.ТМЦ;
			
			//СписПараметров		
			глФлагРасшифровки = 1;
			глОбновить		  = 0;		
			глРасшифровка = СоздатьОбъект("СписокЗначений");	
			глРасшифровка.Установить("Дата1", ДатаЗадания);		
			глРасшифровка.Установить("Дата2", ДатаЗаказа);
			глРасшифровка.Установить("ВыбФирма",Константа.БазФирма);
			глРасшифровка.Установить("ВыбПродукция", РасшифровкаВертикаль);
			
			глРасшифровка.Установить("Периодичность", 0);
				
			Группировки = СоздатьОбъект("СписокЗначений");
			Группировки.ДобавитьЗначение("Подразделение", 	"Подразделение");           
			Группировки.ДобавитьЗначение("ВидДеятельности",	"Вид деятельности");
			Группировки.ДобавитьЗначение("Продукция",		"Продукция");
			Группировки.ДобавитьЗначение("Заказ", 			"Заказ");
			Группировки.ДобавитьЗначение("Партия", 			"Партия оприходования продукции");
			Группировки.ДобавитьЗначение("Документ",		"Документ движения");
			
			Группировки. Пометка(3,1);
			Группировки. Пометка(4,1);
			Группировки. Пометка(6,1);
			
			глРасшифровка.Установить("Группировки",	Группировки);
			
			
			СписокПериодов = СоздатьОбъект("СписокЗначений");
			СписокПериодов.ДобавитьЗначение("Общий","Общие итоги");
			СписокПериодов.ДобавитьЗначение("День","День");
			СписокПериодов.ДобавитьЗначение("Неделя","Неделя");
			СписокПериодов.ДобавитьЗначение("Месяц","Месяц");  
			СписокПериодов.ДобавитьЗначение("Квартал","Квартал");
			СписокПериодов.ДобавитьЗначение("Год","Год");
			
			глРасшифровка.Установить("СписокПериодов", СписокПериодов);			
			глРасшифровка.Установить("фПлановыйВыпуск", ?(глПрефиксПлановыйВыпуск = "Плановый",1,0));
			ОткрытьФорму("Отчет.ВыпускПродукции", глПрефиксПлановыйВыпуск);			
			глФлагРасшифровки = 0;
			глРасшифровка = 0;
			глОбновить = 0;									
		ИначеЕсли (СтатическаяСтрокаОстатки = НомерСтроки)  Тогда							
			РасшифровкаВертикаль   = ТЗ_ТМЦ_ДляВыборки.ТМЦ;
			
			//СписПараметров		
			глФлагРасшифровки = 1;
			глОбновить		  = 0;		
			глРасшифровка = СоздатьОбъект("СписокЗначений");	
			глРасшифровка.Установить("Дата1", 				ДатаЗадания);		
			глРасшифровка.Установить("Дата2", 				ДатаЗадания);
			глРасшифровка.Установить("ДокКонца",			ДокКонца);
			глРасшифровка.Установить("ВыбФирма",			Константа.БазФирма);
			глРасшифровка.Установить("ВыбМестоХранения", 	СкладОстатков);
			глРасшифровка.Установить("ВыбНоменклатура", 	РасшифровкаВертикаль);
			
			глРасшифровка.Установить("ДеталПоДокументам", 1);		// --- Детализировать по документам
		
			ОткрытьФорму("Отчет.ОстаткиТМЦ");	
			
			глФлагРасшифровки = 0;
			глРасшифровка = 0;
			глОбновить = 0;					
		ИначеЕсли  НомерСтроки = СтатическаяСтрокаВыпускиБудущихПериодов Тогда
			Если ТипЗначенияСтр(глРасшифровка) <> "СписокЗначений" Тогда
				глРасшифровка = СоздатьОбъект("СписокЗначений");
			КонецЕсли;
			
		    глРасшифровка.Установить("Отчет", "ВыпускПродукции");
			
			// все настройки помещаем в список
			глРасшифровка.Установить("Дата1", 		ДатаЗаказа + 1);
		    глРасшифровка.Установить("Дата2", 		ПолучитьДатуТА());
			глРасшифровка.Установить("ВыбФирма",		"");
			глРасшифровка.Установить("ВыбВидДеятельности","");
			глРасшифровка.Установить("ВыбПодразделение",	"");
			глРасшифровка.Установить("ВыбПродукция", ТЗ_ТМЦ_ДляВыборки.ТМЦ);
			глРасшифровка.Установить("ВыбЗаказ", "");
			
			Группировки = СоздатьОбъект("СписокЗначений");
			Группировки.ДобавитьЗначение("Подразделение", 	"Подразделение");           
			Группировки.ДобавитьЗначение("ВидДеятельности",	"Вид деятельности");
			Группировки.ДобавитьЗначение("Заказ", 			"Заказ");
			Группировки.ДобавитьЗначение("Продукция",		"Продукция");
			Группировки.ДобавитьЗначение("Партия", 			"Партия оприходования продукции");
			Группировки.ДобавитьЗначение("Документ",		"Документ движения");
			Группировки.Пометка(3, 1);
			Группировки.Пометка(6, 1);
			глТаблица = СоздатьОбъект("Таблица");
			глФлагРасшифровки = 1;
			глОбновить = 1;
			
			глРасшифровка.Установить("Группировки",	Группировки);	
			глРасшифровка.Установить("фБезГрупп",		1);
			глРасшифровка.Установить("фВыделятьБрак",		0);
			глРасшифровка.Установить("фВыделятьДавСумму",	0);
			глРасшифровка.Установить("СписокПериодов", 1);
			глРасшифровка.Установить("фПлановыйВыпуск", ?(глПрефиксПлановыйВыпуск = "Плановый",1,0));
			ОткрытьФорму("Отчет.ВыпускПродукции", глПрефиксПлановыйВыпуск);
			
			глФлагРасшифровки = 0;			
		КонецЕсли;			
			//Сообщить("" + РасшифровкаГоризонталь + " " + ТЗ_ТМЦ_ДляВыборки.ТМЦ);						
	КонецЕсли;	
КонецПроцедуры

//======================================================================
Процедура ОбработкаЯчейкиТаблицы(ТекЗначение,ТекФлагСтандОбраб,ТекТаблица,ТекАдрес)
	Сообщить("з " + ТекЗначение + " ф " + ТекФлагСтандОбраб + " т " + ТекТаблица + " а " + ТекАдрес);
КонецПроцедуры

//======================================================================
Процедура ВыбратьДокКонца(ТекДок, ТекДата) 
	
	Док = СоздатьОбъект("Документ.НачДня");
	Док.УстановитьФильтр(1,0);
	Док.ВыбратьДокументы(ТекДата, ТекДата);
	Сп = СоздатьОбъект("СписокЗначений");
	
	Пока Док.ПолучитьДокумент() = 1 Цикл
		СП.ДобавитьЗначение(Док.ТекущийДокумент());
	КонецЦикла;	
	
	Если СП.РазмерСписка() = 1 Тогда
		ТекДок = СП.ПолучитьЗначение(1);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (*) максимоизировать окно
Процедура ПослеОткрытия()
	Окно = СоздатьОбъект("Окна");   
	Окно.Максимизировать(Форма);
КонецПроцедуры 

//====================================================================== 
Процедура ПриЗакрытии()

КонецПроцедуры

//====================================================================== 
Процедура СформироватьОбновитьЗаказ()
		
КонецПроцедуры // СформироватьОбновитьЗаказ()

//====================================================================== //--- УМК Сандомирский В.Ю. (30.10.14)
Процедура ЗаполнитьТаблицуИзЗаказа()
//	ПервоначальноеЗаполнениеТаблицы(ВыбЗаказ);
КонецПроцедуры // ЗаполнитьТаблицуИзЗаказа

//====================================================================== //--- УМК Сандомирский В.Ю. (11.11.14)
Функция НайтиНомерСтроки1С(ТекКод)
	Для ТекСтр = 1 По КоличествоСтрокТаблицыВводаДанных Цикл	
		Код1С = СокрЛП(Таблица.Область(ТекСтр, 1,ТекСтр, 1).Текст);	
		Если ТекКод =  Код1С Тогда
			Возврат ТекСтр;
		КонецЕсли;
	КонецЦикла;
	
	Возврат "";	
КонецФункции // НайтиНомерСтроки1С(ТекКод)

//======================================================================
Процедура ДобавитьСборочные()
	НачСтрока = СтатическаяСтрокаВесКутераФарша + 1;
	КонСтрока = СтатическаяСтрокаПоследнегоЗаказаКлиента;
	Если перКлиенты <> 3 Тогда
		Предупреждение("Должен быть включен режим по заказам");
		Возврат;
	КонецЕсли;

	ТЗСб = СоздатьОбъект("ТаблицаЗначений");
	ТЗСб.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗСб.НоваяКолонка("ВУ", "Справочник.ВидыУпаковки");
	ТЗСб.НоваяКолонка("Склад", "Справочник.МестаХранения");
	ТЗСб.НоваяКолонка("Стикеровать", "Перечисление.ДаНет");	
	ТЗСб.НоваяКолонка("Кво", "Число", 15, 1);
	ТекКолонка = 6;
	ОснСклад = Константа.БазФирма.ОсновнойСклад;
	СкладВУП = Константа.СкладВУП;
	
	Для Инд = НачСтрока По КонСтрока Цикл
		Если Таблица.Область(Инд, 4, Инд, 4).ЦветФона() = 4097497 Тогда
			Продолжить;
		КонецЕсли;
		ТЗ_РасшифровкаЗаказов.ПолучитьСтрокуПоНомеру(Инд - 5);
		ТекЗаказ = ТЗ_РасшифровкаЗаказов.Заказ;
		
		Если ПустоеЗначение(ТекЗаказ) = 0 Тогда
			ТЧ = СоздатьОбъект("ТаблицаЗначений");
			ТекЗаказ.ВыгрузитьТабличнуюЧасть(ТЧ);
			ТЧ.НоваяКолонка("Ключ");
			ТЧ.ВыбратьСтроки();
			Пока ТЧ.ПолучитьСтроку() = 1 Цикл
				ТЧ.Ключ = ЗначениеВСтрокуВнутр(ТЧ.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(?(ПустоеЗначение(ТЧ.ВидУпаковки) = 1, НетУп, ТЧ.ВидУпаковки));
			КонецЦикла;
			
			ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
			Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
				Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 0 Тогда
					Кво = Число(Таблица.Область(Инд, ТЗ_ТМЦ_ДляВыборки.НомерСтроки + ТекКолонка, Инд, ТЗ_ТМЦ_ДляВыборки.НомерСтроки + ТекКолонка).Текст);
					Если Кво <> 0 Тогда
						Поз = 0;
						ТЧ.НайтиЗначение(ЗначениеВСтрокуВнутр(ТЗ_ТМЦ_ДляВыборки.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТЗ_ТМЦ_ДляВыборки.Упаковка), Поз, "Ключ");
						Стикеровать = Нет;
						Если Поз <> 0 Тогда
							Стикеровать = ?(ТЧ.ПолучитьЗначение(Поз, "Стикеровать") = Да, Да, Нет);
						КонецЕсли;
						
						ТЗСб.НоваяСтрока();
						ТЗСб.ТМЦ = ТЗ_ТМЦ_ДляВыборки.ТМЦ;
						ТЗСб.ВУ = ТЗ_ТМЦ_ДляВыборки.Упаковка;
						Если (ПустоеЗначение(ТЗСб.ВУ) = 0) И (ТЗСб.ВУ <> НетУп) Тогда
							ТЗСб.Склад = СкладВУП;
						ИначеЕсли ПустоеЗначение(ТЗСб.ТМЦ.СкладСборки) = 0 Тогда
							ТЗСб.Склад = ТЗСб.ТМЦ.СкладСборки;
						Иначе
							ТЗСб.Склад = ОснСклад;
						КонецЕсли;
						
						ТЗСб.Стикеровать = Стикеровать;
						ТЗСб.Кво = Кво;
					КонецЕсли;
				КонецЕсли;				
			КонецЦикла;			
		КонецЕсли;
	КонецЦикла;
	
	глЗаполнитьСборочныйЛист(ТЗСб, ТекущаяДата());
КонецПроцедуры // ДобавитьСборочные()

//======================================================================
Процедура ДобавитьЗаданиеЭт()
	ТекДата = ТекущаяДата();
	
	СписокГруппЭтикетки = глПолучитьТМЦПоСпискуКодов(Константа.КодыГруппТМЦЭтикетки);
	ДокЗадание = СоздатьОбъект("Документ.УМК_ЗаданиеНаЭтикетку");
	ДокЗадание.Новый();
	ДокЗадание.ДатаДок 		= ТекДата;
	ДокЗадание.ДатаВыпуска 	= ТекДата;
	ДокЗадание.Автор = глПользователь;
	ДокЗадание.Фирма = Константа.БазФирма;
	глУстановитьНомер(ДокЗадание);
	//ДокЗадание.Примечание = ;
	Док = СоздатьОбъект("Документ.УМК_ЗаданиеНаЭтикетку");
	ТЗУжеЕстьЭт = СоздатьОбъект("ТаблицаЗначений");
	ТЗУжеЕстьЭт.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗУжеЕстьЭт.НоваяКолонка("Кво", "Число", 15, 3);
	Док.ВыбратьДокументы(?(ПустоеЗначение(ДокКонца) = 0, ДокКонца, ДатаЗадания), ДатаЗаказа);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если Док.ПометкаУдаления() = 0 Тогда
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку() = 1 Цикл
				ТЗУжеЕстьЭт.НоваяСтрока();
				ТЗУжеЕстьЭт.ТМЦ = Док.Продукция;
				ТЗУжеЕстьЭт.Кво = Док.Кво;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ТЗУжеЕстьЭт.Свернуть("ТМЦ", "Кво");
	
	ТекКолонка = 6;
	
	ТЗ_ТМЦ_ДляВыборки = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_ТМЦ_Упаковки.Выгрузить(ТЗ_ТМЦ_ДляВыборки);

	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
		ТекКолонка = ТекКолонка + 1;
		Если ТЗ_ТМЦ_ДляВыборки.Упаковка = НетУп Тогда
			КвоВводаКутеров = Число(Таблица.Область(СтатическаяСтрокаИтогиЗаказовКлиентов_раз, ТекКолонка,СтатическаяСтрокаИтогиЗаказовКлиентов_раз, ТекКолонка).Текст);
			
			Если (КвоВводаКутеров > 0) Тогда
				Стр = 0;
				Если ТЗУжеЕстьЭт.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ, Стр, "ТМЦ") = 1 Тогда
					КвоВводаКутеров = КвоВводаКутеров - ТЗУжеЕстьЭт.ПолучитьЗначение(Стр, "Кво");
				КонецЕсли;
			
				Если (КвоВводаКутеров > 0) Тогда
					ТкСтр 	= 0; ЕстьГруппа = 0;
					Если ТЗ_Вес_Кутера.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ, ТкСтр, "ТМЦ") = 1 Тогда
						Норма = ТЗ_Вес_Кутера.ПолучитьЗначение(ТкСтр, "Норма");
						Норма.ВыбратьСтроки();
						Пока Норма.ПолучитьСтроку() = 1 Цикл
							Если СписокГруппЭтикетки.Принадлежит(Норма.Элемент) = 1 Тогда
								ЕстьГруппа = 1;
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;			
				
					Если ЕстьГруппа = 1 Тогда
						ДокЗадание.НоваяСтрока();
						ДокЗадание.ГруппировкаРазрешенныхВидовУпаковки = ТЗ_ТМЦ_ДляВыборки.ТМЦ.ГруппировкаРазрешенныхВидовУпаковки;
						ДокЗадание.Продукция 	= ТЗ_ТМЦ_ДляВыборки.ТМЦ;
						ДокЗадание.Кво 	= КвоВводаКутеров;	
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	
	Если ДокЗадание.КоличествоСтрок() > 0 Тогда		
		ДокЗадание.ВыбратьСтроки();
		Пока ДокЗадание.ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ДокЗадание.Продукция) <> 1 Тогда
				СпрДвойник = СоздатьОбъект("Справочник.УМК_ДвойникГруппыТМЦ");	
				Если СпрДвойник.НайтиПоКоду(ДокЗадание.Продукция.Родитель.Код,0) = 1 Тогда
					ДокЗадание.ДвойникГруппТМЦСтроки =  СпрДвойник.ТекущийЭлемент();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ТЗ_ИменаЗаказник = СоздатьОбъект("ТаблицаЗначений");
		ДокЗадание.ВыгрузитьТабличнуюЧасть(ТЗ_ИменаЗаказник);
		ТЗ_ИменаЗаказник.Свернуть("ДвойникГруппТМЦСтроки","");
		ДокЗадание.ДвойникиГруппТМЦ = "";
		ТЗ_ИменаЗаказник.ВыбратьСтроки();
		Пока ТЗ_ИменаЗаказник.ПолучитьСтроку() = 1 Цикл
			ДокЗадание.ДвойникиГруппТМЦ = ДокЗадание.ДвойникиГруппТМЦ + СокрЛП(Строка(ТЗ_ИменаЗаказник.ДвойникГруппТМЦСтроки)) + ",";
		КонецЦикла;
		
		Если ТекДата <> ДатаЗадания Тогда
			ДокЗадание.АвтоВремяОтключить();	
			ДокЗадание.УстановитьВремя(8,0,0);		
		КонецЕсли;

		ДокЗадание.ДатаСоздания = ТекущаяДата();
		ДокЗадание.ВремяСоздания = ТекущееВремя();		
		ДокЗадание.Записать();
		//ДокЗадание.Провести(); //--- док не проводицца
		
	КонецЕсли;
	
	ИмяФайла = КаталогИБ() + СокрЛП("\zad_pr\") + СокрЛП(ДокЗадание.НомерДок) + "_Эт" + 
	СтрЗаменить(Строка(ДокЗадание.ДатаДок), ".", "")+".mxl";
	Таблица.Записать(ИмяФайла);
	
 	Если ДокЗадание.КоличествоСтрок() > 0 Тогда
 		ОткрытьФорму(ДокЗадание.ТекущийДокумент());
 	КонецЕсли; 	
КонецПроцедуры // 

//====================================================================== //--- УМК Сандомирский В.Ю. (30.04.15)
Процедура ДобавитьСтрокуЗаданиеПроизводство() //--- Записать задание 	
	ТекДата = ДатаЗадания;
	Если ВвестиДату(ТекДата, "Введиту дату СОЗДАНИЯ ЗАДАНИЯ на производство") = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Если ТекДата < ДатаЗадания Тогда
		Предупреждение("Дата задания не должна быть меньше " + ДатаЗадания);
		Возврат;	
	КонецЕсли;
	
	ТекДатаВыпуска = ДатаЗадания;
	Если ВвестиДату(ТекДатаВыпуска, "Введиту дату ВЫПУСКА !!!") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДатаВыпуска < ДатаЗадания Тогда
		Предупреждение("Дата задания не должна быть меньше " + ДатаЗадания);
		Возврат;	
	КонецЕсли;
		
	ДокЗадание = СоздатьОбъект("Документ.УМК_ЗаданиеНаПроизводство");
	ДокЗадание.Новый();
	ДокЗадание.ДатаДок 		= ТекДата;
	ДокЗадание.ДатаВыпуска 	= ТекДатаВыпуска;
	ДокЗадание.Автор = глПользователь;
	ДокЗадание.Фирма = Константа.БазФирма;	
	//ДокЗадание.Примечание = ;
	
	ТекКолонка = 6;
	ПолучитьТаблицуДляВыборки();	
	
	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
		ТекКолонка = ТекКолонка + 1;
		
		КвоВводаКутеров = Число(Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоКутер, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоКутер, ТекКолонка).Текст);
		КвоВводаКг 		= СокрЛП(Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоКг, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоКг, ТекКолонка).Текст);
		//Если фНоваяВерсия = 1 Тогда
			КодФарш 		= Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоФарш, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоФарш, ТекКолонка).Значение;
		//Иначе			
		//	КодФарш 		= Число(Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоФарш, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоФарш, ТекКолонка).Значение);
		//КонецЕсли;

		СпрФарш = СоздатьОбъект("Справочник.ТМЦ");
		СпрФарш.НайтиПоКоду(КодФарш,0);
		
		Если КвоВводаКутеров > 0 Тогда
			
			ДокЗадание.НоваяСтрока();
			ДокЗадание.Продукция 	= ТЗ_ТМЦ_ДляВыборки.ТМЦ;
			РазмерКутера 			= Число(Таблица.Область(СтатическаяСтрокаВесКутера, ТекКолонка,СтатическаяСтрокаВесКутера , ТекКолонка).Текст);	
			РазмерКутераФарша 		= Число(Таблица.Область(СтатическаяСтрокаВесКутераФарша, ТекКолонка,СтатическаяСтрокаВесКутераФарша , ТекКолонка).Текст);	
			ДокЗадание.ПримечаниеСтроки	= ТЗ_ТМЦ_ДляВыборки.ТМЦ.Маркировка;
			ДокЗадание.КвоКутеров 	= КвоВводаКутеров;	
			ДокЗадание.КвоКг 		= КвоВводаКутеров / 100 * РазмерКутера;	
			
			ТкСтр  = "";
			ТкСтлб = "";
			Если ТЗ_Вес_Кутера.НайтиЗначение(ТЗ_ТМЦ_ДляВыборки.ТМЦ,ТкСтр,ТкСтлб) = 1 Тогда
				ТЗ_Вес_Кутера.ПолучитьСтрокуПоНомеру(ТкСтр);
				ДокЗадание.Норма 		= ТЗ_Вес_Кутера.Норма;	
			КонецЕсли;
			
			//--- 10.07.15.
			ДокЗадание.КвоФаршаПродукция 				= КвоВводаКутеров * РазмерКутераФарша / 100;
			ДокЗадание.ПроцентПотерьПродукция 			= ДокЗадание.Продукция.ПроцПотерь.Получить(ДатаЗадания);
			ДокЗадание.ПоловинаПроцентПотерьПродукция 	= ДокЗадание.ПроцентПотерьПродукция / 2;
			ДокЗадание.ВесДляЭкспедиции					= ДокЗадание.КвоФаршаПродукция * (100 - ДокЗадание.ПроцентПотерьПродукция / 2) /100;
		КонецЕсли;
		
		Если ПустоеЗначение(КвоВводаКг) <> 1 Тогда			
			//Если фНоваяВерсия = 1 Тогда
				СтрПоиска = 0;
				Если ТЗ_КэшФаршей.НайтиЗначение(СпрФарш.ТекущийЭлемент(),СтрПоиска, "Фарш") = 1 Тогда
					Если ТЗ_КэшФаршей.ПолучитьЗначение(СтрПоиска, "НормаКутеров") <> 0 Тогда
						Сообщить("Фарш: " + Строка(СпрФарш.ТекущийЭлемент()) + " распределён не полностью. Остаток: " + Строка(ТЗ_КэшФаршей.ПолучитьЗначение(СтрПоиска, "НормаКутеров")));
						Возврат;
					КонецЕсли;
				КонецЕсли; 
			//КонецЕсли;

			Позиция = Найти(КвоВводаКг,"к.");			
			
			КвоКг 		= Число(Лев(КвоВводаКг,Позиция-1));
			ИзКутеров 	= Число(Сред(КвоВводаКг,Позиция+2)); 			
			
			ДокЗадание.НоваяСтрока();
			ДокЗадание.Продукция 	= ТЗ_ТМЦ_ДляВыборки.ТМЦ;
			ДокЗадание.КвоФарша		= КвоКг;
			ДокЗадание.ПримечаниеСтроки	= ТЗ_ТМЦ_ДляВыборки.ТМЦ.Маркировка;
			ПроцПотерь    			= ДокЗадание.Продукция.ПроцПотерь.Получить(ДатаЗадания);
			ДокЗадание.КвоКг		= ДокЗадание.КвоФарша * ((100-ПроцПотерь)/100);
			ДокЗадание.КвоФаршаИзКутеров = ИзКутеров;
			
			Если ПустоеЗначение(СпрФарш.ТекущийЭлемент()) <> 1 Тогда
				ДокЗадание.Фарш			= СпрФарш.ТекущийЭлемент();
				ТкСтр = "";
				ТкСтлб = "";
				Если ТЗ_Вес_Кутера.НайтиЗначение(ДокЗадание.Фарш,ТкСтр,ТкСтлб) = 1 Тогда
					ТЗ_Вес_Кутера.ПолучитьСтрокуПоНомеру(ТкСтр);
					ДокЗадание.Норма 		= ТЗ_Вес_Кутера.Норма;						
				КонецЕсли;				
			КонецЕсли;				
		КонецЕсли;		
	КонецЦикла;
	
	Если ДокЗадание.КоличествоСтрок() > 0 Тогда		
		глПроверитьАкции(ТЗАкций, ДокЗадание, ДатаЗадания);
		ТЗ_ИменаЗаказник = СоздатьОбъект("ТаблицаЗначений");
		ДокЗадание.ВыгрузитьТабличнуюЧасть(ТЗ_ИменаЗаказник);
		ТЗ_ИменаЗаказник.Свернуть("ДвойникГруппТМЦСтроки","");
		ДокЗадание.ДвойникиГруппТМЦ = "";
		ТЗ_ИменаЗаказник.ВыбратьСтроки();
		Пока ТЗ_ИменаЗаказник.ПолучитьСтроку() = 1 Цикл
			ДокЗадание.ДвойникиГруппТМЦ = ДокЗадание.ДвойникиГруппТМЦ + СокрЛП(Строка(ТЗ_ИменаЗаказник.ДвойникГруппТМЦСтроки)) + ",";
		КонецЦикла;
		
		Если ТекДата <> ДатаЗадания Тогда
			ДокЗадание.АвтоВремяОтключить();	
			ДокЗадание.УстановитьВремя(8,0,0);		
		КонецЕсли;
		
		ДокЗадание.ДатаСоздания = ТекущаяДата();
		ДокЗадание.ВремяСоздания = ТекущееВремя();
		ДокЗадание.Записать();
		//ДокЗадание.Провести(); //--- док не проводицца		
	КонецЕсли;
	
	ИмяФайла = КаталогИБ() + СокрЛП("\zad_pr\") + СокрЛП(ДокЗадание.НомерДок) + "_" + 
	СтрЗаменить(Строка(ДокЗадание.ДатаДок), ".", "")+".mxl";
	Таблица.Записать(ИмяФайла);
	
	ТЗ_Фаршей.Выгрузить(ТЗ_ФаршейСтроки);
	
	ТЗ_КэшФаршей.УдалитьСтроки(); //--- очищаем кэш
	
 	ВывестиЗаданияНаПроизводство();
 	
 	Если перСыБезУпаковки = 2 Тогда
 		ВывестиЗаданияНаУпаковку();
 	КонецЕсли;
 	
	ВыводСтрокиИтогПоЗаказамКлиентов(2);
 	ВывестиСтрокуОстатки();
 	ВыводСтрокВводаЗаданий();
 	ВывестиСтрокуНезавершенка();
 	ВывестиСтрокуВсегоПроизводство();  	
 	ВывестиСтрокуЗапас();
 	ВывестиЗаданияНаПроизводствоСледующегоПериода();
 	
 	Если перСыБезУпаковки = 2 Тогда
 		ВывестиЗаданияНаУпаковкуСледующегоПериода();
 	КонецЕсли;
 	
 	Если ПустоеЗначение(ВыбИнвентаризация) <> 1  Тогда
 		ФактическиеОстаткиИзИнвентаризации();
 	КонецЕсли;
 	
 	Если ДокЗадание.КоличествоСтрок() > 0 Тогда
 		//Если фНоваяВерсия = 1 Тогда
	 		ОткрытьФорму(ДокЗадание.ТекущийДокумент(), 1);
	 	//Иначе
	 	//	ОткрытьФорму(ДокЗадание.ТекущийДокумент());
	 	//КонецЕсли;
 	КонецЕсли;
 
КонецПроцедуры // ДобавитьСтрокуЗадание()

//====================================================================== //--- УМК Сандомирский В.Ю. (30.04.15)
Процедура ДобавитьСтрокуЗаданиеНаУпаковку() //--- Записать задание 	
	ТекДата = ДатаЗадания;
	Если ВвестиДату(ТекДата, "Введиту дату СОЗДАНИЯ ЗАДАНИЯ на упаковку") = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Если ТекДата < ДатаЗадания Тогда
		Предупреждение("Дата задания не должна быть меньше " + ДатаЗадания);
		Возврат;	
	КонецЕсли;
	
	ТекДатаВыпуска = ДатаЗадания;
	Если ВвестиДату(ТекДатаВыпуска, "Введиту дату ВЫПУСКА !!!") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДатаВыпуска < ДатаЗадания Тогда
		Предупреждение("Дата задания не должна быть меньше " + ДатаЗадания);
		Возврат;	
	КонецЕсли;
		
	ДокЗадание = СоздатьОбъект("Документ.УМК_ЗаданиеНаУпаковку");
	ДокЗадание.Новый();
	ДокЗадание.ДатаДок 		= ТекДата;
	ДокЗадание.ДатаВыпуска 	= ТекДатаВыпуска;
	ДокЗадание.Автор = глПользователь;
	ДокЗадание.Фирма = Константа.БазФирма;
	глУстановитьНомер(ДокЗадание);
	//ДокЗадание.Примечание = ;
	
	ТекКолонка = 6;
	
	ТЗ_ТМЦ_ДляВыборки = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_ТМЦ_Упаковки.Выгрузить(ТЗ_ТМЦ_ДляВыборки);

	ТЗ_ТМЦ_ДляВыборки.ВыбратьСтроки();
	Пока ТЗ_ТМЦ_ДляВыборки.ПолучитьСтроку() = 1 Цикл
		ТекКолонка = ТекКолонка + 1;
		Если ПустоеЗначение(ТЗ_ТМЦ_ДляВыборки.Упаковка) = 0 Тогда			
			КвоВводаКутеров = Число(Таблица.Область(ТекСтрокаЗаявкиНаПроизводствоКутер, ТекКолонка,ТекСтрокаЗаявкиНаПроизводствоКутер, ТекКолонка).Текст);
			Если (КвоВводаКутеров > 0) Тогда
				ДокЗадание.НоваяСтрока();
				ДокЗадание.СтараяПродукция = ТЗ_ТМЦ_ДляВыборки.ТМЦ;
				Если ПустоеЗначение(ДокЗадание.СтараяПродукция.ОдинаковаяПрРазныеМарк) = 0 Тогда
					ДокЗадание.СтараяПродукция = ДокЗадание.СтараяПродукция.ОдинаковаяПрРазныеМарк; 
					ДокЗадание.ПродукцияЗаменена = 1;
				КонецЕсли;				
				ДокЗадание.ГруппировкаРазрешенныхВидовУпаковки = ТЗ_ТМЦ_ДляВыборки.ТМЦ.ГруппировкаРазрешенныхВидовУпаковки;
				ДокЗадание.Продукция 	= ТЗ_ТМЦ_ДляВыборки.ТМЦ;
				ДокЗадание.ВидУпаковки  = ТЗ_ТМЦ_ДляВыборки.Упаковка;
				ДокЗадание.КвоКг 	= КвоВводаКутеров;	
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	
	Если ДокЗадание.КоличествоСтрок() > 0 Тогда		
		ДокЗадание.ВыбратьСтроки();
		Пока ДокЗадание.ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ДокЗадание.Продукция) <> 1 Тогда
				СпрДвойник = СоздатьОбъект("Справочник.УМК_ДвойникГруппыТМЦ");	
				Если СпрДвойник.НайтиПоКоду(ДокЗадание.Продукция.Родитель.Код,0) = 1 Тогда
					ДокЗадание.ДвойникГруппТМЦСтроки =  СпрДвойник.ТекущийЭлемент();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ТЗ_ИменаЗаказник = СоздатьОбъект("ТаблицаЗначений");
		ДокЗадание.ВыгрузитьТабличнуюЧасть(ТЗ_ИменаЗаказник);
		ТЗ_ИменаЗаказник.Свернуть("ДвойникГруппТМЦСтроки","");
		ДокЗадание.ДвойникиГруппТМЦ = "";
		ТЗ_ИменаЗаказник.ВыбратьСтроки();
		Пока ТЗ_ИменаЗаказник.ПолучитьСтроку() = 1 Цикл
			ДокЗадание.ДвойникиГруппТМЦ = ДокЗадание.ДвойникиГруппТМЦ + СокрЛП(Строка(ТЗ_ИменаЗаказник.ДвойникГруппТМЦСтроки)) + ",";
		КонецЦикла;
		
		Если ТекДата <> ДатаЗадания Тогда
			ДокЗадание.АвтоВремяОтключить();	
			ДокЗадание.УстановитьВремя(8,0,0);		
		КонецЕсли;

		ДокЗадание.ДатаСоздания = ТекущаяДата();
		ДокЗадание.ВремяСоздания = ТекущееВремя();		
		ДокЗадание.Записать();
		//ДокЗадание.Провести(); //--- док не проводицца
		
	КонецЕсли;
	
	ИмяФайла = КаталогИБ() + СокрЛП("\zad_pr\") + СокрЛП(ДокЗадание.НомерДок) + "_Уп" + 
	СтрЗаменить(Строка(ДокЗадание.ДатаДок), ".", "")+".mxl";
	Таблица.Записать(ИмяФайла);
	
 	ВывестиЗаданияНаПроизводство();
 	Если перСыБезУпаковки = 2 Тогда
 		ВывестиЗаданияНаУпаковку();
 	КонецЕсли;
	ВыводСтрокиИтогПоЗаказамКлиентов(2);
 	ВывестиСтрокуОстатки();
 	ВыводСтрокВводаЗаданий();
 	ВывестиСтрокуНезавершенка();
 	ВывестиСтрокуВсегоПроизводство();
 	
 	ВывестиСтрокуЗапас();
 	ВывестиЗаданияНаПроизводствоСледующегоПериода();
 	
 	Если перСыБезУпаковки = 2 Тогда
 		ВывестиЗаданияНаУпаковкуСледующегоПериода();
 	КонецЕсли;
 	
 	Если ПустоеЗначение(ВыбИнвентаризация) <> 1  Тогда
 		ФактическиеОстаткиИзИнвентаризации();
 	КонецЕсли;
 	
 	Если ДокЗадание.КоличествоСтрок() > 0 Тогда
 		ОткрытьФорму(ДокЗадание.ТекущийДокумент());
 	КонецЕсли; 
КонецПроцедуры // ДобавитьСтрокуЗадание()

//====================================================================== //--- УМК Сандомирский В.Ю. (30.04.15)
Процедура ДобавитьСтрокуЗадание() //--- Записать задание 	
	Если перСыБезУпаковки = 1 Тогда
		ДобавитьСтрокуЗаданиеПроизводство();
	ИначеЕсли перСыБезУпаковки = 2 Тогда	
		ДобавитьСтрокуЗаданиеНаУпаковку();	
	КонецЕсли;	
КонецПроцедуры // ДобавитьСтрокуЗадание()

//====================================================================== //--- УМК Сандомирский В.Ю. (07.05.15)
Процедура ЗаписатьИзмененияЗаказов()
КонецПроцедуры // гл

//====================================================================== //--- УМК Сандомирский В.Ю. (20.05.15)
Процедура ЭкспортБланкаВExcel()
	Состояние("триває експорт до Excel-я");
	
	Попытка 
        xl=СоздатьОбъект("Excel.Application");
    Исключение       
        Предупреждение("MS Excel не загружен !");
		Возврат;
    КонецПопытки;
	
    Книга = xl.Workbooks.Add(); //Добавляем новый документ	
	//Получение окна
    Window=Книга.Windows(1);
	 //Установка невидимости окна для убыстрения вывода
    
	Пока xl.Worksheets.Count > 1 Цикл //удаляем все листы, кроме первого   
        xl.Sheets(2).Delete();
	КонецЦикла;  
	
	Window.Visible=0;	
	Лист = Книга.WorkSheets(1);		
	Лист.Outline.SummaryRow = 0;//"итоговые" строки отображать сверху 0 (если снизу, то 1)    
	//xl.Visible=1; //Делаем его видимым

	xl.ScreenUpdating = 0;
   	xl.EnableEvents = 0;
    xl.Visible = 0;	
	
	ТЗ_ТМЦ_ДляВыборки = СоздатьОбъект("ТаблицаЗначений");
	Если перСыБезУпаковки = 1 Тогда
		Тз_ТМЦ.Выгрузить(ТЗ_ТМЦ_ДляВыборки);
	ИначеЕсли перСыБезУпаковки = 2 Тогда	
		ТЗ_ТМЦ_Упаковки.Выгрузить(ТЗ_ТМЦ_ДляВыборки);
	КонецЕсли;
	ВсегоСтрок = СтатическаяСтрокаЗапас;
	ВсегоКолонок = ТЗ_ТМЦ_ДляВыборки.КоличествоСтрок() + 7;
	
    Для ТекСтр = 1 По ВсегоСтрок Цикл					
		//--- Цикл по колонкам
		ОкончаниеЦикла = 0;
		ТекКолонка = 0;
		Для ТекКолонка = 1 По  ВсегоКолонок Цикл						
			////Лист.Cells(ТекСтр,ТекКолонка).NumberFormat 	= "@"; 	//--- Формат текстовый иначе нолики теряются в коде
			//Если ТекКолонка = 6 Тогда
			//	Лист.Cells(ТекСтр,ТекКолонка).NumberFormat 	= "0,0";	
			//ИначеЕсли ТекКолонка = 1 Тогда //--- КОД ТМЦ тестом т.к. там ведущие нули
			//	Лист.Cells(ТекСтр,ТекКолонка).NumberFormat 	= "@"; 	
			////ИначеЕсли ТекКолонка > 7  Тогда 	
			////	Лист.Cells(ТекСтр,ТекКолонка).NumberFormat 	= "0,0"; //--- <портит формулы
			//КонецЕсли;	
			
			Лист.Cells(ТекСтр,ТекКолонка).Value 			=Таблица.Область(ТекСтр, ТекКолонка,ТекСтр, ТекКолонка).Текст;	
			Лист.Cells(ТекСтр,ТекКолонка).Borders.Color 	= Таблица.Область(ТекСтр, ТекКолонка,ТекСтр, ТекКолонка).ЦветРамки();	
			Лист.Cells(ТекСтр,ТекКолонка).Interior.Color 	= Таблица.Область(ТекСтр, ТекКолонка,ТекСтр, ТекКолонка).ЦветФона();	
			Лист.Cells(ТекСтр,ТекКолонка).Font.Color 		= Таблица.Область(ТекСтр, ТекКолонка,ТекСтр, ТекКолонка).ЦветТекста();
			
			Если ТекСтр = 2 Тогда
				Лист.Cells(ТекСтр,ТекКолонка).Orientation		 = 90; //--- разворачиваем на 90 град
			КонецЕсли;
				
			Положение = Таблица.Область(ТекСтр, ТекКолонка,ТекСтр, ТекКолонка).ГоризонтальноеПоложение();
			
			Если Положение = 2 Тогда //--- 2 - справа
				
				Лист.Cells(ТекСтр,ТекКолонка).horizontalalignment = 4;  //-4152;
					
			КонецЕсли;
			
			Лист.Cells(ТекСтр,ТекКолонка).WrapText = 1;  //--- перенос по словам
				
			ТекШиринаСтолбца = Таблица.Область(ТекСтр, ТекКолонка,ТекСтр, ТекКолонка).ШиринаСтолбца();
			Если ТекШиринаСтолбца < 1 Тогда
				ТекШиринаСтолбца = 0;
			КонецЕсли;
			
			Лист.Columns(ТекКолонка).ColumnWidth 			= ТекШиринаСтолбца;
			Лист.Cells(ТекСтр,ТекКолонка).Font.Size  		= Таблица.Область(ТекСтр, ТекКолонка,ТекСтр, ТекКолонка).РазмерШрифта()+2;
			Лист.Cells(ТекСтр,ТекКолонка).Font.Bold 		= Таблица.Область(ТекСтр, ТекКолонка,ТекСтр, ТекКолонка).Полужирный();					
		КонецЦикла;		
	КонецЦикла;
	
	//--- Задаем формат печати по ширине листа
	ExcelPS= Лист.PageSetup;    
	Попытка
   		ScrptCtrl = СоздатьОбъект("MSScriptControl.ScriptControl"); 
        ScrptCtrl.Language="vbscript"; 
        ScrptCtrl.AddCode("Function SetAutoZoom()   
		 |  ExcelPS.Zoom = False
         |  ExcelPS.FitToPagesWide = 1 
		 |  ExcelPS.FitToPagesTall = 100
         |End Function");
		
        ScrptCtrl.AddObject("ExcelPS", ExcelPS); 
        ScrptCtrl.Run("SetAutoZoom") 
    Исключение
        сообщить("не удалось задать Excel - по ширине листа")
    КонецПопытки;
	
	//Лист.Protect("123");  //--- защита с паролем листа	
	//xl.ActiveWorkbook.Protect("Structure","Windows","123"); 	//--- защита с паролем структуры книги (защититть структуру книги не удалось)
	
	xl.ScreenUpdating = 1;	
	xl.Visible = 1;
    Window.Visible = 1;	
	Лист = "";
	xl = ""; //--- обнудяем Excel
	
	Константа.УМК_ДатаФормированияБланкаЗаказа = РабочаяДата();	
	//Лист.Cells(Т2.НомерСтроки+3,3).NumberFormat="0"+Экс.decimalseparator+"00";
	//кроме того, эксель любит воспринимать числа как текст и не проводит над ними затем операции сложения-вычитания. Типа "число сохранено как текст". 
	//Недавно боролся с этим, нашел такой не очень красивый, но работающий метод: 
	//
	//
	//Лист.Cells(Т2.НомерСтроки+3,Т1.НомерСтроки*3+2).Value="@"+сокрлп(формат(Цена,"Ч012.2,"));
	//...
	//Лист.Cells.Replace("@", "");
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (17.06.15)
Процедура ОбработкаПодбора(Значение)  // Предопределенная процедура
	
	Если Значение.Вид() = "ТМЦ" Тогда		
		Если (СписокТМЦ.НайтиЗначение(Значение)=0) Тогда
			Представление=""+Значение + " (" + Значение.Код + ")" ;
			СписокТМЦ.ДобавитьЗначение(Значение,Представление);
		КонецЕсли;		
	ИначеЕсли Значение.Вид() = "Контрагенты" Тогда		
		Если (СписокКонтрагентов.НайтиЗначение(Значение)=0) Тогда
			Представление=""+Значение + " (" + Значение.Код + ")" ;
			СписокКонтрагентов.ДобавитьЗначение(Значение,Представление);
		КонецЕсли;
	ИначеЕсли Значение.Вид() = "ФормыУпаковки" Тогда		
		Если (СписокФормы.НайтиЗначение(Значение)=0) Тогда
			Представление=""+Значение + " (" + Значение.Код + ")" ;
			СписокФормы.ДобавитьЗначение(Значение,Представление);
		КонецЕсли; 					
	ИначеЕсли Значение.Вид() = "УМК_ОриентировочныйЗаказ" Тогда			
		Если (СписокОриентировочныхЗаказов.НайтиЗначение(Значение)=0) Тогда
			Представление=""+Значение.НомерДок + " " + Значение.Примечание;
			СписокОриентировочныхЗаказов.ДобавитьЗначение(Значение,Представление);
		КонецЕсли;	
	ИначеЕсли Значение.Вид() = "УМК_ЗаказКлиента" Тогда			
		Если (СписокЗаказов.НайтиЗначение(Значение)=0) Тогда
			Представление=""+Значение.НомерДок + " " + Строка(Значение.Контрагент) + " / " +  Значение.Примечание;
			СписокЗаказов.ДобавитьЗначение(Значение,Представление);
		КонецЕсли;			
	КонецЕсли;	
КонецПроцедуры  // ОбработкаПодбора

//====================================================================== //--- УМК Сандомирский В.Ю. (17.06.15)
// Название: РаботаСоСписком
// Параметры:
// 	Режим - строка, принимающая 4 значения:
//		"Добавить"
//		"ДобавитьНесколько"
// 		"Удалить"
// 		"УдалитьВсе"
//	Список - список значений, в котором задается множественный фильтр
//	ТипСправочника - строка, содержащая идентификатор справочнника, по
//						которому осуществляется мноджественный фильтр
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//   кнопок работы с множественными фильтрами ("...",".....","X","XX")
// Наименование,.
// Описание:
// процедура предназначена для добавления и удаления элементов
// из множественных фильтров
Процедура РаботаСоСписком(Режим,Список,ТипДокумента)
	
	Перем ТекПоз;
	Перем ТекЭлемент;
	Перем Фрм;
                                     
	ТекПоз = Список.ТекущаяСтрока();
	Если ТекПоз>0 Тогда
		ТекЭлемент=Список.ПолучитьЗначение(ТекПоз);
	КонецЕсли;

	Если (Режим="Добавить") ИЛИ (Режим="ДобавитьНесколько") Тогда		// добавляем в список один элемент
		Множественный = ?(Режим = "ДобавитьНесколько", 1, 0);
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипДокумента);
		// открываем окно подбора	
		Попытка
			ОткрытьПодбор("Справочник."+ТипДокумента,,Фрм,Множественный,ТекЭлемент);
			Фрм.ВыборГруппы(1);
		Исключение
			Если (ТипДокумента = "УМК_ОриентировочныйЗаказ") И (фТолькоДейств = 1) Тогда				
				ОткрытьПодбор("Обработка.ВыборДействующихЗаказов", "Форма", Множественный);
			Иначе
				ОткрытьПодбор("Документ."+ТипДокумента,,Фрм,Множественный,ТекЭлемент);
			КонецЕсли;			
		КонецПопытки;
 	ИначеЕсли Режим="УдалитьВсе" Тогда	// удаляем все элементы из списка
		Список.УдалитьВсе();
	ИначеЕсли Режим="Удалить" Тогда	// удаляем из списка один элемент
		Если ТекПоз>0 Тогда
			Список.УдалитьЗначение(ТекПоз);
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры		// работа со списком

//====================================================================== //--- УМК Сандомирский В.Ю. (27.06.15)
Процедура ОчиститьЯчейку()
	
	Если ПустоеЗначение(ТекЯчейка) <> 1 Тогда
		ТекЗначение = Таблица.Область(ТекЯчейка).Текст ;
		Ответ = Вопрос("Очистить ячейку " + СокрЛП(ТекЗначение),4);
		Если Ответ = 6 Тогда
			Таблица.Область(ТекЯчейка).Текст = "";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОчиститьЯчейку()

//====================================================================== //--- УМК Сандомирский В.Ю. (22.06.15)
Процедура ИсключитьСтрокуЗаказаПокупателя()
	
КонецПроцедуры // гл

//======================================================================
Процедура СформироватьОтчетПоЗаданиям(Минус, ПустыеСтроки, ПустаяКолонка = 1, ГруппаНоваяСтраница = 1)
	//СписПараметров		
	глФлагРасшифровки = 1;
	глОбновить		  = 0;
	глРасшифровка = СоздатьОбъект("СписокЗначений");	
	глРасшифровка.Установить("Дата1", ДатаЗадания);		
	глРасшифровка.Установить("Дата2", ДатаЗадания);
	глРасшифровка.Установить("ПечКонДата", ?(ПустаяКолонка = 0, ДатаЗадания, ДатаЗаказа - Минус));
	глРасшифровка.Установить("фСледПериод", 1 - Минус);	
	глРасшифровка.Установить("фВставлятьПустыеСтроки", ПустыеСтроки);	
	глРасшифровка.Установить("Кратность", 150);	
	глРасшифровка.Установить("фПустаяКолонка", ПустаяКолонка);
	глРасшифровка.Установить("фГруппаНоваяСтраница", ГруппаНоваяСтраница);
	ОткрытьФорму("Отчет.УМК_ЗаданияНаПроизводствоЗаПериод");	
	глФлагРасшифровки = 0;
	глРасшифровка = 0;
	глОбновить = 0;
КонецПроцедуры //

//====================================================================== //--- УМК Сандомирский В.Ю. (28.06.15)
Процедура ОтчетПоЗаданиямНаПроизводство()	
	НашлиПоследнее = 0;
	ДокЗадания = СоздатьОбъект("Документ.УМК_ЗаданиеНаПроизводство");
	ДокЗадания.ВыбратьДокументы(ДатаЗадания,ДатаЗадания);
	Пока ДокЗадания.ПолучитьДокумент() = 1 Цикл
		Если ДокЗадания.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		Если ДокЗадания.ПоследнееЗадание = 1 Тогда
			НашлиПоследнее = 1;
			Прервать;
		КонецЕсли;		
	КонецЦикла;
	
	Если НашлиПоследнее = 1 Тогда
		СформироватьОтчетПоЗаданиям(1, 0, 0, 0);
	Иначе	
		Предупреждение("Установите признак последнее задание в " + ДатаЗадания);
	КонецЕсли;	
КонецПроцедуры // ОтчетПоЗаданиямНаПроизводство

//======================================================================
Процедура ПриВыбореЗакладки(Номер, Значение)
	Форма.ИспользоватьСлой("Общий," + Значение, 2);	
КонецПроцедуры // ПРиВыбореЗакладки

//====================================================================== //--- УМК Сандомирский В.Ю. (28.06.15)
Процедура ОтчетПоЗаданиямНаПроизводствоСледПер()	
	//СписПараметров		
	СформироватьОтчетПоЗаданиям(0, 1);
КонецПроцедуры // ОтчетПоЗаданиямНаПроизводство

//--- Процедуры и функции формы обработки (реквизиты диалога)
//====================================================================== //--- УМК Сандомирский В.Ю. (29.10.14)
//====================================================================== 
Процедура ПриОткрытии()
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной", "Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительно", "Дополнительно");
	ПриВыбореЗакладки(1, "Основной");
	Время = "23:59";
	
	Если (НазваниеНабораПрав() = "Администратор") ИЛИ (НазваниеНабораПрав() = "ПроизводствоКасса") ИЛИ (НазваниеНабораПрав() = "ТехнологПроизводства")
		ИЛИ (НазваниеНабораПрав() = "АдминистраторМладший") Тогда
		Форма.фНоваяВерсия.Доступность(1);
	КонецЕсли;
	Если ПустоеЗначение(Форма.Параметр) <> 1 Тогда		
		Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда		
			ДатаЗаказа			= Форма.Параметр.Получить("ДатаЗаказа");
			перСыБезУпаковки 	= Форма.Параметр.Получить("перСыБезУпаковки");
			//ДокНачала 		 	= Форма.Параметр.Получить("ДокНачала");			
		КонецЕсли;		
	Иначе
		ДатаЗаказа 	= РабочаяДата() + 1;
		ДатаЗадания = РабочаяДата();		
		//ДокСнятиеРезерва = СоздатьОбъект("Документ.УМК_СнятиеРезерва");
		//ДокСнятиеРезерва.ОбратныйПорядок(1);
		//ДокСнятиеРезерва.ВыбратьДокументы();	
		//Если ДокСнятиеРезерва.ПолучитьДокумент() = 1 Тогда
		//	ДокНачала = ДокСнятиеРезерва.ТекущийДокумент();
		//КонецЕсли;
		
		перСыБезУпаковки = 1;
		перКлиенты		 = 1;				
	КонецЕсли;	
	
	Тз_Упаковки = СоздатьОбъект("ТаблицаЗначений");
	Тз_Упаковки.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	Тз_Упаковки.НоваяКолонка("Упаковка","Справочник.ВидыУпаковки");
	Тз_Упаковки.НоваяКолонка("Уровень","Число");
	Тз_Упаковки.НоваяКолонка("ТМЦУпаковка");
	
	ТЗ_ТМЦ_Упаковки	= СоздатьОбъект("ТаблицаЗначений");
	ТЗ_ТМЦ_Упаковки.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	ТЗ_ТМЦ_Упаковки.НоваяКолонка("Упаковка","Справочник.ВидыУпаковки");
	ТЗ_ТМЦ_Упаковки.НоваяКолонка("Головной","Справочник.ТМЦ");
	ТЗ_ТМЦ_Упаковки.НоваяКолонка("ГоловнойДО","Справочник.ТМЦ");
	ТЗ_ТМЦ_Упаковки.НоваяКолонка("ТМЦУпаковка", "Строка");
	ТЗ_ТМЦ_Упаковки.НоваяКолонка("ЗКво1","Число");
	ТЗ_ТМЦ_Упаковки.НоваяКолонка("ЗКво2","Число");
	ТЗ_ТМЦ_Упаковки.НоваяКолонка("ЗКво3","Число");
	ТЗ_ТМЦ_Упаковки.НоваяКолонка("Уровень","Число");
	
	ТЗ_Остатки_Фактические = СоздатьОбъект("ТаблицаЗначений");
	
	ВыбратьДокКонца(ДокКонца, ДатаЗадания);
	
	//--- Устанавливаем снятие за сегодня
	ТекДокСнятие = СоздатьОбъект("Документ.УМК_СнятиеРезерва");
	ТекДокСнятие.ВыбратьДокументы(ДатаЗадания,ДатаЗадания);
	Пока ТекДокСнятие.ПолучитьДокумент() = 1 Цикл
		Если ТекДокСнятие.Проведен() = 1 Тогда
			ДокСнятие = ТекДокСнятие.ТекущийДокумент();
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	//--- Устанавливаем инвентаризацию за сегодня
	ТекДокИнвентаризация = СоздатьОбъект("Документ.Инвентаризация");
	ТекДокИнвентаризация.ВыбратьДокументы(ДатаЗадания,ДатаЗадания);
	Счетчиг = 0;
	ТекИнвент = "";
	Пока ТекДокИнвентаризация.ПолучитьДокумент() = 1 Цикл 
		
		Если ТекДокИнвентаризация.МестоХранения <> СкладОстатков Тогда
			Продолжить;
		КонецЕсли;
			
		Если ТекДокИнвентаризация.Проведен() = 1 Тогда
			Счетчиг = Счетчиг + 1;
			ТекИнвент = ТекДокИнвентаризация.ТекущийДокумент();
		КонецЕсли;
	КонецЦикла;
	
	Если Счетчиг = 1 Тогда
		ВыбИнвентаризация = ТекИнвент; 
	КонецЕсли;
	Если (НазваниеНабораПрав() = "Вакуум") ИЛИ (НазваниеНабораПрав() = "Весовщик") Тогда
		Форма.кЭксел.Видимость(0);
		Форма.кОтчетПроизводство.Видимость(0);
		Форма.кОтчетПроизводствоСлед.Видимость(0);
		Форма.кнДобавитьСтрокуЗадание.Видимость(0);
		Форма.кДобавитьСборочные.Видимость(0);
	КонецЕсли;

	//Если фНоваяВерсия = 1 Тогда
		Таблица.Опции(1,0,7,6); // --- Тут фиксируется шапка	
	//Иначе
	//	Таблица.Опции(1,0,5,6); // --- Тут фиксируется шапка	
	//КонецЕсли;
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (26.06.15) 
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
КонецПроцедуры	

//======================================================================
Процедура ДобавитьПоМаршруту()
	СпрМ = СоздатьОбъект("Справочник.Маршруты");
	Если СпрМ.Выбрать("Выберите маршрут", "ФормаСписка") = 1 Тогда
		ДокМ = СпрМ.ДокМаршрута.Получить(ТекущаяДата());
		ДокМ.ВыбратьСтроки();
		Пока ДокМ.ПолучитьСтроку() = 1 Цикл
			Если (СписокКонтрагентов.НайтиЗначение(ДокМ.Контрагент)=0) Тогда
				Представление= "" + ДокМ.Контрагент + " (" + ДокМ.Контрагент.Код + ")" ;
				СписокКонтрагентов.ДобавитьЗначение(ДокМ.Контрагент, Представление);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ДобавитьПоМаршруту

//======================================================================
Процедура ДобавитьПоМаршрутуМ()
	СписВыбора = СоздатьОбъект("СписокЗначений");
	Рез = 1;
	
	Если (СписокЗаказов.РазмерСписка() > 0) Тогда
		СписВыбора.ДобавитьЗначение(1, "Добавить мо маршруту");
		СписВыбора.ДобавитьЗначение(2, "Удалить мо маршруту");
		
		Если СписВыбора.ВыбратьЗначение(Рез,,,,1) = 0 Тогда
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	

	ТекМ = "";	
	СпрМ = СоздатьОбъект("Справочник.Маршруты");
	Если СпрМ.Выбрать("Выберите маршрут", "ФормаСписка") = 1 Тогда
		ТекМ = СпрМ.ТекущийЭлемент();
	КонецЕсли;	
	
	Если Рез = 1 Тогда
		Если ПустоеЗначение(ТекМ) = 0 Тогда			
			РегР = СоздатьОбъект("Регистр.Резервы");
			Если ДатаЗаказа < ПолучитьДатуТА() Тогда
				РегР.ВременныйРасчет(1);
				Позиция = СформироватьПозициюДокумента(ДатаЗаказа, Число(Лев(Время,2)), Число(Прав(Время, 2)), 59);
				РассчитатьРегистрыПо(Позиция);
			КонецЕсли;
			ТИт = СоздатьОбъект("ТаблицаЗначений"); 
			РегР.ВыгрузитьИтоги(ТИт);
			ТИт.Свернуть("ДокументРезерва", "Резерв");
			Если СписДобавленныхМаршрутов.НайтиЗначение(ТекМ) = 0 Тогда
				СписДобавленныхМаршрутов.ДобавитьЗначение(ТекМ);			
			КонецЕсли;
			
			ТИт.ВыбратьСтроки();
			Пока ТИт.ПолучитьСтроку() = 1 Цикл
				Если ТИт.ДокументРезерва.Маршрут = ТекМ Тогда
					Если СписокЗаказов.НайтиЗначение(ТИт.ДокументРезерва) = 0 Тогда
						Представление=""+ТИт.ДокументРезерва.НомерДок + " " + Строка(ТИт.ДокументРезерва.Контрагент) + " / " + ТИт.ДокументРезерва.Примечание;
						СписокЗаказов.ДобавитьЗначение(ТИт.ДокументРезерва,Представление);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;			
		КонецЕсли;
	Иначе
		Инд = 1;
		Пока Инд <= СписокЗаказов.РазмерСписка() Цикл
			Зн = СписокЗаказов.ПолучитьЗначение(Инд);
			Если Зн.Маршрут = ТекМ Тогда
				СписокЗаказов.УдалитьЗначение(Инд);
			Иначе
				Инд = Инд + 1;
			КонецЕсли;						
		КонецЦикла;
		Поз = СписДобавленныхМаршрутов.НайтиЗначение(ТекМ);
		Если Поз <> 0 Тогда
			СписДобавленныхМаршрутов.УдалитьЗначение(Поз);
		КонецЕсли;		
	КонецЕсли;
	
	СтрМаршруты = "Маршруты: ";
	Для Инд = 1 По СписДобавленныхМаршрутов.РазмерСписка() Цикл
		СтрМаршруты = СтрМаршруты + ?(Инд = 1, "", ", ") + СписДобавленныхМаршрутов.ПолучитьЗначение(Инд);
	КонецЦикла;
КонецПроцедуры // ДобавитьПоМаршруту

//======================================================================
Процедура КорректировкаОтрицательных()
	Если перСыБезУпаковки = 2 Тогда
		Если Вопрос("Откорректировать количество, чтобы не было отрицательных значений?", "Да+Нет") = "Да" Тогда
			ТЗ_ТМЦ_Упаковки.ВыбратьСтроки();			
			Пока ТЗ_ТМЦ_Упаковки.ПолучитьСтроку() = 1 Цикл
				Если (ПустоеЗначение(ТЗ_ТМЦ_Упаковки.Упаковка) = 0) И (ТЗ_ТМЦ_Упаковки.Упаковка <> НетУп) Тогда
					Кол = ТЗ_ТМЦ_Упаковки.НомерСтроки + 6;
					Запас = Число(Таблица.Область(СтатическаяСтрокаЗапас, Кол).Текст);
					Если Запас < 0 Тогда
						ТЗ_ТМЦ_ДляВыборки.ПолучитьСтрокуПоНомеру(ТЗ_ТМЦ_Упаковки.НомерСтроки);
						Добавление = -Запас;
						ТекЗначение = Число(Таблица.Область(Кол, ТекСтрокаЗаявкиНаПроизводствоКутер).Текст);
						ТекАдрес = "R" + ТекСтрокаЗаявкиНаПроизводствоКутер + "C" + Кол;
						ОбновитьЧисла(ТекСтрокаЗаявкиНаПроизводствоКутер, Кол, ТекЗначение + Добавление, ТекЗначение, ТекАдрес, 1);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;		
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // КорректировкаОтрицательных()

//======================================================================
Процедура ОчиститьМаршруты() 
	СтрМаршруты = "Маршруты: ";
	СписДобавленныхМаршрутов.УдалитьВсе();	
КонецПроцедуры //

Процедура Сдвиг(Позиций)
	Если СписокТМЦ.ТекущаяСтрока() <> 0 Тогда
		СписокТМЦ.СдвинутьЗначение(Позиций, СписокТМЦ.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры // Сдвиг

//--- УМК Сандомирский В.Ю. (25.11.14)  для Экселя
СписокПастельныхцветов = СоздатьОбъект("СписокЗначений");
//--- Раскрашка для Экселя
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(224,255,224)); 
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(253,233,217));
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(217,217,217));
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(221,217,196));
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(228,233,236));
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(220,230,241));
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(204,192,218));
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(242,220,219));
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(252,213,180));
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(191,191,191));
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(216,228,188));
СписокПастельныхцветов.ДобавитьЗначение(глПолучитьЦвет(224,255,224));

СкладОстатков = Константа.БазФирма.ОсновнойСклад; //--- УМК Сандомирский В.Ю. (23.06.15)
ТЗ_ТМЦ_ДляВыборки = СоздатьОбъект("ТаблицаЗначений");
фТолькоДейств = 1;
СтрМаршруты = "Маршруты: ";
СписДобавленныхМаршрутов = СоздатьОбъект("СписокЗначений");