Перем спПодбора;
Перем Обновить; 
Перем Расшифровка; 
Перем Т, ТЗ,ТЗ_Групп;
Перем СписВЗ, СтрВССписаний;
Перем СтрокаДоступ;

Перем ТекЗакладка;

Перем СписокПодбора,СправочникПодбора;

//======================================================================
Процедура Сформировать()
	
	Если ПустоеЗначение(ВыбДата) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	//--- Технологические 
	СпрЦены 	= СоздатьОбъект("Справочник.Цены");
	Расшифровка = СоздатьОбъект("СписокЗначений");
	
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ОтчетПоЦенам");
	Расшифровка.Установить("ВыбДата", ВыбДата);
	Расшифровка.Установить("ВыбБазоваяКатегорияЦен", ВыбБазоваяКатегорияЦен);
	Расшифровка.Установить("фКроме", фКроме);
	Расшифровка.Установить("ПоГруппам", ПоГруппам);
	Расшифровка.Установить("фТолькоСхемы", фТолькоСхемы);
	Расшифровка.Установить("СписокВыбТМЦ",СписокВыбТМЦ);
	
	
	//--- Типы цен
	Тз_КатегорииЦен = СоздатьОбъект("ТаблицаЗначений");
	Тз_КатегорииЦен.НоваяКолонка("Категория","Справочник.КатегорииЦен");
	Тз_КатегорииЦен.НоваяКолонка("НаименованиеКатегории");
	СпрКатегорииЦен = СоздатьОбъект("Справочник.КатегорииЦен");
	СпрКатегорииЦен.ВыбратьЭлементы();
	Пока СпрКатегорииЦен.ПолучитьЭлемент() = 1 Цикл
		Если (фВыводитьПомеченныеНаУдалениеКатегорииЦен = 0) И (СпрКатегорииЦен.ПометкаУдаления() = 1) Тогда
			Продолжить;
		КонецЕсли;
		Тз_КатегорииЦен.НоваяСтрока();
		Тз_КатегорииЦен.Категория 				= СпрКатегорииЦен.ТекущийЭлемент();
		Тз_КатегорииЦен.НаименованиеКатегории 	= СпрКатегорииЦен.Наименование;
	КонецЦикла;
	
	Тз_КатегорииЦен.Сортировать("НаименованиеКатегории +");
	//Тз_КатегорииЦен.ВыбратьСтроку();
	
	 
	//...
	
	ПечФорма = "Таблица";
	
	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить = 0) Тогда
		Т = СоздатьОбъект("Таблица");
	Иначе
		Т.Очистить();
	КонецЕсли;
	Т.ИсходнаяТаблица(ПечФорма);	
	
	Запрос = СоздатьОбъект("Запрос");

	ТекстЗапроса = 
	"//{{ЗАПРОС(ДвижениеТМЦ)
	|Период с ВыбДата;
	|Товар = Справочник.ТМЦ.ТекущийЭлемент;";
	Если ПоГруппам = 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар без групп;";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар;";	
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
	|"//}}ЗАПРОС
	;

	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗтовары = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗтовары);
	Если ТЗтовары.КоличествоСтрок() = 0 Тогда
		Возврат;		
	КонецЕсли;
	
	Т.ВывестиСекцию("Кнопки");	
	Т.ВывестиСекцию("Заголовок");
	
	Запрос.вНачалоВыборки();
	
	Пока Запрос.Группировка(1) = 1 Цикл
			
		Если  Запрос.Товар.ЭтоГруппа() = 1 Тогда
			ПечГруппа = Запрос.Товар;
			Т.ВывестиСекцию("ГруппаТовар");			
		Иначе
			
			РасчетняЦена = "";
			
			ПечТовар 		= Запрос.Товар;
			
			Если ПустоеЗначение(ВыбБазоваяКатегорияЦен) = 0 Тогда
				ПечБазоваяЦена  = ВыбБазоваяКатегорияЦен;
			Иначе
				ПечБазоваяЦена  = Запрос.Товар.БазоваяКатегорияЦены;			
			КонецЕсли;
			
			БазЦенаНаДату 		= глВернутьЦену(Запрос.Товар,ПечБазоваяЦена,ВыбДата,Гривня);
			Т.ВывестиСекцию("Товар");	
			СпрЦены.ИспользоватьВладельца(Запрос.Товар);
			
			
			Тз_КатегорииЦен.ВыбратьСтроки();
			Пока Тз_КатегорииЦен.ПолучитьСтроку() = 1 Цикл
				
				Если МФКатЦены.РазмерСписка() > 0 Тогда		//--- множественній фильтр по категория цен							
					Если МФКатЦены.НайтиЗначение(Тз_КатегорииЦен.Категория) = 0 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
							
				ЦенаНаДату 		= "";
				РасчетняЦена 	= "";
				Разница		 	= "";
				
				Если СпрЦены.НайтиПоРеквизиту("КатегорияЦены",Тз_КатегорииЦен.Категория,0) = 0 Тогда
					
					ОбластьПечати = "ПустойТипЦены";
					
					ПечКатегорияЦены = " (не заполнена) " + СокрЛП(Тз_КатегорииЦен.Категория.Наименование);
					
				Иначе
					
					Если СпрЦены.ПометкаУдаления() = 1 Тогда
						ОбластьПечати = "ПустойТипЦены";
						ПечКатегорияЦены = " (не заполнена) " + СокрЛП(Тз_КатегорииЦен.Категория.Наименование);
					Иначе
						
						ОбластьПечати = "ТипЦен";
						
						СпрЦены.ИспользоватьДату(ВыбДата,1);
						
						ПечКатегорияЦены 	= СокрЛП(Тз_КатегорииЦен.Категория.Наименование);
						ЦенаНаДату 	 		= глВернутьЦену(Запрос.Товар,СпрЦены.КатегорияЦены,ВыбДата,Гривня);	
						
						Если (ПустоеЗначение(СпрЦены.СхемаЦенообразования)=1) И (фТолькоСхемы = 1) Тогда
							Продолжить;
						ИначеЕсли (ПустоеЗначение(СпрЦены.СхемаЦенообразования)=1) И (фТолькоСхемы = 0) Тогда 
							ПечФормула = " не заполнена ";
						ИначеЕсли ПустоеЗначение(СпрЦены.СхемаЦенообразования)=0 Тогда
							ПечФормула = СпрЦены.СхемаЦенообразования.Наименование;	
						КонецЕсли;	
						
						Если (ПустоеЗначение(СпрЦены.СхемаЦенообразования)= 0) И (БазЦенаНаДату <> 0) Тогда							
							Если СпрЦены.СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена <> 2  Тогда
								РасчетняЦена		= ?(СпрЦены.СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена = 3, СпрЦены.Владелец.Цена_Прод.Получить(ВыбДата), глАвтоПересчетЦены(СпрЦены,БазЦенаНаДату));	
								Разница				= Окр(ЦенаНаДату,2) - Окр(РасчетняЦена,2);
							КонецЕсли;								
						КонецЕсли;
											
					КонецЕсли; 
									
				КонецЕсли;
					
				Т.ВывестиСекцию(ОбластьПечати);	
					
			КонецЦикла;
					
			// Учитываем что в учетной цене хранится значение без НДС
			//РасчетняЦена  = РасчетняЦена * (100 + глПроцентНДС (Запрос.Товар.СтавкаНДС))/100;
											
		КонецЕсли;
				
	КонецЦикла;	
		
	Т.ОбластьПечати(2);
	Т.ПараметрыСтраницы(2,,,,,,,,,1);
	Т.ТолькоПросмотр(1);
	Т.Опции(0,0,4);
	Т.Показать("Сформировать", "");
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры

//====================================================================== 29/05/14
Процедура ЗаполнитьСхемы()
	
	Если ПустоеЗначение(ВыбКатегорияЦен) = 1 Тогда
		Сообщить("Не заполнена категория цен !","!");
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбСхемаЦенообразования) = 1 Тогда
		Сообщить("Не заполнена схема для установки !","!");
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбДата) = 1 Тогда
		Сообщить("Не заполнена дата установки схемы !","!");
		Возврат;
	КонецЕсли;
	
	
	//--- Технологические 
	СпрЦены = СоздатьОбъект("Справочник.Цены");
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ДвижениеТМЦ)
	|Период с ВыбДата;
	|Товар = Справочник.ТМЦ.ТекущийЭлемент;
	|Группировка Товар без групп;
	|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
	|"//}}ЗАПРОС;
	;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		СпрЦены.ИспользоватьВладельца(Запрос.Товар);
		СпрЦены.ИспользоватьДату(ВыбДата,1);
		СпрЦены.ВыбратьЭлементы();
		
		Если СпрЦены.НайтиПоРеквизиту("КатегорияЦены", ВыбКатегорияЦен, 0) = 1 Тогда
			СпрЦены.СхемаЦенообразования = ВыбСхемаЦенообразования;
			СпрЦены.Записать();
			Сообщить("Товар добавлена схема -" + Запрос.Товар);
		Иначе
			СпрЦены.Новый();
			СпрЦены.Наименование 	= ВыбКатегорияЦен.Наименование;
			СпрЦены.Валюта 		 	= Гривня;
			СпрЦены.Единица 	 	= глВернутьБазовуюЕдиницуТовара(Запрос.Товар);
			СпрЦены.КатегорияЦены 	= ВыбКатегорияЦен.ТекущийЭлемент();
			СпрЦены.СхемаЦенообразования = ВыбСхемаЦенообразования;
			СпрЦены.Записать();
			Сообщить("Товар добавлена категория и схема -" + Запрос.Товар);
		КонецЕсли;	
						
	КонецЦикла;
	
	Сообщить("Обработка заполнения схем завершена.","!");
	
КонецПроцедуры // ЗаполнитьСхемы

//======================================================================
Процедура ОбработкаПодбора(Значение) 	
	Перем ПредставлениеЗначения;
	
	Если (ВРег(Значение.Вид())=СправочникПодбора) И (СписокПодбора.НайтиЗначение(Значение)=0) Тогда
		ПредставлениеЗначения = Строка(Значение);
		Если СписокПодбора.НайтиЗначение(Значение) <> 1 Тогда
			СписокПодбора.ДобавитьЗначение(Значение,ПредставлениеЗначения);
		КонецЕсли;
		СписокПодбора.ТекущаяСтрока(СписокПодбора.РазмерСписка());
	КонецЕсли;
	
КонецПроцедуры

// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение="")	
	
   	Форма.ИспользоватьСлой("Общий," + Значение);
	  	
КонецПроцедуры	// ПриВыбореЗакладки  

//======================================================================
Процедура ПриОткрытии()  
	
	
	// Инициализируем закладки
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Отчет","Отчет");
	Форма.Закладки.ДобавитьЗначение("УстановкаШаблонаСхем","Уст. ШАБЛОНА СХЕМ");
	Форма.Закладки.ДобавитьЗначение("УстановкаСхем","Установка схем");
	Форма.Закладки.ДобавитьЗначение("УстановкаБазЦены","Уст. Базовой цены");
	Форма.Закладки.ДобавитьЗначение("АвтоРасчетЦен","Уст. АвтоРасчетЦен");
	Форма.Закладки.ДобавитьЗначение("ПересчетЦен","Перерасчет цен");
	Форма.Закладки.ДобавитьЗначение("ПересчетСвязаных","Перерасчет связаных ТМЦ");
	Форма.ИспользоватьСлой("Общий,Отчет", 2);
	
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		ВыбДата = глРасшифровка.Получить("ВыбДата");
		ВыбБазоваяКатегорияЦен = глРасшифровка.Получить("ВыбБазоваяКатегорияЦен");
		фКроме = глРасшифровка.Получить("фКроме");
		ПоГруппам = глРасшифровка.Получить("ПоГруппам");
		фТолькоСхемы = глРасшифровка.Получить("фТолькоСхемы");
		
		глРасшифровка.Получить("СписокВыбТМЦ").Выгрузить(СписокВыбТМЦ); 
		
		фССКоэф = глРасшифровка.Получить("фССКоэф");
		
		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
		РесурсСумма = 1;
	КонецЕсли;
КонецПроцедуры	

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("ВыбБазоваяКатегорияЦен", ВыбБазоваяКатегорияЦен);
	СохранитьЗначение("фТолькоСхемы", фТолькоСхемы);
	СохранитьЗначение("фКроме", фКроме);
	СохранитьЗначение("ПоГруппам", ПоГруппам);
	
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьБазовыеКатегорииЦен()
	
	Если ПустоеЗначение(ВыбБазоваяКатегорияЦенДляЗаполнения) = 1 Тогда
		Сообщить("Не заполнена категория цен !","!");
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбДата) = 1 Тогда
		Сообщить("Не заполнена дата установки схемы !","!");
		Возврат;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ДвижениеТМЦ)
	|Период с ВыбДата;
	|Товар = Справочник.ТМЦ.ТекущийЭлемент;
	|Группировка Товар без групп;
	|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
	|"//}}ЗАПРОС;
	;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Если Запрос.Товар.БазоваяКатегорияЦены.Получить(ВыбДата) <> ВыбБазоваяКатегорияЦенДляЗаполнения Тогда
			СпрТМЦ.НайтиЭлемент(Запрос.Товар);
			СпрТМЦ.БазоваяКатегорияЦены.Установить(ВыбДата,ВыбБазоваяКатегорияЦенДляЗаполнения);
			СпрТМЦ.Записать();
		КонецЕсли;	
	КонецЦикла;
	
	Сообщить("Обработка заполнения базовых цен завершена.","!");
	
	
КонецПроцедуры // ЗаполнитьБазовыеКатегорииЦен

//======================================================================
Процедура ЗаполнитьАвтоизменениеЦен()
	
	Если ПустоеЗначение(ВыбДата) = 1 Тогда
		Сообщить("Не заполнена дата установки флажка !","!");
		Возврат;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ДвижениеТМЦ)
	|Период с ВыбДата;
	|Товар = Справочник.ТМЦ.ТекущийЭлемент;
	|Группировка Товар без групп;
	|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
	|"//}}ЗАПРОС;
	;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Если Запрос.Товар.АвтоИзменениеЦен.Получить(ВыбДата) <> фАвтоИзменениеЦен Тогда
			СпрТМЦ.НайтиЭлемент(Запрос.Товар);
			СпрТМЦ.АвтоИзменениеЦен.Установить(ВыбДата,фАвтоИзменениеЦен);
			СпрТМЦ.Записать();
		КонецЕсли;	
	КонецЦикла;
	
	Сообщить("Обработка заполнения флажка ""Авто-изменеие цен"" завершена.","!");
	
КонецПроцедуры // ЗаполнитьАвтоизменениеЦен()

//====================================================================== //--- УМК Сандомирский В.Ю, (10.06.14)
Процедура ЗаполнитьАвтоУменьшениеЦен()
	
	Если ПустоеЗначение(ВыбДата) = 1 Тогда
		Сообщить("Не заполнена дата установки флажка !","!");
		Возврат;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ДвижениеТМЦ)
	|Период с ВыбДата;
	|Товар = Справочник.ТМЦ.ТекущийЭлемент;
	|Группировка Товар без групп;
	|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
	|"//}}ЗАПРОС;
	;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Если Запрос.Товар.АвтоУменьшениеЦен.Получить(ВыбДата) <> фАвтоУменьшениеЦен Тогда
			СпрТМЦ.НайтиЭлемент(Запрос.Товар);
			СпрТМЦ.АвтоУменьшениеЦен.Установить(ВыбДата,фАвтоУменьшениеЦен);
			СпрТМЦ.Записать();
		КонецЕсли;	
	КонецЦикла;
	
	Сообщить("Обработка заполнения флажка ""Авто-уменьшение цен"" завершена.","!");
	
КонецПроцедуры // ЗаполнитьАвтоУменьшениеЦен()

// ===============================
// Название: РаботаСоСписком
// Параметры:
// 	Режим - строка, принимающая 4 значения:
//		"Добавить"
//		"ДобавитьНесколько"
// 		"Удалить"
// 		"УдалитьВсе"
//	Список - список значений, в котором задается множественный фильтр
//	ТипСправочника - строка, содержащая идентификатор справочнника, по
//						которому осуществляется мноджественный фильтр
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//   кнопок работы с множественными фильтрами ("...",".....","X","XX")
// Наименование,.
// Описание:
// процедура предназначена для добавления и удаления элементов
// из множественных фильтров
Процедура РаботаСоСписком(Режим,Список,ТипСправочника)
	Перем ТекПоз;
	Перем ТекЭлемент;
	Перем Фрм;
                                     
	Если ТипСправочника = "Категории" Тогда
		ТипСправочника = "ВидыКатегорий";
	КонецЕсли;	
	
	ТекПоз = Список.ТекущаяСтрока();
	Если ТекПоз>0 Тогда
		ТекЭлемент=Список.ПолучитьЗначение(ТекПоз);
	КонецЕсли;

	Если Режим="Добавить" Тогда		// добавляем в список один элемент
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,0,ТекЭлемент);
		Фрм.ВыборГруппы(1);

	ИначеЕсли Режим="ДобавитьНесколько" Тогда  // добавляем в список несколько элементов
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,1,ТекЭлемент);
		Фрм.ВыборГруппы(1);

 	ИначеЕсли Режим="УдалитьВсе" Тогда	// удаляем все элементы из списка
		Список.УдалитьВсе();

	ИначеЕсли Режим="Удалить" Тогда	// удаляем из списка один элемент
		Если ТекПоз>0 Тогда
			Список.УдалитьЗначение(ТекПоз);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры		// работа со списком

//====================================================================== //--- УМК Сандомирский В.Ю, (02.04.14)
Процедура ОчиститьПомеченныеКатегорииЦен()
	НомерСтроки =  МФКатЦены.РазмерСписка(); 

	Пока НомерСтроки <> 0 Цикл
		стр = "";
		ТекЗначение = МФКатЦены.ПолучитьЗначение(НомерСтроки, стр);
		Если ТекЗначение.ПометкаУдаления() = 1 Тогда
			МФКатЦены.УдалитьЗначение(НомерСтроки);
		КонецЕсли;	
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла; 
	
КонецПроцедуры // ОчиститьПомеченныеКатегорииЦен

//====================================================================== //--- УМК Сандомирский В.Ю, (08.04.14)
Процедура ЗаполнитьОтборТоварамиСБазовойЦеной()
	Если ПустоеЗначение(ВыбБазоваяКатегорияЦен) = 0 Тогда
		
		РаботаСоСписком("УдалитьВсе",СписокВыбТМЦ,"ТМЦ");
		
		СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
		СпрТМЦ.ВыбратьЭлементы();
		Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
				
			Если СпрТМЦ.ЭтоГруппа() = 1 Тогда
				Продолжить;				
			КонецЕсли;	
			
			Если СпрТМЦ.БазоваяКатегорияЦены.Получить(ВыбДата) = ВыбБазоваяКатегорияЦен Тогда
				СписокВыбТМЦ.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент(),СпрТМЦ.Наименование)
			КонецЕсли;
				
		КонецЦикла;
		
	Иначе
		Сообщить("Заполните базовую цену .");
		
	КонецЕсли;
	
	
	
	
КонецПроцедуры // ЗаполнитьОтборТоварамиСБазовойЦеной

//====================================================================== //--- УМК Сандомирский В.Ю, (23.04.14)
Процедура ПерерасчитатьЦеныСогласноСхем(ФлагЗаписи)
	
	Если ПустоеЗначение(ВыбДата) = 1 Тогда
		Сообщить("Не заполнена дата перерасчета цен !","!");
		Возврат;
	КонецЕсли;
	
	ПечФорма = "ТаблицаПредварительно";
	
	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить = 0) Тогда
		Т = СоздатьОбъект("Таблица");
	Иначе
		Т.Очистить();
	КонецЕсли;
	Т.ИсходнаяТаблица(ПечФорма);	
	
	Запрос = СоздатьОбъект("Запрос");

	ТекстЗапроса = 
	"//{{ЗАПРОС(ДвижениеТМЦ)
	|Период с ВыбДата;
	|Товар = Справочник.ТМЦ.ТекущийЭлемент;";
	Если ПоГруппам = 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар без групп;";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар;";	
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
	|"//}}ЗАПРОС
	;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СпрТМЦ  = СоздатьОбъект("Справочник.ТМЦ");
	СпрЦены = СоздатьОбъект("Справочник.Цены");
	СпрЦены.ИспользоватьДату(ВыбДата);
	
	Т.ВывестиСекцию("Заголовок");
	
	Если ФлагЗаписи = 1 Тогда	
		ДокУстановкаЦенТМЦ = СоздатьОбъект("Документ.УМК_РасчетПоСхемамЦенТМЦ");
		Если ПустоеЗначение(ВыбУстановкаЦенТМЦ) = 1 Тогда
			ДокУстановкаЦенТМЦ.Новый();
			СозданЗаписан = " создан новый ";
		Иначе	
			ДокУстановкаЦенТМЦ.НайтиДокумент(ВыбУстановкаЦенТМЦ);	
			Если ДокУстановкаЦенТМЦ.Проведен() = 1 Тогда
				ДокУстановкаЦенТМЦ.СделатьНеПроведенным();
			КонецЕсли;
			СозданЗаписан = " перезаполнен ";
		КонецЕсли;
		ДокУстановкаЦенТМЦ.УдалитьСтроки();	
		ДокУстановкаЦенТМЦ.ДатаДок = ВыбДата;		
		
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		
		Если  Запрос.Товар.ЭтоГруппа() = 1 Тогда
		
			ПечГруппа = Запрос.Товар;
			Т.ВывестиСекцию("ГруппаТовар");			
		
		Иначе
		
			Если ПустоеЗначение(Запрос.Товар.БазоваяКатегорияЦены.Получить(ВыбДата)) = 1 Тогда
				Если фБезБазЦены=1 Тогда
					Сообщить(" ТМЦ : " + Запрос.Товар + " - не заполнена базовая категория цен !","!");		
				КонецЕсли;	
				
				Продолжить;
				
			КонецЕсли;
			
			ПечТовар = Запрос.Товар;
			Т.ВывестиСекцию("Товар");	
			
			СпрЦены.ИспользоватьВладельца(Запрос.Товар);
			Если СпрЦены.НайтиПоРеквизиту("КатегорияЦены", Запрос.Товар.БазоваяКатегорияЦены.Получить(ВыбДата), 0) = 1 Тогда
				ТекБазЦена = СпрЦены.Цена;
				
				СпрЦены.ВыбратьЭлементы();
				Пока СпрЦены.ПолучитьЭлемент() = 1 Цикл					
					Если СпрЦены.ПометкаУдаления() = 1 Тогда
						Продолжить;
					КонецЕсли;
					
					Если ПустоеЗначение(СпрЦены.СхемаЦенообразования) = 0 Тогда
						Если СпрЦены.СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена <> 2 Тогда
							УстанавливаемаяЦена = ?(СпрЦены.СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена = 3, СпрЦены.Владелец.Цена_Прод.Получить(ВыбДата), глАвтоПересчетЦены(СпрЦены,ТекБазЦена));
							
							ПечКатегорияЦены = СпрЦены.КатегорияЦены;
							ЦенаНаДату 		 = СпрЦены.Цена;
							РасчетняЦена 	 = УстанавливаемаяЦена;
							Разница 		 = Окр(ЦенаНаДату,2) - Окр(РасчетняЦена,2);
												
							Т.ВывестиСекцию("ТипЦен");	
							
							Если (ФлагЗаписи = 1) И (Разница <> 0) Тогда	
								ДокУстановкаЦенТМЦ.НоваяСтрока();
								ДокУстановкаЦенТМЦ.ТМЦ 					= Запрос.Товар;
								ДокУстановкаЦенТМЦ.Ед 					= СпрЦены.Единица;
								ДокУстановкаЦенТМЦ.Категория 			= СпрЦены.КатегорияЦены;
								ДокУстановкаЦенТМЦ.СхемаЦенообразования = СпрЦены.СхемаЦенообразования;
								ДокУстановкаЦенТМЦ.ЦенаБыло 			= ЦенаНаДату;
								ДокУстановкаЦенТМЦ.ЦенаСтало 			= РасчетняЦена;
							КонецЕсли;
							
							//Сообщить(" " + Запрос.Товар + " тип цен " + СпрЦены + " = " + СпрЦены.Цена);		
						КонецЕсли;	
					Иначе
						Если фБезСхемы=1 Тогда
							Сообщить(" ТМЦ : " + Запрос.Товар + " тип цен - " + СпрЦены + " не заполнена схема !!!","!!!");
						КонецЕсли;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;			
		КонецЕсли;			
	КонецЦикла;

	Если ФлагЗаписи = 0 Тогда
		Т.ОбластьПечати(2);
		Т.ПараметрыСтраницы(2,,,,,,,,,1);
		Т.ТолькоПросмотр(1);
		Т.Опции(0,0,3);
		Т.Показать("Сформировать", "");
	Иначе	
		Если ДокУстановкаЦенТМЦ.КоличествоСтрок() > 0 Тогда
			ДокУстановкаЦенТМЦ.Записать();
			ДокУстановкаЦенТМЦ.Провести();
			ВыбУстановкаЦенТМЦ = ДокУстановкаЦенТМЦ.ТекущийДокумент();
		КонецЕсли;	
		Сообщить("Обработка перерасчета цен по схемам завершена." + СозданЗаписан + " документ " + ДокУстановкаЦенТМЦ,"!");	
	КонецЕсли;
	
КонецПроцедуры // ПерерасчитатьЦеныСогласноСхем

//====================================================================== //--- УМК Сандомирский В.Ю, (21.05.14)
Процедура ЗаполнитьЦены(ТекТМЦ)	
	Перем ЦеныТовара;
	Перем КатегорииЦен;
	                                                
	//Если ПустоеЗначение(ТекТМЦ.ЕдиницаПоУмолчанию) = 1 Тогда
	// 	глКомментарий("Не заполнена единица по умолчанию. Формирование цен невозможно.");
	// 	Возврат;
	//КонецЕсли;	                    	
		
	ДН = ВыбДата;
	
	ЦеныТовара = СоздатьОбъект("Справочник.Цены");
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	
	Если СпрТМЦ.НайтиЭлемент(ТекТМЦ) = 1 Тогда
				
		Если СпрТМЦ.АвтоИзменениеЦен.Получить(ДН) <>  ВыбШаблонСхемЦенообразования.АвтоИзменениеЦен Тогда
			СпрТМЦ.АвтоИзменениеЦен.Установить(ДН,ВыбШаблонСхемЦенообразования.АвтоИзменениеЦен);
		КонецЕсли;
		
		Если СпрТМЦ.АвтоУменьшениеЦен.Получить(ДН) <>  ВыбШаблонСхемЦенообразования.АвтоУменьшениеЦен Тогда
			СпрТМЦ.АвтоУменьшениеЦен.Установить(ДН,ВыбШаблонСхемЦенообразования.АвтоУменьшениеЦен);
		КонецЕсли;
		
		Если СпрТМЦ.БазоваяКатегорияЦены.Получить(ДН) <>  ВыбШаблонСхемЦенообразования.БазоваяКатегорияЦены Тогда
			СпрТМЦ.БазоваяКатегорияЦены.Установить(ДН,ВыбШаблонСхемЦенообразования.БазоваяКатегорияЦены);
		КонецЕсли;		
	КонецЕсли;		
	    			
	ЦеныТовара.ИспользоватьДату(ДН);	
	ЦеныТовара.ИспользоватьВладельца(ТекТМЦ);
	
	КатегорииЦен = СоздатьОбъект("Справочник.КатегорииЦен");
	КатегорииЦен.ВыбратьЭлементы();
	Пока КатегорииЦен.ПолучитьЭлемент()=1 Цикл
		
		//--- УМК Сандомирский В.Ю, (категоря цен помечена очищать эти цены из справочника) 02.04.14
		Если (КатегорииЦен.ПометкаУдаления()=1)  Тогда			
		    Если ЦеныТовара.НайтиПоРеквизиту("КатегорияЦены",КатегорииЦен.ТекущийЭлемент(),0)=1 Тогда
				Если ЦеныТовара.ПометкаУдаления() = 0 Тогда
					ЦеныТовара.Удалить(0);
					Сообщить("Тип цен - " + КатегорииЦен.ТекущийЭлемент() + " помечен на удаление - соответсвующая цена очищена","!") ;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		//... УМК Сандомирский В.Ю, (категоря цен)
		
		Если (КатегорииЦен.ПометкаУдаления()=1) ИЛИ (КатегорииЦен.НеРассчитыватьАвтомат = 1) Тогда			
		    Продолжить;
		КонецЕсли;
		Если ЦеныТовара.НайтиПоРеквизиту("КатегорияЦены",КатегорииЦен.ТекущийЭлемент(),0)=0 Тогда
			ЦеныТовара.Новый();
		Иначе
			Если ЦеныТовара.ПометкаУдаления()=1 Тогда
				Если КатегорииЦен.ПометкаУдаления()=1  Тогда	
					глКомментарий("Цена "+ЦеныТовара.КатегорияЦены+ " помечена на удаление и не будет заполнена.",2);
					Продолжить;
				Иначе //--- Сандомирский В.Ю. (убрали пометку удаления с категории , значит зена снова активна)
					ЦеныТовара.СнятьПометкуУдаления();
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		
		ЦеныТовара.Наименование = КатегорииЦен.Наименование;
		ЦеныТовара.Валюта = Гривня;
		ЦеныТовара.Единица = ТекТМЦ.ЕдиницаПоУмолчанию;
		ЦеныТовара.КатегорияЦены = КатегорииЦен.ТекущийЭлемент();
		//ЦеныТовара.Наценка = ТорговаяНаценка + КатегорииЦен.ТорговаяНаценка;
			
		СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ"); //--- УМК Сандомирский В.Ю, Заполнение схем по шаблону (15.04.14)
		Если СпрТМЦ.НайтиЭлемент(ТекТМЦ) = 1 Тогда
			
			Если ПустоеЗначение(СпрТМЦ.ШаблонСхемЦенообразования) = 0 Тогда 
				НашлиВШаблоне = 0;
				ВыбШаблонСхемЦенообразования.ВыбратьСтроки();
				Пока ВыбШаблонСхемЦенообразования.ПолучитьСтроку() = 1 Цикл
					Если ВыбШаблонСхемЦенообразования.КатегорияЦен =  ЦеныТовара.КатегорияЦены Тогда
						ЦеныТовара.СхемаЦенообразования = ВыбШаблонСхемЦенообразования.СхемаЦенообразования;
						НашлиВШаблоне = 1;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли; //... УМК Сандомирский В.Ю, Заполнение схем по шаблону (15.04.14)
		
		Если НашлиВШаблоне = 0 Тогда
			ЦеныТовара.СхемаЦенообразования = "";
		КонецЕсли;
		
		ЦеныТовара.Записать();
	КонецЦикла;
	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (21.05.14)
Процедура ЗаполнитьШаблон()
	
	Если ПустоеЗначение(ВыбДата) = 1 Тогда
		Сообщить("Не заполнена дата перерасчета цен !","!");
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбШаблонСхемЦенообразования) = 1 Тогда
		Сообщить("Не заполнена шаблон ценообразования !","!");
		Возврат;
	КонецЕсли;
		
	Запрос = СоздатьОбъект("Запрос");

	ТекстЗапроса = 
	"//{{ЗАПРОС(ДвижениеТМЦ)
	|Период с ВыбДата;
	|Товар = Справочник.ТМЦ.ТекущийЭлемент;";
	Если ПоГруппам = 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар без групп;";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар;";	
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
	|"//}}ЗАПРОС
	;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СпрТМЦ  = СоздатьОбъект("Справочник.ТМЦ");
	СпрЦены = СоздатьОбъект("Справочник.Цены");
	СпрЦены.ИспользоватьДату(ВыбДата);
	
	Пока Запрос.Группировка(1) = 1 Цикл
		
		Если  Запрос.Товар.ЭтоГруппа() = 1 Тогда
			
		Иначе
		
			СпрТМЦ.НайтиЭлемент(Запрос.Товар);									//--- УМК Санджомирский В.Ю. (23.06.2014)	исправления ;) 
			СпрТМЦ.ШаблонСхемЦенообразования = ВыбШаблонСхемЦенообразования;	//--- УМК Санджомирский В.Ю. (23.06.2014)	исправления ;) 
			СпрТМЦ.Записать();													//--- УМК Санджомирский В.Ю. (23.06.2014)	исправления ;) 
			ЗаполнитьЦены(Запрос.Товар.ТекущийЭлемент());	
			
		КонецЕсли;	
	
	КонецЦикла;
	
	Сообщить("Установка шаблона цен завершена");
	
КонецПроцедуры // ЗаполнитьШаблон

//======================================================================  //--- УМК Сандомирский В.Ю, (05.05.14) Вызывается из ПерерасчитатьЦеныСогласованых
Процедура ПересчитатьЦеныПоСхемамЦенообразования(ТекТМЦ,ТекБазЦена)
	
	СпрЦены = СоздатьОбъект("Справочник.Цены");
	СпрЦены.ИспользоватьДату(ВыбДата,1);	
	СпрЦены.ИспользоватьВладельца(ТекТМЦ);
	СпрЦены.ВыбратьЭлементы();
	
	Пока СпрЦены.ПолучитьЭлемент() = 1 Цикл			
		Если ПустоеЗначение(СпрЦены.СхемаЦенообразования) = 0 Тогда			
			//Если в ТМЦ в типе цен задана схема ценообразования ФИКСИРОВАННАЯ ЦЕНА, по приходной накладной не записывать цену в этот тип цен, даже если меняется закупочная
			Если СпрЦены.СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена = 2 Тогда
				Продолжить;
			КонецЕсли;
			УстанавливаемаяЦена = ?(СпрЦены.СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена = 3, СпрЦены.Владелец.Цена_Прод.Получить(ВыбДата), глАвтоПересчетЦены(СпрЦены,ТекБазЦена));			
			
			ЦенаНаДату 		 = СпрЦены.Цена;
			РасчетняЦена 	 = УстанавливаемаяЦена;
			Разница 		 = Окр(ЦенаНаДату,2) - Окр(РасчетняЦена,2);
			ПечКатегорияЦены = СпрЦены.КатегорияЦены;
			
			СпрЦены.Цена = УстанавливаемаяЦена;
			СпрЦены.Записать();
			
			Т.ВывестиСекцию("ТипЦен");	
			
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры // ПересчитатьЦеныПоСхемамЦенообразования()

//====================================================================== //--- УМК Сандомирский В.Ю, (05.05.14)
Процедура ПерерасчитатьЦеныСогласованых(ФлагЗаписи)
	
	СпрСвязаныеЭлементыЦенообразования = СоздатьОбъект("Справочник.СвязаныеЭлементыЦенообразования");
	КЦен = Константа.ЗакупЦена;
	
	Если ПустоеЗначение(ВыбДата) = 1 Тогда
		Сообщить("Не заполнена дата перерасчета цен !","!");
		Возврат;
	КонецЕсли;
	
	ПечФорма = "ТаблицаПредварительно";
	
	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить = 0) Тогда
		Т = СоздатьОбъект("Таблица");
	Иначе
		Т.Очистить();
	КонецЕсли;
	Т.ИсходнаяТаблица(ПечФорма);	
	
	Запрос = СоздатьОбъект("Запрос");

	ТекстЗапроса = 
	"//{{ЗАПРОС(СправочникТМЦ)
	|Период с ВыбДата;
	|Товар = Справочник.ТМЦ.ТекущийЭлемент;";
	Если ПоГруппам = 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар без групп;";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар;";	
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
	|"//}}ЗАПРОС
	;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СпрТМЦ  = СоздатьОбъект("Справочник.ТМЦ");
	СпрЦены = СоздатьОбъект("Справочник.Цены");
	СпрЦены.ИспользоватьДату(ВыбДата);
	
	Т.ВывестиСекцию("Заголовок");
	
	Пока Запрос.Группировка(1) = 1 Цикл
		
		Если  Запрос.Товар.ЭтоГруппа() = 1 Тогда
		
			ПечГруппа = Запрос.Товар;
			Т.ВывестиСекцию("ГруппаТовар");			
		
		Иначе
		
			Если Запрос.Товар.АвтоРасчетСвязанныхЭлементов.Получить(ВыбДата) = 0 Тогда //--- Пропускаем ненужные
				Продолжить;
			КонецЕсли;
							
			Если ПустоеЗначение(Запрос.Товар.БазоваяКатегорияЦены.Получить(ВыбДата)) = 1 Тогда   //--- Пропускаем без базовой цены
				Если фБезБазЦены=1 Тогда
					Сообщить(" ТМЦ : " + Запрос.Товар + " - не заполнена базовая категория цен !","!");		
				КонецЕсли;	
				
				Продолжить;
				
			КонецЕсли;
						
			СпрЦены.ИспользоватьВладельца(Запрос.Товар);
			Если СпрЦены.НайтиПоРеквизиту("КатегорияЦены", Запрос.Товар.БазоваяКатегорияЦены.Получить(ВыбДата), 0) = 1 Тогда
				ТекБазЦена = СпрЦены.Цена; //--- Базовая цена
						
				ПечТовар = Запрос.Товар;
				Т.ВывестиСекцию("Товар");
				
				СпрСвязаныеЭлементыЦенообразования.ИспользоватьВладельца(Запрос.Товар);
				СпрСвязаныеЭлементыЦенообразования.ВыбратьЭлементы();
				Пока СпрСвязаныеЭлементыЦенообразования.ПолучитьЭлемент() = 1 Цикл
									
					СвязаныйТМЦ  = СпрСвязаныеЭлементыЦенообразования.СвязаныйТМЦ;
					СвязаныйКоэф = СпрСвязаныеЭлементыЦенообразования.Коэффициент;
					СпрЦены.ИспользоватьВладельца(СвязаныйТМЦ);
					
					БазоваяЦенаСвязанногоЭлемента = ТекБазЦена * СвязаныйКоэф;
					
					
					ПечТовар = СвязаныйТМЦ;
					Т.ВывестиСекцию("СвязаныйТовар");
					
					Если СпрЦены.НайтиПоРеквизиту("КатегорияЦены", КЦен, 0) = 0 Тогда
						СпрЦены.Новый();
						СпрЦены.Наименование 		= Строка(КЦен);
						СпрЦены.Владелец 			= СвязаныйТМЦ;
						СпрЦены.КатегорияЦены 		= КЦен;
						СпрЦены.Единица 			= глВернутьБазовуюЕдиницуТовара(СвязаныйТМЦ);	
						СпрЦены.Валюта 				= Гривня;
									
						ЦенаНаДату 		 = СпрЦены.Цена;
						РасчетняЦена 	 = БазоваяЦенаСвязанногоЭлемента;
						Разница 		 = Окр(ЦенаНаДату,2) - Окр(РасчетняЦена,2);
						ПечКатегорияЦены = СпрЦены.КатегорияЦены;
						
						СпрЦены.Цена 				= БазоваяЦенаСвязанногоЭлемента;
									
						Т.ВывестиСекцию("ТипЦен");	
							
						Если (ФлагЗаписи = 1) И (Разница <> 0) Тогда		
							СпрЦены.Записать();
							Сообщить(" Создана закупочная цена связанного элемента " + СвязаныйТМЦ.Код + " " + СокрЛП(СвязаныйТМЦ.Наименование) 
									+ Формат(БазоваяЦенаСвязанногоЭлемента,"Ч15.5") );	
						КонецЕсли;					
												
						ПересчитатьЦеныПоСхемамЦенообразования(СвязаныйТМЦ,БазоваяЦенаСвязанногоЭлемента);
												
					Иначе
									
						ТекЦена = СпрЦены.Цена;
						Если Окр(БазоваяЦенаСвязанногоЭлемента, 2) <> ТекЦена Тогда	
							
							ЦенаНаДату 		 = СпрЦены.Цена;
							РасчетняЦена 	 = БазоваяЦенаСвязанногоЭлемента;
							Разница 		 = Окр(ЦенаНаДату,2) - Окр(РасчетняЦена,2);
							ПечКатегорияЦены = СпрЦены.КатегорияЦены;
							
							СпрЦены.Цена 	 = БазоваяЦенаСвязанногоЭлемента;
						
							Т.ВывестиСекцию("ТипЦен");	
							
							Если (ФлагЗаписи = 1) И (Разница <> 0) Тогда		
								СпрЦены.Записать();
								Сообщить(" Изменена закупочная цена связанного элемента " + СвязаныйТМЦ.Код + " " + СокрЛП(СвязаныйТМЦ.Наименование) 
									+ " С "+ Формат(ТекЦена,"Ч15.5") + " на "  + Формат(БазоваяЦенаСвязанногоЭлемента,"Ч15.5") );
							КонецЕсли;	
												
							ПересчитатьЦеныПоСхемамЦенообразования(СвязаныйТМЦ,БазоваяЦенаСвязанногоЭлемента);
							
						КонецЕсли;
					КонецЕсли;	
									
				КонецЦикла;
								
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Если ФлагЗаписи = 0 Тогда
		Т.ОбластьПечати(2);
		Т.ПараметрыСтраницы(2,,,,,,,,,1);
		Т.ТолькоПросмотр(1);
		Т.Опции(0,0,3);
		Т.Показать("Сформировать", "");
	Иначе
		Сообщить("Обработка перерасчета цен по схемам завершена.","!");
	КонецЕсли;
	
	
КонецПроцедуры // ПерерасчитатьЦеныСогласованых



//======================================================================

//======================================================================

ВыбБазоваяКатегорияЦен 	= ВосстановитьЗначение("ВыбБазоваяКатегорияЦен");
фТолькоСхемы 			= ВосстановитьЗначение("фТолькоСхемы");
фКроме 					= ВосстановитьЗначение("фКроме");
ПоГруппам			 	= ВосстановитьЗначение("ПоГруппам");

ВыбДата = ТекущаяДата(); 
СтрокаДоступ = "777";

МФКатЦены.УдалитьВсе(); 
ВсеЦены = СоздатьОбъект("Справочник.КатегорииЦен");
ВсеЦены.ВыбратьЭлементы();
Пока ВсеЦены.ПолучитьЭлемент()>0 Цикл
	МФКатЦены.ДобавитьЗначение(ВсеЦены.ТекущийЭлемент());      
КонецЦикла;	