Перем СписокДействий;
Перем НачальнаяДатаДокумента;

// ===============================
Функция УстДоступность()
	Форма.Заголовок(глЗаголовок(Контекст,"Ввод остатков ТМЦ"));
	
	тИтогоПрод = "Итого";
	
	Если ВидОстатков = 1 Тогда
		Форма.Контрагент.Доступность(1);
		НазначитьВид(МестоХранения,"МестаХранения");
		Форма.МестоХранения.НеИзменятьВид(1);		
		
		Если ПустоеЗначение(МестоХранения) = 0 Тогда
			Если МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
//				Форма.Счет.Видимость(0);
				Форма.ЦенаПрод.Видимость(1);
				Форма.ЦенаПрод.Доступность(1);
				Форма.СуммаПрод.Видимость(1);
				Форма.СуммаПрод.Доступность(1);
				Форма.ЦенаПрод.Заголовок("Цена розн.");
				Форма.СуммаПрод.Заголовок("Сумма розн.");
				Форма.тИтогоПрод.Видимость(1);				
				тИтогоПрод = "Итого розничная сумма";		
			Иначе
//				Форма.Счет.Видимость(1);
				Форма.ЦенаПрод.Видимость(0);
				Форма.ЦенаПрод.Доступность(0);
				Форма.СуммаПрод.Видимость(0);
				Форма.СуммаПрод.Доступность(0);
				
				Форма.тИтогоПрод.Видимость(0);
			КонецЕсли;	
		Иначе
//			Форма.Счет.Видимость(0);
			Форма.ЦенаПрод.Видимость(0);
			Форма.ЦенаПрод.Доступность(0);
			Форма.СуммаПрод.Видимость(0);
			Форма.СуммаПрод.Доступность(0);
			
			Форма.тИтогоПрод.Видимость(0);
		КонецЕсли;	
		
		Форма.ВидТары.Доступность(0);
		Форма.тВидТары.Доступность(0);
		
	ИначеЕсли ВидОстатков = 2 Тогда
		Форма.Контрагент.Доступность(1);
		НазначитьВид(МестоХранения,"МестаХранения");
		Форма.МестоХранения.НеИзменятьВид(1);		
//		Форма.Счет.Видимость(0);
		Форма.ЦенаПрод.Видимость(1);
		Форма.СуммаПрод.Видимость(1);
		Форма.ЦенаПрод.Заголовок("Цена баланс.");
		Форма.СуммаПрод.Заголовок("Сумма баланс.");
		Форма.тИтогоПрод.Видимость(1);				
		тИтогоПрод = "Итого балансовая сумма";		
		
		Форма.ВидТары.Доступность(0);
		Форма.тВидТары.Доступность(0);
		
		Если ((ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)
		ИЛИ (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат)) Тогда
			Форма.ЦенаПрод.Доступность(1);
			Форма.СуммаПрод.Доступность(1);
		Иначе
			Форма.ЦенаПрод.Доступность(0);
			Форма.СуммаПрод.Доступность(0);
		КонецЕсли;
	ИначеЕсли ВидОстатков = 3 Тогда
		Форма.Контрагент.Доступность(1);
		НазначитьВид(МестоХранения,"МестаХранения");
		Форма.МестоХранения.НеИзменятьВид(1);		
//		Форма.Счет.Видимость(0);
		Форма.ЦенаПрод.Видимость(0);
		Форма.ЦенаПрод.Доступность(0);
		Форма.СуммаПрод.Видимость(0);
		Форма.СуммаПрод.Доступность(0);
		
		Форма.тИтогоПрод.Видимость(0);				
		
		Форма.ВидТары.Доступность(1);
		Форма.тВидТары.Доступность(1);
		
	ИначеЕсли ВидОстатков = 4 Тогда
		Форма.Контрагент.Доступность(1);
		НазначитьВид(МестоХранения,"Контрагенты");
		Форма.МестоХранения.НеИзменятьВид(1);		
//		Форма.Счет.Видимость(0);
		Форма.ЦенаПрод.Видимость(1);
		Форма.ЦенаПрод.Доступность(1);
		Форма.СуммаПрод.Видимость(1);
		Форма.СуммаПрод.Доступность(1);
		Форма.ЦенаПрод.Заголовок("Цена залоговая");
		Форма.СуммаПрод.Заголовок("Сумма залоговая");
		
		Форма.ВидТары.Доступность(1);
		Форма.тВидТары.Доступность(1);
		
		Форма.тИтогоПрод.Видимость(1);						
		тИтогоПрод = "Итого залоговая сумма";		
	КонецЕсли;
	
	Форма.тИтогоПрод.Заголовок(Строка(тИтогоПрод + Формат(Итог("СуммаПрод"),"Ч12.2")));
	Форма.ДопКво.Доступность(ТМЦ.УчетДопКво);
	
	Возврат "";
КонецФункции
               
// ===============================
Процедура ИзмЦенаПрод()
	СуммаПрод = ЦенаПрод*Кво*Коэффициент;
КонецПроцедуры

// ===============================
Процедура ИзмКво()
	глВыч_Суммы_Накл(Контекст);
	ИзмЦенаПрод();
КонецПроцедуры

// ===============================
Процедура ИзмЕд()
	глИзмЕдин(Контекст);
	ИзмКво();
КонецПроцедуры

// ===============================
Процедура УстЦенаПрод()  
	Если ПустоеЗначение(МестоХранения) = 0 Тогда
		ЦенаПрод = 0;
		Если (ВидОстатков = 1) И (МестоХранения.Вид() = "МестаХранения") Тогда 
			Если МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
				Если ПустоеЗначение(ЦенаПрод) = 1 Тогда
					ЦенаПрод = глВернутьЦену(ТМЦ, Константа.РозничнаяКатегорияЦен, ДатаДок);
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	ИзмЦенаПрод();	
КонецПроцедуры

// ===============================
Процедура ИзмТМЦ()
	глПриИзмененииТовара(Контекст);
	УстЦенаПрод();
	Счет = ТМЦ.Счет;
КонецПроцедуры

// ===============================
Процедура ПроверитьМестоХранения()
	Если ((ВидОстатков=2) ИЛИ (ВидОстатков=3))
	И (МестоХранения.Вид() = "МестаХранения") Тогда 
		Если МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
			глКомментарий("Нельзя использовать розничный склад, если вид остатков "
			+?(ВидОстатков=2,"""Давльческие ТМЦ""","""Принятая тара""")+".",1); 			
			МестоХранения = 0;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ИзмВидТары()
	Если (ВидОстатков > 2)
	И (ВидТары = Перечисление.ВидыТары.Покупная) Тогда
		глКомментарий("Нельзя выбирать вид тары"+ВидТары+".",1); 
		ВидТары = 0;
		Возврат;
	КонецЕсли;
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("В документе изменен вид тары! Пересчитать суммы ?","Да+Нет") = "Да" Тогда
			текОсновнаяЦена = Константа.ОсновнаяЦена;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл    
				Если ПустоеЗначение(ТМЦ) = 1 Тогда
					Продолжить;
				ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					// пересчитываем сумму по таре
					Если текОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
						глВыч_суммы_накл(Контекст,-1);
					Иначе
						глВыч_суммы_накл(Контекст,1);
					КонецЕсли;
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ЗаполнитьЦенаПрод()
	ВыбратьСтроки();	
	Пока ПолучитьСтроку() = 1 Цикл
		ЦенаПрод = 0;
		СуммаПрод = 0;
		Если ПустоеЗначение(МестоХранения) = 0 Тогда
			Если (ВидОстатков = 1) И (МестоХранения.Вид() = "МестаХранения") Тогда 
				Если МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
					УстЦенаПрод();
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

// ===============================
Процедура ИзмМестоХранения()
	ПроверитьМестоХранения();	
	ЗаполнитьЦенаПрод();
КонецПроцедуры

// ===============================
Процедура ИзмВидОстатков()
	ПроверитьМестоХранения();	
	ЗаполнитьЦенаПрод();
	
	Если ВидОстатков = 1 Тогда
		// установим нужный вид тары
		Если ВидТары <> Перечисление.ВидыТары.Покупная Тогда
		    ВидТары = Перечисление.ВидыТары.Покупная;
			ИзмВидТары();
		КонецЕсли;
		Если ((ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция)
		И (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат)) Тогда
			ЗаполнитьЦенаПрод();
		КонецЕсли;
	ИначеЕсли ВидОстатков = 3 Тогда
		ЗаполнитьЦенаПрод();
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура Подбор()
	глПодбор(Контекст,"ТМЦ","ДляПодбора")
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)
	глПриОбработкеПодбора(Выб,Контекст);
	ЗаполнитьЦенаПрод();
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
	КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");	
	ВидТары = Перечисление.ВидыТары.Покупная;	
КонецПроцедуры
                                         
// ===============================
Процедура ПриОткрытии()
	НачальнаяДатаДокумента = ДатаДок;
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
               
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПодбор.Доступность(0);
//		Форма.кДействия.Доступность(0);          
		СписокДействий = глПолучитьСписокДействий("
			|ДвиженияДокумента,
			|ОткрытьВЖурнале");	    

		
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;                     
	
	Если ПустоеЗначение(ВидОстатков) = 1 Тогда
		ВидОстатков = 1;
	КонецЕсли;

	Форма.ВидТары.ВыполнятьФормулуТолькоПриИзменении(1);	
	
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
	УстЦенаПрод();	
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	Автор = глПользователь;
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ПриНачалеВыбораЗначения(Рекв, ФлагСтандОбр)
КонецПроцедуры 


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции


// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");
