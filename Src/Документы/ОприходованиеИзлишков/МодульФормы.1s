Перем НачальнаяДатаДокумента;
Перем РегО;
Перем СпВидыУпаковкиГлобальный; //--- УМК Сандомирский В.Ю. (31.08.14)

// ======================================
Функция УстДоступность()
	Форма.Заголовок(глЗаголовок(Контекст,"Оприходование излишков ТМЦ"));
	Форма.ргСубконтоДоходов.Доступность(1);
	Форма.СубконтоДоходов1.Доступность(1);
	Форма.СубконтоДоходов2.Доступность(1);
	Форма.СубконтоДоходов3.Доступность(1);
	Форма.тСчетДоходов.Доступность(1);
	Форма.СчетДоходов.Доступность(1);
	Возврат "";
КонецФункции

// ======================================
Процедура ИзмМестоХранения()
	Если МестоХранения.Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	Если (МестоХранения.Тип = Перечисление.ТипыМестХранения.Склад) и (МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
	    Предупреждение("Нельзя указывать РОЗНИЧНЫЙ склад (магазин)!");
		МестоХранения = глВосстановитьЗначение(Контекст,"МестоХранения");
	КонецЕсли; 
	Если МестоХранения <> глВосстановитьЗначение(Контекст,"МестоХранения") Тогда
		глСохранитьЗначение(Контекст,"МестоХранения",МестоХранения);
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ИзмСчетДоходов()
	Если СчетДоходов.Валютный = 1 Тогда
	    Предупреждение("Счет, с которого оприходуются ТМЦ, не может быть валютным!");
		СчетДоходов = 0;
	КонецЕсли;
	Если СчетДоходов.Количественный = 1 Тогда
	    Предупреждение("Счет, с которого оприходуются ТМЦ, не может быть количественным!");
		СчетДоходов = 0;
	КонецЕсли;
	Если (СчетДоходов.ВидСубконто(1) = ВидыСубконто.Контрагенты) 
	и (СчетДоходов.ВидСубконто(2) = ВидыСубконто.Договора) Тогда
	    Предупреждение("Счет с которого оприходуется ТМЦ, не может быть счетом взаиморасчетов!");
		СчетДоходов = 0;
	КонецЕсли;
	Для Инд = 1 По 3 Цикл
		НазначитьТип("СубконтоДоходов"+Инд,СчетДоходов.ВидСубконто(Инд));
	КонецЦикла;
КонецПроцедуры

// ======================================
Процедура ИзмЦенаБезНДС()
	СуммаБезНДС = Окр(ЦенаБезНДС*Кво,глТочностьСуммВДок-1);
КонецПроцедуры

// ======================================
Процедура ИзмПартия()
	Кво = ?(Кво = 0,1,Кво);
	ЦенаБезНДС = глВернутьЦену(ТМЦ,КатегорияЦен,ДатаДок);
	ИзмЦенаБезНДС();
КонецПроцедуры 

// ===============================
Процедура ИзмТМЦ()
	Если глПроверкаТовараВДокументе(Контекст,ТМЦ) = Нет Тогда
		ТМЦ = 0;
	Иначе      
		глПриИзмененииТовара(Контекст);
		Если ПустоеЗначение(Ед) = 1 Тогда
			глУстановкаБазЕд(Контекст,ТМЦ,ТМЦ.ЕдиницаПоУмолчанию.Единица);
		ИначеЕсли ТМЦ <> Ед.Владелец Тогда
			глУстановкаБазЕд(Контекст,ТМЦ,ТМЦ.ЕдиницаПоУмолчанию.Единица);
		КонецЕсли;
		ИзмЦенаБезНДС();
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура УстРеквизитыШапкиБух()
	Если Сторно = 1 Тогда
		СчетДоходов = глВосстановитьЗначение(Контекст,"СчетДоходовДляСторно",СчетПоКоду("746"));
	Иначе
		СчетДоходов = глВосстановитьЗначение(Контекст,"СчетДоходов",СчетПоКоду("719"));
	КонецЕсли;
	
	ИзмСчетДоходов();
	Если Сторно = 1 Тогда
		СубконтоДоходов3 = глВосстановитьЗначение(Контекст, "СубконтоДоходов3ДляСторно");
	Иначе
		СубконтоДоходов3 = глВосстановитьЗначение(Контекст, "СубконтоДоходов3");
	КонецЕсли;
	СубконтоДоходов1 = глВосстановитьЗначение(Контекст, "СубконтоДоходов1");
	СубконтоДоходов2 = глВосстановитьЗначение(Контекст, "СубконтоДоходов2");
	СубконтоВалДох = глВосстановитьЗначение(Контекст,"СубконтоВалДох",Константа.БазВаловыйДоход);	
КонецПроцедуры 

// ======================================
Процедура ВводНового(ПризнакКопирования)
	глЗаполнитьШапку(Контекст);
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	УстРеквизитыШапкиБух();      
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
КонецПроцедуры

Процедура ЗаполнитьТЧ(Док, ТЗ = "", Рекв = "ЦенаБезНДС")
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку() > 0 Цикл
		// Документ основание - Инвентаризация
		// отбираем только те ТМЦ, по которым был выявлен излишек
		//Если (Док.Разница > 0) И (Док.ДляП <> Да) И (Док.РаспределятьВСписания <> Да) И ((ПустоеЗначение(Док.ВидУпаковки) = 1) ИЛИ (Док.ВидУпаковки = НетУп)) Тогда
		Если (Док.Разница > 0) И (Док.ДляП <> Да) И (Док.РаспределятьВСписания <> Да) Тогда
			НоваяСтрока();
			ТМЦ = Док.ТМЦ;
			Ед = Док.Ед;
			Коэффициент = Док.Коэффициент;
			Если Док.ДопКво = 1 Тогда
				ДопКво = Док.Разница;
			Иначе
				Кво = Док.Разница;
			КонецЕсли;
			ЦенаБезНДС = Док.ПолучитьАтрибут(Рекв);
			Если ТипЗначенияСтр(ТЗ) = "ТаблицаЗначений" Тогда
			    Стр = 0;
				Если ТЗ.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
				    ЦенаБезНДС = ТЗ.ПолучитьЗначение(Стр, "ЦенаБезНДС");
					ДопКво = ТЗ.ПолучитьЗначение(Стр, "ДопКво");
				КонецЕсли;
			КонецЕсли;
			ИзмЦенаБезНДС();
			ВидУпаковки = Док.ВидУпаковки;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

// ======================================
Процедура ВводНаОсновании(Док)
	глЗаполнитьШапкуНаОсн(Контекст,Док);
	Если Док.Вид() = "Инвентаризация" Тогда
		Дк = СоздатьОбъект("Документ");
		Дк.ВыбратьПодчиненныеДокументы(,,Док);
		Пока Дк.ПолучитьДокумент() = 1 Цикл
			Если (Дк.Вид() = "ОприходованиеИзлишков") И (Дк.ПометкаУдаления() = 0) Тогда
				Сообщить("Для данной инвентаризации уже есть оприходование излишков " + Строка(Дк.ТекущийДокумент()));
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЦикла;
		Если Док.ТипИнвентаризации <> 2 Тогда
		    Предупреждение("Ввод документов "+ПредставлениеВида()+" предусмотрен только на основании Инвентаризации по складу !");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		Если (Док.МестоХранения.Тип = Перечисление.ТипыМестХранения.Склад) и (Док.МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
			Рез = Вопрос("Нельзя оприходовать ТМЦ на РОЗНИЧНЫЙ склад (магазин)!"+
						 "Подставить склад по умолчанию?","Да+Нет");
			Если Рез ="Да" Тогда
				МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
			Иначе
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		Иначе
			МестоХранения = Док.МестоХранения;
		КонецЕсли;
		Рекв = "ЦенаБезНДС";
		Если Док.Фирма <> Константа.БазФирма Тогда
			Если Вопрос("Заполнить цену продавца?", "Да+Нет") = "Да" Тогда
				Рекв = "ЦенаПродавца";
			КонецЕсли;
		КонецЕсли;
		ЗаполнитьТЧ(Док, , Рекв);
        ПриходПоБалансовойСтоимости = 1;		
	ИначеЕсли Док.Вид() = "ВедомостьПриемкиПромпереработки" Тогда
		ДокОснование = Док;
		БезСС = 1;
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		Док.ВыгрузитьТабличнуюЧасть(ТЗ);
		Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			МестоХранения = Док.Перемещение.НовоеМестоХранения;
			Прервать;
		КонецЦикла;
		ТЗ.Свернуть("ТМЦ", "Кво,Принято");
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			Если ТЗ.Кво < ТЗ.Принято Тогда
				НоваяСтрока();
				ТМЦ = ТЗ.ТМЦ;
				ИзмТМЦ();
				Кво = ТЗ.Принято - ТЗ.Кво;
			КонецЕсли;
		КонецЦикла;		
	Иначе		
		глСкопироватьТовСостав(Контекст, Док);
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Кво = 0;
			ДопКво = 0;
			ЦенаБезНДС = 0;
			ИзмЦенаБезНДС();
		КонецЦикла;
		ДатаДок = Док.ДатаДок;
	КонецЕсли;
	УстРеквизитыШапкиБух();
	ДокОснование = Док;
КонецПроцедуры 

Процедура Заполнить()
	Если ПустоеЗначение(ДокОснование) = 0 Тогда
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(ТЗ);		
		Если КоличествоСтрок() > 0 Тогда
			Если Вопрос("Заполнить заново?", "Да+Нет") = "Нет" Тогда
				Возврат;
			КонецЕсли;
			УдалитьСтроки();
		КонецЕсли;		
		ЗаполнитьТЧ(ДокОснование, ТЗ);
	КонецЕсли;
КонецПроцедуры

Процедура ИзмфОстаткиНаДокумент()
	Если фОстаткиНаДокумент = 1 Тогда
		РегО = СоздатьОбъект("Регистр.Остатки");
		Если ТекущийДокумент().Выбран() = 1 Тогда
			Если СравнитьТА() = -1 Тогда
				РегО.ВременныйРасчет(1);
			    РассчитатьРегистрыНа(ТекущийДокумент());
			КонецЕсли;		    
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// ======================================
Процедура ПриОткрытии()
	Если Форма.Параметр = "Провести" Тогда
	    Провести(0);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	ПриЗаписиПерепроводить(1); 
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кПровести.Доступность(0);
//		Форма.кДействия.Доступность(0);
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;     
	
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;

	глПроверкаДатыДок(Контекст,"Открытие");  
	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
		КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
	КонецЕсли;
	фОстаткиНаДокумент = ВосстановитьЗначение("ОстаткиНаДокумент");
	ИзмфОстаткиНаДокумент();

	глСохранитьЗначение(Контекст,"МестоХранения",МестоХранения);
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если (ТМЦ = Форма.Параметр) или (ТМЦ.ТМЦДляПрихода.Получить(ДатаДок) = Форма.Параметр) Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	СпВидыУпаковкиГлобальный = глПолучитьСписокУпаковкиГлобальный();
КонецПроцедуры

// ======================================
Процедура ПриЗаписи()
	Автор = глПользователь;
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Попытка
		АвтоВремяОтключить();
		УстановитьВремя(0,0,1);
	Исключение КонецПопытки;
	
	Если Сторно = 1 Тогда
		глСохранитьЗначение(Контекст,"СчетДоходовДляСторно", СчетДоходов);
		глСохранитьЗначение(Контекст,"СубконтоДоходов3ДляСторно", СубконтоДоходов3);
	Иначе
		глСохранитьЗначение(Контекст,"СчетДоходов", СчетДоходов);
		глСохранитьЗначение(Контекст,"СубконтоДоходов3", СубконтоДоходов3);
	КонецЕсли;
	
	глСохранитьЗначение(Контекст,"СубконтоДоходов1", СубконтоДоходов1);
	глСохранитьЗначение(Контекст,"СубконтоДоходов2", СубконтоДоходов2);	
	глСохранитьЗначение(Контекст,"СубконтоВалДох", СубконтоВалДох);
	
	
	Если ДокОснование.Вид() = "Инвентаризация" Тогда //--- УМК Сандомирский В.Ю. (06.04.15) контроль заполнения цен если на основе инвентаризации
		
		ТекстОшибки = "";
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ЦенаБезНДС) = 1 Тогда
				ТекстОшибки = ТекстОшибки + "В строке " + НомерСтроки + " " + ТМЦ + " не заполнена цена !" + глПравильныйСимволПереноса;
			КонецЕсли;			
		КонецЦикла;
		
		Если ТекстОшибки <> "" Тогда		
			Предупреждение(ТекстОшибки, 20);			
		КонецЕсли;
			
	КонецЕсли; //... УМК Сандомирский В.Ю. (06.04.15) контроль заполнения цен если на основе инвентаризации
	
	
	
	
	
КонецПроцедуры

// ======================================
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");
	Таб.ИсходнаяТаблица("Оприходование"+СуффиксТаблицы);

	глУстПропись(Гривня);
    
	СчетДоходовПеч = "" + СчетДоходов.Код + " """+ СчетДоходов.Наименование + """";
	Если Константа.ФормыНаУкраинском = Да Тогда
		СчетДоходовПеч = "" + СчетДоходов.Код + " """+ СчетДоходов.ПолнНаименование + """";
	КонецЕсли;
	
	СубконтоПеч = "";
	Для Инд = 1 По СчетДоходов.КоличествоСубконто() Цикл
		Попытка
			СубконтоПеч = СубконтоПеч + ПолучитьАтрибут("СубконтоДоходов"+Инд).ПолнНаименование + ";";
		Исключение
			СубконтоПеч = СубконтоПеч + ПолучитьАтрибут("СубконтоДоходов"+Инд) + ";";
		КонецПопытки;
	КонецЦикла;
	
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном = 0;
	Пока ПолучитьСтроку() = 1 Цикл
		Ном = Ном + 1;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Оприходование","");
	глУстПропись(Гривня); 
КонецПроцедуры 

// ===============================
Процедура Подбор()
	Перем ВыбЗначение;
	
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
	    КонецЕсли;
	КонецЕсли;
КонецПроцедуры
                                  
// ===============================
Процедура ОбработкаПодбора(Выб)
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "Партия" Тогда
		глМестоХранения = МестоХранения;
	ИначеЕсли (Рекв = "СчетНДС") и (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
		СписокКорректныхПроводок.Установить("Счет", СчетПоКоду("64"));
		СписокКорректныхПроводок.Установить("Корреспонденция", 0);
		глЗначениеОтбора = СписокКорректныхПроводок;
	ИначеЕсли (Рекв = "ВидУпаковки") Тогда //--- УМК Сандомирский В.Ю, (31.08.14) 
		глВыбратьВидУпаковки(Контекст, ФлагСтандОбр, СпВидыУпаковкиГлобальный, 1);		
	КонецЕсли;		
КонецПроцедуры

Процедура ОткрытьИнв()
	Если ДокОснование.Выбран() = 1 Тогда
		ОткрытьФорму(ДокОснование);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ИзПоследнегоВозврата(ТолькоНулевые)
	РегО = СоздатьОбъект("Регистр.Обороты");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ((ТолькоНулевые = 1) И (ЦенаБезНДС = 0)) ИЛИ (ТолькоНулевые = 0) Тогда
			РегО.УстановитьЗначениеФильтра("ТМЦ", ТМЦ);
			РегО.ОбратныйПорядок(1);
			РегО.ВыбратьДвижения();
			Пока РегО.ПолучитьДвижение() = 1 Цикл
				Если (РегО.РасходКво < 0) Тогда				
					Если (РегО.ТекущийДокумент().Вид() = "ВозвратнаяНакладная") Тогда
						Если РегО.ТекущийДокумент().МестоХранения = МестоХранения Тогда
							ЦенаБезНДС = РегО.РасходСум / РегО.РасходКво;
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры // ИзПоследнегоВозврата

Процедура ЗаполнитьЦены()
	Зн = 1;

	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Закупочные на дату док.");
	
	Если ДокОснование.Выбран() = 1 Тогда		
		СпМеню.ДобавитьЗначение(2, "Ост. вх. в инвентаризации");
		СпМеню.ДобавитьЗначение(4, "Из прихода в инвентаризации");
		СпМеню.ДобавитьЗначение(3, "Из инвентаризации");
	КонецЕсли;
	
	СпМеню.ДобавитьЗначение(5, "Из последнего возврата");
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ТолькоНулевые = 0;
	Если Вопрос("Только нулевые?", "Да+Нет") = "Да" Тогда
		ТолькоНулевые = 1;
	КонецЕсли;
	
	Если Зн = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ((ТолькоНулевые = 1) И (ЦенаБезНДС = 0)) ИЛИ (ТолькоНулевые = 0) Тогда
				
				ЦенаБезНДС = глВернутьЦену(ТМЦ, Константа.ЗакупЦена, ДатаДок, Гривня);
				
				//ЦенаБезНДС = глВернутьЦену(ТМЦ, Константа.ЗакупЦена, ДатаДок, Гривня) / (1+ТМЦ.СтавкаНДС.Ставка.Получить(ДатаДок));
				
				ИзмЦенаБезНДС();			    
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли (Зн = 5) ИЛИ (Зн = 6) Тогда
		ИзПоследнегоВозврата(ТолькоНулевые);
	Иначе
		Если Зн = 2 Тогда
		    КолСумма = "НачОстСумма";
			КолКво = "НачОст";
		ИначеЕсли Зн = 3 Тогда
		    КолСумма = "СуммаРазницы";
			КолКво = "Разница";
		ИначеЕсли Зн = 4 Тогда
		    КолСумма = "ПриходСумма";
			КолКво = "Приход";
		КонецЕсли;
		ТЗИнв = СоздатьОбъект("ТаблицаЗначений");
		ДокОснование.ВыгрузитьТабличнуюЧасть(ТЗИнв);
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ((ТолькоНулевые = 1) И (ЦенаБезНДС = 0)) ИЛИ (ТолькоНулевые = 0) Тогда
				Стр = 0;
				Если ТЗИнв.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
				    С = ТЗИнв.ПолучитьЗначение(Стр, КолСумма);
					К = ТЗИнв.ПолучитьЗначение(Стр, КолКво);
					ЦенаБезНДС = С / ?(К = 0, 1, К);
					ИзмЦенаБезНДС();				
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ОбнулитьКво()
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Обнулить количество в строках?", "Да+Нет") = "Да" Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Кво = 0;
				ИзмЦенаБезНДС();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ОбнулитьКво()

//======================================================================
Процедура ЗаполнитьПоКатегории()
	Если (КоличествоСтрок() = 0) ИЛИ (КатегорияЦен.Выбран() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	Если Вопрос("Заполнить цену по выбранной категории", "Да+Нет") = "Да" Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			глПриИзмененииТовара(Контекст, 1, 0);
			ИзмЦенаБезНДС();
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры // ЗаполнитьПоКатегории()
// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");
