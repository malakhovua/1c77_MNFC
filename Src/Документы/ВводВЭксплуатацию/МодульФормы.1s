Перем ВводМБП, ВводНА;
Перем НачальнаяДатаДокумента, Ит;

// ===============================
Функция УстДоступность()
	Форма.Заголовок(глЗаголовок(Контекст,"Ввод в эксплуатацию"));
	Форма.кПечать.Доступность(Проведен()*(1-Модифицированность()));
	Форма.кПодбор.Доступность((2-ВидВвода)*(1-Форма.ТолькоПросмотр()));
	
	Форма.Кво.Доступность(1);
	Если ВидВвода = ВводМБП Тогда
		// ввод МБП
		фМБП = 1;
		Форма.ТМЦ.Заголовок("ТМЦ");
		Форма.ИспользоватьСлой("Основной,МБП",2);
		НазначитьВид(ТМЦ,"ТМЦ");
	Иначе
		// ввод необоротных активов
		фМБП = 0;
		Форма.ТМЦ.Заголовок("Инвестиция");
		Форма.ИспользоватьСлой("Основной,НеоборотныеАктивы",2);
		НазначитьВид(ТМЦ,"Инвестиции");
		Если ВидНеоборотныхАктивов = НМА Тогда
			Форма.кПечать.Доступность(0);
		КонецЕсли;
		//Если (ВидНеоборотныхАктивов = ОсновныеСредства) или (ВидНеоборотныхАктивов = НМА) Тогда
		//	// количество должно быть 1
		//	Если Кво <> 1 Тогда
		//		Кво = 1;
		//	КонецЕсли;
		//	Форма.Кво.Доступность(0);
		//КонецЕсли;
		Попытка
			Форма.ВалСумма.Доступность(ТМЦ.Счет.Валютный);
			Форма.Валюта.Доступность(ТМЦ.Счет.Валютный);			
		Исключение
			Форма.ВалСумма.Доступность(0);
			Форма.Валюта.Доступность(0);
		КонецПопытки;
	КонецЕсли;	
	
	Форма.Фирма.Видимость(0);
	Форма.Ед.Видимость(фМБП);
	Форма.Коэффициент.Видимость(фМБП);
	Форма.НеоборотныйАктив.Видимость(1 - фМБП);
	Форма.Предпочтение.Видимость(фМБП);
	Форма.ЦенаБезНДС.Доступность(1 - фМБП);
	Форма.СуммаБезНДС.Доступность(1 - фМБП);
	
	Форма.ТМЦ.НеИзменятьВид(1);
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	Возврат "";
КонецФункции
               
// ===============================
Процедура ИзмВидВвода()
	Если КоличествоСтрок() > 0 Тогда
		Если ((ВидВвода = ВводМБП) и (ТМЦ.Вид() = "Инвестиции"))
		Или ((ВидВвода = ВводНА) и (ТМЦ.Вид() = "ТМЦ")) Тогда
			Рез = Вопрос("Для изменения нужно очистить табличную часть. Удалить строки?","Да+Нет");
			Если Рез = "Да" Тогда
			    УдалитьСтроки();
			Иначе
				ВидВвода = глВосстановитьЗначение(Контекст,"ВидВвода");
			КонецЕсли;
	    КонецЕсли;
	КонецЕсли;
	Форма.ВалСумма.Видимость(ВидВвода-1);
	Форма.Валюта.Видимость(ВидВвода-1);
	глСохранитьЗначение(Контекст,"ВидВвода",ВидВвода);
КонецПроцедуры
    
// ===============================
Процедура ИзмВидНеоборотныхАктивов()
	Если (ВидНеоборотныхАктивов <> глВосстановитьЗначение(Контекст,"ВидНеоборотныхАктивов"))
	И (КоличествоСтрок() > 0) Тогда
	    Предупреждение("Сначала удалите все строки!");
		ВидНеоборотныхАктивов = глВосстановитьЗначение(Контекст,"ВидНеоборотныхАктивов");
	КонецЕсли;
	глСохранитьЗначение(Контекст,"ВидНеоборотныхАктивов",ВидНеоборотныхАктивов);
КонецПроцедуры

// ======================================
Процедура ИзмМестоХранения()
КонецПроцедуры

// ===============================
Процедура ИзмКво()
	СуммаБезНДС = ЦенаБезНДС * Кво * Коэффициент;
КонецПроцедуры

// ======================================
Процедура ИзмЦенаБезНДС()
	ИзмКво();
КонецПроцедуры 

// ===============================
Процедура ИзмТМЦ(Знач Цена=0)
	Если ТМЦ.Выбран() = 1 Тогда
		Если ТМЦ.Вид() = "ТМЦ" Тогда
		    глУстановкаБазЕд(Контекст,ТМЦ);
		Иначе
			Ит.ИспользоватьСубконто(ВидыСубконто.Инвестиции, ТМЦ, 2);
			ПозДок = ?(ТекущийДокумент().Выбран() = 1, СформироватьПозициюДокумента(ТекущийДокумент(), -1), ДатаДок);
			Ит.ВыполнитьЗапрос(,ПозДок, ТМЦ.Счет);
			
			глУстановкаБазЕд(Контекст,,ТМЦ.БазЕдиница);
		    ЦенаБезНДС = Ит.СКД() / Кво;
			//Если Цена = 0 Тогда
			//	ЦенаБезНДС = ТМЦ.Цена_Прих;
			//Иначе
			//	ЦенаБезНДС = Цена;
			//КонецЕсли;
			ИзмЦенаБезНДС();
		КонецЕсли;                       
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмЕд()
	Коэффициент = Ед.Коэффициент;
	ИзмКво();
КонецПроцедуры

// ===============================
Процедура ИзмНеоборотныйАктив()
	Если НеоборотныйАктив.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	Если НеоборотныйАктив.ВидНеоборотногоАктива <> ВидНеоборотныхАктивов Тогда
		Предупреждение("Выбран необоротный актив не того вида!");
		НеоборотныйАктив = 0;
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ИзмСчетЗатрат()
	Если СчетЗатрат.Выбран() = 1 Тогда
		Если глПроверитьСчетЗатрат(СчетЗатрат,1)=0 Тогда
	        СчетЗатрат = 0;
	    КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура  ИзмВидЗатрат()
	Если ИспользоватьСчетаРасходов = Класс8 Тогда
		Если ПустоеЗначение(ВидЗатрат)=0 Тогда
		    СчетЗатратНДС = ВидЗатрат.Счет;
		Иначе
			СчетЗатратНДС = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // 

// ===============================
Процедура Подбор()
	глПодбор(Контекст,"ТМЦ","ДляПодбора")
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры

// ======================================
Процедура ИзмФирма()
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
КонецПроцедуры 

// ===============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		Возврат;
	КонецЕсли;
	ВидВвода = глВосстановитьЗначение(Контекст,"ВидВвода",1);
	глУстановитьФирму(Контекст);
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
	ВидНеоборотныхАктивов = ОсновныеСредства;
	СчетЗатрат = глВосстановитьЗначение(Контекст,"СчетЗатрат");
	ВидЗатрат = глВосстановитьЗначение(Контекст,"ВидЗатрат");
	Если СчетЗатрат.Выбран() = 0 Тогда
		Если ИспользоватьСчетаРасходов = Класс9 Тогда
			СчетЗатрат = СчетПоКоду("94.9");
		Иначе
			СчетЗатрат = СчетПоКоду("80.9");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	НачальнаяДатаДокумента = ДатаДок;
	Форма.НеоборотныйАктив.ВыполнятьФормулуТолькоПриИзменении(1);
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
//		Форма.кДействия.Доступность(0);
		Форма.кЗаполнить.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кФирма.Доступность(0);
		Форма.кОчиститьВидЗатрат.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли; 
	ВводМБП = 1;
	ВводНА = 2;
	глСохранитьЗначение(Контекст,"ВидВвода",ВидВвода);
	глСохранитьЗначение(Контекст,"ВидНеоборотныхАктивов",ВидНеоборотныхАктивов);
	ИзмМестоХранения();
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Автор = глПользователь;
	глСохранитьЗначение(Контекст,"ВидВвода",ВидВвода);
	глСохранитьЗначение(Контекст,"СчетЗатрат",СчетЗатрат);
	глСохранитьЗначение(Контекст,"ВидЗатрат",ВидЗатрат);
	глСохранитьЗначение(Контекст,"ВидНеоборотныхАктивов",ВидНеоборотныхАктивов);
КонецПроцедуры

// ======================================
Процедура ИзмНомерСтроки()
	Если ВидВвода = ВводНА Тогда
		Кво = 1;
	КонецЕсли;
КонецПроцедуры 

// ==========================
Процедура Печать()
Перем ПрефиксТаблицы, СуффиксТаблицы, ПрефиксФайла, СуффиксФайла;

	Таб = СоздатьОбъект("Таблица");
	Таб.ПараметрыСтраницы(1); // портрет

	Если ВидВвода = ВводМБП Тогда
		СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да,"_Укр","");
		ПрефиксТаблицы = "ВводМБП";
	Иначе
		СуффиксТаблицы = "_Укр";
		ПрефиксТаблицы = "ВводОС";
	КонецЕсли;
	Таб.ИсходнаяТаблица(ПрефиксТаблицы+СуффиксТаблицы);

	// получим данные для печати
	Расшифровка = СоздатьОбъект( "СписокЗначений" );
	Расшифровка.Установить("Дата",ДатаДок);
	Расшифровка.Установить("Фирма",Фирма);
	Расшифровка.Установить("ПолнНаименование","");
	Расшифровка.Установить("ГлавныйБухгалтер","");
	Расшифровка.Установить("Руководитель","");
	Расшифровка.Установить("ЕДРПОУ","");
	
	глПолучитьДанные(Расшифровка);

	ПолнНаименование = Расшифровка.Получить("ПолнНаименование");
	ГлавныйБухгалтер = Расшифровка.Получить("ГлавныйБухгалтер");
	Директор = Расшифровка.Получить("Руководитель");
	ЕДРПОУ = Расшифровка.Получить("ЕДРПОУ");
	
	ВыбратьСтроки();
	Если ВидВвода = ВводМБП Тогда
		глУстПропись(Гривня);
		
		Таб.ВывестиСекцию("Шапка");
		Пока ПолучитьСтроку() = 1 Цикл
			Таб.ВывестиСекцию("Строка");
		КонецЦикла;
		Таб.ВывестиСекцию("Дно");
	Иначе
		// жестко на украинском
		глУстПропись(Гривня, "у"); 
		
		Расшифровка = СоздатьОбъект("СписокЗначений");
		Расшифровка.Установить ("Дата",ДатаДок);
		Расшифровка.Установить("Фирма",Фирма);
		Расшифровка.Установить("АмортГр1","");
		Расшифровка.Установить("АмортГр2","");
		Расшифровка.Установить("АмортГр3","");
		Расшифровка.Установить("АмортГр4","");
		Расшифровка.Установить("ГлавныйБухгалтер","");
		глПолучитьДанные(Расшифровка);
		АмортГр1 = Расшифровка.Получить("АмортГр1");
		АмортГр2 = Расшифровка.Получить("АмортГр2");
		АмортГр3 = Расшифровка.Получить("АмортГр3");         
		АмортГр4 = Расшифровка.Получить("АмортГр4");         
		
		Пока ПолучитьСтроку() = 1 Цикл
			НеоборотныйАктив.ИспользоватьДату(ДатаДок,1);
			Если (НеоборотныйАктив.МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.ПервыйМесяц) Тогда 
				Ставка = 1;
			ИначеЕсли (НеоборотныйАктив.МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.ПервыйИПоследнийМесяц) Тогда
				Ставка = 0.5;
			ИначеЕсли (НеоборотныйАктив.МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.УменьшениеОстатка) или 
			(НеоборотныйАктив.МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.УскоренноеУменьшениеОстатка) Тогда
				Ставка = НеоборотныйАктив.НормаАмортизации;
			ИначеЕсли (НеоборотныйАктив.МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.Налоговый) Тогда
				Ставка = ?(НеоборотныйАктив.Группа = 1,АмортГр1,?(НеоборотныйАктив.Группа = 2,АмортГр2,?(НеоборотныйАктив.Группа = 3,АмортГр3,АмортГр4)));
			КонецЕсли;
			Норма = Строка(Ставка*100) + " %";
			Таб.ВывестиСекцию("ОС");
			Таб.НоваяСтраница();
		КонецЦикла;
	КонецЕсли;
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,0,0);
	Таб.Показать("ПЕЧАТЬ: Акт ввода в эксплуатацию","");
	глУстПропись(Гривня);
КонецПроцедуры

// ===============================
// Заполнение по группе ТМЦ
Процедура Заполнить()
	Перем ПоОстаткам;
	
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение(1,"По остаткам");
	Меню.ДобавитьЗначение(0,"По группе справочника");
	Если Меню.ВыбратьЗначение(ПоОстаткам,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;
	
	УдалитьСтроки();
	
	ВидСпр = ?(ВидВвода=ВводМБП,"ТМЦ","Инвестиции");
	Если ВидВвода = ВводНА Тогда
		СпрНА = СоздатьОбъект("Справочник.НеоборотныеАктивы");
	КонецЕсли;
	
	Если ПоОстаткам = 1 Тогда
		// по остаткам
		// заполняем только количество
		ИтОст = СоздатьОбъект("БухгалтерскиеИтоги");
		ИтОст.ИспользоватьРазделительУчета(Фирма);
		Если ВидВвода = ВводМБП Тогда
			Сч = СчетПоКоду("22");
			ИтОст.ИспользоватьСубконто(ВидыСубконто.ТМЦ);
			ИтОст.ИспользоватьСубконто(ВидыСубконто.МестаХранения, МестоХранения, 2);
		Иначе
			Если ВидНеоборотныхАктивов = ОсновныеСредства Тогда
				Сч = "151,152,155";
			ИначеЕсли ВидНеоборотныхАктивов = Перечисление.ВидыНеоборотныхАктивов.ДругиеНеоборотныеМатериальныеАктивы Тогда
				Сч = "153";
			ИначеЕсли ВидНеоборотныхАктивов = НМА Тогда
				Сч = "154";
			КонецЕсли;
			ИтОст.ИспользоватьСубконто(ВидыСубконто.Инвестиции);
		КонецЕсли;
		ИтОст.ВыполнитьЗапрос(?(Выбран()=1,ТекущийДокумент(),ДатаДок),,Сч,,,,,"СК");
        ИтОст.ВыбратьСубконто(1);
		Пока ИтОст.ПолучитьСубконто(1) = 1 Цикл
			Если ВидВвода = ВводМБП Тогда
				Если ИтОст.Субконто(1).ВидТМЦ <> Перечисление.ВидыТМЦ.МБП Тогда
					// не МБП
					Продолжить;
				КонецЕсли;
				ИтОст.ВыбратьСубконто(2);
				Если ИтОст.ПолучитьСубконто(2) = 1 Тогда
					Если ИтОст.СНД("К") < 0 Тогда
						// отрицательные остатки не вводим
						глКомментарий("Обнаружены отрицательные остатки по " + ИтОст.Субконто(1) +
							" на складе " + МестоХранения + "!",1,,"!");
						Продолжить;
					КонецЕсли;
					НоваяСтрока();
					ТМЦ = ИтОст.Субконто(1);
					глУстановкаБазЕд(Контекст,ТМЦ);
					Кво = ИтОст.СНД("К");
				КонецЕсли;
			Иначе
				Если ИтОст.СНД() < 0 Тогда
					// отрицательные остатки не вводим
					глКомментарий("Обнаружены отрицательные остатки по " + ИтОст.Субконто(1) + "!",1,,"!");
					Продолжить;
				КонецЕсли;
				НА = 0;
				Если СпрНА.НайтиПоНаименованию(ИтОст.Субконто(1).Наименование,0,1) = 1 Тогда
					// "случайно" нашли нужный необоротный актив :) 
					НА = СпрНА.ТекущийЭлемент();
					Если НА.ВидНеоборотногоАктива <> ВидНеоборотныхАктивов Тогда
						НА = "";
					КонецЕсли;
				КонецЕсли;
				НоваяСтрока();
				ТМЦ = ИтОст.Субконто(1);
				НеоборотныйАктив = НА;
				Кво = 1;
				Цена = ИтОст.СНД();
				ИзмТМЦ(Цена);
			КонецЕсли;
		КонецЦикла;
		Ит = 0;
	Иначе
		// по группе справочника
		Группа = СоздатьОбъект("Справочник."+ВидСпр);
		Группа.ВыборГруппы(1);
		Если Группа.Выбрать("Выберите группу справочника " + ВидСпр,"ФормаСписка") = 0 Тогда
			Возврат;
		КонецЕсли;
		Если Группа.ЭтоГруппа() = 0 Тогда
			Предупреждение("Нужно выбрать группу справочника " + ВидСпр + "!");
			Возврат;
		КонецЕсли;
		УдалитьСтроки();
		Спр = СоздатьОбъект("Справочник." + ВидСпр);
		Спр.ИспользоватьРодителя(Группа.ТекущийЭлемент());
		Спр.ВыбратьЭлементы();
		Пока Спр.ПолучитьЭлемент() = 1 Цикл
			Если (Спр.ЭтоГруппа() = 1) Или (Спр.ПометкаУдаления() = 1) Тогда
				Продолжить;
			КонецЕсли;
			Если ВидВвода = ВводМБП Тогда
				Если Спр.ВидТМЦ <> Перечисление.ВидыТМЦ.МБП Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				НА = 0;
				Если СпрНА.НайтиПоНаименованию(Спр.Наименование,0,1) = 1 Тогда
					// "случайно" нашли нужный необоротный актив :)
					НА = СпрНА.ТекущийЭлемент();
					Если НА.ВидНеоборотногоАктива <> ВидНеоборотныхАктивов Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			НоваяСтрока();
			ТМЦ = Спр.ТекущийЭлемент();
			Если ВидВвода = ВводНА Тогда
				НеоборотныйАктив = НА;
				Кво = 1;
			КонецЕсли;
			ИзмТМЦ();
		КонецЦикла;
		Спр = 0; СпрНА = 0; Группа = 0;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета=СоздатьОбъект("СписокЗначений");
	спСчета.ДобавитьЗначение(СчетПоКоду("22"));
	спОтбор.Установить("Счет",спСчета);
	Если глПартионныйУчетПоСкладам = Да Тогда
		спОтбор.Установить("МестоХранения",МестоХранения);  
	КонецЕсли;
	спОтбор.Установить("Контекст",Контекст);                      
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры

// ===============================
Процедура ПриНачалеРедактированияСтроки()
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(РЕкв,ФлагСтандОбр)
	Если Рекв = "Предпочтение" Тогда
		ВыборПредпочтения();
		ФлагСтандОбр = 0;
	ИначеЕсли Рекв = "НеоборотныйАктив" Тогда
        ФлагСтандОбр = 0;
		КонтФирмы = Фирма;
		ОткрытьФорму("Справочник.НеоборотныеАктивы.ФормаСписка",КонтФирмы);
		ИзмНеоборотныйАктив();
	КонецЕсли;		
КонецПроцедуры //

// ======================================
Процедура ОбработкаВыбораЗначения(Значение,Рекв,Флаг)
	Если Рекв = "СчетЗатрат" Тогда
	    Флаг = глПроверитьСчетЗатрат(Значение,1);
	КонецЕсли;
КонецПроцедуры
// ======================================
Процедура ВводНаОсновании(ДокОснование)

       Фирма = ДокОснование.Фирма;
       глУстановитьНомер(Контекст);

       ВидНеоборотныхАктивов = ОсновныеСредства;
       МестоХранения = ДокОснование.МестоХранения;
       СчетЗатрат = глВосстановитьЗначение(Контекст,"СчетЗатрат");
       ВидЗатрат = глВосстановитьЗначение(Контекст,"ВидЗатрат");
       СубконтоВалРасх = глВосстановитьЗначение(Контекст,"СубконтоВалРасх");
       Если СчетЗатрат.Выбран() = 0 Тогда
               Если ИспользоватьСчетаРасходов = Класс9 Тогда
                       СчетЗатрат = СчетПоКоду("94.9");
               Иначе
                       СчетЗатрат = СчетПоКоду("80.9");
               КонецЕсли;
       КонецЕсли;
       ВидВвода = 2;
       ДокОснование.ВыбратьСтроки();
       Пока ДокОснование.ПолучитьСтроку() = 1 Цикл
               НоваяСтрока();
               Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
               Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
               ТМЦ = ДокОснование.ТМЦ;
               //ИзмТМЦ();
               глУстановкаБазЕд(Контекст,,ТМЦ.БазЕдиница);
               Кво = ДокОснование.Кво;
               Если ДокОснование.Вид() = "ПриходнаяНакладнаяГТД" Тогда
                       ВалСумма = ДокОснование.СуммаБезНДСВал;
                       Валюта = ДокОснование.Валюта;
               КонецЕсли;
               ЦенаБезНДС = ДокОснование.ЦенаБезНДС;
               СуммаБезНДС = ДокОснование.СуммаБезНДС;
       КонецЦикла;
КонецПроцедуры


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции


// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");

Ит = СоздатьОбъект("БухгалтерскиеИтоги");