Перем ЧтоВводим, ВводМБП;
Перем ТекВидЗатрат, СчетУчета, ИтТМЦ, ПересчКво;
Перем тбПартии, тбОстаткиПартий;
Перем ОбъектныйУчет[4];
Перем ВремРег;

// ===============================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(МестоХранения,"Место хранения");
	глВыбранЛи(Подразделение,"Подразделение");
    Если ВидВвода = ВводМБП Тогда
		глВыбранЛи(СчетЗатрат,"Счет затрат");
		Если глВсеВыбрано = 1 Тогда
			Если глПроверитьСчетЗатрат(СчетЗатрат,2)=0 Тогда
			    глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
		Если глВсеВыбрано = 1 Тогда
			глВсеВыбрано = глПроверкаДублейСтрок(Контекст);
		КонецЕсли;
	Иначе
		глВыбранЛи(ВидНеоборотныхАктивов,"Вид необоротных активов");
	КонецЕсли;
	ноАмортГр = 0;
	Спис = СоздатьОбъект("СписокЗначений");
	Для Инд = 1 По 4 Цикл
		Если глПолучитьНиО(ноАмортГр,"АмортГр"+Инд,"о ставках амортизации "+Инд+" группы!") = 0 Тогда
			Возврат 0;
		КонецЕсли;
		глПарсить(ноАмортГр.Дополнительно.Получить(ДатаДок),Спис);
		ОбъектныйУчет[Инд] = Число(Спис.Получить("Пообъектно"));
	КонецЦикла;
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция РассчитатьШапку()
 	ЧтоВводим = "";
	Если ВидВвода = ВводМБП Тогда
		ЧтоВводим = "МБП";
		
		спОтбор = СоздатьОбъект("СписокЗначений");
		спОтбор.Установить("Фирма", Фирма);
		спОтбор.Установить("Счет", СчетПоКоду("22"));
		ВремРег = СоздатьОбъект("Регистры");
		
		глРассчитатьОстаткиИРезервы(Контекст, ВремРег, спОтбор,1,1,1);
		// фильтр по складу нужен только для партий
		Если глПартионныйУчетПоСкладам = Да Тогда
		    спОтбор.Установить("МестоХранения", МестоХранения);
		КонецЕсли;
		глРассчитатьОстаткиПартий(Контекст, ВремРег, Фирма, спОтбор, 0);
		глСформироватьТаблицуПартий(Контекст, ВремРег, Фирма, спОтбор, 0, тбПартии, тбОстаткиПартий, 0, 0);
	Иначе
		ЧтоВводим = Строка(ВидНеоборотныхАктивов);
	КонецЕсли;
	
	Возврат 1;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
	НеоборотныйАктив.ИспользоватьДату(ДатаДок,1);
	Если ВидВвода = ВводМБП Тогда
		глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
		Если ПустоеЗначение(ВидЗатрат)=1 Тогда
			глВыбранЛи(ТМЦ.ВидЗатрат,"Вид затрат в ТМЦ",НомерСтроки);
		КонецЕсли;
		Если глВсеВыбрано = 1 Тогда
		    // проверим вид ТМЦ
		    Если ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.МБП Тогда
		        глКомментарий("В строке "+НомерСтроки+" обнаружен ТМЦ с видом """+ТМЦ.ВидТМЦ+""", вид должен быть ""МБП""!",0,,"!");
				глВсеВыбрано = 0;
		    КонецЕсли;
		КонецЕсли;
	Иначе
		глВыбранЛи(ТМЦ,"Инвестиция",НомерСтроки);
		// а для необоротных активов - наличие актива
		глВыбранЛи(НеоборотныйАктив,"Необоротный актив",НомерСтроки);
		Если глВсеВыбрано = 1 Тогда
			СчетНА = Сред(НеоборотныйАктив.Счет.Код,1,2);
		    СчетИнвестиций = ТМЦ.Счет.Код;
			Если ((СчетНА = "10") и (СчетИнвестиций <> "151") и (СчетИнвестиций <> "1521") и (СчетИнвестиций <> "1522") и (СчетИнвестиций <> "155"))
			Или ((СчетНА = "11") и (СчетИнвестиций <> "153")) 
			Или ((СчетНА = "12") и (СчетИнвестиций <> "154")) Тогда
				глКомментарий("В строке "+НомерСтроки+" выбран элемент справочника Инвестиции с неправильным счетом учета!",0,,"!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
    Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция РассчитатьСтроку()
	Если ВидВвода = ВводМБП Тогда
		// вид затрат
		Если ПустоеЗначение(ВидЗатрат)=0 Тогда
			ТекВидЗатрат = ВидЗатрат;
		Иначе
			// вид затрат из справочника ТМЦ
			ТекВидЗатрат = ТМЦ.ВидЗатрат;
		КонецЕсли;
		ПересчКво = Кво * Коэффициент;
	КонецЕсли;
	Возврат 1;
КонецФункции

// ===============================
Процедура РегистрыСтрока()
	ВсегоСписать = Кво * Коэффициент;
	ОсталосьСписать = ВсегоСписать;
	
	// проверка свободного остатка
	Резерв = ВремРег.Резервы.СводныйОстаток(Фирма,ТМЦ,,,,"Резерв");
	ОстатокВсего = ВремРег.Остатки.СводныйОстаток(Фирма,ТМЦ,,,,"ОстатокТовара");
	СвободныйОстаток = Макс(0,ОстатокВсего - Резерв);			
	Если ОсталосьСписать > СвободныйОстаток Тогда
		глКомментарий(Шаблон("Строка [НомерСтроки]. Недостаточно свободного ТМЦ [ТМЦ] по фирме [Фирма]. 
		| Свободный остаток [СвободныйОстаток], необходимо [ОсталосьСписать]."),0);
		Если Константа.РазрешитьПродаватьРезерв=Нет Тогда
			глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ВсегоСписаноКво = 0;
	ВсегоСписаноСум = 0;
	НС=0;
	Если тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента")=1 Тогда
		тбПартии.ПолучитьСтрокуПоНомеру(НС);
	Иначе
		тбПартии.ВыбратьСтроки();
		тбПартии.ПолучитьСтроку();
	КонецЕсли;
	Пока тбПартии.НомерСтрокиДокумента = НомерСтроки Цикл
		Если тбПартии.ТМЦ.Счет = тбПартии.Счет Тогда
			МестоХраненияП = тбПартии.МестоХранения;
			ПоставщикП = тбПартии.Поставщик;
			ПоставкаП = тбПартии.Поставка;
			ПрихДокументП = тбПартии.ПрихДокумент;
			СчетП = тбПартии.Счет;
			НС =0;
			Если тбОстаткиПартий.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,ТМЦ.Код,СчетП),НС,"Ключ")=1 Тогда
				тбОстаткиПартий.ПолучитьСтрокуПоНомеру(НС);
				ОстатокТовара = тбОстаткиПартий.ОстатокТовара;
				Если ОстатокТовара = 0 Тогда
					Если тбПартии.ПолучитьСтроку()=0 Тогда
						Прервать;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
				КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
				КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписать;
	
				СписываемаяСтоимость = тбОстаткиПартий.Стоимость * КоэфСписания;
				СписываемаяПродСтоимость = тбОстаткиПартий.ПродСтоимость * КоэфСписания;
				ВсегоСписаноКво = ВсегоСписаноКво + СписываемыйОстатокТовара;
				ВсегоСписаноСум = ВсегоСписаноСум + СписываемаяСтоимость;
				
				// Списываем
				глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП, 
				ПоставкаП, ПрихДокументП, СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
				СписаниеИзлишков, 0 ,0, 0);
				
				глУчестьСписание(тбОстаткиПартий,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость);
				ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
				
				// приходуем на счет "МЦ"
				СчетП = СчетПоКоду("МЦ");
				КодОперации = ВводВЭксплуатациюМБП;
				
				глПровестиПартию(Контекст, 1, 0, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП, 
				ПоставкаП, ПрихДокументП, СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
				КодОперации, 0 ,0, 0);
			КонецЕсли;
		КонецЕсли;
		Если ОсталосьСписать = 0 Тогда
			Прервать;
		КонецЕсли;   
		Если тбПартии.ПолучитьСтроку()=0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ОсталосьСписать > 0 Тогда
		глСообщитьОбОтсутствииПартии(0, Фирма, ТМЦ, НомерСтроки);
		Если Константа.РазрешитьОтрицОстатки = Нет Тогда
			глНеПроводить(Контекст);
			Возврат;
		Иначе
			СписываемыйОстатокТовара = ОсталосьСписать;
			СписываемаяСтоимость = ТМЦ.УчетнаяЦена.Получить(ДатаДок) * СписываемыйОстатокТовара;
			СчетП = СчетПоКоду("22");
			МестоХраненияП = ?(глПартионныйУчетПоСкладам = Да,МестоХранения,МестоХраненияП);
			Если Константа.МетодРасчетаСебестоимостиПроизводственныхЗапасов.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
				ПоставщикП = 0;
				ПоставкаП = 0;
				ПрихДокументП = 0;
			Иначе
				ПоставщикП = 0;
				ПоставкаП = ТекущийДокумент();
				ПрихДокументП = ТекущийДокумент();
			КонецЕсли;			
			СписываемаяПродСтоимость = 0;
			
			глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП, 
				ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
				СписаниеИзлишков,0,0,0);
			
			// приходуем на счет "МЦ"
			глПровестиПартию(Контекст, 1, 0, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП,
			ПоставкаП, ПрихДокументП, СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
			КодОперации, 0 ,0, 0);
			
			глСообщитьОСозданииПартии(ТМЦ, СписываемыйОстатокТовара);
			
			ВсегоСписаноСум = ВсегоСписаноСум + СписываемаяСтоимость;
			ВсегоСписаноКво = ВсегоСписаноКво + СписываемыйОстатокТовара
		КонецЕсли;
	КонецЕсли;

	// заполняем реквизиты документа
	Если ВсегоСписаноКво = 0 Тогда
		// рассчитываем себестоимость из справочника ТМЦ
		СуммаБезНДС = ТМЦ.УчетнаяЦена.Получить(ДатаДок)*ПересчКво;
	Иначе
		СуммаБезНДС = ПересчКво*ВсегоСписаноСум/ВсегоСписаноКво;
	КонецЕсли;
	ЦенаБезНДС = ?(ПересчКво=0, 0, СуммаБезНДС/Кво);
КонецПроцедуры //

// ===============================
Процедура ПроводкиСтрока()
	Если ВидВвода = ВводМБП Тогда
        // списываем сразу
        глПроводкаПоЗатратам(Контекст,СчетЗатрат,"22",СуммаБезНДС,"Ввод МБП в эксплуатацию (списание на затраты)",ПересчКво, ТМЦ.ВидДеятельности,Подразделение,ТекВидЗатрат,
        МестоХранения,ТМЦ,,,,"МЦ");
		Если СчетЗатрат.Код = "231" Тогда
			// нужно отразить затраты в регистре
			Регистр.ПроизводственныеЗатраты.ПривязыватьСтроку(НомерСтроки);
			Регистр.ПроизводственныеЗатраты.ДвижениеПриход(Фирма,ТМЦ.ВидДеятельности,Подразделение,,ТекВидЗатрат,,,,СуммаБезНДС,,ОтражениеЗатрат);
		КонецЕсли;
		// дальше учитываем на забалансовом счете
		глПроводка(Контекст,"МЦ",,СуммаБезНДС,"Ввод МБП в эксплуатацию",ПересчКво, МестоХранения,ТМЦ,,
		,,, ,,"МЦ");
	Иначе
		// ОС, НМА, необоротные мат. активы
		глПроводка(Контекст,НеоборотныйАктив.Счет,ТМЦ.Счет,СуммаБезНДС,"Ввод в эксплуатацию: "+ЧтоВводим,Кво,Подразделение ,МестоХранения,НеоборотныйАктив,
		ТМЦ,,,Валюта,ВалСумма,"НА");
		Если НеоборотныйАктив.МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.ПервыйИПоследнийМесяц Тогда
			// первые 50 % начисляются в месяце ввода в эксплуатацию
			глПроводкаПоЗатратам(Контекст,НеоборотныйАктив.СчетЗатрат,"13.2",СуммаБезНДС/2,"Начислен износ 50%:"+ЧтоВводим,, НеоборотныйАктив.ВидДеятельности,Подразделение,НеоборотныйАктив.ВидЗатрат, 
			НеоборотныйАктив,,, ,,"НА");
		ИначеЕсли НеоборотныйАктив.МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.ПервыйМесяц Тогда
			// 100 % начисляются в месяце ввода в эксплуатацию
			глПроводкаПоЗатратам(Контекст,НеоборотныйАктив.СчетЗатрат,"13.2",СуммаБезНДС,"Начислен износ 100%:"+ЧтоВводим,, НеоборотныйАктив.ВидДеятельности,Подразделение,НеоборотныйАктив.ВидЗатрат,
			НеоборотныйАктив,,, ,,"НА");
		КонецЕсли;
		Если НеоборотныйАктив.Производственное = 1 Тогда
		    // нужно отразить в налоговом учете
			СчетГруппыОС = 0;
			Если ВидНеоборотныхАктивов = НМА Тогда
				// НМА
				СчетГруппыОС = СчетПоКоду("НА.1");
			Иначе
				// ОСы, другие необоротные материальные активы
			    СчетГруппыОС = СчетПоКоду("ОС."+НеоборотныйАктив.Группа);
			КонецЕсли;
			Если СчетГруппыОС.Выбран() = 0 Тогда
			    глКомментарий("Для необоротного актива в строке "+НомерСтроки+" не определен счет налогового учета! Возможно, не задана группа, проводка по налоговому учету не сформирована",0,,"!");
				Возврат;
			КонецЕсли;
			// увеличение балансовой стоимости группы
			Если ВидНеоборотныхАктивов <> НМА Тогда
				Если ОбъектныйУчет[НеоборотныйАктив.Группа]=0 Тогда // по группе
					глПроводка(Контекст,СчетГруппыОС,,СуммаБезНДС, "Ввод в эксплуатацию: "+НеоборотныйАктив, Кво, ,,,
					,,, ,, "НА");
				Иначе
					глПроводка(Контекст,СчетГруппыОС,,СуммаБезНДС, "Ввод в эксплуатацию: "+НеоборотныйАктив, Кво, НеоборотныйАктив,,,
					,,, ,, "НА");
				КонецЕсли;
			Иначе
				глПроводка(Контекст,СчетГруппыОС,,СуммаБезНДС, "Ввод в эксплуатацию: "+НеоборотныйАктив, Кво, НеоборотныйАктив,,,
				,,, ,, "НА");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	ВводМБП = 1;
	
	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;

	Если РассчитатьШапку() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	
	СпрНА = СоздатьОбъект("Справочник.НеоборотныеАктивы");

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
		
		Если РассчитатьСтроку() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
		
		Если ВидВвода = ВводМБП Тогда
			РегистрыСтрока();
		КонецЕсли;		
		ПроводкиСтрока();

		Если ВидВвода <> ВводМБП Тогда
			// установим дату ввода
			Если СпрНА.НайтиЭлемент(НеоборотныйАктив) = 1 Тогда
				Если ПустоеЗначение(СпрНА.ДатаВвода) = 1 Тогда
					СпрНА.ДатаВвода = ДатаДок;
					СпрНА.Записать();				    
				КонецЕсли;
			КонецЕсли;
			// установим состояние
			УстановитьРеквизитСправочника(НеоборотныйАктив,"Состояние",Перечисление.СостоянияНеоборАктивов.ВЭксплуатации);
		КонецЕсли;
		Если (ТМЦ.Вид() = "Инвестиции") И (ПустоеЗначение(НеоборотныйАктив) = 0) Тогда
			СпрТМЦ = СоздатьОбъект("Справочник.НеоборотныеАктивы");
			СпрТМЦ.НайтиЭлемент(НеоборотныйАктив);
			СпрТМЦ.Поставщик = ТМЦ.Поставщик;
			СпрТМЦ.ДатаПокупки = ТМЦ.ДатаПокупки;
			СпрТМЦ.Записать();
		КонецЕсли;
		
	КонецЦикла;
	СпрНА = 0;
	
	Операция.СуммаОперации = Итог("СуммаБезНДС");
	Операция.Содержание = "" + ЧтоВводим + " " + Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

// ===============================
Процедура ОбработкаУдаленияПроведения()
	СпрНА = СоздатьОбъект("Справочник.НеоборотныеАктивы");
    ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ВидВвода <> ВводМБП Тогда
			// обнулим дату ввода
			Если СпрНА.НайтиЭлемент(НеоборотныйАктив) = 1 Тогда
				СпрНА.ДатаВвода = 0;
				СпрНА.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	СпрНА = 0;
КонецПроцедуры