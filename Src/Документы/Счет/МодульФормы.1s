// ===============================
// Описание переменных 
Перем СписокДействий;
Перем СтарыйКонтрагент;
Перем СтараяДата;
Перем СтарРСчет;
Перем СтарЧтоПродаем;
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем спЧтоПродаем;      
Перем ТоргСчет;

Перем НачальнаяДатаДокумента;
Перем ДатаОплаты;
// ===============================
// "служебные" функции и процедуры 
                                                         
// ===============================
Функция УстДоступность()         
	// доступность рекв. "Кво"
	
	Если ЧтоПродаем=Перечисление.ЧтоПродаем.ТМЦ	Тогда
	    НазначитьВид(ТМЦ,"ТМЦ");
		Форма.Кво.Доступность(1);
	Иначе
		НазначитьВид(ТМЦ,"НеоборотныеАктивы");
		Форма.Кво.Доступность(0);
	КонецЕсли;

	// доступность видов торговли
	Форма.ТМЦ.НеИзменятьВид(1);
	Если Контрагент.Выбран()=1 Тогда
	    Если Контрагент.Вид()="Контрагенты" Тогда
	        Форма.спВидТорговли.Доступность(1);
	    Иначе
	    	Форма.спВидТорговли.Доступность(0);
		КонецЕсли;
	КонецЕсли;

	Если ЧтоПродаем=Перечисление.ЧтоПродаем.ТМЦ Тогда
		Форма.ВидТары.Видимость(1);
		Форма.тВидТары.Видимость(1);
	Иначе
		Форма.ВидТары.Видимость(0);
		Форма.тВидТары.Видимость(0);
	КонецЕсли;	
	
	// доступность кнопки "Подбор"
	Если (ЧтоПродаем=Перечисление.ЧтоПродаем.ТМЦ)
	И (Форма.ТолькоПросмотр()=0) Тогда
	    Форма.Ед.Доступность(1);
	    Форма.кПодбор.Доступность(1 - Форма.ТолькоПросмотр());
	Иначе
		Форма.Ед.Доступность(0);
		Форма.кПодбор.Доступность(0);
	КонецЕсли;
	
	// доступность рекв. "Скидка"
	Если ((ЧтоПродаем = Перечисление.ЧтоПродаем.НеоборотныеАктивы)
	Или (Константа.ИспользоватьСкидку = Нет))
	Или (Форма.ТолькоПросмотр()=1)
	Тогда
		Форма.Скидка.Доступность(0); 
		Форма.СуммаБезСкидки.Видимость(0);
		Форма.кДатьСкидку.Доступность(0);
	ИначеЕсли Константа.ИспользоватьСкидку = Да	Тогда
		Форма.Скидка.Доступность(1); 
		Форма.СуммаБезСкидки.Видимость(1);
		Форма.кДатьСкидку.Доступность(1);
	КонецЕсли;           
	Форма.Заголовок(глЗаголовок(Контекст,"Счет-фактура"));
	Возврат "";
КонецФункции
                       
// ===============================
Процедура ВыбранВидТорговли()
	спВидТорговли.ТекущаяСтрока(спВидТорговли.НайтиЗначение(ВидТорговли));
КонецПроцедуры
                           
// ===============================
Процедура УстВидТорговли()
	Если ПустоеЗначение(ВидТорговли) = 1 Тогда
		Если ПустоеЗначение(Договор) = 0 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
				ВидТорговли = Договор.ВидТорговли;
				Возврат;
			КонецЕсли;	
		КонецЕсли;
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			ВидТорговли = Контрагент.ВидТорговли;			
		КонецЕсли;
		Если ПустоеЗначение(ВидТорговли) = 1 Тогда
		    ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ИзмВидТорговли()               
	ВидТорговли = спВидТорговли.ПолучитьЗначение(спВидТорговли.ТекущаяСтрока());	
	Если (ЧтоПродаем <> Перечисление.ЧтоПродаем.ТМЦ) 
	И (ВидТорговли = Перечисление.ВидыТорговли.Кредит) Тогда   
    	Если Вопрос("Нельзя приходовать "+ЧтоПродаем+" если вид торговли "+Перечисление.ВидыТорговли.Кредит+"."+РазделительСтрок+" Установить допустимый вид торговли?",4) = 6 Тогда
			УстВидТорговли();
			ВыбранВидТорговли();
		КонецЕсли;	 	
	КонецЕсли;	
КонецПроцедуры         

// ===============================
Процедура ИзмДатаОплаты()
	СрокРезервирования = ДатаОплаты - ДатаДок;
КонецПроцедуры                                           

// ===============================
Процедура ИзмСрокРезерва()
	// Формирует и показывает дату оплаты
	ДатаОплаты=глБанковскаяДата(ДатаДок,СрокРезервирования);    
КонецПроцедуры	

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ИзмСрокРезерва();
КонецПроцедуры

// ===============================
Процедура ИзмЧтоПродаем()
	Если (КоличествоСтрок()<>0) и (СтарЧтоПродаем<>ЧтоПродаем) и (СокрЛП(СтарЧтоПродаем)<>"") Тогда
	    ЧтоПродаем = СтарЧтоПродаем;
	    Предупреждение("Сначала удалите все строки!");
	Иначе	                                
		Если (ЧтоПродаем <> Перечисление.ЧтоПродаем.ТМЦ) 
		И (ВидТорговли = Перечисление.ВидыТорговли.Кредит) Тогда   
	             Если Вопрос("Нельзя приходовать "+ЧтоПродаем+" если вид торговли "+Перечисление.ВидыТорговли.Кредит+"."+РазделительСтрок+" Установить допустимый вид торговли?",4) = 6 Тогда
				ВидТорговли = Перечисление.ВидыТорговли.Нал;
				ВыбранВидТорговли();
			КонецЕсли;	 	
		КонецЕсли;	
		СтарЧтоПродаем = ЧтоПродаем;	
	КонецЕсли;                      
	// Инициализируем список действий по кнопке "Действия"
	СписокДействий = глПолучитьСписокДействий(?(ЧтоПродаем=Перечисление.ЧтоПродаем.ТМЦ,"ТоварныйСостав,","") + "
		|ОбновлениеЦен,
		|СтруктураПодчиненности,
		|ДвиженияДокумента,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные");
КонецПроцедуры
                
// ===============================
Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат,СуммаБезНДС, СуммаСНДС, СуммаНДС;
	СуммаБезНДС = Итог("СуммаБезНДС");
	СуммаСНДС = Итог("СуммаСНДС");
	СуммаНДС = СуммаСНДС - СуммаБезНДС;
	Результат = ?(СуммаБезНДС =0,"","Сумма="+ глФРМ(СуммаБезНДС, Валюта, 1))+
	            ?(СуммаНДС = 0,""," НДС=" + глФРМ(СуммаНДС, Валюта, 1)+
			?(СуммаСНДС = 0,""," Всего=" + глФРМ(СуммаСНДС, Валюта, 1)));
	Возврат Результат;
КонецФункции
                                    
// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = ТМЦ.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;
КонецПроцедуры //ПересчетСтроки

// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
// ===============================
Процедура ИзмРеквизитШапки(Реквизит)
	// пересчитаем суммы НДС в строках табличной части
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	текОтвет = Вопрос("В документе изменен реквизит """+Реквизит+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текОтвет = "Да" Тогда
			// изменим цены
			ЦенаТовара = глВернутьЦену(ТМЦ, КатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
				// получим параметры цены
				ЦенаТовара.ИспользоватьДату(ДатаДок);
				ЦенаЦены   = ЦенаТовара.Цена;
				ВалютаЦены = ЦенаТовара.Валюта;
				ЕдЦены	   = ЦенаТовара.Единица;
				ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
				ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
				ПересчетСтроки(ЦенаЦены);                                                   
			Иначе
				ПересчетСтроки();
			КонецЕсли;
		ИначеЕсли Реквизит = "ВидНДС" Тогда
			ПересчетСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 
                   
// ===============================
Процедура ИзмВидТары()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("В документе изменен вид тары! Пересчитать суммы ?","Да+Нет") = "Да" Тогда
			текОсновнаяЦена = Константа.ОсновнаяЦена;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл    
				Если ПустоеЗначение(ТМЦ) = 1 Тогда
					Продолжить;
				ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					глВыч_суммы_накл(Контекст);
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмРСчет()
	Если ПустоеЗначение(РСчет) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если РСчет.БезНал = 0 Тогда
		глКомментарий("Нельзя выбирать кассу.");
		РСчет = СтарРСчет;		
		Возврат;
	ИначеЕсли Валюта <> РСчет.Валюта Тогда
		глКомментарий("Валюта расчетного счета не соответствует валюте документа.");
		РСчет = СтарРСчет;		
		Возврат;
	КонецЕсли;	                    
КонецПроцедуры	
              
// ===============================
Процедура УстРСчет()
	Если ПустоеЗначение(РСчет) = 1 Тогда
		РСчет = ?(Валюта=Гривня,Фирма.РС,Фирма.ВС);
		ИзмРСчет();              
		Возврат;
	ИначеЕсли Валюта <> РСчет.Валюта Тогда
		Спр = СоздатьОбъект("Справочник.НашиДенежныеСчета");
		Спр.ИспользоватьВладельца(Фирма);
		Спр.ВыбратьЭлементы();
		Пока Спр.ПолучитьЭлемент() = 1 Цикл
			Счет = Спр.ТекущийЭлемент();
			Если Счет.ЭтоГруппа() = 1 Тогда
				Продолжить;
			КонецЕсли;	
			Если (Счет.Безнал = 1) и (Счет.Валюта = Валюта) Тогда
			    РСчет = Счет;   
				ИзмРСчет();              
				Возврат;
			КонецЕсли;
		КонецЦикла;
	    глКомментарий("Не найден расчетный счет с валютой "+Валюта+" по фирме "+Фирма+"!",0,,"!");	
	КонецЕсли;
КонецПроцедуры	

// ===============================
Процедура ИзмДоговор()
	// Договор есть
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			Если Валюта <> Валюта_Прежн Тогда
				УстРСчет();
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
				КонецЕсли;
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;
			ВидНДС = Договор.ВидНДС;
			ИзмРеквизитШапки("ВидНДС");
		КонецЕсли;
	КонецЕсли;    
КонецПроцедуры

// ===============================
// функции и процедуры, вызываемые из формул элементов диалога
                              
// ===============================
Процедура Подбор()            
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;	                                                                                    
КонецПроцедуры

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	УстРСчет();
КонецПроцедуры	

// ===============================
Процедура ИзмКонтрагент() // Процедура при выборе Контрагента в докумнете
    Если Контрагент.Выбран()=1 Тогда                                      
		Если СтарыйКонтрагент <> Контрагент Тогда
			// изменили Контрагента
			Если (глВосстановитьЗначение(,"ПодставлятьОсновнойДоговор") = Да)
			И (ПустоеЗначение(Контрагент.БазДоговор)=0) Тогда
				Если Фирма = Контрагент.БазДоговор.Фирма Тогда
					// подставим Договор по умолчанию
					Договор = Контрагент.БазДоговор;
					ИзмДоговор();
				КонецЕсли;	
			Иначе
				// очистим Договор
				Договор = ПолучитьПустоеЗначение("Документ");
			КонецЕсли;      
			
			Если ПустоеЗначение(Контрагент.КатегорияЦен.Получить(ДатаДок)) = 0 Тогда
				КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
			Иначе	
				КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
			КонецЕсли;      								
			ИзмСрокРезерва();
		КонецЕсли;
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и Договор
		Договор = ПолучитьПустоеЗначение("Документ");          
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
	КонецЕсли;
	// Формирует и показывает дату оплаты
	СтарыйКонтрагент = Контрагент;
	ИзмСрокРезерва();
КонецПроцедуры	
	                  
// ===============================
Процедура ВыборОснования()    
	СтарДоговор = Договор;
    
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	

// ===============================
Процедура Печать(БыстраяПечать=0)

	Таб = СоздатьОбъект("Таблица");    

	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 	
	Таб.ИсходнаяТаблица(ПечФорма);
	глУстПропись(Валюта,Язык);
	
	Ном = 0;ВСоставе = 0;
	
	ИтСуммаБезСкидки = 0;ИтСумма = 0;ИтСуммаСкидки = 0;
	
	фЕстьСкидка = 0;
	Если Итог("Скидка")<>0 Тогда
		фЕстьСкидка = 1;
	КонецЕсли;
	ЗагСуммаБезНДС = ?(Язык="у","Сума без ПДВ","Сумма без НДС");
	ЗагСуммаСНДС = ?(Язык="у","Сума з ПДВ","Сумма с НДС");
	
	Если фЕстьСкидка = 1 Тогда
	    ЗагСумма1 = ?(Язык="у","Сума","Сумма");
		ЗагСумма2 = ?(Язык="у","Знижка","Скидка");
	КонецЕсли;
	
	Если (Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС) Тогда
		ЗагЦена = ?(Язык="у","Ціна з ПДВ","Цена с НДС");
		
		Если фЕстьСкидка = 1 Тогда
			ЗагСумма3 = ЗагСуммаСНДС;
			ЗагСумма4 = ЗагСуммаБезНДС;
		Иначе
			ЗагСумма1 = ЗагСуммаСНДС;
			ЗагСумма2 = ЗагСуммаБезНДС;
		КонецЕсли;
		
		РеквЦена = "ЦенаСНДС";
		РеквСуммаОсн = "СуммаСНДС";
		РеквСуммаДоп = "СуммаБезНДС";
	Иначе
		ЗагЦена = ?(Язык="у","Ціна без ПДВ","Цена без НДС");
		Если фЕстьСкидка = 1 Тогда
			ЗагСумма3 = ЗагСуммаБезНДС;
			ЗагСумма4 = ЗагСуммаСНДС;
		Иначе
			ЗагСумма1 = ЗагСуммаБезНДС;
			ЗагСумма2 = ЗагСуммаСНДС;
		КонецЕсли;
		
		РеквЦена = "ЦенаБезНДС";
		РеквСуммаОсн = "СуммаБезНДС";
		РеквСуммаДоп = "СуммаСНДС";
	КонецЕсли;
	    
	Таб.ВывестиСекцию("Шапка|Груп_1");
	Если фЕстьСкидка = 1 Тогда
	    Таб.ПрисоединитьСекцию("Шапка|Груп_2");
	КонецЕсли;
	
	ИтСуммаБезСкидки = 0;
	ИтСуммаСкидки = 0;
	ИтСуммаОсн = 0;
	ИтСуммаДоп = 0;
	
	фЕстьТара =0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл                
		Если Набор.Выбран()=1 Тогда
			Если (ПустоеЗначение(ВСоставе)=1) или (ВСоставе<>Набор) Тогда
				Таб.ВывестиСекцию("СтрокаНабор|Груп_1");
				Если фЕстьСкидка = 1 Тогда
				    Таб.ПрисоединитьСекцию("СтрокаНабор|Груп_2");
				КонецЕсли;
				ВСоставе=Набор;
			КонецЕсли;
		Иначе
			Если ПустоеЗначение(ВСоставе)=0 Тогда
				ВСоставе=0;
			КонецЕсли;
		КонецЕсли;

		Если ЧтоПродаем = Перечисление.ЧтоПродаем.ТМЦ Тогда
			Если (ВидТары <> Перечисление.ВидыТары.Покупная) и (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
				фЕстьТара = 1;
			    Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ИтСуммаБезСкидки = ИтСуммаБезСкидки + СуммаБезСкидки;
		ИтСуммаСкидки	 = ИтСуммаСкидки + Скидка;
		ИтСуммаОсн		 = ИтСуммаОсн + ПолучитьАтрибут(РеквСуммаОсн);
		ИтСуммаДоп		 = ИтСуммаДоп + ПолучитьАтрибут(РеквСуммаДоп);
		
		ПечЦена = глФРМТ(ПолучитьАтрибут(РеквЦена),Валюта,0);
		Если фЕстьСкидка = 1 Тогда
			ПечСумма1 = глФРМТ(СуммаБезСкидки,Валюта,0);		
			ПечСумма2 = глФРМТ(Скидка,Валюта,0);
			ПечСумма3 = глФРМТ(ПолучитьАтрибут(РеквСуммаОсн),Валюта,0);
			ПечСумма4 = глФРМ3(ПолучитьАтрибут(РеквСуммаДоп),Валюта,0);
		Иначе
			ПечСумма1 = глФРМТ(ПолучитьАтрибут(РеквСуммаОсн),Валюта,0);		
			ПечСумма2 = глФРМ3(ПолучитьАтрибут(РеквСуммаДоп),Валюта,0);
		КонецЕсли;
		
		Ном = Ном + 1;
		
		Таб.ВывестиСекцию("СтрокаТовар|Груп_1");
		Если фЕстьСкидка = 1 Тогда
		    Таб.ПрисоединитьСекцию("СтрокаТовар|Груп_2");
		КонецЕсли;
	КонецЦикла;
	
	ИтСуммаБезСкидки = Окр(ИтСуммаБезСкидки,2);
	ИтСуммаСкидки = Окр(ИтСуммаСкидки,2);
	ИтСуммаОсн = Окр(ИтСуммаОсн,2);
	ИтСуммаДоп = Окр(ИтСуммаДоп,2);
		
	ПечИтСуммаБезСкидки = глФРМТ(ИтСуммаБезСкидки,Валюта,0);
	Если фЕстьСкидка = 1 Тогда
		ПечИтСумма1 = глФРМТ(ИтСуммаБезСкидки,Валюта,0);		
		ПечИтСумма2 = глФРМТ(ИтСуммаСкидки,Валюта,0);
		ПечИтСумма3 = глФРМТ(ИтСуммаОсн,Валюта,0);
		ПечИтСумма4 = глФРМТ(ИтСуммаДоп,Валюта,0);
	Иначе
		ПечИтСумма1 = глФРМТ(ИтСуммаОсн,Валюта,0);		
		ПечИтСумма2 = глФРМТ(ИтСуммаДоп,Валюта,0);
	КонецЕсли;
	
	Таб.ВывестиСекцию("ИтогоТовары|Груп_1");
	Если фЕстьСкидка = 1 Тогда
	    Таб.ПрисоединитьСекцию("ИтогоТовары|Груп_2");
	КонецЕсли;
	
	ИтСуммаТары = 0;
	
	Если фЕстьТара = 1 Тогда
		
		Если ВидТары = Перечисление.ВидыТары.Возвратная Тогда
			ЗагТара = ?(Язык="у","Тара зворотна","Тара возвратная");
		ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			ЗагТара = ?(Язык="у","Тара заставна","Тара залоговая");
		КонецЕсли;
		
		Таб.ВывестиСекцию("ШапкаТара|Груп_1");
		Если фЕстьСкидка = 1 Тогда
		    Таб.ПрисоединитьСекцию("ИтогоТовар|Груп_2");
		КонецЕсли;
		
	    Ном = 0;
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			
			Если (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			    Продолжить;
			КонецЕсли;
			
			ИтСуммаТары = ИтСуммаТары + ПолучитьАтрибут(РеквСуммаОсн);
			
			ПечЦена = глФРМТ(ПолучитьАтрибут(РеквЦена),Валюта,0);
			ПечСумма = глФРМТ(ПолучитьАтрибут(РеквСуммаОсн),Валюта,0);
			
			Ном = Ном + 1;
			
			Таб.ВывестиСекцию("СтрокаТара|Груп_1");
			Если фЕстьСкидка = 1 Тогда
			    Таб.ПрисоединитьСекцию("СтрокаТара|Груп_2");
			КонецЕсли;
		КонецЦикла;
		
		ИтСуммаТары = Окр(ИтСуммаТары,2);
		ПечИтСумма = глФРМТ(ИтСуммаТары,Валюта,0);
		
		Таб.ВывестиСекцию("ИтогоТара|Груп_1");
		Если фЕстьСкидка = 1 Тогда
		    Таб.ПрисоединитьСекцию("ИтогоТара|Груп_2");
		КонецЕсли;
		
	КонецЕсли;
	
	Если (Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС) Тогда
		Если фЕстьСкидка = 1 Тогда
			ПечСНДСПропись = Формат(ИтСуммаБезСкидки - ИтСуммаСкидки,"ЧПДС");
			ПечНДСПропись = " "+глФРМТ((ИтСуммаБезСкидки - ИтСуммаСкидки) - ИтСумма,Валюта,1);
		Иначе
			ПечСНДСПропись = Формат(ИтСуммаОсн,"ЧПДС");
			ПечНДСПропись = " "+глФРМТ(ИтСуммаОсн - ИтСуммаДоп,Валюта,1);
		КонецЕсли;	
	Иначе
		ПечСНДСПропись = Формат(ИтСуммаДоп,"ЧПДС");
		Если фЕстьСкидка = 1 Тогда
			ПечНДСПропись = " "+глФРМТ(ИтСуммаОсн - (ИтСуммаБезСкидки - ИтСуммаСкидки),Валюта,1);
		Иначе
			ПечНДСПропись = " "+глФРМТ(ИтСуммаОсн - ИтСуммаДоп,Валюта,1);
		КонецЕсли;	
	КонецЕсли;
	
	Таб.ВывестиСекцию("Дно|Груп_1");
	Если фЕстьСкидка = 1 Тогда
	    Таб.ПрисоединитьСекцию("Дно|Груп_2");
	КонецЕсли;
	
	Таб.ПараметрыСтраницы(,,,,,,,,,1,,);
	Если БыстраяПечать=1 Тогда
		Таб.КоличествоЭкземпляров(глВосстановитьЗначение(,"ПечКолЭкзСчетаПриБыстройПродаже"));
		Таб.Напечатать(0);
	Иначе	
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Опции(0,0,,);
		Таб.Показать("ПЕЧАТЬ: Счет - фактура","");
	КонецЕсли;
КонецПроцедуры                                    

// ===============================
Процедура ЗаполнитьСпВидТорговли()                                                                                                                                                              	
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Нал,Строка(Перечисление.ВидыТорговли.Нал));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Предоплата,Строка(Перечисление.ВидыТорговли.Предоплата));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Кредит,Строка(Перечисление.ВидыТорговли.Кредит));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Бартер,Строка(Перечисление.ВидыТорговли.Бартер));	
КонецПроцедуры

// ===============================
Процедура ИзмТМЦ()
	Если ТМЦ.Выбран()=1 Тогда
		Если ТМЦ.Вид()="НеоборотныеАктивы" Тогда 
			глУстановкаБазЕд(Контекст,,ТМЦ.БазЕдиница);		
			Ит = СоздатьОбъект("БухгалтерскиеИтоги");
			Ит.ИспользоватьРазделительУчета(Фирма);
			Ит.ИспользоватьСубконто(ВидыСубконто.НеоборотныеАктивы, ТМЦ, 2);
			Ит.ВыполнитьЗапрос(?(Выбран()=1,ТекущийДокумент(),ДатаДок),,ТМЦ.Счет);
			СумПерв = глПересчет(Ит.СНД(),Гривня,Валюта,Курс,ДатаДок);
			Если СумПерв = 0 Тогда
				ЦенаБезНДС = глПересчет(ТМЦ.Цена_Прих,Гривня,Валюта,ДатаДок,Курс);
			Иначе
				ЦенаБезНДС = СумПерв;
			КонецЕсли;                                                                                                                              
			Кво = 1;
			глВыч_суммы_накл(Контекст,-1);		
		КонецЕсли;
		глПриИзмененииТовара(Контекст);
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ДатьСкидку()
	Перем ВыбЗначение, ВыбПроцент, ВыбСумма;
	ВариантыСкидок = СоздатьОбъект("СписокЗначений");
	ВариантыСкидок.ДобавитьЗначение(1,"&Процентом по накладной");
	ВариантыСкидок.ДобавитьЗначение(2,"Суммой по &накладной");
	ВариантыСкидок.ДобавитьЗначение(3,"Процентом по &строке");
	ВариантыСкидок.ДобавитьЗначение(4,"Суммой по строке");

	Если ВариантыСкидок.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;

	Если (ВыбЗначение = 1) или (ВыбЗначение = 3) Тогда
		Если ВвестиЧисло(ВыбПроцент,"Введите процент:",6,2) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	ИначеЕсли (ВыбЗначение = 2) или (ВыбЗначение = 4) Тогда
		Если ВвестиЧисло(ВыбСумма,"Введите сумму:",12,2) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;

	Если ВыбЗначение = 1 Тогда
	    // процентом по накладной
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Скидка = Окр(СуммаБезСкидки * ВыбПроцент / 100,2);
			глВыч_суммы_накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли ВыбЗначение = 2 Тогда
		// суммой по накладной
		ОсталосьРаспределить = ВыбСумма;

		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если НомерСтроки = КоличествоСтрок() Тогда
			    // в последнюю строку - то что осталось
				Скидка = ОсталосьРаспределить;
			Иначе
				// пропорционально
				Коэф = ?(Итог("СуммаБезСкидки") = 0,0,СуммаБезСкидки/Итог("СуммаБезСкидки"));
				Скидка = Окр(ВыбСумма * Коэф,2);
				ОсталосьРаспределить = ОсталосьРаспределить - Скидка;
			КонецЕсли;
			глВыч_суммы_накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли ВыбЗначение = 3 Тогда
		// процентом по строке
		Скидка = Окр(СуммаБезСкидки * ВыбПроцент / 100,2);
		глВыч_суммы_накл(Контекст,2);
	ИначеЕсли ВыбЗначение = 4 Тогда
		// суммой по строке
		Скидка = ВыбСумма;
		глВыч_суммы_накл(Контекст,2);
	КонецЕсли;
КонецПроцедуры

// ===============================
// Предопределенные процедуры

// ===============================
Процедура ВводНового(Скопирован) //Предопределенная процедура

	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;         
	
	ДатаДок=РабочаяДата();
	Контрагент=глВосстановитьЗначение(,"ОсновнойПокупатель");
	ИзмКонтрагент();          	                                      
	
	ЧтоПродаем = Перечисление.ЧтоПродаем.ТМЦ;
	
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Дата_Курса = ДатаДок;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);

	СрокРезервирования=глВосстановитьЗначение(,"ОсновнойСрокРезервирования");
	ИзмДоговор();                                                              	
	УстВидТорговли();
	ВыбранВидТорговли();
КонецПроцедуры

// ===============================
Процедура ВводНаОсновании(ДокОснование) //Предопределенная процедура
	
	ВидДок = ДокОснование.Вид();
	Если Найти("Договор,Заказ",ВидДок)=0 Тогда
		Предупреждение("Счет-фактуру нельзя вводить на основании данного вида документов!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	                                                	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	ИзмДоговор();
	
	Если ПустоеЗначение(Валюта)=1 Тогда
		Если глЕстьРеквизитШапки("Валюта",ДокОснование.Вид()) = Да Тогда
			Валюта = ДокОснование.Валюта;
			Курс   = глКурсДляВалюты(Валюта,ДатаДок);   
		Иначе	
			Валюта     = Гривня;
			Дата_Курса = ДатаДок;
			Курс       = глКурсДляВалюты(Валюта,ДатаДок);
		КонецЕсли;	
	КонецЕсли;
	
	// торговые реквизиты
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		Если ПустоеЗначение(Контрагент)=0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);    
		КонецЕсли;	    
	КонецЕсли;          
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
	КонецЕсли;
	
	СрокРезервирования=глВосстановитьЗначение(,"ОсновнойСрокРезервирования");	
	УстВидТорговли();	
	ВыбранВидТорговли();
	ЧтоПродаем = Перечисление.ЧтоПродаем.ТМЦ;
	
	Если ДокОснование.Вид() = "Заказ" Тогда
		Если (ПустоеЗначение(ДокОснование.Контрагент)=1) Тогда
			глКомментарий("Счет-фактуру можно вводить только на основании заказа от контрагента!",0,,"!!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;	
		Договор = ДокОснование;
	    // табл. часть
	    ДокОснование.ВыбратьСтроки();
		Пока ДокОснование.ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ДокОснование.Кво) = 1 Тогда
				Продолжить;
			КонецЕсли;
			глДобавитьТоварВДокумент(Контекст,ДокОснование.Продукция,ДокОснование.Кво,);
			Ед 			= ДокОснование.Ед;
			глИзмЕдин(Контекст);
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии() //Предопределенная процедура
	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;                                                                                     
                                                    
	Форма.ВидТары.ВыполнятьФормулуТолькоПриИзменении(1);	
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
//		Форма.кДействия.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.кОсн.Доступность(0);
		Форма.кВалюта.Доступность(0);

		Форма.кПодбор.Доступность(0);
		
		Форма.кДатьСкидку.Доступность(0);                                
		Форма.КнопкаПоУмолчанию("кЗакрыть");
		СписокДействий = глПолучитьСписокДействий(?(ЧтоПродаем=Перечисление.ЧтоПродаем.ТМЦ,"ТоварныйСостав,","") + "
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
		СписокДействий = глПолучитьСписокДействий(?(ЧтоПродаем=Перечисление.ЧтоПродаем.ТМЦ,"ТоварныйСостав,","") + "
			|ОбновлениеЦен,
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");		
	КонецЕсли;
	ИзмСрокРезерва();
	глУстВидимостьЦен(Контекст);
	СтараяДата = ДатаДок;
	СтарыйКонтрагент = Контрагент;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	Если ПустоеЗначение(ВидТары) = 1 Тогда
		ВидТары = Перечисление.ВидыТары.Покупная;		
	КонецЕсли;	
	УстВидТорговли();
	ВыбранВидТорговли();
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="Строка" Тогда
			Если ВРег(Форма.Параметр)="БЫСТРАЯПЕЧАТЬ" Тогда
				Печать(1);
				СтатусВозврата(0); 
				Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	                 
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;
	
	СтарЧтоПродаем = ЧтоПродаем;
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	// Инициализируем список действий по кнопке "Действия"
КонецПроцедуры //При открытии

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Если Рекв = "РСчет" Тогда
		СтарРСчет = РСчет;
	ИначеЕсли Рекв="ВидНДС" Тогда
	    глВыбратьНДС(Контекст,Рекв);                
		ИзмРеквизитШапки("ВидНДС");
		Флаг = 0;         
	ИначеЕсли Рекв="ЧтоПродаем" Тогда                  
		СтарЧтоПродаем = ЧтоПродаем;
		спЧтоПродаем.ВыбратьЗначение(ЧтоПродаем,,,,2);                
		Флаг = 0;          
		ИзмЧтоПродаем();
	КонецЕсли;
КонецПроцедуры
// ===============================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры //Обработка подбора

// ===============================
Процедура ПриЗаписи() //Предопределенная процедура
	глПроверкаДатыДок(Контекст,"Запись");
	Автор = глПользователь;             
	ОтборЗаказаКонтрагент = ?(Договор.Выбран() = 0, Контрагент, 0);
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()
КонецПроцедуры	


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции


// ===============================
	                                         
спЧтоПродаем = СоздатьОбъект("СписокЗначений");

спЧтоПродаем.ДобавитьЗначение(Перечисление.ЧтоПродаем.ТМЦ);
спЧтоПродаем.ДобавитьЗначение(Перечисление.ЧтоПродаем.НеоборотныеАктивы);
	
ЗаполнитьСпВидТорговли();
ВыбранВидТорговли();
