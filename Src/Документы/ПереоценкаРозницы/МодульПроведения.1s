Перем ПересчКво, ПервыйДок, ПоЗаказу;
Перем Товар;
Перем СчетНДС,СубконтоНДС1,СубконтоНДС2; // для бартера
Перем ВремРег;       
Перем спОтбор;               
Перем НДСПервоеСобытие, НДСВтороеСобытие, ВзаиморасчетыГрн; // для исправления ошибок при округлениях
Перем ТБДоступно;
Перем ИтогСуммаСНДС, ИтогНДС, ИтогСуммаСНДСН, ИтогНДСН;
Перем СписДляУстановкиЦен, ГруппаДляУстЦ;

// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
//	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Фирма,"Фирма");
    глВыбранЛи(Контрагент,"Контрагент");
    глВыбранЛи(МестоХранения,"Место хранения");
    глВыбранЛи(Валюта,"Валюта");
    глВыбранЛи(ВидТорговли,"Вид торговли");
    глВыбранЛи(СубконтоВалДох,"Субконто валовых доходов");
    глВыбранЛи(Подразделение,"Подразделение");
    глВыбранЛи(СчетКонтрагента,"Счет контрагента");
	Если глВсеВыбрано = 1 Тогда
		Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
			глКомментарий("Счет контрагента ("+СчетКонтрагента+") не является счетом учета взаиморасчетов!",1,,"!");
		    глВсеВыбрано = 0;
		ИначеЕсли (Валюта = Гривня)
		И (СчетКонтрагента.Валютный = 1) Тогда
			глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
			глВсеВыбрано = 0;       
		ИначеЕсли (Валюта <> Гривня)
		И (СчетКонтрагента.Валютный = 0) Тогда
			глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;	
	КонецЕсли;	
  	глВсеВыбрано = ?(глВсеВыбрано = 0, 0, глПроверкаДублейСтрок(Контекст));
    Если МестоХранения.ВидСклада = Розничный Тогда
        глКомментарий("Накладная предназначена для отгрузки ТМЦ с ОПТОВОГО склада, а не РОЗНИЧНОГО (магазина)!",0,,"!");
        глКомментарий("Проверьте параметры склада!",2);
        глВсеВыбрано = 0;
	КонецЕсли;
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		глВыбранЛи(Касса,"Касса");
	КонецЕсли;          
	глВыбранЛи(ВидНДС,"Вид НДС");
	Если Валюта <> Гривня Тогда
	    Если ВидТорговли <> Перечисление.ВидыТорговли.Предоплата Тогда
			глКомментарий("Продавать за валюту можно только на условиях предоплаты!",0,,"!");
    		глВсеВыбрано = 0;
		КонецЕсли;           
		Если ВидНДС = ОсновнаяСтавкаНДС Тогда
			// это явная ошибка, запрещаем проведение 
        	глКомментарий("При продаже за валюту нельзя указывать НДС!",0,,"!");
    		глВсеВыбрано = 0;
		ИначеЕсли ВидНДС <> ЛьготнаяСтавкаНДС Тогда
			// просто предупредим, но жестко не запрещаем
		    глКомментарий("Отгрузка за валюту вероятно должна проходить по ставке НДС """+ЛьготнаяСтавкаНДС+"""!",2)
		КонецЕсли;	
    КонецЕсли;    
	глПроверкаНДСВДокументе(Контекст, Итог("СуммаБезНДС"), Итог("СуммаСНДС"), Итог("НДС"));
    Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
    глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
    глВыбранЛи(ТМЦ.ВидДеятельности,"Вид деятельности в ТМЦ",НомерСтроки);  
	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
	ЕстьКалькулируемыеУслуги = 0;
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		Сообщить("В строке: " + НомерСтроки + " указана услуга");
		глВсеВыбрано = 0;
	КонецЕсли;	
	
	Если глВсеВыбрано = 1 Тогда
		Если ТМЦ.ПринадлежитГруппе(ГруппаДляУстЦ) = 1 Тогда
			СписДляУстановкиЦен.НоваяСтрока();
			СписДляУстановкиЦен.ТМЦ = ТМЦ;
			СписДляУстановкиЦен.Ед = Ед;
			СписДляУстановкиЦен.Цена = НоваяЦена;
		КонецЕсли;
	КонецЕсли;
	
    Возврат глВсеВыбрано;
КонецФункции
                       
// ===============================
Процедура РассчитатьШапку()
	// определяем заказ в документе для проводок по услугам
	ПоЗаказу = глПолучитьЗаказ(Договор);

	ПервыйДок = ?(ПустоеЗначение(Договор)=1,ПолучитьПустоеЗначение("Документ"),Договор);
	СчетНДС = СчетПоКоду("64.1.5");
	СубконтоНДС1 = ВидНДС;
	СубконтоНДС2 = 0;
	// налоговый кредит
	Если Константа.НДСпоВходящимНН = Да Тогда
		// проводку по налоговому кредиту сделаем в 
		// документе ЗаписьКнигиПриобретения
		СчетНДС = СчетПоКоду("64.4.2");
		СубконтоНДС1 = Контрагент;
		СубконтоНДС2 = ПервыйДок;
	КонецЕсли;
	ИтСуммаБезНДС = Итог("СуммаБезНДС");
	
	// расчет итогов по взаиморасчетам
	ФлагОтгрузки = 1;	
	ЗнакОплаты = +1; 
	
	ВремРег = СоздатьОбъект("Регистры");
	// взаиморасчеты с поставщиком        
	глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,ЗнакОплаты,Контрагент, ПервыйДок, Валюта);
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда    
		глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,-ЗнакОплаты,Контрагент, ПервыйДок, Валюта);
	КонецЕсли;		
КонецПроцедуры

// формирует проводки по списанию ТМЦ
// ===============================
Процедура ПроводкиТовар(СписываемыйТМЦ,СчетП,СчетПТары,СписываемыйОстаток,СписываемаяСтоимость,ПоставкаП)
	Если (ВидТары = Перечисление.ВидыТары.Залоговая)
	И (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
		СубконтоДебетТары1 = ?(СчетП=СчетПоКоду("2843"),Контрагент,МестоХранения);
		СубконтоКредитТары1 = ?(СчетПТары=СчетПоКоду("2843"),Контрагент,МестоХранения);
		// проводки для тары
		глПроводка(Контекст,СчетП,СчетПТары,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток, СубконтоДебетТары1,СписываемыйТМЦ,ПоставкаП,
		СубконтоКредитТары1,СписываемыйТМЦ,ПоставкаП, ,,"НК",1,0);
		глПроводка(Контекст,СчетПТары,СчетП,СписываемаяСтоимость,"Себестоимость - передача",СписываемыйОстаток, СубконтоКредитТары1,СписываемыйТМЦ,ПоставкаП,
		СубконтоДебетТары1,СписываемыйТМЦ,ПоставкаП, ,,"НК",1,0);		
	Иначе	
		// проводки для обычного ТМЦ
		СчРеал = глСчетРеализации(СписываемыйТМЦ);
		// проводки по реализации ...
		// обычных ТМЦ 
		Если (СписываемыйТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция) Или (СписываемыйТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Товар) 
				Или (ИспользоватьСчетаРасходов = Класс9) Тогда
			глПроводка(Контекст,СчРеал,СчетП,СписываемаяСтоимость,"Себестоимость возврат",СписываемыйОстаток,СписываемыйТМЦ.ВидДеятельности,Подразделение,,
			?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),СписываемыйТМЦ,ПоставкаП, ,,"НК",1,0);
			глПроводка(Контекст,СчРеал,СчетП,-СписываемаяСтоимость,"Себестоимость реализация",-СписываемыйОстаток,СписываемыйТМЦ.ВидДеятельности,Подразделение,,
			?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),СписываемыйТМЦ,ПоставкаП, ,,"НК",1,0);			
		Иначе
			глПроводкаПоЗатратам(Контекст,СчРеал,СчетП,СписываемаяСтоимость,"Себестоимость возврат",СписываемыйОстаток, СписываемыйТМЦ.ВидДеятельности,Подразделение,Константа.ВидЗатратСебестРеалПроизвЗапасов,
			?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),СписываемыйТМЦ,ПоставкаП, ,, "НК",1,0);
			глПроводкаПоЗатратам(Контекст,СчРеал,СчетП,-СписываемаяСтоимость,"Себестоимость реализация",-СписываемыйОстаток, СписываемыйТМЦ.ВидДеятельности,Подразделение,Константа.ВидЗатратСебестРеалПроизвЗапасов,
			?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),СписываемыйТМЦ,ПоставкаП, ,, "НК",1,0);			
		КонецЕсли;
		// для возвратной тары сделаем проводку по забалансовому счету
		Если (ВидТары = Перечисление.ВидыТары.Возвратная)
		И (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
			глПроводка(Контекст,СчетПТары,,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток, Контрагент,СписываемыйТМЦ,,
			,,, ,,"НК",1,0);
			глПроводка(Контекст,,СчетПТары,СписываемаяСтоимость,"Себестоимость передача",СписываемыйОстаток, ,,,
			Контрагент,СписываемыйТМЦ,, ,,"НК",1,0);			
		КонецЕсли;	
	Конецесли;

КонецПроцедуры

// ===============================
Процедура ДвиженияПартии() 
//Перем ИтогСуммаСНДС, ИтогНДС;	// базы распределения сумм

	глКомментарий("Выполняются движения партий ТМЦ",2);
	ФлагПрихода = 1;

	// инициализация алгоритмов корректого распределения
	глОчиститьКлючОкр("Взаим");
	глОчиститьКлючОкр("ВзаимН");
	глОчиститьКлючОкр("НДС");
	глОчиститьКлючОкр("НДСН");
	глОчиститьКлючОкр("НДСперв");

	СтНДС = 1 + ВидНДС.Ставка.Получить(ДатаДок);
	// расчитаем базы распределения 
	//глОпределитьБазыРаспределения(Контекст, ИтогСуммаСНДС, ИтогНДС);
	ИтогСуммаСНДС		= глПересчет(ИтогСуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
	ИтогСуммаСНДСН		= глПересчет(ИтогСуммаСНДСН,Валюта,ДатаДок,Гривня,ДатаДок);
	ВзаиморасчетыГрн 	= ИтогСуммаСНДС;
	ВзаиморасчетыГрнН 	= ИтогСуммаСНДСН;
	ИтогНДС 			= глПересчет(ИтогНДС      ,Валюта,ДатаДок,Гривня,ДатаДок);
	ИтогНДСН 			= глПересчет(ИтогНДСН 	 ,Валюта,ДатаДок,Гривня,ДатаДок);	
	НДСПоВзаиморасчетамН = ИтогНДСН;
	НДСпоВзаиморасчетам	= ИтогНДС;
	ФирмаПрихода = Контрагент.ФирмаПрихода.Получить(ДатаДок);
	СкладПрихода = Контрагент.МестоХранения.Получить(ДатаДок);	

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
//		Признак = ?(СпецВозврат = 1, "О", "");
		Признак = ?(ПустоеЗначение(ВУП) = 1, НетУп, ВУП);

		ПриходОстатокТовара = Кво * Ед.Коэффициент;                      

		// Приходуем не проверяя:
		МестоХраненияП = ?(глПартионныйУчетПоСкладам = Да,?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),0);

		Если ТолькоДвиженияТМЦ = 0 Тогда
			// движения по регистру Остатки                                                                          
			глПровестиОстатки(Контекст, ВремРег, Фирма, ?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад), ТМЦ, ВУП ,ПриходОстатокТовара, ФлагПрихода, 1,,,,,,,,,,,
				ФирмаПрихода,СкладПрихода);
			// движения по регистру Остатки                                                                          
			глПровестиОстатки(Контекст, ВремРег, Фирма, ?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад), ТМЦ, ВУП ,ПриходОстатокТовара, 0, 0,,,,,,,,,,,
				ФирмаПрихода,СкладПрихода);
		КонецЕсли;

		МетодРасчетаСебестоимости = глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок);				
		Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
			ПоставщикП = 0;
			ПоставкаП = 0;
			ПрихДокументП = 0;
		Иначе
			ПоставщикП = Контрагент;
			ПоставкаП = ТекущийДокумент();
			ПрихДокументП = ТекущийДокумент();
		КонецЕсли;

		// СуммаУчБезНДС - в гривнях
		ПриходСтоимость = СуммаУчБезНДС;
		ПриходПродСтоимость = 0;

		// Сумму по строке пересчитываем по курсу документа в гривни 
		ПострСуммаСНДС	= глПересчет(СуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
		ПострСуммаСНДСН	= глПересчет(НоваяСумма,Валюта,ДатаДок,Гривня,ДатаДок);
		ПострНДС		= глПересчет(НДС      ,Валюта,ДатаДок,Гривня,ДатаДок);
		ПострНДСН		= глПересчет(НоваяСумма - НоваяСумма /  СтНДС, Валюта,ДатаДок,Гривня,ДатаДок);
		Если ((ВидТары <> Перечисление.ВидыТары.Залоговая) Или (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара)) И (ТолькоДвиженияТМЦ = 0) Тогда
			// не залоговая тара, округляем с учетом накопленных погрешностей округления
			ПострСуммаСНДС	= глОкрКорр("Взаим", ?(ИтогСуммаСНДС = 0, 0, ВзаиморасчетыГрн * ПострСуммаСНДС / ИтогСуммаСНДС),2);
			ПострСуммаСНДСН = глОкрКорр("ВзаимН", ?(ИтогСуммаСНДСН = 0, 0, ВзаиморасчетыГрнН * ПострСуммаСНДСН / ИтогСуммаСНДСН),2);
			ПострНДС		= глОкрКорр("НДС", ?(ИтогНДС = 0, 0, НДСпоВзаиморасчетам * ПострНДС / ИтогНДС),2);
			ПострНДСН		= глОкрКорр("НДСН", ?(ИтогНДСН = 0, 0, НДСпоВзаиморасчетамН * ПострНДСН / ИтогНДСН),2);
			ПострНДСПерв	= глОкрКорр("НДСперв", ?(НДСпоВзаиморасчетам = 0, 0, НДСПервоеСобытие * ПострНДС / НДСпоВзаиморасчетам),2);
		Иначе
			ПострНДСПерв	= 0;
		КонецЕсли;
		ПострСуммаБезНДС 	= ПострСуммаСНДС - ПострНДС;
		ПострСуммаБезНДСН 	= ПострСуммаСНДСН - ПострНДСН;
		ОсталосьСуммаСНДС	= ПострСуммаСНДС;
		ОсталосьСуммаСНДСН	= ПострСуммаСНДСН;
		ОсталосьСуммаБезНДСН= ПострСуммаБезНДСН;

		СчетТМЦ = ТМЦ.Счет;
		Доход = ОсталосьСуммаСНДС - ПриходСтоимость; // сторнируем доход
		ДоходН = ОсталосьСуммаСНДСН - ПриходСтоимость; // сторнируем доход
		// вторая часть сложной проводки по доходам
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция Тогда
			ВидТМЦ = "продукция";
			СчетДоходов = "70.1"
		ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Товар Тогда
			ВидТМЦ = "запасы";
			СчетДоходов = "70.2"
		ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			ВидТМЦ = "услуги";
			СчетДоходов = "70.3"
		Иначе
			ВидТМЦ = "другие оборотные активы";
			СчетДоходов = "71.2"
		КонецЕсли;
		
		// сразу сделаем проводки по доходам, при формировании они сами свернуться
		Если (ВидТары <> Перечисление.ВидыТары.Залоговая) Или (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			// залоговая тара не проходит по взаиморасчетам
			глПроводка(Контекст,"70.4",,ПострСуммаСНДС,"Возврат от покупателя",, ТМЦ.ВидДеятельности,Подразделение,?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),
			,,, ,,"НК",1,"Реализация");			
			глПроводка(Контекст,,СчетДоходов,ПострСуммаСНДСН,"Реализация: "+ВидТМЦ,, ,,,
			ТМЦ.ВидДеятельности,Подразделение,?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад), ,,"НК",1,"Новая реализация");
		КонецЕсли;		
		// одновременно и отгрузка и оплата, налоговые обязательства показываем на всю сумму
	    глПроводка(Контекст,"70.4",,-ПострНДС,"НДС: оплата наличными: сторно",, ТМЦ.ВидДеятельности,Подразделение,?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),
		,,, ,,"НК",1,"НДС первого события");
	    глПроводка(Контекст,СчетДоходов,,ПострНДСН,"НДС: оплата наличными: оплата",, ТМЦ.ВидДеятельности,Подразделение,?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),
		,,, ,,"НК",1,"НДС первого события новая реализация");
		// определим код операции
		Если (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара)
		и (ВидТары <> Перечисление.ВидыТары.Покупная) Тогда
			// залоговая или возвратная тара
			Если ВидТары = Перечисление.ВидыТары.Залоговая Тогда
				// залоговая тара
				КодОперации = ВозвратТарыЗалоговойОтПокупателя;
			Иначе
				// возвратная тара
				КодОперации = ВозвратТарыВозвратнойОтПокупателя;
			КонецЕсли;
		Иначе
			// ТМЦ или покупная тара
			// с покупной тарой работаем, как с ТМЦ
			КодОперации = ВозвратОтПокупателя;
		КонецЕсли;

		
		//--- УМК Сандомирский В.Ю. (30.09.14) в остатки тмц в партии ТМЦ для приходования
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 			
			ТМПЦПрих = ?(ПустоеЗначение(ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляПрихода.Получить(ДатаДок), ТМЦ);
			ТМЦПартии = ТМПЦПрих; 			
		Иначе		
			ТМЦПартии = ТМЦ;	
		КонецЕсли;	

		СуммаУпаковки = 0;
		Если СпецВозврат = 1 Тогда //--- УМК Сандомирский В.Ю. (10.02.15) 
			Если ПустоеЗначение(ДокПродажи) <> 1 Тогда
				ЦенаУпаковки = глПолучитьЦенуУпаковки(ТМЦПартии,ВУП,ДокПродажи.ДатаДок);
				СуммаУпаковки = ЦенаУпаковки * ПриходОстатокТовара;
			КонецЕсли;	
		КонецЕсли;
		
		глПровестиПартию(Контекст, 1, 1, Фирма, ТМЦПартии, СчетТМЦ, МестоХраненияП, ПоставщикП,    //--- УМК Сандомирский В.Ю. (30.09.14) ТМЦПартии в остатки тмц в партии ТМЦ для приходования
			ПоставкаП, ПрихДокументП, ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость, 
			КодОперации, 1, ПострСуммаСНДС, Доход,,Признак,,ЧерезКого, ДопКво,СуммаУпаковки,ФирмаПрихода, СкладПрихода, , , ТолькоДвиженияТМЦ); //--- УМК Сандомирский В.Ю. (10.02.15) 
		глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦПартии, СчетТМЦ, МестоХраненияП, ПоставщикП,    //--- УМК Сандомирский В.Ю. (30.09.14) ТМЦПартии в остатки тмц в партии ТМЦ для приходования
			ПоставкаП, ПрихДокументП, ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость, 
			КодОперации, 1, ПострСуммаСНДСН, ДоходН,,Признак,,ЧерезКого, ДопКво,СуммаУпаковки,ФирмаПрихода, СкладПрихода,,, ТолькоДвиженияТМЦ); //--- УМК Сандомирский В.Ю. (10.02.15) 
	
		Если (ВидТары <> Перечисление.ВидыТары.Покупная)
		и (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
			Если ВидТары = Перечисление.ВидыТары.Залоговая Тогда
				СчетПТары = ГлПолучитьСчетУчетаТМЦ("ТараЗалоговая",ТМЦ);
			Иначе
				СчетПТары = СчетПоКоду("ТВ");
				ПриходНДС = 0;
			КонецЕсли;                       
			// Параметры проведения для возвратной тары
			МестоХраненияП = Контрагент;
			ПрихДокументП = ТекущийДокумент();
			ПриходПродСтоимость = СуммаСНДС;
			глПровестиПартию(Контекст, 0, 1, Фирма, ТМЦ, СчетПТары, МестоХраненияП, ПоставщикП, 
				ПоставкаП, ПрихДокументП,ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость,
				КодОперации,0 ,0, 0,,Признак,,ЧерезКого,,,ФирмаПрихода, СкладПрихода,,,ТолькоДвиженияТМЦ);
		КонецЕсли;	
			
		Если ТолькоДвиженияТМЦ = 0 Тогда
			ПроводкиТовар(ТМЦПартии,СчетТМЦ,СчетПТары,-ПриходОстатокТовара,-ПриходСтоимость,ПоставкаП);//--- УМК Сандомирский В.Ю. (30.09.14) ТМЦПартии в остатки тмц в партии ТМЦ для приходования		
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// ===============================
// Назначение:
//		Отражает движения документа в регистрах
// ===============================
Процедура ДвиженияВзаиморасчеты()
	// взаиморасчеты
	ФлагОтгрузки = 1;
	ЗнакОплаты = -1; 
	ФлагВозврата = 1;
	тбСуммыПогашения = глПолучитьСуммыДляПогашения(Контекст, Фирма, Валюта);
	Если тбСуммыПогашения.КоличествоСтрок() > 0 Тогда
		ФлагВозврата = тбСуммыПогашения.ПолучитьЗначение(1, "ЗнакОплаты"); 
	КонецЕсли;

	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРег, Фирма, ЗнакОплаты, Контрагент, ПервыйДок, Валюта);	
	Если тбСуммыПогашения.Итог("СуммаСНДС") = 0 Тогда
		Если тбДолги.КоличествоСтрок() = 0 Тогда
			тбДолги.ПолучитьСтрокуПоНомеру(1);
			Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, Контрагент, Договор, ВидНДС, тбДолги.Счет, тбДолги.КредДокумент, Валюта, 0.01, 0.01, ВозвратПостОтгрузки, 0, 0, 1);
			Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, Контрагент, Договор, ВидНДС, тбДолги.Счет, тбДолги.КредДокумент, Валюта, -0.01, -0.01, ВозвратПостОтгрузки, 0, 0, 1);
		Иначе			
			Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, Контрагент, Договор, ВидНДС, ТекущийДокумент(), ТекущийДокумент(), Валюта, 0.01, 0.01, ВозвратАвансовойОплаты, 0, 0, 1);
			Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, Контрагент, Договор, ВидНДС, ТекущийДокумент(), ТекущийДокумент(), Валюта, -0.01, -0.01, ВозвратАвансовойОплаты, 0, 0, 1);
		КонецЕсли;		
	Иначе
		глПровестиПоВзаиморасчетам(Контекст, ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, Фирма, тбДолги, тбСуммыПогашения, Валюта,Контрагент, ПервыйДок, ВидТорговли, ДокументОснование);
	КонецЕсли;	

	СтНДС = 1 + ВидНДС.Ставка.Получить(ДатаДок);
	// проводки по взаиморасчетам
	ИтогСуммаСНДС = 0; ИтогНДС = 0; ИтогСуммаСНДСН = 0; ИтогНДСН = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если (ВидТары <> Перечисление.ВидыТары.Залоговая) Или (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			ИтогСуммаСНДС = ИтогСуммаСНДС + СуммаСНДС;
			ИтогНДС = ИтогНДС + НДС;
			ИтогСуммаСНДСН = ИтогСуммаСНДСН + НоваяСумма;
		КонецЕсли;
	КонецЦикла;
	ИтогНДСН = ИтогСуммаСНДСН - ИтогСуммаСНДСН / СтНДС;

	глПроводка(Контекст,,СчетКонтрагента,ИтогСуммаСНДС,"Возврат от покупателя",, ,,,
	Контрагент,Договор ,,,,"НК",1,"Реализация",1);
	
	глПроводка(Контекст,СчетКонтрагента,,ИтогСуммаСНДСН,"Реализация",, Контрагент,Договор,,
	,,, ,,"НК",1,"Новая реализация",1);

	глПроводка(Контекст,,"6415", -ИтогНДС,"НДС: первое событие",, ,,,
		ВидНДС,,, ,,"НК",1,"НДС первого события",1);

	глПроводка(Контекст,,"6415", ИтогНДСН,"НДС: первое событие",, ,,,
		ВидНДС,,, ,,"НК",1,"НДС первого события новая реализация",1);
КонецПроцедуры //ДвиженияВзаиморасчеты

//=============================== + umk Товары в рознице передача
Процедура  ДвижениеТоварыВРознице()
	
	Если (ДатаДок < Константа.ДатаНачалаВеденияУчетаВРознице) ИЛИ (ПустоеЗначение(Константа.ДатаНачалаВеденияУчетаВРознице) = 1) Тогда
		Возврат;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл		
		
		Регистр.ТоварыВРознице.ПривязыватьСтроку(НомерСтроки);
		Регистр.ТоварыВРознице.Организация = Контрагент.ФирмаПрихода.Получить(ДатаДок);;
		Регистр.ТоварыВРознице.МестоХранения =  МестоХранения;
		Регистр.ТоварыВРознице.Номенклатура =  ТМЦ;
		
		//расход
		Регистр.ТоварыВРознице.СтоимостьПродажи = СуммаСНДС;
		Регистр.ТоварыВРознице.ДвижениеРасходВыполнить();
		
		//приход
		Регистр.ТоварыВРознице.СтоимостьПродажи = НоваяСумма;
		Регистр.ТоварыВРознице.ДвижениеПриходВыполнить();
		
		
	КонецЦикла;
	
	
КонецПроцедуры

//
// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	ГруппаДляУстЦ = Константа.ГруппаПродукцииДляЗаписиЦен;
	СписДляУстановкиЦен = СоздатьОбъект("ТаблицаЗначений");	
	СписДляУстановкиЦен.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	СписДляУстановкиЦен.НоваяКолонка("Ед", "Справочник.Единицы");
	СписДляУстановкиЦен.НоваяКолонка("Цена", "Число");
	
	Если ПроверкаШапки()=0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	// Вначале заполним СС в строках. Возьмём из РН
	ТЗРН = СоздатьОбъект("ТаблицаЗначений");
	ТЗСС = СоздатьОбъект("ТаблицаЗначений");
	ТЗСС.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗСС.НоваяКолонка("РН", "Документ");
	ТЗСС.НоваяКолонка("Ключ", "Строка");
	ТЗСС.НоваяКолонка("Кво", "Число");
	ТЗСС.НоваяКолонка("Сумма", "Число");
	
	ВыгрузитьТабличнуюЧасть(ТЗРН,"ДокПродажи,Кво");
	ТЗРН.Свернуть("ДокПродажи", "Кво");
	ТЗРН.ВыбратьСтроки();
	РегП = СоздатьОбъект("Регистр.Партии");
	Пока ТЗРН.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗРН.ДокПродажи) = 0 Тогда
			Если ТЗРН.ДокПродажи.Проведен() = 1 Тогда
			    РегП.ВыбратьДвиженияДокумента(ТЗРН.ДокПродажи);
				Пока РегП.ПолучитьДвижение() = 1 Цикл
					ТЗСС.НоваяСтрока();
					ТЗСС.ТМЦ = РегП.ТМЦ;
					ТЗСС.РН = ТЗРН.ДокПродажи;
					ТЗСС.Кво = РегП.ОстатокТовара;
					ТЗСС.Сумма = РегП.Стоимость;
					ТЗСС.Ключ = ТЗСС.ТМЦ.Код + "**" + ТЗСС.РН.НомерДок + "**" + Строка(ТЗСС.РН.ДатаДок) + "**" + ТЗСС.РН.Вид();
				КонецЦикла;
			КонецЕсли;		    
		КонецЕсли;
	КонецЦикла;
	ТЗСС.Свернуть("ТМЦ,ДокПродажи,Ключ", "Кво,Сумма");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ДокПродажи) = 0 Тогда
		    Ключ = ТМЦ.Код + "**" + ДокПродажи.НомерДок + "**" + Строка(ДокПродажи.ДатаДок) + "**" + ДокПродажи.Вид();
			Стр = 0;
			Если ТЗСС.НайтиЗначение(Ключ, Стр, "Ключ") = 1 Тогда
			    ТЗСС.ПолучитьСтрокуПоНомеру(Стр);
				ЦенаУчБезНДС = ТЗСС.Сумма / ?(ТЗСС.Кво = 0, 1, ТЗСС.Кво);
				СуммаУчБезНДС = ЦенаУчБезНДС * Кво * Коэффициент;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	
	РассчитатьШапку();
	Если ТолькоДвиженияТМЦ = 0 Тогда
		ДвиженияВзаиморасчеты();
	КонецЕсли;
	ВремРег.Актуальность(1);
	ДвиженияПартии();
	ВремРег.Актуальность(0);

	Если ТолькоДвиженияТМЦ = 0 Тогда	
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если ПроверкаСтроки()=0 Тогда
			    глНеПроводить(Контекст);
			    Возврат;
			КонецЕсли;
		КонецЦикла;	   
		глНачислитьБонусы(Контекст, Контрагент, Договор, -1);
		глНачислитьБонусы(Контекст, Контрагент,  Договор, 1);
		глЗаписатьПроводкиВОперацию(Контекст);
	
		НачатьТранзакцию();
		Если СтатусВозврата() = 1 Тогда
			глУстановитьЦеныПоСписку(Контекст, СписДляУстановкиЦен, Гривня);
		КонецЕсли;
		ЗафиксироватьТранзакцию();	
	КонецЕсли;
	
	ДвижениеТоварыВРознице(); //+umk
	
	Операция.СуммаОперации = Итог("СуммаСНДС");
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры