Перем Валюта_Прежн, Курс_Прежн;
Перем СтараяДата;      
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем НачальнаяДатаДокумента;
Перем СтруктИзменений;
Перем СписокДействий;

Перем СпВидыУпаковкиГлобальный; //--- УМК Сандомирский В.Ю. (31.08.14)
Перем СпВидыУпаковкиЛокальный;  //--- УМК Сандомирский В.Ю. (31.08.14)

//====================================================================== //--- УМК Сандомирский В.Ю. (29.01.15)
Процедура НайтиРН() Далее
Процедура ИзмНоваяЦена() Далее

Процедура ДобавитьВСписок(Элт, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

// ===============================
Функция УстДоступность()
//	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки); //--- УМК Сандомирский В.Ю. (08.01.15)
	Форма.Заголовок(глЗаголовок(Контекст,"Переоценка в рознице"));
	Форма.Фирма.Видимость(0);
	// доступность в зависимости от слоя
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		ДостКасса = 1;
	Иначе
		ДостКасса = 0;
	КонецЕсли;
	Если Закл = "Основной" Тогда
		Форма.тКасса.Доступность(ДостКасса);
		Форма.Касса.Доступность(ДостКасса);
	КонецЕсли;  
	
	Если ДокПродажи.Выбран() = 1 Тогда
		Форма.ЦенаУчБезНДС.Доступность(0);
		Форма.СуммаУчБезНДС.Доступность(0);
	Иначе
		Форма.ЦенаУчБезНДС.Доступность(1);
		Форма.СуммаУчБезНДС.Доступность(1);
	КонецЕсли;
	Форма.ДопКво.Доступность(ТМЦ.УчетДопКво);
	
	Если (глПользователь.фПривелегииДатаЗапрета = 1) И  (Выбран() = 1) Тогда  //--- УМК Сандомирский В.Ю. (13.08.14)  возможно менять договор привелегированым
		Форма.кОсн.Доступность(1);
		Форма.кОК.Доступность(1);
	КонецЕсли;
	
	Возврат "";
КонецФункции

// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	//Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
	//	Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
	//		// определим ставку НДС
	//		Если ВидНДС = ОсновнаяСтавкаНДС Тогда
	//			СтавкаНДС = ТМЦ.СтавкаНДС;
	//		Иначе
	//			СтавкаНДС = ВидНДС;
	//		КонецЕсли;
	//		// устанавливаем цену без НДС
	//		ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
	//	КонецЕсли;
	//	глВыч_Суммы_Накл(Контекст,-1);
	//Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	//КонецЕсли;
КонецПроцедуры //ПересчетСтроки

// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
Процедура ИзмРеквизитШапки(Реквизит)
	// пересчитаем суммы НДС в строках табличной части
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	текОтвет = Вопрос("В документе изменен реквизит """+Реквизит+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текОтвет = "Да" Тогда
			// изменим цены
			ЦенаТовара = глВернутьЦену(ТМЦ, КатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
				// получим параметры цены
				ЦенаТовара.ИспользоватьДату(ДатаДок);
				ЦенаЦены   = ЦенаТовара.Цена;
				ВалютаЦены = ЦенаТовара.Валюта;
				ЕдЦены	   = ЦенаТовара.Единица;
				ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
				ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
				ПересчетСтроки(ЦенаЦены);                                                   
			Иначе
				ПересчетСтроки();
			КонецЕсли;
		ИначеЕсли Реквизит = "ВидНДС" Тогда
			ПересчетСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура ИзмВидТары()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("В документе изменен вид тары! Пересчитать суммы ?","Да+Нет") = "Да" Тогда
			текОсновнаяЦена = Константа.ОсновнаяЦена;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл    
				Если ПустоеЗначение(ТМЦ) = 1 Тогда
					Продолжить;
				ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					ПересчетСтроки();
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура УстСчетКонтрагента()
	СчетКонтрагента = СчетПоКоду(?(Валюта = Гривня, "36.1", "36.2"));	
КонецПроцедуры
                      
// ===============================
Процедура ИзмСчетКонтрагента()
	Если ПустоеЗначение(СчетКонтрагента) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбранный счет не является счетом учета взаиморасчетов!",1,,"!");
		СчетКонтрагента = 0;
	ИначеЕсли (Валюта = Гривня)
	И (СчетКонтрагента.Валютный = 1) Тогда
		глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
		СчетКонтрагента = 0;       
	ИначеЕсли (Валюта <> Гривня)
	И (СчетКонтрагента.Валютный = 0) Тогда
		глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
		СчетКонтрагента = 0;
	КонецЕсли;	
КонецПроцедуры
           
// ===============================
Процедура ВыборКассы()
	спКассы = глЗаполнитьСпКассы(Фирма,Валюта);
	спКассы.ВыбратьЗначение(Касса,,,,2);
КонецПроцедуры

// ===============================
Процедура ИзмКасса()
	Если Касса.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	Если Валюта <> Касса.Валюта Тогда
		Предупреждение("Выбранная Вами касса должна соответствовать валюте документа!");
		Касса = глПолучитьКассу(Фирма,Валюта);
	КонецЕсли;
	Если Касса.Безнал = 1 Тогда
		глКомментарий("Выбран безналичный счет!",1,,"!");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	УстСчетКонтрагента();
	ИзмКасса();
КонецПроцедуры	

// ===============================
Процедура ИзмВидТорговли()
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Если (Касса.Выбран() = 0) ИЛИ (Касса.Валюта <> Валюта) Тогда
		    Касса = глПолучитьКассу(Фирма,Валюта);
		КонецЕсли;
	Иначе
		Касса = 0;
	КонецЕсли;
КонецПроцедуры	
  
// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
КонецПроцедуры

// ===============================
Процедура ИзмДоговор()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			УстСчетКонтрагента();
			Если Валюта <> Валюта_Прежн Тогда
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
				КонецЕсли;
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;				
			ВидНДС = Договор.ВидНДС;
			ИзмРеквизитШапки("ВидНДС");
		КонецЕсли;
	КонецЕсли;    
	ИзмВидТорговли();
КонецПроцедуры 
                            
// ===============================
Процедура РассчитатьУчЦенуИСумму()
	ЦенаУчБезНДС = 0;
	СуммаУчБезНДС = 0;
	фНашли = 0;
	
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		// получаем нормы
		Если глПолучитьНормы(ТМЦ,,1,ДатаДок,глПолучитьЗаказ(Договор),,1)=0 Тогда
			// некалькулируемая услуга
		    Возврат;
		КонецЕсли;
		Рег = СоздатьОбъект("Регистр.Обороты");
		Рег.ВыбратьДвиженияДокумента(ДокПродажи);
		Пока Рег.ПолучитьДвижение()=1 Цикл
			Если Рег.ТМЦ <> ТМЦ Тогда
				Продолжить;
			КонецЕсли;          
			фНашли = 1;
			ПродКво 	= Рег.РасходКво;
			ПродСумма 	= Рег.РасходСум - Рег.Доход;
			Прервать;
		КонецЦикла;
	Иначе // товар или продукция		
		Если ПустоеЗначение(ДокПродажи) <> 1 Тогда		//--- УМК Сандомирский В.Ю. (29.01.15)
			Опер = ДокПродажи.Операция;
			Опер.ВыбратьПроводки();
			Пока Опер.ПолучитьПроводку()=1 Цикл
				Если Опер.Кредит.Субконто(2)<>ТМЦ Тогда
				    // не тот ТМЦ
				    Продолжить;
				КонецЕсли;
				Если Опер.Кредит.Счет = ТМЦ.Счет Тогда
				    // Дх К28.1
					фНашли = 1;
					ПродКво 	= Опер.Количество;
					ПродСумма 	= Опер.Сумма;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
			
	КонецЕсли;
	Если фНашли = 0 Тогда
	    глКомментарий("ТМЦ "+ТМЦ+" не списывался в расходной накладной номер "+ДокПродажи.НомерДок+" от "+ДокПродажи.ДатаДок+" !",1,,"!!");
		Возврат;
	КонецЕсли;
	Если ПродКво = 0 Тогда
	    Возврат;
	КонецЕсли;
	ЦенаУчБезНДС = Коэффициент*ПродСумма/ПродКво;
	// цена округлена до 2 знаков, сумму рассчитаем точнее
	СуммаУчБезНДС = Кво*Коэффициент*ПродСумма/ПродКво;
	ДокПродажи.ВыбратьСтроки();
	Пока ДокПродажи.ПолучитьСтроку() = 1 Цикл
		Если ДокПродажи.ТМЦ = ТМЦ Тогда
			    		
			Если (ПустоеЗначение(ДокПродажи.ВидУпаковки) = 1) ИЛИ (ДокПродажи.ВидУпаковки = НетУп) Тогда
				ТекВидУпаковкиРН = НетУп;
			Иначе
				ТекВидУпаковкиРН = ДокПродажи.ВидУпаковки;
			КонецЕсли;
			
			Если (ПустоеЗначение(ВУП) = 1) ИЛИ (ВУП = НетУп) Тогда
				ТекВидУпаковки = НетУп;
			Иначе
				ТекВидУпаковки = ВУП;
			КонецЕсли;

			Если СпецВозврат = 1 Тогда //--- УМК Сандомирский В.Ю. (29.01.15) если спецфозврат  (стоит  галочка возврат непроданной)
				Если ТекВидУпаковкиРН <> ТекВидУпаковки Тогда
			        Продолжить;
				КонецЕсли;	
			
				ЦенаБезНДС = ДокПродажи.ЦенаБезНДС;
				ЦенаСНДС = ДокПродажи.ЦенаСНДС;
			
				Если Кво = 0 Тогда
				    Кво = ДокПродажи.Кво;
				КонецЕсли;
				глВыч_Суммы_Накл(Контекст,-1);			
			Иначе //--- Вычисляем цену без упаковки (цена из накладной - минус цена упаковки)				
				ЦенаСНДС = ДокПродажи.ЦенаСНДС 
							- глПолучитьЦенуВУП(ДокПродажи, ДокПродажи.КатегорияЦен, ДокПродажи.ДатаДок,  ДокПродажи.Валюта, ДокПродажи.ДатаДок, ДокПродажи.ТМЦ);//---(Вычитаем цену упаковки на день РН)
			
				Если Кво = 0 Тогда
				    Кво = ДокПродажи.Кво;
				КонецЕсли;
				
				глВыч_Суммы_Накл(Контекст,1);				
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//======================================================================
Процедура ИзмЦенаУчБезНДС()
	Если (ДокПродажи.Выбран() = 1) и (ДокПродажи.Проведен() = 1) и (МестоХранения.СуммовойУчет <> 1) Тогда
		РассчитатьУчЦенуИСумму();
	Иначе
		СуммаУчБезНДС = ЦенаУчБезНДС*Кво;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ИзмДокПродажи()
Перем фНашли;
	Если ДокПродажи.Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	Если ДокПродажи.Проведен()=0 Тогда
	    Возврат;
	КонецЕсли;
	РассчитатьУчЦенуИСумму();
КонецПроцедуры

//======================================================================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда
		Если Договор.Выбран()=1 Тогда
			Если Контрагент <> Договор.Контрагент Тогда
			    Договор = 0;
			КонецЕсли;
		КонецЕсли;
		СтараяУстановкаС = УстановкаСкидокТМЦС;
		СтараяУстановкаН = УстановкаСкидокТМЦН;
		УстановкаСкидокТМЦС = глПолучитьДокументУстановкиСкидок(?(ПустоеЗначение(ДатаЦены) = 1, ДатаДок, ДатаЦены), Контрагент);
		УстановкаСкидокТМЦН = глПолучитьДокументУстановкиСкидок(?(ПустоеЗначение(ДатаНЦены) = 1, ДатаДок, ДатаНЦены), Контрагент);
		Если СтараяУстановкаС <> УстановкаСкидокТМЦС Тогда
			Сообщить("Изменилась установка скидок на старую дату. Рекомендуется перезаполнить цены");
		КонецЕсли;
		Если СтараяУстановкаН <> УстановкаСкидокТМЦН Тогда
			Сообщить("Изменилась установка скидок на новую дату. Рекомендуется перезаполнить цены");
		КонецЕсли;	
		
		// подставляем БазДоговор в зависимоти от константы
		Если (Константа.ПодставлятьОсновнойДоговор = Да) 
		И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
		И (ПустоеЗначение(Договор)=1) Тогда
			Если Фирма = Контрагент.БазДоговор.Фирма Тогда
				Договор = Контрагент.БазДоговор;
				ИзмДоговор();
			КонецЕсли;
		КонецЕсли;
		Если ПустоеЗначение(Контрагент.КатегорияЦен.Получить(ДатаДок)) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
		Иначе	
			КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		КонецЕсли;
		Если ПустоеЗначение(СтарКатегорияЦен) = 1 Тогда
		    СтарКатегорияЦен = КатегорияЦен;
		КонецЕсли;
		Если Договор.Выбран() = 1 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
				Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
					ВидТорговли = Договор.ВидТорговли;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	                      		
		Если (ПустоеЗначение(Контрагент.ВидТорговли) = 0)
		И (ПустоеЗначение(ВидТорговли) = 1) Тогда   
			Если Контрагент.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
			    ВидТорговли = Контрагент.ВидТорговли;      
			Иначе	
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
			ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;
		Попытка
			Если ПустоеЗначение(ДокументОснование) = 0 Тогда
				Если ДокументОснование.Контрагент <> Контрагент Тогда
					ДокументОснование = 0;
				КонецЕсли;	
			КонецЕсли;				
		Исключение
		КонецПопытки;
	Иначе
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		Договор = 0;
		ДокументОснование = 0;
	КонецЕсли;                                   
	ИзмВидТорговли();
КонецПроцедуры

//======================================================================
Процедура ОчиститьЗаказ()
	Если Договор.Выбран() = 1 Тогда
		Договор = 0;
	КонецЕсли;
КонецПроцедуры 

//======================================================================
Процедура ЗаполнитьПоУмолчанию()
	СубконтоВалДох = глВосстановитьЗначение(Контекст,"СубконтоВалДох",Константа.БазВаловыйДоход);
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
		Дата_Курса=ДатаДок;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	КонецЕсли;
	Отпустил = глВосстановитьЗначение(,"БазОтпустил");
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад",Константа.ОсновнойСклад);  
	Подразделение = глВосстановитьЗначение(,"БазПодразделениеПродажи");
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	УстСчетКонтрагента();
	ВидТары = Перечисление.ВидыТары.Залоговая;
КонецПроцедуры

//======================================================================
Процедура ВводНового(ПризнакКопирования)
	СпецВозврат = 1;
	
	Если ПризнакКопирования = 1 Тогда		
		глУстановитьНомер(Контекст);
		
		ИзмКонтрагент();				//--- УМК Сандомирский В.Ю. (23.03.15) для обновления типа цен и т.п.
		Возврат;
	КонецЕсли;
	
	глУстановитьФирму(Контекст);
	Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
	ИзмКонтрагент();
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	ЗаполнитьПоУмолчанию();
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьИзИнвентаризации(Док, ПроверятьТЧ = 0, ТолькоСНулевойРазницей)
	Отв = "Нет";
	Если ТолькоСНулевойРазницей = 0 Тогда
		Отв = Вопрос("Только с нулевой продажной ценой", "Да+Нет");	
	КонецЕсли;
	
	Если ПроверятьТЧ = 1 Тогда
		Спис = СоздатьОбъект("СписокЗначений");
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Док.фУчитыватьВидУпаковки = 1 Тогда
				Спис.ДобавитьЗначение(ЗначениеВСтрокуВнутр(ТМЦ) + "//" + ЗначениеВСтрокуВнутр(?(ПустоеЗначение(ВУП) = 1, НетУп, ВУП)));
			Иначе
				Спис.ДобавитьЗначение(ЗначениеВСтрокуВнутр(ТМЦ) + "//" + ЗначениеВСтрокуВнутр(НетУп));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ТолькоСНулевойРазницей = 1 Тогда
		Спис = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(Спис, "ТМЦ");		
		Партии = СоздатьОбъект("Регистр.Партии");		
		Партии.УстановитьЗначениеФильтра("Фирма", Док.Фирма, 1);
		Партии.УстановитьЗначениеФильтра("ТМЦ", Спис, 2);
		//Партии.УстановитьЗначениеФильтра("МестоХранения", Док.МестоХранения, 1);
		Партии.ВременныйРасчет(1);
		Попытка
			РассчитатьРегистрыНа(Док.УчетПоФирме);
		Исключение
		КонецПопытки;
		
		ТЗПартий = СоздатьОбъект("ТаблицаЗначений"); 
		Партии.ВыгрузитьИтоги(ТЗПартий, 1);
		ТЗПартий.Свернуть("ТМЦ", "ОстатокТовара,Стоимость,ПродСтоимость");		
	КонецЕсли;
	
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку() = 1 Цикл
		Если (Док.КвоПоФакту <> 0) И ((Отв = "Нет") ИЛИ (Док.ЦенаПродавца = 0)) И ((Док.КвоПоФакту = Док.КвоПоУчету) ИЛИ (ТолькоСНулевойРазницей = 0)) Тогда
			Если ПроверятьТЧ = 1 Тогда
				Если Док.фУчитыватьВидУпаковки = 1 Тогда
					Ключ = ЗначениеВСтрокуВнутр(Док.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(?(ПустоеЗначение(Док.ВидУпаковки) = 1, НетУп, Док.ВидУпаковки));
				Иначе
					Ключ = ЗначениеВСтрокуВнутр(Док.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(НетУп);
				КонецЕсли;
				Если Спис.НайтиЗначение(Ключ) <> 0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;			
			
			НоваяСтрока();
			ТМЦ = Док.ТМЦ;
			ВУП = Док.ВидУпаковки;
			Ед = Док.Ед;
			Коэффициент = Док.Ед.Коэффициент;
			Кво = Док.КвоПоФакту;
			Если ТолькоСНулевойРазницей = 1 Тогда
				Стр = 0;
				Если ТЗПартий.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
					Если ТЗПартий.ПолучитьЗначение(Стр, "ОстатокТовара") = 0 Тогда
						СуммаСНДС = ТЗПартий.ПолучитьЗначение(Стр, "Стоимость");
					Иначе
						СуммаСНДС = ТЗПартий.ПолучитьЗначение(Стр, "Стоимость") / ТЗПартий.ПолучитьЗначение(Стр, "ОстатокТовара") * Кво;
					КонецЕсли;
					
					СуммаБезНДС = СуммаСНДС;
					ЦенаСНДС = СуммаСНДС / Кво;
					ЦенаБезНДС = СуммаСНДС / Кво;
				КонецЕсли;				
				НоваяЦена = Док.ЦенаПродавца;
				ИзмНоваяЦена();				
			Иначе
				ЦенаСНДС = Док.ЦенаБезНДС;
				глВыч_Суммы_Накл(Контекст,1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры // 

//======================================================================
Процедура ПриВводеНаОсновании(Док)
	РодительскийДокумент = Док;
	ВидДок = Док.Вид();
//	Фирма  = Док.Фирма;
	Фирма = Константа.БазФирма;	
	глУстановитьНомер(Контекст);
	ЗаполнитьПоУмолчанию();	
	
	// --- УМК Сандомирский В.Ю. (09.01.15)
	ТекДокументОснование = "";
	Если Док.Вид() = "РасходнаяНакладная" Тогда 
		ТекДокументОснование = Док;
	КонецЕсли;
	
	глЗаполнитьШапкуНаОсн(Контекст,Док); // --- УМК Сандомирский В.Ю. (09.01.15) --- тут расходка может поменяться на заказ
	Фирма = Константа.БазФирма;	
	глУстановитьНомер(Контекст);
	МестоХранения = Док.МестоХранения;
	
	Если ПустоеЗначение(ТекДокументОснование) <> 1 Тогда // --- УМК Сандомирский В.Ю. (08.01.15) поєтому тут принудительно меняем заказ на расходну
		ДокументОснование = ТекДокументОснование;
	КонецЕсли;
	// ... УМК Сандомирский В.Ю. (09.01.15)
	
	Если глЕстьРеквизитШапки("Контрагент",ВидДок) = Да Тогда
		Контрагент = Док.Контрагент;
		ИзмКонтрагент();
	ИначеЕсли глЕстьРеквизитШапки("МестоХранения",ВидДок) = Да Тогда 
		Контрагент = Док.МестоХранения.Контрагент;
		ИзмКонтрагент();
	КонецЕсли;
	
	Если глЕстьРеквизитШапки("Валюта",ВидДок) = Да Тогда
		Валюта = Док.Валюта;
		Если Док.Вид() = "Договор" Тогда
			Дата_Курса=ДатаДок;
			Курс = глКурсДляВалюты(Валюта,ДатаДок);
		Иначе
			Курс = Док.Курс;	
			Если глЕстьРеквизитШапки("Дата_Курса",ВидДок) = Да Тогда
				Дата_Курса=Док.Дата_Курса;
			Иначе
				Дата_Курса=Док.ДатаДок;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если глЕстьРеквизитШапки("КатегорияЦен",ВидДок) = Да Тогда
		КатегорияЦен = Док.КатегорияЦен;
	КонецЕсли;
	Если глЕстьРеквизитШапки("Подразделение",ВидДок) = Да Тогда
		Подразделение = Док.Подразделение;
	КонецЕсли;
	Если глЕстьРеквизитШапки("ПодразделениеПроизв",ВидДок) = Да Тогда
		ПодразделениеПроизв = Док.ПодразделениеПроизв;
	КонецЕсли;
	Если глЕстьРеквизитШапки("Отпустил",ВидДок) = Да Тогда
		Отпустил = Док.Отпустил;
	КонецЕсли;
	УстСчетКонтрагента();
	ИзмВидТорговли();
	Если Док.Вид() = "Инвентаризация" Тогда
		ЗаполнитьИзИнвентаризации(Док,, ?(Вопрос("Только с нулевой разницей?", "Да+Нет") = "Да", 1, 0));
	Иначе		
		глСкопироватьТовСостав(Контекст,Док);
	КонецЕсли;
	
	Попытка
		ВидТорговли = Договор.ВидТорговли;
	Исключение КонецПопытки;	
	ИзмВидТорговли();
	Если Найти("Договор,Заказ",Договор.Вид()) = 0 Тогда
		// заказом может быть только договор или заказ
	    Договор = 0;
	КонецЕсли;
	Если (ПустоеЗначение(Док) = 0) И (Док.Вид() <> "Инвентаризация") Тогда
		// установим Док.продажи во всех строках
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл       
			ДокПродажи = Док;	
			ИзмДокПродажи();
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры                      

//======================================================================
Функция ПроверкаОснования(Док)	
	Если Док.Вид()="Счет" Тогда
		Если Док.ЧтоПродаем = Перечисление.ЧтоПродаем.НеоборотныеАктивы Тогда
			Предупреждение("Для реализации основных средств используйте документ ЛиквидацияНеоборАктивов");
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	Возврат 1;
КонецФункции

//======================================================================
// основание - счет, договор, остатки взаиморасчетов
Процедура ВводНаОсновании(Док)        
	Если ПустоеЗначение(Док) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	   
	
	Если ПроверкаОснования(Док) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	 

	СпецВозврат = 1;
	ПриВводеНаОсновании(Док);	
КонецПроцедуры
           
//======================================================================
Процедура ВыборОснования()  
	// Процедура по кнопке редактирования основания в докумнете
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ПроверкаОснования(ДокументОснование) = 0 Тогда 
			ДокументОснование = СтарОснование;              		
		КонецЕсли;	
		Если (ДокументОснование <> СтарОснование)
		И (ДокументОснование.Вид() <> "РасходыНаПриобретение") Тогда
			ПриВводеНаОсновании(ДокументОснование);	
		КонецЕсли;	
	КонецЕсли;	          
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	

//======================================================================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры
                          
//======================================================================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


//======================================================================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	Если ТипЗначенияСтр(Выб) = "ТаблицаЗначений" Тогда
		глПриОбработкеПодбора(Выб,Контекст);
	ИначеЕсли Выб.Вид() = "Инвентаризация" Тогда
		Выб.ВыбратьСтроки();
		Пока Выб.ПолучитьСтроку() = 1 Цикл
			ДобавитьВСписок(Выб.ТМЦ, списТовар);
		КонецЦикла;
	ИначеЕсли Выб.Вид() = "ТМЦ" Тогда
		ДобавитьвСписок(Выб, списТовар);
	КонецЕсли;	
КонецПроцедуры //Обработка подбора

//======================================================================
Процедура ПриВыбореЗакладки(Номер,Значение)
	ОтображаемыеСлои = "Общий," + Значение;           
	Форма.ИспользоватьСлой(ОтображаемыеСлои,2);	
	
	Форма.тСхемаРБ.Видимость(0);
	Форма.СхемаРБ.Видимость(0);
	Если (Значение = "Дополнительный") И (НазваниеНабораПрав() = "Администратор") Тогда
		Форма.тСхемаРБ.Видимость(1);
		Форма.СхемаРБ.Видимость(1);
	КонецЕсли;	
КонецПроцедуры

//======================================================================
Процедура Печать(СКомментарием = 0)
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Если (Модифицированность() = 1) ИЛИ (ТекущийДокумент().Выбран() = 0) Тогда
			Предупреждение("Нельзя печатать не сохранённые ВН");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Обычный");
	СпМеню.ДобавитьЗначение(2, "С пустой суммой и к-вом");
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;

	РазницаЦен = ?(Зн = 1, "Нова сума", "Різниця цін");
	ХвостБЦ = ?(Зн = 2, "БЦ", "");
	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");
	
	Таб.ИсходнаяТаблица("Накладная"+СуффиксТаблицы);
    
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,ВУП,Кво,Ед,Коэффициент,ЦенаБезНДС,ЦенаСНДС,СуммаБезНДС,СуммаСНДС,НДС,ЦенаУчБезНДС,СуммаУчБезНДС,НоваяЦена,НоваяСумма" + ?(СКомментарием = 1, ",КомментСтр", ""));
	
	ПечФорма = "Накладная";
	Язык = глЯзык(ПечФорма); 	
	глУстПропись(Валюта);
	ПечОснование=глСтрокаОснование(Контекст,Договор,ДокументОснование);	
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = 1; //?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);  //--- УМК Сандомирский В.Ю, (29.07.14) всегда цены и суммы с НДС
	Адрес = глАдресСтрокой(?(Договор.Выбран() = 1, Договор.Адрес, Контрагент.ФизическийАдрес));
	Хвост = ?(СКомментарием = 0, "|Основная", "");
	Если СКомментарием = 1 Тогда		
		Таб.ВывестиСекцию("Шапка");
	Иначе
		Таб.ВывестиСекцию("Шапка<|Основная");
		Таб.ВывестиСекцию("Шапка>|Основная");
	КонецЕсли;

	Ном = 1;
	ВСоставе = 0;
	фЕстьТара =0;
	ТаблТМЦ.ВыбратьСтроки();
	Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
		Если (ВидТары <> Перечисление.ВидыТары.Покупная) и (ТаблТМЦ.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
			фЕстьТара = 1;
		    Продолжить;
		КонецЕсли;
		Таб.ВывестиСекцию("Строка" + ХвостБЦ + Хвост);
		Ном = Ном+1;
	КонецЦикла;
	// печать тары
	Если фЕстьТара = 1 Тогда
		Если ВидТары = Перечисление.ВидыТары.Возвратная Тогда
			ЗагТара = ?(Язык="у","Тара зворотна","Тара возвратная");
		ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			ЗагТара = ?(Язык="у","Тара заставна","Тара залоговая");
		КонецЕсли;
		Таб.ВывестиСекцию("ШапкаТара" + Хвост);
	    Ном = 0;
		ТаблТМЦ.ВыбратьСтроки();
		Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
			Если (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			    Продолжить;
			КонецЕсли;
			ИтСуммаТары = ИтСуммаТары + ?(ОтЦеныСНДС=1,ТаблТМЦ.СуммаСНДС,ТаблТМЦ.СуммаБезНДС);
			Ном = Ном + 1;
			Таб.ВывестиСекцию("СтрокаТара" + Хвост);
		КонецЦикла;
		ИтСуммаТары = Окр(ИтСуммаТары,2);
		ПечИтСумма = глФРМТ(ИтСуммаТары,Валюта,0);
		Таб.ВывестиСекцию("ИтогоТара" + Хвост);
	КонецЕсли;
	
	Если Зн = 1 Тогда
		Таб.ВывестиСекцию("ИтогоБезНДС" + Хвост);
		Таб.ВывестиСекцию("ИтогоНДС" + Хвост);
		Таб.ВывестиСекцию("ИтогоСНДС" + Хвост);
		Таб.ВывестиСекцию("Дно" + Хвост);
	КонецЕсли;
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Накладная","");
	глУстПропись(Гривня); 
КонецПроцедуры

Процедура ИзмВозвратНеПроданной()
//	Если СпецВозврат = 1 Тогда
//		МестоХранения = Фирма.ОсновнойСклад;
//	Иначе
//		МестоХранения = Фирма.СкладВозврат;
//	КонецЕсли;
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку() = 1 Цикл
//		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
//		    Склад = Константа.ОснСкладГП;
//		Иначе
//			Склад = МестоХранения;
//		КонецЕсли;
//
//		Если СпецВозврат = 0 Тогда //--- УМК Сандомирский В.Ю. (29.01.15) если спецфозврат  (стоит  галочка возврат непроданной)
//			ВУП = ""; //--- принудительно зачищаем 
//			НайтиРН();
//		КонецЕсли;		
//		
//		РассчитатьУчЦенуИСумму(); //--- УМК Сандомирский В.Ю. (29.01.15) при изменении галочки возврат непроданной пересчитываем цены с (или без) учета упаковки
//	КонецЦикла;
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()     
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		Если глГруппыДоступаКонтрагенты.Принадлежит(Контрагент) = 0 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	Форма.ДатаДок.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ВидТары.ВыполнятьФормулуТолькоПриИзменении(1);	
	Форма.ВидТорговли.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ТМЦ.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ДокПродажи.ВыполнятьФормулуТолькоПриИзменении(1);
	Если Форма.ТолькоПросмотр()=1 Тогда
		// Если открыли только на просмотр, то надо кнопки сделать недоступными
		Форма.кФирма.Доступность(0);
		Форма.кВалюта.Доступность(0);
		//Форма.кОсн.Доступность(0);
		//Форма.кОК.Доступность(0);
//		Форма.кДействия.Доступность(0);
		СписокДействий = глПолучитьСписокДействий("
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");	    

		Форма.кПодбор.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Общий,Основной",2);
	
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;

	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс; 
	СтараяДата = ДатаДок;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	глУстВидимостьЦен(Контекст);
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ТМЦ = Форма.Параметр Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если (ТекущийДокумент().Выбран() = 0) И (Склад <> Фирма.СкладВозврат) И (ДокументОснование.Вид() <> "Инвентаризация") Тогда
		ИзмВозвратНеПроданной();
	КонецЕсли;	
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений);	
	глЗаполнитьСписокТоваров(СтрФильтр, списТовар);
	
	
	//--- Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (27.10.14)
	ТекВидУпаковки = СоздатьОбъект("Справочник.ВидыУпаковки");
	СпВидыУпаковкиГлобальный = СоздатьОбъект("СписокЗначений");
	ТекВидУпаковки.ВыбратьЭлементы();
	Пока ТекВидУпаковки.ПолучитьЭлемент() = 1 Цикл
		Если ТекВидУпаковки.ПометкаУдаления() = 1 Тогда //--- пропускаем помеченные на удаление
			Продолжить;
		КонецЕсли;
		
		Если ТекВидУпаковки.Активна <> Перечисление.ДаНет.Да Тогда //--- пропускаем не активные
			Продолжить;
		КонецЕсли;
	
		Если ТекВидУпаковки.ЭтоГруппа() = 1 Тогда //--- пропускаем группы
			Продолжить;
		КонецЕсли;
		СпВидыУпаковкиГлобальный.ДобавитьЗначение(ТекВидУпаковки.ТекущийЭлемент());		
	КонецЦикла;
	//... Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (27.10.14)
	
	
КонецПроцедуры
                
//======================================================================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

//======================================================================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Попытка
		АвтоВремяОтключить();
		Если МестоХранения = Фирма.СкладВозврат Тогда
			ДолжноБытьВремя = 30 * 60;
			ДБВСТР = "00:30:00";			
			УстановитьВремя(0,30,0);	
		Иначе			
			ДолжноБытьВремя = 13 * 3600;
			ДБВСТР = "13:00:00";			
			УстановитьВремя(13,0,0);
		КонецЕсли;
	Исключение 
		Ч = 0; М = 0; С = 0;
		Время = ПолучитьВремя(Ч, М, С);
		ЕстьВремя = Ч * 3600 + М * 60;
		
		Если ЕстьВремя <> ДолжноБытьВремя Тогда
			Сообщить("Данный документ должен проводиться временем: " + ДБВСТР + " фактическое время: " + Время);
		КонецЕсли;
	КонецПопытки;
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	СтрокаРеквизитовШапки = "";															//--- УМК Сандомирский В.Ю, (12.12.14) (Добавил непроверяемые поля) 	
	глРеквизитыШапкиДокумента(Контекст, СтрокаРеквизитовШапки);							//--- УМК Сандомирский В.Ю, (12.12.14) (Добавил непроверяемые поля) 
	Если глЕстьИзменения(Контекст, СтруктИзменений, СтрокаРеквизитовШапки) = 1 Тогда	//--- УМК Сандомирский В.Ю, (12.12.14) (Добавил непроверяемые поля) 	
		Автор = глПользователь;
	КонецЕсли;

	глЗаписатьСписокТоваров(СтрФильтр, списТовар);
	ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	глСохранитьЗначение(Контекст,"СубконтоВалДох",СубконтоВалДох);
КонецПроцедуры

//======================================================================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
		ИзмРеквизитШапки("ВидНДС");
		ФлагСтандОбр = 0;
	ИначеЕсли Рекв="Отпустил" Тогда
		КонтФирмы = Фирма;
		ФлагСтандОбр = 0;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);
	ИначеЕсли Рекв="ДокПродажи" Тогда
		ФлагСтандОбр = 0;
		Спис = СоздатьОбъект("СписокЗначений");
		Спис.Установить("Контрагент", Контрагент);
		Спис.Установить("Договор", Договор);
		Спис.Установить("ДокВозврата", ТекущийДокумент());
		Спис.Установить("ТМЦ", ТМЦ);
		
		Если СпецВозврат = 1 Тогда //--- УМК Сандомирский В.Ю, (29.01.15) если возврат непроданного не стоит то нужно отображать ваще все накладные продажи
			Спис.Установить("ВУП", ВУП);	
		КонецЕсли;
		
		ОткрытьФормуМодально("Обработка.ВыборРНВВозврате",Спис);
		Если ТипЗначенияСтр(Спис) = "СписокЗначений" Тогда
			РН = Спис.Получить("РН");
			Если ПустоеЗначение(РН) = 0 Тогда
				ДокПродажи = РН;
				ВУП = Спис.Получить("ВУП");
				ИзмДокПродажи();
			КонецЕсли;			
		КонецЕсли;
	ИначеЕсли Рекв="Касса" Тогда
		ВыборКассы();		
		ФлагСтандОбр = 0;		
			
	ИначеЕсли (Рекв = "ВУП") Тогда //--- УМК Сандомирский В.Ю, (27.10.14) 			
		ФлагСтандОбр = 0;		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаГрупУпаковок) <> 1) 
				И (Константа.УМК_ДатаНачалаГрупУпаковок <= ДатаДок)  Тогда 
						
			// --- Строю локальный , разрешенный список для конкретного элемента
			СпВидыУпаковкиЛокальный = СоздатьОбъект("СписокЗначений");
			
			Если (СпецВозврат = 1) ИЛИ (Контрагент.Родитель.Код = "2041") Тогда  //--- УМК Сандомирский В.Ю. (29.01.14) (23.03.15) выбор упаковок доступен только если возврат непроданного или контрагент-волк				
				ТекРазрешенныеВидыУпаковки = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
				ТекРазрешенныеВидыУпаковки.ИспользоватьВладельца(ТМЦ.ТекущийЭлемент());
				ТекРазрешенныеВидыУпаковки.ВыбратьЭлементы();
				Пока ТекРазрешенныеВидыУпаковки.ПолучитьЭлемент() = 1 Цикл
					Если ТекРазрешенныеВидыУпаковки.ПометкаУдаления() = 1 Тогда
						Продолжить;
					КонецЕсли;
					СпВидыУпаковкиЛокальный.ДобавитьЗначение(ТекРазрешенныеВидыУпаковки.ТекущийЭлемент().ВидУпаковки);	// --- из подчиненного справочника	 
				КонецЦикла;			
			КонецЕсли;
				
			СпВидыУпаковкиЛокальный.ДобавитьЗначение(НетУп);
			
			СтрВидУпаковки = "";
			Если СпВидыУпаковкиЛокальный.ВыбратьЗначение(СтрВидУпаковки,,,,2) = 1 Тогда
			    ВУП = СтрВидУпаковки;
			КонецЕсли;			
		Иначе				
			СтрВидУпаковки = "";
			Если СпВидыУпаковкиГлобальный.ВыбратьЗначение(СтрВидУпаковки,,,,2) = 1 Тогда
			    ВУП = СтрВидУпаковки;
			КонецЕсли;			
		КонецЕсли;	
	КонецЕсли;  //... УМК Сандомирский В.Ю, (27.10.14)	
КонецПроцедуры

//======================================================================
Процедура ПриОкончанииРедактированияСтроки()
	//Если (ДокПродажи.Выбран() = 0) И (ПустоеЗначение(Склад) = 1) Тогда
	//	Склад = Константа.НетДокументаОснования;
	//ИначеЕсли (ДокПродажи.Выбран() = 1) И (Склад = Константа.НетДокументаОснования) Тогда
	//	Склад = "";
	//КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ИзмТМЦ()
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
	    Склад = Константа.ОснСкладГП;
	КонецЕсли;
	глПриИзмененииТовара(Контекст);
	ИзмЦенаУчБезНДС();
КонецПроцедуры

//======================================================================
Процедура ЭкспортФилиалы()
	Если СокрЛП(Контрагент.ПутьДляЭкспортаРН) = "" Тогда
		Предупреждение("У контрагента не задан путь для экспорта РН");
		Возврат;
	КонецЕсли;
	
	Если Модифицированность() = 1 Тогда
	    Если Вопрос("Документ необходимо сохранить. Сохранить сейчас?", "Да+Нет") = "Нет" Тогда
			Возврат;
		Иначе
			ПриЗаписи();
			Записать();
	    КонецЕсли;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Экспорт");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Таб.ВывестиСекцию("ЭкспортФ");
	КонецЦикла;

	ИмяФайла = СокрЛП(Контрагент.ПутьДляЭкспортаРН) + "ВН_" + СокрЛП(НомерДок) + "_" + 
		СтрЗаменить(Строка(ДатаДок), ".", "") + ".mxl";
	Таб.Записать(ИмяФайла);
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
	    Сообщить("Экспорт выполнен успешно");
	Иначе
		Сообщить("Экспорт не удался");
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура СортироватьПоИерархии()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	МаксУР = 0; СтрСорт = "";
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ТекУР = ТЗ.ТМЦ.Уровень() - 1;
		Если ТекУР > МаксУР Тогда
			Для Инд = МаксУР + 1 По ТекУР Цикл
				ТЗ.НоваяКолонка("Родитель" + Инд, "Справочник.ТМЦ");
				СтрСорт = СтрСорт + "Родитель" + Инд + ",";				
			КонецЦикла;
			
			МаксУР = ТекУР;			
		КонецЕсли;
		
		Род = ТЗ.ТМЦ.Родитель;
		Пока ПустоеЗначение(Род) = 0 Цикл
			ТЗ.УстановитьЗначение(ТЗ.НомерСтроки, "Родитель" + ТекУР, Род);
			ТекУР = ТекУР - 1;
			Род = Род.Родитель;
		КонецЦикла;		
	КонецЦикла;
	
	ТЗ.Сортировать(СтрСорт + "ТМЦ,ВУП");
	ЗагрузитьТабличнуюЧасть(ТЗ);
КонецПроцедуры // гл

//====================================================================== //--- УМК Сандомирский В.Ю, (08.01.15)
Процедура СкопироватьТоварныйСоставИзОснования()
	М = СоздатьОбъект("СписокЗначений");
	М.ДобавитьЗначение(1, "Копировать из расходной");
	М.ДобавитьЗначение(2, "Копировать из инвентаризации");
	М.ДобавитьЗначение(4, "Копировать из инвентаризации только с нулевой разн.");
	М.ДобавитьЗначение(3, "Сортировать по иерархии");
	Зн = 1;
	
	Если М.ВыбратьЗначение(Зн, ,,, 1) <> 0 Тогда
		Если Зн = 1 Тогда
			Если ПустоеЗначение(ДокументОснование) <> 1 Тогда
				Если ДокументОснование.Вид() = "РасходнаяНакладная" Тогда
					УдалитьСтроки();
					глСкопироватьТовСостав(Контекст,ДокументОснование);	
					ИзмВозвратНеПроданной();
					ВыбратьСтроки();
					Пока ПолучитьСтроку() = 1 Цикл
						РассчитатьУчЦенуИСумму();
					КонецЦикла;
				Иначе
					Предупреждение("Документ основание не РН !");	
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Зн = 2 Тогда
			Инв = СоздатьОбъект("Документ.Инвентаризация");
			Если Инв.Выбрать("Выберите инвентаризацию", "ФормаСписка") = 1 Тогда
				ЗаполнитьИзИнвентаризации(Инв, 1, ?(Зн = 2, 0, 1));
			КонецЕсли;
		ИначеЕсли Зн = 3 Тогда
			СортироватьПоИерархии();
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры // СкопироватьТоварныйСоставИзОснования()


//====================================================================== //--- УМК Сандомирский В.Ю, (26.05.14) при выборе схемы руками оставляем пометку 
Процедура ИзмСхемаРБ()
	ФлРучногоИзмСхемыРБ = 1;
КонецПроцедуры // ИзмСхемаРБ

//====================================================================== //--- УМК Сандомирский В.Ю, (25.08.14) при изменении Товара или Вуп ищем РН
Процедура НайтиРН()
	Если (ПустоеЗначение(ТМЦ) = 0) И (ПустоеЗначение(Контрагент) = 0) Тогда	
		//--- сформируем ТЗ из товаров РН накладных 
		ДатаНач = ДобавитьМесяц(ДатаДок,-2);  //---(расходки за два месяца назад)
		
		Если СпецВозврат = 1 Тогда
			ДатаКон = ДатаДок;
		Иначе
			ДатаКон = ДатаДок-1;
		КонецЕсли;

		ДокПродажи = "";
		
		ВыбТМЦ 			= ТМЦ;		
		ВыбКонтрагент 	= Контрагент;
		Если ПустоеЗначение(Договор) = 1 Тогда
			Дог = СоздатьОбъект("СписокЗначений");
			Дог.ДобавитьЗначение(ПолучитьПустоеЗначение("Документ"));
			Дог.ДобавитьЗначение(ПолучитьПустоеЗначение("Документ.Договор"));
		Иначе
			Дог = Договор;
		КонецЕсли;
		
		
		ЗапросПоДок = СоздатьОбъект("Запрос");
		ТекстЗапросаПоДок = "
		|Период с ДатаНач по ДатаКон;
		|Обрабатывать НеПомеченныеНаУдаление; 
		|ОбрабатыватьДокументы Проведенные;
		|ТекДок 		= Документ.РасходнаяНакладная.ТекущийДокумент;
		|ТекДог			= Документ.РасходнаяНакладная.Договор;
		|ТекКонтрагент 	= Документ.РасходнаяНакладная.Контрагент;
		|ТекТМЦ 		= Документ.РасходнаяНакладная.ТМЦ;
		|ТекВидУпаковки = Документ.РасходнаяНакладная.ВидУпаковки;
		|Группировка ТекДок упорядочить по ТекДок.ДатаДок;
		|Условие(ТекТМЦ = ВыбТМЦ);
		|Условие(ТекДог В (Дог));
		|Условие(ТекКонтрагент = ВыбКонтрагент);";
		
		Если СпецВозврат = 1 Тогда //--- УМК Сандомирский В.Ю. (29.01.15) при галочке возврат непроданной , иначе не фильтровать по упаковке		
			Если (ПустоеЗначение(ВУП) = 1) ИЛИ (ВУП = НетУп) Тогда
				ВыбВидУпаковки = НетУп;
				ТекстЗапросаПоДок = ТекстЗапросаПоДок + "
				|			
				|Условие((ТекВидУпаковки = ВыбВидУпаковки) ИЛИ (ПустоеЗначение(ТекВидУпаковки) = 1) ) ;";
			Иначе
				ВыбВидУпаковки = ВУП;
				ТекстЗапросаПоДок = ТекстЗапросаПоДок + "
				|			
				|Условие(ТекВидУпаковки = ВыбВидУпаковки);";
			КонецЕсли;		
		КонецЕсли;		
		
		Если ЗапросПоДок.Выполнить(ТекстЗапросаПоДок)=1 Тогда	
			Пока ЗапросПоДок.Группировка(1,-1) = 1 Цикл //--- обратный обход
				ДокПродажи = ЗапросПоДок.ТекДок;
				ИзмДокПродажи();
				Прервать;
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры // НайтиРН

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

//======================================================================
Функция Разница()
	Возврат НоваяСумма - СуммаСНДС;
КонецФункции // Разница

//======================================================================
Процедура ИзмНоваяЦена()
	// используем хитрый алгоритм расчёта
	СтНДС = ТМЦ.СтавкаНДС.Ставка.Получить(ДатаДок); 
	НоваяЦенаБезНДС = Окр(НоваяЦена / (1 + СтНДС), 5);
	НоваяСуммаБезНДС = Окр(НоваяЦенаБезНДС * Кво * Коэффициент, 2);
	НовыйНДС = Окр(НоваяСуммаБезНДС * СтНДС, 3);
	НоваяСумма = НоваяСуммаБезНДС + НовыйНДС;
	
	//НоваяСумма = Окр(НоваяЦена * Кво * Коэффициент, 2);	
КонецПроцедуры // ИзмНоваяЦена()

//======================================================================
Процедура УстЦенуНаДату()
	Если Вопрос("Заполнить старые цены по выбранному типу цен?", "Да+Нет") = "Да" Тогда
		Д = ?(ПустоеЗначение(ДатаЦены) = 1, ДатаДок, ДатаЦены);
		Если ВвестиДату(Д, "Введите дату для заполнения цен") = 1 Тогда
			ДатаЦены = Д;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				ЦенаСНДС = глВернутьЦену(ТМЦ, КатегорияЦен, Д, Гривня) + глПолучитьЦенуВУП(Контекст, КатегорияЦен, Д, Гривня, Д, ТМЦ);
				ЕстьАкция = 0;
				глУстановитьСкидкуПоАкции(Контекст, ЦенаСНДС, ТМЦ, ЕстьАкция, КатегорияЦен, "С");
				глВыч_Суммы_Накл(Контекст,1);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //

//======================================================================
Процедура УстНовуюЦенуНаДату()
	Если Вопрос("Заполнить новые цены по выбранному типу цен?", "Да+Нет") = "Да" Тогда
		Д = ?(ПустоеЗначение(ДатаНЦены) = 1, ДатаДок, ДатаНЦены);
		Если ВвестиДату(Д, "Введите дату для заполнения цен") = 1 Тогда
			ДатаНЦены = Д;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				НоваяЦена = глВернутьЦену(ТМЦ, КатегорияЦен, Д, Гривня) + глПолучитьЦенуВУП(Контекст, КатегорияЦен, Д, Гривня, Д, ТМЦ);
				ЕстьАкция = 0;
				глУстановитьСкидкуПоАкции(Контекст, НоваяЦена, ТМЦ, ЕстьАкция, КатегорияЦен, "Н");				
				ИзмНоваяЦена();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Процедура УдалитьНулевые()
	Если Вопрос("Удалить строки с нулевой разницей?", "Да+Нет") = "Да" Тогда
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(ТЗ);
		
		Инд = 1;
		Пока Инд <= ТЗ.КоличествоСтрок() Цикл
			ТЗ.ПолучитьСтрокуПоНомеру(Инд);
			Если Окр(ТЗ.НоваяСумма - ТЗ.СуммаСНДС, 2) = 0 Тогда
				ТЗ.УдалитьСтроку();
			Иначе
				Инд = Инд + 1;
			КонецЕсли;
		КонецЦикла;		
		
		ЗагрузитьТабличнуюЧасть(ТЗ);
	КонецЕсли;
КонецПроцедуры // УдалитьНулевые()

//======================================================================
Процедура ИзмДатаЦены()
	СтараяУстановка = УстановкаСкидокТМЦС;
	УстановкаСкидокТМЦС = глПолучитьДокументУстановкиСкидок(?(ПустоеЗначение(ДатаЦены) = 1, ДатаДок, ДатаЦены), Контрагент);
	Если СтараяУстановка <> УстановкаСкидокТМЦС Тогда
		Сообщить("Изменилась установка скидок. Рекомендуется перезаполнить цены");
	КонецЕсли;
КонецПроцедуры //

Процедура ИзмДатаНЦены()
	СтараяУстановка = УстановкаСкидокТМЦН;
	УстановкаСкидокТМЦН = глПолучитьДокументУстановкиСкидок(?(ПустоеЗначение(ДатаНЦены) = 1, ДатаДок, ДатаНЦены), Контрагент);
	Если СтараяУстановка <> УстановкаСкидокТМЦН Тогда
		Сообщить("Изменилась установка скидок. Рекомендуется перезаполнить цены");
	КонецЕсли;	
КонецПроцедуры // 

//======================================================================
Процедура ИзмУстановкаСкидок(Хвост)
	Сообщить("Изменилась установка скидок на " + ?(Хвост = "С", "старую", "новую") + " дату. Рекомендуется перезаполнить цены");
КонецПроцедуры // ИзмУстановкаСкидок(

Процедура ИзИнвентаризаций()
	ОткрытьПодбор("Документ.Инвентаризация", "ФормаСписка");
КонецПроцедуры // ИзИнвентаризаций()

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьПоОстаткам()
	Если КоличествоСтрок() > 0 Тогда
		Отв = Вопрос("Удалить строки?", "Да+Нет+Отмена");
		Если Отв = "Да" Тогда
			УдалитьСтроки();
		ИначеЕсли Отв = "Отмена" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	РегОст = СоздатьОбъект("Регистр.Остатки");	
	РегОст.УстановитьЗначениеФильтра("Фирма", Контрагент.ФирмаПрихода.Получить(ДатаДок), 1);
	РегОст.УстановитьЗначениеФильтра("МестоХранения", МестоХранения, 1);
	Если списТовар.РазмерСписка() > 0 Тогда
		РегОст.УстановитьЗначениеФильтра("ТМЦ", списТовар, 2);
	КонецЕсли;
	
	Если СравнитьТА() = -1 Тогда
		РегОст.ВременныйРасчет(1);
		РассчитатьРегистрыНа(ТекущийДокумент());
	ИначеЕсли (СравнитьТА() = -2) И (ДатаДок < ПолучитьДатуТА()) Тогда
		РегОст.ВременныйРасчет(1);
		РассчитатьРегистрыПо(ДатаДок);
	КонецЕсли;
	
	РегОст.ВыбратьИтоги();
	Пока РегОст.ПолучитьИтог() = 1 Цикл
		НоваяСтрока();
		ТМЦ = РегОст.ТМЦ;
		ИзмТМЦ();
		ВУП = РегОст.ВидУпаковки;
		НайтиРН();
		
		Кво = РегОст.ОстатокТовара;
		глВыч_Суммы_Накл(Контекст);
		ИзмЦенаУчБезНДС();
		ИзмНоваяЦена()
	КонецЦикла;
КонецПроцедуры // гл

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|ОбновлениеЦен,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");
