Перем ПервыйДок, ПервыйДокПеревозчика, ПервыйДокТаможни, Касса;
Перем СчетНДС, СубконтоНДС1, СубконтоНДС2, СубконтоПошлина;
Перем Счет, Субк1, Субк2, Субк3; // счет и аналитика по ТМЦ
Перем ИтСуммаБезНДСВал;
Перем ПересчКво;
Перем ВремРег;
Перем АвансВал,АвансОсн;
Перем АвансПеревозчикуВал,АвансПеревозчикуОсн;
Перем НДСВсего, ВзаиморасчетыПоставщикВсего, ВзаиморасчетыПеревозчикВсего; // для исправления ошибок при округлениях

// ===============================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Контрагент,"Поставщик");
    глВыбранЛи(СчетКонтрагента,"Счет контрагента");
	Если глВсеВыбрано = 1 Тогда
		Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
			глКомментарий("Счет контрагента ("+СчетКонтрагента+") не является счетом учета взаиморасчетов!",1,,"!");
		    глВсеВыбрано = 0;
		КонецЕсли;	
	КонецЕсли;	
    глВыбранЛи(СчетТаможни,"Счет таможни");
	Если глВсеВыбрано = 1 Тогда
		Если глПроверитьСчетВзаиморасчетов(СчетТаможни) = 0 Тогда
			глКомментарий("Счет таможни ("+СчетТаможни+") не является счетом учета взаиморасчетов!",1,,"!");
		    глВсеВыбрано = 0;
		КонецЕсли;	
	КонецЕсли;	
	Если Итог("ПеревозкаВал") <> 0 Тогда
	    глВыбранЛи(СчетПеревозчика,"Счет перевозчика");
		Если глВсеВыбрано = 1 Тогда
			Если глПроверитьСчетВзаиморасчетов(СчетПеревозчика) = 0 Тогда
				глКомментарий("Счет перевозчика ("+СчетПеревозчика+") не является счетом учета взаиморасчетов!",1,,"!");
			    глВсеВыбрано = 0;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	глВыбранЛи(Валюта,"Валюта");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(МестоХранения,"Место хранения");
	глВыбранЛи(ЧтоПриходуем,"Что приходуем");
	Если глВсеВыбрано = 1 Тогда
		Если МестоХранения.Тип = Перечисление.ТипыМестХранения.Склад Тогда
			Если МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
				глКомментарий("В качестве места хранения не может быть выбран розничный склад!",1,,"!");
			    глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	глВыбранЛи(ВидТорговли,"Вид торговли");
	глВыбранЛи(СубконтоВалРасх,"Субконто валовых расходов");
	Если НДСнаЗатраты = 0 Тогда
		глВыбранЛи(ВидНДС,"Вид НДС");
	КонецЕсли;
//	глВыбранЛи(Таможня,"Таможня");
	Если (ВидТорговли = Перечисление.ВидыТорговли.Нал) Или (ВидТорговли = Перечисление.ВидыТорговли.Бартер) Тогда
		глКомментарий("При приходовании за валюту нельзя использовать вид торговли """ + ВидТорговли + """!",0,,"!");
		глВсеВыбрано = 0;
	КонецЕсли;
	глВсеВыбрано = ?(глВсеВыбрано=0,0,глПроверкаДублейСтрок(Контекст));
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Процедура РассчитатьШапку()
	СчетНДС = СчетПоКоду("64.1.5");
	СубконтоНДС1 = ВидНДС;
	СубконтоНДС2 = 0;
	Если НДСнаЗатраты = 0 Тогда
		// налоговый кредит
		Если (Константа.НДСпоВходящимНН = Да) и (Валюта = Гривня) Тогда
			// проводку по налоговому кредиту сделаем в 
			// документе ЗаписьКнигиПриобретения
			СчетНДС = СчетПоКоду("64.4.2");
			СубконтоНДС1 = Контрагент;
			СубконтоНДС2 = ПервыйДок;
		КонецЕсли;
	КонецЕсли;
	ИтДопНДСПоСтроке = 0;
	ИтСуммаБезНДСВал = Итог("СуммаБезНДСВал");
	Если Валюта <> Гривня Тогда
		// получим субконто для таможенной пошлины
		глПолучитьНиО(СубконтоПошлина,"Пошлина","о таможенной пошлине");
	КонецЕсли;
	// расчет итогов по взаиморасчетам
	// взаиморасчеты с поставщиком
	ФлагОтгрузки = 1;	
	ЗнакОплаты = +1; 
	ВремРег = СоздатьОбъект("Регистры");
	ПервыйДок=?(ПустоеЗначение(Договор)=1,ПолучитьПустоеЗначение("Документ"),Договор);
	// взаиморасчеты с перевозчиком
	ПервыйДокПеревозчика=?(ПустоеЗначение(ДоговорПеревозки)=1,ПолучитьПустоеЗначение("Документ"),ДоговорПеревозки);
	// Взаиморасчеты с таможней
	ПервыйДокТаможни=?(ПустоеЗначение(ДоговорТаможни)=1,ПолучитьПустоеЗначение("Документ"),ДоговорТаможни);
	
	спКонтрагентов = СоздатьОбъект("СписокЗначений");
	спОснований = СоздатьОбъект("СписокЗначений");
	спВалют = СоздатьОбъект("СписокЗначений");
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
		глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,-ЗнакОплаты, Контрагент, ПервыйДок, Валюта, 1);
		спКонтрагентов.ДобавитьЗначение(Перевозчик);
		спКонтрагентов.ДобавитьЗначение(Таможня);
		спОснований.ДобавитьЗначение(ПервыйДокПеревозчика);
		спОснований.ДобавитьЗначение(ПервыйДокТаможни);
		спВалют.ДобавитьЗначение(ВалютаПеревозки);
		спВалют.ДобавитьЗначение(Гривня);
	Иначе
		спКонтрагентов.ДобавитьЗначение(Контрагент);
		спКонтрагентов.ДобавитьЗначение(Перевозчик);
		спКонтрагентов.ДобавитьЗначение(Таможня);
		спОснований.ДобавитьЗначение(ПервыйДок);
		спОснований.ДобавитьЗначение(ПервыйДокПеревозчика);
		спОснований.ДобавитьЗначение(ПервыйДокТаможни);
		спВалют.ДобавитьЗначение(Валюта);
		спВалют.ДобавитьЗначение(ВалютаПеревозки);
		спВалют.ДобавитьЗначение(Гривня);
	КонецЕсли;
	глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,ЗнакОплаты, спКонтрагентов, спОснований, спВалют);		
КонецПроцедуры

// ===============================
// Назначение:
//		Отражает движения документа по регистру ВзаиморасчетыПоставщиков
// ===============================
Процедура ДвиженияВзаиморасчеты()
	Перем ПройденоДвижений; // Счетчик движений по регистру взаиморасчетов. 
							// Показывает по какому количеству движений уже сформированы проводки.
	Перем НомерДвижения; // Номер текущего движения по регистру взаиморасчетов
	                      
	ПройденоДвижений = 0;
	ФлагОтгрузки = 1;	
	ЗнакОплаты = +1; 	
	НДСВсего = 0;
	ВзаиморасчетыПоставщикВсего  = 0;
	ВзаиморасчетыПеревозчикВсего = 0;
	
    // зарубежный поставщик - расчеты с нулевой ставкой НДС, ВР вычисляются по первому событию
	тбСуммыПогашения = глСоздатьТбСуммыПогашения();
	тбСуммыПогашения.НоваяСтрока();
	тбСуммыПогашения.СтавкаНДС = неНДС;
	тбСуммыПогашения.СуммаСНДС = Итог("СуммаБезНДСВал");
	АвансВал = 0; // в валюте
	АвансОсн = 0; // в основной валюте
	// формирование движений регистров по иностранным поставщиком
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег, Фирма, ?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты), Контрагент, ПервыйДок,Валюта);
	
	глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, 0, Фирма, тбДолги,тбСуммыПогашения,Валюта,Контрагент, ПервыйДок, ВидТорговли, ДокументОснование ); 
		
	// Формирование проводок по взаиморасчетам с иностранным поставщиком
	РегПоставщики=ВремРег.ВзаиморасчетыПоставщиков;	
	Если (РегПоставщики.ВыбратьДвиженияДокумента(ТекущийДокумент()) = 0)
	И (Итог("СуммаБезНДС") = 0) Тогда
		// по регистру взаиморасчетов нет движений. Данная ситуация может возникнуть если 
		// сумма по документу 0. В этом случае нужно сделать одну проводку по счету взаиморасчетов
		// проводки по взаиморасчетам
		глПроводка(Контекст,,СчетКонтрагента,РегПоставщики.ДолгОсн,"Взаиморасчеты с поставщиком.",Итог("Кво"), ,,,
		Контрагент,ПервыйДок,, РегПоставщики.Валюта,РегПоставщики.Долг,"ПХ",1,"Взаиморасчеты",1);
	КонецЕсли;	
	Пока РегПоставщики.ПолучитьДвижение() = 1 Цикл
		Если (Найти(АвансоваяОтгрузка+ПостОтгрузка+ПервоеСобытиеБартерПриход+ВтороеСобытиеБартерПриход,РегПоставщики.КодОперации) = 0) Тогда
			// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
			Продолжить;	
		КонецЕсли;      
		// проводки по взаиморасчетам
		глПроводка(Контекст,,СчетКонтрагента,РегПоставщики.ДолгОсн,"Взаиморасчеты с поставщиком.",, ,,,
		Контрагент,ПервыйДок,, РегПоставщики.Валюта,РегПоставщики.Долг,"ПХ",1,"Взаиморасчеты",1);
		Если глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1 Тогда
			// погашаем аванс по контрагенту                                        
			Если РегПоставщики.КодОперации = АвансоваяОтгрузка Тогда     					
			ИначеЕсли РегПоставщики.КодОперации = ПостОтгрузка Тогда			
				глПроводка(Контекст,СчетКонтрагента,"3712",РегПоставщики.ДолгОсн,"Прих: авансовый платеж",, Контрагент,ПервыйДок,,
				Контрагент,ПервыйДок,, РегПоставщики.Валюта,РегПоставщики.Долг,"ПХ");
				// погашение аванса поставщика
				АвансВал = АвансВал + РегПоставщики.Долг;
				АвансОсн = АвансОсн + РегПоставщики.ДолгОсн;
			КонецЕсли;
		КонецЕсли;          
		Если ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ Тогда
			
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			//
			//Если глДелатьПроводкиПоНалогам(РегПоставщики,"ВД/ВР") = 1 Тогда  
			//	Если СубконтоВалРасх <> Константа.НиДоходНиРасход Тогда
			//		// валовые расходы по поставщику
			//		глПроводка(Контекст,"ВР","ВР",РегПоставщики.СуммаСНДС_НУ-РегПоставщики.НДС,"Вал. расходы (поставщик)",, Контрагент,ПервыйДок,СубконтоВалРасх,
			//		Контрагент,ПервыйДок,СубконтоВалРасх,,,"ПХ");
			//	КонецЕсли;
			//КонецЕсли;  
			//
			// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			
		КонецЕсли;  
		ВзаиморасчетыПоставщикВсего = ВзаиморасчетыПоставщикВсего + РегПоставщики.ДолгОсн;
		ПройденоДвижений = ПройденоДвижений + 1;
	КонецЦикла;	
	АвансПеревозчикуВал = 0; // в валюте
	АвансПеревозчикуОсн = 0; // в основной валюте
	// взаиморасчеты с перевозчиком - расчеты с нулевой ставкой НДС, ВР вычисляются по первому событию
	Если ПустоеЗначение(Перевозчик) = 0 Тогда
		// документ-основание перевозчика
		тбСуммыПогашения.УдалитьСтроки();
		тбСуммыПогашения.НоваяСтрока();
		тбСуммыПогашения.СтавкаНДС = неНДС;
		тбСуммыПогашения.СуммаСНДС = Итог("ПеревозкаВал");
		тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег, Фирма, ЗнакОплаты, Перевозчик, ПервыйДокПеревозчика,ВалютаПеревозки);
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, 0, Фирма, тбДолги, тбСуммыПогашения, ВалютаПеревозки,Перевозчик, ПервыйДокПеревозчика, ВидТорговли, ДокументОснованиеПеревозки);
	КонецЕсли;
	// Формирование проводок по взаиморасчетам с перевозчиком 
	НомерДвижения = 0;
	РегПоставщики=ВремРег.ВзаиморасчетыПоставщиков;	
	РегПоставщики.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегПоставщики.ПолучитьДвижение() = 1 Цикл
		Если (Найти(АвансоваяОтгрузка+ПостОтгрузка+ПервоеСобытиеБартерПриход+ВтороеСобытиеБартерПриход,РегПоставщики.КодОперации) = 0) Тогда
			// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
			Продолжить;	
		КонецЕсли;      
		НомерДвижения = НомерДвижения + 1;          
		// это движение уже обработали ...
		Если НомерДвижения <= ПройденоДвижений Тогда
			// .. идем дальше
			Продолжить;
		КонецЕсли;	
		Если глВыделятьЛиАвансыПоСчету(СчетПеревозчика) = 1 Тогда
			Если РегПоставщики.КодОперации = АвансоваяОтгрузка Тогда     					
			ИначеЕсли РегПоставщики.КодОперации = ПостОтгрузка Тогда							
				Если ВалютаПеревозки=Гривня Тогда
					глПроводка(Контекст,СчетПеревозчика,"3711",РегПоставщики.Долг,"Прих: авансовый платеж по перевозке",, Перевозчик,ПервыйДокПеревозчика,,
					Перевозчик,ПервыйДокПеревозчика,, ,,"ПХ");
				Иначе
					глПроводка(Контекст,СчетПеревозчика,"3712",РегПоставщики.ДолгОсн,"Прих: авансовый платеж по перевозке",, Перевозчик,ПервыйДокПеревозчика,,
					Перевозчик,ПервыйДокПеревозчика,, РегПоставщики.Валюта,РегПоставщики.Долг,"ПХ");
				КонецЕсли;   
				// погашение аванса перевозчика
				АвансПеревозчикуВал = АвансПеревозчикуВал + РегПоставщики.Долг;
				АвансПеревозчикуОсн = АвансПеревозчикуОсн + РегПоставщики.ДолгОсн;
			КонецЕсли;
		КонецЕсли;
		Если ((РегПоставщики.КодОперации = АвансоваяОтгрузка)
		ИЛИ (РегПоставщики.КодОперации = ПостОтгрузка))Тогда 
			// проводки по взаиморасчетам
			Если ВалютаПеревозки = Гривня Тогда
				глПроводка(Контекст,,СчетПеревозчика,РегПоставщики.Долг,"Прих:Перевозка",, ,,,
				Перевозчик,ПервыйДокПеревозчика,, ,,"ПХ",1,3,1);
			Иначе
				глПроводка(Контекст,,СчетПеревозчика,РегПоставщики.ДолгОсн,"Прих:Перевозка",, ,,,
				Перевозчик,ПервыйДокПеревозчика,, РегПоставщики.Валюта,РегПоставщики.Долг,"ПХ",1,3,1);
			КонецЕсли;
		КонецЕсли;
		Если ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ Тогда
			
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			//
			//Если СубконтоВалРасх <> Константа.НиДоходНиРасход Тогда
			//	// валовые расходы по перевозчику
			//	глПроводка(Контекст,"ВР","ВР",РегПоставщики.СуммаСНДС_НУ-РегПоставщики.НДС,"Вал. расходы (перевозчик)",, Перевозчик,ПервыйДокПеревозчика,СубконтоВалРасх,
			//	Перевозчик,ПервыйДокПеревозчика,СубконтоВалРасх,,,"ПХ");
			//КонецЕсли;	
			
			// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			
		КонецЕсли;	
		ВзаиморасчетыПеревозчикВсего = ВзаиморасчетыПеревозчикВсего + РегПоставщики.ДолгОсн;
		ПройденоДвижений = ПройденоДвижений + 1;
	КонецЦикла;	
	// формирование движений регистров по взаиморасчетам с таможней
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРег, Фирма, ЗнакОплаты, Таможня, ПервыйДокТаможни, Гривня);
	// Учет НДС на импорт - приходуем от таможни
	СуммаСНДС_Т = Окр(Итог("НДС")+ДопНДС,2);
	НДСВсего = СуммаСНДС_Т - ДопНДС;
	Если СуммаСНДС_Т <> 0 Тогда
		тбСуммыПогашения.УдалитьСтроки();
		тбСуммыПогашения.НоваяСтрока();
		тбСуммыПогашения.СтавкаНДС = неНДС;
		тбСуммыПогашения.НеВключаетсяВВДВР = 0;
		тбСуммыПогашения.СуммаСНДС = СуммаСНДС_Т;
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, 0, Фирма, тбДолги, тбСуммыПогашения,
			Гривня,Таможня, ПервыйДокТаможни, Перечисление.ВидыТорговли.Предоплата, ДокументОснованиеТаможни, НачислениеНДСнаИмпорт);
		// делаем запись по налоговому учету
		// на НДС с этой суммы должна быть выписана ЗКП
		ПроцНДС = глПроцентНДС(ВидНДС,ДатаДок);
		СуммаСНДС_НУ = СуммаСНДС_Т * ?(ПроцНДС = 0,1,(100 + ПроцНДС)/ПроцНДС);
		Регистр.ВзаиморасчетыПоставщиков.Фирма = Фирма;
		Регистр.ВзаиморасчетыПоставщиков.Контрагент = Контрагент;
		Регистр.ВзаиморасчетыПоставщиков.Договор = ПервыйДок;
		Регистр.ВзаиморасчетыПоставщиков.Счет = ДокументОснование;
		Регистр.ВзаиморасчетыПоставщиков.КредДокумент = ТекущийДокумент();
		Регистр.ВзаиморасчетыПоставщиков.Валюта = Гривня;
		Регистр.ВзаиморасчетыПоставщиков.СтавкаНДС = ВидНДС;
		Регистр.ВзаиморасчетыПоставщиков.Долг = 0;
		Регистр.ВзаиморасчетыПоставщиков.ДолгОсн = 0;
		Регистр.ВзаиморасчетыПоставщиков.СуммаСНДС_НУ = СуммаСНДС_НУ;
		Регистр.ВзаиморасчетыПоставщиков.НДС = СуммаСНДС_Т;
		Регистр.ВзаиморасчетыПоставщиков.Флаг_НУ = НУ_ВозникновениеНО;
		Регистр.ВзаиморасчетыПоставщиков.ДвижениеРасходВыполнить();
		Если НДСНаЗатраты = 0 Тогда
			// налоговый кредит
			глПроводка(Контекст,СчетНДС,,СуммаСНДС_Т,"НДС на импорт",, СубконтоНДС1,СубконтоНДС2,,
			,,, ,,"ПХ",1,2);
		КонецЕсли;
	КонецЕсли;            
	// Учет акцизного сбора - приходуем от таможни
	Если Итог("Акциз") <> 0 Тогда
		тбСуммыПогашения.УдалитьСтроки();
		тбСуммыПогашения.НоваяСтрока();
		тбСуммыПогашения.СтавкаНДС = неНДС;
		тбСуммыПогашения.НеВключаетсяВВДВР = 1;
		тбСуммыПогашения.СуммаСНДС = Итог("Акциз");
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, 0, Фирма, тбДолги, тбСуммыПогашения,
			Гривня,Таможня, ПервыйДокТаможни, Перечисление.ВидыТорговли.Предоплата, ДокументОснованиеТаможни, НачислениеАкциза);
	КонецЕсли;
	// Учет пошлины - приходуем от таможни
	Если Итог("Пошлина") <> 0 Тогда
		тбСуммыПогашения.УдалитьСтроки();
		тбСуммыПогашения.НоваяСтрока();
		тбСуммыПогашения.СтавкаНДС = неНДС;
		тбСуммыПогашения.НеВключаетсяВВДВР = 1;
		тбСуммыПогашения.СуммаСНДС = Итог("Пошлина");
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, 0, Фирма, тбДолги, тбСуммыПогашения,
			Гривня,Таможня, ПервыйДокТаможни, Перечисление.ВидыТорговли.Предоплата, ДокументОснованиеТаможни, НачислениеПошлины);
	КонецЕсли;
	// Учет таможенных услуг - приходуем от таможни
	Если Итог("ТаможенныеУслуги") <> 0 Тогда
		тбСуммыПогашения.УдалитьСтроки();
		тбСуммыПогашения.НоваяСтрока();
		тбСуммыПогашения.СтавкаНДС = неНДС;
		тбСуммыПогашения.НеВключаетсяВВДВР = 0;
		тбСуммыПогашения.СуммаСНДС = Итог("ТаможенныеУслуги");
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, 0, Фирма, тбДолги, тбСуммыПогашения,
			Гривня,Таможня, ПервыйДокТаможни, Перечисление.ВидыТорговли.Предоплата, ДокументОснованиеТаможни, НачислениеТаможенныхУслуг);
	КонецЕсли;                               
	// Формирование проводок по взаиморасчетам с таможней
	НомерДвижения = 0;
	РегПоставщики=ВремРег.ВзаиморасчетыПоставщиков;	
	РегПоставщики.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегПоставщики.ПолучитьДвижение() = 1 Цикл
		НомерДвижения = НомерДвижения + 1;          
		// это движение уже обработали ...
		Если НомерДвижения <= ПройденоДвижений Тогда
			// .. идем дальше
			Продолжить;
		КонецЕсли;	
		Если РегПоставщики.КодОперации = НачислениеАкциза Тогда     					
			глПроводка(Контекст,СчетПоКоду("64.1.2"),,РегПоставщики.Долг,"Взаиморасчеты с таможней: Акциз.",, ,,,
			,,, ,,"ПХ",1,2);
		ИначеЕсли РегПоставщики.КодОперации = НачислениеПошлины Тогда     					
			глПроводка(Контекст,СчетПоКоду("64.2.6"),,РегПоставщики.Долг,"Взаиморасчеты с таможней: Таможенные пошлины и сборы.",, СубконтоПошлина,,,
			,,, ,,"ПХ",1,2);
		КонецЕсли;	
		Если глВыделятьЛиАвансыПоСчету(СчетТаможни) = 1 Тогда
			// по взаиморасчетам с таможней не бывает операций АвансоваяОтгрузка и ПостОтгрузка
			Если РегПоставщики.КредДокумент<>ТекущийДокумент() Тогда							
				глПроводка(Контекст,СчетТаможни,"3711",РегПоставщики.Долг,"Прих: авансовый платеж по таможне",, Таможня,ПервыйДокТаможни,,
				Таможня,ПервыйДокТаможни,, ,,"ПХ",1,0);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	                                                                 
	СуммаПоТаможне = Итог("Акциз") +  Итог("Пошлина") + Итог("ТаможенныеУслуги");
	Если НДСНаЗатраты = 0 Тогда
		СуммаПоТаможне = СуммаПоТаможне + СуммаСНДС_Т;
	КонецЕсли;	
	// проводки по взаиморасчетам с таможней
	глПроводка(Контекст,,СчетТаможни,СуммаПоТаможне,"Взаиморасчеты с таможней",, ,,,
	Таможня,ПервыйДокТаможни,, ,,"ПХ",1,2,1);
	Если ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ Тогда
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		//// валовые расходы по таможне
		//Если СубконтоВалРасх <> Константа.НиДоходНиРасход Тогда
		//	глПроводка(Контекст,"ВР","ВР",Итог("ТаможенныеУслуги"),"Вал. расходы (таможня)",, Таможня,ПервыйДокТаможни,СубконтоВалРасх,
		//	Таможня,ПервыйДокТаможни,СубконтоВалРасх,,,"ПХ");		
		//КонецЕсли;	
		
		// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		
	КонецЕсли;	
КонецПроцедуры

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
    глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
   	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Процедура ДвиженияОстатки()
	
	глКомментарий("Выполняются движения остатков ТМЦ",2);

	ФлагПрихода = 1;
	// движения по регистру Остатки       
	
	ТМПЦПрих = ?(ПустоеЗначение(ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляПрихода.Получить(ДатаДок), ТМЦ); //--- УМК Сандомирский В.Ю. (01.10.14) ТМЦОстатки
	
	Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
		ТМЦОстатки = ТМЦ;
	Иначе
		ТМЦОстатки = ТМПЦПрих;							
	КонецЕсли;				
					
	глПровестиОстатки(Контекст, ВремРег, Фирма, МестоХранения, ТМЦОстатки,, Кво * Коэффициент, ФлагПрихода, 0);		 //--- УМК Сандомирский В.Ю. (01.10.14) ТМЦОстатки	
	
КонецПроцедуры
                           
// ===============================
Процедура ДвиженияПартии() 
	
	глКомментарий("Выполняются движения партий ТМЦ",2);
	
	тбТовары = 0;
	ВыгрузитьТабличнуюЧасть(тбТовары,"ТМЦ,Кво,Коэффициент,СуммаБезНДСВал,Перевозка,ПеревозкаВал,Акциз,Пошлина,ТаможенныеУслуги,СуммаБезНДС,НДС,ДопКво");
	Если тбТовары.КоличествоСтрок()=0 Тогда
	    глНеПроводить(Контекст,"Отсутствуют ТМЦ в табличной части.");
		Возврат;
	КонецЕсли;       
	тбТовары.ВыбратьСтроки();
	Пока тбТовары.ПолучитьСтроку() =1 Цикл
		// на себестоиомсть должна пойти сумма по курсу НБУ
		тбТовары.СуммаБезНДС = глСуммаОсн(тбТовары.СуммаБезНДСВал,Контекст,Валюта);
		тбТовары.Перевозка   = глСуммаОсн(тбТовары.ПеревозкаВал,Контекст,ВалютаПеревозки);		
	КонецЦикла;
	тбТовары.НоваяКолонка("СуммаБезНДСОсн",   "Число",15,3);
	тбТовары.НоваяКолонка("СуммаПеревозкиОсн","Число",15,3);
	// нужно изменить стоимоть в таблице в соответствии курсом авансом
	кАванса = ?(Итог("СуммаБезНДСВал") = 0,0,АвансВал/Итог("СуммаБезНДСВал")); // часть аванса в себестоимости
	Если кАванса<>0 Тогда
	    КурсАванса = ?(ПустоеЗначение(АвансВал)=1,0,АвансОсн/АвансВал);
	Иначе
		КурсАванса = 0;
	КонецЕсли;
	КурсАвансаПеревозчику = 0;
	Если Итог("Перевозка") <> 0 Тогда
		Если ПустоеЗначение(ВалютаПеревозки) = 0 Тогда
			кАвансаПеревозчику = ?(ПустоеЗначение(Итог("ПеревозкаВал"))=1,0,АвансПеревозчикуВал/Итог("ПеревозкаВал")); // часть аванса в себестоимости
			Если кАвансаПеревозчику<>0 Тогда
			    КурсАвансаПеревозчику = ?(ПустоеЗначение(АвансПеревозчикуВал)=1,0,АвансПеревозчикуОсн/АвансПеревозчикуВал);
			КонецЕсли;
		КонецЕсли;	
	Иначе
		кАвансаПеревозчику = 0;
	КонецЕсли;      
	тбТовары.ВыбратьСтроки();
	Пока тбТовары.ПолучитьСтроку()=1 Цикл
		тбТовары.СуммаБезНДСОсн = тбТовары.СуммаБезНДСВал * кАванса * КурсАванса + тбТовары.СуммаБезНДС* (1 - кАванса);
		Если ПустоеЗначение(ВалютаПеревозки) = 0 Тогда
			тбТовары.СуммаПеревозкиОсн = тбТовары.ПеревозкаВал * кАвансаПеревозчику * КурсАвансаПеревозчику + тбТовары.Перевозка* (1 - кАвансаПеревозчику);
		Иначе
			тбТовары.СуммаПеревозкиОсн = 0;
		КонецЕсли;	
	КонецЦикла;	     
	глОчиститьКлючОкр("Взаим");
	глОчиститьКлючОкр("НДС");
	глОчиститьКлючОкр("ДопНДС");
	глОчиститьКлючОкр("Перев");
	// определим базы для распределения
	ИтогПоПоставщику  = тбТовары.Итог("СуммаБезНДСОсн");
	ИтогПоПеревозчику = тбТовары.Итог("СуммаПеревозкиОсн");
	ИтогНДС 		  = тбТовары.Итог("НДС");
	// Рассчитать сумму услуг в табличной части
	ИСуммаБезНДСУслуг = 0;
	ИСуммаCНДСТоваров = 0;
	ИСуммаБезНДСТоваров = 0;
	НомерСтрокиПоследнегоТовара = 1;
	тбТовары.ВыбратьСтроки();
	Пока тбТовары.ПолучитьСтроку()=1 Цикл
		// учтем ошибки округления 
		тбТовары.СуммаБезНДСОсн		= глОкрКорр("Взаим", ?(ИтогПоПоставщику  = 0, 0, ВзаиморасчетыПоставщикВсего * тбТовары.СуммаБезНДСОсн/ ИтогПоПоставщику),2);
		тбТовары.НДС				= глОкрКорр("НДС",   ?(ИтогНДС = 0, 0,           НДСВсего * тбТовары.НДС/ ИтогНДС),2);
		тбТовары.СуммаПеревозкиОсн	= глОкрКорр("Перев", ?(ИтогПоПеревозчику = 0, 0, ВзаиморасчетыПеревозчикВсего * тбТовары.СуммаПеревозкиОсн/ ИтогПоПеревозчику),2);		
		
		ИСуммаБезНДСТоваров         = ИСуммабезНДСТоваров + тбТовары.СуммаБезНДСОсн;
		НомерСтрокиПоследнегоТовара = НомерСтроки;
	КонецЦикла;
	НераспрИСуммаБезНДСУслуг = ИСуммаБезНДСУслуг;
	МестоХраненияП           = ?(глПартионныйУчетПоСкладам = Да,МестоХранения,0);
	ИтДопНДСПоСтроке         = 0;  
	ОкрПриходСтоимостьВсего  = 0; // для рассчета разницы округления
	тбТовары.ВыбратьСтроки();
	Пока тбТовары.ПолучитьСтроку()=1 Цикл
		ДопНДСПоСтроке = 0; ОтличиеНалИБух = 0;
		Если НДСНаЗатраты = 1 Тогда
		    // НДС на себестоимость
			ДопНДСПоСтроке = ?(ИтСуммаБезНДСВал = 0, 0, тбТовары.СуммаБезНДСВал/ИтСуммаБезНДСВал*ДопНДС);
			ДопНДСПоСтроке = глОкрКорр("ДопНДС",ДопНДСПоСтроке, 2);
		КонецЕсли;
		МетодРасчетаСебестоимости=глПолучитьМетодРасчетаСебестоимости(тбТовары.ТМЦ,ДатаДок);				
		Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
			ПоставщикП    = 0;
			ПоставкаП     = 0;
			ПрихДокументП = 0;
		Иначе
			ПоставщикП    = Контрагент;
			ПоставкаП     = ТекущийДокумент();
			ПрихДокументП = ТекущийДокумент();
		КонецЕсли;
		ПриходОстатокТовара = тбТовары.Кво * тбТовары.Коэффициент;
		ПриходОстатокТовараК = тбТовары.ДопКво;
		Если НомерСтроки = НомерСтрокиПоследнегоТовара Тогда
			ДопСуммаБезНДС = НераспрИСуммаБезНДСУслуг;
			ДопСуммаБезНДС = НераспрИСуммаБезНДСУслуг;
		Иначе                                         
			ДопСуммаБезНДС           = тбТовары.СуммаБезНДСОсн / ИСуммаБезНДСТоваров *  ИСуммаБезНДСУслуг;
			НераспрИСуммаБезНДСУслуг = НераспрИСуммаБезНДСУслуг  - ДопСуммаБезНДС; 
		КонецЕсли;
		// рассчитаем себестоимость партии
		ПриходСтоимость     = тбТовары.СуммаБезНДСОсн;
		ПриходНДС           = тбТовары.НДС;
		ПриходПродСтоимость = 0;			
		СчетП               = тбТовары.ТМЦ.Счет;
		Если тбТовары.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			КодОперации = ПокупкаУслуги;
		Иначе     
			КодОперации = Закупка;
		КонецЕсли;
		Оборот        = ПриходСтоимость+?(НДСНаЗатраты=1,ПриходНДС + ДопНДСПоСтроке,0);
		Себестоимость = ПриходСтоимость+?(НДСНаЗатраты=1,ПриходНДС + ДопСуммаБезНДС,0);
			
		
		ТМПЦПрих = ?(ПустоеЗначение(тбТовары.ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) = 0, тбТовары.ТМЦ.ТМЦДляПрихода.Получить(ДатаДок), тбТовары.ТМЦ); //--- УМК Сандомирский В.Ю. (29.08.14) ТМПЦПрих
				
		глПровестиПартию(Контекст, 1, 0, Фирма, ТМПЦПрих, СчетП, МестоХраненияП, ПоставщикП,									//--- УМК Сандомирский В.Ю. (29.08.14) ТМПЦПрих
			ПоставкаП, ПрихДокументП, ПриходОстатокТовара, Себестоимость, ПриходПродСтоимость, 
			КодОперации, 1, Оборот, 0, тбТовары.НомерСтроки, ,,,ПриходОстатокТовараК);
		глПроводка(Контекст,СчетП,,ПриходСтоимость,"Прих:Себестоимость",ПриходОстатокТовара, МестоХраненияП,ТМПЦПрих,ПоставкаП, //--- УМК Сандомирский В.Ю. (29.08.14) ТМПЦПрих
		Контрагент,ПервыйДок,, ,,"ПХ",1,"Взаиморасчеты");                                 
		
		ОтличиеНалИБух = ОтличиеНалИБух + Себестоимость;
		
		Если НДСНаЗатраты = 1 Тогда
			глПроводка(Контекст,СчетП,СчетТаможни,ПриходНДС + ДопНДСПоСтроке,"Прих:НДС на себестоимость",, МестоХраненияП,ТМПЦПрих,ПоставкаП,   //--- УМК Сандомирский В.Ю. (29.08.14) ТМПЦПрих
			Таможня,ПервыйДокТаможни,, ,,"ПХ",1,0); // добавление НДС в себестоимость партии
			ОтличиеНалИБух = ОтличиеНалИБух + ПриходНДС + ДопНДСПоСтроке;
		КонецЕсли; 
		ПриходНДС = 0;
		ПриходОстатокТовара = 0;		
		// Акциз
		Если тбТовары.Акциз <> 0 Тогда
			ПриходСтоимость = тбТовары.Акциз;
			КодОперации     = ПриходованиеАкциз;
			глПровестиПартию(Контекст, 1, 0, Фирма, ТМПЦПрих, СчетП, МестоХраненияП, ПоставщикП,								//--- УМК Сандомирский В.Ю. (29.08.14) ТМПЦПрих
				ПоставкаП, ПрихДокументП, ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость,
				КодОперации, 1, ПриходСтоимость, 0);
			глПроводка(Контекст,СчетП,СчетПоКоду("64.1.2"),ПриходСтоимость,"Прих:Себестоимость - акциз",, МестоХраненияП,ТМПЦПрих,ПоставкаП,
			,,, ,,"ПХ",1,0);
		КонецЕсли;	
		// Пошлина
		Если тбТовары.Пошлина <> 0 Тогда
			ПриходСтоимость = тбТовары.Пошлина;
			КодОперации     = ПриходованиеПошлина;
			глПровестиПартию(Контекст, 1, 0, Фирма, ТМПЦПрих, СчетП, МестоХраненияП, ПоставщикП,								//--- УМК Сандомирский В.Ю. (29.08.14) ТМПЦПрих
				ПоставкаП, ПрихДокументП, ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость, 
				КодОперации, 1, ПриходСтоимость, 0, тбТовары.НомерСтроки);
			глПроводка(Контекст,СчетП,СчетПоКоду("64.2.6"),ПриходСтоимость,"Прих:Себестоимость - пошлина",, МестоХраненияП,ТМПЦПрих,ПоставкаП,
			СубконтоПошлина,,, ,,"ПХ",1,0);
		КонецЕсли;	
		// Таможенные услуги
		Если тбТовары.ТаможенныеУслуги <> 0 Тогда
			ПриходСтоимость = тбТовары.ТаможенныеУслуги;
			КодОперации     = ПриходованиеУслугиТаможни;
			глПровестиПартию(Контекст, 1, 0, Фирма, ТМПЦПрих, СчетП, МестоХраненияП, ПоставщикП,								//--- УМК Сандомирский В.Ю. (29.08.14) ТМПЦПрих
				ПоставкаП, ПрихДокументП, ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость, 
				КодОперации, 1, ПриходСтоимость, 0, тбТовары.НомерСтроки);
			глПроводка(Контекст,СчетП,,ПриходСтоимость,"Прих:Себестоимость - таможенные услуги",, МестоХраненияП,ТМПЦПрих,ПоставкаП,
			,,, ,,"ПХ",1,2);
		КонецЕсли;	
		// Перевозка
		Если (Перевозчик.Выбран()=1) и (тбТовары.СуммаПеревозкиОсн <> 0) Тогда
			ПриходСтоимость = тбТовары.СуммаПеревозкиОсн;
			КодОперации     = ПриходованиеПеревозка;
			глПровестиПартию(Контекст, 1, 0, Фирма, ТМПЦПрих, СчетП, МестоХраненияП, ПоставщикП,								//--- УМК Сандомирский В.Ю. (29.08.14) ТМПЦПрих
				ПоставкаП, ПрихДокументП, ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость,
				КодОперации, 1, ПриходСтоимость, 0, тбТовары.НомерСтроки);
			глПроводка(Контекст,СчетП,,ПриходСтоимость,"Прих:Себестоимость - перевозка",, МестоХраненияП,ТМПЦПрих,ПоставкаП,
			,,, ,,"ПХ",1,3);
		КонецЕсли;
		
		ОтличиеНалИБух = ОтличиеНалИБух + тбТовары.Акциз + тбТовары.Пошлина + тбТовары.ТаможенныеУслуги + тбТовары.СуммаПеревозкиОсн;
		// отражение отклонений от стоимости по нал. учету
		//глПровестиПоЗабалансовомуУчетуЗапасов(Контекст,СчетП,"О",-ОтличиеНалИБух,тбТовары.ТМЦ,СубконтоВалРасх,1);
	КонецЦикла; // строки документа
КонецПроцедуры
                        
// ===============================
// Назначение: формирует проводки по приходованию инвестиций
Процедура ПроводкиПоОСиНМА()
	
	глКомментарий("Выполняются формирование проводок по инвестициям",2);
	
	тбТовары = 0;
	ВыгрузитьТабличнуюЧасть(тбТовары,"ТМЦ,Кво,Коэффициент,СуммаБезНДСВал,Перевозка,ПеревозкаВал,Акциз,Пошлина,ТаможенныеУслуги,СуммаБезНДС,НДС");
	Если тбТовары.КоличествоСтрок()=0 Тогда
	    глНеПроводить(Контекст,"Отсутствуют ТМЦ в табличной части.");
		Возврат;
	КонецЕсли;       
	тбТовары.ВыбратьСтроки();
	Пока тбТовары.ПолучитьСтроку() =1 Цикл
		// на себестоиомсть должна пойти сумма по курсу НБУ
		тбТовары.СуммаБезНДС = глСуммаОсн(тбТовары.СуммаБезНДСВал,Контекст,Валюта);
		тбТовары.Перевозка   = глСуммаОсн(тбТовары.ПеревозкаВал,  Контекст,ВалютаПеревозки);		
	КонецЦикла;
	тбТовары.НоваяКолонка("СуммаБезНДСОсн",   "Число",15,3);
	тбТовары.НоваяКолонка("СуммаПеревозкиОсн","Число",15,3);
	// нужно изменить стоимоть в таблице в соответствии курсом авансом
	кАванса = ?(Итог("СуммаБезНДСВал") = 0,0,АвансВал/Итог("СуммаБезНДСВал")); // часть аванса в себестоимости
	Если кАванса<>0 Тогда
	    КурсАванса = ?(ПустоеЗначение(АвансВал)=1,0,АвансОсн/АвансВал);
	Иначе
		КурсАванса = 0;
	КонецЕсли;
	КурсАвансаПеревозчику = 0;
	Если Итог("Перевозка") <> 0 Тогда
		Если ПустоеЗначение(ВалютаПеревозки) = 0 Тогда
			кАвансаПеревозчику = ?(ПустоеЗначение(Итог("ПеревозкаВал"))=1,0,АвансПеревозчикуВал/Итог("ПеревозкаВал")); // часть аванса в себестоимости
			Если кАвансаПеревозчику<>0 Тогда
			    КурсАвансаПеревозчику = ?(ПустоеЗначение(АвансПеревозчикуВал)=1,0,АвансПеревозчикуОсн/АвансПеревозчикуВал);
			КонецЕсли;
		КонецЕсли;	
	Иначе
		кАвансаПеревозчику = 0;
	КонецЕсли;      
	тбТовары.ВыбратьСтроки();
	Пока тбТовары.ПолучитьСтроку()=1 Цикл
		тбТовары.СуммаБезНДСОсн = тбТовары.СуммаБезНДСВал * кАванса * КурсАванса + тбТовары.СуммаБезНДС* (1 - кАванса);
		Если ПустоеЗначение(ВалютаПеревозки) = 0 Тогда
			тбТовары.СуммаПеревозкиОсн = тбТовары.ПеревозкаВал * кАвансаПеревозчику * КурсАвансаПеревозчику + тбТовары.Перевозка* (1 - кАвансаПеревозчику);
		Иначе
			тбТовары.СуммаПеревозкиОсн = 0;
		КонецЕсли;	
	КонецЦикла;	     
	глОчиститьКлючОкр("Взаим");
	глОчиститьКлючОкр("НДС");
	глОчиститьКлючОкр("ДопНДС");
	глОчиститьКлючОкр("Перев");
	// определим базы для распределения
	ИтогПоПоставщику  = тбТовары.Итог("СуммаБезНДСОсн");
	ИтогПоПеревозчику = тбТовары.Итог("СуммаПеревозкиОсн");
	ИтогНДС 		  = тбТовары.Итог("НДС");
	// Рассчитать сумму услуг в табличной части
	ИСуммаCНДСТоваров   = 0;
	ИСуммаБезНДСТоваров = 0;
	НомерСтрокиПоследнегоТовара = 1;
	тбТовары.ВыбратьСтроки();
	Пока тбТовары.ПолучитьСтроку()=1 Цикл
		// учтем ошибки округления 
		тбТовары.СуммаБезНДСОсн		= глОкрКорр("Взаим", ?(ИтогПоПоставщику  = 0, 0, ВзаиморасчетыПоставщикВсего * тбТовары.СуммаБезНДСОсн/ ИтогПоПоставщику),2);
		тбТовары.НДС				= глОкрКорр("НДС",   ?(ИтогНДС = 0, 0,           НДСВсего * тбТовары.НДС/ ИтогНДС),2);
		тбТовары.СуммаПеревозкиОсн	= глОкрКорр("Перев", ?(ИтогПоПеревозчику = 0, 0, ВзаиморасчетыПеревозчикВсего * тбТовары.СуммаПеревозкиОсн/ ИтогПоПеревозчику),2);		
		
		ИСуммаБезНДСТоваров         = ИСуммабезНДСТоваров + тбТовары.СуммаБезНДСОсн;
		НомерСтрокиПоследнегоТовара = НомерСтроки;
	КонецЦикла;
	МестоХраненияП           = ?(глПартионныйУчетПоСкладам = Да,МестоХранения,0);
	ИтДопНДСПоСтроке         = 0;  
	ОкрПриходСтоимостьВсего  = 0; // для рассчета разницы округления
	тбТовары.ВыбратьСтроки();
	Пока тбТовары.ПолучитьСтроку()=1 Цикл
		ПоставкаП      = ТекущийДокумент();
		ДопНДСПоСтроке = 0;
		Если НДСНаЗатраты = 1 Тогда
		    // НДС на себестоимость
			ДопНДСПоСтроке = ?(ИтСуммаБезНДСВал = 0, 0, тбТовары.СуммаБезНДСВал/ИтСуммаБезНДСВал*ДопНДС);
			ДопНДСПоСтроке = глОкрКорр("ДопНДС",ДопНДСПоСтроке, 2);
		КонецЕсли;
		ПриходОстатокТовара = тбТовары.Кво * тбТовары.Коэффициент;
		// рассчитаем себестоимость партии
		ПриходСтоимость     = тбТовары.СуммаБезНДСОсн;
		ПриходНДС           = тбТовары.НДС;
		СчетП               = тбТовары.ТМЦ.Счет;
		глПроводка(Контекст,СчетП,,ПриходСтоимость,"Прих:Себестоимость",ПриходОстатокТовара, тбТовары.ТМЦ,,,
		Контрагент,ПервыйДок,, Валюта, тбТовары.СуммаБезНДСВал,"ПХ",1,"Взаиморасчеты");
		ОбщаяСтоимостьОС = ПриходСтоимость;
		Если НДСНаЗатраты = 1 Тогда
			глПроводка(Контекст,СчетП,СчетТаможни,ПриходНДС + ДопНДСПоСтроке,"Прих:НДС на себестоимость",, тбТовары.ТМЦ,,,
			Таможня,ПервыйДокТаможни,,Валюта ,,"ПХ",1,0); // добавление НДС в себестоимость партии
			ОбщаяСтоимостьОС = ОбщаяСтоимостьОС + ПриходНДС + ДопНДСПоСтроке;
		КонецЕсли; 
		ПриходНДС = 0;
		
		// Акциз
		Если тбТовары.Акциз <> 0 Тогда
			ПриходСтоимость = тбТовары.Акциз;
			глПроводка(Контекст,СчетП,СчетПоКоду("64.1.2"),ПриходСтоимость,"Прих:Себестоимость - акциз",, тбТовары.ТМЦ,,,
			,,, Валюта,,"ПХ",1,0);
			ОбщаяСтоимостьОС = ОбщаяСтоимостьОС + ПриходСтоимость;
		КонецЕсли;	
		// Пошлина
		Если тбТовары.Пошлина <> 0 Тогда
			ПриходСтоимость = тбТовары.Пошлина;
			глПроводка(Контекст,СчетП,СчетПоКоду("64.2.6"),ПриходСтоимость,"Прих:Себестоимость - пошлина",, тбТовары.ТМЦ,,,
			СубконтоПошлина,,, Валюта,,"ПХ",1,0);
			ОбщаяСтоимостьОС = ОбщаяСтоимостьОС + ПриходСтоимость;
		КонецЕсли;	
		// Таможенные услуги
		Если тбТовары.ТаможенныеУслуги <> 0 Тогда
			ПриходСтоимость = тбТовары.ТаможенныеУслуги;
			глПроводка(Контекст,СчетП,,ПриходСтоимость,"Прих:Себестоимость - таможенные услуги",, тбТовары.ТМЦ,,,
			,,, Валюта,,"ПХ",1,2);
			ОбщаяСтоимостьОС = ОбщаяСтоимостьОС + ПриходСтоимость;
		КонецЕсли;	
		// Перевозка
		Если (Перевозчик.Выбран()=1) и (тбТовары.СуммаПеревозкиОсн <> 0) Тогда
			ПриходСтоимость = тбТовары.СуммаПеревозкиОсн;
			глПроводка(Контекст,СчетП,,ПриходСтоимость,"Прих:Себестоимость - перевозка",, тбТовары.ТМЦ,,,
			,,, Валюта,,"ПХ",1,3);
			ОбщаяСтоимостьОС = ОбщаяСтоимостьОС + ПриходСтоимость;
		КонецЕсли;
		
//		Если тбТовары.ТМЦ.УчитываетсяКакЗапасВНалогУчете = 1 Тогда
//	       	//Такие инвестиции должны учитываться в налоговом учете как запасы.
//			МетодРасчетаСебестоимости = Константа.МетодРасчетаСебестоимостиПроизводственныхЗапасов.Получить(ДатаДок);
//			Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
//				ПоставщикП = 0;
//				ПоставкаП = 0;
//				ПрихДокументП = 0;
//			Иначе
//				ПоставщикП = Контрагент;
//				ПоставкаП = ТекущийДокумент();
//				ПрихДокументП = ТекущийДокумент();
//			КонецЕсли;
//			СчетП = СчетПоКоду("ОЗ");
//			МестоХраненияП = ПолучитьПустоеЗначение("Справочник.МестаХранения");// инвестиции учитываются по пустому месту хранения
//			ОСкакТМЦ = тбТовары.ТМЦ.ТМЦ;
//			КодОперации = Закупка;
// 				
//			глПровестиПартию(Контекст, 1, 0, Фирма, ОСкакТМЦ, СчетП, МестоХраненияП, ПоставщикП,
//							ПоставкаП, ПрихДокументП, ПриходОстатокТовара, ОбщаяСтоимостьОС, 0, КодОперации, 0, 0, 0);
//
//			глПроводка(Контекст,СчетП,,ОбщаяСтоимостьОС,"Прих:Себестоимость",ПриходОстатокТовара, МестоХраненияП,ОСкакТМЦ,,
//					,,, ,,"ПХ",1,0);
//               
//			// такие запасы тоже принимают участие в расчете прироста-убыли, значит, относятся на валовые расходы
//			// первое событие не соблюдается, поскольку в других строках документа могут быть обычные основные средства
//			Если СубконтоВалРасх <> Константа.НиДоходНиРасход Тогда
//	  			глПроводка(Контекст,"ВР","ВР",ОбщаяСтоимостьОС,"Вал. расходы: необор. активы, учитываемые как запасы ",, Контрагент,Договор,СубконтоВалРасх,
//				Контрагент,Договор,СубконтоВалРасх,,,"ПХ",1,"ВРпоОСкакЗапасы");
//			КонецЕсли;
//		КонецЕсли;
	    
		ПриходОстатокТовара = 0;
		
	КонецЦикла; // строки документа
	
КонецПроцедуры //ПроводкиПоОСиНМА

//*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*
Процедура ЗаписатьЦены()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	ТЗ.Свернуть("ТМЦ", "Кво,СуммаСНДС,Акциз,Пошлина,ТаможенныеУслуги,Перевозка");
	СпрЦ = СоздатьОбъект("Справочник.Цены");
	СпрЦ.ИспользоватьДату(ДатаДок, 1);

	КатПЦены = Константа.КатЦенПрих;                 
	
	Если ПустоеЗначение(КатПЦены)=1 Тогда
		Сообщить("Не выбрана категория цены прихода.","!!!");
		Возврат;
	КонецЕсли;
	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл		
		ССНДС = ТЗ.СуммаСНДС + ТЗ.Акциз + ТЗ.Пошлина + ТЗ.ТаможенныеУслуги + ТЗ.Перевозка;
		Сум = Окр(ССНДС / ?(ТЗ.Кво = 0, 1, ТЗ.Кво), 2);
		Если Сум = 0 Тогда
			Продолжить;
		КонецЕсли;
		СпрЦ.ИспользоватьВладельца(ТЗ.ТМЦ);
		Если СпрЦ.НайтиПоРеквизиту("КатегорияЦены", КатПЦены, 0) = 0 Тогда
			СпрЦ.Новый();
			СпрЦ.Наименование = Строка(КатПЦены);
			СпрЦ.Владелец = ТЗ.ТМЦ;
			СпрЦ.КатегорияЦены = КатПЦены;
			СпрЦ.Единица = глВернутьБазовуюЕдиницуТовара(ТЗ.ТМЦ);
			СпрЦ.Записать();
			Ц = 0;
			УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Цена", Сум, ДатаДок);
			УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Валюта", Гривня, ДатаДок);
		Иначе
			Вал = СпрЦ.Валюта;
			Ц = СпрЦ.Цена;			
			Если (Ц <> Сум) Тогда
				УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Цена", Сум, ДатаДок);
			КонецЕсли;
			Если (Вал <> Гривня) Тогда
				УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Валюта", Гривня, ДатаДок);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

//======================================================================
Процедура ЗакрытьЗаказы() //--- УМК Сандомирский В.Ю. (28.08.14) движения по счету "ЗП"
	ТЗЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗЗ,"Заказ,ТМЦ,Кво,Коэффициент");
	ТЗЗ.ВыбратьСтроки();
	Пока ТЗЗ.ПолучитьСтроку() = 1 Цикл
		//Если ИзПереработки = 1 Тогда
		//	ТЗЗ.ТМЦ = ТЗЗ.ТМЦСтало;
		//КонецЕсли;
		ТЗЗ.Кво = ТЗЗ.Кво * ТЗЗ.Коэффициент;
	КонецЦикла;
	ЕстьЗаказы = 1;
	
	ТЗЗ.ВыбратьСтроки();
	Пока ТЗЗ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗЗ.Заказ) = 1 Тогда
			ТЗЗ.Заказ = ?(ДокументОснование.Вид() = "ЗаказПоставщику", ДокументОснование, "");
		КонецЕсли;
		Если ПустоеЗначение(ТЗЗ.Заказ) = 0 Тогда
			ЕстьЗаказы = 1;
		КонецЕсли;
	КонецЦикла;
	
	МинДата = СформироватьПозициюДокумента(ТекущийДокумент());
	МинДок = ТекущийДокумент();
	МинДатаЗаказа = ДатаДок;
	ТЗЗ.ВыбратьСтроки();
	Пока ТЗЗ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗЗ.Заказ) = 0 Тогда
			Если ТЗЗ.Заказ.ДатаДок = МинДатаЗаказа Тогда
				Ч = 0; М = 0; С = 0;
				ТЗЗ.Заказ.ПолучитьВремя(Ч,М,С);
				ВремяЗ = Ч * 3600 + М * 60 + С;
				Ч = 0; М = 0; С = 0;
				МинДок.ПолучитьВремя(Ч,М,С);
				ВремяМин = Ч * 3600 + М * 60 + С;
				Если ВремяЗ > ВремяМин Тогда
					МинДата = СформироватьПозициюДокумента(ТЗЗ.Заказ, 1);
					МинДатаЗаказа = ТЗЗ.Заказ.ДатаДок;
					МинДок = ТЗЗ.Заказ;				    
				КонецЕсли;
			ИначеЕсли ТЗЗ.Заказ.ДатаДок > МинДатаЗаказа Тогда
				МинДата = СформироватьПозициюДокумента(ТЗЗ.Заказ, 1);
				МинДатаЗаказа = ТЗЗ.Заказ.ДатаДок;
				МинДок = ТЗЗ.Заказ;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьЗаказы = 1 Тогда
		СписТМЦ = СоздатьОбъект("СписокЗначений");
		списЗаказов = СоздатьОбъект("СписокЗначений");
		
		ТЗЗ.Выгрузить(СписТМЦ,,, "ТМЦ");
		ТЗЗ.Выгрузить(списЗаказов,,, "Заказ");
	
		Ит = СоздатьОбъект("БухгалтерскиеИтоги");
		Ит.ИспользоватьСубконто(ВидыСубконто.ЗаказыПоставщикам, списЗаказов, 2);
		Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ, СписТМЦ, 2);
		
		Ит.Опции(1);
		Ит.ВыполнитьЗапрос(, МинДата, "ЗП");
		
		ТЗЗ.Свернуть("ТМЦ,Заказ", "Кво");
		ТЗЗ.ВыбратьСтроки();
		Пока ТЗЗ.ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ТЗЗ.Заказ) = 0 Тогда
			    СписываемоеКво = 0;
				Если Ит.ПолучитьСубконто(1, 1, ТЗЗ.Заказ) = 1 Тогда
					Если Ит.ПолучитьСубконто(2, 1, ТЗЗ.ТМЦ) = 1 Тогда
					    СписываемоеКво = Мин(Ит.СКД("К"), ТЗЗ.Кво);
					КонецЕсли;				    
				КонецЕсли;
				
				Если СписываемоеКво > 0 Тогда
					глПроводка(Контекст, ,"ЗП",,,СписываемоеКво,,,,Контрагент, ТЗЗ.Заказ, ТЗЗ.ТМЦ,,,"ЗП");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);
	глТбОперация.УдалитьСтроки();
	
	Если ПроверкаШапки()=0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	
	РассчитатьШапку();
	ДвиженияВзаиморасчеты();
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки()=0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
		Если ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ Тогда
			ДвиженияОстатки();
		КонецЕсли;	
		
		
		Если ТМЦ.Вид() = "Инвестиции" Тогда //--- УМК Сандомирский В.Ю. (01.12.14)
			СпрТМЦ = СоздатьОбъект("Справочник.Инвестиции");
			СпрТМЦ.НайтиЭлемент(ТМЦ);
			СпрТМЦ.Поставщик = Контрагент;
			СпрТМЦ.ДатаПокупки = ДатаДок;
			
			СпрТМЦ.Цена_Прих	 = СуммаБезНДС; 
			СпрТМЦ.Цена_Прих_Вал = СуммаБезНДСВал; 
			СпрТМЦ.Валюта		 = Валюта;
			
			СпрТМЦ.Записать();
		КонецЕсли; //... УМК Сандомирский В.Ю. (01.12.14)
		
		
	КонецЦикла;
	Если ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ Тогда
		ДвиженияПартии();   
	Иначе
		ПроводкиПоОСиНМА();   
	КонецЕсли;	
//	ЗаписатьЦены();
	
	ЗакрытьЗаказы(); //--- УМК Сандомирский В.Ю. (28.08.14) движения по счету "ЗП"

	глЗаписатьПроводкиВОперацию(Контекст);
	Операция.СуммаОперации = Итог("СуммаБезНДС");
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры
