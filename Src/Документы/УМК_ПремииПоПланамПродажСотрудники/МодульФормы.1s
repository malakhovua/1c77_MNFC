Перем ВидПокупатель, ВидПоставщик;
Перем НачальнаяДатаДокумента;
Перем СтруктИзменений;	

Перем Д1, Д2;
Перем ДокНачала, ДокКонца;
Перем ТЗ_ПланыПродаж;


//====================================================================== //--- УМК Сандомирский В.Ю. (25.09.14)
Функция ПроверкаПересечений() 
	
	ТЗ_Премии = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Премии.НоваяКолонка("Хозяин","Справочник.Сотрудники");
	ТЗ_Премии.НоваяКолонка("НачалоПериода",	"Дата");
	ТЗ_Премии.НоваяКолонка("КонецПериода",	"Дата");
	
	ДокНачисленияПремииСотрудникам = СоздатьОбъект("Документ.УМК_ПремииПоПланамПродажСотрудники");
	ДокНачисленияПремииСотрудникам.ВыбратьДокументы(НачМесяца(ДатаДок),КонМесяца(ДатаДок));
	Пока ДокНачисленияПремииСотрудникам.ПолучитьДокумент() = 1 Цикл
		
		Если ДокНачисленияПремииСотрудникам.Проведен() <> 1 Тогда
			Продолжить;	
		КонецЕсли;
		
		Если ДокНачисленияПремииСотрудникам.ТекущийДокумент() = ТекущийДокумент() Тогда //--- не учитывать текущий
			Продолжить;
		КонецЕсли;
		
		ДокНачисленияПремииСотрудникам.ВыбратьСтроки();
		Пока ДокНачисленияПремииСотрудникам.ПолучитьСтроку() = 1 Цикл
			ТЗ_Премии.НоваяСтрока();
			ТЗ_Премии.Хозяин 		= ДокНачисленияПремииСотрудникам.Хозяин;
			ТЗ_Премии.НачалоПериода = ДокНачисленияПремииСотрудникам.ДатаДок;
			ТЗ_Премии.КонецПериода 	= ДокНачисленияПремииСотрудникам.КонецПериода;
		КонецЦикла;

	КонецЦикла;

	ЕстьПересечения = 0;	
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ТЗ_Премии.ВыбратьСтроки();
		Пока ТЗ_Премии.ПолучитьСтроку() = 1 Цикл
			Если (Хозяин = ТЗ_Премии.Хозяин)  
				 И  (
						( 
							(ДатаДок >= ТЗ_Премии.НачалоПериода) И (ДатаДок <= ТЗ_Премии.КонецПериода) 
						)
						ИЛИ 
						( 
							(КонецПериода >= ТЗ_Премии.НачалоПериода) И (КонецПериода <= ТЗ_Премии.КонецПериода) 
						)
					)
			
					Тогда
						
						
					Сообщить("Есть пересечение с начислением премии " + ТЗ_Премии.Хозяин + " с " + ТЗ_Премии.НачалоПериода + "  по " + ТЗ_Премии.КонецПериода);	
				
					ЕстьПересечения = "Есть пересечания";

			КонецЕсли;
		КонецЦикла;		
	КонецЦикла;
	
	Возврат ЕстьПересечения;
	
КонецФункции // ПроверкаПересечений() 


// ===============================
Функция УстДоступность()	
    Форма.Заголовок(глЗаголовок(Контекст,"План продаж"));	
	Возврат "";	
КонецФункции
    
////====================================================================== //--- УМК Сандомирский В.Ю. (25.09.14)
//Процедура ПриРедактированииНовойСтроки()
//	Сообщить("Строки не редактируется !  только кнопка ""Расчитать премию"" ", "!");
//	СтатусВозврата(0);
//	Возврат;	
//КонецПроцедуры
//
////====================================================================== //--- УМК Сандомирский В.Ю. (25.09.14)
//Процедура ПриНачалеРедактированияСтроки()
//	Сообщить("Строки не редактируется !  только кнопка ""Расчитать премию"" ", "!");
//	СтатусВозврата(0);
//	Возврат;
//КонецПроцедуры
//
////====================================================================== //--- УМК Сандомирский В.Ю. (25.09.14)
//Процедура ПриУдаленииСтроки()
//	Сообщить("Строки не редактируется !  только кнопка ""Расчитать премию"" ", "!");
//	СтатусВозврата(0);
//	Возврат;
//КонецПроцедуры
//
////====================================================================== //--- УМК Сандомирский В.Ю. (25.09.14)
//Процедура ПриВводеСтроки()
//	Сообщить("Строки не редактируется !  только кнопка ""Расчитать премию"" ", "!");
//	СтатусВозврата(0);
//	Возврат;
//КонецПроцедуры

// ======================================
Процедура ИзмФирма()
	Если Фирма <> глВосстановитьЗначение(Контекст,"Фирма") Тогда
		Если КоличествоСтрок()>0 Тогда
			Рез = Вопрос("Фирма была изменена. Удалить строки?","Да+Нет");
			Если Рез ="Да" Тогда
				УдалитьСтроки();
			Иначе
				Фирма = глВосстановитьЗначение(Контекст,"Фирма");
				глУстановитьНомер(Контекст);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		глСохранитьЗначение(Контекст,"Фирма",Фирма);
	КонецЕсли;
КонецПроцедуры                      

// ===============================
Процедура ПриЗаписи()
	
	Если глЕстьИзменения(Контекст, СтруктИзменений) = 1 Тогда	//--- УМК Сандомирский В.Ю. (10.09.14) --- при перепроведении без изменений не менять автора		
		Автор = глПользователь;															
	КонецЕсли;
	
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	
	//--- Проверка на пересекающиеся периоды по табличной части
	Если ПроверкаПересечений() = "Есть пересечания" Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
			 
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	
	Если Выбран() = 0 Тогда
		Субконто1 = Константа.БазВидДеятельности;
	КонецЕсли;
	
	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;
	ПриЗаписиПерепроводить(1);

	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений); //--- УМК Сандомирский В.Ю. (10.09.14) --- при перепроведении без изменений не менять автора

КонецПроцедуры

// ======================================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
		
КонецПроцедуры 

//======================================================================================= //--- УМК Сандомирский В.Ю, (24.09.14)
Функция ПолучитьЦену(КатегорияЦен, Товар, ВидУпаковки, ТекДата) 
	
	//--- Получаем Цену товара
	ЦенаТовара = глВернутьЦену(Товар, КатегорияЦен,ТекДата);
	
	//--- ищем товарную цену упаковки
	ЕстьЦенаПоТМЦ = 0;
	СпрЦеныУп = СоздатьОбъект("Справочник.ЦеныУпаковкиПоТМЦ");
	СпрЦеныУп.ИспользоватьВладельца(ВидУпаковки);
	Если СпрЦеныУп.НайтиПоРеквизиту("ТМЦ", Товар, 0) = 1 Тогда
		Если СпрЦеныУп.ПометкаУдаления() = 0 Тогда
		    ЦенаУпаковки = СпрЦеныУп.Цена.Получить(ТекДата);
			ЕстьЦенаПоТМЦ = 1;
		КонецЕсли;
	КонецЕсли;
	
	//--- Если не находим товарную цену упаковки то берем цену упаковки из справочника видов упаковки
	Если ЕстьЦенаПоТМЦ = 0 Тогда
		ЦенаУпаковки = ВидУпаковки.Цена.Получить(ТекДата);
	КонецЕсли;
		
	ЦенаТовара = ЦенаТовара + ЦенаУпаковки;
	
	Возврат ЦенаТовара;
	
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю, (24.09.14)
Процедура ЗаполнитьТЗ_ПланыПродаж(Дата1,Дата2)
	
	ТЗ_ПланыПродаж = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_ПланыПродаж.НоваяКолонка("КатегорияЦенПремирования","Справочник.КатегорииЦен");
	ТЗ_ПланыПродаж.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	ТЗ_ПланыПродаж.НоваяКолонка("ОбъемПроцент",  					"Число", 5, 2);
	ТЗ_ПланыПродаж.НоваяКолонка("СкидкаПроцент", 					"Число", 5, 2);
	ТЗ_ПланыПродаж.НоваяКолонка("НачПериода", 						"Дата");
	ТЗ_ПланыПродаж.НоваяКолонка("КонПериода", 						"Дата");
	ТЗ_ПланыПродаж.НоваяКолонка("МинимальноеКоличествоПозиций", 	"Число", 2, 0);
	ТЗ_ПланыПродаж.НоваяКолонка("МинимальныйТоннаж", 				"Число", 3, 0);
	
	ДокПланПродаж = СоздатьОбъект("Документ.УМК_ПланПродаж");
	ДокПланПродаж.ВыбратьДокументы(Дата1,Дата2);
	Пока ДокПланПродаж.ПолучитьДокумент() = 1 Цикл
		Если ДокПланПродаж.Проведен() = 1 Тогда
			ДокПланПродаж.ВыбратьСтроки();
			Пока ДокПланПродаж.ПолучитьСтроку() = 1 Цикл
				
				Если (ДокПланПродаж.ОбъемПроцент > 0) И (ДокПланПродаж.СкидкаПроцент > 0) Тогда // --- только значащие товары
					ТекСтрока = "";
					ТекКолонка = "";
					Если ТЗ_ПланыПродаж.НайтиЗначение(ДокПланПродаж.ТМЦ,ТекСтрока,ТекКолонка) <> 1 Тогда
						
						ТЗ_ПланыПродаж.НоваяСтрока();
						ТЗ_ПланыПродаж.КатегорияЦенПремирования		= ДокПланПродаж.КатегорияЦенПремирования;
						ТЗ_ПланыПродаж.ТМЦ 							= ДокПланПродаж.ТМЦ;
						ТЗ_ПланыПродаж.ОбъемПроцент 				= ДокПланПродаж.ОбъемПроцент;
						ТЗ_ПланыПродаж.СкидкаПроцент 				= ДокПланПродаж.СкидкаПроцент;
						ТЗ_ПланыПродаж.НачПериода 					= ДокПланПродаж.НачПериода;
						ТЗ_ПланыПродаж.КонПериода 					= ДокПланПродаж.КонПериода;
						ТЗ_ПланыПродаж.МинимальноеКоличествоПозиций = ДокПланПродаж.МинимальноеКоличествоПозиций;
						ТЗ_ПланыПродаж.МинимальныйТоннаж 			= ДокПланПродаж.МинимальныйТоннаж;
									
					Иначе
						Сообщить("В плане: " + ДокПланПродаж + " задвоен план по ТМЦ " + ДокПланПродаж.ТМЦ + " в строке - " + ДокПланПродаж.НомерСтроки );
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТЗ_ПланыПродаж

//======================================================================
Процедура РасчитатьПремию()
		
	УдалитьСтроки(); //--- удаляем безоговорочно строки
	
		
	//типа Запрос по товарам
	ЗапросПоУпаковкам 	= СоздатьОбъект("Запрос");
	
	//типа Запрос по товарам
	ЗапросПоТоварам 	= СоздатьОбъект("Запрос");
	
	//типа Запрос по Контрагентам
	ЗапросПоХозяевам 	= СоздатьОбъект("Запрос");
	
	
	Если (КонецПериода >= ПолучитьДатуТА()) и (ПустоеЗначение(ДокКонца) = 1) Тогда
		ТекстЗапросаПоТоварам = "
			|Период с Д1;";
	Иначе 
		ТекстЗапросаПоТоварам = "
			|Период с Д1 по Д2;";
	КонецЕсли;
		
	ТекстЗапросаПоХозяевам 		= ТекстЗапросаПоТоварам;
	ТекстЗапросаПоВидамУпаковки = ТекстЗапросаПоТоварам; 
	
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, ДатаДок, КонецПериода);
	
	//--- По видам упаковки 
	
	ТекстЗапросаПоВидамУпаковки = ТекстЗапросаПоВидамУпаковки+ "
	|
	|Фирма 				= Регистр.Обороты.Фирма;
	|Хозяин 			= Регистр.Обороты.Покупатель.Хозяин;
	|ТМЦ 				= Регистр.Обороты.ТМЦ;
	|ВидУпаковки		= Регистр.Обороты.ВидУпаковки;
	|
	|РасходСум 	= Регистр.Обороты.РасходСум;
	|РасходКво 	= Регистр.Обороты.РасходКво;
	|
	|Функция РасходСумСумма = Сумма(РасходСум);
	|Функция РасходКвоСумма = Сумма(РасходКво);
	|	
	|Группировка Хозяин 		без групп;
	|Группировка ТМЦ 			без групп;
	|Группировка ВидУпаковки	без групп;
	|Группировка День;
	|
	|Условие (ПустоеЗначение(Хозяин)=0);
	|
	|";
	
	//--- По товарам
	
	ТекстЗапросаПоТоварам = ТекстЗапросаПоТоварам+ "
	|
	|Фирма 				= Регистр.Обороты.Фирма;
	|Хозяин 			= Регистр.Обороты.Покупатель.Хозяин;
	|ТМЦ 				= Регистр.Обороты.ТМЦ;
	|
	|РасходСум 	= Регистр.Обороты.РасходСум;
	|РасходКво 	= Регистр.Обороты.РасходКво;
	|
	|Функция РасходСумСумма = Сумма(РасходСум);
	|Функция РасходКвоСумма = Сумма(РасходКво);
	|	
	|Группировка Хозяин без групп;
	|Группировка ТМЦ без групп;
	|Группировка День;
	|
	|Условие (ПустоеЗначение(Хозяин)=0);
	|
	|";
	
	//--- По контрагентам
	
	ТекстЗапросаПоХозяевам = ТекстЗапросаПоХозяевам+ "
	|
	|Фирма 				= Регистр.Обороты.Фирма;
	|Хозяин 			= Регистр.Обороты.Покупатель.Хозяин;
	|
	|РасходСум 	= Регистр.Обороты.РасходСум;
	|РасходКво 	= Регистр.Обороты.РасходКво;
	|
	|Функция РасходСумСумма = Сумма(РасходСум);
	|Функция РасходКвоСумма = Сумма(РасходКво);
	|	
	|Группировка Хозяин без групп;
	|Группировка День;
	|
	|Условие (ПустоеЗначение(Хозяин)=0);
	|";
	
	Если ПустоеЗначение(Фирма) <> 1 Тогда
		
		ТекстЗапросаПоВидамУпаковки = ТекстЗапросаПоВидамУпаковки + "
		|Условие (Фирма в Фирма);";
			
		ТекстЗапросаПоТоварам = ТекстЗапросаПоТоварам+ "
		|Условие (Фирма в Фирма);";	
		
		ТекстЗапросаПоХозяевам = ТекстЗапросаПоХозяевам + "
		|Условие (Фирма в Фирма);";	
			
	КонецЕсли;
	
	
	ЗаполнитьТЗ_ПланыПродаж(ДатаДок,КонецПериода); //--- заполняем планы продаж
	
	Если ТЗ_ПланыПродаж.КоличествоСтрок() > 0 Тогда
		СписокТМЦ = СоздатьОбъект("СписокЗначений");
		ТЗ_ПланыПродаж.Выгрузить(СписокТМЦ,,,"ТМЦ");
		ТекстЗапросаПоТоварам = ТекстЗапросаПоТоварам+ "
		|Условие (ТМЦ в СписокТМЦ);";		
	Иначе
		Сообщить("Не обнаружено ни одного плана за перод отчета", "!");
		Возврат;
	КонецЕсли;
	
	
	// по упаковкам
	Если ЗапросПоУпаковкам.Выполнить(ТекстЗапросаПоВидамУпаковки) = 0 Тогда
		Предупреждение("Запрос по оборотам не выполнился!");
		Возврат;
	КонецЕсли; 
	
	// по товарам
	Если ЗапросПоТоварам.Выполнить(ТекстЗапросаПоТоварам) = 0 Тогда
		Предупреждение("Запрос по оборотам не выполнился!");
		Возврат;
	КонецЕсли;  
	
	// по хозяевам
	Если ЗапросПоХозяевам.Выполнить(ТекстЗапросаПоХозяевам) = 0 Тогда
		Предупреждение("Запрос по оборотам не выполнился!");
		Возврат;
	КонецЕсли; 
	
	ПечИтог = 0;
	
	Пока ЗапросПоУпаковкам.Группировка("Хозяин") = 1 Цикл
		ПечХозяин = ЗапросПоУпаковкам.Хозяин;
			
		
		
		ПечСуммаПремииИтог = 0;
		
		СчетчикПозицийТМЦ = 0;
		
		//ПечПолныйОборот = Запрос.РасходКвоСумма;
		Пока ЗапросПоУпаковкам.Группировка("ТМЦ") = 1 Цикл
			
			СчетчикПозицийТМЦ = СчетчикПозицийТМЦ + 1;
			
			ПечТМЦ 					  	= ЗапросПоУпаковкам.ТМЦ;
			
			ТекСтрока = "";
			ТекКолонка = "";
			
			Если ТЗ_ПланыПродаж.НайтиЗначение(ПечТМЦ,ТекСтрока,ТекКолонка) = 1 Тогда
				
				ТЗ_ПланыПродаж.ПолучитьСтрокуПоНомеру(ТекСтрока);
				
				ПечНачалоПериода 			= ТЗ_ПланыПродаж.НачПериода;
				ПечКонецПериода  			= ТЗ_ПланыПродаж.КонПериода;
				КатегорияЦенПремирования	= ТЗ_ПланыПродаж.КатегорияЦенПремирования;
				ПечПлановыйПроцентОборота 	= ТЗ_ПланыПродаж.ОбъемПроцент;
				ПечПроцентПремии		  	= ТЗ_ПланыПродаж.СкидкаПроцент;
				
				// сделаем цикл по дням для подсчета общего оборота товара по хозяевам
				ПечПолныйОборот = 0;
				ПечОтносительныйОборотКво = 0;
				ПечОтносительныйОборотСумма = 0;
				
				ТекДата = ПечНачалоПериода;
				Пока ТекДата <= ПечКонецПериода Цикл
				   	// в запросе по товарам получаем оборот за день по товару
					ЗапросПоТоварам.вНачалоВыборки();
					Если ЗапросПоТоварам.Получить(ЗапросПоУпаковкам.Хозяин,ПечТМЦ,ТекДата) = 1  Тогда
						ПечОтносительныйОборотКво = ПечОтносительныйОборотКво + ЗапросПоТоварам.РасходКвоСумма;
					КонецЕсли;
					
					// в запросе по товарам получаем оборот за день по хозяину
					ЗапросПоХозяевам.вНачалоВыборки();
					Если ЗапросПоХозяевам.Получить(ЗапросПоУпаковкам.Хозяин,ТекДата) = 1 Тогда
					   	ПечПолныйОборот = ПечПолныйОборот + ЗапросПоХозяевам.РасходКвоСумма;
					КонецЕсли;
					
					ТекДата = ТекДата + 1;
					
				КонецЦикла;
				
				//---
					
				ПечФактическийПроцентОборота = Окр((ПечОтносительныйОборотКво / ?(ПечПолныйОборот=0,1,ПечПолныйОборот) * 100),2,1); 
				
					
				ПечСуммаПремииТМЦ = 0;
				ПечОтносительныйОборотСуммаТМЦ = 0;
				
				Пока ЗапросПоУпаковкам.Группировка("ВидУпаковки") = 1 Цикл
				
					ПечВУП						= ЗапросПоУпаковкам.ВидУпаковки;
					
					//ПечЦенаПоТипуЦенВПлане    	= ПолучитьЦену(КатегорияЦенПремирования, ЗапросПоУпаковкам.ТМЦ, ЗапросПоУпаковкам.ВидУпаковки, Дата2); было определение цены на конец периода
						
					ПечОборотУпаковок = 0;
					ПечОтносительныйОборотСумма = 0;
					Пока ЗапросПоУпаковкам.Группировка("День") = 1 Цикл
						
						Если (ЗапросПоУпаковкам.День >= ПечНачалоПериода) И (ЗапросПоУпаковкам.День <= ПечКонецПериода) Тогда
											
							ПечОборотУпаковок 	= ПечОборотУпаковок 	+ ЗапросПоУпаковкам.РасходКвоСумма;
							
							ПечПриведеннаяЦена  = ПолучитьЦену(КатегорияЦенПремирования, ЗапросПоУпаковкам.ТМЦ, ЗапросПоУпаковкам.ВидУпаковки, ЗапросПоУпаковкам.День); 
							ПечКвоДень			= ЗапросПоУпаковкам.РасходКвоСумма;
							ПечПриведеннаяСумма = ПечКвоДень * ПечПриведеннаяЦена;
							ПечОтносительныйОборотСумма = ПечОтносительныйОборотСумма + ПечПриведеннаяСумма;
							ПечОтносительныйОборотСуммаТМЦ = ПечОтносительныйОборотСуммаТМЦ + ПечПриведеннаяСумма;		
							
							ПечДень = ЗапросПоУпаковкам.День;
														
						КонецЕсли;
						
					КонецЦикла;	
												
					ПечСуммаПремии = 0;
					Если ПечФактическийПроцентОборота >= ПечПлановыйПроцентОборота Тогда
						
						ПечСуммаПремии 				= ПечОтносительныйОборотСумма * ПечПроцентПремии / 100; 
						
					КонецЕсли;
					
					ПечСуммаПремии = Окр(ПечСуммаПремии,2,1);
					
					ПечСуммаПремииИтог = ПечСуммаПремииИтог + ПечСуммаПремии;
					
					ПечСуммаПремииТМЦ = ПечСуммаПремииТМЦ + ПечСуммаПремии;
								
				КонецЦикла;	
							
			КонецЕсли;
			
		КонецЦикла;	
		
		// --- Проверим на минимальное количество позиций ассортимента
		ПечОтказКвоПозицийАссортимента = "";
		Если ТЗ_ПланыПродаж.МинимальноеКоличествоПозиций > СчетчикПозицийТМЦ Тогда
			ПечОтказКвоПозицийАссортимента = "Отказ начисления премии из-за количества позиций - " + СчетчикПозицийТМЦ;  
		КонецЕсли;
		
		// --- Проверим на минимальный тоннаж
		ПечОтказТоннаж = "";
		Если ТЗ_ПланыПродаж.МинимальныйТоннаж > (ПечПолныйОборот/1000) Тогда
			ПечОтказТоннаж = "Отказ начисления премии из-за минимального тонажа - " + (ПечПолныйОборот/1000);  
		КонецЕсли;
		
		Если (ПечОтказКвоПозицийАссортимента <> "") ИЛИ (ПечОтказТоннаж <> "") Тогда
			ПечОтказ = ПечОтказКвоПозицийАссортимента + " " + ПечОтказТоннаж;
			ПечСуммаПремииИтог = 0;
			Сообщить("" + ПечХозяин + " " + ПечОтказ);
		Иначе
			ПечОтказ = "";
		КонецЕсли;
			
		//--- Собственно заполнение !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		Если (ПечСуммаПремииИтог > 0) И (ПечОтказ = "") Тогда
						
			Если ПечХозяин.Вид() = "Сотрудники" Тогда
				НоваяСтрока();
				Хозяин 		= ПечХозяин;
				СуммаСкидки = ПечСуммаПремииИтог;
			КонецЕсли;
			
		КонецЕсли;
		
		//Таб.ВывестиСекцию("Группировка1Итог");
		
	КонецЦикла;
	
		
КонецПроцедуры


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции




ВидПокупатель = Перечисление.ВидыКлиентов.Покупатель;
ВидПоставщик = Перечисление.ВидыКлиентов.Поставщик;

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");
