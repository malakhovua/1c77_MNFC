// ===============================
// Описание переменных 
Перем ДатаОплаты;
Перем СписокДействий;
Перем СтарыйКонтрагент;
Перем СтараяДата;                       
Перем СтарЧтоПриходуем;      
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем спЧтоПриходуем;

Перем НачальнаяДатаДокумента; 
// ===============================
// "служебные" функции и процедуры 

// ===============================
Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат,СуммаБезНДС, СуммаСНДС, СуммаНДС;
	СуммаБезНДС = Итог("СуммаБезНДС");
	СуммаСНДС = Итог("СуммаСНДС");
	СуммаНДС = СуммаСНДС - СуммаБезНДС;
	Результат = ?(СуммаБезНДС =0,"","Сумма="+ глФРМ(СуммаБезНДС, Валюта, 1))+
	            ?(СуммаНДС = 0,""," НДС=" + глФРМ(СуммаНДС, Валюта, 1)+
			?(СуммаСНДС = 0,""," Всего=" + глФРМ(СуммаСНДС, Валюта, 1)));
	Возврат Результат;
КонецФункции

// ===============================
Процедура ЗаполнитьСпВидТорговли()
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Нал,Строка(Перечисление.ВидыТорговли.Нал));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Предоплата,Строка(Перечисление.ВидыТорговли.Предоплата));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Кредит,Строка(Перечисление.ВидыТорговли.Кредит));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Бартер,Строка(Перечисление.ВидыТорговли.Бартер));	
КонецПроцедуры

// ===============================
Процедура ВыбранВидТорговли()
	спВидТорговли.ТекущаяСтрока(спВидТорговли.НайтиЗначение(ВидТорговли));
КонецПроцедуры

// ===============================
Процедура УстВидТорговли()
	Если ПустоеЗначение(ВидТорговли) = 1 Тогда
		Если ПустоеЗначение(Договор) = 0 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
				ВидТорговли = Договор.ВидТорговли;
				Возврат;
			КонецЕсли;	
		КонецЕсли;
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			ВидТорговли = Контрагент.ВидТорговли;			
		КонецЕсли;
		Если ПустоеЗначение(ВидТорговли) = 1 Тогда
		    ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ИзмВидТорговли()                       		
	ВидТорговли = спВидТорговли.ПолучитьЗначение(спВидТорговли.ТекущаяСтрока());
	Если (ЧтоПриходуем <> Перечисление.ЧтоПриходуем.ТМЦ) 
	И (ВидТорговли = Перечисление.ВидыТорговли.Кредит) Тогда   
		Если Вопрос("Нельзя приходовать "+ЧтоПриходуем+" если вид торговли "+Перечисление.ВидыТорговли.Кредит+"."+РазделительСтрок+" Установить допустимый вид торговли?",4) = 6 Тогда
			УстВидТорговли();
			ВыбранВидТорговли();
		КонецЕсли;	 	
	КонецЕсли;	
КонецПроцедуры         

// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = ТМЦ.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;
КонецПроцедуры //ПересчетСтроки

// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
// ===============================
Процедура ИзмРеквизитШапки(Реквизит)
	// пересчитаем суммы НДС в строках табличной части
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		 = ВидНДС;
		СтарКатегорияЦен = КатегорияЦен;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	текОтвет = Вопрос("В документе изменен реквизит """+Реквизит+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текОтвет = "Да" Тогда
			// изменим цены
			ЦенаТовара = глВернутьЦену(ТМЦ, КатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
				// получим параметры цены
				ЦенаТовара.ИспользоватьДату(ДатаДок);
				ЦенаЦены   = ЦенаТовара.Цена;
				ВалютаЦены = ЦенаТовара.Валюта;
				ЕдЦены	   = ЦенаТовара.Единица;
				ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
				ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
				ПересчетСтроки(ЦенаЦены);                                                   
			Иначе
				ПересчетСтроки();
			КонецЕсли;
		ИначеЕсли Реквизит = "ВидНДС" Тогда
			ПересчетСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 
                     
// ===============================
Процедура ИзмВидТары()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("В документе изменен вид тары! Пересчитать суммы ?","Да+Нет") = "Да" Тогда
			текОсновнаяЦена = Константа.ОсновнаяЦена;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл    
				Если ПустоеЗначение(ТМЦ) = 1 Тогда
					Продолжить;
				ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					глВыч_суммы_накл(Контекст);
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмДоговор()
	// Договор есть
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			Если Валюта <> Валюта_Прежн Тогда
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
				КонецЕсли;
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;
			ВыбранВидТорговли();
			ВидНДС = Договор.ВидНДС;
			ИзмРеквизитШапки("ВидНДС");
		КонецЕсли;
	КонецЕсли;    
КонецПроцедуры

// ===============================
// функции и процедуры, вызываемые из формул элементов диалога
                                                 
// ===============================
Процедура ИзмЧтоПриходуем()
	Если (КоличествоСтрок()<>0) и (СтарЧтоПриходуем<>ЧтоПриходуем) и (Сокрлп(СтарЧтоПриходуем)<>"") Тогда
	    ЧтоПриходуем = СтарЧтоПриходуем;
	    Предупреждение("Сначала удалите все строки!");
	Иначе                                                    
		Если (ЧтоПриходуем <> Перечисление.ЧтоПриходуем.ТМЦ) 
		И (ВидТорговли = Перечисление.ВидыТорговли.Кредит) Тогда   
            Если Вопрос("Нельзя приходовать "+ЧтоПриходуем+" если вид торговли "+Перечисление.ВидыТорговли.Кредит+"."+РазделительСтрок+" Установить допустимый вид торговли?",4) = 6 Тогда
				УстВидТорговли();
				ВыбранВидТорговли();
			КонецЕсли;	 	
		КонецЕсли;	
		СтарЧтоПриходуем = ЧтоПриходуем;
	КонецЕсли;                               
	// Инициализируем список действий по кнопке "Действия"
	СписокДействий = глПолучитьСписокДействий(?(ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ,"ТоварныйСостав,","") + "
		|СтруктураПодчиненности,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные");
КонецПроцедуры

// ===============================
Процедура Подбор()                                          
	глПодбор(Контекст,"ТМЦ","ДляПодбора");
КонецПроцедуры

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Закупка");
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
КонецПроцедуры	

// ===============================
Процедура ИзмДатаДок()
КонецПроцедуры

// ===============================
Процедура ИзмКонтрагент() // Процедура при выборе Контрагента в докумнете
    Если Контрагент.Выбран()=1 Тогда                                      
		Если СтарыйКонтрагент <> Контрагент Тогда
			// изменили Контрагента
			Если (глВосстановитьЗначение(,"ПодставлятьОсновнойДоговор") = Да)
			И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
			И (ПустоеЗначение(Договор)=1) Тогда
				Если Фирма = Контрагент.БазДоговор.Фирма Тогда
					// подставим договор по умолчанию
					Договор = Контрагент.БазДоговор;
				КонецЕсли;	
			Иначе
				// очистим договор
				Договор = ПолучитьПустоеЗначение("Документ");
			КонецЕсли;
			Если ПустоеЗначение(Контрагент.КатегорияЦенПоставщика) = 0 Тогда
				КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
			Иначе	
				КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
			КонецЕсли;      								
		КонецЕсли;
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и договор
		Договор = ПолучитьПустоеЗначение("Документ");
	КонецЕсли;
	// Формирует и показывает дату оплаты
	СтарыйКонтрагент = Контрагент;
	ИзмДоговор();
КонецПроцедуры	
	
// ===============================
Процедура ВыборОснования()
	СтарДоговор = Договор;
    
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	

// ===============================
Функция КонтрольОстаткаВсего()
	// Вычислим, сколько всего данного ТМЦ
	ПолныйОстаток= Регистр.Остатки.СводныйОстаток(Фирма,ТМЦ,,"ОстатокТовара");
	Резерв= 0;
	// проверяем резерв ТМЦ
	Если Константа.РазрешитьПродаватьРезерв=Перечисление.ДаНет.Нет Тогда
		// Вычислим, сколько зарезервировано всего данного ТМЦ
		Резерв= Регистр.Резервы.СводныйОстаток(Фирма,ТМЦ,,,,"Резерв");
	КонецЕсли;
    Если Коэффициент>0 Тогда
		Возврат (ПолныйОстаток-Резерв)/Коэффициент;
    Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

// ===============================
Процедура ИзмТМЦ()
	Если ТМЦ.Выбран()=1 Тогда
		Если ТМЦ.Вид()<>"ТМЦ" Тогда
			глУстановкаБазЕд(Контекст,,ТМЦ.БазЕдиница);
			ЦенаБезНДС = глПересчет(ТМЦ.Цена_Прих,Гривня,Валюта,ДатаДок,Курс);
			Кво = 1;
			глВыч_суммы_накл(Контекст,-1);		
			Возврат;
		КонецЕсли;
		глПриИзмененииТовара(Контекст,,1);
	КонецЕсли;
КонецПроцедуры

// ===============================
// Предопределенные процедуры

// ===============================
Процедура ВводНового(Скопирован) //Предопределенная процедура

	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;

	ДатаДок=РабочаяДата();
	
	Если ПустоеЗначение(Контрагент) = 1 Тогда
		Контрагент=глВосстановитьЗначение(,"ОсновнойПоставщик");
	КонецЕсли;
	ИзмКонтрагент();
	Если ПустоеЗначение(Контрагент) = 0 Тогда
		Если ПустоеЗначение(Контрагент.КатегорияЦенПоставщика) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
		Иначе	
			КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		КонецЕсли;      								
	КонецЕсли; 

	ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ;
	
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Дата_Курса = ДатаДок;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);	
	ИзмДоговор();                             	
	УстВидТорговли();
	ВыбранВидТорговли();
КонецПроцедуры

// ===============================
Процедура ВводНаОсновании(ДокОснование) //Предопределенная процедура

	ВидДок = ДокОснование.Вид();
	Если (ВидДок<>"Договор") И (ВидДок <> "ПриходнаяНакладнаяЗапасы")  Тогда
		Предупреждение("Счет входящий нельзя вводить на основании данного вида документов!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	                                                	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);	
    ИзмДоговор();
	УстВидТорговли();
	ВыбранВидТорговли();
	Если ПустоеЗначение(Валюта)=1 Тогда
		Валюта=ДокОснование.Валюта;
		Дата_Курса = ДатаДок;
	КонецЕсли;
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		Если ПустоеЗначение(Контрагент)=0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦенПоставщика;    
		КонецЕсли;	    
	КонецЕсли;          
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
	КонецЕсли;

	ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ;
	глСкопироватьТовСостав(Контекст, ДокОснование);
	Если (ВидДок = "ПриходнаяНакладнаяЗапасы")  Тогда
		ДокументОснование = ДокОснование;
		ДатаДок = ДокОснование.ДатаДок
	КонецЕсли;

КонецПроцедуры

// ===============================
Процедура ПриОткрытии() //Предопределенная процедура
	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;     
	ПриЗаписиПерепроводить(1);
	                                  
	Форма.ВидТары.ВыполнятьФормулуТолькоПриИзменении(1);	
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кЗаписать.Доступность(0);
		Форма.кФирма.Доступность(0);
//		Форма.кДействия.Доступность(0);
		СписокДействий = глПолучитьСписокДействий("
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");	    
		
		Форма.кФирма.Доступность(0);               		
		Форма.кОсн.Доступность(0);
		Форма.кВалюта.Доступность(0);

		Форма.кПодбор.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	          
	глУстВидимостьЦен(Контекст);
	СтараяДата = ДатаДок;                        
	
	Если ПустоеЗначение(ВидТары) = 1 Тогда
		ВидТары = Перечисление.ВидыТары.Покупная;		
	КонецЕсли;		
	УстВидТорговли();
	ВыбранВидТорговли();	                             
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;
	
	СтарЧтоПриходуем = ЧтоПриходуем;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	// Инициализируем список действий по кнопке "Действия"
	СписокДействий = глПолучитьСписокДействий(?(ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ,"ТоварныйСостав,","") + "
		|СтруктураПодчиненности,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные");
КонецПроцедуры //При открытии     

// ===============================
Функция УстДоступность()
	Форма.Заголовок(глЗаголовок(Контекст));

	// доступность кнопки "Подбор" и  рекв. "Ед"
	
	Если ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ Тогда
	    Форма.Ед.Доступность(1);
	    Форма.кПодбор.Доступность(1-Форма.ТолькоПросмотр());
	Иначе
		Форма.Ед.Доступность(0);
	    Форма.кПодбор.Доступность(0);
	КонецЕсли;
                                                   
	Если ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ Тогда
		Форма.ВидТары.Видимость(1);
		Форма.тВидТары.Видимость(1);
	Иначе
		Форма.ВидТары.Видимость(0);
		Форма.тВидТары.Видимость(0);
	КонецЕсли;	

	Если ЧтоПриходуем = Перечисление.ЧтоПриходуем.ОСиНМАиДрНеобМатАктивы Тогда
		НазначитьВид(ТМЦ,"Инвестиции");
	ИначеЕсли ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ Тогда
		НазначитьВид(ТМЦ,"ТМЦ");
	Иначе
		НазначитьВид(ТМЦ,"БланкиСтрогойОтчетности");
	КонецЕсли;
	Форма.ТМЦ.НеИзменятьВид(1);
	Форма.Заголовок(глЗаголовок(Контекст,"Счет входящий"));
	Возврат "";
КонецФункции

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Если Рекв="ВидНДС" Тогда
	    глВыбратьНДС(Контекст,Рекв);     
		ИзмРеквизитШапки("ВидНДС");
		Флаг = 0;  
	ИначеЕсли Рекв="ЧтоПриходуем" Тогда           
		СтарЧтоПриходуем = ЧтоПриходуем;
		спЧтоПриходуем.ВыбратьЗначение(ЧтоПриходуем,,,,2);                
		Флаг = 0;            
		ИзмЧтоПриходуем();
	КонецЕсли;
КонецПроцедуры
// ===============================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры //Обработка подбора

// ===============================
Процедура ПриЗаписи() //Предопределенная процедура
	глПроверкаДатыДок(Контекст,"Запись");
	Автор = глПользователь;             
	ОтборЗаказаКонтрагент = ?(Договор.Выбран() = 0, Контрагент, 0);
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции



// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ТоварныйСостав,	
	|СтруктураПодчиненности,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");
                   
спЧтоПриходуем = СоздатьОбъект("СписокЗначений");
спЧтоПриходуем.ДобавитьЗначение(Перечисление.ЧтоПриходуем.ТМЦ);
спЧтоПриходуем.ДобавитьЗначение(Перечисление.ЧтоПриходуем.ОСиНМАиДрНеобМатАктивы);
спЧтоПриходуем.ДобавитьЗначение(Перечисление.ЧтоПриходуем.БланкиСтрогойОтчетности);

ЗаполнитьСпВидТорговли();
ВыбранВидТорговли();
                                                               
