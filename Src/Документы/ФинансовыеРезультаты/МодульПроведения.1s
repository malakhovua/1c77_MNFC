// ===============================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Фирма,"Фирма");
	Возврат глВсеВыбрано;    
КонецФункции

// ===============================
// закрываем счет доходов или затрат на 79
Процедура ЗакрытьСчет(Сч,Сумма,ВидДеятельности,Подразделение,Субк = 0)
Перем Сч79;
	СчСтр = Сред(Сч.Код,1,2);
	Если (Найти("70,71,80,81,82,83,84,90,92,93,94",СчСтр) > 0) Или (Сч.Код = "981") Тогда
		// основная деятельность
		
		// если есть сальдо на счетах класса 8, значит, используется упрощенная схема - 
		// без счетов класса 9 (малые предприятия), все элементы затрат, кроме 85 списываем на
		// основную деятельность
		Сч79 = "79.1";
	ИначеЕсли Найти("72,73,95,96",СчСтр) > 0 Тогда
		// финансовая деятельность
	    Сч79 = "79.2";
	ИначеЕсли Найти("74,85,97",СчСтр) > 0 Тогда
		// прочая обычная деятельность
	    Сч79 = "79.3";
	ИначеЕсли (Найти("75,99",СчСтр) > 0) Или (Сч.Код = "982") Тогда
		// чрезвычайные события
	    Сч79 = "79.4";
	Иначе
		// не должно быть
		Возврат;
	КонецЕсли;
	
	Если Сч.Активный = 1 Тогда
	    // счет затрат
		глПроводка(Контекст,Сч79,Сч,Сумма,"Финансовые результаты: закрытие затрат",, ВидДеятельности,Подразделение,,
		ВидДеятельности,Подразделение,Субк, ,,"ФР");
	Иначе
		// счет доходов
		глПроводка(Контекст,Сч,Сч79,-Сумма,"Финансовые результаты: закрытие доходов",, ВидДеятельности,Подразделение,,
		ВидДеятельности,Подразделение,, ,,"ФР");
	КонецЕсли;
КонецПроцедуры

// ===============================
// остатки на счетах класса 7,8 и 9 (кроме налога на прибыль) закрываем на 79 счет
Процедура ПроводкиОпределениеФинансовогоРезультата()
	СписокСчетов = "70,71,74,75,80,81,82,83,84,85,90,92,93,94,97,99,72,73,95,96,98";
	
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ВключатьСубсчета(-1);
	Ит.ВыполнитьЗапрос(,КонМесяца(ДатаДок),СписокСчетов);
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Ит1 = СоздатьОбъект("БухгалтерскиеИтоги");
		Ит1.ИспользоватьРазделительУчета(Фирма);
		Ит1.ВключатьСубсчета(-1);
		Ит1.ИспользоватьСубконто(ВидыСубконто.ВидыДеятельности);
		Ит1.ИспользоватьСубконто(ВидыСубконто.Подразделения);
		Если Ит.Счет.КоличествоСубконто() = 3 Тогда
			Если Ит.Счет.ТолькоОбороты(3) = 1 Тогда
				// на 70 счете по местам хранения учитываются только обороты
				// при расчете остатков второе субконто не принимаем во внимание
				Ит1.ВыполнитьЗапрос(,КонМесяца(ДатаДок),Ит.Счет);
				Ит1.ВыбратьСубконто(1);
				Пока Ит1.ПолучитьСубконто(1) = 1 Цикл
					Ит1.ВыбратьСубконто(2);
					Пока Ит1.ПолучитьСубконто(2) = 1 Цикл
						ЗакрытьСчет(Ит1.Счет,Ит1.СКД()-Ит1.СКК(),Ит1.Субконто(1),Ит1.Субконто(2));
					КонецЦикла;	
				КонецЦикла;
			Иначе
				// затратный счет с аналитикой по видам деятельности и видам затрат
				Ит1.ИспользоватьСубконто(ВидыСубконто.ВидыЗатрат);
				Ит1.ВыполнитьЗапрос(,КонМесяца(ДатаДок),Ит.Счет);
				Ит1.ВыбратьСубконто(1);
				Пока Ит1.ПолучитьСубконто(1) = 1 Цикл
					Ит1.ВыбратьСубконто(2);
					Пока Ит1.ПолучитьСубконто(2) = 1 Цикл
						Ит1.ВыбратьСубконто(3);          
						Пока Ит1.ПолучитьСубконто(3) = 1 Цикл
							ЗакрытьСчет(Ит1.Счет,Ит1.СКД()-Ит1.СКК(),Ит1.Субконто(1),Ит1.Субконто(2),Ит1.Субконто(3));
						КонецЦикла;	
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
		Иначе
			Ит1.ВыполнитьЗапрос(,КонМесяца(ДатаДок),Ит.Счет);
			// затратный (доходный) счет с аналитикой по видам деятельности
			Ит1.ВыбратьСубконто(1);
			Пока Ит1.ПолучитьСубконто(1) = 1 Цикл        
				Ит1.ВыбратьСубконто(2);
				Пока Ит1.ПолучитьСубконто(2) = 1 Цикл
					ЗакрытьСчет(Ит1.Счет,Ит1.СКД()-Ит1.СКК(),Ит1.Субконто(1),Ит1.Субконто(2));
				КонецЦикла;	
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	
	ПроводкиОпределениеФинансовогоРезультата();
	
	Операция.СуммаОперации = 0;	
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры
