Перем ВидПокупатель, ВидПоставщик;
Перем НачальнаяДатаДокумента;
Перем СтруктИзменений;		

// ===============================
Функция УстДоступность()	
    Форма.Заголовок(глЗаголовок(Контекст,"План продаж"));	
	Возврат "";	
КонецФункции
    
// ===============================
Процедура ПриРедактированииНовойСтроки()
		
КонецПроцедуры

// ===============================
Процедура ПриНачалеРедактированияСтроки()
	
КонецПроцедуры

// ======================================
Процедура ИзмФирма()
	Если Фирма <> глВосстановитьЗначение(Контекст,"Фирма") Тогда
		Если КоличествоСтрок()>0 Тогда
			Рез = Вопрос("Фирма была изменена. Удалить строки?","Да+Нет");
			Если Рез ="Да" Тогда
				УдалитьСтроки();
			Иначе
				Фирма = глВосстановитьЗначение(Контекст,"Фирма");
				глУстановитьНомер(Контекст);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		глСохранитьЗначение(Контекст,"Фирма",Фирма);
	КонецЕсли;
КонецПроцедуры                      

// ===============================
Процедура ПриЗаписи()
	
	Если глЕстьИзменения(Контекст, СтруктИзменений) = 1 Тогда	//--- УМК Сандомирский В.Ю. (10.09.14) --- при перепроведении без изменений не менять автора		
		Автор = глПользователь;															
	КонецЕсли;
	
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
		
	СписФ = СоздатьОбъект("СписокЗначений");
	Для Инд = 1 По списТовар.РазмерСписка() Цикл
		СписФ.ДобавитьЗначение(списТовар.ПолучитьЗначение(Инд).Код);
	КонецЦикла;	
	СтрФильтр = СписФ.ВСтрокуСРазделителями();
	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	
	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;
	ПриЗаписиПерепроводить(1);
//	// Если открыли только на просмотр, то надо кнопки сделать недоступными
//	Если Форма.ТолькоПросмотр()=1 Тогда
//		Форма.кОК.Доступность(0);
////		Форма.кДействия.Доступность(0);          
//		Форма.кФирма.Доступность(0);               		
//		Форма.КнопкаПоУмолчанию("кЗакрыть");
//	Иначе
//		Форма.КнопкаПоУмолчанию("кОК");
//	КонецЕсли; 
//	глСохранитьЗначение(Контекст,"Валюта",Валюта);
//	глСохранитьЗначение(Контекст,"Фирма",Фирма);
//	
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений); //--- УМК Сандомирский В.Ю. (10.09.14) --- при перепроведении без изменений не менять автора

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Основной,Общий",2);

	СписФ = СоздатьОбъект("СписокЗначений");
    СписФ.ИзСтрокиСРазделителями(СокрЛП(СтрФильтр));
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	
	Для Инд = 1 По СписФ.РазмерСписка() Цикл
		Если СпрТМЦ.НайтиПоКоду(СписФ.ПолучитьЗначение(Инд), 0) = 1 Тогда
		    списТовар.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
		КонецЕсли;		
	КонецЦикла;	
	
	
КонецПроцедуры

//======================================================================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
		
КонецПроцедуры 

//======================================================================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр) 
	
	//Если Рекв = "ДоговорКонтрагентаОткуда" Тогда	// выбираем договор откуда
	//	Фрм = СоздатьОбъект("СписокЗначений");
	//	Фрм.ДобавитьЗначение("ДоговораКонтрагентов","ГрафаОтбора");
	//	Фрм.ДобавитьЗначение(КонтрагентОткуда,"Контрагент");
	//	ОткрытьПодбор("Журнал.ПолныйЖурнал","ДляВыбораДоговоровИСчетов",Фрм,0,ДоговорКонтрагентаОткуда);
	//	ФлагСтандОбр=0;
	//ИначеЕсли  Рекв = "ДоговорКонтрагентаКуда" Тогда	// выбираем договор откуда
	//	Фрм = СоздатьОбъект("СписокЗначений");
	//	Фрм.ДобавитьЗначение("ДоговораКонтрагентов","ГрафаОтбора");
	//	Фрм.ДобавитьЗначение(КонтрагентКуда,"Контрагент");
	//	ОткрытьПодбор("Журнал.ПолныйЖурнал","ДляВыбораДоговоровИСчетов",Фрм,0,ДоговорКонтрагентаКуда);
	//	ФлагСтандОбр=0;	
	//КонецЕсли;
	
КонецПроцедуры            

//======================================================================
Процедура ИзмТМЦ()
	НачПериода = ДатаДок;
	КонПериода = КонецПериода;
КонецПроцедуры // ИзмТМЦ

//======================================================================
Процедура ЗаполнитьТабличнуюЧасть()
	
	Если ПустоеЗначение(КонецПериода) = 1 Тогда
		Сообщить("Не выбран конец периода в шапке документа", "!");
		Возврат;
	КонецЕсли;
	
	Рез = Вопрос("Удалить строки?","Да+Нет");
	Если Рез ="Да" Тогда
		УдалитьСтроки();
	КонецЕсли;
	
	ТекстУсл = "";
	Если ГруппаТ.Выбран() = 1 Тогда
	    
		ТекстУсл = ТекстУсл +  глПравильныйСимволПереноса + "Условие (ТМЦ в ГруппаТ);";
	
	ИначеЕсли списТовар.РазмерСписка() <> 0 Тогда
		
		Если ВсеКроме = 1 Тогда
			ТекстУсл = ТекстУсл + глПравильныйСимволПереноса + "Условие НЕ(ТМЦ в списТовар);";	
		ИначеЕсли ВсеКроме = 0 Тогда	
			ТекстУсл = ТекстУсл + глПравильныйСимволПереноса + "Условие (ТМЦ в списТовар);";	
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса ="
	|Обрабатывать НеПомеченныеНаУдаление;
	|ТМЦ = Справочник.ТМЦ.ТекущийЭлемент;
	|Группировка ТМЦ упорядочить по ТМЦ.Родитель Без Групп;
	|" + ТекстУсл;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Предупреждение("Запрос по элементам справочника не выполнился!");
		Возврат;
	КонецЕсли; 
	
	Пока Запрос.Группировка("ТМЦ") = 1 Цикл
		НоваяСтрока();
		ТМЦ = Запрос.ТМЦ;
		ИзмТМЦ();	
	КонецЦикла;
	
	//--- Удаляем если есть все кроме
	Если ВсеКроме = 1 Тогда
		Если списТовар.РазмерСписка() <> 0 Тогда
			
			ТЗ_Строки = СоздатьОбъект("ТаблицаЗначений");
			ВыгрузитьТабличнуюЧасть(ТЗ_Строки);
			
		 
		 	Запрос = СоздатьОбъект("Запрос");
			ТекстЗапроса ="
			|Обрабатывать НеПомеченныеНаУдаление;
			|ТМЦ = Справочник.ТМЦ.ТекущийЭлемент;
			|Группировка ТМЦ Без Групп;
			|Условие (ТМЦ в списТовар);";
			
			Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
				Предупреждение("Запрос по элементам справочника не выполнился!");
				Возврат;
			КонецЕсли; 
			
			Пока Запрос.Группировка("ТМЦ") = 1 Цикл
				
				ТекСтрока  = "";
				ТекСтолбец = "";
				
				Если ТЗ_Строки.НайтиЗначение(Запрос.ТМЦ,ТекСтрока,ТекСтолбец) = 1 Тогда
					ТЗ_Строки.УдалитьСтроку(ТекСтрока);
				КонецЕсли;
			КонецЦикла;
		 	
			УдалитьСтроки();
			
			ЗагрузитьТабличнуюЧасть(ТЗ_Строки);
		 		
		КонецЕсли;
	КонецЕсли;	
	
	//--- Сортируем то что получилось по Родителю и наименованию
	ТЗ_Строки = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ_Строки);
		
	ТЗ_Строки.НоваяКолонка("Родитель","Справочник.ТМЦ");
	ТЗ_Строки.ВыбратьСтроки();
	Пока ТЗ_Строки.ПолучитьСтроку() = 1 Цикл
		ТЗ_Строки.Родитель = ТЗ_Строки.ТМЦ.Родитель;
	КонецЦикла;
	
	ТЗ_Строки.Сортировать("Родитель+,ТМЦ+");
	
	УдалитьСтроки();
	ЗагрузитьТабличнуюЧасть(ТЗ_Строки);
	
	Форма.ИспользоватьСлой("Основной,Общий",2);
	Форма.Закладки.ТекущаяСтрока(1);
	
КонецПроцедуры // ЗаполнитьТабличнуюЧасть

//======================================================================
Процедура ПриВыбореЗакладки(Ном,Значен);
	Форма.ИспользоватьСлой(Значен+", Общий",2);
КонецПроцедуры  

//======================================================================
Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

//======================================================================
Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ДобавитьВСписок(Элт, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ОбработкаПодбора(Элт)
	Если Элт.Вид() = "ТМЦ" Тогда
		ДобавитьвСписок(Элт, списТовар);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура Печать(БыстраяПечать=0)

	Перем ВыбЗначение; 
	
	спВариантов = СоздатьОбъект("СписокЗначений");
	спВариантов.ДобавитьЗначение(1,"по скидкам");
	спВариантов.ДобавитьЗначение(2,"по всем товарам");

	Если спВариантов.ВыбратьЗначение(ВыбЗначение,"",,,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;   
	
	Если ВыбЗначение = 1 Тогда
		// ВсеЗаполнитьЛичнымиГрафиками(Флаг);
	ИначеЕсли ВыбЗначение = 2  Тогда
		//СтрокаЗаполнитьЛичнымиГрафиками(Флаг);
	КонецЕсли;	
	
	глУстПропись(Гривня, "У");
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Список");
   
	Таб.ВывестиСекцию("Шапка");

	Ном = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл                
		Если ВыбЗначение = 2 Тогда
			Ном = Ном + 1;
			Таб.ВывестиСекцию("СтрокаТовар");
		Иначе
			Если (СкидкаПроцент <> 0) И (ОбъемПроцент <> 0) Тогда
				Ном = Ном + 1;
				Таб.ВывестиСекцию("СтрокаТовар");	
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
	Таб.ВывестиСекцию("Дно");
	
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: План продаж ","");
	
КонецПроцедуры                                    


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции



ВидПокупатель = Перечисление.ВидыКлиентов.Покупатель;
ВидПоставщик = Перечисление.ВидыКлиентов.Поставщик;

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");

ГруппаТ.ВыборГруппы(1);