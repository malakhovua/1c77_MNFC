Перем ПоследУрн;

//===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
    глВыбранЛи(Фирма,"Фирма");
	Возврат глВсеВыбрано;
КонецФункции  //ПроверкаШапки

//===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(Продукция,"Продукция",НомерСтроки);
	
	Если глВсеВыбрано = 1 Тогда
		глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,Продукция,НомерСтроки,1)=Да, глВсеВыбрано, 0);
	КонецЕсли;
	Урн = Продукция.УровеньПередела.Получить(ДатаДок);
	Если ПоследУрн = -1 Тогда
	    ПоследУрн = Урн;
	КонецЕсли;
	Если ПоследУрн <> Урн Тогда
		Сообщить("В строке " + Строка(НомерСтроки) + " указана продукция с уровнем передела, не соответствюущим предыдущим");
	КонецЕсли;
	
	Если НормыЗатрат.Выбран() = 1 Тогда
		//Необходимо создать переменную Док, иначе НормыЗатрат может ошибочно определяться как непроведенный
		Док = СоздатьОбъект("Документ.НормыЗатрат");
		Док.НайтиДокумент(НормыЗатрат);
		// Проверяем корректность выбранных норм затрат
		//Если Док.Заказ <> ТекущийДокумент() Тогда
		//	глВсеВыбрано = 0; 
		//	глКомментарий("Заказ в нормах затрат не совпадает с текущим! Строка "+НомерСтроки+".", 0,,"!");
		Если Док.Продукция <> Продукция Тогда               
			глВсеВыбрано = 0;
			глКомментарий("Продукция в нормах затрат не совпадает с продукцией в строке "+НомерСтроки+".", 0,,"!");
		ИначеЕсли Док.Проведен() = 0 Тогда                       
			глВсеВыбрано = 0;
			глКомментарий("Выбранный документ ""Нормы затрат"" не проведен! Строка "+НомерСтроки+".", 0,,"!");
		КонецЕсли;                                              
	КонецЕсли;

	Разн = КвоФаршаФакт - КвоФаршаПлан;
	ОтношениеРазницы = ?(КвоФаршаПлан = 0, 0, Разн/КвоФаршаПлан) * 100; 
	ОтношениеРазницы = ОтношениеРазницы  * ?(ОтношениеРазницы < 0, -1, 1);
	Если ОтношениеРазницы > МаксОтношениеРазницыЗаказ Тогда
		Сообщить("В строке: " + НомерСтроки + ". Продукция: " + Строка(Продукция) + " отношение разницы превышает максимально допустимое", "!!!");		
	КонецЕсли;

	Возврат глВсеВыбрано;
КонецФункции // ПроверкаСтроки()

//===============================
Процедура ОбработкаПроведения()

	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	
	ПоследУрн = -1;
	
	ТЗКВып = СоздатьОбъект("ТаблицаЗначений");
	ТЗКВып.НоваяКолонка("Продукция", "Справочник.ТМЦ");
	ТЗКВып.НоваяКолонка("КвоФакт", "Число", 15, 3);
	ТЗКВып.НоваяКолонка("КвоНорма", "Число", 15, 3);
	ТЗКВып.НоваяКолонка("КвоФактОст", "Число", 15, 3);
	ТЗКВып.НоваяКолонка("КвоНормаОст", "Число", 15, 3);
	
	СписЗ = СоздатьОбъект("СписокЗначений");
	ВыбратьСтроки();
   	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки()=0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
		//КвоОЖ = КвоФаршаФакт - (КвоФаршаФакт * НормыЗатрат.ПроцПотерь/100);
		КвоФаршаРасчётное = КвоФаршаФакт - ПотериФарша;
		КвоОЖ = КвоФаршаРасчётное - (КвоФаршаРасчётное * Продукция.ПроцПотерь.Получить(ДатаДок)/100);
		ТЗКВып.НоваяСтрока();
		ТЗКВып.Продукция = Продукция;
		ТЗКВып.КвоФакт = КвоОЖ;
		ТЗКВып.КвоНорма = КвоФаршаПлан;
		ТЗКВып.КвоФактОст = КвоОЖ;
		ТЗКВып.КвоНормаОст = КвоФаршаПлан;		
		глПроводка(Контекст,"ОЖ",,,"Ожидаемая продукция",КвоОЖ,ТекущийДокумент(), Продукция,,
		,,, ,,"ПР");
		Если ПустоеЗначение(ЗаданиеНаПроизводство) = 0 Тогда
			Если СписЗ.НайтиЗначение(ЗаданиеНаПроизводство) = 0 Тогда
				СписЗ.ДобавитьЗначение(ЗаданиеНаПроизводство);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	Операция.Записать();
	
	// нужно списать остатки планового производства, которые были сделаны по заданиям на производство
	// поскольку мы не хотим менять регистр Остатки, то будем использовать хитрый алгоритм. Проверим, было ли это задание в более ранних заказах.
	// если да, считаем, что списано тем заказом. Если нет, то списываем
	
	ТЗКВып.Свернуть("Продукция", "КвоФакт,КвоНорма,КвоФактОст,КвоНормаОст");
	Если Константа.ВключитьПлановыеОстатки.Получить(ДатаДок) = Да Тогда
		// спишем остатки в заданиях на пр-во
		Для Инд = 1 По СписЗ.РазмерСписка() Цикл
			Зак = СписЗ.ПолучитьЗначение(Инд);
			Если Зак.Проведен() = 1 Тогда 
				Док = СоздатьОбъект("Документ");
				Док.УстановитьФильтр(1,0);
				Док.ВыбратьПоЗначению(, ДатаДок, "ЗаданияНаПроизводствоВЗаказах", Зак);
				НужноСписывать = 1;
				Пока Док.ПолучитьДокумент() = 1 Цикл
					Если Док.ТекущийДокумент() <> ТекущийДокумент() Тогда
						НужноСписывать = 0;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если НужноСписывать = 1 Тогда
					Рег = СоздатьОбъект("Регистр.Остатки");
					Рег.ВыбратьДвиженияДокумента(Зак);
					Пока Рег.ПолучитьДвижение() = 1 Цикл
						Регистр.Остатки.Фирма = Рег.Фирма;
						Регистр.Остатки.ТМЦ = Рег.ТМЦ;
						Регистр.Остатки.МестоХранения = Рег.МестоХранения;
						Регистр.Остатки.ДопКво = Рег.ДопКво;
						Регистр.Остатки.ОстатокТовара = Рег.ОстатокТовара;
						Регистр.Остатки.ФлагУчета = 2;
						Регистр.Остатки.ФлагСписания = 3;
						Регистр.Остатки.ДвижениеРасходВыполнить();
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	НачатьТранзакцию();
	ТЗВып = СоздатьОбъект("ТаблицаЗначений");
	ТЗВып.НоваяКолонка("Документ", "Документ.ВыпускПродукции");
	ТЗВып.НоваяКолонка("Продукция", "Справочник.ТМЦ");
	ТЗВып.НоваяКолонка("КвоФакт", "Число", 15, 3);
	ТЗВып.НоваяКолонка("КвоНорма", "Число", 15, 3);
	ТЗВып.НоваяКолонка("ПроцентВыпуска", "Число", 7, 2);
	
	// теперь исправим выпуск
	Док = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(ДатаДок,,ТекущийДокумент());
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если (Док.Вид() = "ВыпускПродукции") и (Док.ПометкаУдаления() = 0) Тогда
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку() = 1 Цикл
			    ТЗВып.НоваяСтрока();
				ТЗВып.Документ = Док.ТекущийДокумент();
				ТЗВып.Продукция = Док.Продукция;
				ТЗВып.ПроцентВыпуска = Док.ПроцентВыпуска;
				Стр = 0;
				Если ТЗКВып.НайтиЗначение(ТЗВып.Продукция, Стр, "Продукция") = 1 Тогда
					ТЗКВып.ПолучитьСтрокуПоНомеру(Стр);
					ТЗВып.КвоФакт = ТЗКВып.КвоФакт * (ТЗВып.ПроцентВыпуска / 100);
					ТЗВып.КвоНорма = ТЗКВып.КвоНорма * (ТЗВып.ПроцентВыпуска / 100);
				    ТЗКВып.КвоФактОст = ТЗКВып.КвоФактОст - ТЗВып.КвоФакт;
					ТЗКВып.КвоНормаОст = ТЗКВып.КвоНормаОст - ТЗВып.КвоНорма;
				КонецЕсли;				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	

	ТЗПродВып = СоздатьОбъект("ТаблицаЗначений");
	ТЗВып.Выгрузить(ТЗПродВып,,,"Продукция,ПроцентВыпуска");
	ТЗПродВып.Свернуть("Продукция", "ПроцентВыпуска");

	ТЗВып.Сортировать("Продукция,Документ", 1);	
	
	// пробежимся к выпуску, проверим остатки
	ТЗКВып.ВыбратьСтроки();
	Пока ТЗКВып.ПолучитьСтроку() = 1 Цикл
		Если (ТЗКВып.КвоНормаОст <> 0) ИЛИ (ТЗКВып.КвоФактОст <> 0) Тогда
		    Стр = 0;
			Если ТЗПродВып.НайтиЗначение(ТЗКВып.Продукция, Стр, "Продукция") = 1 Тогда
				Если ТЗПродВып.ПолучитьЗначение(Стр, "ПроцентВыпуска") = 100 Тогда
				    // нужно откорректировать данные
					Стр = 0;
					ТЗВып.НайтиЗначение(ТЗКВып.Продукция, Стр, "Продукция");
					ТЗВып.ПолучитьСтрокуПоНомеру(Стр);
					Пока ТЗВып.Продукция = ТЗКВып.Продукция Цикл
						Стр = Стр + 1;
						Если Стр > ТЗВып.КоличествоСтрок() Тогда
							Прервать;
						Иначе
							ТЗВып.ПолучитьСтрокуПоНомеру(Стр);
						КонецЕсли;
					КонецЦикла;
					
					Стр = Стр - 1;
					ТЗВып.ПолучитьСтрокуПоНомеру(Стр);
					ТЗВып.КвоНорма = ТЗВып.КвоНорма + ТЗКВып.КвоНормаОст;
					ТЗВып.КвоФакт= ТЗВып.КвоФакт + ТЗКВып.КвоФактОст;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
	ТЗВып.Сортировать("Документ,Продукция");
	
	СтарДок = СоздатьОбъект("Документ.ВыпускПродукции");
	ДокументИзменился = 0;
	ТЗВып.ВыбратьСтроки();
	Пока ТЗВып.ПолучитьСтроку() = 1 Цикл
		Если СтарДок.ТекущийДокумент() <> ТЗВып.Документ Тогда
			Если (СтарДок.Выбран() = 1) И (ДокументИзменился = 1) Тогда
				СтарДок.Записать();
			КонецЕсли;
			ДокументИзменился = 0;
			СтарДок.НайтиДокумент(ТЗВып.Документ);
		КонецЕсли;
		
		СтарДок.ВыбратьСтроки();
		Пока СтарДок.ПолучитьСтроку() = 1 Цикл
			Если (СтарДок.ПроцентВыпуска = ТЗВып.ПроцентВыпуска) И (СтарДок.Продукция = ТЗВып.Продукция) Тогда
				Если (ТЗВып.КвоФакт <> СтарДок.Кво) ИЛИ (ТЗВып.КвоНорма <> СтарДок.КвоНорма) Тогда
					ДокументИзменился = 1;
					СтарДок.Кво = ТЗВып.КвоФакт;
					СтарДок.КвоНорма = ТЗВып.КвоНорма;
					Стр = 0;
				КонецЕсли;				
				Прервать;
			КонецЕсли;				
		КонецЦикла;
	КонецЦикла;
	
	Если (СтарДок.Выбран() = 1) И (ДокументИзменился = 1) Тогда
		СтарДок.Записать();
	КонецЕсли;	
	
	//ТЗВып.Свернуть("Документ", "КвоФакт,КвоНорма");
	//ТЗВып.ВыбратьСтроки();
	//Пока ТЗВып.ПолучитьСтроку() = 1 Цикл
	//	ТЗВып.КвоФакт = 0;
	//КонецЦикла;
	//ТЗКВып.Свернуть("Продукция", "КвоФакт,КвоНорма");
	
	//Док = СоздатьОбъект("Документ");
	//ТЗВып.ВыбратьСтроки();
	//Пока ТЗВып.ПолучитьСтроку() = 1 Цикл
	//	Док.НайтиДокумент(ТЗВып.Документ);
	//	Док.ВыбратьСтроки();
	//	Пока Док.ПолучитьСтроку() = 1 Цикл
	//		Стр = 0;
	//		Если ТЗКВып.НайтиЗначение(Док.Продукция, Стр, "Продукция") = 1 Тогда
	//			Если (Док.Кво <> ТЗКВып.ПолучитьЗначение(Стр, "КвоФакт")) или (Док.КвоНорма <> ТЗКВып.ПолучитьЗначение(Стр, "КвоНорма")) Тогда
	//			    Док.Кво = ТЗКВып.ПолучитьЗначение(Стр, "КвоФакт");
	//				Док.КвоНорма = ТЗКВып.ПолучитьЗначение(Стр, "КвоНорма");
	//				ТЗВып.КвоФакт = 1;
	//			КонецЕсли;				
	//		Иначе
	//			Сообщить("В выпуске: " + Строка(Док) + " есть продукция " + Строка(Док.Продукция) + ", которой нет в заказе");
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//	Если ТЗВып.КвоФакт = 1 Тогда
	//	    Док.Записать();
	//		Если Док.Проведен() = 1 Тогда
	//		    //ОткрытьФормуМодально(Док.ТекущийДокумент(), "Провести");
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;

	ЗафиксироватьТранзакцию();	
КонецПроцедуры
