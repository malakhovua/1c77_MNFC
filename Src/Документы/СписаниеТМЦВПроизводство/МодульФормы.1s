Перем СтруктИзменений;
Перем ОстаткиТоваров;
Перем НачальнаяДатаДокумента;
Перем РегО;

Перем Пункт;

Процедура ИзмТМЦ() Далее

//======================================================================
Процедура ИзмПродукцияШ()
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Заполнить продукцию в строках?", "Да+Нет") = "Да" Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Продукция = ПродукцияШ;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры // ИзмПродукцияШ()

Процедура РассчитатьКвоФарша(Знач НомСтр = 0)
	глРассчитатьКвоФаршаСписание(Контекст, НомСтр);	
	Форма.Обновить();
КонецПроцедуры

Процедура ПоНормамЗатратШ(ИзТМЦ = 0)
	Если (КоличествоСтрок() > 0) и (ИзТМЦ = 1) Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	Чис = 1;
	//Если ВвестиЧисло(Чис, "Введите номер норм", 1, 0) = 0 Тогда
	//	Возврат;
	//Иначе
	//	НКво = ?(Чис = 1,"",?(Чис = 2,"2","3"));
	//КонецЕсли;
	НКво = "";
	
	Зак = ДокументОснование;
	Зак.ВыбратьСтроки();
	Пока Зак.ПолучитьСтроку() = 1 Цикл
		Если (Зак.Продукция = ПродукцияШ) и (Зак.КодСтроки = КодСтроки) Тогда
			Нормы = Зак.НормыЗатрат;
			Если Нормы.Действует = 0 Тогда
			    Предупреждение("Нормы затрат, указанные в заказе не действуют");
			КонецЕсли;			
		    Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если глПроверитьДоступКНормам(Нормы.Продукция) = 0 Тогда
		Возврат;
	КонецЕсли;
	КвоКутеров = Зак.КвоКутеров;
	КвоЗамесов = 1;
	НормаОснование = Нормы;
	тбНормы = СоздатьОбъект("ТаблицаЗначений");
	Если глПолучитьНормы(ПродукцияШ, , Нормы.КвоПродукции, ДатаДок, ДокументОснование, тбНормы,,НКво,,Нормы,1) = 1 Тогда
		тбНормы.ВыбратьСтроки();
		Пока тбНормы.ПолучитьСтроку() = 1 Цикл
//			Если тбНормы.Кво > 0 Тогда
				НоваяСтрока();
				ТМЦ = тбНормы.Материал;				
				ИзмТМЦ();
				ВидДеятельности = ПродукцияШ.ВидДеятельности;
				Продукция = ПродукцияШ;
				Заказ = ДокументОснование;
				ВидЗатрат = тбНормы.Материал.ВидЗатрат;
				Кво = тбНормы.Кво * КвоКутеров;
				//КвоНаЗамес = тбНормы.Кво * (КвоКутеров / ?(КвоЗамесов = 0,1,КвоЗамесов));
				КвоНаЗамес = Кво;
				ЦенаВручную = ?((тбНормы.Способ = Перечисление.СпособПодстановкиЦеныВСписание.Закупочная) ИЛИ (тбНормы.Способ = Перечисление.СпособПодстановкиЦеныВСписание.ИзНорм), Да, "");
				Если тбНормы.Способ = Перечисление.СпособПодстановкиЦеныВСписание.Закупочная Тогда
					ЦенаБезНДС = глВернутьЦену(ТМЦ, Константа.ЗакупЦена, ДатаДок - 1, Гривня);
				ИначеЕсли тбНормы.Способ = Перечисление.СпособПодстановкиЦеныВСписание.ИзНорм Тогда
					ЦенаБезНДС = тбНормы.Цена;
				КонецЕсли;
				глПолучитьСкладСписания(Контекст, Продукция, ТМЦ);
				КомментСтр = тбНормы.Примечание;
				СуммаБезНДС = Кво * ЦенаБезНДС;
//			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	РассчитатьКвоФарша();
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глСписаниеПересчитатьКоличествоПоНормеТМЦ(Контекст);		
	КонецЦикла;
КонецПроцедуры
					
Процедура ЗаполнитьСтрокуПоУмолчанию()
	Если (ДокументОснование.Вид() = "Заказ") и (ДокументОснование.Выбран() = 1) Тогда
		Заказ = ДокументОснование;
	КонецЕсли;
	Если ПродукцияШ.Выбран() = 1 Тогда
		Продукция = ПродукцияШ;
	КонецЕсли;
КонецПроцедуры

// ===============================
Функция УстДоступность()   
	Форма.Заголовок(глЗаголовок(Контекст,"Списание ТМЦ в производство"));
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
    Форма.кПечать.Доступность(Проведен() * (1-Модифицированность()));
	
	Форма.УчитыватьПолуфабрикаты.Доступность(СписыватьПоНормам);
	Если (СписыватьПоНормам=0) и (УчитыватьПолуфабрикаты=1) Тогда
		УчитыватьПолуфабрикаты = 0;
	КонецЕсли;
	Форма.Предпочтение.Доступность(1-СписыватьПоНормам);
	Форма.Продукция.Видимость(1-СписыватьПоНормам);
	Форма.ВидЗатрат.Видимость(1-СписыватьПоНормам);
	Форма.ЦенаБезНДС.Видимость(1-СписыватьПоНормам);
	Форма.СуммаБезНДС.Видимость(1-СписыватьПоНормам);
	Форма.СуммаДав.Видимость(1-СписыватьПоНормам);
	Форма.Итог.Видимость(1-СписыватьПоНормам);
	Форма.ИтогДав.Видимость(1-СписыватьПоНормам);
	Форма.ТМЦ.Заголовок(?(СписыватьПоНормам=1,"Продукция","ТМЦ"));
	Форма.Предпочтение.Заголовок(?(СписыватьПоНормам=1,"","Предпочтение"));
	Возврат "";
КонецФункции

// ======================================
Процедура ИзмФирма()
	Если Фирма <> глВосстановитьЗначение(Контекст,"Фирма") Тогда
		Если КоличествоСтрок()>0 Тогда
			Рез = Вопрос("Фирма была изменена. Удалить строки?","Да+Нет");
			Если Рез ="Да" Тогда
				УдалитьСтроки();
			Иначе
				Фирма = глВосстановитьЗначение(Контекст,"Фирма");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		глСохранитьЗначение(Контекст,"Фирма",Фирма);
	КонецЕсли;
КонецПроцедуры                      

// ===============================
Процедура ИзмМестоХранения()
	Если МестоХранения.Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;   
	
	глСохранитьЗначение(Контекст,"МестоХранения",МестоХранения);
КонецПроцедуры

// ===============================
Процедура ИзмТМЦ()
   Если ТМЦ.Выбран()=1 Тогда
   	   Если СписыватьПоНормам = 0 Тогда 
			Если глПроверкаТовараВДокументе(Контекст,ТМЦ) = Нет Тогда
				ТМЦ = глВосстановитьЗначение(Контекст,"ТМЦ");   	    
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если ПустоеЗначение(Ед) = 1 Тогда
			глУстановкаБазЕд(Контекст,ТМЦ,ТМЦ.ЕдиницаПоУмолчанию.Единица);
		ИначеЕсли ТМЦ <> Ед.Владелец Тогда
			глУстановкаБазЕд(Контекст,ТМЦ,ТМЦ.ЕдиницаПоУмолчанию.Единица);
		КонецЕсли;
		Если Кво = 0 Тогда
			Кво = 1;
		КонецЕсли;
		ВидДеятельности = ТМЦ.ВидДеятельности;
		Если СписыватьПоНормам = 0 Тогда 
			ВидЗатрат = ТМЦ.ВидЗатрат;
		КонецЕсли;	
		Если ПродукцияШ.Выбран() + Заказ.Выбран() = 2 Тогда
			Если ТМЦ.НеУчитыватьВОбщемВесе = 0 Тогда
			    РассчитатьКвоФарша();
			Иначе
				глСписаниеПересчитатьКоличествоПоНормеТМЦ(Контекст);
			КонецЕсли;
		КонецЕсли;
		глПолучитьСкладСписания(Контекст, Продукция, ТМЦ);
	Иначе                         
		ВидДеятельности = 0;
		ВидЗатрат = 0;
	КонецЕсли
КонецПроцедуры

// ======================================
Процедура ИзмЕд()
	Коэффициент = Ед.Коэффициент;
КонецПроцедуры 
                  
// ===============================
Процедура ИзмПродукция()
	Если Продукция.Выбран()=1 Тогда
		Если Продукция = ТМЦ Тогда	
			Предупреждение("Нельзя списывать на производство полуфабриката его же в качестве затраты!");
			Продукция = 0;
			Возврат;
		КонецЕсли;
		глПолучитьСкладСписания(Контекст, Продукция, ТМЦ);		
	КонецЕсли;
КонецПроцедуры
          
// ===============================
// Назначение: проверяет можно ли заполнять текущий документ на основании выбранного
//		
// Аргументы: текДокументОснование - документ, который проверяем
//		
// Возвращает: Да  - можно заполнять
//		       Нет - заполнять нельзя
Функция ПроверитьОснование(текДокументОснование)
    Если текДокументОснование.Вид() = "ПриходнаяНакладнаяГТД" Тогда
	    // проверим что приходуем
		Если текДокументОснование.ЧтоПриходуем = Перечисление.ЧтоПриходуем.ОСиНМАиДрНеобМатАктивы Тогда
			Предупреждение("Нельзя списывать в производство ОС, НМА, другие необоротные материальные активы!",2);
			Возврат Нет;
		КонецЕсли;
	КонецЕсли;
	Возврат Да;
КонецФункции //ПроверитьОснование

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета = СоздатьОбъект("СписокЗначений"); 
	
	СпСчета.ДобавитьЗначение(ТМЦ.Счет);
	Если глЭтоДавальческийЗаказ(Заказ) = 1 Тогда
    	СпСчета.ДобавитьЗначение(глПолучитьСчетУчетаТМЦ("Дав",ТМЦ));
	КонецЕсли;  
	
	спОтбор.Установить("Счет",спСчета);
	Если глПартионныйУчетПоСкладам = Да Тогда
		спОтбор.Установить("МестоХранения",МестоХранения);  
	КонецЕсли;
	спОтбор.Установить("Контекст",Контекст);                      
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры

// ===============================
// Создает таблицу значений, структура которой почти соотв. колонкам документа
Процедура СоздатьТаблицуДокумента(Таб)
	Таб = СоздатьОбъект("ТаблицаЗначений");
	Таб.НоваяКолонка("ТМЦ",				"Справочник.ТМЦ");
	Таб.НоваяКолонка("Ед",				"Справочник.Единицы");
	Таб.НоваяКолонка("Коэффициент",		"Число");
	Таб.НоваяКолонка("Кво",				"Число");
	Таб.НоваяКолонка("Продукция",		"Справочник.ТМЦ");
	Таб.НоваяКолонка("ВидЗатрат",		"Справочник.ВидыЗатрат");
	Таб.НоваяКолонка("ВидДеятельности",	"Справочник.ВидыДеятельности");
	Таб.НоваяКолонка("Заказ",			"Документ.Заказ");
КонецПроцедуры

// ===============================
// "Вставляет" Таб в табл. часть документа, учитывая повторяющиеся позиции
Процедура ОбъединитьСТаблЧастью(Таб,Сортировать = 1) //--- 1 = сортировать , 0 = не сортировать //--- УМК Сандомирский В.Ю, (18.09.14)
	Перем	ТабДок;
	
	ВыгрузитьТабличнуюЧасть(ТабДок);
	
	Таб.ВыбратьСтроки();
	Пока Таб.ПолучитьСтроку()=1 Цикл
		ТабДок.НоваяСтрока();
		ТабДок.ТМЦ				= Таб.ТМЦ;
		ТабДок.Ед				= Таб.Ед;
		ТабДок.Коэффициент  	= Таб.Коэффициент;
		ТабДок.Кво				= Таб.Кво;
		ТабДок.Продукция		= Таб.Продукция;
		ТабДок.ВидЗатрат		= Таб.ВидЗатрат;
		ТабДок.ВидДеятельности  = Таб.ВидДеятельности;
		ТабДок.Заказ			= Таб.Заказ;
		глПолучитьСкладСписания(ТабДок, Таб.Продукция, Таб.ТМЦ);
	КонецЦикла;
	
	ТабДок.Свернуть("ТМЦ,Ед,Коэффициент,Продукция,ВидЗатрат,ВидДеятельности,Заказ,СкладСписания","Кво");
	
	Если Сортировать = 1 Тогда
		ТабДок.Сортировать("ТМЦ, Продукция, Заказ");
	КонецЕсли;
	
	ЗагрузитьТабличнуюЧасть(ТабДок);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		КвоНаЗамес = Кво;
		глСписаниеПересчитатьКоличествоПоНормеТМЦ(Контекст);
	КонецЦикла;
	
	
КонецПроцедуры

// ===============================
Функция ПолучитьМатериалы(Продукция, Ед, Кво, ПоЗаказу, ВидДеятельности, ЗаполнитьРекурсивно, ТабМат)
	// в ТабМат возвращает перечень материалов по Продукции
	Перем	тбНормы, фДобавлять, фРекурсивно;
	
	Если глПолучитьНормы(Продукция, ?(ПустоеЗначение(Ед)=1,0,Ед), Кво, ДатаДок, ПоЗаказу, тбНормы)=0
	Тогда
		Возврат 0;
	КонецЕсли;
	
	тбНормы.ВыбратьСтроки();
	Пока тбНормы.ПолучитьСтроку() = 1 Цикл
		фДобавлять  = 0;
		фРекурсивно = 0;
		
		Если тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Материал Тогда
			фДобавлять = 1;
		КонецЕсли;
		
		Если тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат Тогда
			фДобавлять  = 1;
			Если ЗаполнитьРекурсивно=1 Тогда
				фРекурсивно = 1;
			КонецЕсли;
		КонецЕсли;
		
		Если фДобавлять=1 Тогда
			ТабМат.НоваяСтрока();
			ТабМат.ТМЦ				= тбНормы.Материал;
			ТабМат.Ед				= глВернутьБазовуюЕдиницуТовара(ТабМат.ТМЦ);
			ТабМат.Коэффициент		= 1;
			ТабМат.Кво				= тбНормы.Кво;
			ТабМат.ВидДеятельности  = ВидДеятельности;
			ТабМат.Заказ			= ПоЗаказу;
			ТабМат.Продукция		= Продукция;
			ТабМат.ВидЗатрат 		= ТабМат.ТМЦ.ВидЗатрат;
		КонецЕсли;
		
		Если фРекурсивно=1 Тогда
			Если ПолучитьМатериалы(тбНормы.Материал,, тбНормы.Кво, ПоЗаказу, ВидДеятельности, ЗаполнитьРекурсивно, ТабМат)=0 Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат 1;
КонецФункции

// ===============================
Функция ПолучитьВсеМатериалы(ТабПрод, ТабМат, ЗаполнитьРекурсивно)
	// Заполняет ТабМат материалами для всех продукций из ТабПрод
	
	СоздатьТаблицуДокумента(ТабМат);
	
	ТабПрод.ВыбратьСтроки();
	Пока ТабПрод.ПолучитьСтроку()=1 Цикл
		Если ПолучитьМатериалы(ТабПрод.ТМЦ, ТабПрод.Ед, ТабПрод.Кво,
		                       ТабПрод.Заказ, ТабПрод.ВидДеятельности,
						       ЗаполнитьРекурсивно,
						       ТабМат) = 0
		Тогда
			Возврат 0;
		КонецЕсли;
	КонецЦикла;
	
	Возврат 1;
КонецФункции

// ===============================
Процедура НаОснованииВыпускаПродукции(Док)
	Перем	Таб;
	
	СоздатьТаблицуДокумента(Таб);
	
	// выберем строки из Выпуска продукции
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку()=1 Цикл
		Если   (Док.Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) 
		     И (Док.Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат) Тогда
			глКомментарий("Пропускается ТМЦ "+СокрЛП(Док.Продукция)+" с видом """ + Док.Продукция.ВидТМЦ + """.",2,,"I");	
		ИначеЕсли Док.Кво = 0 Тогда
		    глКомментарий("Пропускается ТМЦ "+СокрЛП(Док.Продукция)+" с количеством = 0.",2,,"I");	
		Иначе
			Таб.НоваяСтрока();
			Таб.ТМЦ			= Док.Продукция;
			Таб.Ед			= Док.Ед;
			Таб.Коэффициент	= Док.Коэффициент;
			Таб.Кво			= Док.Кво;
		    Таб.ВидДеятельности = Док.ВидДеятельности;
			Таб.Заказ		= Док.Заказ;                          
		КонецЕсли;
	КонецЦикла;
	
	ОбъединитьСТаблЧастью(Таб);
КонецПроцедуры

// ===============================
Процедура НаОснованииЗаказа(Док)
	Перем	Таб, ТабМат;
	Перем	ЗаполнитьРекурсивно;
	
	СоздатьТаблицуДокумента(Таб);
	
	// выберем строки из заказа
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку()=1 Цикл
		Если (Док.Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) 
		   И (Док.Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат) Тогда
			глКомментарий("Пропускается ТМЦ "+СокрЛП(Док.Продукция)+" с видом """ + Док.Продукция.ВидТМЦ + """.",2,,"I");	
		ИначеЕсли Док.Кво = 0 Тогда
		    глКомментарий("Пропускается ТМЦ "+СокрЛП(Док.Продукция)+" с количеством = 0.",2,,"I");	
		Иначе
			Таб.НоваяСтрока();
			Таб.ТМЦ			= Док.Продукция;
			Таб.Ед			= Док.Ед;
			Таб.Коэффициент	= Док.Коэффициент;
			Таб.Кво			= Док.Кво;
			Если Таб.ТМЦ.ВидДеятельности.ПозаказноеПроизводство = Да Тогда
			    Таб.ВидДеятельности = Таб.ТМЦ.ВидДеятельности;
			КонецЕсли;
			Таб.Заказ		= Док;                          
		КонецЕсли;
	КонецЦикла;
	
	ОбъединитьСТаблЧастью(Таб);
КонецПроцедуры

// ===============================
Процедура НаОснованииНормЗатрат(Док,Сортировать = 1,Кутеров = 1) //--- 1 = сортировать , 0 = не сортировать //--- УМК Сандомирский В.Ю, (18.09.14)
	Перем	Таб;
	Если глПроверитьДоступКНормам(Док.Продукция) = 0 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	СоздатьТаблицуДокумента(Таб);
	
    Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку()=1 Цикл
		Если (Док.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Материал) 
		Или (Док.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат) Тогда
			Таб.НоваяСтрока();
			Таб.ТМЦ				= Док.Элемент;              
			Таб.Ед				= Док.Ед;
			Таб.Коэффициент 	= Док.Коэффициент;
			Таб.Кво				= Док.Кво * Кутеров;
			Таб.ВидЗатрат		= Таб.ТМЦ.ВидЗатрат;
			Таб.Продукция		= ПродукцияШ;//--- УМК Сандомирский В.Ю, (было Док.Продукция; но нужно заполнять из шапки)
			Таб.Заказ			= ДокументОснование;//--- УМК Сандомирский В.Ю, (было Док.Заказ; но нужно заполнять из шапки)
			Таб.ВидДеятельности	= Док.Продукция.ВидДеятельности;			
		Иначе
			глКомментарий("Пропускается элемент затрат "+СокрЛП(Док.Элемент)+" с видом """ + СокрЛП(Док.ВидЭлемента)+""".",2,,"I");
		КонецЕсли;
	КонецЦикла;
	
	ОбъединитьСТаблЧастью(Таб,Сортировать); //--- 1 = сортировать , 0 = не сортировать //--- УМК Сандомирский В.Ю, (18.09.14)
КонецПроцедуры

// ===============================
Процедура НаОснованииПриходной(Док)
	Перем	Таб;
	
	СоздатьТаблицуДокумента(Таб);
	
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку()>0 Цикл
		Если Док.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга Тогда
			Таб.НоваяСтрока();
			Таб.ТМЦ			= Док.ТМЦ; 
			Таб.Ед			= Док.Ед;
			Таб.Коэффициент	= Док.Коэффициент;
			Таб.Кво			= Док.Кво;
			Таб.ВидЗатрат	= Таб.ТМЦ.ВидЗатрат;
		Иначе
			глКомментарий("Пропускается ТМЦ "+СокрЛП(Док.ТМЦ)+" с видом ""Услуга"".",2,,"I");
		КонецЕсли;
	КонецЦикла;	
		
	ОбъединитьСТаблЧастью(Таб);
КонецПроцедуры

// ===============================
Процедура ЗаполнитьПоНормам()
	Перем	ТабПрод, ТабМат;
	
	ВыгрузитьТабличнуюЧасть(ТабПрод);
	Если ПолучитьВсеМатериалы(ТабПрод, ТабМат, УчитыватьПолуфабрикаты)=1 Тогда
		УдалитьСтроки();
		ОбъединитьСТаблЧастью(ТабМат);
		СписыватьПоНормам = 0;
	Иначе
		Предупреждение("Ошибка при заполнении по нормам!
		               |Строки документа не изменены");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура Заполнить()
	Перем	Меню, Пункт, Док;
	Перем	Очищать;
	
	Меню = СоздатьОбъект("СписокЗначений");
	
	Если СписыватьПоНормам=1 Тогда
		Меню.ДобавитьЗначение("Заказ",	"По Заказам");
		Если КоличествоСтрок()>0 Тогда
			Меню.ДобавитьЗначение(1,	"По нормам продукции в строках документа");
		КонецЕсли;
	Иначе
		Меню.ДобавитьЗначение("НормыЗатратШ",				"По Нормам затрат в шапке");
		Меню.ДобавитьЗначение("ВыпускПродукции",			"По Выпускам продукции");
		Меню.ДобавитьЗначение("НормыЗатрат",				"По Нормам затрат");		
		Меню.ДобавитьЗначение("ПриходнаяНакладнаяЗапасы",	"По Приходным накладным");
		Меню.ДобавитьЗначение("ПриходнаяНакладнаяГТД",		"По ГТД");		
	КонецЕсли;
	
	Если Меню.ВыбратьЗначение(Пункт,"",,,1)=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗначенияСтр(Пункт)="Число" Тогда // не по документу
		Если Пункт=1 Тогда
			ЗаполнитьПоНормам();
		КонецЕсли;		
		Возврат;
	КонецЕсли;
	
	// заполнение по документу
	Если Пункт <> "НормыЗатратШ" Тогда
		Если ВвестиЗначение(Док, "Выберите документ", "Документ."+Пункт)=0 Тогда
			Возврат;
		КонецЕсли;	    
		Если Док.Фирма<>Фирма Тогда
			Предупреждение("Документ должен быть по фирме "+СокрЛП(Фирма.Наименование)+"!");
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Если КоличествоСтрок()>0 Тогда
		Очищать = Вопрос("Очистить табличную часть перед заполнением?","Да+Нет+Отмена");
		Если Очищать="Да" Тогда
			УдалитьСтроки();
		ИначеЕсли Очищать="Отмена" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(ДокументОснование)=1 Тогда
		ДокументОснование = Док;
	КонецЕсли;
	
	// продукцией
	Если		Пункт="Заказ" Тогда
		НаОснованииЗаказа(Док);
	// материалами
	ИначеЕсли	Пункт="НормыЗатрат" Тогда
		Если глПроверитьДоступКНормам(Док.Продукция) = 1 Тогда
			НаОснованииНормЗатрат(Док,0,КвоКутеров); //--- 1 = сортировать , 0 = не сортировать //--- УМК Сандомирский В.Ю, (18.09.14)
		КонецЕсли;
	ИначеЕсли	Найти(Пункт,"ПриходнаяНакладная")>0 Тогда
		Если ПроверитьОснование(Док) = Да Тогда
			НаОснованииПриходной(Док);
		Иначе
			ДокументОснование = "";
		КонецЕсли;		
	ИначеЕсли	Пункт="ВыпускПродукции" Тогда
		СписыватьПоНормам = 1;
		НаОснованииВыпускаПродукции(Док);
	ИначеЕсли	Пункт="НормыЗатратШ" Тогда
		ПоНормамЗатратШ();
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмСписыватьПоНормам()
	Перем	Ответ, Н;
	
	Если КоличествоСтрок()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если СписыватьПоНормам=1 Тогда
		// теперь в реквизитах ТМЦ содержаться материалы/полуфабрикаты,
		// а по смыслу должна быть продукция/полуфабрикаты
		Ответ = Вопрос("Удалить все строки табличной части?
		               |(Нет - удалить только материалы)", "Да+Нет+Отмена");
		Если Ответ="Да" Тогда
			УдалитьСтроки();
		ИначеЕсли Ответ="Нет" Тогда
			// удалим материалы
			Н = 1;
			Пока Н<=КоличествоСтрок() Цикл
				ПолучитьСтрокуПоНомеру(Н);
				Если	(ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция)
				И		(ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат)
				Тогда
					УдалитьСтроку();
					// следующая строка остается с тем же номером
				Иначе
					Н = Н + 1;
				КонецЕсли;
			КонецЦикла;
		Иначе // Отмена
			// восстановим значение флажка
			СписыватьПоНормам = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмДокументОснование()
	Если ДокументОснование.Вид() = "ВыпускПродукции" Тогда
		Рез = Вопрос("Перезаполнить табличную часть? ","Да+Нет");
		Если Рез = "Да" Тогда
			УдалитьСтроки();					
			СписыватьПоНормам = 1;
			НаОснованииВыпускаПродукции(ДокументОснование);
		КонецЕсли;  
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			// очистим реквизиты заполненные при проведении
			ЦенаБезНДС  = 0;
			СуммаБезНДС = 0;
			СуммаДав    = 0;
			ЦенаВручную = "";
		КонецЦикла;
		Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	ИзмФирма();
	МестоХранения = глВосстановитьЗначение(Контекст,"СкладМатериалов");
КонецПроцедуры
                
// ======================================
Процедура ВводНаОсновании(Док)
	Фирма = Док.Фирма;
	глУстановитьНомер(Контекст);
	ИзмФирма();
	СписыватьПоНормам = 0;
	Если ПроверитьОснование(Док) = Нет Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	ДокументОснование = Док;
	ВидДок = Док.Вид();
	Если ВидДок = "НормыЗатрат" Тогда
		МестоХранения = глВосстановитьЗначение(Контекст,"СкладМатериалов");
		НаОснованииНормЗатрат(Док);
	ИначеЕсли (ВидДок = "ПриходнаяНакладнаяЗапасы") или (ВидДок = "ПриходнаяНакладнаяГТД") Тогда
		МестоХранения = Док.МестоХранения;
		НаОснованииПриходной(Док);
	ИначеЕсли ВидДок = "Заказ" Тогда
		МестоХранения = глВосстановитьЗначение(Контекст,"СкладМатериалов");
		//Подразделение = глВосстановитьЗначение(,"БазПодразделениеПроизводство");
		Подразделение = Док.Подразделение;
		// проверим, на какую продукцию ещё не было списаний
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		Док.ВыгрузитьТабличнуюЧасть(ТЗ, "Продукция,КодСтроки,НормыЗатрат,КвоФаршаФакт,КвоКутеров,КвоЗамесов");
		ТЗ.УстановитьПараметрыКолонки("Продукция",,,,,28);
		ТЗ.УстановитьПараметрыКолонки("НормыЗатрат",,,,,40);
		ТЗ.НоваяКолонка("ЕстьСп", "Число");
		ТЗ.НоваяКолонка("Ключ");
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ТЗ.Ключ = Строка(ТЗ.КодСтроки) + "/" + ЗначениеВСтрокуВнутр(ТЗ.Продукция);
		КонецЦикла;
		
		Док1 = СоздатьОбъект("Документ");
		Док1.ВыбратьПодчиненныеДокументы(Док.ДатаДок,,Док);
		Пока Док1.ПолучитьДокумент() = 1 Цикл
			Если Док1.ПометкаУдаления() = 1 Тогда
			    Продолжить;
			КонецЕсли;
			Если Док1.Вид() = "СписаниеТМЦВПроизводство" Тогда
				Стр = 0;
				Если ТЗ.НайтиЗначение(Строка(Док1.КодСтроки) + "/" + ЗначениеВСтрокуВнутр(Док1.ПродукцияШ), Стр, "Ключ") = 1 Тогда
				    ТЗ.УстановитьЗначение(Стр, "ЕстьСп", 1);
				КонецЕсли;
			КонецЕсли;			
		КонецЦикла;
		
		Инд = 1;
		Пока Инд <= ТЗ.КоличествоСтрок() Цикл
			Если ТЗ.ПолучитьЗначение(Инд, "ЕстьСп") = 1 Тогда
			    ТЗ.УдалитьСтроку(Инд);
			Иначе
				Инд = Инд + 1;
			КонецЕсли;
		КонецЦикла;		
		
		ТЗ.УдалитьКолонку("Ключ");
		Если ТЗ.КоличествоСтрок() = 0 Тогда
		    Предупреждение("По данному заказу уже сформированы все списания");
		Иначе
			Стр = 0;
			Если ТЗ.ВыбратьСтроку(Стр) <> 0 Тогда
			    ПродукцияШ = ТЗ.ПолучитьЗначение(Стр, "Продукция");
				КодСтроки  = ТЗ.ПолучитьЗначение(Стр, "КодСтроки");
				КвоКутеров = ТЗ.ПолучитьЗначение(Стр, "КвоКутеров");
				НормаОснование = ТЗ.ПолучитьЗначение(Стр, "НормыЗатрат");
				//КвоЗамесов = ТЗ.ПолучитьЗначение(Стр, "КвоЗамесов");
				КвоЗамесов = 1;
			КонецЕсли;			
		КонецЕсли;
		//СписыватьПоНормам = 1;
		//НаОснованииЗаказа(Док);
	ИначеЕсли ВидДок = "ВыпускПродукции" Тогда
		МестоХранения = глВосстановитьЗначение(Контекст,"СкладМатериалов");
		Подразделение = Док.Подразделение;
		СписыватьПоНормам = 1;
		НаОснованииВыпускаПродукции(Док);
	КонецЕсли;
КонецПроцедуры              

Процедура ИзмфОстаткиНаДокумент(ИзмДаты = 0)
	Если фОстаткиНаДокумент = 1 Тогда
		РегО = СоздатьОбъект("Регистр.Остатки");
		Если (ТекущийДокумент().Выбран() = 1) и (ИзмДаты = 0) Тогда
			Если СравнитьТА() = -1 Тогда
				РегО.ВременныйРасчет(1);
			    РассчитатьРегистрыНа(ТекущийДокумент());
			КонецЕсли;
		ИначеЕсли ДатаДок < ПолучитьДатуТА() Тогда
			РегО.ВременныйРасчет(1);
		    РассчитатьРегистрыПо(ДатаДок);
		Иначе
			РегО.ВременныйРасчет(0);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	глПроверкаДатыДок(Контекст,"Открытие");
	СтатусВозврата(глПроверитьДоступКНормам(ПродукцияШ));
	ПриЗаписиПерепроводить(1);
	НачальнаяДатаДокумента = ДатаДок;
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кФирма.Доступность(0);               		
		Форма.кЗаполнить.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	          
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;

	фОстаткиНаДокумент = ВосстановитьЗначение("ОстаткиНаДокумент");
	ИзмфОстаткиНаДокумент();
	глСохранитьЗначение(Контекст,"Фирма",Фирма);
	глСохранитьЗначение(Контекст,"МестоХранения",МестоХранения);
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если (ТМЦ = Форма.Параметр) или (ТМЦ.ТМЦДляСписания.Получить(ДатаДок) = Форма.Параметр) Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Инвентаризация) = 0 Тогда
			Форма.Инвентаризация.Видимость(1);
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция Рентабельность()
	Если Проведен() = 0 Тогда
		Форма.тРент.Заголовок("");
		Форма.тРент.Цвет(-1);
		Возврат "";
	КонецЕсли;
	ВесПрод = 0;
	НормаПотерь = 0; ПотериФарша = 0;
	ДопКоэф = 1;
	Если (ПустоеЗначение(ДокументОснование) = 0) и (ДокументОснование.Вид() = "Заказ") Тогда
		ДокументОснование.ВыбратьСтроки();
		Пока ДокументОснование.ПолучитьСтроку() = 1 Цикл
			Если ДокументОснование.Продукция = ПродукцияШ Тогда
				//НормаПотерь = ДокументОснование.НормыЗатрат.ПроцПотерь;
				НормаПотерь = ДокументОснование.Продукция.ПроцПотерь.Получить(ДатаДок);				
			КонецЕсли;
			Если ДокументОснование.КодСтроки = КодСтроки Тогда
				ПотериФарша = ДокументОснование.ПотериФарша;
				ДопКоэф = ?(ДокументОснование.КвоФаршаФакт = 0, 1, ДокументОснование.КвоФаршаПлан / ДокументОснование.КвоФаршаФакт);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	КФарша = КвоФарша - ПотериФарша; 
	ВесПрод = КФарша - КФарша * (НормаПотерь / 100);
	ВесПрод = ВесПрод / ДопКоэф;
    
	ИтогСуммаДляФ = 0;
	ВыбратьСтроки();	
	Пока ПолучитьСтроку()=1 Цикл
		СуммаДляФ = ?(ВесПрод = 0,0, СуммаБезНДС / ВесПрод);
		ИтогСуммаДляФ = ИтогСуммаДляФ + СуммаДляФ;
	КонецЦикла;
			
	//ОПЗ = Константа.ОПЗ.Получить(ДатаДок);
	ОПЗ = ПродукцияШ.ОПР.Получить(ДатаДок); // + umk
	ИтЦенаКГ = Число(ИтогСуммаДляФ + ОПЗ + глПолучитьСтУпак(ПродукцияШ, , ДатаДок, -1));
	ЦенаП = глВернутьЦену(ПродукцияШ, Константа.ОсновнаяКатегорияЦен, ДатаДок, Гривня);
	Если ИтЦенаКГ<>0 Тогда
		Рен = Окр((ЦенаП/ИтЦенаКГ)*100, 2);
	Иначе
		Рен = 0;
	КонецЕсли;
	Если Рен <> Рентаб Тогда
	    Рентаб = Рен;
	КонецЕсли;
	
	Если Рен*1.05 < ПродукцияШ.НормаРент.Получить(ДатаДок) Тогда
	    Форма.тРент.Цвет(255,0,0);
	ИначеЕсли Рен > ПродукцияШ.НормаРент.Получить(ДатаДок) * 1.1 Тогда
	    Форма.тРент.Цвет(0,0,255);
	Иначе
		Форма.тРент.Цвет(0,0,0);
	КонецЕсли;
	
	Возврат Рен;
КонецФункции

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Если (ДокументОснование.Выбран() = 1) и (ПродукцияШ.Выбран() = 1) Тогда
		Док = СоздатьОбъект("Документ");
		Док.ВыбратьПодчиненныеДокументы(,, ДокументОснование);
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если (Док.ПометкаУдаления() = 0) и (Док.Вид() = "СписаниеТМЦВПроизводство") и (Док.ТекущийДокумент() <> ТекущийДокумент()) Тогда
				Если (Док.ПродукцияШ = ПродукцияШ) И (Док.КодСтроки = КодСтроки) Тогда
				    Сообщить("На эту продукцию уже есть списание: " + Строка(Док.ТекущийДокумент()));				
					СтатусВозврата(0);
					Прервать;				    
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если КвоФарша = 0 Тогда
	    РассчитатьКвоФарша();
	КонецЕсли;
//	Р = Число(Форма.тРент.Заголовок());
//	Если Р <> Рентаб Тогда
	Рентаб = Рентабельность();
	//КонецЕсли;
	
	Попытка
		АвтоВремяОтключить();
		// время устанавливаем в зависимости от уровня передела
		Урн = 2;
		Если ПродукцияШ.Выбран() = 1 Тогда
		    Урн = ПродукцияШ.УровеньПередела.Получить(ДатаДок);
		КонецЕсли;
		
		УстановитьВремя(17, (2-Урн)*15, 0);
	Исключение КонецПопытки;	
	Если глЕстьИзменения(Контекст, СтруктИзменений, "") = 1 Тогда		
		Автор = глПользователь;
	КонецЕсли;
КонецПроцедуры
                             
// ===============================
Процедура ПриНачалеРедактированияСтроки()
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;
	глСохранитьЗначение(Контекст,"ТМЦ",ТМЦ);
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
	Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	ЗаполнитьСтрокуПоУмолчанию();
КонецПроцедуры

//================================                      
// Эта процедура предназначена для печати Списания ТМЦ и Накладной-требования
Процедура ПечатьСписаниеТМЦ()
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(глВосстановитьЗначение(,"ФормыНаУкраинском")= Да, "_Укр", "");
	Таб.ИсходнаяТаблица("Списание"+СуффиксТаблицы);
	глУстПропись(Гривня);
	ВесПрод = 0;

	// возьмём вес продукци из выпуска
	ПолучитьСтрокуПоНомеру(1);
	ДокП = СоздатьОбъект("Документ");
	Если (ПустоеЗначение(Заказ) = 0) и (ПустоеЗначение(ПродукцияШ) = 0) Тогда
		ИтКвоПоЗаказу = 0;
		Заказ.ВыбратьСтроки();
		Пока Заказ.ПолучитьСтроку() = 1 Цикл			
			Если Заказ.Продукция = ПродукцияШ Тогда
				ИтКвоПоЗаказу = ИтКвоПоЗаказу + Заказ.КвоФаршаФакт - Заказ.ПотериФарша;
			КонецЕсли;
		КонецЦикла;
		
		ДокП.ВыбратьПодчиненныеДокументы(,,Заказ);
		Пока ДокП.ПолучитьДокумент() = 1 Цикл
			Если (ДокП.Вид() = "ВыпускПродукции") и (ДокП.ПометкаУдаления() = 0) Тогда
			    ДокП.ВыбратьСтроки();
				Пока ДокП.ПолучитьСтроку() = 1 Цикл
					Если ДокП.Продукция = ПродукцияШ Тогда
					    //ВесПрод = Окр(ДокП.Кво * (КвоФарша / ИтКвоПоЗаказу), 3);
						ВесПрод = Окр(ДокП.Кво, 3);
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Если ВесПрод <> 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Ном = 0;
	ИтогСумма = 0; ИтогСуммаДляФ = 0;
	ИтогСуммаДав = 0;
	ПерваяСтраница = 1;
	СтароеМестоХранения = "";
	Таб.ВывестиСекцию("Шапка");
	
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку()=1 Цикл
		Ном = Ном + 1;
		ПечТМЦ = СокрЛП(ТМЦ.ПолнНаименование);
		ПечЕд = СокрЛП(ТМЦ.БазоваяЕдиница);
		ПечКво = Формат(Кво,"Ч15.3");
		ПечЦена = Формат(СуммаБезНДС/?(Кво = 0, 1, Кво),"Ч12.2");
		ПечСумма = Формат(СуммаБезНДС,"Ч12.2");
//		ПечСуммаДав = Формат(СуммаДав,"Ч12.2");
		СуммаДляФ = ?(ВесПрод = 0,0, СуммаБезНДС / ВесПрод);
		ПечСуммаДляФ = Формат(СуммаДляФ, "Ч12.2");
		
		Таб.ВывестиСекцию("Строка");
		ИтогСумма = ИтогСумма + СуммаБезНДС;
		ИтогСуммаДляФ = ИтогСуммаДляФ + СуммаДляФ;
		ИтогСуммаДав = ИтогСуммаДав + СуммаДав;
	КонецЦикла;
			
	ПечИтогСумма = Формат(ИтогСумма,"Ч12.2");
	ПечИтогСуммаДляФ = Формат(ИтогСуммаДляФ,"Ч12.2");
	ПечИтогСуммаДав = Формат(ИтогСуммаДав,"Ч12.2");
	//прописью
	ПечИтогСуммаП = Формат(ИтогСумма,"ЧПДС");
	ПечИтогСуммаДавП = Формат(ИтогСуммаДав,"ЧПДС");
	
	Если ПродукцияШ.УровеньПередела.Получить(ДатаДок) = 0 Тогда		 //--- УМК Сандомирский В.Ю, 07.04.14 (В документе "Норма затрат" в печатной форме калькуляция если уровень передела неравен нулю то без ОПЗ)
		//ОПЗ = Константа.ОПЗ.Получить(ТекущаяДата());
		ОПЗ = ПродукцияШ.ОПР.Получить(ТекущаяДата()); // + umk
	Иначе
		ОПЗ = 0;
	КонецЕсли; //... УМК Сандомирский В.Ю, 07.04.14 
	
	ИтЦенаКГ = Число(ИтогСуммаДляФ + ОПЗ);
	ЦенаП = глВернутьЦену(ПродукцияШ, Константа.ОсновнаяКатегорияЦен, ДатаДок, Гривня);
	Таб.ВывестиСекцию("Дно");
	
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Списание ТМЦ в производство","");
	глУстПропись(Гривня);
КонецПроцедуры		//глПечатьСписаниеТМЦ                  	

//================================                      
// Эта процедура предназначена для печати Списания ТМЦ и Накладной-требования
Процедура ПечатьСписаниеСНормами()
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	глУстПропись(Гривня);
	ВесПрод = 0;
	ВесПрод = 0;

	// возьмём вес продукци из выпуска
	ПолучитьСтрокуПоНомеру(1);
	ДокП = СоздатьОбъект("Документ");
	Если (ПустоеЗначение(Заказ) = 0) и (ПустоеЗначение(ПродукцияШ) = 0) Тогда
		ДокП.ВыбратьПодчиненныеДокументы(,,Заказ);
		Пока ДокП.ПолучитьДокумент() = 1 Цикл
			Если (ДокП.Вид() = "ВыпускПродукции") и (ДокП.ПометкаУдаления() = 0) Тогда
			    ДокП.ВыбратьСтроки();
				Пока ДокП.ПолучитьСтроку() = 1 Цикл
					Если ДокП.Продукция = ПродукцияШ Тогда
					    ВесПрод = ДокП.Кво;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Если ВесПрод <> 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;


	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ, "ТМЦ,Кво");
	ТЗ.НоваяКолонка("Норма", "Число", 15, 3);
	
	НКво = "";
	Зак = ДокументОснование;
	Зак.ВыбратьСтроки();
	Пока Зак.ПолучитьСтроку() = 1 Цикл
		Если Зак.Продукция = ПродукцияШ Тогда
			Нормы = Зак.НормыЗатрат;
		    Прервать;
		КонецЕсли;
	КонецЦикла;

	тбНормы = СоздатьОбъект("ТаблицаЗначений");
	Если глПолучитьНормы(ПродукцияШ, , Нормы.КвоПродукции, ДатаДок, ДокументОснование, тбНормы,,НКво) = 1 Тогда
		тбНормы.ВыбратьСтроки();
		Пока тбНормы.ПолучитьСтроку() = 1 Цикл
			Если тбНормы.Кво > 0 Тогда
				ТЗ.НоваяСтрока();
				ТЗ.ТМЦ = тбНормы.Материал;
				ТЗ.Норма = тбНормы.Кво * КвоКутеров;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ТЗ.Свернуть("ТМЦ", "Кво,Норма");
	КвоФаршаНорма = 0;
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если ТЗ.ТМЦ.НеУчитыватьВОбщемВесе = 0 Тогда
			КвоФаршаНорма = Окр(КвоФаршаНорма + ТЗ.Норма, 2);
		КонецЕсли;
	КонецЦикла;	

	Таб.ВывестиСекцию("Шапка");
	
	ТЗ.ВыбратьСтроки();
	
	Пока ТЗ.ПолучитьСтроку()=1 Цикл
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
			
	Таб.ВывестиСекцию("Дно");
	
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Списание ТМЦ в производство","");
	глУстПропись(Гривня);
КонецПроцедуры		//глПечатьСписаниеТМЦ

// ===============================
Процедура ВыборВариантаПечати()
	Перем ВыбЗначение;
	ВариантыПечати = СоздатьОбъект("СписокЗначений");
	ВариантыПечати.ДобавитьЗначение(1,"Списание");
	ВариантыПечати.ДобавитьЗначение(3,"Списание форма УМК");
	ВариантыПечати.ДобавитьЗначение(2,"Накладная-требование");	
	
	Если ВариантыПечати.ВыбратьЗначение(выбЗначение,"",,,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;
	Если ВыбЗначение = 1 Тогда
	    ПечатьСписаниеТМЦ();
	ИначеЕсли ВыбЗначение = 3 Тогда
	    ПечатьСписаниеСНормами();
	ИначеЕсли ВыбЗначение = 2 Тогда
		глПечатьСписаниеТМЦ(ТекущийДокумент(),МестоХранения,"НакладнаяТребование");
	КонецЕсли;
КонецПроцедуры        

// ===============================
Процедура ОбработкаВыбораЗначения(ВыбЗнач,ИдентЭлемДиалога,ФлагСтандОбр)
	Если (ИдентЭлемДиалога = "Заказ") Или (ИдентЭлемДиалога = "ДокументОснование") Тогда
		Если глПроверитьФирму(Контекст,ВыбЗнач) = 0 Тогда
			ФлагСтандОбр = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)
	глПриОбработкеПодбора(Выб,Контекст);    
	ИзмТМЦ(); 
	ЗаполнитьСтрокуПоУмолчанию();
КонецПроцедуры

Процедура ВычСумма()
	СуммаБезНДС = ЦенаБезНДС * Кво * Коэффициент;
	Если ТМЦ.НеУчитыватьВОбщемВесе = 0 Тогда
	    РассчитатьКвоФарша();
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "Предпочтение" Тогда
		//ВыборПредПочтения();
		ФлагСтандОбр = 0;
		Спис = СоздатьОбъект("СписокЗначений");
		Спис.Установить("ТМЦ", ТМЦ);
		Спис.Установить("ПН", 1);
		ОткрытьФормуМодально("Обработка.ВыборРНВВозврате",Спис);
		Если ТипЗначенияСтр(Спис) = "Документ" Тогда
			НазначитьТип("Предпочтение", "Документ.ПриходнаяНакладнаяЗапасы");
			Предпочтение = Спис;
			Предпочтение.ВыбратьСтроки();
			Пока Предпочтение.ПолучитьСтроку() = 1 Цикл
				Если Предпочтение.ТМЦ = ТМЦ Тогда
					ЦенаБезНДС = Предпочтение.ЦенаБезНДС;
					ВычСумма();
					ЦенаВручную = Да;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		ФлагСтандОбр = 0;
	ИначеЕсли Рекв = "ПродукцияШ" Тогда
		Если ДокументОснование.Выбран() = 1 Тогда
			Если ДокументОснование.Вид() = "Заказ" Тогда
				СтарПродукция = ПродукцияШ;
				ФлагСтандОбр = 0;
				СписП = СоздатьОбъект("СписокЗначений");
				Спис = СоздатьОбъект("СписокЗначений");				
				ДокументОснование.ВыбратьСтроки();
				Пока ДокументОснование.ПолучитьСтроку() = 1 Цикл
					СписП.ДобавитьЗначение(Строка(ДокументОснование.КодСтроки) + "/" + ЗначениеВСтрокуВнутр(ДокументОснование.Продукция), 
					Формат(СокрЛП(ДокументОснование.Продукция.Наименование), "С"+Метаданные.Справочник("ТМЦ").ДлинаНаименования) + " " + 
					Строка(ДокументОснование.КодСтроки) + " " + ?(ДокументОснование.КвоФаршаПлан = 0, "", "+"));
				КонецЦикла;
				СписП.Сортировать();
				СписП.Выгрузить(Спис);
				
				Если (ДокументОснование.Выбран() = 1) Тогда
					Док = СоздатьОбъект("Документ");
					Док.ВыбратьПодчиненныеДокументы(,, ДокументОснование);
					Пока Док.ПолучитьДокумент() = 1 Цикл
						Если (Док.ПометкаУдаления() = 0) и (Док.ТекущийДокумент() <> ТекущийДокумент()) и (Док.Вид() = "СписаниеТМЦВПроизводство") Тогда
							Поз = СписП.НайтиЗначение(Строка(Док.КодСтроки) + "/" + ЗначениеВСтрокуВнутр(Док.ПродукцияШ));
							Если Поз <> 0 Тогда
							    СписП.УдалитьЗначение(Поз);
							КонецЕсли;							
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;				
				
				Поз = 0;
				Если СписП.ВыбратьЗначение(ПродукцияШ,,Поз,, 2) = 0 Тогда
					Возврат;
				Иначе
					Зн = СписП.ПолучитьЗначение(Поз);
					КодСтроки = Число(Лев(Зн, Найти(Зн, "/") - 1));
					ПродукцияШ = ЗначениеИзСтрокиВнутр(Сред(Зн, Найти(Зн, "/") + 1))
				КонецЕсли;
				
				Если ПродукцияШ <> СтарПродукция Тогда
					Если Вопрос("Заполнить по нормам?", "Да+Нет") = "Да" Тогда
						ПоНормамЗатратШ(1);
					Иначе
						ИзмПродукцияШ();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры                 

Процедура ПриУдаленииСтроки()
	РассчитатьКвоФарша(НомерСтроки);
КонецПроцедуры

Процедура ИзмКвоНаЗамес()
	Кво = КвоНаЗамес;// * ?(КвоЗамесов = 0, 1, КвоЗамесов);
	ВычСумма();
	РассчитатьКвоФарша();
КонецПроцедуры

Функция КвоКЗ()
	Возврат "Замес: " + (КвоКутеров / ?(КвоЗамесов = 0, 1, КвоЗамесов)) * 100;
КонецФункции

Процедура ОбновитьКвоКут()
	
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
	    ДокументОснование.ВыбратьСтроки();
		Пока ДокументОснование.ПолучитьСтроку() = 1 Цикл
			Если ДокументОснование.КодСтроки = КодСтроки Тогда
				КвоКутеров = ДокументОснование.КвоКутеров;			    
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


//====================================================================== //--- УМК Сандомирский В.Ю, (*) сформировать норму затрат на основании текущего документа
Процедура СформироватьНорму()
	
	Если ТекущийДокумент().Выбран() = 1 Тогда
	
		Ответ = Вопрос("Сформировать норму затрат на основании текущего докумета ?","Да+Нет");
		
		Если Ответ <> "Да" Тогда
		    Возврат;
		КонецЕсли;
		
		КонтекстФормы = "";
		ОткрытьФорму("Документ.НормыЗатрат",КонтекстФормы,ТекущийДокумент());
		
		//Сообщить("Сформирована норма");
	Иначе
		Сообщить("Запишите текущее списание в производство.");
	КонецЕсли;
	
КонецПроцедуры //СформироватьНорму()

//====================================================================== //--- УМК Сандомирский В.Ю, (22.05.15) 
Процедура ОткрытьНормуЗатрат(ФлагПросмотра)
	Если ПустоеЗначение(НормаОснование) <>  1 Тогда
		ТекНормаОснование = СоздатьОбъект("Документ");
		ТекНормаОснование.НайтиДокумент(НормаОснование);
		ОткрытьФорму(ТекНормаОснование.ТекущийДокумент(),,ФлагПросмотра); //--- 1 = просмотр 0 = редактирование
	КонецЕсли; 
КонецПроцедуры // ОткрытьНормуЗатрат

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

//======================================================================
Функция НеУчаствуетВФарше()
	Если ПустоеЗначение(ТМЦ) = 0 Тогда
		Возврат ТМЦ.НеУчитыватьВОбщемВесе;
	КонецЕсли;
	
	Возврат 0;
КонецФункции // НеУчаствуетВФарше()

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,	
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");

ДокументОснование.ВидыДляВыбора("ВыпускПродукции,Заказ,НормыЗатрат,ПриходнаяНакладнаяЗапасы,ПриходнаяНакладнаяГТД");