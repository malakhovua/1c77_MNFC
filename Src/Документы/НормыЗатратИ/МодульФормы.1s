Перем ИтогСумма; 
Перем Материал, Полуфабрикат, ВозвратныйОтход, СтатьяКалькуляции;
Перем СтарыйВидЭлемента;
Перем СтруктИзменений;

Перем  НашлиПовтор; //--- УМК Сандомирский В.Ю. (24.06.15)

Перем НачальнаяДатаДокумента;

// ===============================
Процедура ИзмПродукция()   
	Если Продукция.Выбран() = 1 Тогда
		Если (Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) и (Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат)
		и (Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга) Тогда
			Предупреждение("Можно добавлять ТМЦ с видом ""Продукция"", ""Полуфабрикат"" или ""Услуга""!");
			Продукция = 0;
		    Возврат;
		КонецЕсли;
		
		ЕдПродукции = Продукция.ЕдиницаПоУмолчанию;
		КоэффициентПродукции=Продукция.ЕдиницаПоУмолчанию.Коэффициент; 	
		
		Если КвоПродукции = 0 Тогда
			КвоПродукции = 1;
		КонецЕсли;             
	КонецЕсли;             
КонецПроцедуры
               
// ===============================
Процедура ИзмЕдин()
	Если ПустоеЗначение(ЕдПродукции) = 1 Тогда
		// пустая единица. ничего не делаем
		Возврат;
	КонецЕсли;                      
	КоэффициентПродукции = ЕдПродукции.Коэффициент;
КонецПроцедуры //ИзмЕдин()

//===============================
Функция УстДоступность()  
	Форма.Заголовок(глЗаголовок(Контекст,"Нормы затрат"));
	Если (Модифицированность() = 1) Или (Проведен() = 0) Тогда
		Форма.кПечать.Доступность(0);
	Иначе
		Форма.кПечать.Доступность(1);
	КонецЕсли;
	
	Если (ВидЭлемента = Материал) или (ВидЭлемента = Полуфабрикат) 
	или (ВидЭлемента = ВозвратныйОтход) Тогда
		НазначитьВид(Элемент,"ТМЦ");   
		Форма.Элемент.НеИзменятьВид(1);
		Форма.Кво.Доступность(1);      
		Форма.Ед.Доступность(1);      
		Форма.Сумма.Доступность(1);  
		Форма.БазоваяЗатрата.Доступность(0);
		Форма.Процент.Доступность(0);
	ИначеЕсли ВидЭлемента = СтатьяКалькуляции Тогда
		НазначитьВид(Элемент,"СтатьиКалькуляции");   
		Форма.Элемент.НеИзменятьВид(1);
		Форма.Кво.Доступность(0);
		Форма.Ед.Доступность(0);               
		Форма.БазоваяЗатрата.Доступность(1);
		
		Если БазоваяЗатрата.Выбран() = 1 Тогда
		    Форма.Процент.Доступность(1);
			Форма.Сумма.Доступность(0);
		Иначе                          
			Форма.Процент.Доступность(0);
			Форма.Сумма.Доступность(1);
		КонецЕсли;	                   
	КонецЕсли;  
	Возврат "";
КонецФункции

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "БазоваяЗатрата" Тогда
		Спис = СоздатьОбъект("СписокЗначений");
		тбЭлементы = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(тбЭлементы,"Элемент");
		//Все элементы не являющиеся статьями калькуляций, заменяем на их СтатьиКалькуляции
		тбЭлементы.ВыбратьСтроки();
		Пока тбЭлементы.ПолучитьСтроку()=1 Цикл
			Если (тбЭлементы.Элемент = Элемент) или (ПустоеЗНачение(тбЭлементы.Элемент) = 1)Тогда
				Продолжить;
			КонецЕсли;

			Если тбЭлементы.Элемент.Вид() <> "СтатьиКалькуляции"  Тогда
				глДобавитьЗначениеБезПовторения(Спис,тбЭлементы.Элемент.ВидЗатрат.СтатьяКалькуляции);
			Иначе
				глДобавитьЗначениеБезПовторения(Спис,тбЭлементы.Элемент);
			КонецЕсли;
		КонецЦикла;
				
		Выб = БазоваяЗатрата;
		Если Спис.ВыбратьЗначение(Выб,,,,2) = 1 Тогда
			БазоваяЗатрата = Выб;
		КонецЕсли;       
		ФлагСтандОбр = 0;	
		Спис = 0;
	ИначеЕсли Рекв = "ВидЭлемента" Тогда
		СтарыйВидЭлемента = ВидЭлемента;
	ИначеЕсли Рекв = "Элемент" Тогда
		Если ПустоеЗначение(ВидЭлемента) = 1 Тогда
			ФлагСтандОбр = 0;	
			Предупреждение("Сначала укажите вид элемента!");
			Активизировать("ВидЭлемента",1);
		КонецЕсли;
	КонецЕсли;    
КонецПроцедуры

//===============================
Процедура ОбновитьСуммы(спСтатьи)
	
	ФлагУдаления = 0;
	Если спСтатьи.Получить("УдалениеСтроки") = "УдалениеСтроки" Тогда
		спСтатьи.УдалитьВсе();
		ФлагУдаления = 1; 
	КонецЕсли;	
	НСтр = НомерСтроки;
	БазСтатья = ?(Элемент.Вид()="СтатьиКалькуляции",Элемент,Элемент.ВидЗатрат.СтатьяКалькуляции);
	Если ПустоеЗначение(БазСтатья) = 1  Тогда
		// Не заполнена статья калькуляции у вида затрат Элемента. Пересчет выполнять не нужно,
		// так как если БазоваяЗатрата в табличной части документа пустая, 
		// то Сумма в этой строке не вычисляется через процент, а вводится вручную.
		Возврат;
	КонецЕсли;
	Если спСтатьи.НайтиЗначение(БазСтатья)>0 Тогда
		глКомментарий("Обнаружена циклическая зависимость сумм !!! Пересчет сумм невозможен !",1);
		Возврат;
	КонецЕсли;
	спСтатьи.ДобавитьЗначение(БазСтатья);
	БазоваяЗатратаСумма = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Элемент)=1 Тогда
			Продолжить;
		КонецЕсли;
		Если ?(Элемент.Вид()="СтатьиКалькуляции",Элемент,Элемент.ВидЗатрат.СтатьяКалькуляции) = БазСтатья Тогда
			Если НЕ((ФлагУдаления = 1) И (НомерСтроки = НСтр)) Тогда	
				БазоваяЗатратаСумма = БазоваяЗатратаСумма + Сумма;
		 	КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если БазоваяЗатрата = БазСтатья Тогда
			Сумма = БазоваяЗатратаСумма * Процент / 100;
			ОбновитьСуммы(спСтатьи)
		КонецЕсли;
	КонецЦикла;
	ПолучитьСтрокуПоНомеру(НСтр);
КонецПроцедуры

//===============================
Процедура ИзмСумма()
    Если ВидЭлемента = ВозвратныйОтход Тогда
		Сумма = ?(Сумма < 0,Сумма,-Сумма);
	КонецЕсли;
	//Делаем пересчет сумм для которых эта затрата является базовой
	Если ПустоеЗначение(Элемент)=0 Тогда
		спСтатьи = СоздатьОбъект("СписокЗначений");
		ОбновитьСуммы(спСтатьи);
	КонецЕсли;
	Форма.Обновить();
КонецПроцедуры	  

//===============================
Процедура ИзмКво(НеСчитатьПродукцию = 0)
	Если Элемент.Вид() = "ТМЦ" Тогда
		Если Элемент <> Константа.Вода Тогда
		    Кво = Макс(0, Кво);
		КонецЕсли;
		Сумма = Элемент.УчетнаяЦена.Получить(ДатаДок) * Кво * Коэффициент;
		ИзмСумма();
		Если НеСчитатьПродукцию = 0 Тогда
			глРассчитатьКвоПродукции(Контекст);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//===============================
Процедура ИзмВидЭлемента()
	Если ВидЭлемента.Выбран() = 1 Тогда
		Если Форма.Кво.Доступность() = 0 Тогда
			Кво = 0;
		КонецЕсли;
		Если Форма.Сумма.Доступность() = 0 Тогда
			Сумма = 0;
		КонецЕсли;
		Если Форма.Процент.Доступность() = 0 Тогда
			Процент = 0;
		КонецЕсли;   
		
		Если ((ВидЭлемента <> СтарыйВидЭлемента) И (ПустоеЗначение(СтарыйВидЭлемента) = 0)) Тогда
			//При смене вида элемента с материала на возвратный отход и наоборот элемент не очищаем, т.к. остается тот же тип ТМЦ
			Если ((ВидЭлемента = Материал) И (СтарыйВидЭлемента = ВозвратныйОтход))
			 Или ((ВидЭлемента = ВозвратныйОтход) И (СтарыйВидЭлемента = Материал))	Тогда
			Иначе
				Элемент = 0;
				Ед = 0;
				Коэффициент = 0;
			КонецЕсли;
		КонецЕсли;
		ИзмСумма();
	КонецЕсли;
КонецПроцедуры	

// ===============================
Процедура ИзмЭлемент()   
    Если Элемент.Выбран() = 1 Тогда
		Если (ВидЭлемента = Материал) или (ВидЭлемента = ВозвратныйОтход) Тогда
			Если (Элемент.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга) или (Элемент.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)
			или (Элемент.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) или (Элемент.ВидТМЦ = Перечисление.ВидыТМЦ.Набор) Тогда
				Предупреждение("Нельзя выбирать ТМЦ с видом " + СокрЛП(Элемент.ВидТМЦ) +"!");
				Элемент = 0;
			КонецЕсли;
		ИначеЕсли ВидЭлемента = Полуфабрикат Тогда
			Если (Элемент.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат) и (Элемент.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) Тогда
				Элемент = 0;
				Предупреждение("Можно выбирать ТМЦ с видом ""Полуфабрикат"" или ""Продукция""!");
			ИначеЕсли Элемент = Продукция Тогда
				Элемент = 0;
				Предупреждение("Производимый полуфабрикат не может включать сам себя в качестве затраты!");
			КонецЕсли;
		КонецЕсли;

		Если (ВидЭлемента = Материал) или (ВидЭлемента = ВозвратныйОтход) или (ВидЭлемента = Полуфабрикат) Тогда
			Попытка
		        Если Элемент.ВидЗатрат.СтатьяКалькуляции.ДетализироватьДоМатериалов = 0 Тогда
					Предупреждение("Нельзя задавать в нормах ТМЦ с видом затрат """ + СокрЛП(Элемент.ВидЗатрат)+ """,
								   |поскольку он  относится к статье калькуляции, по которой не производится
								   |детализация до материалов!");
					Элемент = 0;
				КонецЕсли;
			Исключение КонецПопытки;
		КонецЕсли;
			
		Если Элемент.Вид() = "ТМЦ" Тогда
			Если Элемент <> Константа.Вода Тогда
			    Кво = Макс(0, Кво);
			КонецЕсли;
			
			ФаршОснова = ?(Элемент.ФаршОснова = 1, Да, Нет);			
			глУстановкаБазЕд(Контекст,Элемент,Элемент.ЕдиницаПоУмолчанию.Единица);
			Если Кво = 0 Тогда
				Кво = 1;
			КонецЕсли;
			ИзмКво();
		Иначе
			ФаршОснова = Нет;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

//===============================
Процедура ИзмПроцент()
	//Определяем Сумму на основании базовой затраты
	НСтр = 0;
	тбСумма = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(тбСумма,"Элемент,Сумма");   
	тбСумма.НоваяКолонка("СтатьяКалькуляции");
	тбСумма.ВыбратьСтроки();
	Пока тбСумма.ПолучитьСтроку()=1 Цикл
		Если ПустоеЗначение(тбСумма.Элемент)=0 Тогда
			Если тбСумма.Элемент.Вид()="СтатьиКалькуляции" Тогда
				тбСумма.СтатьяКалькуляции = тбСумма.Элемент;
			Иначе
				тбСумма.СтатьяКалькуляции = тбСумма.Элемент.ВидЗатрат.СтатьяКалькуляции;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	тбСумма.Свернуть("СтатьяКалькуляции","Сумма");
	тбСумма.НайтиЗначение(БазоваяЗатрата,НСтр,"СтатьяКалькуляции");
	Сумма = тбСумма.ПолучитьЗначение(НСтр, "Сумма") * Процент / 100;
	
	ИзмСумма();
КонецПроцедуры	

//===============================
Процедура ИзмБазоваяЗатрата()
	Если БазоваяЗатрата.Выбран() = 1  Тогда
		//Пересчитываем сумму, как процент от базовой затраты
		ИзмПроцент();
	КонецЕсли;
	//Если базовая затрата не заполнена - процент должен быть недоступен и равен 0
	Если Форма.Процент.Доступность() = 0 Тогда
		Процент = 0;
	КонецЕсли;
КонецПроцедуры	  
               
//===============================
Процедура ПриУдаленииСтроки ()
	спСтатьи = СоздатьОбъект("СписокЗначений");
	спСтатьи.ДобавитьЗначение("УдалениеСтроки","УдалениеСтроки");
	ОбновитьСуммы(спСтатьи);
	НомСтр = НомерСтроки;
	глРассчитатьКвоПродукции(Контекст, НомСтр);	
	Форма.Обновить();
КонецПроцедуры	

//===============================
Процедура ПриОткрытии()     
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
//	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
		Форма.кПодбор.Доступность(0);          
		Форма.кФирма.Доступность(0);               		
		Форма.кОчиститьЗаказ.Доступность(0);
		Форма.кКопироватьНормы.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
			спРасшифровка = Форма.Параметр;
			Продукция = спРасшифровка.Получить("Продукция");	
			ИзмПродукция();
			Заказ = спРасшифровка.Получить("Заказ");	
		Иначе
			Продукция = Форма.Параметр;
			ИзмПродукция();
		КонецЕсли;
	КонецЕсли;   
	
	ПриЗаписиПерепроводить(1);
	
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений,"Цена,Сумма"); //--- УМК Сандомирский В.Ю. (10.07.14) добавил колонки таблицы исключаемые из проверки
	
КонецПроцедуры
               
// ===============================
Процедура ВводНового(Копируем, ОбъектКопирования)
	Действует = 0;
	фДляЗаказа = 0; //--- УМК Сандомирский В.Ю. (25.06.15)
	Если Копируем = 1 Тогда
		ДокументОснование = ОбъектКопирования;
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	Действует = 1;
КонецПроцедуры   

// ===============================
Процедура Печать()  
	
	Перем ВыбЗначение; //--- УМК Сандомирский В.Ю, печать с примечаниями (03.06.14)
	ВариантыСкидок = СоздатьОбъект("СписокЗначений");
	ВариантыСкидок.ДобавитьЗначение(1,"&Печать обычная");
	ВариантыСкидок.ДобавитьЗначение(2,"Печать с заменой примечанием");
	
	Если ВариантыСкидок.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли; //... УМК Сандомирский В.Ю, печать с примечаниями (03.06.14)
	
	глРасшифровка = СоздатьОбъект("СписокЗначений");
	глФлагРасшифровки = 1;
	глОбновить = 0;
	Спис = СоздатьОбъект("СписокЗначений");
	ОткрытьФормуМодально("Обработка.ВводДанныхДляПечатиКалькуляции", Спис);
	Если Спис.Получить("ОК") <> 1 Тогда
		Возврат;
	КонецЕсли;
	глРасшифровка.Установить("Объект", "НормативныйСостав");
	глРасшифровка.Установить("ДатаОтчета", ДатаДок);
	глРасшифровка.Установить("Коэф", Спис.Получить("Коэф"));
	глРасшифровка.Установить("НормыЗатрат", ТекущийДокумент());
	глРасшифровка.Установить("КвоЭкзМат", Спис.Получить("КвоЭкзМат"));
	глРасшифровка.Установить("КвоЭкзСырья", Спис.Получить("КвоЭкзСырья"));
	
	Если Заказ.Выбран() = 1 Тогда
		глРасшифровка.Установить("ВыбЗаказ", Заказ);
	Иначе
		глРасшифровка.Установить("ВыбПродукция", Продукция);
	КонецЕсли;
	
	глРасшифровка.Установить("фВыводитьПрим",?(ВыбЗначение=1,0,1)); //--- УМК Сандомирский В.Ю, печать с примечаниями (03.06.14)
	
	ОткрытьФорму("Отчет.ОбработкаНорм#");
	глФлагРасшифровки = 0;
	глРасшифровка = 0;
	глОбновить = 0;
КонецПроцедуры     

Процедура СдвинутьСтроки(КвоСтрок)
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	Для Инд = КвоСтрок + 1 По ТЗ.КоличествоСтрок() Цикл
		ТЗ.СдвинутьСтроку(-КвоСтрок, Инд);
	КонецЦикла;
	ЗагрузитьТабличнуюЧасть(ТЗ);
КонецПроцедуры

// ===============================
Процедура КопироватьНормы()  
	СПМеню = СоздатьОбъект("СписокЗначений");
	СПМеню.ДобавитьЗначение(1, "Из документа");
	СПМеню.ДобавитьЗначение(2, "Из продукции с таким же фаршем");
	Зн = 1;
	Если СПМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Зн = 1 Тогда
		ОткрытьПодбор("Журнал.НормыЗатратИ","ФормаСписка",,0);
	Иначе
		Если Продукция.ТМЦСТакимЖеФаршем.Выбран() = 1 Тогда
			Если КоличествоСтрок() > 0 Тогда
				Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
					ТЗ = СоздатьОбъект("ТаблицаЗначений");
					ВыгрузитьТабличнуюЧасть(ТЗ);
					
					Инд = 1;
					Пока Инд <= ТЗ.КоличествоСтрок() Цикл
						ТЗ.ПолучитьСтрокуПоНомеру(Инд);
						Если ТЗ.Элемент.Вид() = "ТМЦ" Тогда
							Если ТЗ.Элемент.НеУчитыватьВОбщемВесе = 0 Тогда
								ТЗ.УдалитьСтроку(Инд);
							Иначе
								Инд = Инд + 1;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					
					ЗагрузитьТабличнуюЧасть(ТЗ);
				КонецЕсли;
			КонецЕсли;

			СписНЗ = СоздатьОбъект("СписокЗначений");
			ДокВ = СоздатьОбъект("Документ");
			ДокВ.УстановитьФильтр(1, 0);
			ДокВ.ВыбратьПоЗначению(,,"Продукция", Продукция.ТМЦСТакимЖеФаршем);
			Пока ДокВ.ПолучитьДокумент() = 1 Цикл
				Если ДокВ.Вид() = "НормыЗатратИ" Тогда
					Если ДокВ.Действует = 1 Тогда
						СписНЗ.ДобавитьЗначение(ДокВ.ТекущийДокумент(), Строка(ДокВ.ДатаДок) + " " + ?(ДокВ.фДляЗаказа = 1, " для зак. ", "")
						+ СокрЛП(ДокВ.Примечание));
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если СписНЗ.РазмерСписка() = 0 Тогда
				Сообщить("Не найдено действующих норм, взыты последние");
				НЗ = Продукция.ТМЦСТакимЖеФаршем.НормыЗатрат.Получить(ДатаДок);
			ИначеЕсли СписНЗ.РазмерСписка() = 1 Тогда
				НЗ = СписНЗ.ПолучитьЗначение(1);
			Иначе
				НЗ = "";
				Если СписНЗ.ВыбратьЗначение(НЗ) = 0 Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			КвоПродукции = НЗ.КвоПродукции;
			ПроцПотерь = НЗ.ПроцПотерь;
			КвоСтрок = КоличествоСтрок();
			
			НЗ.ВыбратьСтроки();
			Пока НЗ.ПолучитьСтроку() = 1 Цикл
				Если НЗ.Элемент.Вид() = "ТМЦ" Тогда
					Если НЗ.Элемент.НеУчитыватьВОбщемВесе = 0 Тогда
						НоваяСтрока();
						Для Инд = 1 По Метаданные.Документ("НормыЗатратИ").РеквизитТабличнойЧасти() Цикл
							ИмяАтр = Метаданные.Документ("НормыЗатратИ").РеквизитТабличнойЧасти(Инд).Идентификатор;
							УстановитьАтрибут(ИмяАтр, НЗ.ПолучитьАтрибут(ИмяАтр));
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ДокументОснование = НЗ;
			
			СдвинутьСтроки(КвоСтрок);
		Иначе
			Предупреждение("Для этой продукции не выбрана продукция с таким же фаршем");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Процедура ОбработкаВыбораЗначения(ВыбЗнач,ИдентЭлемДиалога,ФлагСтандОбр)
	Если ИдентЭлемДиалога = "Заказ" Тогда
		Если глПроверитьФирму(Контекст,ВыбЗнач) = 0 Тогда
			ФлагСтандОбр = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)
	Если ТипЗначенияСтр(Выб) = "Документ" Тогда
		ВыбДок = Выб;
		Если КоличествоСтрок() > 0  Тогда
			Отв = Вопрос("Удалить существующие строки?","Да+Нет+Отмена");
			Если Отв = "Да" Тогда
	        	УдалитьСтроки();
		    ИначеЕсли Отв = "Отмена" Тогда
		    	Возврат;
		    КонецЕсли;
		КонецЕсли;
		
		Если (ВыбДок.Продукция <> Продукция) и (ПустоеЗначение(Продукция) = 0)Тогда
			Если Вопрос("Продукция в выбранном документе отличается от продукции в текущем документе. Все равно выполнить копирование?",4) = 7 Тогда
	        	Возврат;
		    КонецЕсли;
		Иначе
			Если ПустоеЗначение(Продукция) = 1 Тогда
				Продукция = ВыбДок.Продукция;
				КвоПродукции = ВыбДок.КвоПродукции;
				ЕдПродукции = ВыбДок.ЕдПродукции;
				КоэффициентПродукции = ВыбДок.КоэффициентПродукции;			    
			КонецЕсли;
		КонецЕсли;
		
		КвоСтрок = КоличествоСтрок();
		ВыбДок.ВыбратьСтроки();
		Пока ВыбДок.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			ВидЭлемента = ВыбДок.ВидЭлемента;
			Элемент = ВыбДок.Элемент;
			Кво = ВыбДок.Кво;
			Ед = ВыбДок.Ед;
			Коэффициент = ВыбДок.Коэффициент;
			ФаршОснова = ВыбДок.ФаршОснова;
			БазоваяЗатрата = ВыбДок.БазоваяЗатрата;
			Процент = ВыбДок.Процент;
			Сумма = ВыбДок.Сумма;
			ИзмСумма();
		КонецЦикла;
		
		СдвинутьСтроки(КвоСтрок);
		
		глРассчитатьКвоПродукции(Контекст);
	ИначеЕсли ТипЗначенияСтр(Выб) = "ТаблицаЗначений" Тогда
		Выб.ВыбратьСтроки();
		Пока Выб.ПолучитьСтроку()<>0 Цикл
			ЭлементНайден = Нет;
			ВыбЭлемент = Выб.Элемент;    
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл    
				Если ВыбЭлемент = Элемент  Тогда  
					Кво = Кво + Выб.Количество;
					ИзмКво(1);
					ЭлементНайден = Да;
					Прервать;
				КонецЕсли;
			КонецЦикла;      
			
			Если ЭлементНайден = Нет Тогда
				Если (ВыбЭлемент.ВидТМЦ = Перечисление.ВидыТМЦ.Материал) Или (ВыбЭлемент.ВидТМЦ = Перечисление.ВидыТМЦ.Товар) Или (ВыбЭлемент.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
					НоваяСтрока();
					ВидЭлемента = Материал;
				ИначеЕсли ((ВыбЭлемент.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) Или (ВыбЭлемент.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция))
				И (ВыбЭлемент <> Продукция) Тогда
					НоваяСтрока();
				    ВидЭлемента = Полуфабрикат;
				Иначе
					Продолжить
				КонецЕсли;	
				
				ИзмВидЭлемента();
				Элемент = ВыбЭлемент;
				НСтр = НомерСтроки;
				ИзмЭлемент();
				ПолучитьСтрокуПоНомеру(НСтр);
				Кво = Выб.Количество;
				ИзмКво(1);
			КонецЕсли
		КонецЦикла;   
		глРассчитатьКвоПродукции(Контекст);
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ПриЗаписи()	
	//--- УМК Сандомирский В.Ю. (08.07.15) 
	Если (фДляЗаказа = 1) И (Действует = 0) Тогда 		
		Предупреждение("Флажек ""Для заказа"" может быть установлен только вместе с флажком ""Действует""");	
		СтатусВозврата(0);
		Возврат;		
	КонецЕсли;
	
	//	глПроверкаДатыДок(Контекст,"Запись");
	
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если ТекущийДокумент().Выбран() = 0 Тогда
		Если ПроцПотерь <> 0 Тогда
		    Предупреждение("Внесена норма термопотерь: " + Формат(ПроцПотерь, "Ч10.3") + " проверьте правильность внесения");
		КонецЕсли;
		Если Действует = 1 Тогда
			НачатьТранзакцию();
		    Док = СоздатьОбъект("Документ");
			Док.ВыбратьПоЗначению(,,"Продукция", Продукция);
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если Док.Вид() = "НормыЗатратИ" Тогда
					Если Док.Действует = 1 Тогда
					    Док.Действует = 0;
						Док.Записать();
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ЗафиксироватьТранзакцию();
		КонецЕсли;
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю. (26.06.15) добавил фДляЗаказа
	Если глЕстьИзменения(Контекст, СтруктИзменений, "Действует,Продукция,ЕдПродукции,ПроцПотерь,Примечание,фДляЗаказа,","Цена,Сумма") = 1 Тогда //--- УМК Сандомирский В.Ю. (10.07.14) добавил колонки таблицы исключаемые из проверки (06.10.14) добавил "Продукция"
		Автор = глПользователь;
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю. (23.06.15) проверка на такую же 
	Если фДляЗаказа = 1 Тогда 
		ТекстЗапроса = 
		"//{{ЗАПРОС(Сформировать)
		|Без итогов;
		|ТекПродукция = Документ.НормыЗатратИ.Продукция;
		|фДляЗаказа = Документ.НормыЗатратИ.фДляЗаказа;
		|Условие(ТекПродукция = Продукция);
		|Условие(фДляЗаказа = 1);
		|Группировка Документ;
		|"//}}ЗАПРОС
		;
		
		Запрос = СоздатьОбъект("Запрос");
		
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		    Возврат;
		КонецЕсли;
		
		ДокНорма = СоздатьОбъект("Документ.НормыЗатратИ");
		
		НашлиПовтор = 0;
		ТЗ_Проверка = СоздатьОбъект("ТаблицаЗначений");
		Запрос.Выгрузить(ТЗ_Проверка);
		ТЗ_Проверка.ВыбратьСтроки();
		Пока ТЗ_Проверка.ПолучитьСтроку() = 1 Цикл
			Если ТЗ_Проверка.Документ <> ТекущийДокумент() Тогда				
				ДокНорма.НайтиДокумент(ТЗ_Проверка.Документ);
				ДокНорма.фДляЗаказа = "";
				ДокНорма.Записать();				
				Сообщить("Очищен флажек ""Для заказа"" в --- " + ДокНорма);					
			КонецЕсли;
		КонецЦикла;									
	КонецЕсли;		
КонецПроцедуры

// ===============================
Процедура кПровести()		
	//--- УМК Сандомирский В.Ю. (08.07.15) 
	Если (фДляЗаказа = 1) И (Действует = 0) Тогда 		
		Предупреждение("Флажек ""Для заказа"" может быть установлен только вместе с флажком ""Действует""");	
		СтатусВозврата(0);
		Возврат;		
	КонецЕсли;
	
	ПриЗаписи();
	Если НашлиПовтор <> 1 Тогда //--- УМК Сандомирский В.Ю. (24.06.15)	
		Если Проведен() = 0 Тогда
			Записать();
			Если Вопрос("Провести документ?",4)=6 Тогда
				Провести(,Форма.Параметр);
			КонецЕсли;
		Иначе
			Провести(,Форма.Параметр);
		КонецЕсли;		
	Иначе //--- УМК Сандомирский В.Ю. (24.06.15)
		СтатусВозврата(0);
		Возврат;
	КонецЕсли; //... УМК Сандомирский В.Ю. (24.06.15)
	
КонецПроцедуры //кПровести()

// ===============================
Процедура кОк()	
	//--- УМК Сандомирский В.Ю. (08.07.15) 
	Если (фДляЗаказа = 1) И (Действует = 0) Тогда	
		Предупреждение("Флажек ""Для заказа"" может быть установлен только вместе с флажком ""Действует""");	
		СтатусВозврата(0);
		Возврат;		
	КонецЕсли;
	
	ПриЗаписи();
	Если НашлиПовтор <> 1 Тогда //--- УМК Сандомирский В.Ю. (24.06.15)
		кПровести();
		Форма.Закрыть();
	Иначе
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;  //... УМК Сандомирский В.Ю. (24.06.15)	
КонецПроцедуры //кОк

Процедура РассчитатьЦены()
	СПМеню = СоздатьОбъект("СписокЗначений");
	СПМеню.ДобавитьЗначение(1, "По дату документа");
	СПМеню.ДобавитьЗначение(2, "По произвольную дату");
	СПМеню.ДобавитьЗначение(3, "Из текущих остатков");
	СПМеню.ДобавитьЗначение(4, "Из прихода за период");
	СПМеню.ДобавитьЗначение(5, "Из расхода за период");
	СПМеню.ДобавитьЗначение(6, "Док-т установка цен на сырьё");
	
	Зн = 1;
	Если СПМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	ТолькоНулевые = 0;
	Если Вопрос("Только нулевые?", "Да+Нет") = "Да" Тогда
	    ТолькоНулевые = 1;
	КонецЕсли;
	
	СписТМЦ = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписТМЦ,"Элемент");
	глЗаменитьТМЦ(списТМЦ, ДатаДок);

	Если Зн < 4 Тогда		
		РегПарт = СоздатьОбъект("Регистр.Партии");
		СписТМЦ = СоздатьОбъект("СписокЗначений");
		РегПарт.УстановитьЗначениеФильтра("ТМЦ", СписТМЦ, 2);		
		ДатаРасчета = ДатаДок;
	
		Если Зн = 1 Тогда
		    ДатаРасчета = Мин(ДатаДок, ПолучитьДатуТА());
			Если ДатаРасчета < ПолучитьДатуТА() Тогда
				РегПарт.ВременныйРасчет(1);
				РассчитатьРегистрыПо(ДатаРасчета);
			КонецЕсли;
		ИначеЕсли Зн = 2 Тогда
			ДатаРасчета = ТекущаяДата();
			Если ВвестиДату(ДатаРасчета,"Введите дату расчёта") = 0 Тогда
			    Возврат;
			КонецЕсли;
			ДатаРасчета = Мин(ДатаРасчета, ПолучитьДатуТА());
			Если ДатаРасчета < ПолучитьДатуТА() Тогда
				РегПарт.ВременныйРасчет(1);
				РассчитатьРегистрыПо(ДатаРасчета);
			КонецЕсли;
		Иначе
			ДатаРасчета = ПолучитьТА();
		КонецЕсли;
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ((ТолькоНулевые = 1) и (Цена <> 0)) ИЛИ (ФиксироватьЦену = Да) Тогда
			    Продолжить;
			КонецЕсли;
			Если Элемент.Вид() = "ТМЦ" Тогда
				ТМЦ = ?(Элемент.ТМЦДляСписания.Получить(ДатаРасчета).Выбран() = 1, Элемент.ТМЦДляСписания.Получить(ДатаРасчета), Элемент);
				ОстКво = РегПарт.СводныйИтог(Фирма, Элемент.Счет, , ТМЦ,,,,"ОстатокТовара");
				ОстСум = РегПарт.СводныйИтог(Фирма, Элемент.Счет, , ТМЦ,,,,"Стоимость");
				Цена = ?(ОстКво = 0, 0, ОстСум/ОстКво);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли (Зн = 5) ИЛИ (Зн = 4) Тогда	    
		ДНач = НачМесяца(ТекущаяДата());
		ДКон = КонМесяца(ТекущаяДата());
		СписСт = СоздатьОбъект("СписокЗначений");
		СписСт.ДобавитьЗначение(ПеремещениеВРозницу);
		СписСт.ДобавитьЗначение(ПеремещениеИзРозницы);
		СписСт.ДобавитьЗначение(ПеремещениеМеждуСкладами);
		СписСт.ДобавитьЗначение(ПередачаТарыВозвратнойПокупателю);
		СписСт.ДобавитьЗначение(ВозвратТарыВозвратнойОтПокупателя);
		СписСт.ДобавитьЗначение(ПолучениеТарыВозвратнойОтПоставщика);
		СписСт.ДобавитьЗначение(ВозвратТарыВозвратнойПоставщику);
		СписСт.ДобавитьЗначение(ПередачаТарыЗалоговойПокупателю);
		СписСт.ДобавитьЗначение(ВозвратТарыЗалоговойОтПокупателя);
		СписСт.ДобавитьЗначение(ПолучениеТарыЗалоговойОтПоставщика);
		СписСт.ДобавитьЗначение(ВозвратТарыЗалоговойПоставщику);		
		
		Если ВвестиПериод(ДНач, ДКон) = 0 Тогда
		    Возврат;
		КонецЕсли;
		
		ДКон = Мин(ДКон, ПолучитьДатуТА());
		ДНач = Мин(ДНач, ДКон);
		ТекстЗ = 
		"//{{ЗАПРОС(Сформировать)
		|Период с ДНач по ДКон;
		|ТМЦ = Регистр.Партии.ТМЦ;
		|ОстатокТовара = Регистр.Партии.ОстатокТовара;
		|Стоимость = Регистр.Партии.Стоимость;
		|КодОперации = Регистр.Партии.КодОперации;
		|Функция ОстПриход = Приход(ОстатокТовара);
		|Функция ОстРасход = Расход(ОстатокТовара);
		|Функция СтПриход = Приход(Стоимость);
		|Функция СтРасход = Расход(Стоимость);
		|Группировка ТМЦ без упорядочивания без групп;
		|Условие(ТМЦ в списТМЦ);
		|Условие (НЕ (КодОперации в СписСт));
		|"//}}ЗАПРОС
		;
		
		Запрос = СоздатьОбъект("Запрос");
		
		Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		    Возврат;
		КонецЕсли;
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ((ТолькоНулевые = 1) и (Цена <> 0)) ИЛИ (ФиксироватьЦену = Да) Тогда
			    Продолжить;
			КонецЕсли;
			Если Элемент.Вид() = "ТМЦ" Тогда
				ТМЦ = ?(Элемент.ТМЦДляСписания.Получить(ДатаДок).Выбран() = 1, Элемент.ТМЦДляСписания.Получить(ДатаДок), Элемент);
				Запрос.ВНачалоВыборки();
				ОстКво = 0;
				Если Запрос.Получить(ТМЦ) = 1 Тогда
					ОстКво = ?(Зн = 4, Запрос.ОстПриход, Запрос.ОстРасход);
					ОстСум = ?(Зн = 4, Запрос.СтПриход, Запрос.СтРасход);
				КонецЕсли;				
				Цена = ?(ОстКво = 0, 0, ОстСум/ОстКво);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Док = СоздатьОбъект("Документ.УстановкаЦенСырья");
		Если Док.Выбрать("Выберите документ", "ФормаСписка") = 0 Тогда
		    Возврат;
		КонецЕсли;

		ТЗ = СоздатьОбъект("ТаблицаЗначений");		
		Док.ВыгрузитьТабличнуюЧасть(ТЗ);		
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ((ТолькоНулевые = 1) и (Цена <> 0)) ИЛИ (ФиксироватьЦену = Да) Тогда
			    Продолжить;
			КонецЕсли;
			Если Элемент.Вид() = "ТМЦ" Тогда
				ТМЦ = ?(Элемент.ТМЦДляСписания.Получить(ДатаДок).Выбран() = 1, Элемент.ТМЦДляСписания.Получить(ДатаДок), Элемент);
				Стр = 0;
				Если ТЗ.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
				    Цена = ТЗ.ПолучитьЗначение(Стр, "Цена");
				КонецЕсли;				
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

Процедура ПечатьКалькуляции()	
	Перем ВыбЗначение; //--- УМК Сандомирский В.Ю, печать с примечаниями (03.06.14)
	
	ВариантыСкидок = СоздатьОбъект("СписокЗначений");
	ВариантыСкидок.ДобавитьЗначение(1,"&Печать обычная");
	ВариантыСкидок.ДобавитьЗначение(2,"Печать с заменой примечанием");
	
	Если ВариантыСкидок.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли; //... УМК Сандомирский В.Ю, печать с примечаниями (03.06.14)

	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	Таб.ВывестиСекцию("Шапка");
	
	ПроцентПотерь = Продукция.ПроцПотерь.Получить(РабочаяДата()); //--- УМК Сандомирский В.Ю, процент потерь на рабочую дату (01.07.14)
	
	ВвестиЧисло(ПроцентПотерь, "Введите процент потерь", 10, 3);

	
	НормаРент = Продукция.НормаРент.Получить(ТекущаяДата());	
	//КвоПродукцииП = КвоПродукции - КвоПродукции*(ПроцПотерь/100);
	КвоПродукцииП = КвоПродукции - КвоПродукции*(ПроцентПотерь/100);
	
	ИтСтоимость = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Элемент.Вид() = "ТМЦ" Тогда
			НормаКво = Окр(Кво, 4);
			Стоимость = Цена * НормаКво;
			ИтСтоимость = ИтСтоимость + Стоимость;
			
			Если ВыбЗначение = 1 Тогда //--- УМК Сандомирский В.Ю, печать с примечаниями (03.06.14)
				ПечНаименование = СокрЛП(Элемент.ПолнНаименование);
			Иначе	
				ПечНаименование = ?(ПустоеЗначение(ПримечаниеСтр)=1,СокрЛП(Элемент.ПолнНаименование),СокрЛП(ПримечаниеСтр));
			КонецЕсли; //... УМК Сандомирский В.Ю, печать с примечаниями (03.06.14)
			
			Таб.ВывестиСекцию("Строка");		    
		КонецЕсли;
	КонецЦикла;
	
	Отпускная = Окр(глВернутьЦену(Продукция, Константа.ОсновнаяКатегорияЦен, ТекущаяДата(), Гривня), 2);
	
	Если Продукция.УровеньПередела.Получить(ДатаДок) = 0 Тогда		 //--- УМК Сандомирский В.Ю, 07.04.14 (В документе "Норма затрат" в печатной форме калькуляция если уровень передела неравен нулю то без ОПЗ)
		//ОПЗ = Константа.ОПЗ.Получить(ТекущаяДата());
		ОПЗ = Продукция.ОПР.Получить(ТекущаяДата()); // + umk
	Иначе
		ОПЗ = 0;
	КонецЕсли; //--- УМК Сандомирский В.Ю, 07.04.14 
		
	ЦенаКГГП = Окр(ИтСтоимость / КвоПродукцииП, 2);
	СтоимостьКГ = ЦенаКГГП + ОПЗ;
	ТекСтоимостьКГ = ?(СтоимостьКГ=0,1,СтоимостьКГ);
	СтУпак = глПолучитьСтУпак(Продукция, , ДатаДок);
	ПечРентабельность = (Отпускная/(ТекСтоимостьКГ + СтУпак))*100;	
	Таб.ВывестиСекцию("Дно");	
	
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Калькуляция");
КонецПроцедуры

Процедура ВводНаОсновании(ДокОсн)
	глЗаполнитьШапкуНаОсн(Контекст, ДокОсн);
	Если (ДокОсн.Вид() = "НормыЗатратИ") ИЛИ  (ДокОсн.Вид() = "НормыЗатрат") Тогда
		Для Инд = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл
			УстановитьАтрибут(Метаданные.ОбщийРеквизитДокумента(Инд).Идентификатор, ДокОсн.ПолучитьАтрибут(Метаданные.ОбщийРеквизитДокумента(Инд).Идентификатор));
		КонецЦикла;
		Для Инд = 1 По Метаданные.Документ("НормыЗатратИ").РеквизитШапки() Цикл
			УстановитьАтрибут(Метаданные.Документ("НормыЗатратИ").РеквизитШапки(Инд).Идентификатор, ДокОсн.ПолучитьАтрибут(Метаданные.Документ("НормыЗатратИ").РеквизитШапки(Инд).Идентификатор));
		КонецЦикла;
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			Для Инд = 1 По Метаданные.Документ("НормыЗатратИ").РеквизитТабличнойЧасти() Цикл
				УстановитьАтрибут(Метаданные.Документ("НормыЗатратИ").РеквизитТабличнойЧасти(Инд).Идентификатор, ДокОсн.ПолучитьАтрибут(Метаданные.Документ("НормыЗатратИ").РеквизитТабличнойЧасти(Инд).Идентификатор));
			КонецЦикла;
		КонецЦикла;		
		ДокументОснование = ДокОсн;
		
	ИначеЕсли ДокОсн.Вид() = "СписаниеТМЦВПроизводство" Тогда  				//--- Сандомирский В.Ю. ввод на основании списания (07.04.14)
		
		ДокументОснование = ДокОсн;
		
		Продукция = ДокОсн.ПродукцияШ;
		//ПроцПотерь = Продукция.НормыЗатрат.Получить(ТекущаяДата()).ПроцПотерь;
		ПроцПотерь = Продукция.ПроцПотерь.Получить(ТекущаяДата());
		ИзмПродукция();
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			Если ДокОсн.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат Тогда
				ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат;
			Иначе
			    ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Материал;
			КонецЕсли;
			Элемент = ДокОсн.ТМЦ;
			Кво = ДокОсн.Кво / ДокОсн.КвоКутеров;
			Коэффициент = ДокОсн.Коэффициент;
			Ед = ДокОсн.Ед;
			ИзмЭлемент();
		КонецЦикла;
		КвоПродукции = ДокОсн.КвоФарша / ДокОсн.КвоКутеров;		
	
	Иначе
		Продукция = ДокОсн.ПродукцияШ;
		//ПроцПотерь = Продукция.НормыЗатрат.Получить(ТекущаяДата()).ПроцПотерь;
		ПроцПотерь = Продукция.ПроцПотерь.Получить(ТекущаяДата());
		ИзмПродукция();
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			Если ДокОсн.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат Тогда
				ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат;
			Иначе
			    ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Материал;
			КонецЕсли;
			Элемент = ДокОсн.ТМЦ;
			Кво = ДокОсн.Кво / ДокОсн.КвоКутеров;
			Коэффициент = ДокОсн.Коэффициент;
			Ед = ДокОсн.Ед;
			ИзмЭлемент();
		КонецЦикла;
		КвоПродукции = ДокОсн.КвоФарша / ДокОсн.КвоКутеров;		
	КонецЕсли;
КонецПроцедуры

Функция Раскраска()
	Возврат  "(BRUSH_S[" + Строка(100*255*100) + "])";
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю, (22.05.14)
Процедура ОчиститьЦены()
	Отв = Вопрос("Удалить все цены?","Да+Нет");
	Если Отв = "Да" Тогда
    	ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Цена = "";
		КонецЦикла;
    КонецЕсли;
КонецПроцедуры // ОчиститьЦены

//====================================================================== //--- УМК Сандомирский В.Ю, (18.06.14)
Функция ВернутьПродукциюОснования()
	Если ПустоеЗначение(ДокументОснование) <> 1 Тогда
		Возврат ДокументОснование.Продукция;
	КонецЕсли;
КонецФункции // ВернутьПродукциюОснования()

//====================================================================== //--- УМК Сандомирский В.Ю, (30.04.15) вес кутера для производственного заказника
Функция ПолучитьВесКутера()
	
	Если фДляЗаказа = 1 Тогда		
		ВесКутераДляЗаказа = КвоПродукции - (КвоПродукции*Продукция.ПроцПотерь.Получить(РабочаяДата())/100);
		Возврат "Вес кутера :" + Окр(ВесКутераДляЗаказа,0);
	КонецЕсли;
	
КонецФункции // ПолучитьВесКутера()

//======================================================================
Функция ВернутьСТакимЖеФаршем()
	Если Продукция.Выбран() = 1 Тогда
		Если Продукция.ТМЦСТакимЖеФаршем.Выбран() = 1 Тогда
			Возврат "С таким же фаршем: " + Строка(Продукция.ТМЦСТакимЖеФаршем);
		КонецЕсли;		
	КонецЕсли;
	
	Возврат "";
КонецФункции // ВернутьСТакимЖеФаршем()

Материал = Перечисление.ВидыЭлементовСоставаПродукции.Материал;
Полуфабрикат = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат;
ВозвратныйОтход = Перечисление.ВидыЭлементовСоставаПродукции.ВозвратныйОтход;
СтатьяКалькуляции = Перечисление.ВидыЭлементовСоставаПродукции.СтатьяКалькуляции;               

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ДвиженияДокумента,
	|СтруктураПодчиненности,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
Сервис.ИспользоватьПланРаскраски(1);
