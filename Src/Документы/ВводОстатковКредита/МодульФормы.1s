Перем Рег;
Перем СтарыйДоговор;
Перем СтарыйКлиент;
Перем СписокДействий;  // Список действий по документу
Перем СтараяДата;
Перем НачальнаяДатаДокумента; // Для контроля даты документа

// ===============================
// "служебные" функции и процедуры 


// ===============================
Процедура ЗаголовокФормы() 
	Форма.Заголовок(глЗаголовок(Контекст,"Ввод остатков по кредиту"));
КонецПроцедуры //ЗаголовокФормы

// ===============================
Функция УстДоступность()
	ЗаголовокФормы();
	фВидимостьКредит = ?(ВидТорговли = Перечисление.ВидыТорговли.Кредит,1,0);
	Форма.тДатаОплаты.Видимость(фВидимостьКредит);
	Форма.тГлубина.Видимость(фВидимостьКредит);
	Форма.Глубина.Видимость(фВидимостьКредит);
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
		Форма.ФлагиОтгрузки.Доступность(0);
	Иначе
		Форма.ФлагиОтгрузки.Доступность(1);
	КонецЕсли;	
	          
	Если Валюта = Гривня Тогда
		Форма.тСуммаСНДС.Доступность(0);
		Форма.СуммаСНДС.Доступность(0);
	Иначе
		Форма.тСуммаСНДС.Доступность(1);
		Форма.СуммаСНДС.Доступность(1);
	КонецЕсли;	
	
	Если ВидНДС = НеНДС Тогда
		Форма.ЕстьНалоговаяНакладная.Видимость(0);
	Иначе	
		Форма.ЕстьНалоговаяНакладная.Видимость(1);
	КонецЕсли;	
	
	Возврат "";
КонецФункции  // УстДоступность

// ===============================
Процедура ИзмФлагОтгрузки()
    ФлагОтгрузки=2 - ФлагиОтгрузки.ТекущаяСтрока();
КонецПроцедуры

// ===============================
Процедура Взаиморасчеты()
	Если ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель Тогда
		глПоказатьДолг(Контекст, Контрагент, "Продажа");
	ИначеЕсли ВидКонтрагента = Перечисление.ВидыКлиентов.Поставщик Тогда
		глПоказатьДолг(Контекст, Контрагент, "Закупка");
	Иначе
		Предупреждение("Не выбран вид клиента.");
		Активизировать("ВидКонтрагента");
	КонецЕсли;
КонецПроцедуры     

// ===============================
Процедура ИзмСуммаСНДС()
	Ст = ВидНДС.Ставка.Получить(ДатаДок);
	НДС = СуммаСНДС * Ст / (1 + Ст);
КонецПроцедуры	     

// ===============================
Процедура ИзмВидНДС()
	ИзмСуммаСНДС();
КонецПроцедуры

// ===============================
Процедура ИзмСуммаВал()
	СуммаСНДС = глПересчет(СуммаВал,Валюта,Гривня,Курс,ДатаДок);
	ИзмСуммаСНДС();
КонецПроцедуры

// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;	
	Если ВидКонтрагента=Перечисление.ВидыКлиентов.Покупатель Тогда
		Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
			ДатаОплаты=ДатаДок + Глубина;	
		Иначе	
			ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
		КонецЕсли;	
	ИначеЕсли ВидКонтрагента=Перечисление.ВидыКлиентов.Поставщик Тогда
		Если Контрагент.ГлубинаКредитаПоставщикаВКалендарныхДнях	= 1 Тогда
			ДатаОплаты=ДатаДок + Глубина;	
		Иначе	
			ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
		КонецЕсли;	
	КонецЕсли;		
КонецПроцедуры

// ===============================
Процедура УстГлубина()
	Если (ВидТорговли = Перечисление.ВидыТорговли.Кредит) И (Контрагент.Выбран() = 1) Тогда
		Если ВидКонтрагента=Перечисление.ВидыКлиентов.Покупатель Тогда
			Если НЕ(Контрагент.СуммаКредита.Получить(ДатаДок)=0) Тогда
				Глубина=Контрагент.Глубина.Получить(ДатаДок);
			Иначе                                                
				Глубина=0;
			КонецЕсли;
		ИначеЕсли ВидКонтрагента=Перечисление.ВидыКлиентов.Поставщик Тогда
			Если НЕ(Контрагент.СуммаКредитаПоставщика.Получить(ДатаДок)=0) Тогда
				Если Глубина <> Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) тогда
					Глубина=Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
				КонецЕсли;	
			Иначе
				Глубина=0;               
			КонецЕсли;
		КонецЕсли;
	Иначе
		Глубина=0;               
	КонецЕсли;
	ИзмГлубина();
КонецПроцедуры

// ===============================
Процедура ИзмДата()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	УстГлубина();
КонецПроцедуры

// ===============================
Процедура ИзмСчетКонтрагента()
	Если ПустоеЗначение(СчетКонтрагента) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбранный счет не является счетом учета взаиморасчетов!",1,,"!");
		СчетКонтрагента = 0;  
	ИначеЕсли (СчетКонтрагента.Валютный=1) И (Валюта=Гривня) Тогда
		глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
		СчетКонтрагента = 0;                                                                      
	ИначеЕсли (СчетКонтрагента.Валютный<>1) И (Валюта<>Гривня) Тогда
		глКомментарий("Нельзя выбирать невалютный счет, если валюта документа "+Валюта+" !",1,,"!");
		СчетКонтрагента = 0;                                                                      
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	// Теперь запомним промежуточные переменные
	Валюта_Прежн=Валюта;
	Курс_Прежн=Курс;
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	ИзмСчетКонтрагента();
	ИзмСуммаВал();
КонецПроцедуры
                     
// ===============================
Процедура ИзмДоговор()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			Если Валюта <> Валюта_Прежн Тогда
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
				КонецЕсли;
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;				
			ВидНДС = Договор.ВидНДС;
			ИзмСуммаСНДС();
		КонецЕсли;
	КонецЕсли;    
КонецПроцедуры 

// ===============================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда
		Если Договор.Выбран()=1 Тогда
			Если Контрагент <> Договор.Контрагент Тогда
			    Договор = 0;
			КонецЕсли;
		КонецЕсли;	
		// подставляем БазДоговор в зависимоти от константы
		Если (Константа.ПодставлятьОсновнойДоговор = Да) 
		И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
		И (ПустоеЗначение(Договор)=1) Тогда
			Если Фирма = Контрагент.БазДоговор.Фирма Тогда
				Договор = Контрагент.БазДоговор;
				ИзмДоговор();
			КонецЕсли;
		КонецЕсли;
		Если Договор.Выбран() = 1 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
				Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
					ВидТорговли = Договор.ВидТорговли;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	                      		
		Если (ПустоеЗначение(Контрагент.ВидТорговли) = 0)
		И (ПустоеЗначение(ВидТорговли) = 1) Тогда   
			Если Контрагент.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
			    ВидТорговли = Контрагент.ВидТорговли;      
			Иначе	
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
			ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;
		Если ПустоеЗначение(ДокументОснование) = 0 Тогда
			Если ДокументОснование.Контрагент <> Контрагент Тогда
				ДокументОснование = 0;
			КонецЕсли;	
		КонецЕсли;	
		УстГлубина();		
	Иначе
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		Договор = 0;
	КонецЕсли;                                        
КонецПроцедуры

// ===============================
Процедура ИзмВидКонтрагента()
	Если ПустоеЗначение(ВидКонтрагента) = 1 Тогда
		// не задан вид клиента. ничего не делаем
		Возврат;
	Иначе
		Если ВидКонтрагента <> Перечисление.ВидыКлиентов.Поставщик Тогда
		    // если Контрагент не поставщик, то кредитный документ не нужен
			СчетКонтрагента = ?(Валюта=Гривня,СчетПоКоду("361"),СчетПоКоду("362"));
		Иначе
			СчетКонтрагента = ?(Валюта=Гривня,СчетПоКоду("631"),СчетПоКоду("632"));
		КонецЕсли;
	КонецЕсли;  
	ИзмСуммаСНДС();
	УстГлубина();	
КонецПроцедуры           
                   
// ===============================
Процедура ИзмВидТорговли()
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
		ФлагОтгрузки = 1;
		ФлагиОтгрузки.ТекущаяСтрока(2 - ФлагОтгрузки);
	КонецЕсли;	
КонецПроцедуры           

// ===============================
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в документе
	СтарДоговор = Договор;	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	     

// ===============================
Процедура УстанОстатка();
	Если Контрагент.Выбран()=1 Тогда
		ВремРегистры=СоздатьОбъект("Регистры");
		Если ВидКонтрагента=Перечисление.ВидыКлиентов.Покупатель Тогда
			ИмяРегистрУчета="ВзаиморасчетыПокупателей";
			Рег=ВремРегистры.ВзаиморасчетыПокупателей;
		ИначеЕсли ВидКонтрагента=Перечисление.ВидыКлиентов.Поставщик Тогда
			ИмяРегистрУчета="ВзаиморасчетыПоставщиков";
			Рег=ВремРегистры.ВзаиморасчетыПоставщиков;
		Иначе
			Предупреждение ("Не выбран вид клиента!");
			Возврат;
		КонецЕсли;
		
		Если Выбран()>0 Тогда // документ не новый, а существующий
			Если (СравнитьТА()<0)  Тогда
		 	// если итоги не актуальны, то Долги по Кредиту берем из временногно расчета Регистра
				Рег.ВременныйРасчет();
				Рег.УстановитьФильтр(Фирма,Контрагент,Договор,,);
				ВремРегистры.РассчитатьРегистрыПо(ТекущийДокумент(),"Контрагент");
			// здесь показываем Долги по Кредиту именно на момент (после) проводки Документа
			КонецЕсли;
		Иначе // документ новый
			Дат=ПолучитьДатуТА();
		 	Если Дат>ДатаДок Тогда
		 	// если итоги не актуальны, то остатки квоты берем из временногно расчета Регистра
				Рег.ВременныйРасчет();
				Рег.УстановитьФильтр(Фирма,Контрагент,Договор,,);
				ВремРегистры.РассчитатьРегистрыНа(ДатаДок+1,"Контрагент");
			КонецЕсли;
		КонецЕсли;
		СуммаСНДСОст=Рег.СводныйОстаток(Фирма,Контрагент,Договор,ВидНДС,,,"ДолгОсн");
		СуммаСНДС=глПересчет(СуммаСНДСОст,Гривня,ДатаДок,Валюта,Курс,Дата_Курса);
	Иначе
		Предупреждение ("Не выбран Контрагент!");
		Возврат;
	КонецЕсли;
	Рег=0;
КонецПроцедуры
                                                             
// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Перем ВыбСчет;
	Если Рекв="ВидНДС" Тогда
	    глВыбратьНДС(Контекст,Рекв,1);
		Флаг = 0;                   
		ИзмСуммаСНДС();
	ИначеЕсли Рекв = "КДокумент" Тогда
		спРасшифровка = СоздатьОбъект("СписокЗначений");
		спРасшифровка.ДобавитьЗначение(Контрагент, "Контрагент");
		спРасшифровка.ДобавитьЗначение("СчетаКонтрагентов", "ГрафаОтбора");
		спРасшифровка.ДобавитьЗначение(1, "фРазрешатьПустогоКонтрагента");
		ОткрытьФормуМодально("Журнал.ПолныйЖурнал.ДляВыбораДоговоровИСчетов",спРасшифровка,);
		Документ = спРасшифровка.Получить("Документ");
		Если ТипЗначенияСтр(Документ) = "Документ" Тогда
		    КДокумент = Документ;
		КонецЕсли;
		Флаг = 0;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВводНового(Скопирован)

	Если Скопирован=1 Тогда	//копирование документа
		глУстановитьНомер(Контекст, 1);
		Возврат;
	КонецЕсли;
	глЗаполнитьШапку(Контекст);
	ДатаДок=РабочаяДата();
	Валюта=Гривня;
	Основание="Начальный ввод остатков по торговому кредиту";
	Дата_Курса=ДатаДок;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	
	ВидКонтрагента=Перечисление.ВидыКлиентов.Покупатель; 
	СчетКонтрагента = СчетПоКоду("361");	
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	
	Контрагент=глВосстановитьЗначение(,"ОсновнойПокупатель");
	ИзмКонтрагент();
	Если ПустоеЗначение(ВидТорговли)=1 Тогда
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
	КонецЕсли;	
	Если ФлагОтгрузки = 0 Тогда
		ФлагОтгрузки = 1;
	КонецЕсли;
	ФлагиОтгрузки.ТекущаяСтрока(2 - ФлагОтгрузки); 
	
	УстГлубина();	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
		Форма.кФирма.Доступность(0);               		
		Форма.кОсн.Доступность(0);
		Форма.кВалюта.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	ФлагиОтгрузки.ТекущаяСтрока(ФлагиОтгрузки.НайтиЗначение(ФлагОтгрузки));	
	СтараяДата = ДатаДок;                                                                                                           	
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Автор = глПользователь;
	Если ФлагОтгрузки = 1 Тогда
		ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	Иначе
		ОтборСчетаКонтрагент = 0;
	КонецЕсли;
КонецПроцедуры

Процедура Рассчитать()
	Если Контрагент.Выбран() = 0 Тогда
		Предупреждение("Нужно выбрать контрагента!");
		Возврат;
	КонецЕсли;
	Если ВидНДС.Выбран() = 0 Тогда
		Предупреждение("Нужно выбрать вид НДС!");
		Возврат;
	КонецЕсли;
	
	ТЗД = СоздатьОбъект("ТаблицаЗначений");
	Рег = СоздатьОбъект("Регистр.Взаиморасчеты" + ?(ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель, "Покупателей","Поставщиков"));
	Рег.УстановитьЗначениеФильтра("Фирма", Фирма, 1);
	Рег.УстановитьЗначениеФильтра("Контрагент", Контрагент, 1);
	Рег.УстановитьЗначениеФильтра("СтавкаНДС", ВидНДС, 1);
	Рег.УстановитьЗначениеФильтра("Валюта", Валюта, 1);
	Если СравнитьТА() = -1 Тогда
	    Рег.ВременныйРасчет(1);
		РассчитатьРегистрыНа(ТекущийДокумент());
	ИначеЕсли (СравнитьТА() = -2) и (ДатаДок < ПолучитьДатуТА()) Тогда
	    Рег.ВременныйРасчет(1);
		РассчитатьРегистрыПо(ДатаДок);
	КонецЕсли;
	
	Рег.ВыгрузитьИтоги(ТЗД);
	Если ТЗД.КоличествоСтрок() = 0 Тогда
	    Предупреждение("Нет долгов");
		Возврат;
	КонецЕсли;
	
	ОткрытьПодбор("Обработка.ВыборДолгаИзТЗ", "ФормаСписка", ТЗД);
КонецПроцедуры

Процедура ОбработкаПодбора(ТЗД, КФормы)
	Если ТипЗначенияСтр(ТЗД) = "СписокЗначений" Тогда
	    Договор = ТЗД.Получить("Договор");
		ДокументОснование = ТЗД.Получить("Счет");
		КДокумент = ТЗД.Получить("КредДокумент");
		СуммаВал = ТЗД.Получить("Долг");
		Если СуммаВал < 0 Тогда
		    СуммаВал = -СуммаВал;
			Если ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель Тогда
				ФлагиОтгрузки.ТекущаяСтрока(1);
				ФлагОтгрузки = 1;
			Иначе
				ФлагиОтгрузки.ТекущаяСтрока(2);
				ФлагОтгрузки = 0;
			КонецЕсли;
		Иначе
			Если ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель Тогда
				ФлагиОтгрузки.ТекущаяСтрока(2);
				ФлагОтгрузки = 0;
			Иначе
				ФлагиОтгрузки.ТекущаяСтрока(1);
				ФлагОтгрузки = 1;
			КонецЕсли;			
		КонецЕсли;
		ИзмСуммаВал();
		Если ПустоеЗначение(ДокументОснование) = 1 Тогда
			ПустойСчет = 1;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
// При входе в Форму запомним промежуточные переменные
ФлагиОтгрузки.ДобавитьЗначение(1,"Отгрузка товара");
ФлагиОтгрузки.ДобавитьЗначение(0,"Оплата");

// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ОткрытьВЖурнале,
	|Подчиненные");
