Перем СписокДействий;
Перем Фрм;
Перем Инфо;
Перем НачальнаяДатаДокумента;
Перем V7;
Перем ЕстьДатаЗапрета;
                                                   
// ===============================
Процедура ОбновитьИнфо()
	Перем ТипИнфо;
	ТипыИнфо = СоздатьОбъект("СписокЗначений");
	ТипыИнфо.ДобавитьЗначение(1,"Приход/расход по табличной части");
	ТипыИнфо.ДобавитьЗначение(2,"Остаток на начало дня");
	ТипыИнфо.ДобавитьЗначение(3,"Остаток на конец дня");
	ТипыИнфо.ВыбратьЗначение(ТипИнфо,"Выберите тип информации",2,0,1);
	
	ОстНач = 0; ОстКон = 0;
	Приход = 0; Расход = 0;
	
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ИспользоватьСубконто(ВидыСубконто.НашиДенежныеСчета, РСчет, 2);
	Ит.ВыполнитьЗапрос(ДатаДок,ДатаДок,СчетУчета,,,,,"СВ");
	
	Если Валюта = Гривня Тогда
		ОстНач = Ит.СНД();
		ОстКон = Ит.СКД();
	Иначе
		Если Ит.ПолучитьВалюту(,Валюта) = 1 Тогда
			ОстНач = Ит.СНД("В");
			ОстКон = Ит.СКД("В");
		КонецЕсли;
	КонецЕсли;
	
	Если ТипИнфо = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
				Приход = Приход + СуммаСНДС;
			Иначе
				Расход = Расход + СуммаСНДС; 
			КонецЕсли; 
		КонецЦикла;	         
		Инфо = "Итого:  приход "+Формат(Приход,"Ч12.2")+"
		|             расход "+Формат(Расход,"Ч12.2");
	ИначеЕсли ТипИнфо = 2 Тогда
		Инфо = "Остаток на начало дня "+Формат(ОстНач,"Ч12.2");
	ИначеЕсли ТипИнфо = 3 Тогда
		Инфо = "Остаток на конец дня "+Формат(ОстКон,"Ч12.2");
	КонецЕсли;
КонецПроцедуры

// ===============================
// Назначение:
//		Проверяет соответствие контрагента, договора и Документа-основания
Функция ПроверкаСоответствия(Контрагент,Договор,ДокументОснование)
	фСоответствует=1;       
	Если глПроверитьСчетВзаиморасчетов(Счет) = 0 Тогда
		Возврат фСоответствует;
	КонецЕсли;	
	
	Если (ПустоеЗначение(Договор)=0) и (ПустоеЗначение(Контрагент)=0) Тогда
	    Если Договор.Контрагент <> Контрагент Тогда
	        фСоответствует=0;
		КонецЕсли;           
	КонецЕсли;
	
	Если ПустоеЗначение(ДокументОснование)=0 Тогда
		Если ПустоеЗначение(Контрагент)=0 Тогда
			Если глЕстьРеквизитШапки("Контрагент",ДокументОснование.Вид()) = Да Тогда
				Если ДокументОснование.Контрагент <> Контрагент Тогда
					фСоответствует=0;
				КонецЕсли;
			КонецЕсли;			
			Если (фСоответствует=0)
			И (ДокументОснование.Вид()= "ПриходнаяНакладнаяГТД") Тогда
				// для ГТД необходимо проверить соотв. перевозчику и таможне
				Если ДокументОснование.Перевозчик = Контрагент Тогда
					фСоответствует=1;
				КонецЕсли;
				Если ДокументОснование.Таможня = Контрагент Тогда
					фСоответствует=1;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ПустоеЗначение(Договор)=0 Тогда
			Если глЕстьРеквизитШапки("Договор",ДокументОснование.Вид()) = Да Тогда
				Если ДокументОснование.Договор <> Договор Тогда
					фСоответствует=0;
				КонецЕсли;
				Если (фСоответствует=0)
				И (ДокументОснование.Вид()= "ПриходнаяНакладнаяГТД") Тогда	    
					// для ГТД необходимо проверить соотв. перевозчику и таможне
					Если ДокументОснование.ДоговорПеревозки <> Договор Тогда
						фСоответствует=1;
					КонецЕсли;           				
					Если ДокументОснование.ДоговорТаможни <> Договор Тогда
						фСоответствует=1;
					КонецЕсли;           				
				КонецЕсли;				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат фСоответствует;
КонецФункции //ПроверкаСоответствия

// ===============================
Процедура ИзмСуммаСНДС()
	НДС = СуммаСНДС*ВидНДС.Ставка.Получить(ДатаДок)/(1+ВидНДС.Ставка.Получить(ДатаДок));
КонецПроцедуры

// ===============================
Процедура ИзмВидНДС()
	ИзмСуммаСНДС();
КонецПроцедуры

// ===============================
Процедура ИзмСчет()
	Для Инд = 1 По 3 Цикл
		НазначитьТип("Субконто"+Инд,Счет.ВидСубконто(Инд));
	КонецЦикла;
	
	Если (ПустоеЗначение(Субконто2) = 1) И (Счет.КоличествоСубконто() > 1) Тогда
		Если Счет.ВидСубконто(2) = ВидыСубконто.МесяцНачисленияЗП Тогда
	    	Субконто2 = НачМесяца(ДобавитьМесяц(ДатаДок,-1));
		КонецЕсли;
	КонецЕсли;
	
	Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
		Если ПустоеЗначение(ВидНДС) = 1 Тогда
		    ВидНДС = глВосстановитьЗначение(Контекст,"БазНДС",ОсновнаяСтавкаНДС);
		КонецЕсли;
	Иначе
		ВидНДС = неНДС;
	КонецЕсли;
	ИзмВидНДС();
КонецПроцедуры

// ===============================
Функция УстДоступность()
	Форма.Фирма.Видимость(0);
	Форма.Заголовок(глЗаголовок(Контекст,"Банковская выписка"));
	                             
	Если СчетУчета.Выбран() = 1 Тогда
		фСчетПоставщиковПокупателей = глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код));
		
		// НДС и первое событие
		Форма.ВидНДС.Доступность(Мин(1 - ЕстьДатаЗапрета, фСчетПоставщиковПокупателей));
		Форма.НДС.Доступность(Мин(1 - ЕстьДатаЗапрета, фСчетПоставщиковПокупателей));
		
		// торговые реквизиты для взаиморасчетов
		Если (фСчетПоставщиковПокупателей = 1) Тогда
			Если (РежимОплаты = Перечисление.РежимыОплаты.Автораспределение) 
				или (РежимОплаты = Перечисление.РежимыОплаты.АвтораспределениеПриоритетныйДоговор) 
				или (РежимОплаты = Перечисление.РежимыОплаты.ПоДоговору) Тогда
				Форма.ДокументОснование.Доступность(0);
				Если ПустоеЗначение(ДокументОснование)=0 Тогда
					ДокументОснование = 0;
				КонецЕсли;
			Иначе    
				Форма.ДокументОснование.Доступность(Мин(1 - ЕстьДатаЗапрета, 1));
			КонецЕсли;
			
			Если (РежимОплаты = Перечисление.РежимыОплаты.Автораспределение) Тогда
				Форма.Субконто2.Доступность(0);
				Если ПустоеЗначение(Субконто2)=0 Тогда
					Субконто2 = 0;
				КонецЕсли;
			Иначе
				Форма.Субконто2.Доступность(1);
			КонецЕсли;
			
			Форма.РежимОплаты.Доступность(1 - ЕстьДатаЗапрета);
			Если ПустоеЗначение(Субконто2) = 0 Тогда
			    Если Субконто2.СпособФормированияНалоговыхДокументов = 2 Тогда
			        Форма.РежимОплаты.Доступность(0);
			    КонецЕсли;
			КонецЕсли;
		Иначе
			Форма.ДокументОснование.Доступность(0);
			Форма.РежимОплаты.Доступность(0);
		КонецЕсли;
		
		// курсовая разница
		Форма.ОперационнаяКР.Видимость(СчетУчета.Валютный);
		Форма.ОперационнаяКР.Доступность(Мин(1-ЕстьДатаЗапрета, СчетУчета.Валютный));
	Иначе
		Форма.ВидНДС.Доступность(0);
		Форма.НДС.Доступность(0);
		
		Форма.ДокументОснование.Доступность(0);
		Форма.РежимОплаты.Доступность(0);
		
		Форма.ОперационнаяКР.Видимость(0);
	КонецЕсли;
	
	Возврат "";
КонецФункции

// ===============================
Процедура ИзмРСчет()
	Если Рсчет.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли;
	Валюта = РСчет.Валюта;
	СчетУчета = РСчет.СчетУчета;
	Если СчетУчета.Выбран() = 0 Тогда
	    СчетУчета = СчетПоКоду(?(Валюта = Гривня, "311", "312"));
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ИзмФирма()
	СтараяФирма = глВосстановитьЗначение(Контекст,"СтараяФирма");
	Если СтараяФирма <> Фирма Тогда
		// фирма изменилась
		Рез = Вопрос("Изменить расчетный счет?","Да+Нет");
		Если Рез = "Да" Тогда
			РСчет = Фирма.РС;
			ИзмРСчет();
		ИначеЕсли ПустоеЗначение(СтараяФирма) = 0 Тогда
			// восстановим фирму, которая была выбрана раньше
			Фирма = СтараяФирма;
			глУстановитьНомер(Контекст);
			Возврат;
		КонецЕсли;
		Если КоличествоСтрок() > 0 Тогда
			Рез = Вопрос("Табличная часть будет очищена!","Да+Нет");
			Если Рез = "Да" Тогда
				УдалитьСтроки();
			ИначеЕсли ПустоеЗначение(СтараяФирма) = 0 Тогда
				// восстановим фирму, которая была выбрана раньше
				Фирма = СтараяФирма;
				глУстановитьНомер(Контекст);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

// ===============================
Процедура ИзмСубконто1()
	Если ПроверкаСоответствия(Субконто1,Субконто2,)=0 Тогда
		Предупреждение("Договор не соответствует контрагенту");
		Субконто2 = 0;
	КонецЕсли;
	Если ПроверкаСоответствия(Субконто1,Субконто2,ДокументОснование)=0 Тогда
		Предупреждение("Документ основание не соответствует контрагенту");
		ДокументОснование = 0;
	КонецЕсли;
	Если ПустоеЗначение(Субконто1) = 0 Тогда
		Если (глВосстановитьЗначение(,"ПодставлятьОсновнойДоговор")=Да)
		И (Субконто1.Вид() = "Контрагенты") Тогда
			Субконто2 = Субконто1.БазДоговор;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмСубконто2()
	Если ПустоеЗначение(Субконто2) = 1 Тогда
	    Если Счет.ВидСубконто(2) = ВидыСубконто.МесяцНачисленияЗП Тогда
	        Субконто2 = НачМесяца(ДатаДок);
		КонецЕсли;
	ИначеЕсли (Счет.ВидСубконто(2) = ВидыСубконто.МесяцНачисленияЗП) и (НачМесяца(Субконто2) <> Субконто2) Тогда
		Субконто2 = НачМесяца(Субконто2);
	ИначеЕсли Счет.ВидСубконто(2) = ВидыСубконто.Договора Тогда
		// проверки для заказа либо договора
		
		// валюта расчетного счета и валюта заказа должны быть одинаковые
		Если глВалютаДок(Субконто2) <> РСчет.Валюта Тогда
			глКомментарий("Валюта расчетного счета и валюта договора должны совпадать!",1,,"!");
			Субконто2 = 0;
			Возврат;
		КонецЕсли;
		
		// если выписываются итоговые налоговые накладные
		Если Субконто2.СпособФормированияНалоговыхДокументов=2 Тогда
		    РежимОплаты = Перечисление.РежимыОплаты.ПоДоговору;
		КонецЕсли;
		
		Если (СубконтоВалДохРасх = Константа.НиДоходНиРасход) или (ПустоеЗначение(СубконтоВалДохРасх) = 1) Тогда
		    СубконтоВалДохРасх = Субконто2.СубконтоВалДохРасх;
		КонецЕсли;
	КонецЕсли; // тип второго субконто
КонецПроцедуры

// ===============================
Процедура ИзмРежимОплаты()
	Если (РежимОплаты = Перечисление.РежимыОплаты.Автораспределение) 
		или (РежимОплаты = Перечисление.РежимыОплаты.АвтораспределениеПриоритетныйДоговор) Тогда
		ДокументОснование = 0;			
	КонецЕсли;

	Если (РежимОплаты = Перечисление.РежимыОплаты.Автораспределение) Тогда
		Субконто2 = 0;
	КонецЕсли;
КонецПроцедуры //ИзмРежимОплаты

// ===============================
Процедура ИзмВидДвижения()
	Вал = ?(РСчет.Выбран() = 1, Валюта, Гривня);
   	Если ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
   		Если ПустоеЗначение(Счет) = 1 Тогда
		    Счет = СчетПоКоду(?(Вал = Гривня,"361","362"));
			ИзмСчет();
   		КонецЕсли;
		НазначитьТип("ВидПриходаРасхода","Перечисление.ВидыПриходаДенег");
		ВидПриходаРасхода = ?(ПустоеЗначение(ВидПриходаРасхода) = 1,Перечисление.ВидыПриходаДенег.ВыручкаОтРеализации,ВидПриходаРасхода);
		Если ПустоеЗначение(СубконтоВалДохРасх) = 1 Тогда
		    СубконтоВалДохРасх = глВосстановитьЗначение(,"БазВаловыйДоход");
		КонецЕсли;
	ИначеЕсли ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание Тогда
		Если ПустоеЗначение(Счет) = 1 Тогда
		    Счет = СчетПоКоду(?(Вал = Гривня,"631","632"));
			ИзмСчет();
		КонецЕсли;
		НазначитьТип("ВидПриходаРасхода","Перечисление.ВидыРасходаДенег");
		ВидПриходаРасхода = ?(ПустоеЗначение(ВидПриходаРасхода) = 1,Перечисление.ВидыРасходаДенег.НаВедениеХозДеятельности,ВидПриходаРасхода);
		Если ПустоеЗначение(СубконтоВалДохРасх) = 1 Тогда
		    СубконтоВалДохРасх = глВосстановитьЗначение(,"БазВаловыйРасход");
		КонецЕсли;
	КонецЕсли;
	Если ПустоеЗначение(ВидОплаты) = 1 Тогда
	    ВидОплаты = Перечисление.ВидыОплаты.Оплата;
	КонецЕсли;
КонецПроцедуры

// ===============================
Функция ПолучитьСуммуНедоплаты(ЗнакОплаты,Док)
	Возврат глДолгКонтрагента(Контекст, ЗнакОплаты, Фирма, Док.Контрагент, Док.Договор ,Док);
КонецФункции

// ===============================
Функция ИспользованнаяСуммаВТекущем(Знач Док)
	Перем СуммаВколонке, ДляСравнения;
	
	СуммаВколонке = 0;	
	// запомним номер текущей строки
	ТекущийНомерСтроки = НомерСтроки;

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если НомерСтроки <> ТекущийНомерСтроки Тогда
			Если (ДокументОснование = Док.ТекущийДокумент()) Тогда
			    СуммаВколонке = СуммаВколонке + СуммаСНДС;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	ПолучитьСтрокуПоНомеру(ТекущийНомерСтроки);

	Возврат СуммаВколонке;
КонецФункции

// определяет договор по документу-основанию и контрагенту
// ===============================
Функция ОпределитьДоговор(Док)
	Перем текДоговор;
	текДоговор = 0;
	Если ПустоеЗначение(Док) = 1 Тогда
		Возврат текДоговор;		
	КонецЕсли;
	Если Док.Вид() = "ПриходнаяНакладнаяГТД" Тогда
		Если Субконто1 = Док.Контрагент Тогда
			// подставим договор поставщика
			текДоговор = Док.Договор;
		ИначеЕсли Субконто1 = Док.Перевозчик Тогда
			// подствим договор перевозки
			текДоговор = Док.ДоговорПеревозки;
		ИначеЕсли Субконто1 = Док.Таможня Тогда
			// подставим договор с таможней
			текДоговор = Док.ДоговорТаможни;
	    КонецЕсли;
	Иначе
		Если глЕстьРеквизитШапки("Договор",Док.Вид()) = Да Тогда
			текДоговор = Док.Договор;						
		КонецЕсли;	
	КонецЕсли;
	Возврат текДоговор;
КонецФункции

// ===============================
Процедура ИзмДокументОснование(Док, РучнойВвод = 0)
	Перем ВидДок;

	Если ПустоеЗначение(Док) = 1 Тогда
	    Возврат;
	КонецЕсли;
	 
	ВидДок = Док.Вид();

	// получим валюту основания
	Если ВидДок = "ПриходнаяНакладнаяГТД" Тогда
		// для ГТД валюта может быть разной: валюта документа, валюта перевозки и гривня (для таможни)
		Если РучнойВвод = 0 Тогда
			// заполнение всегде происходит по поставщику, следовательно берем валюту документа
			ВалютаОснования = Док.Валюта;                                                      
		Иначе
			// при ручном изменении определим валюту по контаргенту (Субконто1)
			Если ((ПустоеЗначение(Субконто1)=1) // контрагент не указан
			ИЛИ (Субконто1 = Док.Контрагент)) Тогда // или это поставщик ...
				// .. возьмем валюту поставщика 
				ВалютаОснования = Док.Валюта;
			ИначеЕсли Субконто1 = Док.Перевозчик Тогда
				// это перевозчик				
				ВалютаОснования = Док.ВалютаПеревозки;
			Иначе
				// это таможня                   
				ВалютаОснования = Гривня;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Попытка
			ВалютаОснования = Док.Валюта;
		Исключение
			ВалютаОснования = Гривня;
		КонецПопытки;
	КонецЕсли;
	Если ВалютаОснования <> РСчет.Валюта Тогда
	    Предупреждение("Валюта документа-основания не соответствует валюте расчетного счета.");
		Возврат;
	КонецЕсли;	
	Если РучнойВвод = 0 Тогда
		НоваяСтрока();
		НазначитьТип("Субконто1","Справочник.Контрагенты");
		НазначитьТип("Субконто2","Документ");
		Субконто1 = Док.Контрагент;
		Субконто2 = ОпределитьДоговор(Док);
		ОперационнаяКР = Да;
	КонецЕсли;
	
	ДокументОснование = глПолучитьДокументВзаиморасчетов(Док);
	
	СубконтоВалДохРасх = Константа.БазВаловыйДоход;
	Если (ВидДок = "РасходнаяНакладная") или (ВидДок = "ЛиквидацияНеоборАктивов") или (ВидДок = "ОказаниеУслуг") Тогда
		ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
		ВидОплаты = Перечисление.ВидыОплаты.Оплата;
		СубконтоВалДохРасх = Док.СубконтоВалДох;
		Сумма = ПолучитьСуммуНедоплаты(-1,ДокументОснование) - ИспользованнаяСуммаВТекущем(ДокументОснование);
	ИначеЕсли ВидДок = "ВозвратнаяНакладная" Тогда
		ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
		ВидОплаты = Перечисление.ВидыОплаты.Возврат;
		СубконтоВалДохРасх = Док.СубконтоВалДох;
		Сумма = ПолучитьСуммуНедоплаты(-1,ДокументОснование) - ИспользованнаяСуммаВТекущем(ДокументОснование);
	ИначеЕсли ВидДок = "Счет" Тогда
		ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
		ВидОплаты = Перечисление.ВидыОплаты.Оплата;
		Сумма = Док.Итог("СуммаСНДС") - ИспользованнаяСуммаВТекущем(ДокументОснование);
	ИначеЕсли ВидДок = "СчетВходящий" Тогда
		ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
		ВидОплаты = Перечисление.ВидыОплаты.Оплата;
		СубконтоВалДохРасх = Константа.БазВаловыйРасход;
		Сумма = Док.Итог("СуммаСНДС") - ИспользованнаяСуммаВТекущем(ДокументОснование);
	ИначеЕсли (Найти(ВидДок,"ПриходнаяНакладная") > 0) или (Найти(ВидДок,"УслугиСтороннихОрганизаций") > 0) Тогда
		ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
		ВидОплаты = Перечисление.ВидыОплаты.Оплата;
		СубконтоВалДохРасх = Док.СубконтоВалРасх;
		Сумма = ПолучитьСуммуНедоплаты(+1,ДокументОснование) - ИспользованнаяСуммаВТекущем(ДокументОснование);
		Если ВидДок = "ПриходнаяНакладнаяГТД" Тогда
			ВидНДС = неНДС;
		КонецЕсли;	
	ИначеЕсли ВидДок = "ВозвратПоставщику" Тогда
		ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
		ВидОплаты = Перечисление.ВидыОплаты.Возврат;
		СубконтоВалДохРасх = Док.СубконтоВалИзд;
		Сумма = ПолучитьСуммуНедоплаты(+1,ДокументОснование) - ИспользованнаяСуммаВТекущем(ДокументОснование);
	ИначеЕсли ВидДок = "ВводОстатковКредита" Тогда
		Если Док.ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель Тогда
			Если Док.ФлагОтгрузки = 1 Тогда
				ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
				ВидОплаты = Перечисление.ВидыОплаты.Оплата;
				СубконтоВалДохРасх = Константа.БазВаловыйДоход;
			Иначе
				ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
				ВидОплаты = Перечисление.ВидыОплаты.Возврат;
				СубконтоВалДохРасх = Константа.БазВаловыйДоход;
			КонецЕсли;
			Сумма = ПолучитьСуммуНедоплаты(-1,ДокументОснование) - ИспользованнаяСуммаВТекущем(ДокументОснование);
		Иначе // поставщик
			Если Док.ФлагОтгрузки = 1 Тогда
				ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
				ВидОплаты = Перечисление.ВидыОплаты.Оплата;
				СубконтоВалДохРасх = Константа.БазВаловыйРасход;
			Иначе
				ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
				ВидОплаты = Перечисление.ВидыОплаты.Возврат;
				СубконтоВалДохРасх = Константа.БазВаловыйДоход;
			КонецЕсли;
			Сумма = ПолучитьСуммуНедоплаты(+1,ДокументОснование) - ИспользованнаяСуммаВТекущем(ДокументОснование);
		КонецЕсли;
	Иначе
		ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
		ВидОплаты = Перечисление.ВидыОплаты.Оплата;
		СубконтоВалДохРасх = Константа.БазВаловыйДоход;
		Сумма = 0;
	КонецЕсли;
	
	Если ПустоеЗначение(СуммаСНДС)=1 Тогда
		СуммаСНДС = Макс(Сумма, 0);
		ИзмСуммаСНДС();
	КонецЕсли;
	
	ИзмВидДвижения();
	// установим режим оплаты по умолчанию
	РежимОплаты = глВосстановитьЗначение(,"БазРежимОплаты");
	Если ПустоеЗначение(РежимОплаты)=1 Тогда
		РежимОплаты = Перечисление.РежимыОплаты.ПоСчету;
	КонецЕсли;
	ИзмРежимОплаты();
КонецПроцедуры //ИзмДокументОснование

// ===============================
Процедура ИзмДатаДок()
КонецПроцедуры //ИзмДатаДок

// ===============================
Процедура ВводНового(Признак)
	Если Признак = 1 Тогда
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	РСчет = Фирма.РС;
	ИзмРСчет();
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	Автор = глПользователь;
	//глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	// заполним реквизит ДокументДоговор, чтобы выписка была подчинена договор
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1  Цикл
		ДокументДоговор = ?(ТипЗначенияСтр(Субконто2) = "Документ", Субконто2, 0);
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	НачальнаяДатаДокумента = ДатаДок;
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		//Форма.кОК.Доступность(0);
		//Форма.кПровести.Доступность(0);
		Форма.ТолькоПросмотр(0);
		ЕстьДатаЗапрета = 1;
		глУстановитьДоступностьПолейШапки(Контекст, "НомерДок,ДатаДок,РСчет,СчетУчета,Примечание", 0);
		глУстДоступностьКолонокТЧ(Контекст, 0);
//		Форма.кДействия.Доступность(0);
		Форма.кЗаполнить.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кИмпортИзБух.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;	
	Форма.РСчет.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Счет.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.СчетУчета.ВыборГруппы(0);
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	ОперационнаяКР = Да;
	РежимОплаты = глВосстановитьЗначение(,"БазРежимОплаты");
	Если ПустоеЗначение(РежимОплаты)=1 Тогда
		РежимОплаты = Перечисление.РежимыОплаты.ПоСчету;
	КонецЕсли;
	ИзмРежимОплаты();
КонецПроцедуры //

// ===============================
Процедура Подбор()
	// подбираем по наиболее распространенным торговым документам или контрагентам
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("По документам", "По документам");
	Меню.ДобавитьЗначение("По контрагентам", "По контрагентам");
	выбВидДок = "";
	Если Меню.ВыбратьЗначение(выбВидДок,,,,1) = 1 Тогда
		Если выбВидДок ="По контрагентам" Тогда
			ОткрытьПодбор("Справочник.Контрагенты");
		Иначе
			Фрм = СоздатьОбъект("СписокЗначений");
			Фрм.ДобавитьЗначение(1,"РазрешитьОтбор");
			Фрм.ДобавитьЗначение(1,"фРазрешатьПустогоКонтрагента");
			Фрм.ДобавитьЗначение("СчетаКонтрагентов","ГрафаОтбора");			
			ОткрытьПодбор("Журнал.ПолныйЖурнал","ДляВыбораДоговоровИСчетов",Фрм,1);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)
	Если ТипЗначенияСтр(Выб) = "Справочник" Тогда
		// подбор контрагентов
		выбКонтрагент = Выб;
		Сум = 1;
		Если ВвестиЧисло(Сум,"Сумма поступления(+), выплаты(-)",15,2) = 0 Тогда
			Возврат;
		КонецЕсли;
		Если Сум <> 0 Тогда
			НоваяСтрока();
			Если Сум > 0 Тогда
				ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
				СуммаСНДС = Сум;
			Иначе
				ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
				СуммаСНДС = -Сум;
			КонецЕсли;

			РежимОплаты = глВосстановитьЗначение(,"БазРежимОплаты");
			ИзмВидДвижения();
			Субконто1 = выбКонтрагент;
			Если ПустоеЗначение(Субконто1) = 0 Тогда
				Если (глВосстановитьЗначение(,"ПодставлятьОсновнойДоговор")=Да)
				И (Субконто1.Вид() = "Контрагенты") Тогда
					Субконто2 = Субконто1.БазДоговор;
				КонецЕсли;
			КонецЕсли;
			ОперационнаяКР = Да;
		КонецЕсли;
	ИначеЕсли ТипЗначенияСтр(Выб) = "Документ" Тогда
		ИзмДокументОснование(Выб,0);
	КонецЕсли;
	ИзмСубконто2();
	АктивизироватьСтроку();
КонецПроцедуры   

// ===============================
Процедура ЗаполнитьПоПлатежкам()
	Перем Способ, ДатаС, ДатаПо;
	СпособыЗаполнения = СоздатьОбъект("СписокЗначений");
	СпособыЗаполнения.ДобавитьЗначение(1,"За дату документа");
	СпособыЗаполнения.ДобавитьЗначение(2,"За произвольный период");
    СпособыЗаполнения.ВыбратьЗначение(Способ,"Выберите способ заполнения",2,0,1);
	Если Способ = 1 Тогда
		ДатаС = ДатаДок;
		ДатаПо = ДатаДок;
	ИначеЕсли Способ = 2 Тогда
		Если ВвестиПериод(ДатаС,ДатаПо) = 0 Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	Если КоличествоСтрок()>0 Тогда
		Рез = Вопрос("Удалить строки?","Да+Нет+Отмена");
	    Если Рез = "Отмена" Тогда
	    	Возврат;
	    ИначеЕсли Рез = "Да" Тогда
	    	УдалитьСтроки();
	    КонецЕсли;
	КонецЕсли;
	Док = СоздатьОбъект("Документ.ПлатежноеПоручение");
	Док.ВыбратьДокументы(ДатаС,ДатаПо);
	Пока Док.ПолучитьДокумент()=1 Цикл
		Если Док.Фирма <> Фирма Тогда
		    Продолжить;
		КонецЕсли;
		Если Док.РСчет <> РСчет Тогда
		    Продолжить;
		КонецЕсли;
		НоваяСтрока();
		ПриРедактированииНовойСтроки();
		НомерДокумента = Док.Номер;
		ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
		ИзмВидДвижения();
		Счет = Док.Счет;
		ИзмСчет();
		СубконтоВалДохРасх = Константа.БазВаловыйРасход;
		Если Док.ОплатаНалога = 1 Тогда
			ВидНДС = неНДС;
			Субконто1 = Док.ВидНалога;
		Иначе
			Если ПустоеЗначение(Док.ДокументОснование) = 0 Тогда
				// ВидНДС возьмем из ДокументаОснования, если он есть
		        ВидНДС = Док.ДокументОснование.ВидНДС;
			ИначеЕсли глЕстьРеквизитШапки("Договор",Док.Вид()) = Да Тогда
				Если ПустоеЗначение(Док.Договор) = 0 Тогда
					// если ДокументаОснования нет - тогда из Договора
			        ВидНДС = Док.Договор.ВидНДС;
				КонецЕсли;
			КонецЕсли;
			
			Субконто1 = Док.Контрагент;
			Субконто2 = Док.Договор;
			ИзмСубконто2();
			ДокументОснование = Док.ДокументОснование;
			ИзмДокументОснование(ДокументОснование,1);
			Если (ПустоеЗначение(СубконтоВалДохРасх)=1) и (ПустоеЗначение(Субконто2) = 0) Тогда
				СубконтоВалДохРасх = Субконто2.СубконтоВалДохРасх;
			КонецЕсли;
		КонецЕсли;
		СуммаСНДС = Док.СуммаСНДС;
		НДС = Док.НДС;
		Содержание = СтрЗаменить(Док.Содержание,РазделительСтрок," ");
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да,"_Укр","");
	Таб.ИсходнаяТаблица("Таблица"+СуффиксТаблицы);

	Таб.ПовторятьПриПечатиСтроки(6,6);
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном = 1;
	Приход = 0; Расход = 0;
	Пока ПолучитьСтроку() = 1 Цикл
		Если ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
			При = СуммаСНДС; Рас = 0;
			Приход = Приход + При;
		Иначе 	         
			Рас = СуммаСНДС; При = 0;
		    Расход = Расход + Рас;
		КонецЕсли;
		Клиент = ?(ПустоеЗначение(Субконто1) = 0, Субконто1.Наименование, ?(Константа.ФормыНаУкраинском = Да, Счет.НаименованиеУкр, Счет.Наименование));
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
	Таб.Опции(0,0,0,0);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Банковская выписка","");
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
		глВыбратьНДС(Контекст,,1);
		ФлагСтандОбр = 0;
	ИначеЕсли (Рекв = "Счет") и (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
		СписокКорректныхПроводок.Установить("Счет", СчетПоКоду("31"));
		Корресп = ?(ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление, 1, 0);
		СписокКорректныхПроводок.Установить("Корреспонденция", Корресп);
		глЗначениеОтбора = СписокКорректныхПроводок;
	ИначеЕсли Рекв = "Субконто2" Тогда
		Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
			Фрм = СоздатьОбъект("СписокЗначений");
			Фрм.ДобавитьЗначение(1,"фРазрешатьПустогоКонтрагента");
			Фрм.ДобавитьЗначение("ДоговораКонтрагентов","ГрафаОтбора");
			Фрм.ДобавитьЗначение(Субконто1,"Контрагент");			
			ОткрытьФормуМодально("Журнал.ПолныйЖурнал.ДляВыбораДоговоровИСчетов",Фрм,);
			ВремДоговор = Фрм.Получить("Документ");                                
			Если ПустоеЗначение(ВремДоговор) = 0 Тогда
				Если ВремДоговор.Фирма <> Фирма Тогда
					глКомментарий("Договор принадлежит другой фирме!",1,,"!");
					СтатусВозврата(0);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			Если ПроверкаСоответствия(Субконто1,ВремДоговор,)=0 Тогда
				Предупреждение("Договор не соответствует контрагенту.");
			Иначе
				Субконто2 = ВремДоговор;
				Если ПроверкаСоответствия(Субконто1,ВремДоговор,ДокументОснование)=0 Тогда
					Предупреждение("Документ основание не соответствует Договору.");
					ДокументОснование = 0;
				КонецЕсли;
			КонецЕсли;
			
			Если (ПустоеЗначение(Субконто1)=1) и (ПустоеЗначение(Субконто2)=0) Тогда
				Субконто1 = Субконто2.Контрагент;
			КонецЕсли;
			ФлагСтандОбр = 0;
		КонецЕсли;
	ИначеЕсли Рекв = "ДокументОснование" Тогда
		ФлагСтандОбр = 0;
		Фрм = СоздатьОбъект("СписокЗначений");
		Фрм.ДобавитьЗначение(1,"фРазрешатьПустогоКонтрагента");
		Фрм.ДобавитьЗначение(Субконто1,"Контрагент");			
		Фрм.ДобавитьЗначение("СчетаКонтрагентов","ГрафаОтбора");
		ОткрытьФормуМодально("Журнал.ПолныйЖурнал.ДляВыбораДоговоровИСчетов",Фрм,);
		ВремДокументОснование = Фрм.Получить("Документ");
		Если ПустоеЗначение(ВремДокументОснование) = 0 Тогда
			Если ВремДокументОснование.Фирма <> Фирма Тогда
				глКомментарий("Счет принадлежит другой фирме!",1,,"!");
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;

		Если ПроверкаСоответствия(Субконто1,Субконто2,ВремДокументОснование)=0 Тогда
			Предупреждение("Документ основание не соответствует Договору.");
		Иначе
			ДокументОснование = ВремДокументОснование;
		КонецЕсли;
		
		Если ПустоеЗначение(ДокументОснование) = 0 Тогда
			Если ПустоеЗначение(Субконто1)=1 Тогда
				Субконто1 = ДокументОснование.Контрагент;
			КонецЕсли;
			Если ПустоеЗначение(Субконто2)=1 Тогда
				Субконто2 = ОпределитьДоговор(ДокументОснование);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (26.05.14)
Функция Галка()
	пикт=1;
	Если ФлРучногоИзмСхемыРБ=1 Тогда
		Пикт=2;
	КонецЕсли;
	Возврат Пикт;
КонецФункции // Галка

// ===============================
Процедура ПриНачалеРедактированияСтроки()
	ИзмВидДвижения();
	
	Если Форма.ТекущаяКолонка()="ФлРучноеРедактированиеСхемы" Тогда //--- УМК Сандомирский В.Ю, (26.05.14)
		Если ФлРучногоИзмСхемыРБ=1 Тогда
			ФлРучногоИзмСхемыРБ=0
		Иначе
			ФлРучногоИзмСхемыРБ=1;
		КонецЕсли;
		Галка();
	КонецЕсли;								//... УМК Сандомирский В.Ю, (26.05.14)
		
КонецПроцедуры //ПриНачалеРедактированияСтроки

// ===============================
Процедура ОбработкаВыбораЗначения(ВыбЗнач,ИдентЭлемДиалога,ФлагСтандОбр)
	Если (ИдентЭлемДиалога = "ДокументОснование") Тогда
		ФлагСтандОбр = 0;
		ИзмДокументОснование(ВыбЗнач, 1);
	КонецЕсли;
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (01.06.14) импорт БВ из Ф1
Процедура ИнитOLE_Старая()
	V7=СоздатьОбъект("V77.Application");   
	
	КаталогБазыОЛе  = Константа.ПутьФ1;
	ПользовательОле = "OLE";
	ПарольОле       = "777";
	МонопольныйРежимOLE = " /m"; // для немонопольного запуска указать пустую строку!
	ЗапускБезЗаставки = 1;       // для появления заставки (например, чтобы наблюдать
                             // процесс запуска базы OLE визуально) поставьте здесь "0"
	
	
	й=V7.Initialize(V7.RMTrade, "/d "+ СокрЛП(КаталогБазыОЛе)  			//--- Путь к базе
									+ " /n" + СокрЛП(ПользовательОле) 	//--- Пользователь
									+ " /p" + СокрЛП(ПарольОле) , "No_Splash_Show");	//--- Пароль
																
	Если й=0 Тогда
		Предупреждение("Ошибка инициализации !!!");
		V7=0;
	КонецЕсли;
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (01.06.14) импорт БВ из Ф1
Процедура ИмпортИзБух_Старая()	
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(СчетПоКоду("361"), "Покупатели");
	СпМеню.ДобавитьЗначение(СчетПоКоду("631"), "Поставщики");
	
	Зн = СчетПоКоду("361");
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если КоличествоСтрок() > 0 Тогда
	
		Рез = Вопрос("Удалить строки?","Да+Нет+Отмена");
	    Если Рез = "Отмена" Тогда
	    	Возврат;
	    ИначеЕсли Рез = "Да" Тогда
	    	УдалитьСтроки();
	    КонецЕсли;
	
	КонецЕсли;
	
	ИнитOLE_Старая();
	Если V7 = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДокБВ = V7.CreateObject("Документ.БанковскаяВыписка");
	ДокБВ.УстановитьФильтр(1, 0);
	ДокБВ.ВыбратьДокументы(ДатаДок, ДатаДок);
	
	ГруппаПоставщикиФ1 = V7.Константа.УМК_Поставщики; //--- УМК Сандомирский В.Ю. (16.06.15)
	ГруппаПокупателиФ1 = V7.Константа.УМК_Покупатели; //--- УМК Сандомирский В.Ю. (16.06.15)
	
	СпрК = СоздатьОбъект("Справочник.Контрагенты");
	СпрПост = СоздатьОбъект("Справочник.Контрагенты");
	СпрПок = СоздатьОбъект("Справочник.Контрагенты");
	СпрНДС = СоздатьОбъект("Справочник.ШкалаСтавок");
	СпрВД = СоздатьОбъект("Справочник.ВалДоходыРасходы");
	СпрПок.НайтиПоКоду(2);
	СпрПост.НайтиПоКоду(119);
	
	//--- Тнхнологическая таблица связанных ЕДРПОУ 
	Тз_СвязанныеЕДРПОУ = СоздатьОбъект("ТаблицаЗначений");
	Тз_СвязанныеЕДРПОУ.НоваяКолонка("Контрагент","Справочник.Контрагенты");
	Тз_СвязанныеЕДРПОУ.НоваяКолонка("ЕДРПОУ");  
	
	СпрКодыЕДРПОУ = СоздатьОбъект("Справочник.КодыЕДРПОУ");
		
	Пока ДокБВ.ПолучитьДокумент() = 1 Цикл
	//	Если СокрЛП(ДокБВ.РСчет.НомерСчета) = СокрЛП(РСчет.НомерСчета) Тогда
			Сообщить("Импорт документа " + Строка(ДокБВ.ТекущийДокумент()));
			
			ДокБВ.ВыбратьСтроки();
			Пока ДокБВ.ПолучитьСтроку() = 1 Цикл
				Если ДокБВ.Счет.Код = Зн.Код Тогда
						
					//Если ДокБВ.Субконто.Уровень() = 1 Тогда //--- Пропускаем всех кто лежит в корне бухгалтерии
					//	Продолжить;	
					//КонецЕсли;
					
					//Если ДокБВ.Субконто.НеВыгружатьБанк = 1 Тогда //--- Пропускаем с галочкой не выгружать в Ф2 // было - (убрал 16.05.16)
					//	Продолжить;		
					//КонецЕсли;
					
					Если Зн.Код = "361" Тогда //--- "Покупатели"
						Если ДокБВ.Субконто.ПринадлежитГруппе(ГруппаПокупателиФ1) <> 1  Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
						
					Если Зн.Код = "631" Тогда //--- "поставщики"
						Если ДокБВ.Субконто.ПринадлежитГруппе(ГруппаПоставщикиФ1) <> 1  Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
						
					// ищем контрагента
					ЕДРПОУ = СокрЛП(ДокБВ.Субконто.ЕДРПОУ);
					Если ЕДРПОУ = "" Тогда
						Сообщить("В строке: " + ДокБВ.НомерСтроки + " у контрагента не задан код ЕГРПОУ");
						//Продолжить;
					КонецЕсли;
							
					СписК = СоздатьОбъект("СписокЗначений");
					СпрК.ВыбратьЭлементыПоРеквизиту("ЕДРПОУ", ЕДРПОУ, 0, 0);
					Пока СпрК.ПолучитьЭлемент() = 1 Цикл
						Если СпрК.ПометкаУдаления() = 0 Тогда		
							Если (СпрК.ПринадлежитГруппе(СпрПок.ТекущийЭлемент()) = 0) И (СпрК.ПринадлежитГруппе(СпрПост.ТекущийЭлемент()) = 0) Тогда
								Сообщить("В строке: " + ДокБВ.НомерСтроки + " " 
											+ СпрК.ТекущийЭлемент() + " контрагент не входит в группу ""Заказчики"" или ""Поставщики сырья и материалов"". Пропущен.");
							Иначе
								СписК.ДобавитьЗначение(СпрК.ТекущийЭлемент());
							КонецЕсли;							
						КонецЕсли;
					КонецЦикла;
					
					НайденКонтрагент = 1; //--- УМК Сандомирский В.Ю. (09.07.14)		
					
					Если СписК.РазмерСписка() = 1 Тогда
						Контрагент = СписК.ПолучитьЗначение(1);
					ИначеЕсли СписК.РазмерСписка() = 0 Тогда
						НайденКонтрагент = 0;//--- УМК Сандомирский В.Ю. (09.07.14)	
						Контрагент = "";
					Иначе
						Контрагент = "";
						Сообщить(ДокБВ.Содержание);
						Если СписК.ВыбратьЗначение(Контрагент, СокрЛП(ДокБВ.Содержание)) = 0 Тогда
							Контрагент = СписК.ПолучитьЗначение(1);
						КонецЕсли;						
					КонецЕсли;
					
					Если ПустоеЗначение(Контрагент) = 1 Тогда //--- Попытаемся найти в таблице значений связаных ЕДРПОУ (по подчиненному справочнику уконтрагентов)
						Если СпрКодыЕДРПОУ.НайтиПоНаименованию(ЕДРПОУ,0,1) = 1 Тогда
							Контрагент = СпрКодыЕДРПОУ.Владелец.ТекущийЭлемент();
							НайденКонтрагент = 1;//--- УМК Сандомирский В.Ю. (09.07.14)	
						КонецЕсли;	
					КонецЕсли;
					
					Если НайденКонтрагент = 0 Тогда //--- УМК Сандомирский В.Ю. (09.07.14)	
						Сообщить("В базе не найден контрагент " + ДокБВ.Субконто.Наименование + " с кодом ЕДРПОУ: " + ЕДРПОУ + " сумма " + ДокБВ.СуммаСНДС) ;
					КонецЕсли;
					
						
					Если ДокБВ.НашаОплата = 1 Тогда //--- Пропускаем строки с нашей оплатой черезбанковское отделение
						Сообщить(" ПРОПУСКАЕМ НАШУ ОПЛАТУ " + ДокБВ.Содержание,"!!!");
						Продолжить;
					КонецЕсли;
							
					НоваяСтрока();
					Счет = Зн;
					ИзмСчет();
					ВидДвижения = ?(ДокБВ.ПриходРасход.Идентификатор() = V7.Перечисление.ПлюсМинус.Плюс.Идентификатор(), Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление, Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание);
					ИзмВидДвижения();
					СпрНДС.НайтиПоКоду("БезНДС", 0); //--- Везде без НДС
					ВидНДС = СпрНДС.ТекущийЭлемент();
					Субконто1 = Контрагент;
					Если ПустоеЗначение(Субконто1) <> 1 Тогда
						Субконто2 = ?(ПустоеЗначение(Контрагент.БазДоговор) = 0, Контрагент.БазДоговор, "");
					КонецЕсли;
					СуммаСНДС = ДокБВ.СуммаСНДС;
					НДС = ДокБВ.НДС;
					Если ((ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление) И (ДокБВ.ДоходИздержка = V7.Перечисление.ПлюсМинусНичего.Минус)) ИЛИ 
						((ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание) И (ДокБВ.ДоходИздержка = V7.Перечисление.ПлюсМинусНичего.Плюс)) Тогда
						ВидОплаты = Перечисление.ВидыОплаты.Возврат;
					Иначе
						ВидОплаты = Перечисление.ВидыОплаты.Оплата;
					КонецЕсли;		
					
					СпрВД.НайтиПоКоду(ДокБВ.СубконтоДИ.ПолныйКод(), 2);
					СубконтоВалДохРасх = СпрВД.ТекущийЭлемент(); 
					Содержание = ДокБВ.Содержание;
					НомерДокумента = ДокБВ.НомерДокумента;
					Если Зн = СчетПоКоду("361") Тогда
						ВидПриходаРасхода = Перечисление.ВидыПриходаДенег.ВыручкаОтРеализации;
					Иначе
						ВидПриходаРасхода = Перечисление.ВидыРасходаДенег.НаВедениеХозДеятельности;
					КонецЕсли;
					
					ДокументДоговор = Субконто2;
					РежимОплаты = Перечисление.РежимыОплаты.ПоДоговору;
				КонецЕсли;
			КонецЦикла;
	//	КонецЕсли;
	КонецЦикла;
	
	V7.ExecuteBatch("ЗавершитьРаботуСистемы()");
	V7=0;	
	
	Сообщить("Импорт выписки завершен.",".");
	
КонецПроцедуры

Процедура ИнитOLE()
	//V7 = СоздатьОбъект("V83.Application"); 17.02.21 убрал Малахов
	 фПодключено = 0;
	V7 =  глПодключитьComV8(фПодключено,Константа.ПутьФ1_8); 
	//Попытка
		//V7 = V82COMConnector.Connect(Параметры);
		//V7.Connect(Константа.ПутьФ1_8); 17.02.21 убрал Малахов
	//Исключение
	//	Предупреждение ("Ошибка подключения!");
	//	V7 = 0;
	//КонецПопытки;
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (01.06.14) импорт БВ из Ф1
Процедура ИмпортИзБух()	
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(СчетПоКоду("361"), "Покупатели");
	СпМеню.ДобавитьЗначение(СчетПоКоду("631"), "Поставщики");
	
	Зн = СчетПоКоду("361");
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если КоличествоСтрок() > 0 Тогда
	
		Рез = Вопрос("Удалить строки?","Да+Нет+Отмена");
	    Если Рез = "Отмена" Тогда
	    	Возврат;
	    ИначеЕсли Рез = "Да" Тогда
	    	УдалитьСтроки();
	    КонецЕсли;
	
	КонецЕсли;
	
	ИнитOLE();
	Если V7 = 0 Тогда
		Возврат;
	КонецЕсли;
	КодСчета = Зн.Код;
	
	ГруппаК = ?(КодСчета = "361", V7.Справочники.Контрагенты.НайтиПоКоду("00000104"), V7.Справочники.Контрагенты.НайтиПоКоду("000001362")) ;
	
	Запрос = V7.NewObject("Запрос");
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ППВ.Ссылка.Номер НомерДок,
	|	""Поступление"" КАК ПлюсМинус,
	|	ППВ.Ссылка.umk_НашаОплата НашаОплата,
	|	ППВ.Ссылка.Контрагент,
	|	ППВ.Ссылка.Контрагент.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	ВЫБОР
	|		КОГДА ППВ.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ОплатаПокупателя)
	|			ТОГДА ""Оплата""
	|		КОГДА ППВ.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ВозвратДенежныхСредствПоставщиком)
	|			ТОГДА ""Возврат""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВидДвижения,
	|	ППВ.СуммаПлатежа,
	|	ППВ.СуммаНДС,
	|	ППВ.Ссылка.НазначениеПлатежа Содержание,
	|	ППВ.Ссылка.НомерВходящегоДокумента КАК НомерДокумента,
	|	ППВ.СчетУчетаРасчетовСКонтрагентом.Код КАК Счет
	|ИЗ
	|	Документ.ПлатежноеПоручениеВходящее.РасшифровкаПлатежа КАК ППВ
	|ГДЕ
	|	ППВ.Ссылка.Проведен И ППВ.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&НачДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&НачДата, ДЕНЬ) И ППВ.Ссылка.Оплачено И ППВ.Ссылка.Контрагент В ИЕРАРХИИ (&Контрагент)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ППИ.Ссылка.Номер НомерДок,
	|	""Списание"" КАК ПлюсМинус,
	|	ППИ.Ссылка.umk_НашаОплата НашаОплата,
	|	ППИ.Ссылка.Контрагент,
	|	ППИ.Ссылка.Контрагент.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	ВЫБОР
	|		КОГДА ППИ.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ОплатаПоставщику)
	|			ТОГДА ""Оплата""
	|		КОГДА ППИ.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ВозвратДенежныхСредствПокупателю)
	|			ТОГДА ""Возврат""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВидДвижения,
	|	ППИ.СуммаПлатежа,
	|	ППИ.СуммаНДС,
	|	ППИ.Ссылка.НазначениеПлатежа Содержание,
	|	ППИ.Ссылка.НомерПоручения КАК НомерПоручения,
	|	ППИ.СчетУчетаРасчетовСКонтрагентом.Код КАК Счет
	|ИЗ
	|	Документ.ПлатежноеПоручениеИсходящее.РасшифровкаПлатежа КАК ППИ
	|ГДЕ
	|	ППИ.Ссылка.Проведен И ППИ.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&НачДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&НачДата, ДЕНЬ) И ППИ.Ссылка.Оплачено И ППИ.Ссылка.Контрагент В ИЕРАРХИИ (&Контрагент)";
		
	Запрос.УстановитьПараметр("НачДата", ДатаДок);
	Запрос.УстановитьПараметр("Контрагент", ГруппаК);
	СтрокаТЗ = Запрос.Выполнить().Выбрать();
//	ТЗ.Свернуть("ПлюсМинус,Контрагент,КодПоЕДРПОУ,ВидДвижения, НазначениеПлатежа, НомерПоручения,НомерДок,Счет", "СуммаПлатежа,СуммаНДС");
	
	СпрК = СоздатьОбъект("Справочник.Контрагенты");
	СпрПост = СоздатьОбъект("Справочник.Контрагенты");
	СпрПок = СоздатьОбъект("Справочник.Контрагенты");
	СпрНДС = СоздатьОбъект("Справочник.ШкалаСтавок");
	СпрПок.НайтиПоКоду(2);
	СпрПост.НайтиПоКоду(119);
	
	//--- Тнхнологическая таблица связанных ЕДРПОУ 
	Тз_СвязанныеЕДРПОУ = СоздатьОбъект("ТаблицаЗначений");
	Тз_СвязанныеЕДРПОУ.НоваяКолонка("Контрагент","Справочник.Контрагенты");
	Тз_СвязанныеЕДРПОУ.НоваяКолонка("ЕДРПОУ");  
	
	СпрКодыЕДРПОУ = СоздатьОбъект("Справочник.КодыЕДРПОУ");
	СпрНДС.НайтиПоКоду("БезНДС", 0); //--- Везде без НДС
	СубВалДохРасх = ?(Зн.Код = "361", Константа.БазВаловыйДоход, Константа.БазВаловыйРасход); 
		
	Пока СтрокаТЗ.Следующий() = -1 Цикл		
//		СтрокаТЗ = ТЗ[Инд];
		Сообщить("Импорт документа " + СтрокаТЗ.НомерДок);
		Если СтрокаТЗ.Счет = КодСчета Тогда
			ЕДРПОУ = СокрЛП(СтрокаТЗ.КодПоЕДРПОУ);
			Если ЕДРПОУ = "" Тогда
				Сообщить("В документе: " + СтрокаТЗ.НомерДок + " у контрагента " + СтрокаТЗ.Контрагент.Наименование + " не задан код по ЕГРПОУ");
			КонецЕсли;
						
			СписК = СоздатьОбъект("СписокЗначений");
			СпрК.ВыбратьЭлементыПоРеквизиту("ЕДРПОУ", ЕДРПОУ, 0, 0);
			Пока СпрК.ПолучитьЭлемент() = 1 Цикл
				Если СпрК.ПометкаУдаления() = 0 Тогда		
					Если (СпрК.ПринадлежитГруппе(СпрПок.ТекущийЭлемент()) = 0) И (СпрК.ПринадлежитГруппе(СпрПост.ТекущийЭлемент()) = 0) Тогда
						Сообщить("В документе: " + СтрокаТЗ.НомерДок + " контрагент: " + СпрК.ТекущийЭлемент() + " не входит в группу ""Заказчики"" или ""Поставщики сырья и материалов"". Пропущен.");
					Иначе
						СписК.ДобавитьЗначение(СпрК.ТекущийЭлемент());
					КонецЕсли;							
				КонецЕсли;
			КонецЦикла;
				
			НайденКонтрагент = 1; //--- УМК Сандомирский В.Ю. (09.07.14)		
				
			Если СписК.РазмерСписка() = 1 Тогда
				Контрагент = СписК.ПолучитьЗначение(1);
			ИначеЕсли СписК.РазмерСписка() = 0 Тогда
				НайденКонтрагент = 0;//--- УМК Сандомирский В.Ю. (09.07.14)	
				Контрагент = "";
			Иначе
				Контрагент = "";
				Сообщить(СтрокаТЗ.Содержание);
				Если СписК.ВыбратьЗначение(Контрагент, СокрЛП(СтрокаТЗ.Содержание)) = 0 Тогда
					Контрагент = СписК.ПолучитьЗначение(1);
				КонецЕсли;						
			КонецЕсли;
				
			Если ПустоеЗначение(Контрагент) = 1 Тогда //--- Попытаемся найти в таблице значений связаных ЕДРПОУ (по подчиненному справочнику уконтрагентов)
				Если СпрКодыЕДРПОУ.НайтиПоНаименованию(ЕДРПОУ,0,1) = 1 Тогда
					Контрагент = СпрКодыЕДРПОУ.Владелец.ТекущийЭлемент();
					НайденКонтрагент = 1;//--- УМК Сандомирский В.Ю. (09.07.14)	
				КонецЕсли;	
			КонецЕсли;
				
			Если НайденКонтрагент = 0 Тогда //--- УМК Сандомирский В.Ю. (09.07.14)	
				Сообщить("В базе не найден контрагент " + СтрокаТЗ.Контрагент.Наименование + " с кодом ЕДРПОУ: " + ЕДРПОУ + " сумма " + СтрокаТЗ.СуммаПлатежа);
			КонецЕсли;
				
					
			Если СтрокаТЗ.НашаОплата = -1 Тогда //--- Пропускаем строки с нашей оплатой черезбанковское отделение
				Сообщить(" ПРОПУСКАЕМ НАШУ ОПЛАТУ " + СтрокаТЗ.Содержание, "!!!");
				Продолжить;
			КонецЕсли;
						
			НоваяСтрока();
			Счет = Зн;
			ИзмСчет();
			ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.ЗначениеПоИдентификатору(СтрокаТЗ.ПлюсМинус);
			ИзмВидДвижения();					
			ВидНДС = СпрНДС.ТекущийЭлемент();
			Субконто1 = Контрагент;
			Если ПустоеЗначение(Субконто1) <> 1 Тогда
				Субконто2 = ?(ПустоеЗначение(Контрагент.БазДоговор) = 0, Контрагент.БазДоговор, "");
			КонецЕсли;
			СуммаСНДС = СтрокаТЗ.СуммаПлатежа;
			НДС = СтрокаТЗ.СуммаНДС;
			ВидОплаты = Перечисление.ВидыОплаты.ЗначениеПоИдентификатору(СтрокаТЗ.ВидДвижения);
				
			СубконтоВалДохРасх = СубВалДохРасх;
			Содержание = СтрокаТЗ.Содержание;
			НомерДокумента = СтрокаТЗ.НомерДокумента;
			Если КодСчета = "361" Тогда
				ВидПриходаРасхода = Перечисление.ВидыПриходаДенег.ВыручкаОтРеализации;
			Иначе
				ВидПриходаРасхода = Перечисление.ВидыРасходаДенег.НаВедениеХозДеятельности;
			КонецЕсли;
				
			ДокументДоговор = Субконто2;
			РежимОплаты = Перечисление.РежимыОплаты.ПоДоговору;
		КонецЕсли;
	КонецЦикла;
	
	Сообщить("Импорт выписки завершен.",".");	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции


//Процедура ВыбратьКаталог()
//	ФС.ВыбратьКаталог(ПутьКБазе, "Выберите путь к базе");
//КонецПроцедуры

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ОткрытьВЖурнале,
	|Подчиненные");

ПутьКБазе = ВосстановитьЗначение("ПутьКЧБазе");
ЕстьДатаЗапрета = 0;