Перем СуммаПрихода, СуммаРасхода;
Перем СуммаГрнСНДС, СуммаГрнНДС;
Перем СуммаВал, ВалютаПроводки;
Перем СчетАванса;
Перем БалСтоимостьВал, БалСтоимостьГрн, КоррРСчет;
Перем тбБалансоваяСтоимость, НомСтр;
Перем тбДвиженияДенег;
Перем ВалДох, ВалРасх, БалансовыйКурс;
Перем тбДолгиПокупателей, тбДолгиПоставщиков;
Перем спКонтрагенты;
Перем КассовыйМетодБонусы; // + umk
Перем ТабОсновныеПартнеры; // + umk
Перем ТабОстаткиРасчетовБонусы;//+ umk

// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
//	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Фирма,"Фирма");
    глВыбранЛи(РСчет,"Расчетный счет");
	глВыбранЛи(СчетУчета,"Бухгалтерский счет учета денежных средств");
	Если глВсеВыбрано = 1 Тогда
	    Если (Валюта = Гривня) и (СчетУчета.Валютный = 1) Тогда
	        глКомментарий("Нельзя указывать валютный бухг. счет ("+СчетУчета+") для расчетного счета в гривнях!",0,,"!");
			глВсеВыбрано = 0;
		ИначеЕсли (Валюта <> Гривня) и (СчетУчета.Валютный = 0) Тогда
	        глКомментарий("Нельзя указывать не валютный бухг. счет ("+СчетУчета+") для расчетного счета в валюте!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	Если глВсеВыбрано = 1 Тогда
		глВсеВыбрано = глПроверкаДублейСтрок(Контекст);
	КонецЕсли;
	глПроверкаНДСВДокументе(Контекст, (Итог("СуммаСНДС")-Итог("НДС")), Итог("СуммаСНДС"), Итог("НДС"));
	Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
    глВыбранЛи(ВидДвижения,"Вид движения (поступление или списание)",НомерСтроки);
    глВыбранЛи(Счет,"Корреспондирующий счет",НомерСтроки);
	Если ВидДвижения <> Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
		Если (Счет.Код = "231") или (Счет.Код = "24") или (Счет.Код = "39") или (Лев(Счет.Код,1)="8")
			или (Лев(Счет.Код,1)="9") Тогда
			Если глПроверитьСчетЗатрат(Счет,2,0) = 1 Тогда
				Если глПроверитьАналитикуПоЗатратам(Субконто2,Субконто1,,, 
					" реквизит ""Субконто 2""", "реквизит ""Субконто 1""",,, НомерСтроки) = 0 Тогда
					глВсеВыбрано = 0;
				КонецЕсли;
			Иначе
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	глВыбранЛи(ВидНДС,"Вид НДС",НомерСтроки);
	глВыбранЛи(СуммаСНДС,"Сумма с НДС",НомерСтроки);
	Если глВсеВыбрано = 0 Тогда
	    Возврат 0; // дальше нечего и проверять
	КонецЕсли;
	Попытка
		Если (Субконто1.Валюта <> Валюта) Тогда
			глКомментарий("В строке "+НомерСтроки+" валюта счета "+Субконто1+" не совпадает с валютой р/с!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	Исключение
	КонецПопытки;
	Если Счет.ВидСубконто(2) = ВидыСубконто.Договора Тогда
		// проверим заказ
		// если заказ указан, проверим фирму в заказе
		Если ПустоеЗначение(Субконто2) = 0 Тогда
			Если Фирма <> Субконто2.Фирма Тогда
				глКомментарий("В строке "+НомерСтроки+" фирма в документе "+Субконто2+" не совпадает с фирмой текущего документа!",0,,"!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;	
		
	КонецЕсли;
	// если документ-основание указан, проверим в нем фирму
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если Фирма <> ДокументОснование.Фирма Тогда
			глКомментарий("В строке "+НомерСтроки+" фирма в документе "+ДокументОснование+" не совпадает с фирмой текущего документа!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	
	Если (Валюта <> Гривня) и (глВсеВыбрано = 1) Тогда
	    // проверим ставки НДС для взаиморасчетов в валюте
		Если (((ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление) И (ВидОплаты = Перечисление.ВидыОплаты.Оплата))
		ИЛИ ((ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание) И (ВидОплаты = Перечисление.ВидыОплаты.Возврат)))
		И (ВидНДС <> ЛьготнаяСтавкаНДС) Тогда
			// просто предупредим, но жестко не запрещаем
		    глКомментарий("В строке "+НомерСтроки+" поступление валютных средств вероятно должно проходить по ставке НДС """+ЛьготнаяСтавкаНДС+"""!",2)
		ИначеЕсли (((ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание) И (ВидОплаты = Перечисление.ВидыОплаты.Оплата))
		ИЛИ ((ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление) И (ВидОплаты = Перечисление.ВидыОплаты.Возврат)))
		И (ВидНДС <> неНДС) Тогда
			// взаиморасчеты с поставщиком жестко ведутся по ставке безНДС, НДС уплачивается таможне
			глКомментарий("В строке "+НомерСтроки+" списание валютных средств должно проходить по ставке НДС """+неНДС+"""!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
// Назначение:
// Подготавливает регистры взаиморасчетов для проведения
Процедура РассчитатьВзаиморасчеты()
	спКонтрагенты = СоздатьОбъект("СписокЗначений");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 0 Тогда
			// нам нужны только счета 36 и 63
		    Продолжить;
		КонецЕсли;
		Если спКонтрагенты.Принадлежит(Субконто1) = 0 Тогда
		    //+ umk добавим основного партнера для получения остатка взаиморасчета
			Если КассовыйМетодБонусы = 1 Тогда
				КонтрагентРасчетов = Субконто1;
				ОсновнойПартнер = глОсновнойКонтрагентИерархии(Субконто1.Родитель,Субконто1);
				Если ПустоеЗначение(ОсновнойПартнер) = 1 Тогда
					ОсновнойПартнер = КонтрагентРасчетов;
				КонецЕсли;
					спКонтрагенты.ДобавитьЗначение(ОсновнойПартнер);
					ТабОсновныеПартнеры.НоваяСтрока();
					ТабОсновныеПартнеры.Контрагент = КонтрагентРасчетов;
					ТабОсновныеПартнеры.Партнер = ОсновнойПартнер;
			Иначе
				спКонтрагенты.ДобавитьЗначение(Субконто1);
			КонецЕсли;
			// - umk
		КонецЕсли;
	КонецЦикла;

	ВремРегистры=СоздатьОбъект("Регистры");
	
	РегПоставщики=ВремРегистры.ВзаиморасчетыПоставщиков;
	РегПоставщики.УстановитьЗначениеФильтра("Фирма",Фирма,2);
	РегПоставщики.УстановитьЗначениеФильтра("Контрагент",спКонтрагенты,2);
	РегПоставщики.УстановитьЗначениеФильтра("Валюта",Валюта,1);
	
	РегПокупатели=ВремРегистры.ВзаиморасчетыПокупателей;
	РегПокупатели.УстановитьЗначениеФильтра("Фирма",Фирма,2);	
	РегПокупатели.УстановитьЗначениеФильтра("Контрагент",спКонтрагенты,2);
	РегПокупатели.УстановитьЗначениеФильтра("Валюта",Валюта,1);
	
	Если ИтогиАктуальны() = 0 Тогда
		РегПоставщики.ВременныйРасчет();
		РегПокупатели.ВременныйРасчет();
		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;
	
	РегПоставщики.УстановитьЗначениеФильтра("Фирма",Фирма,1);
	РегПоставщики.УстановитьЗначениеФильтра("Контрагент",спКонтрагенты,2);
	РегПоставщики.УстановитьЗначениеФильтра("Валюта",Валюта,1);
	РегПоставщики.ВыгрузитьИтоги(тбДолгиПоставщиков,1,1);
	
	РегПокупатели.УстановитьЗначениеФильтра("Фирма",Фирма,1);
	РегПокупатели.УстановитьЗначениеФильтра("Контрагент",спКонтрагенты,2);
	РегПокупатели.УстановитьЗначениеФильтра("Валюта",Валюта,1);
	РегПокупатели.ВыгрузитьИтоги(тбДолгиПокупателей,1,1);
	
КонецПроцедуры //РассчитатьВзаиморасчеты

// ===============================
Функция РассчитатьШапку()
  	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ИспользоватьСубконто(ВидыСубконто.НашиДенежныеСчета, РСчет, 2);
		
	Ост = 0;
	Если Валюта = Гривня Тогда
		Ит.ВыполнитьЗапрос(,ТекущийДокумент(),СчетУчета,,,,,"С");
		Ост = Ит.СНД();
	Иначе
		Ит.ВыполнитьЗапрос(,ТекущийДокумент(),СчетУчета,,Валюта,,,"В");
		Ост = Ит.СНД("В");
	КонецЕсли;
	Ит = 0;
	
	СуммаПрихода = 0; СуммаРасхода = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
		    СуммаПрихода = СуммаПрихода + СуммаСНДС;
		Иначе
			СуммаРасхода = СуммаРасхода + СуммаСНДС;
		КонецЕсли;
	КонецЦикла;
	
	Если СуммаРасхода - СуммаПрихода > Ост Тогда
	    Если Константа.РазрешитьОтрицОстатки = Нет Тогда
		    глКомментарий("На счете "+РСчет+" недостаточно средств для проведения операции! Остаток "+Ост,0,,"!");
	        Возврат 0;
		Иначе
			// разрешены отрицательные остатки,
			// выведем сообщение с другим уровнем детальности
		    глКомментарий("На счете "+РСчет+" недостаточно средств для проведения операции! Остаток "+Ост,1,,"!");
	    КонецЕсли;
	КонецЕсли;

	// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
	
	//// подсчитаем бал. стоимость для расчетного счета
	//Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	//Ит.ИспользоватьРазделительУчета(Фирма);
	//Ит.ИспользоватьСубконто(ВидыСубконто.НашиДенежныеСчета, РСчет, 2);
	//Ит.ВыполнитьЗапрос(ТекущийДокумент(),,"ВЛ",,Валюта);
	//
	//тбБалансоваяСтоимость = СоздатьОбъект("ТаблицаЗначений");
	//тбБалансоваяСтоимость.НоваяКолонка("РСчет","Справочник.НашиДенежныеСчета");
	//тбБалансоваяСтоимость.НоваяКолонка("СуммаГрн","Число",12,2);
	//тбБалансоваяСтоимость.НоваяКолонка("СуммаВал","Число",12,2);
	//тбБалансоваяСтоимость.НоваяСтрока();
	//тбБалансоваяСтоимость.РСчет = РСчет;
	//тбБалансоваяСтоимость.СуммаГрн = Ит.СНД("С");
	//тбБалансоваяСтоимость.СуммаВал = Ит.СНД("В");
	
	// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР

	Если Валюта <> Гривня Тогда
		глТаблицаСчетов.УдалитьСтроки();
		// переоценим бух. счет учета денежных средств
		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = СчетУчета;
		глТаблицаСчетов.Субконто1 = РСчет;
		глТаблицаСчетов.Субконто2 = 0;
		глТаблицаСчетов.Субконто3 = 0;
		глТаблицаСчетов.Валюта = Валюта;
		// курсовую разницу всегда считаем операционной
		глТаблицаСчетов.ОперационнаяКР = 1;
		глТаблицаСчетов.ВидДеятельности = ПолучитьПустоеЗначение("Справочник.ВидыДеятельности");		
	КонецЕсли;
	
	Возврат 1;
КонецФункции

// ===============================
Функция РассчитатьСтроку()
	глКомментарий("Обработка строки "+НомерСтроки,3);
	СуммаГрнСНДС = глПересчет(СуммаСНДС,Валюта,Гривня,ДатаДок);
	СуммаГрнНДС = глПересчет(НДС,Валюта,Гривня,ДатаДок);
	
	
	Если (НДС > 0) и (глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 0) Тогда
	    глКомментарий("Сумму НДС можно указывать только для счетов поставщиков и покупателей (строка "+НомерСтроки+")",0,,"!");
		Возврат 0;
	КонецЕсли;

	БалСтоимостьГрн = 0;
	БалСтоимостьВал = 0;
	КоррРСчет = "";
	Если Валюта = Гривня Тогда
	    СуммаВал = 0;
	    ВалютаПроводки = 0;
	Иначе
		СуммаВал = СуммаСНДС;
	    ВалютаПроводки = Валюта;
		РСчетБС = ""; // р/счет для расчета балансовой стоимости счета по кредиту
		БалСтоимостьВал = СуммаВал;
		БалСтоимостьГрн = СуммаГрнСНДС;
		// бал. стоимость - по курсу НБУ, за исключением случаев покупки/продажи
		Если (Счет.Код = "333") или (Счет.Код = "334") Тогда
			// перечисляем валюту на продажу или возвращаем непроданную
			Если Рсчет <> Субконто2 Тогда
				// р/счета не совпадают, нужно изменить бал.стоимость
				РСчетБС = ?(ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание, РСчет, Субконто2);
				КоррРСчет = Субконто2;
			Иначе
				// изменения бал. стоимости отразятся в документах Покупка\ПродажаВалюты
				БалСтоимостьВал = 0;
				БалСтоимостьГрн = 0;
			КонецЕсли;
		Иначе
			Попытка
				Если (Субконто1.Вид() = "НашиДенежныеСчета") и (Счет.Валютный = 1) Тогда
					КоррРСчет = Субконто1;
				КонецЕсли;
			Исключение
			КонецПопытки;
			РСчетБС = ?(ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание, РСчет, КоррРСчет);
		КонецЕсли;
		Если (ПустоеЗначение(РСчетБС) = 0) И (КоррРСчет <> РСчет) Тогда
			
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР
			
//			НомСтр = 0;
//			Если тбБалансоваяСтоимость.НайтиЗначение(РСчетБС,НомСтр,"РСчет") = 0 Тогда
//				// подсчитаем бал. стоимость для кредитуемого счета
//				Ит = СоздатьОбъект("БухгалтерскиеИтоги");
//				Ит.ИспользоватьРазделительУчета(Фирма);
//				Ит.ИспользоватьСубконто(ВидыСубконто.НашиДенежныеСчета, РСчетБС, 2);
//				Ит.ВыполнитьЗапрос(ТекущийДокумент(),,"ВЛ",,РСчетБС.Валюта);
//
//				тбБалансоваяСтоимость.НоваяСтрока();
//				тбБалансоваяСтоимость.РСчет = РСчетБС;
//				тбБалансоваяСтоимость.СуммаГрн = Ит.СНД("С");
//				тбБалансоваяСтоимость.СуммаВал = Ит.СНД("В");
//				НомСтр = тбБалансоваяСтоимость.НомерСтроки;
//			КонецЕсли;
//			// подсчитаем бал. стоимость для кредитуемого счета
//			тбБалансоваяСтоимость.ПолучитьСтрокуПоНомеру(НомСтр);
//			БалСтоимостьГрн = ?(тбБалансоваяСтоимость.СуммаВал = 0,0,СуммаВал*тбБалансоваяСтоимость.СуммаГрн/тбБалансоваяСтоимость.СуммаВал);
//			Если БалСтоимостьГрн = 0 Тогда
//				глКомментарий("Балансовая стоимость валюты на кредитуемом счете равна 0! Проверьте остаток на забалансовом счете ВЛ",1,,"!");
//			КонецЕсли;
//			
//			// занесем в таблицу также корреспондирующий счет
//			НомСтр = 0;
//			Если (тбБалансоваяСтоимость.НайтиЗначение(КоррРСчет,НомСтр,"РСчет") = 0)
//			и (ПустоеЗначение(КоррРСчет) = 0) Тогда
//				// подсчитаем бал. стоимость для кредитуемого счета
//				Ит = СоздатьОбъект("БухгалтерскиеИтоги");
//				Ит.ИспользоватьРазделительУчета(Фирма);
//				Ит.ИспользоватьСубконто(ВидыСубконто.НашиДенежныеСчета, КоррРСчет, 2);
//				Ит.ВыполнитьЗапрос(ТекущийДокумент(),,"ВЛ",,КоррРСчет.Валюта);
//
//				тбБалансоваяСтоимость.НоваяСтрока();
//				тбБалансоваяСтоимость.РСчет = КоррРСчет;
//				тбБалансоваяСтоимость.СуммаГрн = Ит.СНД("С");
//				тбБалансоваяСтоимость.СуммаВал = Ит.СНД("В");
//			КонецЕсли;
//			
//			// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР
			
		КонецЕсли;
	КонецЕсли;
	
	// определим счет аванса
	Если глВыделятьЛиАвансыПоСчету(Счет) = 1 Тогда		
		Если (ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление) и 
		(ВидОплаты = Перечисление.ВидыОплаты.Оплата) или 
		(ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание) и 
		(ВидОплаты = Перечисление.ВидыОплаты.Возврат) Тогда
			// покупатель
			СчетАванса = СчетПоКоду(?(Валюта=Гривня,"6811","6812"))
		КонецЕсли;
		Если (ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление) и 
		(ВидОплаты = Перечисление.ВидыОплаты.Возврат) или 
		(ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание) и 
		(ВидОплаты = Перечисление.ВидыОплаты.Оплата) Тогда
			// поставщик
			СчетАванса = СчетПоКоду(?(Валюта=Гривня,"3711","3712"))
		КонецЕсли;
	ИначеЕсли  глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
		СчетАванса = Счет;		
	КонецЕсли;
		
	// валовые доходы и расходы
	ВалДох = 0; ВалРасх = 0; БалансовыйКурс = 0;
	// суммы валовых доходов/расходов рассчитываем по первому событию
	Если СубконтоВалДохРасх <> Константа.НиДоходНиРасход Тогда
		// суммы валовых доходов/расходов рассчитываем по первому событию
		Если СубконтоВалДохРасх <> Константа.НиДоходНиРасход Тогда
		    Если ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
				текВалДохРасх = Макс((СуммаСНДС - НДС), 0);
		        Если ВидОплаты = Перечисление.ВидыОплаты.Оплата Тогда
		  		    ВалДох = текВалДохРасх;
				Иначе // возврат
		  			ВалРасх = текВалДохРасх;
				КонецЕсли;
			Иначе // списание
			    текВалДохРасх = Макс((СуммаСНДС - НДС), 0);
				Если Валюта <> Гривня Тогда
					// списываем валюту, расходы в размере балансовой стоимости
				    текВалДохРасх = ?(БалСтоимостьВал=0, 0, БалСтоимостьГрн*текВалДохРасх/БалСтоимостьВал);
					БалансовыйКурс = ?(БалСтоимостьВал=0, 0, БалСтоимостьГрн/БалСтоимостьВал);
				КонецЕсли;
		        Если ВидОплаты = Перечисление.ВидыОплаты.Оплата Тогда
				    ВалРасх = текВалДохРасх;
				Иначе // возврат
				    ВалДох = текВалДохРасх;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если (Валюта <> Гривня) и (Счет.Валютный = 1) 
	И (глПроверитьСчетВзаиморасчетов(Счет)=0) Тогда
		// переоценим корреспондирующий счет
		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = Счет;
		глТаблицаСчетов.Субконто1 = Субконто1;
		глТаблицаСчетов.Субконто2 = Субконто2;
		глТаблицаСчетов.Субконто3 = Субконто3;
		глТаблицаСчетов.Валюта = Валюта;
		глТаблицаСчетов.ОперационнаяКР = ?(ОперационнаяКР=Да, 1, 0);
		глТаблицаСчетов.ВидДеятельности = ПолучитьПустоеЗначение("Справочник.ВидыДеятельности");
	КонецЕсли;
	Возврат 1;
КонецФункции

// ===============================
// Назначение:
//		Проводит строку выписки по регистрам ВзаиморасчетыПокупателей и ВзаиморасчетыПоставщиков
Процедура ВзаиморасчетыСтрока()
	
	Перем НС; // + umk
	
	
	Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 0 Тогда
		// нам нужны только счета 36 и 63
	    Возврат;
	КонецЕсли;
	
	// + umk
	КонтрагентРасчетов = Субконто1;
	
	//+ umk найдем основного партнера 
	Субконто2_ = ?(КонтрагентРасчетов.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,Субконто2, КонтрагентРасчетов.БазДоговор); //  + umk заменим договор 
	
	Если КассовыйМетодБонусы = 1 Тогда
		Если ТабОсновныеПартнеры.НайтиЗначение(Субконто1,НС,"Контрагент") = 1 Тогда
			ТабОсновныеПартнеры.ПолучитьСтрокуПоНомеру(НС);
			КонтрагентРасчетов = ТабОсновныеПартнеры.Партнер;
			Субконто2_ = ?(КонтрагентРасчетов.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,Субконто2, КонтрагентРасчетов.БазДоговор); //  + umk заменим договор 
		КонецЕсли;
		ТабОстаткиРасчетовБонусы.НоваяСтрока();
		ТабОстаткиРасчетовБонусы.КонтрагентРасчетов = КонтрагентРасчетов;
		ТабОстаткиРасчетовБонусы.Договор = Субконто2_;
		ТабОстаткиРасчетовБонусы.ВидДвижения = ?(ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление,1,0);
		ТабОстаткиРасчетовБонусы.Сумма = СуммаСНДС;
	КонецЕсли;
	
	// - umk
	
	Если (ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление) и 
	(ВидОплаты = Перечисление.ВидыОплаты.Оплата) или 
	(ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание) и 
	(ВидОплаты = Перечисление.ВидыОплаты.Возврат) Тогда
		тбДолги = тбДолгиПокупателей;
		ЗнакОплаты = -1; 
		РегВзаиморасчетов = СоздатьОбъект("Регистр.ВзаиморасчетыПокупателей");
	КонецЕсли;
	Если (ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление) и 
	(ВидОплаты = Перечисление.ВидыОплаты.Возврат) или 
	(ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание) и 
	(ВидОплаты = Перечисление.ВидыОплаты.Оплата) Тогда
		тбДолги = тбДолгиПоставщиков;
		ЗнакОплаты = +1;     
		РегВзаиморасчетов = СоздатьОбъект("Регистр.ВзаиморасчетыПоставщиков");
	КонецЕсли;
	
	СтавкаНДСПогашения = ВидНДС;
	СуммаНДС = НДС;
	НеВклВДВР = ?(СубконтоВалДохРасх = Константа.НиДоходНиРасход,1,0);
	
	СуммаПогашения = СуммаСНДС;
	глПогашениеДолга(Контекст,ЗнакОплаты,тбДолги,Фирма,КонтрагентРасчетов,ВидОплаты,
		ДокументОснование, Субконто2_,РежимОплаты,СуммаПогашения, СуммаНДС,Валюта,СтавкаНДСПогашения, НеВклВДВР, БалансовыйКурс);
                  
	Если Валюта <> Гривня Тогда
		ВалютаПроводки = Валюта;
		СуммаВал = СуммаСНДС;
		СуммаГрн = глПересчет(СуммаСНДС,Валюта,Гривня,ДатаДок);  
	Иначе
		ВалютаПроводки = ПолучитьПустоеЗначение("Справочник.Валюты");
		СуммаВал = 0;
		СуммаГрн = СуммаСНДС;
	КонецЕсли;
	
	ВДебетСчетаУчета = ЗнакОплаты * ?(ВидОплаты=Перечисление.ВидыОплаты.Возврат,1,-1);
	ПризнакПроводки = ?(ВДебетСчетаУчета=1,2,1);
                                 
	// главная корреспонденция сложной проводки
	Если ВДебетСчетаУчета = 1 Тогда
		глПроводка(Контекст,СчетУчета,,СуммаГрн,"Поступление денежных средств",, РСчет,,,
		,,, ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки,1);
	Иначе
		глПроводка(Контекст,,СчетУчета,СуммаГрн,"Списание денежных средств",, ,,,
		РСчет,,, ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки,1);
	КонецЕсли;	
		
	// формирование проводок на основании движений по регистру		
	РегВзаиморасчетов.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегВзаиморасчетов.ПолучитьДвижение() = 1 Цикл		
		// выбираем движения только по текущей строке документа
		Если РегВзаиморасчетов.НомерСтроки() <> НомерСтроки Тогда
			Продолжить;
		КонецЕсли;
		
		// Выбираем аналитику из регистра
		Если РегВзаиморасчетов.Валюта <> Гривня Тогда
			ВалютаПроводки = РегВзаиморасчетов.Валюта;
			СуммаВал = РегВзаиморасчетов.Долг;
			СуммаГрн = РегВзаиморасчетов.ДолгОсн;
		Иначе
			ВалютаПроводки = ПолучитьПустоеЗначение("Справочник.Валюты");
			СуммаВал = 0;
			СуммаГрн = РегВзаиморасчетов.Долг;
		КонецЕсли;
		Контрагент = РегВзаиморасчетов.Контрагент;
		Договор = РегВзаиморасчетов.Договор;
		Если ВидОплаты = Перечисление.ВидыОплаты.Возврат Тогда
			СуммаВал = - СуммаВал;
			СуммаГрн = - СуммаГрн;
		КонецЕсли;	
		
		// подчиненная корреспонденция сложной проводки
		Если (РегВзаиморасчетов.КодОперации = АвансоваяОплата) Или (РегВзаиморасчетов.КодОперации = ВозвратПостОплаты) Тогда
			Если ВДебетСчетаУчета = 1 Тогда
				глПроводка(Контекст,,СчетАванса,СуммаГрн,Содержание,, ,,,
				Контрагент,Договор, ,ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки);
			Иначе
				глПроводка(Контекст,СчетАванса,,СуммаГрн,Содержание,,Контрагент,Договор,,
				,,, ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки);
			КонецЕсли;
		ИначеЕсли (РегВзаиморасчетов.КодОперации = ПостОплата) Или (РегВзаиморасчетов.КодОперации = ВозвратАвансовойОплаты) Тогда
			Если ВДебетСчетаУчета = 1 Тогда
				глПроводка(Контекст,,Счет,СуммаГрн,Содержание,, ,,,
				Контрагент,Договор,, ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки);
			Иначе
				глПроводка(Контекст,Счет,,СуммаГрн,Содержание,,Контрагент,Договор,,
				,,, ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки);
			КонецЕсли;
		КонецЕсли;
		
		// Делаем проводки по НДС, если установлены соотв. флаги в регистре 
		Если глДелатьПроводкиПоНалогам(РегВзаиморасчетов,"НДС") = 1 Тогда
			Коммент =  "НДС";
			Если ВидОплаты = Перечисление.ВидыОплаты.Возврат Тогда
				Коммент =  Коммент + " , сторно";
			КонецЕсли;
			Если ЗнакОплаты = -1 Тогда // покупатели
				глПроводка(Контекст,"64.3","64.1.5",РегВзаиморасчетов.НДС,Коммент,,Контрагент,Договор,,
				ВидНДС,,, ,,"БК",1,0);
			Иначе // поставщики
				Если (Константа.НДСпоВходящимНН = Да) И (Валюта = Гривня) Тогда
					// проводку по налоговому кредиту сделаем в 
					// документе ЗаписьКнигиПриобретения
					СчетНДС = СчетПоКоду("64.4.2");
					СубконтоНДС1 = Контрагент;
					СубконтоНДС2 = Договор;
				Иначе
					// сразу налоговый кредит
					СчетНДС = СчетПоКоду("64.1.5");
					СубконтоНДС1 = ВидНДС;
					СубконтоНДС2 = 0;
				КонецЕсли;
				глПроводка(Контекст,СчетНДС,"64.4.1",РегВзаиморасчетов.НДС,Коммент,, СубконтоНДС1,СубконтоНДС2,,
				Контрагент,Договор,, ,,"БК",1,0);
			КонецЕсли;	
		КонецЕсли;
		
		// Делаем проводки по валоывым доходам/расходам, если установлены соотв. флаги в регистре 
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР
		//Если глДелатьПроводкиПоНалогам(РегВзаиморасчетов,"ВД/ВР") = 1 Тогда
		//	Если ЗнакОплаты = -1 Тогда  // покупатели
		//		Коммент =  "Валовые доходы";
		//		Если ВидОплаты = Перечисление.ВидыОплаты.Возврат Тогда
		//			Коммент =  Коммент + " , сторно";
		//		КонецЕсли;
		//		глПроводка(Контекст,"ВД","ВД",РегВзаиморасчетов.СуммаСНДС_НУ-РегВзаиморасчетов.НДС,Коммент,,Контрагент,Договор,СубконтоВалДохРасх,
		//		Контрагент,Договор,СубконтоВалДохРасх, ,,"БК",1,0);
		//	Иначе // поставщики 
		//		Коммент =  "Валовые расходы";
		//		Если ВидОплаты = Перечисление.ВидыОплаты.Возврат Тогда
		//			Коммент =  Коммент + " , сторно";
		//		КонецЕсли;
		//		глПроводка(Контекст,"ВР","ВР",РегВзаиморасчетов.СуммаСНДС_НУ-РегВзаиморасчетов.НДС,Коммент,,Контрагент,Договор,СубконтоВалДохРасх,
		//		Контрагент,Договор,СубконтоВалДохРасх, ,,"БК",1,0);
		//	КонецЕсли;
		//КонецЕсли;
		// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР
		
	КонецЦикла; // по движениям регистра
	
	// + umk - уберем
	//Если Счет.ПринадлежитГруппе(СчетПоКоду("36")) = 1 Тогда
	//	Если ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
	//		глНачислитьБонусы(Контекст, Субконто1, Субконто2, 1, СуммаСНДС);
	//	Иначе
	//	    глНачислитьБонусы(Контекст, Субконто1, Субконто2, -1, СуммаСНДС);
	//	КонецЕсли;
	//КонецЕсли;
    // - umk - уберем
	
КонецПроцедуры //ВзаиморасчетыСтрока

// ===============================
Процедура ДвиженияСтрока()
	// проверим, не переброска ли это с расчетного счета в кассу
	Если (Сред(Строка(Счет),1,2) = "30") И (Константа.ПроводкиПоКассеТолькоОрдерами = Да) Тогда
	    Возврат;
	КонецЕсли;
	
	// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР
	
	//	// проводки по налоговому учету валюты
	//	Если ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
	//		// бал. стоимость по налоговому учету
	//		Если КоррРСчет <> РСчет Тогда
	//			глПроводка(Контекст,"ВЛ",,БалСтоимостьГрн,Содержание,, РСчет,,,
	//			,,, ВалютаПроводки,БалСтоимостьВал,"БК");
	//			
	//			тбБалансоваяСтоимость.ПолучитьСтрокуПоНомеру(1);
	//			тбБалансоваяСтоимость.СуммаГрн = тбБалансоваяСтоимость.СуммаГрн + БалСтоимостьГрн;
	//			тбБалансоваяСтоимость.СуммаВал = тбБалансоваяСтоимость.СуммаВал + БалСтоимостьВал;
	//			
	//			Если ПустоеЗначение(КоррРСчет) = 0 Тогда
	//				глПроводка(Контекст,,"ВЛ",БалСтоимостьГрн,Содержание,, ,,,
	//				КоррРСчет,,, ВалютаПроводки,БалСтоимостьВал,"БК");
	//				
	//				НомСтр = 0;
	//				тбБалансоваяСтоимость.НайтиЗначение(КоррРСчет,НомСтр,"РСчет");
	//				тбБалансоваяСтоимость.ПолучитьСтрокуПоНомеру(НомСтр);
	//				тбБалансоваяСтоимость.СуммаГрн = тбБалансоваяСтоимость.СуммаГрн - БалСтоимостьГрн;
	//				тбБалансоваяСтоимость.СуммаВал = тбБалансоваяСтоимость.СуммаВал - БалСтоимостьВал;
	//			КонецЕсли;
	//		КонецЕсли;
	//	Иначе
	//		// бал. стоимость по налоговому учету
	//		Если КоррРСчет <> РСчет Тогда
	//			глПроводка(Контекст,,"ВЛ",БалСтоимостьГрн,Содержание,, ,,,
	//			РСчет,,, ВалютаПроводки,БалСтоимостьВал,"БК");
	//
	//			тбБалансоваяСтоимость.ПолучитьСтрокуПоНомеру(1);
	//			тбБалансоваяСтоимость.СуммаГрн = тбБалансоваяСтоимость.СуммаГрн - БалСтоимостьГрн;
	//			тбБалансоваяСтоимость.СуммаВал = тбБалансоваяСтоимость.СуммаВал - БалСтоимостьВал;
	//
	//			Если ПустоеЗначение(КоррРСчет) = 0 Тогда
	//				глПроводка(Контекст,"ВЛ",,БалСтоимостьГрн,Содержание,, КоррРСчет,,,
	//				,,, ВалютаПроводки,БалСтоимостьВал,"БК");
	//
	//				НомСтр = 0;
	//				тбБалансоваяСтоимость.НайтиЗначение(КоррРСчет,НомСтр,"РСчет");
	//				тбБалансоваяСтоимость.ПолучитьСтрокуПоНомеру(НомСтр);
	//				тбБалансоваяСтоимость.СуммаГрн = тбБалансоваяСтоимость.СуммаГрн + БалСтоимостьГрн;
	//				тбБалансоваяСтоимость.СуммаВал = тбБалансоваяСтоимость.СуммаВал + БалСтоимостьВал;
	//			КонецЕсли;
	//		КонецЕсли;
	//	КонецЕсли;		
	
	// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР
	
	// проводки по счетам покупателей и поставщиков формируем потом на основании движений регистров
	Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
	    ВзаиморасчетыСтрока();
	Иначе       
		
		Если ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
			глПроводка(Контекст,СчетУчета,Счет,СуммаГрнСНДС,Содержание,, РСчет,,,
			Субконто1,Субконто2,Субконто3, ВалютаПроводки,СуммаВал,"БК");
		
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР
			//Если ВидОплаты = Перечисление.ВидыОплаты.Оплата Тогда
			//	глПроводка(Контекст,"ВД","ВД",ВалДох,"Валовые доходы",, Субконто1,Субконто2,СубконтоВалДохРасх,
			//	Субконто1,Субконто2,СубконтоВалДохРасх, ,,"БК");
			//Иначе // возврат
			//	глПроводка(Контекст,"ВР","ВР",-ВалРасх,"Валовые расходы, сторно",, Субконто1,Субконто2,СубконтоВалДохРасх,
			//	Субконто1,Субконто2,СубконтоВалДохРасх, ,,"БК");
			//КонецЕсли;
			// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР
			
		Иначе
			// списание
			Если (Счет.Код = "231") или (Счет.Код = "24") или (Счет.Код = "39") или (Лев(Счет.Код,1)="8")
			или (Лев(Счет.Код,1)="9") Тогда
				глПроводкаПоЗатратам(Контекст,Счет,СчетУчета,СуммаГрнСНДС,Содержание,, 
					Субконто1,Субконто2,Субконто3, РСчет,,, ВалютаПроводки,СуммаВал,"БК");
			Иначе
				глПроводка(Контекст,Счет,СчетУчета,СуммаГрнСНДС,Содержание,, Субконто1,Субконто2,Субконто3,
					РСчет,,, ВалютаПроводки,СуммаВал,"БК");
			КонецЕсли;
				
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР
			//Если ВидОплаты = Перечисление.ВидыОплаты.Оплата Тогда
			//    глПроводка(Контекст,"ВР","ВР",ВалРасх,"Валовые расходы",, Субконто1,Субконто2,СубконтоВалДохРасх,
			//    Субконто1,Субконто2,СубконтоВалДохРасх, ,,"БК");
			//Иначе // возврат
			//	глПроводка(Контекст,"ВД","ВД",-ВалДох,"Валовые доходы, сторно",, Субконто1,Субконто2,СубконтоВалДохРасх,
			//	Субконто1,Субконто2,СубконтоВалДохРасх, ,,"БК");
			//КонецЕсли;
			// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВД\ВР
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// + umk 
//Выполнить движения по остаткам долгов для бонусов рассчитанных по отгрузке
//
Процедура ДвижениеОстаткиРасчетовБонус()
	
	ТабОстаткиРасчетовБонусы.Свернуть("КонтрагентРасчетов,Договор,ВидДвижения","Сумма, Долг");
	
	ТабОстаткиРасчетовБонусы.ВыбратьСтроки();
	Пока ТабОстаткиРасчетовБонусы.ПолучитьСтроку() = 1 Цикл
		ТабОстаткиРасчетовБонусы.Долг = глОстатокДолгаВзаиморасчетыБонусы(ТекущийДокумент(), Фирма, ТабОстаткиРасчетовБонусы.КонтрагентРасчетов, ТабОстаткиРасчетовБонусы.Договор, Валюта); // Добавим сумму долга на дату документа
		глПогаситьДолгОстаткиБонусов(Контекст, ТабОстаткиРасчетовБонусы.КонтрагентРасчетов, ТабОстаткиРасчетовБонусы.Сумма, ТабОстаткиРасчетовБонусы.ВидДвижения, ТабОстаткиРасчетовБонусы.Договор);
	КонецЦикла;
	
КонецПроцедуры

//Движение бонусов 
//
Процедура ДвижениеБонусов()
	
	Перем НС_, НС;
	
	БазаРасчета = СуммаСНДС;
	
	//Если применяем кассовый метод расчета, то проверим остаток долга
	Если КассовыйМетодБонусы = 1 Тогда
		
		Если ТабОсновныеПартнеры.НайтиЗначение(Субконто1,НС_,"Контрагент") = 1 Тогда //Найдем Базового контрагента расчетов
			ТабОсновныеПартнеры.ПолучитьСтрокуПоНомеру(НС_);
			КонтрагентРасчетов = ТабОсновныеПартнеры.Партнер;
			Если ТабОстаткиРасчетовБонусы.НайтиЗначение(КонтрагентРасчетов,НС,"КонтрагентРасчетов") = 1 Тогда //Найдем сумму расчетов основного партнера
				ТабОстаткиРасчетовБонусы.ПолучитьСтрокуПоНомеру(НС);
				Долг = ТабОстаткиРасчетовБонусы.Долг;
				Если Долг > БазаРасчета Тогда
					ТабОстаткиРасчетовБонусы.ПолучитьСтрокуПоНомеру(НС);
					ОстатокДолг = Долг - БазаРасчета; // уменьшаем сумму долга на сумму строки документа
					ТабОстаткиРасчетовБонусы.УстановитьЗначение(НС,"Долг", ОстатокДолг);
					Возврат; // Сумма расчетов не привысила сумма остатка долга
				Иначе //Начисляем бонусы на разницу 
					БазаРасчета = БазаРасчета - Долг; // расчитываем бонусы на разницу
					ТабОстаткиРасчетовБонусы.УстановитьЗначение(НС,"Долг", 0); // обнулим остаток
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Счет.ПринадлежитГруппе(СчетПоКоду("36")) = 1 Тогда
		Если ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
			глНачислитьБонусы(Контекст, Субконто1, Субконто2, 1, БазаРасчета,,1);
		Иначе
		    глНачислитьБонусы(Контекст, Субконто1, Субконто2, -1, БазаРасчета,,1);
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры
// - umk

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);
    
	// Подготовим таблицы + umk
	ТабОсновныеПартнеры = СоздатьОбъект("ТаблицаЗначений");
	ТабОсновныеПартнеры.НоваяКолонка("Контрагент");
	ТабОсновныеПартнеры.НоваяКолонка("Партнер");
	
	ТабОстаткиРасчетовБонусы = СоздатьОбъект("ТаблицаЗначений");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("КонтрагентРасчетов");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("Договор");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("ВидДвижения");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("Сумма");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("Долг");
	// - umk
	
	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если РассчитатьШапку() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	КонецЦикла;

    РассчитатьВзаиморасчеты();
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		БалансовыйКурс = 0;
		Если РассчитатьСтроку() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
		ДвиженияСтрока();
	КонецЦикла;
	
	ДвижениеОстаткиРасчетовБонус(); //+ umk
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
        ДвижениеБонусов(); 	
	КонецЦикла;
	
	
	глЗаписатьПроводкиВОперацию(Контекст);
	
	Если Валюта <> Гривня Тогда
	    глПереоценкаСчетов(Контекст, глТаблицаСчетов);
	КонецЕсли;
	
	Операция.СуммаОперации = СуммаПрихода - СуммаРасхода;
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

КассовыйМетодБонусы = ?((ПустоеЗначение(Константа.КассовыйМетодРасчетаБонусов)=0) И (ДатаДок>=Константа.КассовыйМетодРасчетаБонусов),1,0); // + umk