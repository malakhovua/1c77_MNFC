Перем ИтТМЦ, Товар, СуммаУчБезНДС, ПересчКво;       
Перем тбОстатки;
// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Фирма,"Фирма");
    глВыбранЛи(МестоХранения,"Место хранения");
	Если глВсеВыбрано = 1 Тогда
		Если (МестоХранения.Тип = Перечисление.ТипыМестХранения.Склад) и (МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
			глКомментарий("Нельзя указывать РОЗНИЧНЫЙ склад (магазин)",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	глПроверитьТипПодразделения(Подразделение);
    Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
    глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);   
	глВыбранЛи(ВозвратныйОтход,"Возвратный отход",НомерСтроки);   
	Если глВсеВыбрано = 1 Тогда
	    глВыбранЛи(ТМЦ.Счет,"Счет учета для ТМЦ",НомерСтроки);    
		глВыбранЛи(ВидЗатрат,"Вид затрат",НомерСтроки);    
	КонецЕсли;                                         
	глВсеВыбрано = ?(глВсевыбрано = 0,0,глПроверитьАналитикуПоЗатратам(Подразделение, ВидДеятельности, Заказ, Продукция,,,,,НомерСтроки,1));	
	    
	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
    Возврат глВсеВыбрано;
КонецФункции

//===============================
//Колонка - номер колонки в тбОстатки по которой проверяем остаток
Функция ПроверкаОстатка(Колонка)
	СтрСвертки = "1,2,3,4,5,6"; // колонки: 1-Материал,2-ВидЗатрат,3-Подразделение,4-ВидДеятельности,5-Заказ,6-Продукция
	СтрСвертки = Лев(СтрСвертки,Колонка * 2 - 1); //оставляем только те колонки, по которым будем сворачивать таблицу значений 
	тбОстатки.Свернуть(СтрСвертки,"Кво");
	
	тбОстатки.ВыбратьСтроки();
	Пока тбОстатки.ПолучитьСтроку() = 1 Цикл
		Если (ПустоеЗначение(тбОстатки.ПолучитьЗначение(тбОстатки.НомерСтроки,Колонка)) = 0) и (тбОстатки.Кво < 0 ) Тогда
			СтрокаКомментария = "Недостаточно материала " + тбОстатки.Мат + " в незавершенном производстве (";
			Заг = "";
			Для Инд = 2 По Колонка Цикл
				тбОстатки.ПолучитьПараметрыКолонки(Инд,,,,Заг,,,);
				СтрокаКомментария = СтрокаКомментария + Заг + " = " + тбОстатки.ПолучитьЗначение(тбОстатки.НомерСтроки,Инд) + ", ";
			КонецЦикла;          
			СтрокаКомментария = Лев(СтрокаКомментария,СтрДлина(СтрокаКомментария)-2) + ")!";
			глКомментарий(СтрокаКомментария,0);
			Возврат 0;
		КонецЕсли;
	КонецЦикла;
	Возврат 1;
КонецФункции

//===============================
Функция РассчитатьШапку()
	фПроверкиОстатков = 0;
	// сформируем списки значений для отбора
	спВидыДеятельности = СоздатьОбъект("СписокЗначений");
	спВидыЗатрат = СоздатьОбъект("СписокЗначений");
	спПродукции = СоздатьОбъект("СписокЗначений");
	спЗаказы = СоздатьОбъект("СписокЗначений");
	спМатериалы = СоздатьОбъект("СписокЗначений");
	фПоВсемВидамДеятельности = 0; // 0 - устанавливать, 1 - не устанавливать фильтр по видам деятельности 
	фПоВсемПродукциям = 0; // 0 - устанавливать, 1 - не устанавливать фильтр по продукции 
	фПоВсемЗаказам = 0; // 0 - устанавливать, 1 - не устанавливать фильтр по заказам 
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			Возврат 0;
		КонецЕсли;
		Если ВозвратныйОтход = Нет Тогда
		    фПроверкиОстатков = 1;
		КонецЕсли;
		Если ПустоеЗначение(ВидДеятельности) = 1 Тогда
			// если хоть в одной строке есть не заполненный ВидДеятельности, фильтр не накладываем
			фПоВсемВидамДеятельности = 1; 
		КонецЕсли;
		Если ПустоеЗначение(Продукция) = 1 Тогда
			// если хоть в одной строке есть не заполненная Продукция, фильтр не накладываем
			фПоВсемПродукциям = 1;
		КонецЕсли;
		Если ПустоеЗначение(Заказ) = 1 Тогда
			// если хоть в одной строке есть не заполненный Заказ, фильтр не накладываем
			фПоВсемЗаказам = 1;
		КонецЕсли;
		глДобавитьЗначениеБезПовторения(СпВидыДеятельности, ВидДеятельности);
		глДобавитьЗначениеБезПовторения(СпПродукции, Продукция);
		глДобавитьЗначениеБезПовторения(СпВидыЗатрат, ВидЗатрат);
		глДобавитьЗначениеБезПовторения(СпЗаказы, Заказ);
		глДобавитьЗначениеБезПовторения(СпМатериалы, ТМЦ);
	КонецЦикла; 
	        
	Если фПроверкиОстатков = 1 Тогда
		Запрос = СоздатьОбъект("Запрос");
		ТекДок = ТекущийДокумент();
		ТекстЗапр = 	"//{{ЗАПРОС()
		|"+?(СравнитьТА()<0,"Период С ТекДок По ТекДок;","")+"
		|Фир = Регистр.ПроизводственныеЗатраты.Фирма;
		|ВиД = Регистр.ПроизводственныеЗатраты.ВидДеятельности;
		|Под = Регистр.ПроизводственныеЗатраты.Подразделение;
		|Про = Регистр.ПроизводственныеЗатраты.Продукция;
		|ВиЗ = Регистр.ПроизводственныеЗатраты.ВидЗатрат;
		|Зак = Регистр.ПроизводственныеЗатраты.Заказ;
		|Мат = Регистр.ПроизводственныеЗатраты.Материал;
		|_Кво = Регистр.ПроизводственныеЗатраты.Количество;
		|Функция Кво = КонОст(_Кво);
		|Группировка Мат без упорядочивания без групп;
		|Группировка ВиЗ без упорядочивания без групп;
		|Группировка Под без упорядочивания без групп;
		|Группировка ВиД без упорядочивания без групп;
		|Группировка Зак без упорядочивания;
		|Группировка Про без упорядочивания без групп;
		|Условие(Фир = Фирма);
		|Условие(Мат в спМатериалы);
		|Условие(ВиЗ в спВидыЗатрат);";
		
		Если ПустоеЗначение(Подразделение)=0 Тогда
			ТекстЗапр =	ТекстЗапр +"
			|Условие(Под = Подразделение);";
		КонецЕсли;	
		Если (ПустоеЗначение(спВидыДеятельности)=0) и (фПоВсемВидамДеятельности = 0) Тогда
			ТекстЗапр =	ТекстЗапр +"
			|Условие(ВиД в спВидыДеятельности);";
		КонецЕсли;	
		Если (ПустоеЗначение(спЗаказы)=0) и (фПоВсемЗаказам = 0) Тогда
			ТекстЗапр =	ТекстЗапр +"
			|Условие(Зак в спЗаказы);";
		КонецЕсли;		
		Если (ПустоеЗначение(спПродукции)=0) и (фПоВсемПродукциям = 0) Тогда
			ТекстЗапр =	ТекстЗапр +"
			|Условие(Про в спПродукции);";
		КонецЕсли;		
		ТекстЗапр =	ТекстЗапр +"
		|"//}}ЗАПРОС
		;
		Если Запрос.Выполнить(ТекстЗапр) = 0 Тогда
			глКомментарий("Не выполнился запрос по фактическим затратам!",0);
			Возврат 0; 
		КонецЕсли;  
		
		// проверяем остаток материала, что бы не списать больше чем есть
		тбОстатки = СоздатьОбъект("ТаблицаЗначений");
		Запрос.Выгрузить(тбОстатки,,0);
		
		тбОстатки.УстановитьПараметрыКолонки("ВиЗ",,,,"Вид затрат",,,);
		тбОстатки.УстановитьПараметрыКолонки("Под",,,,"Подразделение",,,);
		тбОстатки.УстановитьПараметрыКолонки("ВиД",,,,"Вид деятельности",,,);
		тбОстатки.УстановитьПараметрыКолонки("Зак",,,,"Заказ",,,);
		тбОстатки.УстановитьПараметрыКолонки("Про",,,,"Продукция",,,);
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если (ВозвратныйОтход = Нет) и (ВидЗатрат.СтатьяКалькуляции.ДетализироватьДоМатериалов = 1) Тогда
				тбОстатки.НоваяСтрока();
				тбОстатки.ВиД = ВидДеятельности;
				тбОстатки.Под = Подразделение;
				тбОстатки.Про = Продукция;
				тбОстатки.ВиЗ = ВидЗатрат;
				тбОстатки.Зак = Заказ;
				тбОстатки.Мат = ТМЦ;  
				тбОстатки.Кво = - Кво;
			КонецЕсли;
		КонецЦикла;          
		
		// Для того чтобы корректно проверить остатки по строкам, в которых заполнена не вся аналитика,
		// сворачиваем тбОстатки в цикле, каждый раз по самой правой колонке,
		// пока не свернем по всем аналитикам, которые могут быть не заполнены.
		Для Колонка = 0 По 4 Цикл
			Если ПроверкаОстатка(6 - Колонка) = 0 Тогда
		    	Возврат 0;
			КонецЕсли;
		КонецЦикла;			
		
	КонецЕсли;
	Возврат 1;
КонецФункции

//===============================
Процедура РассчитатьСтроку()
	//Проверка Сумм
	Если (глЭтоДавальческийЗаказ(Заказ) =1)  Тогда
		Если ((ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)	или (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат))  Тогда
			Если СуммаДав>СуммаБезНДС Тогда
			    СуммаДав = СуммаБезНДС;
			КонецЕсли;
		Иначе
			Если СуммаДав>0 Тогда
			    СуммаДав = СуммаБезНДС;
			КонецЕсли;
		КонецЕсли;
	Иначе
		СуммаДав = 0;
	КонецЕсли;
КонецПроцедуры

//===============================
Процедура Проводки(Счет,СписываемыйОстатокТовара,ПрихДокументП)
	
	Если ВозвратныйОтход = Да Тогда
		//Признаком давальческого заказа можно считать забалансовый Счет
		Если (Счет.Забалансовый = 0) Тогда //Не давальческий заказ
			глПроводка(Контекст,Счет,"231",СуммаБезНДС,"Возвратный отход из собственного сырья",СписываемыйОстатокТовара,МестоХранения,ТМЦ,ПрихДокументП,
			ВидДеятельности,Подразделение,, ,,"СП"); 
		Иначе  //Давальческий заказ
			глПроводка(Контекст,ТМЦ.Счет,"231",СуммаБезНДС,"Возвратный отход из давальческого сырья",СписываемыйОстатокТовара,МестоХранения,ТМЦ,ПрихДокументП,
			ВидДеятельности,Подразделение,, ,,"СП"); 
		КонецЕсли;
	Иначе  //Возврат материалов из производства
		//Признаком давальческого заказа можно считать забалансовый Счет
		Если (Счет.Забалансовый = 0) Тогда //Не давальческий заказ
			//Возвращаем полуфабрикат (продукцию)
			Если (СокрЛП(Счет) = "25") или (СокрЛП(Счет) = "26") Тогда
				глПроводка(Контекст,"231",Счет,-СуммаБезНДС,"Возврат собственных полуфабрикатов(продукции) из производства: сторно",-СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
				МестоХранения,ТМЦ,ПрихДокументП, ,,"СП"); 
			ИначеЕсли ИспользоватьСчетаРасходов <> Класс9 Тогда //Возвращаем материалы с проброской по 8 классу
				
				глПроводка(Контекст,"231",ВидЗатрат.Счет,-СуммаБезНДС,"Возврат собственных материаловиз производства: сторно",-СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
				ВидДеятельности,Подразделение,ВидЗатрат, ,,"СП");
				
				глПроводка(Контекст,ВидЗатрат.Счет, Счет,-СуммаБезНДС,"Возврат собственного материалов из производства: сторно",-СписываемыйОстатокТовара, ВидДеятельности,Подразделение,ВидЗатрат,
				МестоХранения,ТМЦ,ПрихДокументП, ,,"СП");
			Иначе  // Не используется 8 класс счетов
				глПроводка(Контекст,"231",Счет,-СуммаБезНДС,"Возврат собственного материалов из производства: сторно",-СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
				МестоХранения,ТМЦ,ПрихДокументП, ,,"СП"); 
			КонецЕсли;
		Иначе   //Давальческий заказ
			//Возвращаем давальческие полуфабрикаты/продукцию	
			Если (СокрЛП(Счет) = "0235") или (СокрЛП(Счет) = "0236") Тогда 
								
				//Сторно полной себестоимости
				глПроводка(Контекст,"ДВ",,-СуммаБезНДС,"Возврат давальческих полуфабрикатов (продукции) из производства: сторно недавальч.",-СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
				,,, ,,"СП");
				
				//Сторно недавальческой части
				глПроводка(Контекст,"231","232",-(СуммаБезНДС-СуммаДав),"Возврат давальческих полуфабрикатов (продукции) из производства: сторно недавальч.",-СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
				МестоХранения,ТМЦ,ПрихДокументП, ,,"СП");
			ИначеЕсли СокрЛП(Счет) = "022" Тогда //Возвращаем давальческие материалы
				
				глПроводка(Контекст,"ДВ",Счет,-СуммаДав,"Возврат давальческих материалов из производства: сторно недавальч",-СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
				МестоХранения,ТМЦ,ПрихДокументП, ,,"СП"); 
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;  //ВозвратныйОтход = Да 
КонецПроцедуры  

// ===============================
Процедура ДвиженияПроизводственныеЗатраты(ФлагПроверкиОстатков,ВсегоСписаноКво,КодОперации)
	Если НомерСтроки <> 0 Тогда
		Регистр.ПроизводственныеЗатраты.ПривязыватьСтроку(НомерСтроки);
	КонецЕсли;
	Регистр.ПроизводственныеЗатраты.Фирма = Фирма;
	Регистр.ПроизводственныеЗатраты.ВидДеятельности = ВидДеятельности;
	Регистр.ПроизводственныеЗатраты.Подразделение = Подразделение;
	Регистр.ПроизводственныеЗатраты.Продукция = Продукция;
	Регистр.ПроизводственныеЗатраты.ВидЗатрат = ВидЗатрат;
	Регистр.ПроизводственныеЗатраты.Заказ = Заказ;
	СписываемыйМатериал = ТМЦ;
	CписываемоеКво = ВсегоСписаноКво;
	Если ВидЗатрат.СтатьяКалькуляции.Выбран() = 1 Тогда
		Если ВидЗатрат.СтатьяКалькуляции.ДетализироватьДоМатериалов = 0 Тогда
		    СписываемыйМатериал = 0;
			CписываемоеКво = 0;
		КонецЕсли;
	КонецЕсли;
	Регистр.ПроизводственныеЗатраты.Материал = СписываемыйМатериал;
	
	Регистр.ПроизводственныеЗатраты.КодОперации = КодОперации;
	
	//ФлагПрихода = 0, Флаг Возврата = 1
	Регистр.ПроизводственныеЗатраты.Количество = -CписываемоеКво;
	Регистр.ПроизводственныеЗатраты.Сумма = -СуммаБезНДС;
	Регистр.ПроизводственныеЗатраты.СуммаДав = -СуммаДав;
	Регистр.ПроизводственныеЗатраты.ДвижениеПриходВыполнить();
		
КонецПроцедуры

// ===============================
Процедура ДвиженияИПроводки()       
	ВремРег = СоздатьОбъект("Регистры");
	Предпочтение = 0;
	ФлагПрихода = 1;
	ФлагВозврата = 0;
	ФлагПеремещения = 1;  	
	        
	МестоХраненияП = МестоХранения;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл		
		СписываемыйОстатокТовара = Кво * Коэффициент;
		// движения по регистру Остатки                                                                          
		глПровестиОстатки(Контекст, ВремРег, Фирма, МестоХранения, ТМЦ,, СписываемыйОстатокТовара, ФлагПрихода, ФлагВозврата,,ФлагПеремещения);
		ПоставщикП = 0;
		Если глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
			ПоставкаП = 0;
			ПрихДокументП = 0;
		Иначе
			ПоставкаП = ТекущийДокумент();
			ПрихДокументП = ТекущийДокумент();
		КонецЕсли;

		СписываемаяСтоимость = СуммаБезНДС;
		
		Если (глЭтоДавальческийЗаказ(Заказ) =1) Тогда
		    СчетП = глПолучитьСчетУчетаТМЦ("Дав",ТМЦ);
		Иначе
			СчетП = ТМЦ.Счет;
		КонецЕсли;
		
		Если (глЭтоДавальческийЗаказ(Заказ) =1) и ((ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция) 
		или (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат))  Тогда
			//для давальческой продукции (полуфабрикатов) СписываемаяПродСтоимость = недавальческая себестоимость
			СписываемаяПродСтоимость = СуммаБезНДС - СуммаДав;
		Иначе
			СписываемаяПродСтоимость = 0;
		КонецЕсли;
			
		КодОперации = СписаниеИзлишков;
		// Приходуем ПАРТИЮ
		глПровестиПартию(Контекст, 1, 0, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП, 
			ПоставкаП, ПрихДокументП, СписываемыйОстатокТовара , СписываемаяСтоимость, СписываемаяПродСтоимость,
			КодОперации, 0 ,0, 0);
	
		// отражаем ПРОИЗВОДСТВЕННЫЕ ЗАТРАТЫ
		КодОперации = ОтражениеЗатрат;
		ДвиженияПроизводственныеЗатраты(?(ВозвратныйОтход = Нет,1,0),СписываемыйОстатокТовара,КодОперации);
		
		// ПРОВОДКИ
		Проводки(СчетП,СписываемыйОстатокТовара,ПрихДокументП);
	КонецЦикла // строки документа
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;  
	
	Если РассчитатьШапку() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;  
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		РассчитатьСтроку();
	КонецЦикла;
	
	ДвиженияИПроводки();    
		
	Операция.СуммаОперации = Итог("СуммаБезНДС");
	Операция.Содержание = Примечание;
	Операция.Записать();
	
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры