Перем тбДолгиПокупателей, тбДолгиПоставщиков;
Перем спКонтрагенты;

// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Фирма,"Фирма");
	Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
    глВыбранЛи(Контрагент,"Контрагент",НомерСтроки);
    глВыбранЛи(Счет,"Счет",НомерСтроки);
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
// Назначение:
// Подготавливает регистры взаиморасчетов для проведения
Процедура РассчитатьВзаиморасчеты()
	спКонтрагенты = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(спКонтрагенты, "Контрагент");
	
	ВремРегистры=СоздатьОбъект("Регистры");
	
	РегПокупатели=ВремРегистры.ВзаиморасчетыПокупателей;
	РегПокупатели.УстановитьЗначениеФильтра("Фирма",Фирма,2);	
	РегПокупатели.УстановитьЗначениеФильтра("Контрагент",спКонтрагенты,2);
	РегПокупатели.УстановитьЗначениеФильтра("Валюта",Гривня,1);
	
	Если ИтогиАктуальны() = 0 Тогда
		РегПокупатели.ВременныйРасчет();
		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;
	
	РегПокупатели.УстановитьЗначениеФильтра("Фирма",Фирма,1);
	РегПокупатели.УстановитьЗначениеФильтра("Контрагент",спКонтрагенты,2);
	РегПокупатели.УстановитьЗначениеФильтра("Валюта",Гривня,1);
	РегПокупатели.ВыгрузитьИтоги(тбДолгиПокупателей,1,1);
	
КонецПроцедуры //РассчитатьВзаиморасчеты

// ===============================
// Назначение:
//		Проводит строку выписки по регистрам ВзаиморасчетыПокупателей и ВзаиморасчетыПоставщиков
Процедура ВзаиморасчетыСтрока()
	//Если (ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление) и 
	//(ВидОплаты = Перечисление.ВидыОплаты.Оплата) или 
	//(ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание) и 
	//(ВидОплаты = Перечисление.ВидыОплаты.Возврат) Тогда
	тбДолги = тбДолгиПокупателей;
	ЗнакОплаты = -1; 
	РегВзаиморасчетов = СоздатьОбъект("Регистр.ВзаиморасчетыПокупателей");
	
	СтавкаНДСПогашения = Константа.БазНДС;
	СуммаНДС = Сумма - Сумма / (1+СтавкаНДСПогашения.Ставка.Получить(ДатаДок));
	НеВклВДВР = 0;
	
	ДокументДоговор_ = ?(Контрагент.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,Договор, Контрагент.БазДоговор); //  + umk заменим договор 
	
	СуммаПогашения = ?(Сумма < 0, -Сумма, Сумма);
	глПогашениеДолга(Контекст,ЗнакОплаты,тбДолги,Фирма,Контрагент,?(Сумма < 0, Перечисление.ВидыОплаты.Возврат, Перечисление.ВидыОплаты.Оплата),
		ТекущийДокумент(),ДокументДоговор_,Перечисление.РежимыОплаты.Автораспределение,СуммаПогашения, СуммаНДС,Гривня,СтавкаНДСПогашения, НеВклВДВР, 1);
	
	глПроводка(Контекст, Счет, "361", Сумма, "Закрытие бонуса", , Контрагент, ДокументДоговор_, , Контрагент, ДокументДоговор_,,,,"БО");
КонецПроцедуры //ВзаиморасчетыСтрока
	
// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);
    
	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	КонецЦикла;

	Если Режим = 0 Тогда
	    РассчитатьВзаиморасчеты();
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ВзаиморасчетыСтрока();
		КонецЦикла;
		
		глЗаписатьПроводкиВОперацию(Контекст);
		
		Операция.СуммаОперации = Итог("Сумма");
		Операция.Содержание = Примечание;
		Операция.Записать();
	КонецЕсли;

	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры