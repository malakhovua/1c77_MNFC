Перем СтарыйКонтрагент;
Перем фДавальческаяПродукция;
Перем СписокДействий;

Перем НачальнаяДатаДокумента;
Перем СтараяДата;
Перем СтарВидНДС;
Перем СтарКатегорияЦен;

// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = Услуга.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;
КонецПроцедуры //ПересчетСтроки

// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
// ===============================
Процедура ИзмРеквизитШапки(Реквизит)
	// пересчитаем суммы НДС в строках табличной части
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	текОтвет = Вопрос("В документе изменен реквизит """+Реквизит+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текОтвет = "Да" Тогда
			// изменим цены
			ЦенаТовара = глВернутьЦену(Услуга, КатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
				// получим параметры цены
				ЦенаТовара.ИспользоватьДату(ДатаДок);
				ЦенаЦены   = ЦенаТовара.Цена;
				ВалютаЦены = ЦенаТовара.Валюта;
				ЕдЦены	   = ЦенаТовара.Единица;
				ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
				ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
				ПересчетСтроки(ЦенаЦены);                                                   
			Иначе
				ПересчетСтроки();
			КонецЕсли;
		ИначеЕсли Реквизит = "ВидНДС" Тогда
			ПересчетСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

// ===============================
//Устанавливаем счет контрагента в зависимости от выбранной валюты
Процедура УстСчетКонтрагента()
	СчетКонтрагента = ?(Валюта=Гривня,СчетПоКоду("36.1"),СчетПоКоду("36.2"));
КонецПроцедуры

// ===============================
Процедура ИзмГлубина()
	Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
		ДатаОплаты=ДатаДок + Глубина;
	Иначе
		ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура УстГлубина()
	Если ВидТорговли = Перечисление.ВидыТорговли.Кредит Тогда
		Глубина=Контрагент.Глубина.Получить(ДатаДок);
	Иначе
		Глубина=0;
	КонецЕсли;
	ИзмГлубина();
КонецПроцедуры

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ИзмГлубина();
КонецПроцедуры

// ===============================
Процедура ИзмВидТорговли()
	Если ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
		Глубина = 0;
		ИзмГлубина();
	КонецЕсли;
КонецПроцедуры //

// ===============================
Процедура ИзмДоговор()
	времДавальческаяПродукция = глЭтоДавальческийЗаказ(Договор);
	Если КоличествоСтрок()<>0 Тогда
		Если фДавальческаяПродукция <> времДавальческаяПродукция Тогда
			глКомментарий(?(фДавальческаяПродукция=1,"Давальческий заказ изменен на недавальческий","Выбран давальческий заказ")+". Табличная часть очищена.");
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	фДавальческаяПродукция = времДавальческаяПродукция;
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			Если Валюта <> Валюта_Прежн Тогда
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
				КонецЕсли;
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;
			ИзмВидТорговли();
			ВидНДС = Договор.ВидНДС;
			ИзмРеквизитШапки("ВидНДС");
		КонецЕсли;
	КонецЕсли;    
КонецПроцедуры //

// ===============================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда
		Если Договор.Выбран()=1 Тогда
			Если Контрагент <> Договор.Контрагент Тогда
			    Договор = 0;
			КонецЕсли;
		КонецЕсли;
		Если СтарыйКонтрагент <> Контрагент Тогда
			// изменили Контрагента
			Если (глВосстановитьЗначение(,"ПодставлятьОсновнойДоговор") = Да)
			и (Фирма = Контрагент.БазДоговор.Фирма) Тогда
				// подставим договор по умолчанию
				Договор = Контрагент.БазДоговор;
			Иначе
				Договор = ПолучитьПустоеЗначение("Документ");
			КонецЕсли;
			ИзмДоговор();
			Если (Договор.Выбран() = 1) и (Договор.Вид() = "Договор") Тогда
				Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
					ВидТорговли = Договор.ВидТорговли;
				КонецЕсли;
			ИначеЕсли ПустоеЗначение(Контрагент.ВидТорговли) = 0 Тогда
				ВидТорговли = Контрагент.ВидТорговли;
			ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;
			Если ПустоеЗначение(Контрагент.КатегорияЦен.Получить(ДатаДок)) = 0 Тогда
				КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
			Иначе
				КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
			КонецЕсли;
			УстГлубина();
			// проверим документ-основание
			Если ПустоеЗначение(ДокументОснование) = 0 Тогда
				Если ДокументОснование.Контрагент <> Контрагент Тогда
					ДокументОснование = 0;
				КонецЕсли;	
			КонецЕсли;	
			СтарыйКонтрагент = Контрагент;
		КонецЕсли;
	Иначе
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		Договор = 0;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмУслуга()
	Если ПустоеЗначение(ВидДеятельности)=1 Тогда
		ВидДеятельности = Услуга.ВидДеятельности;
	КонецЕсли;
КонецПроцедуры //

// ===============================
Процедура ЗаполнитьПоУмолчанию()
	СубконтоВалДох = глВосстановитьЗначение(Контекст,"СубконтоВалДох",Константа.БазВаловыйДоход);
	Подразделение = глВосстановитьЗначение(,"БазПодразделениеПродажи");
	УстСчетКонтрагента();
	УстГлубина();
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		Возврат;
	КонецЕсли;
	глЗаполнитьШапку(Контекст);
	глУстановитьФирму(Контекст);
	Если ПустоеЗначение(Контрагент) = 1 Тогда
		Контрагент=глВосстановитьЗначение(,"ОсновнойПокупатель");
	КонецЕсли;
	ИзмКонтрагент();
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	ЗаполнитьПоУмолчанию();
	СтарыйКонтрагент = Контрагент;
КонецПроцедуры

// ===============================
// основание - счет, договор, заказ
Процедура ВводНаОсновании(Док)
	Если Док.Вид() = "Счет" Тогда
		Если Док.ЧтоПродаем  = Перечисление.ЧтоПродаем.НеоборотныеАктивы Тогда
			Предупреждение("Для реализации основных средств используйте документ ЛиквидацияНеоборАктивов");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	глЗаполнитьШапкуНаОсн(Контекст,Док);
	глУстановитьНомер(Контекст);
	Контрагент = Док.Контрагент;
	Если ПустоеЗначение(ВидТорговли) = 1 Тогда
		ВидТорговли = глВосстановитьЗначение(Контекст,"ВидТорговли",Константа.ОсновнойВидТорговли);
	КонецЕсли;
	Если глЕстьРеквизитШапки("Валюта", Док.Вид()) = Да Тогда
		Если (Док.Валюта <> Гривня) И (Док.Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент) Тогда
			глКомментарий("Валюта документа-основания должна быть Гривня!",0,,"!!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		// установим валюту
		Валюта = Док.Валюта;
		Если (Док.Вид() = "Договор") или (Док.Вид() = "Заказ") Тогда
			Дата_Курса = ДатаДок;
			Курс = глКурсДляВалюты(Валюта,Дата_Курса);
		Иначе
			Дата_Курса=Док.Дата_Курса;
			Курс = Док.Курс;
		КонецЕсли;
	Иначе
		Валюта = Гривня;
		Дата_Курса= ДатаДок;
		Курс = глКурсДляВалюты(Валюта,Дата_Курса);
	КонецЕсли;
	ЗаполнитьПоУмолчанию();

	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
		КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
	КонецЕсли;
	Если Док.Вид() = "Договор" Тогда
		Договор = Док;
	ИначеЕсли Док.Вид() = "Заказ" Тогда
		Если (ПустоеЗначение(Док.Контрагент)=1) Тогда
			глКомментарий("Оказание услуг можно вводить только на основании заказа от контрагента!",0,,"!!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		Договор = Док;
	    // табл. часть
	    Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			Если Док.ПереработкаДавальческогоСырья=0 Тогда
				// если это не давальческий заказ, то выбираем только услуги
				Если Док.Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				// если это давальческий заказ, то выбираем только продукцию
				Если Док.Продукция.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Если ПустоеЗначение(Док.Кво) = 1 Тогда
				Продолжить;
			КонецЕсли;
			глДобавитьТоварВДокумент(Контекст,Док.Продукция,Док.Кво,);
			Ед 			= Док.Ед;
			глИзмЕдин(Контекст);
		КонецЦикла;
	ИначеЕсли Док.Вид() = "Счет" Тогда
	    Контрагент = Док.Контрагент;
	    // табл. часть
	    Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			Если Док.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга Тогда
				глКомментарий("В документе-основании в строке "+Док.НомерСтроки+" не услуга. Эта строка не переносится",1,,"I");
			Иначе
				НоваяСтрока();
				Услуга = Док.ТМЦ;
				ИзмУслуга();
				Ед = Док.Ед;
				Коэффициент = Док.Коэффициент;
				Кво = Док.Кво;
				Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС Тогда
					ЦенаСНДС = Док.ЦенаСНДС;
					глВыч_суммы_накл(Контекст,1);
				Иначе
					ЦенаБезНДС = Док.ЦенаБезНДС;
					глВыч_суммы_накл(Контекст,-1);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура Подбор()                          
	глПодбор(Контекст,"ТМЦ","ДляПодбора")
КонецПроцедуры                               

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)
	глПриОбработкеПодбора(Выб,Контекст);
	// заполним ВидДеятельности по умолчанию
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		ИзмУслуга();
	КонецЦикла;
КонецПроцедуры
                                 
// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	УстСчетКонтрагента();
КонецПроцедуры

// ===============================
Процедура ВыборОснования()    
	// Процедура по кнопке редактирования основания в докумнете
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	ИзмДоговор();
КонецПроцедуры

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	Слои = "Общий,"+Значение;
	Если Значение = "Дополнительный" Тогда
		Если фДавальческаяПродукция = 0 Тогда
			Слои = Слои + ",ВыпускУслуг";
		КонецЕсли;
	КонецЕсли;
	Форма.ИспользоватьСлой(Слои,2);
КонецПроцедуры

// ===============================
Процедура Печать()
	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");
	Таб.ИсходнаяТаблица("Таблица"+СуффиксТаблицы);
	    
	глУстПропись(Валюта);

	ЗаказИнфо = "";
	Если Договор.Выбран() = 1 Тогда
	    Если Договор.Вид() = "Заказ" Тогда
			ЗаказИнфо = " по заказу № " + СокрЛП(Договор.НомерДок) + " от " + Договор.ДатаДок;
		ИначеЕсли Договор.Вид() = "Договор" Тогда
			ЗаказИнфо = " по договору № " + СокрЛП(Договор.НомерДоговора) + " от " + Договор.ДатаДок;
		КонецЕсли;
	КонецЕсли;
	
	НДССтр = "0.00 "+ Валюта.Кратко;
	Если ВидНДС.Ставка.Получить(ДатаДок) <> 0 Тогда
		НДССтр = "20% - " + глФРМВал(Итог("НДС"), Валюта, 1);
	КонецЕсли;
	
	Таб.ВывестиСекцию("Шапка|Исполнитель");
	Таб.ПрисоединитьСекцию("Шапка|"+Контрагент.ВидКонтрагента.Идентификатор());
	Таб.ВывестиСекцию("Заголовок|Все");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если (Услуга.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга) Тогда
			ПечУслуга = Услуга.ПолнНаименование;
		Иначе
			ПечУслуга = "Услуги по производству """+ СокрЛП(Услуга.ПолнНаименование)+"""";
		КонецЕсли;
		Таб.ВывестиСекцию("Строка|Все");
	КонецЦикла;
    Таб.ВывестиСекцию("Итог|Все");
	Таб.ВывестиСекцию("Дно|Исполнитель");
    Таб.ПрисоединитьСекцию("Дно|"+Контрагент.ВидКонтрагента.Идентификатор());
	
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Акт сдачи-приемки работ","");
	глУстПропись(Гривня); 
КонецПроцедуры

// ===============================
Процедура ВыборВариантаПечати()
	Перем ВыбЗначение;
	ВариантыПечати = СоздатьОбъект("СписокЗначений");
	ВариантыПечати.ДобавитьЗначение(1,"Акт оказания услуг");
	ВариантыПечати.ДобавитьЗначение(2,"Списание ТМЦ");
	ВариантыПечати.ДобавитьЗначение(3,"Накладная-требование");
	Если ВариантыПечати.ВыбратьЗначение(выбЗначение,"",,,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;
	Если ВыбЗначение = 1 Тогда
		Печать();
	Иначе
		Если Проведен() * (1-Модифицированность()) * СписыватьМатериалы = 1 Тогда	
			Если ВыбЗначение = 2 Тогда	
		    	глПечатьСписаниеТМЦ(ТекущийДокумент(),,"СписаниеТМЦ");
			ИначеЕсли ВыбЗначение = 3 Тогда
				глПечатьСписаниеТМЦ(ТекущийДокумент(),,"НакладнаяТребование");
			КонецЕсли;
		Иначе     
			глКомментарий("Этот вариант печати доступен после проведения документа, если включен флажок ""Списывать материалы"".",2,,);
		КонецЕсли;	                                                               
	КонецЕсли;
КонецПроцедуры        

// ===============================
Процедура ДатьСкидку()
	Перем ВыбЗначение, ВыбПроцент, ВыбСумма;
	ВариантыСкидок = СоздатьОбъект("СписокЗначений");
	ВариантыСкидок.ДобавитьЗначение(1,"&Процентом по акту");
	ВариантыСкидок.ДобавитьЗначение(2,"Суммой по &акту");
	ВариантыСкидок.ДобавитьЗначение(3,"Процентом по &строке");
	ВариантыСкидок.ДобавитьЗначение(4,"Суммой по строке");

	Если ВариантыСкидок.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;

	Если (ВыбЗначение = 1) или (ВыбЗначение = 3) Тогда
		Если ВвестиЧисло(ВыбПроцент,"Введите процент:",6,2) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	ИначеЕсли (ВыбЗначение = 2) или (ВыбЗначение = 4) Тогда
		Если ВвестиЧисло(ВыбСумма,"Введите сумму:",12,2) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;

	Если ВыбЗначение = 1 Тогда
	    // процентом по документу
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Скидка = Окр(СуммаБезСкидки * ВыбПроцент / 100,2);
			глВыч_суммы_накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли ВыбЗначение = 2 Тогда
		// суммой по документу
		ОсталосьРаспределить = ВыбСумма;

		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если НомерСтроки = КоличествоСтрок() Тогда
			    // в последнюю строку - то что осталось
				Скидка = ОсталосьРаспределить;
			Иначе
				// пропорционально
				Коэф = ?(Итог("СуммаБезСкидки") = 0,0,СуммаБезСкидки/Итог("СуммаБезСкидки"));
				Скидка = Окр(ВыбСумма * Коэф,2);
				ОсталосьРаспределить = ОсталосьРаспределить - Скидка;
			КонецЕсли;
			глВыч_суммы_накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли ВыбЗначение = 3 Тогда
		// процентом по строке
		Скидка = Окр(СуммаБезСкидки * ВыбПроцент / 100,2);
		глВыч_суммы_накл(Контекст,2);
	ИначеЕсли ВыбЗначение = 4 Тогда
		// суммой по строке
		Скидка = ВыбСумма;
		глВыч_суммы_накл(Контекст,2);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;СтараяДата = ДатаДок;
	ПриЗаписиПерепроводить(1);
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
//		Форма.кДействия.Доступность(0);
		СписокДействий = глПолучитьСписокДействий("
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");	    
		Форма.кПодбор.Доступность(0);
		Форма.кФирма.Доступность(0);
		Форма.кВалюта.Доступность(0);
		Форма.кОснование.Доступность(0);
		Форма.кДатьСкидку.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли; 
	
	Если Константа.ИспользоватьСкидку <> Да Тогда
	    Форма.СуммаБезСкидки.Видимость(0);
		Форма.Скидка.Видимость(0);
		Форма.кДатьСкидку.Доступность(0);
	КонецЕсли;
	Форма.ИспользоватьЗакладки(1);
	
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Общий,Основной",2);
	глУстВидимостьЦен(Контекст);
	фДавальческаяПродукция = глЭтоДавальческийЗаказ(Договор);
	СтарыйКонтрагент = Контрагент;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Услуга = Форма.Параметр Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Автор = глПользователь;
	глСохранитьЗначение(Контекст,"СубконтоВалДох",СубконтоВалДох);
	Если ПустоеЗначение(ДокументОснование)=1 Тогда
		ОтборСчетаКонтрагент = Контрагент;
	Иначе
		ОтборСчетаКонтрагент = 0;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
		ФлагСтандОбр = 0;
	    глВыбратьНДС(Контекст);
		ИзмРеквизитШапки("ВидНДС");
	ИначеЕсли Рекв = "ПредставительИсполнителя" Тогда
		ФлагСтандОбр = 0;
	    КонтФирмы = Фирма;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ОбработкаВыбораЗначения(Значение,Рекв,ФлагСтандОбр)
	Если Рекв = "Услуга" Тогда
		Если фДавальческаяПродукция = 0 Тогда
			Если Значение.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга Тогда
			    Предупреждение("Можно выбирать только услугу.");
				ФлагСтандОбр = 0;
			КонецЕсли;
		Иначе
			Если (Значение.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга) и 
				(Значение.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) и 
				(Значение.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат) Тогда
			    Предупреждение("Нельзя выбирать ТМЦ с видом " + Значение.ВидТМЦ+".");
				ФлагСтандОбр = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

// ===============================
Функция УстДоступность()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	Форма.Заголовок(глЗаголовок(Контекст,"Оказание услуг"));
	Форма.Фирма.Видимость(0);
	// доступность в зависимости от слоя
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	
	Если Закл = "Основной" Тогда
		Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
			Если (Касса.Выбран() = 0) Тогда
			    Касса = глПолучитьКассу(Фирма,Гривня);
			КонецЕсли;
			фВидимостьКасса = 1
		Иначе
			фВидимостьКасса = 0;
		КонецЕсли;
		Форма.тКасса.Видимость(фВидимостьКасса);
		Форма.Касса.Видимость(фВидимостьКасса);
		
		фВидимостьКредит = ?(ВидТорговли = Перечисление.ВидыТорговли.Кредит,1,0);
		Форма.тДатаОплаты.Видимость(фВидимостьКредит);
		Форма.тГлубина.Видимость(фВидимостьКредит);
		Форма.Глубина.Видимость(фВидимостьКредит);
	Иначе
		Форма.тМестоХраненияПродукции.Видимость(фДавальческаяПродукция);
		Форма.МестоХраненияПродукции.Видимость(фДавальческаяПродукция);
		Если фДавальческаяПродукция = 1 Тогда
			Форма.ргПодразделение.Заголовок("Подразделение, место хранения");
		Иначе
			Форма.ргПодразделение.Заголовок("Подразделение");
			Форма.ргМестаХранения.Доступность(СписыватьМатериалы);
			Форма.МестоХраненияМатериалов.Доступность(СписыватьМатериалы);
			Форма.тМестоХраненияМатериалов.Доступность(СписыватьМатериалы);
			Форма.МестоХраненияВозвратныхОтходов.Доступность(СписыватьМатериалы);
			Форма.тМестоХраненияВозвратныхОтходов.Доступность(СписыватьМатериалы);
		КонецЕсли;
		
		Если СписыватьМатериалы+ПроизводитьПолуфабрикаты > 0 Тогда 
			Форма.МестоХраненияПолуфабрикатов.Доступность(1);
			Форма.тМестоХраненияПолуфабрикатов.Доступность(1);
		Иначе
			Форма.МестоХраненияПолуфабрикатов.Доступность(0);
			Форма.тМестоХраненияПолуфабрикатов.Доступность(0);
		КонецЕсли;
	КонецЕсли;
	Возврат "";
КонецФункции

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");