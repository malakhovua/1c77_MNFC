// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Фирма,"Фирма");
	Если (ИспользоватьСчетаРасходов = Класс9) 
		И (ПроводитьПоЭлементамЗатрат=1) Тогда
			Сообщить("Флажок ""Проводить по элементам затрат"" не устанавливается, если используется только 9-й класс счетов расходов");
			глВсеВыбрано=0;
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	Если НеФормироватьПроводки = 0 Тогда
	    глВыбранЛи(Счет,"Корреспондирующий счет",НомерСтроки);
	    глВыбранЛи(ВидЗатрат,"Вид затрат",НомерСтроки);
		Если глПроверитьАналитикуПоЗатратам(Подразделение,ВидДеятельности,Заказ,Продукция,,,,,НомерСтроки) = 0 Тогда
			глВсеВыбрано = 0;
		КонецЕсли;
		глПроверитьТипПодразделения(Подразделение,,НомерСтроки);
		Если глВсеВыбрано = 0 Тогда
		    Возврат 0; // дальше нечего и проверять
		КонецЕсли;
		// проверка субконто
		Для Инд = 1 По Счет.КоличествоСубконто() Цикл  
			Если Метаданные.ВидСубконто(Счет.ВидСубконто(Инд).ПорядковыйНомер()).ПустоеСубконто=0 Тогда
				глВыбранЛи(ПолучитьАтрибут("Субконто"+Инд),"Субконто "+Инд,НомерСтроки);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
			
	Возврат глВсеВыбрано;
КонецФункции

// ======================================
Процедура ДвиженияСтрока()
	Регистр.ПроизводственныеЗатраты.Фирма = Фирма;
	Регистр.ПроизводственныеЗатраты.ВидДеятельности = ВидДеятельности;
	Регистр.ПроизводственныеЗатраты.Подразделение = Подразделение;
	Регистр.ПроизводственныеЗатраты.Продукция = Продукция;
	Регистр.ПроизводственныеЗатраты.ВидЗатрат = ВидЗатрат;
	Регистр.ПроизводственныеЗатраты.Материал = Материал;
	Регистр.ПроизводственныеЗатраты.Заказ = Заказ;
	Регистр.ПроизводственныеЗатраты.Количество = Кво;
	Регистр.ПроизводственныеЗатраты.Сумма = Сумма;
	Регистр.ПроизводственныеЗатраты.Кутер = Кутер;					//--- УМК Сандомирский В.Ю. (01.07.14) учет затрат в кутелах
	Регистр.ПроизводственныеЗатраты.КодОперации = "а";
	Регистр.ПроизводственныеЗатраты.ПривязыватьСтроку(НомерСтроки);
	Регистр.ПроизводственныеЗатраты.ДвижениеПриходВыполнить();
КонецПроцедуры 

// ===============================
Процедура ПроводкиТабличнойЧасти()
	Если НеФормироватьПроводки = 1 Тогда
		Возврат;
	КонецЕсли;

	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	ТЗ.Свернуть("Счет,Субконто1,Субконто2,Субконто3,ВидДеятельности,Подразделение,ВидЗатрат,Валюта","СуммаВал,Кво,Сумма");
	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку()=1 Цикл
		Если ПроводитьПоЭлементамЗатрат=0 Тогда
			глПроводка(Контекст,"231",ТЗ.Счет,ТЗ.Сумма,"Затраты произв. характера",
				ТЗ.Кво,ТЗ.ВидДеятельности,ТЗ.Подразделение, ТЗ.ВидЗатрат,ТЗ.Субконто1,ТЗ.Субконто2,ТЗ.Субконто3,ТЗ.Валюта,ТЗ.СуммаВал,"ПЗ");
		Иначе
			глПроводка(Контекст,"231",ТЗ.ВидЗатрат.Счет,ТЗ.Сумма,"Затраты произв. характера",
				ТЗ.Кво,ТЗ.ВидДеятельности,ТЗ.Подразделение, ТЗ.ВидЗатрат,ТЗ.ВидДеятельности,ТЗ.Подразделение,ТЗ.ВидЗатрат,,,"ПЗ");
			глПроводка(Контекст,ТЗ.ВидЗатрат.Счет,ТЗ.Счет,ТЗ.Сумма,"Затраты произв. характера",
				ТЗ.Кво,ТЗ.ВидДеятельности,ТЗ.Подразделение, ТЗ.ВидЗатрат,ТЗ.Субконто1,ТЗ.Субконто2,ТЗ.Субконто3,ТЗ.Валюта,ТЗ.СуммаВал,"ПЗ");
		КонецЕсли;
	КонецЦикла;
	ТЗ = 0;
	
	// проводки по забалансу для давальческих заказов
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ,"ВидДеятельности,Подразделение,Заказ,Сумма");
	ТЗ.НоваяКолонка("ЭтоДавальческийЗаказ","Число",1,0);
	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ТЗ.ЭтоДавальческийЗаказ = глЭтоДавальческийЗаказ(ТЗ.Заказ);
	КонецЦикла;

	ТЗ.Свернуть("ВидДеятельности,Подразделение,ЭтоДавальческийЗаказ","Сумма");
	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если ТЗ.ЭтоДавальческийЗаказ = 1 Тогда
			глПроводка(Контекст,"ДВ", ,ТЗ.Сумма,"Затраты произв. характера",
				,ТЗ.ВидДеятельности,ТЗ.Подразделение, ,,,,,,"ПЗ");
		КонецЕсли;
	КонецЦикла;
	ТЗ = 0;
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()

	глКомментарий("Начало",2,Контекст);
    
	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	КонецЦикла;
		
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ДвиженияСтрока();
	КонецЦикла;

	ПроводкиТабличнойЧасти();
	
	Операция.СуммаОперации = Итог("Сумма");
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры