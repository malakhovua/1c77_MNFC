Перем СтараяДата;
Перем Валюта_Прежн, Курс_Прежн;
Перем спЧтоПриходуем;
Перем СтарЧтоПриходуем;          
Перем НачальнаяДатаДокумента;

// ===============================
Процедура ИзмЧерезПодотчетноеЛицо()
    Если ЧерезПодотчетноеЛицо = 1 Тогда
    	СуммаПодотчета = ?(СуммаПодотчета>0,СуммаПодотчета,Итог("СуммаСНДС"));
    Иначе
    	СуммаПодотчета = 0;
    КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмВидПоставщика()
	СчетКонтрагента = спВидПоставщика.ПолучитьЗначение(спВидПоставщика.ТекущаяСтрока());
	Если СчетКонтрагента = СчетПоКоду("3721") Тогда
		ЧерезПодотчетноеЛицо = 0;         
		ВидТорговли = Перечисление.ВидыТорговли.Предоплата;
		ИзмЧерезПодотчетноеЛицо();
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстВидПоставщика()
	Инд = спВидПоставщика.НайтиЗначение(СчетКонтрагента);
	Если Инд<>0 Тогда
	    спВидПоставщика.ТекущаяСтрока(Инд);
	Иначе
		спВидПоставщика.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	НачальнаяДатаДокумента = ДатаДок;
	// закладки
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительные");
	Форма.ИспользоватьСлой("Общий,Основной,ТабличнаяЧасть",2);
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	
	// в документе нельзя выбирать валюту отличную от гривни, но кнопку выбора оставим ... для единообразия
	Форма.кВалюта.Доступность(0);
	                     
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
//		Форма.кДействия.Доступность(0);
		СписокДействий = глПолучитьСписокДействий("
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");	    
		Форма.кФирма.Доступность(0);               		
		Форма.кОсн.Доступность(0);
		Форма.кВалюта.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	
	// внешний вид
	спВидПоставщика.ДобавитьЗначение(СчетПоКоду("631"),"Поставщик");
	спВидПоставщика.ДобавитьЗначение(СчетПоКоду("3721"),"Подотчетное лицо");
	УстВидПоставщика();
	
	СтарЧтоПриходуем = ЧтоПриходуем;

	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;   
	СтараяДата = ДатаДок;
	глУстВидимостьЦен(Контекст);
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ТМЦ.Вид() = "ТМЦ" Тогда
				Если (ТМЦ = Форма.Параметр) или (ТМЦ.ТМЦДляПрихода.Получить(ДатаДок) = Форма.Параметр) Тогда
				    АктивизироватьСтроку(НомерСтроки);
					Прервать;
				КонецЕсли;			    
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	ОтображаемыеСлои = "Общий," + Значение;           
	//Табличную часть будем показывать только в слоях Основной и Дополнительный
	ОтображаемыеСлои = ОтображаемыеСлои + ",ТабличнаяЧасть";
	Форма.ИспользоватьСлой(ОтображаемыеСлои,2);
КонецПроцедуры

// ===============================
Функция УстДоступность()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	// доступность в зависимости от слоя
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		ДостКасса = 1;
	Иначе
		ДостКасса = 0;
	КонецЕсли;
	Если Закл = "Дополнительный" Тогда
		// слой Дополнительный
		Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
			// для бартера запретим относить НДС на себестоимость
			// нет точной схемы проводок для этого случая
		    Форма.НДСнаЗатраты.Доступность(0);
		Иначе
			Форма.НДСнаЗатраты.Доступность(1);
		КонецЕсли;
		Если (спВидПоставщика.ТекущаяСтрока()>1) Или (ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
			// не доступно для валютного приходования 
			// для приходования за нал не имеет смысла
			Форма.ЧерезПодотчетноеЛицо.Доступность(0);
		Иначе	
			Форма.ЧерезПодотчетноеЛицо.Доступность(1);
		КонецЕсли;	                                   	
		Форма.СуммаПодотчета.Видимость(ЧерезПодотчетноеЛицо);
		Форма.ПодотчетноеЛицо.Видимость(ЧерезПодотчетноеЛицо);
		Форма.лПодотчетноеЛицо.Видимость(ЧерезПодотчетноеЛицо);
	ИначеЕсли Закл = "Основной" Тогда
		фВидимостьКредит = ?(ВидТорговли = Перечисление.ВидыТорговли.Кредит,1,0);
		Форма.тДатаОплаты.Видимость(фВидимостьКредит);
		Форма.тГлубина.Видимость(фВидимостьКредит);
		Форма.Глубина.Видимость(фВидимостьКредит);
		Если СчетКонтрагента.ВидСубконто(1) = ВидыСубконто.Сотрудники Тогда
	    	Форма.ИнфКнопка.Доступность(0);
		Иначе     
	    	Форма.ИнфКнопка.Доступность(1);
		КонецЕсли;	
	КонецЕсли;
	
	Форма.Заголовок(глЗаголовок(Контекст,"Приходная накладная (прочие)"));
	// для всех слоев
	Если (ВидТорговли = Перечисление.ВидыТорговли.Бартер) и (НДСнаЗатраты = 1) Тогда
		НДСнаЗатраты = 0;
	КонецЕсли;
	НазначитьВид(Контрагент,СчетКонтрагента.ВидСубконто(1));
	Форма.Контрагент.НеИзменятьВид(1);
	
	Если СчетКонтрагента = СчетПоКоду("3721") Тогда
        Форма.ВидТорговли.Доступность(0);
    Иначе
    	Форма.ВидТорговли.Доступность(1);
	КонецЕсли;
	Форма.Ед.Доступность(0);

	// закладки
	Если ЧтоПриходуем = Перечисление.ЧтоПриходуем.ОСиНМАиДрНеобМатАктивы Тогда
		НазначитьВид(ТМЦ,"Инвестиции");
	Иначе
		НазначитьВид(ТМЦ,"БланкиСтрогойОтчетности");
	КонецЕсли;
	Форма.ТМЦ.НеИзменятьВид(1);
	
	Если (глПользователь.фПривелегииДатаЗапрета = 1) И  (Выбран() = 1) Тогда  //--- УМК Сандомирский В.Ю. (13.08.14)  возможно менять договор привелегированым
		Форма.кОсн.Доступность(1);
	КонецЕсли;

	Возврат "";
КонецФункции  
                 
// ===============================
Процедура ИзмСчетКонтрагента()
	Если ПустоеЗначение(СчетКонтрагента) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбранный счет не является счетом учета взаиморасчетов!",1,,"!");
		СчетКонтрагента = 0;  
	ИначеЕсли СчетКонтрагента.Валютный = 1 Тогда
		глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
		СчетКонтрагента = 0;       
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	ИзмСчетКонтрагента();
КонецПроцедуры	

// ======================================
Процедура ИзмВидНДС()
	// пересчитаем суммы НДС в строках табличной части
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
			глВыч_Суммы_Накл(Контекст,-1);
		Иначе
			глВыч_Суммы_Накл(Контекст,1);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;
	Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
		ДатаОплаты=ДатаДок + Глубина;	
	Иначе	
		ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстГлубина() 
	// Формирует и показывает дату оплаты и глубину кредита
	Если ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
		Глубина=0;
	Иначе	
		Если ПустоЕзначение(Контрагент) = 0 Тогда
			Если Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) <> 0 тогда
				Если Глубина <> Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) тогда
					Глубина=Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
				КонецЕсли;	
			КонецЕсли;	
			ИзмГлубина();
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры //Выбор Глубины

// ===============================
Процедура ИзмВидТорговли()
	УстГлубина();
КонецПроцедуры         

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ИзмГлубина();
КонецПроцедуры

// ===============================
Процедура ИзмДоговор()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			// вид торговли и валюта есть только в договоре
			Если Договор.Валюта <> Гривня Тогда
				Предупреждение("Нельзя выбирать договор с валютой "+Договор.Валюта+" в качестве договора для документа " + Вид()+".");
				Договор = 0;
				Возврат;
			КонецЕсли;				
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			Если Валюта <> Валюта_Прежн Тогда
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
				КонецЕсли;
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;				
			ВидНДС = Договор.ВидНДС;
			ИзмВидНДС();
		КонецЕсли;
	КонецЕсли;    
КонецПроцедуры

// ===============================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран()=1 Тогда
		Если Контрагент.Вид()="Контрагенты" Тогда
			Если Договор.Выбран() = 1 Тогда
			    Если Договор.Контрагент <> Контрагент Тогда
					Договор = 0;
			    КонецЕсли;
		    КонецЕсли;
			// подставляем БазДоговор в зависимоти от константы
			Если (Константа.ПодставлятьОсновнойДоговор = Да) 
			И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
			И (ПустоеЗначение(Договор)=1) Тогда
				Если Фирма = Контрагент.БазДоговор.Фирма Тогда
					Договор = Контрагент.БазДоговор;
					ИзмДоговор();
				КонецЕсли;
			КонецЕсли;
			Если Договор.Выбран() = 1 Тогда
				Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
					Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
						ВидТорговли = Договор.ВидТорговли;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;	                      		
			Если (ПустоеЗначение(Контрагент.ВидТорговли) = 0)
			И (ПустоеЗначение(ВидТорговли) = 1) Тогда   
				Если Контрагент.ВидТорговли <> Перечисление.ВидыТорговли.Кредит	Тогда
				    ВидТорговли = Контрагент.ВидТорговли;      
				Иначе	
					ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
				КонецЕсли;
			ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;    
			КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
			Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
				КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
			КонецЕсли;      												
			УстГлубина();		
			Если ПустоеЗначение(ДокументОснование) = 0 Тогда
				Если ДокументОснование.Контрагент <> Контрагент Тогда
					ДокументОснование = 0;
				КонецЕсли;	
			КонецЕсли;	
	    Иначе
			ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			Договор = 0;
			ДокументОснование = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ЗаполнитьПоУмолчанию()
	// заполняем все то, что общее для ввода нового и для ввода на основании
	СчетКонтрагента = СчетПоКоду("631");
	УстВидПоставщика();
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	СубконтоВалРасх = глВосстановитьЗначение(Контекст,"СубконтоВалРасх", Константа.БазВаловыйРасход);
	УстГлубина();		
КонецПроцедуры

// ===============================
Процедура ИзмЧтоПриходуем()
	Если (КоличествоСтрок()<>0) и (СтарЧтоПриходуем<>ЧтоПриходуем) и (Сокрлп(СтарЧтоПриходуем)<>"") Тогда
	    ЧтоПриходуем = СтарЧтоПриходуем;
	    Предупреждение("Сначала удалите все строки!");
	Иначе
		СтарЧтоПриходуем = ЧтоПриходуем;
	КонецЕсли;
КонецПроцедуры

// ===============================
Функция ИзмСуммаПодотчета(Интерактивно=1)
	Если СуммаПодотчета > Окр(Итог("СуммаСНДС"),2) Тогда
		глКомментарий("Сумма погашения подотчета не должна превышать сумму накладной",0,,"!");
		Если Интерактивно = 1 Тогда
			СуммаПодотчета = Итог("СуммаСНДС");
		КонецЕсли;
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции
                             
// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Закупка");
КонецПроцедуры

// ===============================
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да,"_Укр","");
	Таб.ИсходнаяТаблица("Таблица"+СуффиксТаблицы);

	глУстПропись(Валюта);
	ПечОснование=глСтрокаОснование(Контекст,Договор,ДокументОснование);
	Таб.ВывестиСекцию("Шапка1");
	Таб.ВывестиСекцию("Шапка2");
	Ном = 1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;
	глУстПропись(Гривня);
	СуммаГрнПрописью = Формат(Итог("СуммаСНДС"),"ЧПДС");
	Таб.ВывестиСекцию("Дно1");
	Таб.ВывестиСекцию("Дно2");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ:Приходная накладная","");
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст,Рекв);
		ФлагСтандОбр = 0;
		ИзмВидНДС();
	ИначеЕсли Рекв="ЧтоПриходуем" Тогда                               
		спЧтоПриходуем.ВыбратьЗначение(ЧтоПриходуем,,,,2);                
		ФлагСтандОбр = 0;                 
		ИзмЧтоПриходуем(); 
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВводНового(Копируем)
	Если Копируем = 1 Тогда
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;
	
	глУстановитьФирму(Контекст);
	
	Контрагент = глВосстановитьЗначение(,"ОсновнойПоставщик");
	ИзмКонтрагент();
	ЧтоПриходуем = Перечисление.ЧтоПриходуем.ОСиНМАиДрНеобМатАктивы;
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	
	ЗаполнитьПоУмолчанию();
КонецПроцедуры
       
// ===============================
Функция ПроверкаОснования(Док)	
                     
	Если глЕстьРеквизитШапки("ЧтоПриходуем",Док.Вид()) = Да Тогда
		Если Док.ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ Тогда
			Предупреждение("Для приходования запасов используйте документ Приходная накладная (запасы)");
			Возврат 0;
		КонецЕсли;	
	КонецЕсли;	

	Если глЕстьРеквизитШапки("Валюта",Док.Вид()) = Да Тогда
		Если Док.Валюта <> Гривня Тогда
			Предупреждение("Для приходования за валюту используйте документ ГТД");
			Возврат 0;
		КонецЕсли;	
	КонецЕсли;	                  
	
	Возврат 1;
КонецФункции

// ===============================
// основание - счет входящий, договор, остатки взаиморасчетов
Процедура ВводНаОсновании(Док)
	Если ПустоеЗначение(Док) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	   
	
	Если ПроверкаОснования(Док) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	   
	
	ЗаполнитьПоУмолчанию();
	Фирма = Док.Фирма;
	глЗаполнитьШапкуНаОсн(Контекст,Док);
	глУстановитьНомер(Контекст);

	Контрагент = Док.Контрагент;
	ИзмКонтрагент();

	ВидТорговли = Док.ВидТорговли;
	Валюта = Док.Валюта;
	Если Док.Вид() = "Договор" Тогда
		Договор = Док;
		Дата_Курса=ДатаДок;
		Курс_Прежн = Курс;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	Иначе	
		Если глЕстьРеквизитШапки("Дата_Курса",Док.Вид()) = Да Тогда
			Дата_Курса=Док.Дата_Курса;
		Иначе
			Дата_Курса=Док.ДатаДок;
		КонецЕсли;
		Курс = Док.Курс;
		Валюта_Прежн = Валюта;
		Курс_Прежн = Курс;
	КонецЕсли;	
	СчетКонтрагента = СчетПоКоду(?(Док.Валюта = Гривня, "631", "632"));
	ЧтоПриходуем = Перечисление.ЧтоПриходуем.ОСиНМАиДрНеобМатАктивы;
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
	Попытка
		ВидНДС = Док.ВидНДС;
	Исключение
		ВидНДС = глВосстановитьЗначение(,"БазНДС");
	КонецПопытки;	
	Если Док.Вид() = "Договор" Тогда
		Договор = Док;			    
	КонецЕсли;	
	
	Если Док.Вид() = "Договор" Тогда
	ИначеЕсли Док.Вид()="СчетВходящий" Тогда
		Если Док.ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ Тогда
			Предупреждение("Для приходования запасов используйте документ Приходная накладная (запасы)");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;	
		Если Док.Договор.Выбран() = 1 Тогда
		    Договор = Док.Договор;
		КонецЕсли;
		ЧтоПриходуем = Док.ЧтоПриходуем;
		КатегорияЦен = Док.КатегорияЦен;
		Если КоличествоСтрок() = 0 Тогда
			// табл. часть       
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку()=1 Цикл
				НоваяСтрока();
				ТМЦ = Док.ТМЦ;
				Ед = Док.Ед;
				Коэффициент = Док.Коэффициент;
				ЦенаБезНДС = Док.ЦенаБезНДС;
				ЦенаСНДС = Док.ЦенаСНДС;
				Кво = Док.Кво;
				Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС Тогда
					ЦенаСНДС = Док.ЦенаСНДС;
					глВыч_суммы_накл(Контекст,1);				
				Иначе	
					ЦенаБезНДС = Док.ЦенаБезНДС;
					глВыч_суммы_накл(Контекст,-1);				
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Попытка
		ВидТорговли = Договор.ВидТорговли;
	Исключение КонецПопытки;	

КонецПроцедуры           

// ===============================
Процедура ВыборОснования()  
	// Процедура по кнопке редактирования основания в докумнете
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;    
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ПроверкаОснования(ДокументОснование) = 0 Тогда 
			ДокументОснование = СтарОснование;              		
		КонецЕсли;	
		Если (ДокументОснование <> СтарОснование)
		И (ДокументОснование.Вид() <> "РасходыНаПриобретение") Тогда
			ВводНаОсновании(ДокументОснование);	
		КонецЕсли;	
	КонецЕсли;	          
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	

// ===============================
Процедура ПриЗаписи()
	Автор = глПользователь;
	ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	глСохранитьЗначение(Контекст,"СубконтоВалРасх",СубконтоВалРасх);
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Если ИзмСуммаПодотчета(0)=0 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции



спЧтоПриходуем = СоздатьОбъект("СписокЗначений");
спЧтоПриходуем.ДобавитьЗначение(Перечисление.ЧтоПриходуем.ОСиНМАиДрНеобМатАктивы);
спЧтоПриходуем.ДобавитьЗначение(Перечисление.ЧтоПриходуем.БланкиСтрогойОтчетности);    


// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ОбновлениеЦен,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");
