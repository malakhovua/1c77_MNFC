Перем СтруктИзменений;
Перем НачальнаяДатаДокумента;
Перем ТЗЗак;
Перем КвоФарша;
Перем ОтношениеРазницыКФаршу, Термопотеря, Пиктограмма;
Перем КатегорияЦенДо;

Процедура ИзмКво() Далее
Функция ПотериФарша() Далее

Функция РасчетСтроки()
	СтрЗаказа = "";
	КвоФарша = 0;
	Термопотеря = 0;
	
	ТЗЗак.ВыбратьСтроки();
	Пока ТЗЗак.ПолучитьСтроку() = 1 Цикл
		Если ТЗЗак.Продукция = Продукция Тогда
			КвоФарша = КвоФарша + ТЗЗак.КвоФаршаФакт;			
			Термопотеря = ТЗЗак.ТП;
			
			СтрЗаказа = СтрЗаказа + ?(СокрЛП(Заказ.КомментСтр) = "", "", ?(СтрЗаказа = "", "", "
			|") + СокрЛП(Заказ.КомментСтр));
		КонецЕсли;
	КонецЦикла;

	ПФарша = ПотериФарша(); 
	КвоФарша = (КвоФарша - ПФарша) * ПроцентВыпуска / 100;	
	Разн = КвоФарша - КвоГППриемки;
	
	ОтношениеРазницыКФаршу = ?(КвоФарша = 0, 0, Разн / КвоФарша) * 100;
	Пиктограмма = 0;
	
	Стр = 0;
	Если ОтношениеРазницыКФаршу > Термопотеря Тогда
		Пиктограмма = 4;
	ИначеЕсли (Термопотеря - ОтношениеРазницыКФаршу > 0) И (ОтношениеРазницыКФаршу < 0) Тогда
		Пиктограмма = 3;
	КонецЕсли;
	
	Возврат Окр(КвоФарша, 0);	
КонецФункции

Процедура ОбновитьЦены()
	
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку() = 1 Цикл
		ЦенаТовара = глВернутьЦену(Продукция, КатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
				ЦенаТовара.ИспользоватьДату(ДатаДок);
				ЦенаЦены = ЦенаТовара.Цена;
				ВалютаЦены = ЦенаТовара.Валюта;
				ЕдЦены = ЦенаТовара.Единица;
				Попытка		              
					Если ПустоеЗначение(Коэффициент) = 1 Тогда
						ЦенаЦены = ЦенаЦены * 1 / ЕдЦены.Коэффициент;
					Иначе     
						ЦенаЦены = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
					КонецЕсли;	
				Исключение       
					// если на дату документа у единицы еще не было коэффициента
					ЦенаЦены = 0;
					//глКомментарий(Шаблон("[ТекущийДокумент()] .[Продукция] - У единицы [ЕдЦены] на дату [ДатаДок] не установлен коэффициент."),1);
				КонецПопытки;
				
				ЦенаСНДС = ЦенаЦены;
				СуммаСНДС = ЦенаСНДС * КвоГПприемки;

			КонецЕсли;
		//глПриИзмененииТовара(Контекст, 1);
	КонецЦикла;

КонецПроцедуры

Процедура УстановитьФиксациюКолонок()
	
	КолКолонок = ?(ФиксацияКолонок=1,4,0);
	
	ФормаРасш = СоздатьОбъект("РасширениеФормы");
	ФормаРасш.УстановитьФорму(Форма);
	ФормаРасш.ФиксироватьМногострочнуюЧасть(КолКолонок);
	
КонецПроцедуры

//Все материалы из группы Сырью с признаком материал из документа 
//Списание + umk
Функция КоличествоСписанныхМатериаловСырья()
	
	КолМатериалов = 0;
	
	Если Заказ.Выбран() = 0 Тогда
		Возврат КолМатериалов;
	КонецЕсли;
	Док = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(,,Заказ);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если Док.Вид() = "СписаниеТМЦВПроизводство" Тогда
			Если Док.ПродукцияШ = Продукция Тогда
				Док.ВыбратьСтроки();
				Пока Док.ПолучитьСтроку() = 1 Цикл
					Если (Док.ТМЦ.Родитель.Код = Константа.КодГруппаСырье) И (Док.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Материал) Тогда
						КолМатериалов = КолМатериалов + Док.Кво;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат КолМатериалов;
	
КонецФункции

// ===============================
Процедура ИзмПодразделение()
	Если Подразделение.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;	
    МестоХраненияПродукции = Подразделение.СкладГотовойПродукции;
	МестоХраненияВозвратныхОтходов = Подразделение.СкладГотовойПродукции;
КонецПроцедуры //ИзмПодразделение

// ===============================
Процедура ИзмПродукция()
	Если глПроверкаТовараВДокументе(Контекст,Продукция) = Нет Тогда
		Продукция = глВосстановитьЗначение(Контекст,"Продукция");
	ИначеЕсли Продукция.Выбран() = 1 Тогда
		глУстановкаБазЕд(Контекст,Продукция,Продукция.ЕдиницаПоУмолчанию.Единица);
		Если Кво = 0 Тогда
			Кво = 1;
		КонецЕсли;               
	КонецЕсли;
	
	глПриИзмененииТовара(Контекст,1);
	глВыч_Суммы_Накл(Контекст);
	
КонецПроцедуры //ИзмПродукция

// ===============================
Процедура ИзмКвоБрак()
	Если КвоБрак > Кво Тогда
	    КвоБрак = Кво;
	КонецЕсли;
КонецПроцедуры //ИзмСписыватьМатериалы

// ===============================
Функция УстДоступность()   
	Форма.Заголовок(глЗаголовок(Контекст,"Выпуск продукции"));
	//Форма.кПечать.Доступность(Проведен() * (1-Модифицированность()) * СписыватьМатериалы);
	Если СписыватьМатериалы = 1 Тогда
	    Форма.МестоХраненияМатериалов.Доступность(1);
		Форма.тМестоХраненияМатериалов.Доступность(1);
		Форма.МестоХраненияВозвратныхОтходов.Доступность(1);
		Форма.тМестоХраненияВозвратныхОтходов.Доступность(1);
	Иначе                                                
		Форма.МестоХраненияМатериалов.Доступность(0);
		Форма.тМестоХраненияМатериалов.Доступность(0);
		Форма.МестоХраненияВозвратныхОтходов.Доступность(0);
		Форма.тМестоХраненияВозвратныхОтходов.Доступность(0);
	КонецЕсли;
	
	Если СписыватьМатериалы+ПроизводитьПолуфабрикаты > 0 Тогда 
		Форма.МестоХраненияПолуфабрикатов.Доступность(1);
		Форма.тМестоХраненияПолуфабрикатов.Доступность(1);
	Иначе
		Форма.МестоХраненияПолуфабрикатов.Доступность(0);
		Форма.тМестоХраненияПолуфабрикатов.Доступность(0);
	КонецЕсли;
	
	Форма.ТолькоНедостающие.Доступность(ПроизводитьПолуфабрикаты);
	Если (ПроизводитьПолуфабрикаты = 0) И (ТолькоНедостающие = 1) Тогда
		ТолькоНедостающие = 0;
	КонецЕсли;
	
	Возврат "";
КонецФункции

//================================
Процедура УстановитьВидимость()
	
	Форма.МестоХраненияПромпереработка.Видимость(Эксперимент);
	Форма.ЗагПромпереработка.Видимость(Эксперимент);
		
КонецПроцедуры

//================================
Процедура ЭкспериментПриИзменении()
	
	УстановитьВидимость();
	
	Если (ПустоеЗначение(МестоХраненияПромпереработка) = 1) И (Эксперимент = 1) Тогда
		МестоХраненияПромпереработка = Константа.УМК_СкладЦех;
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Процедура ОбработкаВыбораЗначения(ВыбЗнач,ИдентЭлемДиалога,ФлагСтандОбр)
	Если ИдентЭлемДиалога = "Заказ" Тогда
		//Если глПроверитьФирму(Контекст,ВыбЗнач) = 0 Тогда
		//	ФлагСтандОбр = 0;
		//КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры

// ======================================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Если глЕстьИзменения(Контекст, СтруктИзменений, "") = 1 Тогда		
		Автор = глПользователь;
	КонецЕсли;
	АвтоВремяОтключить();
	Попытка
		ЗаказДД = 1;
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Заказ.Выбран() = 1 Тогда
			    Если Заказ.ДатаДок = ДатаДок Тогда
			        ЗаказДД = 0;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если ЗаказДД = 0 Тогда
			АвтоВремяОтключить();
			// время устанавливаем в зависимости от уровня передела
			ПолучитьСтрокуПоНомеру(1);
			Урн = 2;
			Если Продукция.Выбран() = 1 Тогда
			    Урн = Продукция.УровеньПередела.Получить(ДатаДок);
			КонецЕсли;
			
			УстановитьВремя(17, (2-Урн)*15+10, 0);
		Иначе
			//УстановитьВремя(0, (2-Урн)*15+10, 0);
			//УстановитьВремя(0, (2-Урн), 0);
			//УстановитьВремя(10, 0, 1);
			Ч = Лев(Константа.ВремяЗаписиРН, 2);
			М = Сред(Константа.ВремяЗаписиРН, 4, 2);
			//Если (ТекВр >= НВремя) и (ТекВр <= КВремя) Тогда
			//    УстановитьВремя(КЧасы, КМинуты, 0);
			//Иначе
			УстановитьВремя(Ч,М,0);
		КонецЕсли;
	Исключение 
///		Сообщить(ОписаниеОшибки());
	КонецПопытки;	
КонецПроцедуры
            
// ===============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	МестоХранения = глВосстановитьЗначение(Контекст,"СкладМатериалов");
	МестоХраненияПромпереработка = Константа.УМК_СкладЦех;
	КатегорияЦен = Константа.УМК_ПрайсоваяКатегорияЦен;
КонецПроцедуры

Процедура ЗаполнитьИзЗаказа(Знач Дк)
	Док = Дк;
	ТЗБыло = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗБыло);

	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();			
		КонецЕсли;
	КонецЕсли;
	
	СписТМЦ = СоздатьОбъект("СписокЗначений");
	Док.ВыгрузитьТабличнуюЧасть(СписТМЦ, "Продукция");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ, СписТМЦ, 1);
	Ит.ИспользоватьСубконто(ВидыСубконто.Договора, Док, 2);
	Ит.Опции(1);
	Ит.ВыполнитьЗапрос(,?(ТекущийДокумент().Выбран() = 0, КонецРассчитанногоПериодаБИ(), СформироватьПозициюДокумента(ТекущийДокумент(), -1)), "ОЖ");
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	Док.ВыгрузитьТабличнуюЧасть(ТЗ, "Продукция,Кво,КвоФаршаФакт,Ед,Коэффициент,КвоФаршаПлан,КомментСтр,ПотериФарша");
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		КвоФаршаРасчётное = ТЗ.КвоФаршаФакт - ТЗ.ПотериФарша;
		ТЗ.Кво = КвоФаршаРасчётное - (КвоФаршаРасчётное * ТЗ.Продукция.ПроцПотерь.Получить(Док.ДатаДок)/100);		
	КонецЦикла;
	
	ТЗ.Сортировать("Продукция");
	Инд = 1;
	Пока Инд <= ТЗ.КоличествоСтрок() Цикл
		ТЗ.ПолучитьСтрокуПоНомеру(Инд);
		Если Инд > 1 Тогда
		    Если ТЗ.Продукция = ТЗ.ПолучитьЗначение(Инд-1, "Продукция") Тогда
		        ТЗ.УстановитьЗначение(Инд-1, "КвоФаршаПлан", ТЗ.ПолучитьЗначение(Инд-1, "КвоФаршаПлан") + ТЗ.КвоФаршаПлан);
				ТЗ.УстановитьЗначение(Инд-1, "Кво", ТЗ.ПолучитьЗначение(Инд-1, "Кво") + ТЗ.Кво);
				Коммент = СокрЛП(ТЗ.ПолучитьЗначение(Инд-1, "КомментСтр"));
				ТЗ.УстановитьЗначение(Инд-1, "КомментСтр", Коммент + ?(Коммент = "", "", "; ") + СокрЛП(ТЗ.КомментСтр));
				ТЗ.УдалитьСтроку(Инд);
				Продолжить;
		    КонецЕсли;
		КонецЕсли;
		Инд = Инд + 1;
	КонецЦикла;

	ТЗ.Свернуть("Продукция,Ед,Коэффициент,КомментСтр", "КвоФаршаПлан,Кво");
	//Ит.ВыполнитьЗапрос(,ТекущаяДата(), "ОЖ");

	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку()>0 Цикл
		Если (ТЗ.Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) 
		   И (ТЗ.Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат) Тогда
			глКомментарий("Пропускается ТМЦ "+СокрЛП(ТЗ.Продукция)+" с видом """ + ТЗ.Продукция.ВидТМЦ + """.",2,,"I");	
		ИначеЕсли ТЗ.Кво = 0 Тогда
		    глКомментарий("Пропускается ТМЦ "+СокрЛП(ТЗ.Продукция)+" с количеством = 0.",2,,"I");	
		Иначе
			Если Ит.ПолучитьСубконто(1,1, ТЗ.Продукция) = 1 Тогда
				НоваяСтрока();
				Продукция = ТЗ.Продукция;
				Ед = ТЗ.Ед;
				Коэффициент = ТЗ.Коэффициент;
				КвоНорма = ТЗ.КвоФаршаПлан;				
				Кво = Ит.СКД("К");
				ПроцентВыпуска = (Кво / ТЗ.Кво) * 100;
				Заказ = Док;
				КомментарийЗаказа = ТЗ.КомментСтр;
				
				Стр = 0;
				Если ТЗБыло.НайтиЗначение(ТЗ.Продукция, Стр, "Продукция") = 1 Тогда
				    КвоГППриемки = ТЗБыло.ПолучитьЗначение(Стр, "КвоГППриемки");
					КомментСтр = ТЗБыло.ПолучитьЗначение(Стр, "КомментСтр");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		ПолучитьСтрокуПоНомеру(1);
		Если Продукция.УровеньПередела.Получить(ДатаДок) > 0 Тогда
		    МестоХраненияПродукции = глВосстановитьЗначение(Контекст,"СкладМатериалов");
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

Процедура ИзЗаказа()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Полностью");
	СпМеню.ДобавитьЗначение(11, "Добавить заказ");
	СпМеню.ДобавитьЗначение(2, "Только количество");
	СпМеню.ДобавитьЗначение(3, "Только количество в строке");
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если (Зн = 1) Тогда
		Если КоличествоСтрок() <> 0 Тогда
			ПолучитьСтрокуПоНомеру(1);
			ЗаполнитьИзЗаказа(Заказ);
		Иначе
			Зак = СоздатьОбъект("Документ.Заказ");
			Если Зак.Выбрать("Выберите заказ", "ФормаСписка") = 1 Тогда
			    ЗаполнитьИзЗаказа(Зак.ТекущийДокумент());
			КонецЕсли;
		КонецЕсли;	
	ИначеЕсли Зн = 11 Тогда
		Зак = СоздатьОбъект("Документ.Заказ");
		Если Зак.Выбрать("Выберите заказ", "ФормаСписка") = 1 Тогда
		    ЗаполнитьИзЗаказа(Зак.ТекущийДокумент());
		КонецЕсли;		
	ИначеЕсли ((Зн = 2) или (Зн = 3)) и (КоличествоСтрок() > 0) Тогда
		НомСтр = НомерСтроки;
		ПолучитьСтрокуПоНомеру(1);
		Ит = СоздатьОбъект("БухгалтерскиеИтоги");

		Если Зн = 2 Тогда
			СписТМЦ = СоздатьОбъект("СписокЗначений");
			Заказ.ВыгрузитьТабличнуюЧасть(СписТМЦ);
			Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ, СписТМЦ, 1);
		Иначе
			ПолучитьСтрокуПоНомеру(НомСтр);
			Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ, Продукция, 1);		    
		КонецЕсли;

		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		Заказ.ВыгрузитьТабличнуюЧасть(ТЗ, "Продукция,Кво,КвоФаршаФакт,Ед,Коэффициент,КвоФаршаПлан,КомментСтр,ПотериФарша");
		Заказ.ВыбратьСтроки();
		Пока Заказ.ПолучитьСтроку() = 1 Цикл
			КвоФаршаРасчётное = Заказ.КвоФаршаФакт - Заказ.ПотериФарша;
			Заказ.Кво = КвоФаршаРасчётное - (КвоФаршаРасчётное * Заказ.Продукция.ПроцПотерь.Получить(Заказ.ДатаДок)/100);		
		КонецЦикла;
		
		Ит.ИспользоватьСубконто(ВидыСубконто.Договора, Заказ, 2);
		Ит.Опции(1);
		Ит.ВыполнитьЗапрос(,?(ТекущийДокумент().Выбран() = 0,ТекущаяДата(),СформироватьПозициюДокумента(ТекущийДокумент(), -1)), "ОЖ");
		ПолучитьСтрокуПоНомеру(НомСтр);
		
		Если Зн = 2 Тогда
		    ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Если Ит.ПолучитьСубконто(1,1, Продукция) = 1 Тогда
					Кво = Ит.СКД("К");
				Иначе
					Кво = 0;
				КонецЕсли;
				Стр = 0;
				Если ТЗ.НайтиЗначение(Продукция, Стр, "Продукция") = 1 Тогда
					ПроцентВыпуска = (Кво / ТЗ.ПолучитьЗначение(Стр, "Кво")) * 100;
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если Ит.ПолучитьСубконто(1,1, Продукция) = 1 Тогда
				Кво = Ит.СКД("К");
			Иначе
				Кво = 0;
			КонецЕсли;
			Стр = 0;
			Если ТЗ.НайтиЗначение(Продукция, Стр, "Продукция") = 1 Тогда
				ПроцентВыпуска = (Кво / ТЗ.ПолучитьЗначение(Стр, "Кво")) * 100;
			КонецЕсли;			
		КонецЕсли;
		
		
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВводНаОсновании(Док)
	Фирма = Док.Фирма;
	глУстановитьНомер(Контекст);
	
	//Подразделение = глВосстановитьЗначение(,"БазПодразделениеПроизводство");
	Подразделение = Док.Подразделение;
    Если Подразделение.Владелец <> Фирма Тогда
        Подразделение = 0;
	КонецЕсли;

	//Если глВосстановитьЗначение(,"БазВидДеятельности").ПозаказноеПроизводство = Да Тогда
	//    
	//КонецЕсли;
	ВидДеятельности = глВосстановитьЗначение(,"БазВидДеятельности");
	МестоХраненияПродукции = глВосстановитьЗначение(Контекст,"ОсновнойСклад");	
	Если Док.Вид() = "Заказ" Тогда
		ЗаполнитьИзЗаказа(Док);
	ИначеЕсли Док.Вид() = "СписаниеТМЦВПроизводство" Тогда		
		НоваяСтрока();
		Продукция = Док.ПродукцияШ;
		Заказ = Док.ДокументОснование;
		ИзмПродукция();
		Зак = Заказ;
		Зак.ВыбратьСтроки();
		Пока Зак.ПолучитьСтроку() = 1 Цикл
			Если (Зак.Продукция = Продукция) И (Зак.КодСтроки = Док.КодСтроки) Тогда
				КвоНорма = Док.КвоКутеров * Зак.НормыЗатрат.КвоПродукции;
				Кво = КвоНорма - Зак.ПотериФарша;
				Кво = Кво - Кво * Продукция.ПроцПотерь.Получить(ДатаДок) / 100;
				ИзмКво();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Примечание = Док.Примечание;
	КатегорияЦен = Константа.УМК_ПрайсоваяКатегорияЦен;
	ОбновитьЦены();
	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	Если Форма.Параметр = "Провести" Тогда
		Провести(0);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	ПриЗаписиПерепроводить(1);
	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;        
	глСохранитьЗначение(Контекст,"Продукция",Продукция);
	
	ТЗЗак = СоздатьОбъект("ТаблицаЗначений");
	ТЗЗак.НоваяКолонка("Продукция");
	Попытка
		ПолучитьСтрокуПоНомеру(1);
		Если Заказ.Выбран() = 1 Тогда
			ТЗЗак = СоздатьОбъект("ТаблицаЗначений");
			Заказ.ВыгрузитьТабличнуюЧасть(ТЗЗак);
			ТЗЗак.НоваяКолонка("ТП", "Число");
			ТЗЗак.ВыбратьСтроки();
			Пока ТЗЗак.ПолучитьСтроку() = 1 Цикл
				//ТЗЗак.ТП = ТЗЗак.НормыЗатрат.ПроцПотерь;
				ТЗЗак.ТП = ТЗЗак.Продукция.ПроцПотерь.Получить(Заказ.ДатаДок);
			КонецЦикла;
		КонецЕсли;
	Исключение КонецПопытки;
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
		Форма.кПодбор.Доступность(0);
		//Форма.кПечать.Доступность(0);
		Форма.кФирма.Доступность(0);  
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли; 
	Если ТипЗначенияСтр(Форма.Параметр) = "Число" Тогда
		ПолучитьСтрокуПоНомеру(Форма.Параметр);
		Форма.Обновить();
	КонецЕсли;	
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Продукция = Форма.Параметр Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	КатегорияЦенДо = КатегорияЦен;
	
	УстановитьВидимость();
	
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений);
	
	//Видимость полей
	Если НазваниеНабораПрав() = "Администратор" Тогда
		ФиксацияКолонок = 1;
		Форма.Ед.Видимость(1);
		Форма.Коэффициент.Видимость(1);
	Иначе	
		Форма.ЦенаСНДС.Видимость(0);
		Форма.СуммаСНДС.Видимость(0);
		Форма.ЗатратыМат.Видимость(0);
		Форма.ОплатаТруда.Видимость(0);
		Форма.ССУпак.Видимость(0);
		Форма.ОПР.Видимость(0);
		Форма.Рентаб.Видимость(0);
		Форма.ФиксацияКолонок.Видимость(0);
		Форма.КнопкаОбновитьЦены.Видимость(0);
		ФиксацияКолонок = 0;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПослеСозданияФормы()
	УстановитьФиксациюКолонок();
КонецПроцедуры
             
//// ===============================
//Процедура ВыборВариантаПечати()
//	Перем ВыбЗначение;
//	ВариантыПечати = СоздатьОбъект("СписокЗначений");
//	ВариантыПечати.ДобавитьЗначение(1,"Списание ТМЦ");
//	ВариантыПечати.ДобавитьЗначение(2,"Накладная-требование");
//	Если ВариантыПечати.ВыбратьЗначение(выбЗначение,"",,,1) <> 1 Тогда
//	    Возврат;
//	КонецЕсли;
//	Если ВыбЗначение = 1 Тогда
//	    глПечатьСписаниеТМЦ(ТекущийДокумент(),,"СписаниеТМЦ");
//	ИначеЕсли ВыбЗначение = 2 Тогда
//		глПечатьСписаниеТМЦ(ТекущийДокумент(),,"НакладнаяТребование");
//	КонецЕсли;
//КонецПроцедуры        

// ===============================
Процедура ПриНачалеРедактированияСтроки()
	глСохранитьЗначение(Контекст,"Продукция",Продукция);
КонецПроцедуры

//======================================================================
Функция ПолучитьПолныйПуть(Знач Р)
	ПолныйПуть = "";
	Пока ПустоеЗначение(Р) = 0 Цикл
		ПолныйПуть = Формат(Р.Наименование, "С100") + "\" + ПолныйПуть;
		Р = Р.Родитель;
	КонецЦикла;
	
	Возврат ПолныйПуть;
КонецФункции // ПолучитьПолныйПуть(Род)

//Данный фрагмент построен конструктором.
//При повторном использовании конструктора, внесенные вручную изменения будут потеряны!!!
Процедура Печать()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Все");
	СпМеню.ДобавитьЗначение(2, "Отклонение фарша < 0");
	СпМеню.ДобавитьЗначение(3, "Отклонение фарша > % термопотерь");
	СпМеню.ДобавитьЗначение(4, "Отклонение фарша < 0 или > % термопотерь");
	
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;

	ТЗГ = СоздатьОбъект("ТаблицаЗначений");
	ТЗГ.НоваяКолонка("Группа", "Справочник.Номенклатура");
	ТЗГ.НоваяКолонка("ПолныйПуть", "Строка");
	ТЗГ.НоваяКолонка("К", "Число");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Род = Продукция.Родитель;
		Пока 1=1 Цикл
			Если ПустоеЗначение(Род) = 1 Тогда
				Прервать;
			Иначе
				ТЗГ.НоваяСтрока();
				ТЗГ.Группа = Род;
				ТЗГ.ПолныйПуть = ПолучитьПолныйПуть(Род);
				Род = Род.Родитель
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	СписГрупп = СоздатьОбъект("СписокЗначений");
	
	ТЗГ.Свернуть("Группа,ПолныйПуть", "К");
	ТЗГ.Сортировать("ПолныйПуть");
	ТЗГ.ВыбратьСтроки();
	Пока ТЗГ.ПолучитьСтроку() = 1 Цикл
		СписГрупп.ДобавитьЗначение(ТЗГ.Группа, Формат("", "С" + ТЗГ.Группа.Уровень()) + ТЗГ.Группа.Наименование);
	КонецЦикла;

	ТекГруппа = "";
	Если СписГрупп.ВыбратьЗначение(ТекГруппа, "Выберите группу для печати") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьСтрокуПоНомеру(1);
	ТекЗаказ = Заказ;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Печать");
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0,0,0,0);
	Ном = 1;
	ИтКвоФарша = 0; ИтТермопотери = 0;
	ИтКвоНорма = 0;	ИтКво = 0; ИтКвоГППриемки = 0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Продукция.ПринадлежитГруппе(ТекГруппа) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрЗаказа = "";
		КвоФарша = РасчетСтроки();
		
		ОтнФарша = ОтношениеРазницыКФаршу;
		Термопотери = Термопотеря;
		ПотериФарша = ПотериФарша();
		Если ((Зн = 2) И (Число(ОтнФарша) >= 0))
			ИЛИ ((Зн = 3) И (Число(ОтнФарша) < Число(Термопотери))) 
			ИЛИ ((Зн = 4) И ((Число(ОтнФарша) >= 0) И (Число(ОтнФарша) < Число(Термопотери)))) Тогда
			Продолжить;
		КонецЕсли;		

		ИтКвоФарша = ИтКвоФарша + КвоФарша;
		ИтКвоНорма = ИтКвоНорма + КвоНорма;
		ИтКво = ИтКво + Кво;
		ИтКвоГППриемки = ИтКвоГППриемки + КвоГППриемки;
		Таб.ВывестиСекцию("Строка");
		Ном = Ном + 1;
	КонецЦикла;
	Таб.ВывестиСекцию("Подвал");
	
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);	
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать Выпуск продукции","");
КонецПроцедуры

Процедура ОткрытьСписание()
	Если Заказ.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	Док = СоздатьОбъект("Документ");
	СписДок = СоздатьОбъект("СписокЗначений");
	Док.ВыбратьПодчиненныеДокументы(,,Заказ);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если Док.Вид() = "СписаниеТМЦВПроизводство" Тогда
			Если Док.ПродукцияШ = Продукция Тогда
				СписДок.ДобавитьЗначение(Док.ТекущийДокумент());
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если СписДок.РазмерСписка() = 1 Тогда
		ОткрытьФорму(СписДок.ПолучитьЗначение(1));
	ИначеЕсли СписДок.РазмерСписка() > 0 Тогда
		Док = "";
		Если СписДок.ВыбратьЗначение(Док,,,,1) <> 0 Тогда
			ОткрытьФорму(Док);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьКоличествоИзЗаказа(КвоКВН, КвоПотерь)
	КвоКВ = 0;
	КвоКВН = 0;
	КвоПотерь = 0;
	Если ПустоеЗначение(Заказ) = 0 Тогда
		Заказ.ВыбратьСтроки();
		Пока Заказ.ПолучитьСтроку() = 1 Цикл
			Если Заказ.Продукция = Продукция Тогда
				КвоФаршаРасчётное = Заказ.КвоФаршаФакт - Заказ.ПотериФарша;
				КвоПотерь = КвоПотерь + Заказ.ПотериФарша;
				КвоКВ = КвоКВ + КвоФаршаРасчётное - (КвоФаршаРасчётное * Заказ.Продукция.ПроцПотерь.Получить(ДатаДок)/100);
				КвоКВН = КвоКВН + Заказ.КвоФаршаПлан;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат КвоКВ;	
КонецФункции

Функция ПотериФарша()
	КвоКВН = 0; КвоПотерь = 0;
	КвоКВ = ПолучитьКоличествоИзЗаказа(КвоКВН, КвоПотерь);
	
	Если КвоКВ <> 0 Тогда
	    Возврат КвоПотерь * (Кво / КвоКВ);
	Иначе		
		Возврат 0;
	КонецЕсли;	
КонецФункции

Процедура ИзмПроцентВыпуска()
	КвоКВН = 0; КвоПотерь = 0;
	КвоКВ = ПолучитьКоличествоИзЗаказа(КвоКВН, КвоПотерь);
	
	КвоНорма = КвоКВН * (ПроцентВыпуска / 100);
	Кво = КвоКВ * (ПроцентВыпуска / 100);	
КонецПроцедуры

Процедура ИзмКво()
	
	КвоКВН = 0; КвоПотерь = 0;
	КвоКВ = ПолучитьКоличествоИзЗаказа(КвоКВН, КвоПотерь);
	
	ПроцентВыпуска = ?(КвоКВ=0,0,Кво / КвоКВ) * 100;
	
КонецПроцедуры

Функция Раскраска()
	//Возврат "BRUSH_S[" + Строка(100*255*100) + "]COUNT[16]";	
	Возврат  "(BRUSH_S[" + Строка(100*255*100) + "])";
КонецФункции

Процедура Сортировать()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "По группе");
	СпМеню.ДобавитьЗначение(2, "Как в заказе");
	
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн, "Выберите способ", , , 1) = 1 Тогда
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(ТЗ);
		
		Если Зн = 1 Тогда
			ТЗ.НоваяКолонка("Группа");
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				ТЗ.Группа = ТЗ.Продукция.Родитель;
			КонецЦикла;
			
			ТЗ.Сортировать("Группа,Продукция");
			ЗагрузитьТабличнуюЧасть(ТЗ);
		ИначеЕсли Зн = 2 Тогда
			ТЗ.НоваяКолонка("НомерСтрокиЗаказа");
			ТЗЗ = СоздатьОбъект("ТаблицаЗначений");
			
			СтарЗаказ = "";
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				Если СтарЗаказ <> ТЗ.Заказ Тогда
					СтарЗаказ = ТЗ.Заказ;
					ТЗ.Заказ.ВыгрузитьТабличнуюЧасть(ТЗЗ);
				КонецЕсли;
				
				Стр = 0;
				ТЗЗ.НайтиЗначение(ТЗ.Продукция, Стр, "Продукция");
				ТЗ.НомерСтрокиЗаказа = Стр;
			КонецЦикла;
			
			ТЗ.Сортировать("НомерСтрокиЗаказа");
			ЗагрузитьТабличнуюЧасть(ТЗ);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//=====================================
// При извенения категории цен продукции
Процедура ИзмКатегорииЦены() 	
	

	Если КатегорияЦенДо = КатегорияЦен Тогда
		Возврат;
	КонецЕсли;
	
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	
	ОбновитьЦены();
	
    КатегорияЦенДо = КатегорияЦен;

КонецПроцедуры 

 
//===============================ОБЛАСТЬ РАСЧЕТА ЗАТРАТ И РЕНТАБЕЛЬНОСТИ ПРОДУКЦИИ==============

//=====================================
//Расчет затрта (Прямые + ОПР)
Функция ВычислитьЗатраты()
	
	Возврат глПроизводственныеЗатратыПоДокументу(Продукция, ТекущийДокумент());

КонецФункции

Функция РасчетПрямыхЗатратНаОплатуТруда()
	ПрямаяЗарплата = 0;
	Если ПустоеЗначение(Продукция.СхемаРасчетаЗП) = 0 Тогда
		СхемаЗП = Продукция.СхемаРасчетаЗП.Получить(ДатаДок);
		СхемаЗП.ВыбратьСтроки();
		Пока СхемаЗП.ПолучитьСтроку() = 1 Цикл
			ВидРабот = СхемаЗП.ВидРабот;
			ВидБазы = СхемаЗП.ВидРабот.База;
			База = ?((СхемаЗП.ВидРабот.База = Перечисление.ТипБазыВР.КвоФарша) ИЛИ (СхемаЗП.ВидРабот.База = Перечисление.ТипБазыВР.Кутера), КвоНорма, КвоГПприемки);
			Тариф = ВидРабот.Тариф.Получить(ДатаДок);
			СтоимостьЗП = База*Тариф;
			ПрямаяЗарплата = ПрямаяЗарплата + СтоимостьЗП;
		КонецЦикла;
	КонецЕсли;
	Возврат Окр(ПрямаяЗарплата,2);
КонецФункции

Функция ВычислитьРентабельность()
	
	ЗатратыПроизв = глПроизводственныеЗатратыПоДокументу(Продукция, ТекущийДокумент()) + //Мат. затраты
	                Продукция.ОПР.Получить(ДатаДок)*КвоГПприемки + // ОПР
	                глПолучитьСтУпак(Продукция,, ДатаДок)*КвоГПприемки + // С/с Упак.
	                РасчетПрямыхЗатратНаОплатуТруда(); //З/п 
	
	Рентабельность = ?(ЗатратыПроизв = 0,0, Окр((СуммаСНДС/ЗатратыПроизв)*100, 2));
	
	Возврат Рентабельность;
	
КонецФункции

//===============================КОНЕЦ ОБЛАСТЬ РАСЧЕТА ЗАТРАТ И РЕНТАБЕЛЬНОСТИ ПРОДУКЦИИ============

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале");

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
Сервис.ИспользоватьПланРаскраски(1);


