Перем СтарТипЕдиницыРаспределения;
Перем СтарТипРаспределяемыхЗатрат;
Перем СтарМатериал;
Перем СуммаВсего;       
Перем НачальнаяДатаДокумента;
Перем ИспользоватьПередел;

// ===============================
Процедура ОбновитьНадписи()     
	Перем Заголовок;
	Заголовок = "Распределение затрат";
	Форма.Заголовок(глЗаголовок(Контекст,Заголовок));
КонецПроцедуры

// ===============================
Процедура ВводНового(Копируем)
	глЗаполнитьШапку(Контекст);
	Если Копируем = 1 Тогда
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;  	
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
		НазначитьТип("ЕдиницаРаспределения","Справочник.ВидыДеятельности");
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение Тогда
		НазначитьТип("ЕдиницаРаспределения","Справочник.Подразделения");		
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
		НазначитьТип("ЕдиницаРаспределения","Справочник.ТМЦ");		
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ Тогда
		НазначитьТип("ЕдиницаРаспределения","Документ.Заказ");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()   
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	глПроверкаДатыДок(Контекст,"открытие");
	НачальнаяДатаДокумента = ДатаДок;
	ПриЗаписиПерепроводить(1);
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
		Форма.кРассчитать.Доступность(0);
		Форма.кЗаполнить.Доступность(0);
//		Форма.кДействия.Доступность(0);      
		Форма.кВыборПериода.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	СтарТипЕдиницыРаспределения = ТипЕдиницыРаспределения;		
	СтарТипРаспределяемыхЗатрат = ТипРаспределяемыхЗатрат;
	ОбновитьНадписи();
	Подразделение.ВыборГруппы(1);
	Продукция.ВыборГруппы(1);
	Материал. ВыборГруппы(1);
	ВидЗатрат.ВыборГруппы(1);
КонецПроцедуры
                                
// ===============================
Процедура ИзмЕдиницаРаспределения()
	Если ПустоеЗначение(ЕдиницаРаспределения) = 0 Тогда
		Если ТипЗначенияСтр("ЕдиницаРаспределения") = "Справочник.ВидыДеятельности" Тогда
		ИначеЕсли ТипЗначенияСтр("ЕдиницаРаспределения") = "Справочник.Подразделения" Тогда
		ИначеЕсли ТипЗначенияСтр("ЕдиницаРаспределения") = "Справочник.ТМЦ" Тогда
			Если ЕдиницаРаспределения.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция Тогда
				глКомментарий("Единицей распределения может выступать только продукция.",1);
				ЕдиницаРаспределения = 0;
			КонецЕсли;	
		ИначеЕсли ТипЗначенияСтр("ЕдиницаРаспределения") = "Документ" Тогда
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры       
                 
// ===============================
Процедура ИзмТипЕдиницыРаспределения()       
	Если ((ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.ОборотыРеализации) 
	И ((ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ)
		ИЛИ (ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение))) Тогда
		Предупреждение("Тип единицы распределения не может быть "+ТипЕдиницыРаспределения+"
		|если тип базы распределения: "+ТипБазыРаспределения+".");
		ТипЕдиницыРаспределения = СтарТипЕдиницыРаспределения;
		Возврат;
	КонецЕсли;	
	Если КоличествоСтрок() > 0 Тогда
		Рез = Вопрос("Табличная часть будет очищена. Продолжить? ","Да+Нет");
		Если Рез = "Нет" Тогда
			ТипЕдиницыРаспределения = СтарТипЕдиницыРаспределения;
			Возврат; 
		КонецЕсли;
		УдалитьСтроки();					
	КонецЕсли;  
	Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
		ПоНеопрПодразделению 	= 0;
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ Тогда
		ПоНеопрПодразделению 	= 0;
		ПоНеопрВидуДеятельности	= 0;
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
		ПоНеопрПодразделению 	= 0;
		ПоНеопрВидуДеятельности	= 0;
		ПоНеопрЗаказу			= 0;
	КонецЕсли;
	СтарТипЕдиницыРаспределения = ТипЕдиницыРаспределения;	
КонецПроцедуры       

// ===============================
Процедура ИзмТипРаспределяемыхЗатрат()
	Если ((ТипРаспределяемыхЗатрат=Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные)
	ИЛИ (ТипРаспределяемыхЗатрат=Перечисление.ТипыРаспределямыхЗатрат.ЗатратыНаБрак)) 
	И ((СтарТипРаспределяемыхЗатрат<>Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные)
	И (СтарТипРаспределяемыхЗатрат<>Перечисление.ТипыРаспределямыхЗатрат.ЗатратыНаБрак)) Тогда
		Если ТипЕдиницыРаспределения <> Перечисление.ТипыЕдиницРаспределения.Подразделение Тогда 
			Если КоличествоСтрок() > 0 Тогда
				Рез = Вопрос("Предусмотрено распределение затрат """+ТипРаспределяемыхЗатрат+""" только между подразделениями.
				|Тип единицы распределения будет установлен в значение ""Подразделение"". 
				|Табличная часть будет очищена. Продолжить? ","Да+Нет");
				Если Рез = "Нет" Тогда
					ТипРаспределяемыхЗатрат = СтарТипРаспределяемыхЗатрат;
					Возврат;    
				КонецЕсли;
				УдалитьСтроки();					
			КонецЕсли;
			ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение;
			Если ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.ОборотыРеализации Тогда
				ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.Нормы;
			КонецЕсли;
			ИзмТипЕдиницыРаспределения();                        
		КонецЕсли;
	КонецЕсли;	
	Если (ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные)
			Или (ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.ЗатратыНаБрак) Тогда
		Заказ = 0; 		ПоНеопрЗаказу = 0;
		Продукция = 0; 	ПоНеопрПродукции = 0;
	КонецЕсли;
	Если ТипРаспределяемыхЗатрат <> Перечисление.ТипыРаспределямыхЗатрат.Материальные Тогда
		Материал = 0;
	КонецЕсли;
	СтарТипРаспределяемыхЗатрат = ТипРаспределяемыхЗатрат;
КонецПроцедуры       

// ===============================
Процедура ИзмТипБазыРаспределения()
КонецПроцедуры   

// ===============================
Процедура ИзмРеальнаяБаза()                    
КонецПроцедуры   
                      
// ===============================
Процедура ИзмМатериал()                    
	Если ПустоеЗначение(Материал) = 1 Тогда
	    Возврат;
	ИначеЕсли Материал.ЭтоГруппа() = 1 Тогда
	    Возврат;                 
	Иначе
	    ВидТМЦ = Материал.ВидТМЦ;
		Если (ВидТМЦ <> Перечисление.ВидыТМЦ.Материал) И (ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат) Тогда
			Предупреждение("Неправильно указан материал! 
							|Можно выбирать ТМЦ с видом ""Материал"", 
							|""Полуфабрикат"" или ""Возвратный отход"".");
			Материал = СтарМатериал;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	СтарМатериал = Материал;
КонецПроцедуры   

// ===============================
Процедура СкопироватьБазы()                    
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		БазаВручную = База;	
	КонецЦикла;	
КонецПроцедуры   

// ===============================
Процедура Рассчитать() 

	спРассчитать = СоздатьОбъект("СписокЗначений");
	спРассчитать.ДобавитьЗначение(1,"Рассчитать базы");
	спРассчитать.ДобавитьЗначение(2,"Скопировать базы");
	Если ТипРаспределяемыхЗатрат <> Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные Тогда
		спРассчитать.ДобавитьЗначение(3,"Привести базы к %"); 
	КонецЕсли;	
	                                  
	ЧтоРассчитать = 1;
	Если спРассчитать.ВыбратьЗначение(ЧтоРассчитать,"Сделаейте свой выбор",спРассчитать,,1) = 0 Тогда
		Возврат;
	КонецЕсли;	

	Если ЧтоРассчитать = 1 Тогда  
		спЕдРаспределения = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(спЕдРаспределения,"ЕдиницаРаспределения");
	
		НачДата = Мин(НачМесяца(ДатаДок),ПолучитьДатуТА());
		КонДата = КонМесяца(ДатаДок);
		стрЕдиницаРаспределения = ТипЕдиницыРаспределения.Идентификатор();
	
		Если ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.Нормы Тогда                 
			ТекстЗапр = "//{{ЗАПРОС(Заполнить)
			|Период с НачДата"+?(КонДата>ПолучитьДатуТА(),""," по КонДата")+";
			|_Фирма = Регистр.НормативныеЗатраты.Фирма;
			|_ВидДеятельности = Регистр.НормативныеЗатраты.ВидДеятельности;
			|_Подразделение = Регистр.НормативныеЗатраты.Подразделение;
			|_Продукция = Регистр.НормативныеЗатраты.Продукция;
			|_Заказ = Регистр.НормативныеЗатраты.Заказ;
			|_Материал = Регистр.НормативныеЗатраты.Материал;
			|_СтатьяКалькуляции = Регистр.НормативныеЗатраты.СтатьяКалькуляции;
			|_Сумма = Регистр.НормативныеЗатраты.Сумма;";
			Если (ИспользоватьПередел = 1) И (ПустоеЗначение(Подразделение) = 0) Тогда
				ТекстЗапр = ТекстЗапр + "_УровеньПередела = Регистр.НормативныеЗатраты.Продукция.УровеньПередела;";
			КонецЕсли;
			ТекстЗапр = ТекстЗапр + "
			|Функция Сумма = Сумма(_Сумма);
			|Группировка _"+стрЕдиницаРаспределения+" без групп;
			|Условие(_Фирма = Фирма);
			|Условие(_"+стрЕдиницаРаспределения+" в спЕдРаспределения);
			|"//}}ЗАПРОС
			;
			Если стрЕдиницаРаспределения <> "Подразделение" Тогда
				ТекстЗапр = ТекстЗапр + "Условие(_Подразделение "+?(ПоНеопрПодразделению = 1,"=","в")+" Подразделение);";
			КонецЕсли;	
			Если стрЕдиницаРаспределения <> "ВидДеятельности" Тогда
				ТекстЗапр = ТекстЗапр + "Условие(_ВидДеятельности "+?(ПоНеопрВидуДеятельности = 1,"=","в")+" ВидДеятельности);";
			КонецЕсли;
			Если стрЕдиницаРаспределения <> "Продукция" Тогда
				ТекстЗапр = ТекстЗапр + "Условие(_Продукция "+?(ПоНеопрПродукции = 1,"=","в")+" Продукция);";
			КонецЕсли;
			Если стрЕдиницаРаспределения <> "Заказ" Тогда
				ТекстЗапр = ТекстЗапр + "Условие(_Заказ "+?(ПоНеопрЗаказу = 1,"=","в")+" Заказ);";
			КонецЕсли;
			Если ПустоеЗначение(Материал) = 0 Тогда
				ТекстЗапр = ТекстЗапр + "Условие(_Материал в Материал);";
			КонецЕсли;	
			Если ПустоеЗначение(ВидЗатрат) = 0 Тогда
				ТекстЗапр = ТекстЗапр + "Условие(_СтатьяКалькуляции в ВидЗатрат.СтатьяКалькуляции);";
			КонецЕсли;	
			Если (ИспользоватьПередел = 1) И (ПустоеЗначение(Подразделение) = 0) Тогда
				ТекстЗапр = ТекстЗапр + "Условие(_УровеньПередела<=УровеньПередела);";
			КонецЕсли;	

			Запр = СоздатьОбъект("Запрос");
			Если Запр.Выполнить(ТекстЗапр) = 0 Тогда
				глКомментарий("Не выполнился запрос по нормативным затратам!",0);
			    Возврат;
			КонецЕсли;
			тбИтогиНормативныхЗатрат = СоздатьОбъект("ТаблицаЗначений");
			Запр.Выгрузить(тбИтогиНормативныхЗатрат);
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				База = 0;
				текНомерСтрокиТаб = 0;
				Если тбИтогиНормативныхЗатрат.НайтиЗначение(ЕдиницаРаспределения,текНомерСтрокиТаб,"_"+стрЕдиницаРаспределения) = 1 Тогда
					тбИтогиНормативныхЗатрат.ПолучитьСтрокуПоНомеру(текНомерСтрокиТаб);
					База = тбИтогиНормативныхЗатрат.Сумма;
				КонецЕсли;	
			КонецЦикла;				
					
		ИначеЕсли ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.ОборотыРеализации Тогда
			Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
				стрЕдиницаРаспределения = "ВидДеятельности";
			ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
				стрЕдиницаРаспределения = "ТМЦ";
			Иначе
				глКомментарий("Неправильно указан тип единицы распределения.",1);						
				Возврат;
			КонецЕсли;	                                                      
			
			ТекстЗапр = "//{{ЗАПРОС(Запр)
			|Период с ДатаС"+?(ДатаПо>ПолучитьДатуТА(),""," по ДатаПо")+";
			|_Фирма 			= Регистр.Обороты.Фирма;
			|_ТМЦ 				= Регистр.Обороты.ТМЦ;
			|_ВидДеятельности 	= Регистр.Обороты.ВидДеятельности;
			|_Сумма 			= Регистр.Обороты.РасходСум;";
			Если (ИспользоватьПередел = 1) И (ПустоеЗначение(Подразделение) = 0) Тогда
				ТекстЗапр = ТекстЗапр + "_УровеньПередела = Регистр.Обороты.ТМЦ.УровеньПередела;";
			КонецЕсли;	
			ТекстЗапр = ТекстЗапр + "Функция Сумма = Сумма(_Сумма);
			|Группировка _"+стрЕдиницаРаспределения+" без групп;
			|Условие(_Фирма = Фирма);
			|Условие(_"+стрЕдиницаРаспределения+" в спЕдРаспределения);
			|"//}}ЗАПРОС
			;
			Если ТипЕдиницыРаспределения <> Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
				ТекстЗапр = ТекстЗапр + 
				"Условие(_ВидДеятельности "+?(ПоНеопрВидуДеятельности = 1,"=","в")+" ВидДеятельности);";
			ИначеЕсли ТипЕдиницыРаспределения <> Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
				ТекстЗапр = ТекстЗапр + 		
				"Условие(_ТМЦ "+?(ПоНеопрПродукции = 1,"=","в")+" Продукция);";
			КонецЕсли;				
			Если (ИспользоватьПередел = 1) И (ПустоеЗначение(Подразделение) = 0) Тогда
				ТекстЗапр = ТекстЗапр + "Условие(_УровеньПередела<=УровеньПередела);";
			КонецЕсли;	

			Запр = СоздатьОбъект("Запрос");
			Если Запр.Выполнить(ТекстЗапр) = 0 Тогда
				глКомментарий("Не выполнился запрос по оборотам реализаци!",0);
			    Возврат;
			КонецЕсли;
			тбИтогиОборотов = СоздатьОбъект("ТаблицаЗначений");
			Запр.Выгрузить(тбИтогиОборотов);		
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				текНомерСтрокиТаб = 0;
				Если тбИтогиОборотов.НайтиЗначение(ЕдиницаРаспределения,текНомерСтрокиТаб,"_"+стрЕдиницаРаспределения) = 1 Тогда
					тбИтогиОборотов.ПолучитьСтрокуПоНомеру(текНомерСтрокиТаб);
					База = тбИтогиОборотов.Сумма;
				КонецЕсли;	
			КонецЦикла;				
			
		ИначеЕсли ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.КвоПроизведеннойПродукции Тогда
			ТекстЗапр = "//{{ЗАПРОС(Заполнить)
			|Период с НачДата"+?(КонДата>ПолучитьДатуТА(),""," по КонДата")+";
			|_Фирма = Регистр.ВыпускПродукции.Фирма;
			|_"+стрЕдиницаРаспределения+"= Регистр.ВыпускПродукции."+стрЕдиницаРаспределения+";
			|_Количество = Регистр.ВыпускПродукции.Количество;";                               
			Если (ИспользоватьПередел = 1) И (ПустоеЗначение(Подразделение) = 0) Тогда
				ТекстЗапр = ТекстЗапр + "_УровеньПередела = Регистр.ВыпускПродукции.Продукция.УровеньПередела;";
			КонецЕсли;				
			ТекстЗапр = ТекстЗапр + "Функция Количество = Сумма(_Количество);
			|Группировка _"+стрЕдиницаРаспределения+" без групп;
			|Условие(_Фирма = Фирма);
			|Условие(_"+стрЕдиницаРаспределения+" в спЕдРаспределения);
			|"//}}ЗАПРОС
			;
			Если (ИспользоватьПередел = 1) И (ПустоеЗначение(Подразделение) = 0) Тогда
				ТекстЗапр = ТекстЗапр + "Условие(_УровеньПередела<=УровеньПередела);";
			КонецЕсли;	                   
			
			Запр = СоздатьОбъект("Запрос");
			Если Запр.Выполнить(ТекстЗапр) = 0 Тогда
				глКомментарий("Не выполнился запрос по выпуску продукции!",0);
			    Возврат;
			КонецЕсли;
			тбВыпускПродукции = СоздатьОбъект("ТаблицаЗначений");
			Запр.Выгрузить(тбВыпускПродукции);
			                      
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл                                       
				текНомерСтрокиТаб = 0;
				Если тбВыпускПродукции.НайтиЗначение(ЕдиницаРаспределения,текНомерСтрокиТаб,"_"+стрЕдиницаРаспределения) = 1 Тогда
					тбВыпускПродукции.ПолучитьСтрокуПоНомеру(текНомерСтрокиТаб);
					База = тбВыпускПродукции.Количество;
				КонецЕсли;	
			КонецЦикла;				
			
		ИначеЕсли ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.СтатьяКалькуляции Тогда		
			ТекстЗапр = "//{{ЗАПРОС(Заполнить)
			|Период с НачДата"+?(КонДата>ПолучитьДатуТА(),""," по КонДата")+";
			|_Фирма = Регистр.ПроизводственныеЗатраты.Фирма;
			|_"+стрЕдиницаРаспределения+"= Регистр.ПроизводственныеЗатраты."+стрЕдиницаРаспределения+";
			|_СтатьяКалькуляции = Регистр.ПроизводственныеЗатраты.ВидЗатрат.СтатьяКалькуляции;
			|_Сумма = Регистр.ПроизводственныеЗатраты.Сумма;";
			Если (ИспользоватьПередел = 1) И (ПустоеЗначение(Подразделение) = 0) Тогда
				ТекстЗапр = ТекстЗапр + "_УровеньПередела = Регистр.ПроизводственныеЗатраты.Продукция.УровеньПередела;";
			КонецЕсли;	
			ТекстЗапр = ТекстЗапр + "Функция Сумма = КонОст(_Сумма);
			|Группировка _"+стрЕдиницаРаспределения+" без групп;
			|Условие(_Фирма = Фирма);
			|Условие(_СтатьяКалькуляции = БазоваяСтатьяКалькуляции);
			|Условие(_"+стрЕдиницаРаспределения+" в спЕдРаспределения);
			|"//}}ЗАПРОС
			;
			Если (ИспользоватьПередел = 1) И (ПустоеЗначение(Подразделение) = 0) Тогда
				ТекстЗапр = ТекстЗапр + "Условие(_УровеньПередела<=УровеньПередела);";
			КонецЕсли;	
			
			Запр = СоздатьОбъект("Запрос");
			Если Запр.Выполнить(ТекстЗапр) = 0 Тогда
				глКомментарий("Не выполнился запрос по производственным затратам!",0);
			    Возврат;
			КонецЕсли;
			тбИтогиПроизводственныхЗатрат = СоздатьОбъект("ТаблицаЗначений");
			Запр.Выгрузить(тбИтогиПроизводственныхЗатрат);
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл                                       
				текНомерСтрокиТаб = 0;
				Если тбИтогиПроизводственныхЗатрат.НайтиЗначение(ЕдиницаРаспределения,текНомерСтрокиТаб,"_"+стрЕдиницаРаспределения) = 1 Тогда
					тбИтогиПроизводственныхЗатрат.ПолучитьСтрокуПоНомеру(текНомерСтрокиТаб);
					База = тбИтогиПроизводственныхЗатрат.Сумма;
				КонецЕсли;	
			КонецЦикла;				
		КонецЕсли;              
		СкопироватьБазы();
	
	ИначеЕсли ЧтоРассчитать = 2 Тогда
		СкопироватьБазы();
	
	ИначеЕсли ЧтоРассчитать = 3 Тогда		
		ИтогБазаВручную = Итог("БазаВручную");
		
		Если ИтогБазаВручную = 0 Тогда
			глКомментарий("Не заполнена реальная база распределения.",1);						
			Возврат;
		КонецЕсли;	
		
		НомерПоследнейСтрокиСНенулевойБазой = 0;
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если БазаВручную<>0 Тогда
				НомерПоследнейСтрокиСНенулевойБазой = НомерСтроки;
			КонецЕсли;
			БазаВручную = (БазаВручную/ИтогБазаВручную)*100;
		КонецЦикла;
		                                             
		// дельту относим в последнюю строку с базой <>0
		Если ПолучитьСтрокуПоНомеру(НомерПоследнейСтрокиСНенулевойБазой) = 1 Тогда
			БазаВручную = БазаВручную + (100 - Итог("БазаВручную"));
		КонецЕсли;	
		
	КонецЕсли;	
КонецПроцедуры       
                         
// ===============================
Процедура Заполнить() 
	Перем ТипПодразделений, Номер;
               
	Если ПустоеЗначение(ТипЕдиницыРаспределения) = 1 Тогда
		глКомментарий("Не указан тип единицы распределения.",1);
		Возврат;
	КонецЕсли;	
	
	Если КоличествоСтрок() > 0 Тогда
		Рез = Вопрос("Удалить строки?","Да+Нет+Отмена");
		Если Рез ="Да" Тогда
			УдалитьСтроки();					
		ИначеЕсли Рез = "Отмена" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	        
	Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение Тогда
		// выберем тип подразделений
		спПодразделений = СоздатьОбъект("СписокЗначений");
		спПодразделений.ДобавитьЗначение(1,"Только производственные");
		спПодразделений.ДобавитьЗначение(2,"Включая обслуживающие");
		спПодразделений.ДобавитьЗначение(3,"Все");          
		выбТипПодразделения = 1;
		Если спПодразделений.ВыбратьЗначение(ТипПодразделений,"Сделаейте свой выбор",выбТипПодразделения,,1) = 0 Тогда
			Предупреждение("Выбор не произведен! Документ не заполняется!");	
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	стрЕдиницаРаспределения = ТипЕдиницыРаспределения.Идентификатор();
	
	НачДата = Мин(НачМесяца(ДатаДок),ПолучитьДатуТА());
	КонДата = КонМесяца(ДатаДок);
	               
	ТекстЗапр = 	"//{{ЗАПРОС(Заполнить)
	|Период с НачДата"+?(КонДата>ПолучитьДатуТА(),""," по КонДата")+";
	|_Фирма = Регистр.НормативныеЗатраты.Фирма;
	|_ВидДеятельности = Регистр.НормативныеЗатраты.ВидДеятельности;
	|_Подразделение = Регистр.НормативныеЗатраты.Подразделение;
	|_Продукция = Регистр.НормативныеЗатраты.Продукция;";	
	Если ИспользоватьПередел = 1 Тогда
		ТекстЗапр = ТекстЗапр + "_УровеньПередела = Регистр.НормативныеЗатраты.Продукция.УровеньПередела;";
	КонецЕсли;	
	ТекстЗапр = ТекстЗапр + "
	|_Заказ = Регистр.НормативныеЗатраты.Заказ;
	|_СтатьяКалькуляции = Регистр.НормативныеЗатраты.СтатьяКалькуляции;	
	|_Материал = Регистр.НормативныеЗатраты.Материал;
	|_Сум = Регистр.НормативныеЗатраты.Сумма;
	|Функция База = Сумма(_Сум);
	|Группировка _"+стрЕдиницаРаспределения+" без групп;
	|Условие(_Фирма = Фирма);"
	//}}ЗАПРОС
	;
	                        
	Если стрЕдиницаРаспределения = "Подразделение" Тогда
		Если выбТипПодразделения = 1 Тогда
			ТекстЗапр = ТекстЗапр + 
			"Условие(_Подразделение.ТипПодразделения=Перечисление.ТипыПодразделений.Производственное);";
		ИначеЕсли выбТипПодразделения = 2 Тогда
			ТекстЗапр = ТекстЗапр + 
			"Условие((_Подразделение.ТипПодразделения=Перечисление.ТипыПодразделений.Обслуживающее)
			|ИЛИ (_Подразделение.ТипПодразделения=Перечисление.ТипыПодразделений.Производственное));";
		КонецЕсли;	
	Иначе	
		ТекстЗапр = ТекстЗапр + 
		"Условие(_Подразделение "+?(ПоНеопрПодразделению = 1,"=","в")+" Подразделение);";
	КонецЕсли;	
		      
	Если стрЕдиницаРаспределения <> "ВидДеятельности" Тогда
		ТекстЗапр = ТекстЗапр + "Условие(_ВидДеятельности "+?(ПоНеопрВидуДеятельности = 1,"=","в")+" ВидДеятельности);";
	КонецЕсли;
	
	Если стрЕдиницаРаспределения <> "Продукция" Тогда
		ТекстЗапр = ТекстЗапр + "Условие(_Продукция "+?(ПоНеопрПродукции = 1,"=","в")+" Продукция);";
	КонецЕсли;
		
	Если стрЕдиницаРаспределения <> "Заказ" Тогда
		ТекстЗапр = ТекстЗапр + "Условие(_Заказ "+?(ПоНеопрЗаказу = 1,"=","в")+" Заказ);";
	КонецЕсли;

	Если ПустоеЗначение(Материал) = 0 Тогда
		ТекстЗапр = ТекстЗапр + "Условие(_Материал в Материал);";
	КонецЕсли;	

	Если ПустоеЗначение(ВидЗатрат) = 0 Тогда
		ТекстЗапр = ТекстЗапр + "Условие(_СтатьяКалькуляции в ВидЗатрат.СтатьяКалькуляции);";
	КонецЕсли;	

	Если ИспользоватьПередел = 1 Тогда
		ТекстЗапр = ТекстЗапр + "Условие(_УровеньПередела<=УровеньПередела);";
	КонецЕсли;	
	
	Запр = СоздатьОбъект("Запрос");
	Если Запр.Выполнить(ТекстЗапр) = 0 Тогда
		глКомментарий("Не выполнился запрос по нормативным затратам!",0);
	    Возврат;
	КонецЕсли;
	
	Пока Запр.Группировка(1) = 1 Цикл
		ТекЕдиница = Запр.ПолучитьАтрибут("_"+стрЕдиницаРаспределения);
		Если ПустоеЗначение(ТекЕдиница) = 1 Тогда
		    Продолжить;
		КонецЕсли;
		НоваяСтрока();
		стрТип = ?(ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ,"Документ","Справочник");
		НазначитьТип("ЕдиницаРаспределения",стрТип+"."+ТекЕдиница.Вид());
		ЕдиницаРаспределения = ТекЕдиница;
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	
	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 	
	Таб.ИсходнаяТаблица(ПечФорма);
	глУстПропись(Гривня,Язык);
	
	Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
		ЕдиницаРаспределенияДляПечати = ?(Язык="у","Види діяльності","Виды деятельности");
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение Тогда
		ЕдиницаРаспределенияДляПечати = ?(Язык="у","Підрозділи","Подразделения");		
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
		ЕдиницаРаспределенияДляПечати = "ТМЦ";		
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ Тогда
		ЕдиницаРаспределенияДляПечати = ?(Язык="у","Замовлення","Заказы");		
	КонецЕсли;   
	               
	Если ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Нематериальные Тогда
		ТипРаспределяемыхЗатратДляПечати = ?(Язык="у","нематеріальних витрат","нематериальных затрат");
	ИначеЕсли ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Материальные Тогда
		ТипРаспределяемыхЗатратДляПечати = ?(Язык="у","матеріальних витрат","материальных затрат");
	ИначеЕсли ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные Тогда
		ТипРаспределяемыхЗатратДляПечати = ?(Язык="у","загальновиробничіх витрат","общепроизводственных затрат");
	ИначеЕсли ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.ЗатратыНаБрак Тогда
		ТипРаспределяемыхЗатратДляПечати = ?(Язык="у","витрат на брак","затрат на брак");
	КонецЕсли;	
	
	Если ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.Нормы Тогда                 
		ТипБазыРаспределенияДляПечати = ?(Язык="у","пропорційно нормам витрат","пропорционально нормам затрат");
	ИначеЕсли ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.ОборотыРеализации Тогда
		ТипБазыРаспределенияДляПечати  = ?(Язык="у","пропорційно оборотам реалізації за період з "+ДатаС+" по "+ДатаПо+"",
		"пропорционально оборотам реализации за период с "+ДатаС+" по "+ДатаПо+"");
	ИначеЕсли ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.КвоПроизведеннойПродукции Тогда
		ТипБазыРаспределенияДляПечати = "пропорционально количеству произведенной продукции";
	ИначеЕсли ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.СтатьяКалькуляции Тогда
		ТипБазыРаспределенияДляПечати = ?(Язык="у","пропорційно статті калкуляції: ",
		"пропорционально статье калькуляции: ") + БазоваяСтатьяКалькуляции+"";
	ИначеЕсли ТипБазыРаспределения = Перечисление.ТипыБазРаспределения.Вручную Тогда
		ТипБазыРаспределенияДляПечати = ?(Язык="у","пропорційно значенням, які вказано у табличній частині",
		"пропорционально значениям указанным в табличной части");
	КонецЕсли;	 
	
	Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
		ВидРаспределенияДляПечати = ?(Язык="у","між видами діяльності","между видами деятельности");
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение Тогда
		ВидРаспределенияДляПечати = ?(Язык="у","між підрозділами","между подразделениями");
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
		ВидРаспределенияДляПечати = ?(Язык="у","між продукцією","между продукцией");
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ Тогда
		ВидРаспределенияДляПечати = ?(Язык="у","між замовленнями","между заказами");
	КонецЕсли;
	
	Таб.ВывестиСекцию("Шапка");  
	
	тФильтр = "";
	
	Если ПоНеопрВидуДеятельности = 1 Тогда
		тФильтр = тФильтр + ?(Язык="у","по невизначеному виду діяльності, ","по неопределенному виду деятельности, ");
	ИначеЕсли ПустоеЗначение(ВидДеятельности) = 0 Тогда
		тФильтр = тФильтр + ?(Язык="у","по виду діяльності ","по виду деятельности ")+ВидДеятельности+", ";
	КонецЕсли;                                                       		
	
	Если ПоНеопрПодразделению = 1 Тогда
		тФильтр = тФильтр + ?(Язык="у","по невизначеному підрозділу, ","по неопределенному подразделению, ");
	ИначеЕсли ПустоеЗначение(Подразделение) = 0 Тогда
		тФильтр = тФильтр + ?(Язык="у","по підрозділу ","по подразделению ")+Подразделение+", ";
	КонецЕсли;                            
	
	Если ПоНеопрПродукции = 1 Тогда
		тФильтр = тФильтр + ?(Язык="у","по невизначеній продукції, ","по неопределенной продукции, ");
	ИначеЕсли ПустоеЗначение(Продукция) = 0 Тогда
		тФильтр = тФильтр + ?(Язык="у","по продукції ","по продукции ")+Продукция+", ";
	КонецЕсли;                                                       		
	
	Если ПоНеопрЗаказу = 1 Тогда
		тФильтр = тФильтр + ?(Язык="у","по невизначеному замовленню, ","по неопределенному заказу, ");
	ИначеЕсли ПустоеЗначение(Заказ) = 0 Тогда
		тФильтр = тФильтр + ?(Язык="у","по замовленню ","по заказу ")+Заказ+", ";
	КонецЕсли;
	
	Если ПустоеЗначение(Материал) = 0 Тогда
		тФильтр = тФильтр + ?(Язык="у","по матеріалу ","по материалу ")+Материал+", ";
	КонецЕсли;	

	Если ПустоеЗначение(ВидЗатрат) = 0 Тогда
		тФильтр = тФильтр + ?(Язык="у","по виду витрат ","по виду затрат ")+ВидЗатрат+", ";
	КонецЕсли;	
	          
	
	Если ПустоеЗначение(тФильтр) = 0 Тогда
		тФильтр = Лев(тФильтр,СтрДлина(тФильтр)-2);
		тФильтр = тФильтр +".";
		Таб.ВывестиСекцию("Фильтр");
	КонецЕсли;	
	
	Таб.ВывестиСекцию("ШапкаСтроки");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если БазаВручную = 0 Тогда
		    Продолжить;
		КонецЕсли;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;	
	
	Таб.ВывестиСекцию("Дно");
		
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Распределение затрат","");
	глУстПропись(Гривня);                     
	
КонецПроцедуры        
                        
// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ТипБазыРаспределения" Тогда
		Если ПустоеЗначение(ТипЕдиницыРаспределения)=1 Тогда
			Предупреждение("Не указан тип единицы распределения. Выбор типа базы распределения невозможен.");
			ФлагСтандОбр = 0;
			Возврат;
		Иначе         
			ЗначениеБазыРаспределения = ТипБазыРаспределения;
			НомерПозиции = 1;
			спТипБазыРаспределения = СоздатьОбъект("СписокЗначений");
			спТипБазыРаспределения.ДобавитьЗначение(Перечисление.ТипыБазРаспределения.Нормы,"Нормы производства");
			Если ((ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности)
			ИЛИ (ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция)) Тогда
				спТипБазыРаспределения.ДобавитьЗначение(Перечисление.ТипыБазРаспределения.ОборотыРеализации,"Обороты реализации");
			КонецЕсли;
			спТипБазыРаспределения.ДобавитьЗначение(Перечисление.ТипыБазРаспределения.КвоПроизведеннойПродукции,"Количество произведенной продукции");
			спТипБазыРаспределения.ДобавитьЗначение(Перечисление.ТипыБазРаспределения.СтатьяКалькуляции,"Затраты по статье калькуляции");
			спТипБазыРаспределения.ДобавитьЗначение(Перечисление.ТипыБазРаспределения.Вручную,"Другая база (указать вручную)");    
			Если спТипБазыРаспределения.ВыбратьЗначение(ЗначениеБазыРаспределения,"",НомерПозиции,,2) = 1 Тогда
				ТипБазыРаспределения = ЗначениеБазыРаспределения;
			КонецЕсли;	
			ФлагСтандОбр = 0;			
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры             

// ===============================
Процедура ПриЗаписи() //Предопределенная процедура
	Автор = глПользователь;             
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()
КонецПроцедуры	

// ===============================
Функция УстДоступность()    
	ОбновитьНадписи();
	
	Если ПоНеопрПодразделению = 1 Тогда
		Подразделение = 0;
	КонецЕсли;                           
	Если ПоНеопрВидуДеятельности = 1 Тогда
		ВидДеятельности = 0;
	КонецЕсли;	
	Если ПоНеопрЗаказу = 1 Тогда
		Заказ = 0;
	КонецЕсли;	                       	
	Если ПоНеопрПродукции = 1 Тогда
		Продукция = 0;
	КонецЕсли;                         	
	ДоступПод = 1-ПоНеопрПодразделению;
	ДоступВиД = 1-ПоНеопрВидуДеятельности;
	ДоступЗак = 1-ПоНеопрЗаказу;
	ДоступПро = 1-ПоНеопрПродукции;

	ДоступНеопрПод = 1;
	ДоступНеопрВиД = 1;
	ДоступНеопрЗак = 1;
	ДоступНеопрПро = 1;
	Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
		ДоступНеопрПод = 0;
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ Тогда
		ДоступНеопрПод = 0;
		ДоступНеопрВиД = 0;
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
		ДоступНеопрПод = 0;
		ДоступНеопрВиД = 0;
		ДоступНеопрЗак = 0;
	КонецЕсли;

	Если ((ТипРаспределяемыхЗатрат=Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные)
	ИЛИ (ТипРаспределяемыхЗатрат=Перечисление.ТипыРаспределямыхЗатрат.ЗатратыНаБрак)) Тогда
		ДоступЗак = 0;
		ДоступПро = 0;
		ДоступНеопрЗак = 0;
		ДоступНеопрПро = 0;
		Форма.ТипЕдиницыРаспределения.Доступность(0);
	Иначе
		Форма.ТипЕдиницыРаспределения.Доступность(1);
	КонецЕсли;	

	Форма.Подразделение. 	Доступность(ДоступПод);
	Форма.тПодразделение.	Доступность(ДоступПод);
	Форма.кПодразделение.	Доступность(ДоступПод);
	Форма.ВидДеятельности. 	Доступность(ДоступВиД);
	Форма.тВидДеятельности.	Доступность(ДоступВиД);
	Форма.кВидДеятельности.	Доступность(ДоступВиД);
	Форма.Заказ. 			Доступность(ДоступЗак);
	Форма.тЗаказ.			Доступность(ДоступЗак);
	Форма.кЗаказ.			Доступность(ДоступЗак);
	Форма.Продукция. 		Доступность(ДоступПро);
	Форма.тПродукция.		Доступность(ДоступПро);
	Форма.кПродукция.		Доступность(ДоступПро);
	Форма.ПоНеопрПодразделению.		Доступность(ДоступНеопрПод);
	Форма.ПоНеопрВидуДеятельности.	Доступность(ДоступНеопрВиД);
	Форма.ПоНеопрЗаказу.			Доступность(ДоступНеопрЗак);
	Форма.ПоНеопрПродукции.			Доступность(ДоступНеопрПро);

	Доступ = ?(ТипРаспределяемыхЗатрат=Перечисление.ТипыРаспределямыхЗатрат.Материальные,1,0);
	Форма.Материал. Доступность(Доступ);
	Форма.тМатериал.Доступность(Доступ);
	Форма.кМатериал.Доступность(Доступ);
	                                     
	Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
		Форма.тВидРаспределения.Заголовок("между видами деятельности");
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение Тогда
		Форма.тВидРаспределения.Заголовок("между подразделениями");
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
		Форма.тВидРаспределения.Заголовок("между продукцией");
	ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ Тогда
		Форма.тВидРаспределения.Заголовок("между заказами");
	КонецЕсли;
	
	Если ((ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности)
	ИЛИ (ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция)
	ИЛИ (ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ))
	И ((ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Нематериальные)
	ИЛИ (ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Материальные)) Тогда
		ИспользоватьПередел = 1;		
	Иначе	
		ИспользоватьПередел = 0;
	КонецЕсли;	                
	Форма.тУровеньПередела.Видимость(ИспользоватьПередел);
	Форма.УровеньПередела. Видимость(ИспользоватьПередел);	
	
	Форма.НовыйВидЗатрат.Видимость(ОтнестиНаНовыйВидЗатрат);
	                                    
	Видим = ?(ТипБазыРаспределения=Перечисление.ТипыБазРаспределения.ОборотыРеализации,1,0);
	Форма.ДатаС.		Видимость(Видим);
	Форма.тДатаС.		Видимость(Видим);
	Форма.ДатаПо.		Видимость(Видим);
	Форма.тДатаПо.		Видимость(Видим);		
	Форма.кВыборПериода.Видимость(Видим);
	
	Видим = ?(ТипБазыРаспределения=Перечисление.ТипыБазРаспределения.СтатьяКалькуляции,1,0);
	Форма.БазоваяСтатьяКалькуляции. Видимость(Видим);		
	Форма.тБазоваяСтатьяКалькуляции.Видимость(Видим);
	                 
	Доступ = ?(ТипРаспределяемыхЗатрат=Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные,1,0);
	Форма.ргОбщепроизводственныеЗатраты.Доступность(Доступ);
	Форма.БазаНорм.						Доступность(Доступ);
	Форма.тБазаНорм.					Доступность(Доступ);
	Форма.СуммаПостОбщНорм.				Доступность(Доступ);
	Форма.тСуммаПостОбщНорм.			Доступность(Доступ);
	
	Если ТипБазыРаспределения <> Перечисление.ТипыБазРаспределения.Вручную Тогда
		Форма.База.Доступность(0);
		Форма.кРассчитать.Видимость(1);
	Иначе
		Форма.База.Доступность(1);
		Форма.кРассчитать.Видимость(0);
	КонецЕсли;	
	
	Возврат "";
КонецФункции


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции



// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");