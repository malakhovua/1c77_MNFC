Перем тбФактическихЗатрат;
Перем КоэфПостоянныхЗатрат; 
Перем табФактЗатраты;  
Перем табРаспределениеЗатрат;
Перем ОшибкаРаспределения;

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(ТипЕдиницыРаспределения,"Тип единицы распределения");
	глВыбранЛи(ТипРаспределяемыхЗатрат,"Тип распределяемых затрат");
	глВыбранЛи(ТипБазыРаспределения,"Тип базы распределения");
	Если ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные Тогда
		Если ИспользоватьСчетаРасходов = Класс8 Тогда
			глКомментарий("Счета класса 9 не используются. Невозможно выделить общепроизводственные затраты!",0);
			глВсеВыбрано = 0;
		КонецЕсли;
		Если БазаНорм>0 Тогда
			глВыбранЛи(СуммаПостОбщНорм,"Сумма пост. общепроизв. затрат при нормальной мощности");
		КонецЕсли;
	КонецЕсли;	
	Если ОтнестиНаНовыйВидЗатрат = 1 Тогда
		глВыбранЛи(НовыйВидЗатрат,"Новый вид затрат");
		Если ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Материальные Тогда
		    Если ПустоеЗначение(НовыйВидЗатрат) = 0 Тогда
				Если НовыйВидЗатрат.СтатьяКалькуляции.ДетализироватьДоМатериалов = 0  Тогда
			        глКомментарий("При отнесении на новый вид затрат " + НовыйВидЗатрат 
									+ " будет утеряна информация о материалах, поскольку детализированный учет материалов по этому виду затрат не ведется  !",1);
				КонецЕсли;
		    КонецЕсли;
		КонецЕсли;
	КонецЕсли;	                                       
	
	Если КоличествоСтрок() = 0 Тогда
		глКомментарий("Табличная часть должна быть заполнена!",0);
		глВсеВыбрано = 0;
	КонецЕсли;
	
	Если Итог("БазаВручную") = 0 Тогда
		глКомментарий("Итог колонки ""Реальная база"" должен быть больше 0!",0);
		глВсеВыбрано = 0;
	КонецЕсли;
	
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки() 
	глВсеВыбрано = 1;
	Если ТипЕдиницыРаспределения <> Перечисление.ТипыЕдиницРаспределения.Заказ Тогда
		// заказ может быть пустым, другие единицы - нет
		глВыбранЛи(ЕдиницаРаспределения,"Единица распределения",НомерСтроки);
	КонецЕсли;	
	Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
		// значение единицы распределения пойдет в аналитику по затратам, необходимо проверить ее соотв. образом
		Если (ЕдиницаРаспределения.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) 
		И (ЕдиницаРаспределения.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат)
		И (ЕдиницаРаспределения.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга) Тогда
		    глКомментарий("Неверно заполнена единица распределения в строке "+НомерСтроки+". Разрешается выбирать ТМЦ с видом Продукция, Полуфабрикат или Услуга!",0);
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;	
	
	Возврат глВсеВыбрано;
КонецФункции

// Формирует таблицу производственных затрат за период
// по данным бухгалтерских счетов 
// ===============================                 
Функция ПолучитьТабФактЗатратПоБухСчетам(СчетЗатрат,ТипЗатрат=0)
	
	табФактЗатраты.НоваяКолонка("_Фирма");
	табФактЗатраты.НоваяКолонка("_ВидДеятельности");
	табФактЗатраты.НоваяКолонка("_Подразделение");
	табФактЗатраты.НоваяКолонка("_Продукция");
	табФактЗатраты.НоваяКолонка("_ВидЗатрат");		
	табФактЗатраты.НоваяКолонка("_Заказ");
	табФактЗатраты.НоваяКолонка("_Материал");		
	табФактЗатраты.НоваяКолонка("Количество");        
    табФактЗатраты.НоваяКолонка("Сумма"); 
	табФактЗатраты.НоваяКолонка("СуммаДав"); 	
	
    Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);     
	                                                               
	// фильтр по субконто ...                                             
	текТипФильтра = 1;
	Если ПоНеопрВидуДеятельности = 1 Тогда
		текТипФильтра = 2;
	ИначеЕсли ПустоеЗначение(ВидДеятельности)=0 Тогда
		Если ВидДеятельности.ЭтоГруппа() = 0 Тогда
			текТипФильтра = 2;
		КонецЕсли;	
	КонецЕсли;					
	Ит.ИспользоватьСубконто(ВидыСубконто.ВидыДеятельности,ВидДеятельности,текТипФильтра);

	текТипФильтра = 1;
	Если ПоНеопрПодразделению = 1 Тогда
			текТипФильтра = 2;
	ИначеЕсли ПустоеЗначение(Подразделение)=0 Тогда                                    
		Если Подразделение.ЭтоГруппа() = 0 Тогда
			текТипФильтра = 2;
		КонецЕсли;	
	КонецЕсли;
	Ит.ИспользоватьСубконто(ВидыСубконто.Подразделения,Подразделение,текТипФильтра);

	текТипФильтра = 1;
	Если ПустоеЗначение(ВидЗатрат) = 0 Тогда
		Если ВидЗатрат.ЭтоГруппа() = 0 Тогда
			текТипФильтра = 2;
		КонецЕсли;
	КонецЕсли;
	Ит.ИспользоватьСубконто(ВидыСубконто.ВидыЗатрат,ВидЗатрат,текТипФильтра);
	
	Ит.ВключатьСубсчета(-1);
  	Если Ит.ВыполнитьЗапрос(НачМесяца(ДатаДок), КонМесяца(ДатаДок), СчетЗатрат,,,1) = 0 Тогда
  		Возврат табФактЗатраты;
  	КонецЕсли;   
  	
	ТекСуммаПостЗатрат = 0;

  	// выберем итоги по бух. счетам
	Ит.ВыбратьСубконто(1);
	Пока Ит.ПолучитьСубконто(1) = 1 Цикл
		Ит.ВыбратьСубконто(2);
		Пока Ит.ПолучитьСубконто(2) = 1 Цикл
			Ит.ВыбратьСубконто(3);
			Пока Ит.ПолучитьСубконто(3) = 1 Цикл
				табФактЗатраты.НоваяСтрока();
				табФактЗатраты._Фирма = Фирма;
				табФактЗатраты._ВидДеятельности = Ит.Субконто(1);
				табФактЗатраты._Подразделение = Ит.Субконто(2);
				табФактЗатраты._ВидЗатрат = Ит.Субконто(3);
				
				табФактЗатраты.Количество = Ит.СКД("К");        
			    табФактЗатраты.Сумма = Ит.СКД("С"); 
				
			    // рассчитаем текущую сумму пост. общепроизв. затрат
				Если Ит.Субконто(3).Постоянный = 1 Тогда
					ТекСуммаПостЗатрат = ТекСуммаПостЗатрат + Ит.СКД();
				КонецЕсли;
				
			КонецЦикла;	// по видам затрат
		КонецЦикла;	// по подразделениям
	КонецЦикла; // по видам деятельности
	    
	// Это общепроизводственные затраты, значит, надо рассчитать 
	// коэффициент распределения постоянных затрат между 23 и 90
	Если ТипЗатрат = 1 Тогда
		// определим, в какой пропорции разбивать между 23 и 90
		Если БазаНорм = 0 Тогда
			// не заданы параметры:
			// вся сумма на себестоимость продукции
			КоэфПостоянныхЗатрат = 1;
		Иначе
			// рассчитаем коэффициент
			НаСебестПродукции = Окр(Итог("БазаВручную")*СуммаПостОбщНорм/БазаНорм,2);
			НаСебестПродукции = Мин(НаСебестПродукции,ТекСуммаПостЗатрат);
			КоэфПостоянныхЗатрат = ?(ТекСуммаПостЗатрат = 0,1,НаСебестПродукции/ТекСуммаПостЗатрат);
		КонецЕсли;
	КонецЕсли;
	
	Возврат табФактЗатраты;
	
КонецФункции

// Формирует таблицу производственных затрат за период
// по данным регистра ПроизводственныеЗатраты
// ===============================                 
Функция ПолучитьТабФактЗатратПоРегистрам(ТипЗатрат)
	                  
	ПустойМатериал = ПолучитьПустоеЗначение("Справочник.ТМЦ");
	
	НачДата = НачМесяца(ДатаДок);
	Если НачДата > ПолучитьДатуТА() Тогда 
		НачДата = ПолучитьДатуТА();
	КонецЕсли;	
	КонДата = КонМесяца(ДатаДок);
	               
	Если КонДата > ПолучитьДатуТА() Тогда
	    тПериодЗапросов = "Период с НачДата;";
	Иначе
		тПериодЗапросов = "Период с НачДата по КонДата;";
	КонецЕсли;
	
	ТекстЗапр = 	"//{{ЗАПРОС(Заполнить)
	|"+тПериодЗапросов+"
	|_Фирма = Регистр.ПроизводственныеЗатраты.Фирма;
	|_ВидДеятельности = Регистр.ПроизводственныеЗатраты.ВидДеятельности;
	|_Подразделение = Регистр.ПроизводственныеЗатраты.Подразделение;
	|_Продукция = Регистр.ПроизводственныеЗатраты.Продукция;
	|_ВидЗатрат = Регистр.ПроизводственныеЗатраты.ВидЗатрат;
	|_Заказ = Регистр.ПроизводственныеЗатраты.Заказ;
	|_Материал = Регистр.ПроизводственныеЗатраты.Материал;
	|_Количество = Регистр.ПроизводственныеЗатраты.Количество;
	|_Сумма = Регистр.ПроизводственныеЗатраты.Сумма;
	|_СуммаДав = Регистр.ПроизводственныеЗатраты.СуммаДав;
	|Функция Количество = КонОст(_Количество);
	|Функция Сумма = КонОст(_Сумма);
	|Функция СуммаДав = КонОст(_СуммаДав);
	|Группировка _ВидДеятельности без групп;
	|Группировка _Подразделение без групп;
	|Группировка _Продукция без групп;
	|Группировка _ВидЗатрат без групп;
	|Группировка _Заказ без групп;
	|Группировка _Материал без групп;
	|Условие(_Фирма=Фирма);
	|Условие(_ВидДеятельности "+?(ПоНеопрВидуДеятельности = 1,"=","в")+" ВидДеятельности);
	|Условие(_Подразделение "+?(ПоНеопрПодразделению = 1,"=","в")+" Подразделение);
	|Условие(_Продукция "+?(ПоНеопрПродукции = 1,"=","в")+" Продукция);
	|Условие(_Материал в Материал);
	|Условие(_ВидЗатрат в ВидЗатрат);
	|Условие(_Заказ "+?(ПоНеопрЗаказу = 1,"=","в")+" Заказ);";

	Если ТипЗатрат = 1 Тогда
		// это материальные затраты
		ТекстЗапр = ТекстЗапр + "Условие(_Материал<>ПустойМатериал);";
	ИначеЕсли ТипЗатрат = 2 Тогда
		// это нематериальные затраты
		ТекстЗапр = ТекстЗапр + "Условие(_Материал=ПустойМатериал);";
	КонецЕсли;   
	
	тбИтогиПроизводственныхЗатрат = СоздатьОбъект("ТаблицаЗначений");
	
	Запр = СоздатьОбъект("Запрос");
	Если Запр.Выполнить(ТекстЗапр) = 0 Тогда
		глКомментарий("Не выполнился запрос по фактическим затратам!",0);
	    Возврат 0;
	КонецЕсли;
	          
	Запр.Выгрузить(тбИтогиПроизводственныхЗатрат,1,0);
	
	Возврат тбИтогиПроизводственныхЗатрат;
	
КонецФункции

// ===============================
Процедура ДвиженияПроизводственныеЗатраты();
	
	СуммаКСписанию = 0;
	КоличествоКСписанию = 0;
	СуммаДавКСписанию = 0;
	              
	Если (табФактЗатраты.Количество=0) 
	И (табФактЗатраты.Сумма=0)
	И (табФактЗатраты.СуммаДав=0) Тогда
		Возврат;
	КонецЕсли;

	// по регистру ПроизводственныеЗатраты должны пройти только производственные 
	// и вспомогательные подразделенния
	Если ((табФактЗатраты._Подразделение.ТипПодразделения=Перечисление.ТипыПодразделений.Сбыт) 
	ИЛИ (табФактЗатраты._Подразделение.ТипПодразделения=Перечисление.ТипыПодразделений.Административное)) Тогда
		Возврат;
	КонецЕсли;	
	
	Если ((ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Нематериальные)
	ИЛИ (ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Материальные)) Тогда
		// спишем затрату          
		Регистр.ПроизводственныеЗатраты.Фирма = табФактЗатраты._Фирма;
		Регистр.ПроизводственныеЗатраты.ВидДеятельности = табФактЗатраты._ВидДеятельности;
		Регистр.ПроизводственныеЗатраты.Подразделение = табФактЗатраты._Подразделение;
		Регистр.ПроизводственныеЗатраты.Продукция = табФактЗатраты._Продукция;  
		Регистр.ПроизводственныеЗатраты.ВидЗатрат= табФактЗатраты._ВидЗатрат;  		
		Регистр.ПроизводственныеЗатраты.Заказ = табФактЗатраты._Заказ;
		Регистр.ПроизводственныеЗатраты.Материал = табФактЗатраты._Материал;
		
		Регистр.ПроизводственныеЗатраты.Количество = -табФактЗатраты.Количество;        
		Регистр.ПроизводственныеЗатраты.Сумма = -табФактЗатраты.Сумма; 
		Регистр.ПроизводственныеЗатраты.СуммаДав = -табФактЗатраты.СуммаДав; 	
		
		Регистр.ПроизводственныеЗатраты.КодОперации = ПерераспрЗатрат;
		       
		Регистр.ПроизводственныеЗатраты.ДвижениеПриходВыполнить();
		
		СуммаКСписанию = табФактЗатраты.Сумма;
		КоличествоКСписанию = табФактЗатраты.Количество;
		СуммаДавКСписанию = табФактЗатраты.СуммаДав;
	ИначеЕсли ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные Тогда
		//Если распределяются общепроизводственные, то по регистру должна пройти 
		// только сумма того, что "пошло" на 23 счет ...
		Если ПустоеЗначение(табФактЗатраты._ВидЗатрат) = 0 Тогда
			// ... и только для постоянных затрат
			Если табФактЗатраты._ВидЗатрат.Постоянный = 1 Тогда
				СуммаКСписанию = табФактЗатраты.Сумма * КоэфПостоянныхЗатрат;
				КоличествоКСписанию = табФактЗатраты.Количество * КоэфПостоянныхЗатрат;
				СуммаДавКСписанию = табФактЗатраты.СуммаДав * КоэфПостоянныхЗатрат;
			Иначе
				// для остальных затрат берем все
				СуммаКСписанию = табФактЗатраты.Сумма;
				КоличествоКСписанию = табФактЗатраты.Количество;
				СуммаДавКСписанию = табФактЗатраты.СуммаДав;
			КонецЕсли;	
		Иначе
			// для остальных затрат берем все
			СуммаКСписанию = табФактЗатраты.Сумма;
			КоличествоКСписанию = табФактЗатраты.Количество;
			СуммаДавКСписанию = табФактЗатраты.СуммаДав;
		КонецЕсли;		
	ИначеЕсли ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.ЗатратыНаБрак Тогда
		// Если распределяются затраты на брак, то просто одно движение на всю сумму
		Регистр.ПроизводственныеЗатраты.Фирма = табФактЗатраты._Фирма;
		Регистр.ПроизводственныеЗатраты.ВидДеятельности = табФактЗатраты._ВидДеятельности;
		Регистр.ПроизводственныеЗатраты.Подразделение = табФактЗатраты._Подразделение;
		Регистр.ПроизводственныеЗатраты.Продукция = табФактЗатраты._Продукция;  
		Регистр.ПроизводственныеЗатраты.ВидЗатрат= табФактЗатраты._ВидЗатрат;  		
		Регистр.ПроизводственныеЗатраты.Заказ = табФактЗатраты._Заказ;
		Регистр.ПроизводственныеЗатраты.Материал = табФактЗатраты._Материал;
		
		Регистр.ПроизводственныеЗатраты.Количество = табФактЗатраты.Количество;        
		Регистр.ПроизводственныеЗатраты.Сумма = табФактЗатраты.Сумма; 
		Регистр.ПроизводственныеЗатраты.СуммаДав = табФактЗатраты.СуммаДав; 	
		
		Регистр.ПроизводственныеЗатраты.КодОперации = ПерераспрЗатрат;
		       
		Регистр.ПроизводственныеЗатраты.ДвижениеПриходВыполнить();		
		Возврат;
	КонецЕсли;
	
	СписаноСумма = 0;
	СписаноКоличество = 0;
	СписаноСуммаДав = 0;
	
	// выбираем строки табличной части
	табРаспределениеЗатрат.ВыбратьСтроки();
	Пока табРаспределениеЗатрат.ПолучитьСтроку() = 1 Цикл
		
		// оприходуем новые затраты                                
		Регистр.ПроизводственныеЗатраты.ПривязыватьСтроку(табРаспределениеЗатрат.НомерСтроки);
		Регистр.ПроизводственныеЗатраты.Фирма = табФактЗатраты._Фирма;
		Регистр.ПроизводственныеЗатраты.ВидДеятельности = табФактЗатраты._ВидДеятельности;
		Регистр.ПроизводственныеЗатраты.Подразделение = табФактЗатраты._Подразделение;
		Регистр.ПроизводственныеЗатраты.Продукция = табФактЗатраты._Продукция;  
		
		Регистр.ПроизводственныеЗатраты.Заказ = табФактЗатраты._Заказ;
		Регистр.ПроизводственныеЗатраты.Материал = табФактЗатраты._Материал;
		Если ОтнестиНаНовыйВидЗатрат = 1 Тогда
			Регистр.ПроизводственныеЗатраты.ВидЗатрат= НовыйВидЗатрат;  		
		    Если НовыйВидЗатрат.СтатьяКалькуляции.ДетализироватьДоМатериалов = 0 Тогда
				Регистр.ПроизводственныеЗатраты.Материал = 0;
			КонецЕсли;
		Иначе
			Регистр.ПроизводственныеЗатраты.ВидЗатрат= табФактЗатраты._ВидЗатрат;  		
		КонецЕсли;	
		
		
		Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение Тогда
			Регистр.ПроизводственныеЗатраты.Подразделение = табРаспределениеЗатрат.ЕдиницаРаспределения;			
		ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
			Регистр.ПроизводственныеЗатраты.ВидДеятельности = табРаспределениеЗатрат.ЕдиницаРаспределения;
		ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
			Регистр.ПроизводственныеЗатраты.Продукция = табРаспределениеЗатрат.ЕдиницаРаспределения;  
		ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ Тогда
			Регистр.ПроизводственныеЗатраты.Заказ = табРаспределениеЗатрат.ЕдиницаРаспределения;
			
			Если глЭтоДавальческийЗаказ(табРаспределениеЗатрат.ЕдиницаРаспределения) <> глЭтоДавальческийЗаказ(табФактЗатраты._Заказ)  Тогда
				Если ПустоеЗначение(табФактЗатраты._Заказ) = 0 Тогда
					глКомментарий("Нельзя перераспределять заказы с давальческой составляющей на заказы без нее!",0);
					ОшибкаРаспределения = 1;
					Возврат;
				КонецЕсли;	
			ИначеЕсли (глЭтоДавальческийЗаказ(табРаспределениеЗатрат.ЕдиницаРаспределения) = 1)
			И (ПустоеЗначение(табФактЗатраты._Заказ) = 0) Тогда
				Если табРаспределениеЗатрат.ЕдиницаРаспределения.Контрагент <> табФактЗатраты._Заказ.Контрагент Тогда
					глКомментарий("Нельзя перераспределять заказы с давальческой составляющей на разных контрагентов !",0);
					ОшибкаРаспределения = 1;
					Возврат;
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;	

		Если табРаспределениеЗатрат.НомерСтроки = табРаспределениеЗатрат.КоличествоСтрок() Тогда
			// для последней сроки рассчитаем вручную
			СписатьКоличество = КоличествоКСписанию - СписаноКоличество;
			СписатьСумма = СуммаКСписанию - СписаноСумма; 
			СписатьСуммаДав = СуммаДавКСписанию - СписаноСуммаДав; 	
		Иначе	
			// для остальных - по базам
			СписатьКоличество = Окр((табРаспределениеЗатрат.БазаВручную/Итог("БазаВручную"))*КоличествоКСписанию,2);
			СписатьСумма = Окр((табРаспределениеЗатрат.БазаВручную/Итог("БазаВручную"))*СуммаКСписанию,2); 
			СписатьСуммаДав = Окр((табРаспределениеЗатрат.БазаВручную/Итог("БазаВручную"))*СуммаДавКСписанию,2); 	
			
			СписаноСумма = СписаноСумма + СписатьСумма;
			СписаноКоличество = СписаноКоличество + СписатьКоличество;
			СписаноСуммаДав = СписаноСуммаДав + СписатьСуммаДав;
		КонецЕсли;

		// заполним табличную часть документа
		Если ((ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Нематериальные)
		ИЛИ (ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Материальные)) Тогда
			табРаспределениеЗатрат.Сумма = табРаспределениеЗатрат.Сумма + СписатьСумма;
		КонецЕсли;
		
		Если (СписатьКоличество=0) 
		И (СписатьСумма=0)
		И (СписатьСуммаДав=0) Тогда
			Продолжить;
		КонецЕсли;     			               
		
		Регистр.ПроизводственныеЗатраты.Количество = СписатьКоличество;
		Регистр.ПроизводственныеЗатраты.Сумма = СписатьСумма; 
		Регистр.ПроизводственныеЗатраты.СуммаДав = СписатьСуммаДав; 	
		Регистр.ПроизводственныеЗатраты.КодОперации = ПерераспрЗатрат;
		       
		Регистр.ПроизводственныеЗатраты.ДвижениеПриходВыполнить();
	КонецЦикла;	          
	
КонецПроцедуры	

// ===============================
Процедура ПроводкиЗатратыПоДавальческому(СубконтоДебет1,СубконтоДебет2,СубконтоДебет3=0,СписатьСумма,СписатьСуммаДав=0)
	Если ((СубконтоДебет1 <> табФактЗатраты._ВидДеятельности) 
	ИЛИ (СубконтоДебет2 <> табФактЗатраты._Подразделение)
	ИЛИ (СубконтоДебет3 <> табФактЗатраты._ВидЗатрат)) Тогда
		Если ПустоеЗначение(СписатьСуммаДав) = 0 Тогда
			// отнесем на забалансовый счет материальные затраты
			глПроводка(Контекст,"ДВ","ДВ",СписатьСумма,"Перераспределение затрат",, СубконтоДебет1,СубконтоДебет2,СубконтоДебет3, 
			табФактЗатраты._ВидДеятельности,табФактЗатраты._Подразделение,табФактЗатраты._ВидЗатрат,,,"ФР",1,0);
			Возврат;
		КонецЕсли;
	КонецЕсли;                                                                     
	
	// отнесем на забалансовый счет все остальные (кроме материальных) затраты
	Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ Тогда
		Если глЭтоДавальческийЗаказ(табФактЗатраты._Заказ) = 1 Тогда
			// спишем затраты с давальческого заказа
			глПроводка(Контекст,,"ДВ",СписатьСумма,"Перераспределение затрат",, ,,, 
			табФактЗатраты._ВидДеятельности,табФактЗатраты._Подразделение,,,,"ФР",1,0);                                                                                                                                                           
		КонецЕсли;	
		Если глЭтоДавальческийЗаказ(табРаспределениеЗатрат.ЕдиницаРаспределения) = 1 Тогда
			// отнесем затраты на давальческий заказ
			глПроводка(Контекст,"ДВ",,СписатьСумма,"Перераспределение затрат",, СубконтоДебет1,СубконтоДебет2,, 
			,,,,,"ФР",1,0);                                                                                                                                                           
		КонецЕсли;	
	Иначе
		Если (СубконтоДебет1<>табФактЗатраты._ВидДеятельности) 
		ИЛИ (СубконтоДебет2<>табФактЗатраты._Подразделение) Тогда
			Если глЭтоДавальческийЗаказ(табФактЗатраты._Заказ) = 1 Тогда
				// сделаем перераспределение одной проводкой
				глПроводка(Контекст,"ДВ","ДВ",СписатьСумма,"Перераспределение затрат",, СубконтоДебет1,СубконтоДебет2,, 
				табФактЗатраты._ВидДеятельности,табФактЗатраты._Подразделение,,,,"ФР",1,0);                                                                                                                                                           
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры	

// ===============================
Процедура ПроводкиЗатраты();
	СписаноСумма = 0;
	СписаноКоличество = 0;
	СписаноСуммаДав = 0;    

	СуммаКСписанию = табФактЗатраты.Сумма;
	КоличествоКСписанию = табФактЗатраты.Количество;
	СуммаДавКСписанию = табФактЗатраты.СуммаДав;
	
	// выбираем строки табличной части
	табРаспределениеЗатрат.ВыбратьСтроки();
	Пока табРаспределениеЗатрат.ПолучитьСтроку() = 1 Цикл
		
		Если табРаспределениеЗатрат.НомерСтроки = табРаспределениеЗатрат.КоличествоСтрок() Тогда
			// для последней сроки рассчитаем вручную
			СписатьКоличество = КоличествоКСписанию - СписаноКоличество;
			СписатьСумма = СуммаКСписанию - СписаноСумма; 
			СписатьСуммаДав = СуммаДавКСписанию - СписаноСуммаДав; 	
		Иначе	
			// для остальных - по базам
			СписатьКоличество = Окр((табРаспределениеЗатрат.БазаВручную/Итог("БазаВручную"))*КоличествоКСписанию,2);        
			СписатьСумма = Окр((табРаспределениеЗатрат.БазаВручную/Итог("БазаВручную"))*СуммаКСписанию,2); 
			СписатьСуммаДав = Окр((табРаспределениеЗатрат.БазаВручную/Итог("БазаВручную"))*СуммаДавКСписанию,2); 	
			
			СписаноСумма = СписаноСумма + СписатьСумма;
			СписаноКоличество = СписаноКоличество + СписатьКоличество;
			СписаноСуммаДав = СписаноСуммаДав + СписатьСуммаДав;
		КонецЕсли;    
		           
		// заполним табличную часть документа
		Если ((ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные)
		  ИЛИ (ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.ЗатратыНаБрак)) 
		ИЛИ ((табФактЗатраты._Подразделение.ТипПодразделения=Перечисление.ТипыПодразделений.Сбыт) 
		 ИЛИ (табФактЗатраты._Подразделение.ТипПодразделения=Перечисление.ТипыПодразделений.Административное)) Тогда
			табРаспределениеЗатрат.Сумма = табРаспределениеЗатрат.Сумма + СписатьСумма;
		КонецЕсли;
		      
		Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение Тогда
			//Если распределяем по подразделениям, то счет дебета зависит от типа подразделения
			Если табРаспределениеЗатрат.ЕдиницаРаспределения.ТипПодразделения = Перечисление.ТипыПодразделений.Административное Тогда
				СчетДебет = СчетПоКоду("92");
			ИначеЕсли табРаспределениеЗатрат.ЕдиницаРаспределения.ТипПодразделения = Перечисление.ТипыПодразделений.Сбыт Тогда
				СчетДебет = СчетПоКоду("93");
			Иначе
				СчетДебет = "";
			КонецЕсли;	
		КонецЕсли;	
		              
		СубконтоДебет1 = табФактЗатраты._ВидДеятельности;
		СубконтоДебет2 = табФактЗатраты._Подразделение;
		СубконтоДебет3 = табФактЗатраты._ВидЗатрат;
	
		// установим значения субконто для перераспределения
		Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение Тогда
			СубконтоДебет2 = табРаспределениеЗатрат.ЕдиницаРаспределения;			
		ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
			СубконтоДебет1 = табРаспределениеЗатрат.ЕдиницаРаспределения;
		КонецЕсли;	
		
		Если ((ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Нематериальные)
		ИЛИ (ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Материальные)) Тогда
			
			Если ((СубконтоДебет1 <> табФактЗатраты._ВидДеятельности) 
			ИЛИ (СубконтоДебет2 <> табФактЗатраты._Подразделение)
			ИЛИ (СубконтоДебет3 <> табФактЗатраты._ВидЗатрат)) Тогда
				//выполняется обычное перераспределение между единицами
				глПроводка(Контекст,?(ПустоеЗначение(СчетДебет)=1,"231",СчетДебет),"231",СписатьСумма-СписатьСуммаДав,"Перераспределение затрат",, СубконтоДебет1,СубконтоДебет2,СубконтоДебет3, 
				табФактЗатраты._ВидДеятельности,табФактЗатраты._Подразделение,табФактЗатраты._ВидЗатрат,,,"ФР",1,0);                                                                                                                                                           
			КонецЕсли;	                                                     
			ПроводкиЗатратыПоДавальческому(СубконтоДебет1,СубконтоДебет2,СубконтоДебет3,СписатьСумма,СписатьСуммаДав);
			
		ИначеЕсли ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные Тогда
			Если табФактЗатраты._ВидЗатрат.Постоянный = 1 Тогда
				// списываем пропорционально
				глПроводка(Контекст,?(ПустоеЗначение(СчетДебет)=1,"231",СчетДебет),"91",Окр(КоэфПостоянныхЗатрат*СписатьСумма,2),"Перераспределение затрат",, СубконтоДебет1,СубконтоДебет2,СубконтоДебет3,
				табФактЗатраты._ВидДеятельности,табФактЗатраты._Подразделение,табФактЗатраты._ВидЗатрат,,,"ФР",1,0);			

				// отнесем на забалансовый счет только то, что пошло на 23
				ПроводкиЗатратыПоДавальческому(СубконтоДебет1,СубконтоДебет2,,Окр(КоэфПостоянныхЗатрат*СписатьСумма,2),);
				
				глПроводка(Контекст,?(ПустоеЗначение(СчетДебет)=1,"90.1",СчетДебет),"91",СписатьСумма - Окр(КоэфПостоянныхЗатрат*СписатьСумма,2),"Перераспределение затрат",, СубконтоДебет1,СубконтоДебет2,СубконтоДебет3,
				табФактЗатраты._ВидДеятельности,табФактЗатраты._Подразделение,табФактЗатраты._ВидЗатрат,,,"ФР",1,0);			
			Иначе
				// переменные затраты - полностью на 23 счет
				глПроводка(Контекст,?(ПустоеЗначение(СчетДебет)=1,"231",СчетДебет),"91",СписатьСумма,"Перераспределение затрат",, СубконтоДебет1,СубконтоДебет2,СубконтоДебет3,
				табФактЗатраты._ВидДеятельности,табФактЗатраты._Подразделение,табФактЗатраты._ВидЗатрат,,,"ФР",1,0);			
				ПроводкиЗатратыПоДавальческому(СубконтоДебет1,СубконтоДебет2,,СписатьСумма,);
			КонецЕсли;
		ИначеЕсли ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.ЗатратыНаБрак Тогда
			// распределяются затраты на брак
			глПроводка(Контекст,?(ПустоеЗначение(СчетДебет)=1,"231",СчетДебет),"24",СписатьСумма,"Перераспределение затрат",, СубконтоДебет1,СубконтоДебет2,СубконтоДебет3,
			табФактЗатраты._ВидДеятельности,табФактЗатраты._Подразделение,табФактЗатраты._ВидЗатрат,,,"ФР",1,0);			
			ПроводкиЗатратыПоДавальческому(СубконтоДебет1,СубконтоДебет2,,СписатьСумма,);			
		КонецЕсли;	
	КонецЦикла;	          
	
КонецПроцедуры	

// ===============================
Процедура ПерераспределениеЗатрат()
	
	// получим таблицу фактических затрат, которые надо перераспределить
	табФактЗатраты = СоздатьОбъект("ТаблицаЗначений");
	
	Если ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Общепроизводственные Тогда
		табФактЗатраты = ПолучитьТабФактЗатратПоБухСчетам(СчетПоКоду("91"),1)
	ИначеЕсли ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Нематериальные Тогда
		табФактЗатраты = ПолучитьТабФактЗатратПоРегистрам(2);
	ИначеЕсли ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.Материальные Тогда
		табФактЗатраты = ПолучитьТабФактЗатратПоРегистрам(1);
	ИначеЕсли ТипРаспределяемыхЗатрат = Перечисление.ТипыРаспределямыхЗатрат.ЗатратыНаБрак Тогда
		табФактЗатраты = ПолучитьТабФактЗатратПоБухСчетам(СчетПоКоду("24"))
	КонецЕсли;	
	
	Если табФактЗатраты.КоличествоСтрок() = 0 Тогда
		глКомментарий("Нет затрат для перераспределения!",0);
		Возврат;
	КонецЕсли;	
                              
	табРаспределениеЗатрат = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(табРаспределениеЗатрат);	

	табРаспределениеЗатрат.ВыбратьСтроки();
	Пока табРаспределениеЗатрат.ПолучитьСтроку() = 1 Цикл
		Если табРаспределениеЗатрат.НомерСтроки = 1 Тогда
		    // достаточно выбрать значение из первой строки, в остальных то-же
			Если ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Подразделение Тогда
				Если глПроверитьАналитикуПоЗатратам(табРаспределениеЗатрат.ЕдиницаРаспределения,ВидДеятельности,Заказ,Продукция," реквизит ""Единица распределения"" при распределении между подразделениями") = 0 Тогда
					ОшибкаРаспределения = 1;
				КонецЕсли;	
			ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.ВидДеятельности Тогда
				Если глПроверитьАналитикуПоЗатратам(Подразделение,табРаспределениеЗатрат.ЕдиницаРаспределения,Заказ,Продукция,," реквизит ""Единица распределения"" при распределении между видами деятельности") = 0 Тогда
					ОшибкаРаспределения = 1;
				КонецЕсли;	
			ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Продукция Тогда
				Если глПроверитьАналитикуПоЗатратам(Подразделение,ВидДеятельности,Заказ,табРаспределениеЗатрат.ЕдиницаРаспределения,,,," реквизит ""Единица распределения"" при распределении между продукцией") = 0 Тогда
					ОшибкаРаспределения = 1;
				КонецЕсли;	
			ИначеЕсли ТипЕдиницыРаспределения = Перечисление.ТипыЕдиницРаспределения.Заказ Тогда			
				Если глПроверитьАналитикуПоЗатратам(Подразделение,ВидДеятельности,табРаспределениеЗатрат.ЕдиницаРаспределения,Продукция,,," реквизит ""Единица распределения"" при распределении между заказами") = 0 Тогда
					ОшибкаРаспределения = 1;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		табРаспределениеЗатрат.Сумма = 0;
	КонецЦикла;	
	
	табФактЗатраты.ВыбратьСтроки();
	Пока табФактЗатраты.ПолучитьСтроку() = 1 Цикл
		ДвиженияПроизводственныеЗатраты();
		ПроводкиЗатраты();                
	КонецЦикла;	
	
	ЗагрузитьТабличнуюЧасть(табРаспределениеЗатрат);	
	
КонецПроцедуры	

// ===============================
Процедура ОбработкаПроведения()

	глКомментарий("Начало",2,Контекст);
	
	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;	
	КонецЦикла;	  
         
	ОшибкаРаспределения =0;
	
	ПерераспределениеЗатрат();		

	Если ОшибкаРаспределения = 1 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;		
	
	глЗаписатьПроводкиВОперацию(Контекст);  
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры
                            
// ===============================
Процедура ОбработкаУдаленияПроведения()
	
	// очистим реквизит, который заполнялся при проведении
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Сумма = 0;
	КонецЦикла;	  
КонецПроцедуры