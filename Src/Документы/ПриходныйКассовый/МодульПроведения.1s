Перем Валюта;
Перем СуммаГрнСНДС, СуммаГрнНДС;
Перем БалСтоимостьВал, БалСтоимостьГрн, КоррРСчет;
Перем СтрОснование; // комментарий проводки
Перем БалансовыйКурс;
Перем СчетАванса;

Перем КассовыйМетодБонусы; // + umk
Перем ВидОперации;// + umk
Перем БанкУслуги;// + umk

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(РСчет,"Касса");
	глВыбранЛи(Счет,"Счет");
	глВыбранЛи(ВидНДС,"Вид НДС");
	//глВыбранЛи(СуммаВал,"Сумма с НДС");
	глВыбранЛи(ВидОплаты,"Вид оплаты");
	Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
	    глВыбранЛи(Субконто1,"Контрагент");
	Иначе
		// проверка субконто
		Для Инд = 1 По Мин(2,Счет.КоличествоСубконто()) Цикл  
			Если Метаданные.ВидСубконто(Счет.ВидСубконто(Инд).ПорядковыйНомер()).ПустоеСубконто=0 Тогда
				глВыбранЛи(ПолучитьАтрибут("Субконто"+Инд),"Субконто "+Инд,НомерСтроки);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если Счет.КоличествоСубконто() > 2 Тогда
		Если Метаданные.ВидСубконто(Счет.ВидСубконто(3).ПорядковыйНомер()).ПустоеСубконто=0 Тогда
			глВыбранЛи(ПолучитьАтрибут("Субконто3"),"Субконто 3",НомерСтроки);
		КонецЕсли;
	КонецЕсли;
	Если глВсеВыбрано = 1 Тогда
		Если РСчет.СчетУчета.Выбран() = 0 Тогда
			глКомментарий("Для кассы "+Сокрлп(РСчет)+" не задан бухгалтерский счет!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;     
	Если глВсеВыбрано = 1 Тогда
	    // проверим ставки НДС для взаиморасчетов в валюте
		Если (РСчет.Валюта<>Гривня) 
		И (ВидНДС <> ЛьготнаяСтавкаНДС) Тогда
			// просто предупредим, но жестко не запрещаем
		    глКомментарий("Поступление валютных средств вероятно должно проходить по ставке НДС """+ЛьготнаяСтавкаНДС+"""!",2)
		КонецЕсли;	
	КонецЕсли;			
	глПроверкаНДСВДокументе(Контекст, (СуммаВал-НДС), СуммаВал, НДС);
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Процедура РассчитатьШапку()
	СуммаГрнСНДС = глПересчет(СуммаВал,Валюта,Гривня,ДатаДок);
	СуммаГрнНДС = глПересчет(НДС,Валюта,Гривня,ДатаДок);
	
	Попытка
		Если Валюта <> Субконто1.Валюта Тогда
			глКомментарий("Перевод денег со счета на счет можно делать для счетов с одинаковой валютой!",0,,"!");
			глНеПроводить(Контекст);
		КонецЕсли;
		Если НДС <> 0 Тогда
			глКомментарий("При переводе денег со счета на счет указан НДС. Проводки могут быть неверными.",1,,"!");
		КонецЕсли;
	Исключение 
	КонецПопытки;
	
	// балансовая стоимость валюты по налоговому учету
	БалСтоимостьГрн = 0;
	БалСтоимостьВал = 0;
	КоррРСчет = "";
	Если Валюта <> Гривня Тогда
		БалСтоимостьВал = СуммаВал;
		БалСтоимостьГрн = СуммаГрнСНДС;
		Если (Счет.Код = "333") или (Счет.Код = "334") Тогда
			// перечисляем валюту на продажу или возвращаем непроданную
			Если Рсчет <> Субконто2 Тогда
				// р/счета не совпадают, нужно изменить бал.стоимость
				КоррРСчет = Субконто2;
			Иначе
				// изменения бал. стоимости отразятся в документах Покупка\ПродажаВалюты
				БалСтоимостьВал = 0;
				БалСтоимостьГрн = 0;
			КонецЕсли;
		Иначе
			Попытка
				Если (Субконто1.Вид() = "НашиДенежныеСчета") и (Счет.Валютный = 1) Тогда
					КоррРСчет = Субконто1;
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЕсли;
		Если (ПустоеЗначение(КоррРСчет) = 0) И (КоррРСчет <> РСчет) Тогда
			
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			
				//// подсчитаем бал. стоимость для кредитуемого счета
				//Ит = СоздатьОбъект("БухгалтерскиеИтоги");
				//Ит.ИспользоватьРазделительУчета(Фирма);
				//Ит.ИспользоватьСубконто(ВидыСубконто.НашиДенежныеСчета, КоррРСчет, 2);
				//Ит.ВыполнитьЗапрос(ТекущийДокумент(),,"ВЛ",,КоррРСчет.Валюта);
				//БалСтоимостьГрн = ?(Ит.СНД("В") = 0,0,СуммаВал*Ит.СНД("С")/Ит.СНД("В"));
				//Если БалСтоимостьГрн = 0 Тогда
				//	глКомментарий("Балансовая стоимость валюты на кредитуемом счете равна 0! Проверьте остаток на забалансовом счете ВЛ",1,,"!");
				//КонецЕсли;
				//Ит = 0;
				
			// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				
		КонецЕсли;
		БалансовыйКурс = ?(БалСтоимостьВал=0, 0, БалСтоимостьГрн/БалСтоимостьВал);
	КонецЕсли;
	
	// определим счет аванса
	глТаблицаСчетов.УдалитьСтроки();
	Если глВыделятьЛиАвансыПоСчету(Счет) = 1 Тогда		
		Если ВидОплаты = Перечисление.ВидыОплаты.Оплата Тогда
			// покупатель
			СчетАванса = СчетПоКоду(?(Валюта=Гривня,"6811","6812"));
		Иначе
			// поставщик
			СчетАванса = СчетПоКоду(?(Валюта=Гривня,"3711","3712"))
		КонецЕсли;
	ИначеЕсли  глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
		СчетАванса = Счет;		
	КонецЕсли;

	Если Валюта <> Гривня Тогда
		// переоценим счет 30,2
		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = СчетПоКоду("30.2");
		глТаблицаСчетов.Субконто1 = РСчет;
		глТаблицаСчетов.Субконто2 = 0;
		глТаблицаСчетов.Субконто3 = 0;
		глТаблицаСчетов.Валюта = Валюта;
		глТаблицаСчетов.ОперационнаяКР = ОперационнаяКР;
		глТаблицаСчетов.ВидДеятельности = ПолучитьПустоеЗначение("Справочник.ВидыДеятельности");
		// переоценим корреспондирующий счет
		Если глПроверитьСчетВзаиморасчетов(Счет)=0 Тогда
			глТаблицаСчетов.НоваяСтрока();
			глТаблицаСчетов.Счет = Счет;
			глТаблицаСчетов.Субконто1 = Субконто1;
			глТаблицаСчетов.Субконто2 = Субконто2;
			глТаблицаСчетов.Субконто3 = Субконто3;
			глТаблицаСчетов.Валюта = Валюта;
			глТаблицаСчетов.ОперационнаяКР = ОперационнаяКР;
			глТаблицаСчетов.ВидДеятельности = ПолучитьПустоеЗначение("Справочник.ВидыДеятельности");
		КонецЕсли;	
	КонецЕсли;
	
	// в комментарий проводки будем дописывать вид операции
	Если (Счет.Код = "361") или (Счет.Код = "362") Тогда
		СтрОснование = "Оплата заказа покупателем";
	ИначеЕсли (Счет.Код = "3721") или (Счет.Код = "3722") Тогда
		СтрОснование = "Приход денег из подотчета";
	ИначеЕсли (Счет.Код = "311") или (Счет.Код = "312") 
	или (Счет.Код = "313") или (Счет.Код = "314") Тогда
		СтрОснование = "Поступление денег из банка";
	Иначе
		СтрОснование = "";
	КонецЕсли;
	Если ПустоеЗначение(Основание) = 0 Тогда
		Если ПустоеЗначение(СтрОснование) = 1 Тогда
			СтрОснование = Основание;
		Иначе
			СтрОснование = СтрОснование + ", " + Основание;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ДвиженияВзаиморасчеты()
	Перем тбДолги;
	
	КонтрагентРасчетов = Субконто1;// + umk
	
	// + umk
	Если КассовыйМетодБонусы = 1 Тогда	
		ОсновнойПартнер = глОсновнойКонтрагентИерархии(Субконто1.Родитель,Субконто1);
		Если ПустоеЗначение(ОсновнойПартнер) = 0 Тогда
			КонтрагентРасчетов = ОсновнойПартнер;
		КонецЕсли;
	КонецЕсли;
	ДокументДоговор_ = ?(КонтрагентРасчетов.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,ДокументДоговор, КонтрагентРасчетов.БазДоговор); //  + umk заменим договор 
	// - umk
	
	ВремРегистры=СоздатьОбъект("Регистры");
	Если (ВидОплаты = Перечисление.ВидыОплаты.Оплата) Тогда
		Рег=ВремРегистры.ВзаиморасчетыПокупателей;
		ЗнакОплаты = -1; 
	Иначе // Если (ВидОплаты = Перечисление.ВидыОплаты.Возврат) Тогда
		Рег=ВремРегистры.ВзаиморасчетыПоставщиков;
		ЗнакОплаты = +1; 
	КонецЕсли;
	
	Рег.УстановитьЗначениеФильтра("Фирма",Фирма,1);
	Рег.УстановитьЗначениеФильтра("Контрагент",КонтрагентРасчетов,1);
	Рег.УстановитьЗначениеФильтра("Валюта",Валюта,1);
	
	Если ИтогиАктуальны()=0 Тогда
		Рег.ВременныйРасчет();
		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;
	Рег.ВыгрузитьИтоги(тбДолги,1,1);
	
	СуммаПогашения = СуммаВал;
	СтавкаНДСПогашения = ВидНДС;
	СуммаНДС = НДС;
	Если РСчет.Валюта <> Гривня Тогда
		СуммаПогашенияГрн = СуммаГрнПост;
	Иначе
		СуммаПогашенияГрн = 0;
	КонецЕсли;
	
	НеВключаетсяВВДВР = ?(СубконтоВалДохРасх=Константа.НиДоходНиРасход, 1, 0);

	Если СуммаПогашения = 0 Тогда
		Регистр.ВзаиморасчетыПокупателей.ДвижениеРасход(Фирма, КонтрагентРасчетов, ДокументДоговор_, ВидНДС, ТекущийДокумент(), ТекущийДокумент(), Валюта, 0.01, 0.01, АвансоваяОплата, 0, 0, 1);
		Регистр.ВзаиморасчетыПокупателей.ДвижениеРасход(Фирма, КонтрагентРасчетов, ДокументДоговор_, ВидНДС, ТекущийДокумент(), ТекущийДокумент(), Валюта, -0.01, -0.01, АвансоваяОплата, 0, 0, 1);		
	Иначе		
		глПогашениеДолга(Контекст,ЗнакОплаты,тбДолги,Фирма,КонтрагентРасчетов,ВидОплаты,
		ДокументОснование,ДокументДоговор_,РежимОплаты,СуммаПогашения,СуммаНДС,Валюта,
		СтавкаНДСПогашения,НеВключаетсяВВДВР,БалансовыйКурс,СуммаПогашенияГрн);		
	КонецЕсли;
	
	Если Валюта <> Гривня Тогда
		ВалютаПроводки = Валюта;
		СуммаВалютная = СуммаВал;
		Если (РСчет.Валюта <> Гривня) и (СуммаГрнПост <> 0) Тогда
			СуммаГрн = СуммаГрнПост;
		Иначе
			СуммаГрн = глПересчет(СуммаВал,Валюта,Гривня,ДатаДок);  
		КонецЕсли;
	Иначе
		ВалютаПроводки = ПолучитьПустоеЗначение("Справочник.Валюты");
		СуммаВалютная = 0;
		СуммаГрн = СуммаВал;
	КонецЕсли;	
                                
	// главная корреспонденция сложной проводки
	глПроводка(Контекст,РСчет.СчетУчета,,СуммаГрн,СтрОснование,, РСчет,,,
	,,, ВалютаПроводки,СуммаВалютная,"БК",1,1,1);

	// формирование проводок на основании движений по регистру
	Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока Рег.ПолучитьДвижение() = 1 Цикл

		Если Рег.Валюта <> Гривня Тогда
			ВалютаПроводки = Рег.Валюта;
			СуммаВалютная = Рег.Долг;
			СуммаГрн = Рег.ДолгОсн;
		Иначе
			ВалютаПроводки = ПолучитьПустоеЗначение("Справочник.Валюты");
			СуммаВалютная = 0;
			СуммаГрн = Рег.Долг;
		КонецЕсли;
		Контрагент = Рег.Контрагент;
		Договор = Рег.Договор;
		Если ВидОплаты = Перечисление.ВидыОплаты.Возврат Тогда
			СуммаВалютная = - СуммаВалютная;
			СуммаГрн = - СуммаГрн;
		КонецЕсли;	
		                           
		// подчиненные корреспонденции
		Если (Рег.КодОперации = АвансоваяОплата) Или (Рег.КодОперации = ВозвратПостОплаты) Тогда
			глПроводка(Контекст,,СчетАванса,СуммаГрн,СтрОснование,, ,,,
			Контрагент,Договор, ,ВалютаПроводки,СуммаВалютная,"БК",1,1);
		ИначеЕсли (Рег.КодОперации = ПостОплата) Или (Рег.КодОперации = ВозвратАвансовойОплаты) Тогда
			глПроводка(Контекст,,Счет,СуммаГрн,СтрОснование,, ,,,
			Контрагент,Договор,, ВалютаПроводки,СуммаВалютная,"БК",1,1);
		КонецЕсли;
		
		// Делаем проводки по НДС, если установлены соотв. флаги в регистре
		Если глДелатьПроводкиПоНалогам(Рег,"НДС") = 1 Тогда
			Если ЗнакОплаты = -1 Тогда // покупатели, оплата
			    глПроводка(Контекст,"64.3","64.1.5",Рег.НДС,"НДС",, Контрагент,Договор,,
			    ВидНДС,,, ,,"БК",1,0);
			Иначе // поставщики, возврат
				Если (Константа.НДСпоВходящимНН = Да) И (Валюта = Гривня) Тогда
					// проводку по налоговому кредиту сделаем в 
					// документе ЗаписьКнигиПриобретения
					СчетНДС = СчетПоКоду("64.4.2");
					СубконтоНДС1 = Контрагент;
					СубконтоНДС2 = Договор;
				Иначе
					// сразу налоговый кредит
					СчетНДС = СчетПоКоду("64.1.5");
					СубконтоНДС1 = ВидНДС;
					СубконтоНДС2 = 0;
				КонецЕсли;
				глПроводка(Контекст,СчетНДС,"64.4.1",Рег.НДС,"НДС, сторно",, СубконтоНДС1,СубконтоНДС2,,
				Контрагент,Договор,, ,,"БК",1,0);
			КонецЕсли;
		КонецЕсли;
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		//// Делаем проводки по валовым доходам/расходам, если установлены соотв. флаги в регистре 
		//Если глДелатьПроводкиПоНалогам(Рег,"ВД/ВР") = 1 Тогда
		//	Если ЗнакОплаты = -1 Тогда  // покупатели, оплата
		//		глПроводка(Контекст,"ВД","ВД",Рег.СуммаСНДС_НУ-Рег.НДС,"Валовые доходы",,Контрагент,Договор,СубконтоВалДохРасх,
		//		Контрагент,Договор,СубконтоВалДохРасх, ,,"БК",1,0);
		//	Иначе // поставщики, Возврат
		//		глПроводка(Контекст,"ВР","ВР",Рег.СуммаСНДС_НУ-Рег.НДС,"Валовые расходы, сторно",,Контрагент,Договор,СубконтоВалДохРасх,
		//		Контрагент,Договор,СубконтоВалДохРасх, ,,"БК",1,0);
		//	КонецЕсли;
		//КонецЕсли;
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			
	КонецЦикла;	// по движениям
	
	// + umk 
	БазаРасчета = СуммаВал;
	
	Если КассовыйМетодБонусы = 1 Тогда
		//Выполнить движения по остаткам долгов для бонусов рассчитанных по отгрузке
		глПогаситьДолгОстаткиБонусов(Контекст, КонтрагентРасчетов, СуммаВал, 1, Субконто2);
		
		Долг = глОстатокДолгаВзаиморасчетыБонусы(ТекущийДокумент(), Фирма, КонтрагентРасчетов, Субконто2, Валюта);
		
		Если Долг < СуммаВал Тогда
			БазаРасчета = СуммаВал - Долг;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;

	глНачислитьБонусы(Контекст, Субконто1, Субконто2, 1, БазаРасчета,,1);
	
	//проценты банка по эквайрингу
	Если ПустоеЗначение(СчетЗатрат) = 0 Тогда
		СуммаЗатрат = СуммаВал*БанкУслуги/100;
		СуммаЗатратВал = СуммаВал*БанкУслуги/100;
		глПроводка(Контекст,СчетЗатрат,РСчет.СчетУчета,СуммаЗатрат,"Проценты банка по эквайрингу",1,,,Константа.ВидЗатратУслугиБанкаЭквайринг,РСчет,,,,,"БК",1,0);
	КонецЕсли;
	
КонецПроцедуры // ДвиженияВзаиморасчеты()

// ===============================
Процедура ДвиженияШапка()
	Если Валюта <> Гривня Тогда
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		//// бал. стоимость по налоговому учету
		//Если КоррРСчет <> РСчет Тогда
		//	глПроводка(Контекст,"ВЛ",,БалСтоимостьГрн,СтрОснование,, РСчет,,,
		//	,,, Валюта,БалСтоимостьВал,"БК");
		//	Если ПустоеЗначение(КоррРСчет) = 0 Тогда
		//		// если с другого валютного счета, то покажем изменение бал. стоимости на нем
		//		глПроводка(Контекст,,"ВЛ",БалСтоимостьГрн,СтрОснование,, ,,,
		//		КоррРСчет,,, Валюта,БалСтоимостьВал,"БК");
		//	КонецЕсли;
		//КонецЕсли;
		
		// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
	КонецЕсли;
	
	Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
		ДвиженияВзаиморасчеты();
	Иначе
		Если Валюта = Гривня Тогда
			глПроводка(Контекст,РСчет.СчетУчета,Счет,СуммаГрнСНДС,СтрОснование,, РСчет,,,
			Субконто1,Субконто2,Субконто3, ,,"БК");
		Иначе
			Если СуммаГрнПост = 0 Тогда
			    СуммаГрн = СуммаГрнСНДС;
			Иначе
				СуммаГрн = СуммаГрнПост;
			КонецЕсли;
			глПроводка(Контекст,РСчет.СчетУчета,Счет,СуммаГрн,СтрОснование,, РСчет,,,
			Субконто1,Субконто2,Субконто3, Валюта,СуммаВал,"БК");
		КонецЕсли;
		
		Если ВидОплаты = Перечисление.ВидыОплаты.Оплата Тогда
			ВалДох = Макс((СуммаГрнСНДС - СуммаГрнНДС), 0);
			
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			//Если СубконтоВалДохРасх <> Константа.НиДоходНиРасход Тогда
			//	глПроводка(Контекст,"ВД","ВД",ВалДох,"Валовые доходы",, Субконто1,Субконто2,СубконтоВалДохРасх,
			//	Субконто1,Субконто2,СубконтоВалДохРасх, ,,"БК");
			//КонецЕсли;
			// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			
		ИначеЕсли ВидОплаты = Перечисление.ВидыОплаты.Возврат Тогда
			ВалИзд = Макс(СуммаВал - НДС, 0);
			Если РСчет.Валюта <> Гривня Тогда
				// валовые расходы показываем в размере балансовой стоимости
				ВалИзд = ?(БалСтоимостьВал=0, 0, БалСтоимостьГрн*ВалИзд/БалСтоимостьВал);
			КонецЕсли;
			
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			//Если СубконтоВалДохРасх <> Константа.НиДоходНиРасход Тогда
			//	глПроводка(Контекст,"ВР","ВР",-ВалИзд,"Валовые расходы, сторно",, Субконто1,Субконто2,СубконтоВалДохРасх,
			//	Субконто1,Субконто2,СубконтоВалДохРасх, ,,"БК");
			//КонецЕсли;
			// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	//глКомментарий("Начало",2,Контекст);
	
	Если ПроверкаШапки()=0 Тогда
		глНеПроводить(Контекст);
		Возврат;
	КонецЕсли;
	
	Если НеПроводить = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Валюта = РСчет.Валюта;
	БанкУслуги = РСчет.БанковскиеУслуги.Получить(ДатаДок);// + umk
	
	БалансовыйКурс = 0;
	РассчитатьШапку();
	ДвиженияШапка();
	глЗаписатьПроводкиВОперацию(Контекст);
	
	Если Валюта <> Гривня Тогда							
		глПереоценкаСчетов(Контекст, глТаблицаСчетов);
	КонецЕсли;
	
	Операция.СуммаОперации = СуммаВал;
	Операция.Содержание = Строка(Субконто1)+" "+Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (15.09.14)	
Процедура ОбработкаУдаленияПроведения()	
	Если (НазваниеНабораПрав() = "Заказ") и (РСчет.ДоступЗаказ = 0) Тогда
		Предупреждение("Вы не имеете права отменять проведение чужих кассовых ордеров", 20);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если ((НазваниеНабораПрав() = "ПроизводствоКасса") ИЛИ (НазваниеНабораПрав() = "ПроизводствоСбыт")) и (РСчет.ДоступПроизводствоКасса = 0) Тогда //--- УМК Сандомирский В.Ю. (24.07.14) доступ к кассе "ПроизводствоКасса"
		Предупреждение("Вы не имеете права отменять проведение чужих кассовых ордеров", 20);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
КонецПроцедуры

КассовыйМетодБонусы = ?((ПустоеЗначение(Константа.КассовыйМетодРасчетаБонусов)=0) И (ДатаДок>=Константа.КассовыйМетодРасчетаБонусов),1,0); // + umk