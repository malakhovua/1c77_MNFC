Перем НомерПоследнейСтроки;
Перем НДСПервоеСобытие, НДСВтороеСобытие, ВзаиморасчетыГрн; // для исправления ошибок при округлениях
Перем ВремРег;
Перем ПервыйДок, ПоЗаказу;

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(Контрагент,"Контрагент");
	глВыбранЛи(ВидТорговли,"Вид торговли");
	глВыбранЛи(МестоХранения,"Место хранения");			
    глВыбранЛи(СубконтоВалДох,"Субконто валовых доходов");
	глВыбранЛи(ВидНДС,"Вид НДС");
	глВыбранЛи(Валюта,"Валюта");   
  	глВсеВыбрано = ?(глВсеВыбрано = 0, 0, глПроверкаДублейСтрок(Контекст));
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		глВыбранЛи(ЭККА,"ЭККА");
		глВыбранЛи(Касса,"Касса");
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
	глВыбранЛи(Ед,"Единица",НомерСтроки);
	Если МестоХранения.СуммовойУчет <> 1 Тогда
		глВыбранЛи(Кво,"Количество",НомерСтроки);
	КонецЕсли;	
	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
	ЕстьКалькулируемыеУслуги = 0;
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		Если глПолучитьНормы(ТМЦ,,1,ДатаДок,ПоЗаказу,,1)=1 Тогда // калькулируемая услуга
			ЕстьКалькулируемыеУслуги = 1;
		    глВыбранЛи(ТМЦ.ВидДеятельности,"Вид деятельности в ТМЦ",НомерСтроки);  
			Если глВсеВыбрано = 1 Тогда
				Если (ТМЦ.ВидДеятельности.ПозаказноеПроизводство = Да) И (ПустоеЗначение(ПоЗаказу) = 1) Тогда
					глКомментарий("В строке "+НомерСтроки+" выбрана услуга, в карточке которой указан вид деятельности с позаказным производством!",0,,"!");
					глВсеВыбрано = 0;                         
				ИначеЕсли (ТМЦ.ВидДеятельности.ПозаказноеПроизводство = Нет) И (ПустоеЗначение(ПоЗаказу) = 0) Тогда
					глКомментарий("В строке "+НомерСтроки+" выбрана услуга, в карточке которой указан вид деятельности с непозаказным производством!",0,,"!");
					глВсеВыбрано = 0;                         
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ЕстьКалькулируемыеУслуги = 1 Тогда
		глВыбранЛи(ПодразделениеПроизв,"Подразделение производства");
		глПроверитьТипПодразделения(ПодразделениеПроизв,"подразделения производства");
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции           

// ===============================
Процедура РассчитатьШапку()
	// определяем заказ в документе для проводок по услугам
	ПоЗаказу = глПолучитьЗаказ(Договор);

	ВремРег = СоздатьОбъект("Регистры");
	// взаиморасчеты
	ФлагОтгрузки = 1;
	ЗнакОплаты = -1;
	Если ПустоеЗначение(Договор) = 1 Тогда
	    ПервыйДок = ПолучитьПустоеЗначение("Документ");
	ИначеЕсли Найти("Договор,Заказ",Договор.Вид()) <> 0 Тогда
	    ПервыйДок = Договор;
	Иначе
		ПервыйДок = ПолучитьПустоеЗначение("Документ");
	КонецЕсли;
	
	глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,ЗнакОплаты, Контрагент, Договор, Валюта);
КонецПроцедуры

// ===============================
Процедура ДвиженияВзаиморасчеты()
	глКомментарий("Выполняются движения по взаиморасчетам",2);
	
	ФлагОтгрузки = 1;
	ЗнакОплаты = -1;
	тбСуммыПогашения = глПолучитьСуммыДляПогашения(Контекст, Фирма, Валюта);
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРег, Фирма, ЗнакОплаты, Контрагент, Договор, Валюта);
	глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, 1, Фирма, тбДолги, тбСуммыПогашения, Валюта,Контрагент, Договор, ВидТорговли, ДокументОснование);
	НДСПервоеСобытие = 0;
	НДСВтороеСобытие = 0;
	ВзаиморасчетыГрн = 0;
	СчетКонтрагента = ?(Валюта=Гривня,СчетПоКоду("361"),СчетПоКоду("362"));
	РегПокупатели=ВремРег.ВзаиморасчетыПокупателей;	
	РегПокупатели.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегПокупатели.ПолучитьДвижение() = 1 Цикл
		Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
			 //При оплате наличными формируются 2 движения
			Если РегПокупатели.Приход = 1 Тогда // Продажа 
				Если ((РегПокупатели.КодОперации = ВозвратАвансовойОтгрузки)
				ИЛИ (РегПокупатели.КодОперации = АвансоваяОтгрузка)
				ИЛИ (РегПокупатели.КодОперации = ВозвратПостОтгрузки)
				ИЛИ (РегПокупатели.КодОперации = ПостОтгрузка)) Тогда     					
					// проводки по взаиморасчетам
					Если Валюта = Гривня Тогда
						глПроводка(Контекст,,СчетКонтрагента,-РегПокупатели.Долг,"Реализация",, ,,,
						Контрагент,ПервыйДок,, ,,"НК",1,"Реализация",1);					
					Иначе	
						глПроводка(Контекст,,СчетКонтрагента,-РегПокупатели.ДолгОсн,"Реализация",, ,,,
						Контрагент,ПервыйДок,, РегПокупатели.Валюта,РегПокупатели.Долг,"НК",1,"Реализация",1);					
					КонецЕсли;	  
					ВзаиморасчетыГрн = ВзаиморасчетыГрн + РегПокупатели.ДолгОсн;
				КонецЕсли;	      
				// сформируем проводки по НДС
				Если (глДелатьПроводкиПоНалогам(РегПокупатели,"НДС") = 1)
				И (КонечныйПотребитель <> 1) Тогда
					глПроводка(Контекст,,"6415",РегПокупатели.НДС,"НДС: оплата наличными",, ,,,
					ВидНДС,,, ,,"РЗ",1,"НДС оплата наличными",1);                                                     
					НДСПервоеСобытие = НДСПервоеСобытие + РегПокупатели.НДС;
				КонецЕсли;	
				
				// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				//// сформируем проводки по ВД/ВР
				//Если (глДелатьПроводкиПоНалогам(РегПокупатели,"ВД/ВР") = 1)
				//И (СубконтоВалДох <> Константа.НиДоходНиРасход) Тогда
				//	глПроводка(Контекст,"ВД","ВД",РегПокупатели.СуммаСНДС_НУ-РегПокупатели.НДС,"Валовые доходы",, Контрагент,ПервыйДок,СубконтоВалДох,
				//	Контрагент,ПервыйДок,СубконтоВалДох, ,,"РЗ",1,0);
				//КонецЕсли;
				// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				
			Иначе // Оплата
				Если Константа.ПроводкиПоКассеТолькоОрдерами <> Да Тогда
					Если ((РегПокупатели.КодОперации = ВозвратАвансовойОтгрузки)
					ИЛИ (РегПокупатели.КодОперации = АвансоваяОтгрузка)
					ИЛИ (РегПокупатели.КодОперации = ВозвратПостОтгрузки)
					ИЛИ (РегПокупатели.КодОперации = ПостОтгрузка)
					ИЛИ (РегПокупатели.КодОперации = ПостОплата)) Тогда     					
						// Проводки по взаиморасчетам. Оплата.
						Если Валюта = Гривня Тогда
							глПроводка(Контекст,"301",СчетКонтрагента,РегПокупатели.ДолгОсн,"Реализация: ",, Касса,,,
							Контрагент,ПервыйДок,, ,,"РЗ",1,0);
						Иначе	
							глПроводка(Контекст,"302",СчетКонтрагента,РегПокупатели.ДолгОсн,"Реализация: ",, Касса,,,
							Контрагент,ПервыйДок,, РегПокупатели.Валюта,РегПокупатели.Долг,"РЗ",1,0);
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;	 
			КонецЕсли;	
		Иначе			
			Если (Найти(АвансоваяОтгрузка+ВозвратАвансовойОтгрузки+ПостОтгрузка+ВозвратПостОтгрузки,РегПокупатели.КодОперации) = 0) Тогда
				// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
				Продолжить;	
			КонецЕсли;      
			// проводки по взаиморасчетам
			Если Валюта = Гривня Тогда
				глПроводка(Контекст,,СчетКонтрагента,-РегПокупатели.Долг,"Реализация",, ,,,
				Контрагент,ПервыйДок,, ,,"НК",1,"Реализация",1);					
			Иначе	
				глПроводка(Контекст,,СчетКонтрагента,-РегПокупатели.ДолгОсн,"Реализация",, ,,,
				Контрагент,ПервыйДок,, РегПокупатели.Валюта,-РегПокупатели.Долг,"НК",1,"Реализация",1);					
			КонецЕсли;	  
			ВзаиморасчетыГрн = ВзаиморасчетыГрн + РегПокупатели.ДолгОсн;
			// погасим аванс
			Если (глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1)
			И (РегПокупатели.КодОперации = ВозвратАвансовойОтгрузки) Тогда
				Если Валюта=Гривня Тогда
					глПроводка(Контекст,"6811",СчетКонтрагента,РегПокупатели.Долг,"Реализация, сторно: авансовый платеж",, Контрагент,ПервыйДок,,
					Контрагент,ПервыйДок,, ,,"НК",1,0);
				Иначе
					глПроводка(Контекст,"6812",СчетКонтрагента,РегПокупатели.ДолгОсн,"Реализация за валюту, сторно: авансовый платеж",, Контрагент,ПервыйДок,,
					Контрагент,ПервыйДок,, РегПокупатели.Валюта,РегПокупатели.Долг,"НК",1,0);
				КонецЕсли;
			КонецЕсли;
			// сформируем проводки по НДС
			Если (глДелатьПроводкиПоНалогам(РегПокупатели,"НДС") = 1)
			И (КонечныйПотребитель <> 1) Тогда
				Если ((РегПокупатели.КодОперации = ВозвратПостОтгрузки)
				ИЛИ (РегПокупатели.КодОперации = АвансоваяОтгрузка)
				ИЛИ (РегПокупатели.КодОперации = ПервоеСобытиеБартерРасход)) Тогда
					// для первого события
					глПроводка(Контекст,,"64.1.5",РегПокупатели.НДС,"НДС: первое событие",, ,,,
						ВидНДС,,, ,,"НК",1,"НДС первого события",1);                                                     
					НДСПервоеСобытие = НДСПервоеСобытие + РегПокупатели.НДС;
				ИначеЕсли ((РегПокупатели.КодОперации = ВозвратАвансовойОтгрузки)
				ИЛИ (РегПокупатели.КодОперации = ПостОтгрузка)) Тогда
					// для второго события
					глПроводка(Контекст,,"64.3",РегПокупатели.НДС,"НДС: второе событие",, ,,,
					Контрагент,ПервыйДок,, ,,"НК",1,"НДС второго события",1);
					// посчитаем НДС предварительной оплаты, учитывая, что по регситру прошли стрнирующие движения
					НДСВтороеСобытие = НДСВтороеСобытие + РегПокупатели.НДС;
				КонецЕсли;
			КонецЕсли;		
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			// сформируем проводки по ВД/ВР
			//Если глДелатьПроводкиПоНалогам(РегПокупатели,"ВД/ВР") = 1 Тогда
			//	Если СубконтоВалДох <> Константа.НиДоходНиРасход Тогда
			//		глПроводка(Контекст,"ВД","ВД",РегПокупатели.СуммаСНДС_НУ-РегПокупатели.НДС,"Валовые доходы",, Контрагент,ПервыйДок,СубконтоВалДох,
			//		Контрагент,ПервыйДок,СубконтоВалДох, ,,"НК",1,0);
			//	КонецЕсли;
			//КонецЕсли;	
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		КонецЕсли;
	КонецЦикла;                                                             
КонецПроцедуры

//// Формирует проводки на основании движений по регистру Партии и Обороты.
//// Используются не суммы из движений, а те же суммы которые используются 
//// для формирования движений по регистрам.
//// ОстатокТовара - количество ТМЦ, которое надо списать
//// Стоимость - себестоимость ТМЦ, которую надо списать
//// ПродСтоимость - розничная наценка на ТМЦ, которую надо списать
//// Донаценка - разница между себестоимостью+розничной наценкой и ценой продажи
//// НДС - НДС ТМЦ
//// СписываемаяПартия - партия, которую надо списать
//// СчетУчета - счет учета ТМЦ
//// СчетНаценки - счет учета розничной наценки
// ===============================
Процедура ПроводкиТовар(ОстатокТовара, Стоимость, ПродСтоимость,Донаценка,СписываемаяПартия,СчетУчета,СчетНаценки)
	Если ПустоеЗначение(СчетНаценки) = 0 Тогда
		// спишем наценку
		глПроводка(Контекст,СчетНаценки,СчетУчета,-(ПродСтоимость-Стоимость+Донаценка),"Торговая наценка: сторно",,
		МестоХранения,ТМЦ,СписываемаяПартия,МестоХранения,ТМЦ,СписываемаяПартия,,,"РЗ",1,0);
		// дооценим
		глПроводка(Контекст,СчетНаценки,СчетУчета,-Донаценка,"Донаценка: сторно",,
		МестоХранения,ТМЦ,СписываемаяПартия,МестоХранения,ТМЦ,СписываемаяПартия,,,"РЗ",1,0);
	КонецЕсли;
	СчРеал = глСчетРеализации(ТМЦ,1);
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		// услуг
		глПроводка(Контекст,СчРеал,СчетУчета,-Стоимость,"Ст-сть в отпускных ценах: сторно",-ОстатокТовара, ТМЦ.ВидДеятельности,ПодразделениеПроизв,ТМЦ.ВидЗатрат,
		ТМЦ.ВидДеятельности,ПодразделениеПроизв,ТМЦ.ВидЗатрат, ,,"РЗ",1,0);  
	Иначе	    
		// обычных ТМЦ
		глПроводка(Контекст,СчРеал,СчетУчета,-Стоимость,"Ст-сть в отпускных ценах: сторно",-ОстатокТовара, ТМЦ.ВидДеятельности,Подразделение,,
		МестоХранения,ТМЦ,СписываемаяПартия, ,,"РЗ",1,0);  
	КонецЕсли;	
КонецПроцедуры

// Наименование: СформироватьДвиженияПартии
// Назначение: рассчитать необходимеы параметры и сформировать движения по регистрам 
// Партии и Обороты. Сформировать проводки.
//		В процессе обработки в процедуре изменятся следующие пареметры:
//															ОсталосьСписать											
//															ОсталосьСуммаСНДСПоСтроке											
//															ОсталосьСуммаБезНДСПоСтроке											
// Параметры: 
// 			тбОстатки - таблица остатков, при списании кол-ва большего, чем есть на складе, этот параметр пустой
//			тбПартии - таблица партий, при списании кол-ва большего, чем есть на складе, этот параметр пустой
//			ОсталосьСписать - количество ТМц, которое необходимо списать
// 			ВсегоСписатьПоСтроке - количество ТМЦ, указанное в строке документа в базовых единица
//			ВсегоСуммаСНДСПоСтроке - сумма с НДС указанная в строке документа, пересчитанная по курсу документа в гривни
//			ВсегоСуммаБезНДСПоСтроке - сумма без НДС указанная в строке документа, пересчитанная по курсу документа в гривни
// 			ОсталосьСуммаСНДСПоСтроке - сумма с НДС, которую необходимо списать
//			ОсталосьСуммаБезНДСПоСтроке - сумма без НДС, которую необходимо списать
//			ПоставщикП - поставщик, для проведения по регистрам
//			ПоставкаП - документ поставки, для проведения по регистрам
//			ПрихДокументП - приходный документ, для проведения по регситрам
// ===============================
Процедура СформироватьДвиженияПартии(тбОстатки,тбПартии,ОсталосьСписать,ВсегоСписатьПоСтроке,ВсегоСуммаСНДСПоСтроке,
	ВсегоСуммаБезНДСПоСтроке,ОсталосьСуммаСНДСПоСтроке,ОсталосьСуммаБезНДСПоСтроке,ОсталосьСуммаУчБезНДСПоСтроке,ПоставщикП,ПоставкаП,ПрихДокументП)
	
	Если ПустоеЗначение(тбОстатки) = 1 Тогда
		ОстатокТовараПоПартии = 0;

		// если надо списать больше чем есть на складе
		СписываемыйОстатокТовара = ОсталосьСписать;	
		// себестоимость равна сумме реализации
		СписываемаяСтоимость = ОсталосьСуммаУчБезНДСПоСтроке;
		СписываемаяПродСтоимость = ОсталосьСуммаСНДСПоСтроке;
		СписываемыйНДС = ОсталосьСуммаСНДСПоСтроке - ОсталосьСуммаБезНДСПоСтроке;
		// определим сумму реализации текущей списываемой партии
		СуммаРеализацииБезНДС = ОсталосьСуммаБезНДСПоСтроке;
		СуммаРеализацииСНДС = СуммаРеализацииБезНДС + СписываемыйНДС;
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
			СчетП = ГлПолучитьСчетУчетаТМЦ("ТараВозвратная",ТМЦ);
		Иначе
			Если МестоХранения.ВидСклада <> Перечисление.ВидыСкладов.Розничный Тогда
				СчетП = ТМЦ.Счет;
			ИначеЕсли ((ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) 
			ИЛИ (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)) Тогда 
				СчетП = СчетПоКоду("2822");
			Иначе
				СчетП = СчетПоКоду("2821");
			КонецЕсли;	
		КонецЕсли;
	Иначе	                                          
		ОстатокТовараПоПартии = тбОстатки.ОстатокТовара;
		// нормальное списание
		СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовараПоПартии);
		Если МестоХранения.СуммовойУчет = 1 Тогда
			// для склада с суммовым учетом списывем все что указано в документе
			СписываемаяПродСтоимость = ОсталосьСуммаСНДСПоСтроке;
		Иначе
			КоэфСписания = СписываемыйОстатокТовара / ОстатокТовараПоПартии;
			КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписатьПоСтроке;
			// определим себестоимость текущей списываемой партии
			СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
			СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
		КонецЕсли;
		// определим сумму реализации текущей списываемой партии
		Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
			// если списывается вся сумма указаная в строке документа
			СуммаРеализацииСНДС = ОсталосьСуммаСНДСПоСтроке;
			СуммаРеализацииБезНДС = ОсталосьСуммаБезНДСПоСтроке;
		Иначе                                                
			// если списывется часть суммы указаной в строке документа 
			СуммаРеализацииСНДС = Окр(ВсегоСуммаСНДСПоСтроке * КоэфРеализации,2);
			СуммаРеализацииБезНДС = Окр(ВсегоСуммаБезНДСПоСтроке * КоэфРеализации,2);
		КонецЕсли;  
		СчетП = тбПартии.Счет;		
	КонецЕсли;	
	                                                                
	// доход от продажи 
	Доход = СуммаРеализацииБезНДС - СписываемаяСтоимость;
	// осталось списать по суммам
	ОсталосьСуммаБезНДСПоСтроке = ОсталосьСуммаБезНДСПоСтроке - СуммаРеализацииБезНДС;
	ОсталосьСуммаСНДСПоСтроке = ОсталосьСуммаСНДСПоСтроке - СуммаРеализацииСНДС;
	ОсталосьСуммаУчБезНДСПоСтроке = ОсталосьСуммаУчБезНДСПоСтроке - СписываемаяСтоимость;
	КодОперации = ?(МестоХранения.ВидСклада<>Перечисление.ВидыСкладов.Розничный,ВозвратОтПокупателя,ВозвратРозничный);
	МестоХраненияП = ?(глПартионныйУчетПоСкладам = Да,МестоХранения,0);
	глПровестиПартию(Контекст, 1, 1, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП, 
		ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
		КодОперации, 1, СуммаРеализацииБезНДС, Доход);
		                             
	Если МестоХранения.СуммовойУчет = 1 Тогда
		ПроводкиТовар(СписываемыйОстатокТовара, , СуммаРеализацииСНДС,,ПоставкаП,СчетП,);
	ИначеЕсли МестоХранения.ВидСклада <> Перечисление.ВидыСкладов.Розничный Тогда
		ПроводкиТовар(СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,СуммаРеализацииСНДС-СписываемаяПродСтоимость,ПоставкаП,СчетП,"");
	ИначеЕсли ((ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат)
	ИЛИ (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)) Тогда
		ПроводкиТовар(СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,СуммаРеализацииСНДС-СписываемаяПродСтоимость,ПоставкаП,СчетП,СчетПоКоду("28.5.2"));
	Иначе
		ПроводкиТовар(СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,СуммаРеализацииСНДС-СписываемаяПродСтоимость,ПоставкаП,СчетП,СчетПоКоду("28.5.1"));
	КонецЕсли;	
	Если ПустоеЗначение(тбПартии) = 0 Тогда
		глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость);
	КонецЕсли;	
	ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
КонецПроцедуры

// ===============================
Процедура ДвиженияПартии()
Перем ИтогСуммаСНДС, ИтогНДС;	// базы распределения сумм
	
	глКомментарий("Выполняются движения партий ТМЦ",2);

	// инициализация алгоритмов корректного распределения
	глОчиститьКлючОкр("Взаим");
	глОчиститьКлючОкр("НДС");
	глОчиститьКлючОкр("НДСперв");

	ФлагПрихода = 1;
	// определим документ по которому зарезервированы ТМЦ
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ДокументОснование.Вид() = "Счет" Тогда
			РезервПоСчету = ДокументОснование;
		КонецЕсли;	
	КонецЕсли;

	// расчитаем базы распределения 
	глОпределитьБазыРаспределения(Контекст, ИтогСуммаСНДС, ИтогНДС);
	ИтогСуммаСНДС		= глПересчет(ИтогСуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
	ИтогНДС 			= глПересчет(ИтогНДС      ,Валюта,ДатаДок,Гривня,ДатаДок);
	НДСпоВзаиморасчетам	= НДСПервоеСобытие + НДСВтороеСобытие;
	СкидкаГрн           = глПересчет(Скидка       ,Валюта,ДатаДок,Гривня,ДатаДок);
	КоэфСкидки          = ?(ИтогСуммаСНДС = 0, 0, СкидкаГрн / (ИтогСуммаСНДС + СкидкаГрн));

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		МетодРасчетаСебестоимости=глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок);
		Если ВидНДС <> ОсновнаяСтавкаНДС Тогда                                     
			ПроцНДС = глПроцентНДС(ВидНДС,ДатаДок);
		Иначе
			ПроцНДС = глПроцентНДС(ТМЦ.СтавкаНДС,ДатаДок);
		КонецЕсли;
		КоэфБезНДС   = 100 / (100 + ПроцНДС);
		ВсегоСписать = Кво * Коэффициент;			

		// движения по регистру Остатки                                                                          
		глПровестиОстатки(Контекст, ВремРег, Фирма, МестоХранения, ТМЦ,, ВсегоСписать, ФлагПрихода, 1,,,1, РезервПоСчету);	
		ОсталосьСписать = ВсегоСписать;
		
		ВсегоСуммаУчБезНДС    = СуммаУчБезНДС;
		ОсталосьСуммаУчБезНДС = ВсегоСуммаУчБезНДС;
		ПострСуммаСНДС        = глПересчет(СуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
		ПострСуммаСкидки      = ПострСуммаСНДС * КоэфСкидки;
		ПострСуммаСНДС		  = глОкрКорр("Взаим", ?(ИтогСуммаСНДС = 0, 0, -ВзаиморасчетыГрн * (ПострСуммаСНДС - ПострСуммаСкидки) / ИтогСуммаСНДС),2);
		ПострНДС              = ПострСуммаСНДС * (1 - КоэфБезНДС);
		ПострНДС			  = глОкрКорр("НДС", ?(ИтогНДС = 0, 0, -НДСпоВзаиморасчетам * ПострНДС / ИтогНДС),2);
		ПострНДСПерв		  = глОкрКорр("НДСперв", ?(НДСпоВзаиморасчетам = 0, 0, НДСПервоеСобытие * ПострНДС / НДСпоВзаиморасчетам),2);
		ПострСуммаБезНДС 	  = ПострСуммаСНДС - ПострНДС;
		ОсталосьСуммаСНДС	  = ПострСуммаСНДС;
		ОсталосьСуммаБезНДС	  = ПострСуммаБезНДС;

		// Формирование проводок по реализации
		// рассчитаме разницу округления для НДС	
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция Тогда
			ВидТМЦ = "продукция"; 
		ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			ВидТМЦ = "услуги"; 
		Иначе
			ВидТМЦ = "товары"; 
		КонецЕсли;             

		Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
			// вторая часть сложной проводки по доходам
			глПроводка(Контекст,"704",,ПострСуммаСНДС,"Реализация: "+ВидТМЦ,, ТМЦ.ВидДеятельности,Подразделение,МестоХранения,
			,,, ,,"РЗ",1,"Реализация");
			Если КонечныйПотребитель <> 1 Тогда
				глПроводка(Контекст,"704",,-ПострНДС,"НДС: оплата наличными: "+ВидТМЦ,, ТМЦ.ВидДеятельности,Подразделение,МестоХранения,
				,,, ,,"РЗ",1,"НДС оплата наличными");
			КонецЕсли;
		Иначе
			// вторая часть сложной проводки по реализации
			глПроводка(Контекст,"704",,ПострСуммаСНДС,"Реализация: "+ВидТМЦ,, ТМЦ.ВидДеятельности,Подразделение,МестоХранения,
			,,, ,,"РЗ",1,"Реализация");
			Если КонечныйПотребитель <> 1 Тогда
				// в случае предоплаты НДС состоит из части по первому событию и остального, 			
				// проводка для первого события
				глПроводка(Контекст,"704",,-ПострНДСПерв,"НДС: "+СокрЛП(ВидТМЦ)+": первое событие",, ТМЦ.ВидДеятельности,Подразделение,МестоХранения,
					,,, ,,"НК",1,"НДС первого события");                  
				// проводка для второго события
				глПроводка(Контекст,"704",,-(ПострНДС-ПострНДСПерв),"НДС: "+СокрЛП(ВидТМЦ)+": второе событие",, ТМЦ.ВидДеятельности,Подразделение,МестоХранения,
				,,, ,,"НК",1,"НДС второго события");
			КонецЕсли;	
		Конецесли;
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			// получаем нормы
			Если глПолучитьНормы(ТМЦ,,1,ДатаДок,ПоЗаказу,,1)=1 Тогда
				// калькулируемая услуга
				Доход = ПострСуммаБезНДС - ОсталосьСуммаУчБезНДС;
				СчетУч = ТМЦ.Счет;
				СчетУч = ?((ПустоеЗначение(СчетУч)=1) Или (СчетУч = СчетПоКоду("231")),СчетПоКоду("24"),СчетУч);
			Иначе
				Если ОсталосьСуммаУчБезНДС <> 0 Тогда
					глКомментарий(Шаблон("Строка [НомерСтроки]. Для некалькулируемой услуги [ТМЦ] указана ненулевая учетная стоимость. Будут созданы сторнирующие проводки."),0);
				КонецЕсли;
				Доход = 0;
				СчетУч = ТМЦ.Счет;
			КонецЕсли;
			ПроводкиТовар(ОсталосьСписать, ОсталосьСуммаУчБезНДС, 0,ПострСуммаСНДС,ТекущийДокумент(),СчетУч,"");
			глПровестиПартию(Контекст, 1, 1, Фирма, ТМЦ, СчетУч,
				0,0, ТекущийДокумент(), ТекущийДокумент(), ОсталосьСписать, ОсталосьСуммаУчБезНДС, 
				0, СторноПродажаУслуги, 1, ПострСуммаБезНДС, Доход);
			Продолжить;
		КонецЕсли;
		Если МетодРасчетаСебестоимости <> Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
			ПрихДокументП = ТекущийДокумент();
		Иначе
			ПрихДокументП = 0;
		КонецЕсли;           
		// сформируем движения по регистрам и проводки
		СформироватьДвиженияПартии(,,ОсталосьСписать,ВсегоСписать,ПострСуммаСНДС
		,ПострСуммаБезНДС,ОсталосьСуммаСНДС,ОсталосьСуммаБезНДС,ОсталосьСуммаУчБезНДС,,ПрихДокументП,ПрихДокументП);
	КонецЦикла; // строки документа
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения(ЧастичноПровести = 0)
	глКомментарий("Начало",2,Контекст);            
	Если Проведен() = 1 Тогда
		глКомментарий("Документ уже проведен. Чек напечатан не будет.",1);
	КонецЕсли;	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;                           
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
		НомерПоследнейСтроки = НомерСтроки;	
	КонецЦикла;
	РассчитатьШапку();
	Если ЧастичноПровести = 1 Тогда
		Если РежимПроведения<>1 Тогда
			РежимПроведения=1;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	ДвиженияВзаиморасчеты();
	ДвиженияПартии();     
	РежимПроведения=0;
	
	глЗаписатьПроводкиВОперацию(Контекст);
	
	Операция.СуммаОперации = Итог("СуммаСНДС");
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

// ===============================
Процедура ОбработкаУдаленияПроведения()	
	РежимПроведения=0;
КонецПроцедуры