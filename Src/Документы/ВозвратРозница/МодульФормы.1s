// ===============================
// Описание переменных 
Перем СписокДействий;  // Список действий по документу
Перем СтарыйКонтрагент;
Перем СтараяДата;

Перем ВариантыЗаполнения;
Перем НачальнаяДатаДокумента; // Для контроля даты документа
Перем Остатки, Резервы, ОбщРег;
// ===============================
// "служебные" функции и процедуры 

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры

// ===============================
Функция БазыИСуммыТекстом(Ставка,База,НДС)
	Текст = ""+Ставка+". База: "+Формат(База,"Ч12.2")+". Сумма НДС: "+Формат(НДС,"Ч12.2")+".";
	Возврат Текст;
КонецФункции

// ===============================
Процедура ЗаголовокФормы() 
	Перем Заголовок;
	
	Заголовок = "Расходная розничная (возврат)";
	Форма.Заголовок(глЗаголовок(Контекст,Заголовок));     
КонецПроцедуры //ЗаголовокФормы

Процедура Заполнить(ОснованиеДляЗаполнения) Далее
// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&остатки");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
		Если Результат = 1 Тогда
			Заполнить(ДокументОснование);
	    ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 4 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
 
// ===============================
Процедура УстДоступностьКнопок()
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Если РежимПроведения = 0 Тогда
			Форма.кПровести.Доступность(0);
		КонецЕсли;
		Форма.кДействия.Доступность(0);
		
		Форма.кПредварительно.Доступность(0);
		
		Форма.кПодбор.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.кОсн.Доступность(0);
		Форма.кВалюта.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПровестиДокумент()
	глПроверкаДатыДок(Контекст,"Проведение");
	Если СтатусВозврата()=0 Тогда
	    Возврат;
	КонецЕсли;
	Провести();
	Если Проведен() = 1 Тогда
		Если ЧекПробит=1 Тогда
			Форма.ТолькоПросмотр(1);
		КонецЕсли;
		УстДоступностьКнопок();
	КонецЕсли;
КонецПроцедуры                      

// ===============================
Процедура ЧастичноПровести()
	фМожноПроводить = 1;
	Если Проведен()=1 Тогда
		Если РежимПроведения=0 Тогда
			фМожноПроводить = 0;
			Предупреждение("Документ "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
			               " полностью проведен. Предварительное проведение невозможно.");
		КонецЕсли;
	ИначеЕсли ДатаДок<ПолучитьДатуТА() Тогда
		фМожноПроводить = 0;
		Предупреждение("Предварительное проведение задним числом невозможно.");
	ИначеЕсли ДатаДок<>РабочаяДата() Тогда
		фМожноПроводить = 0;
		Предупреждение("Дата документа "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
		               " отличается от рабочей даты ("+Формат(РабочаяДата(),"ДДММГГГГ")+"). Предварительное проведение невозможно.");
	КонецЕсли;
				
	Если фМожноПроводить = 1 Тогда
		Провести(3,1);
		Если Проведен() = 1 Тогда
			Если ЧекПробит=1 Тогда
				Форма.ТолькоПросмотр(1);
			КонецЕсли;
			УстДоступностьКнопок();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПересчетРегистров()
	ОбщРег=СоздатьОбъект("Регистры");
	Остатки=ОбщРег.Остатки;
	Резервы=ОбщРег.Резервы;
КонецПроцедуры        
    
// ===============================
Функция УстДоступность()
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	
	ЗаголовокФормы();
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		ДостНал = 1;
	Иначе
		ДостНал = 0;
	КонецЕсли;
	         
	фСуммовойУчет = 0;
	Если ПустоеЗначение(МестоХранения) = 0 Тогда
		фСуммовойУчет = МестоХранения.СуммовойУчет;
		Если (МестоХранения.ВидСклада = Розничный) И (МестоХранения.СуммовойУчет=1) Тогда
			Форма.Кво.Видимость(0);
			Форма.ЦенаСНДС.Видимость(0);
		Иначе
			Форма.Кво.Видимость(1);
			Форма.ЦенаСНДС.Видимость(1);
		КонецЕсли;
	Иначе
		Форма.Кво.Видимость(1);
		Форма.ЦенаСНДС.Видимость(1);
	КонецЕсли;	
	
	Если ДокПродажи.Выбран() = 1 Тогда
		Форма.ЦенаУчБезНДС.Доступность(0);
		Форма.СуммаУчБезНДС.Доступность(0);
	Иначе
		Форма.ЦенаУчБезНДС.Доступность(1-фСуммовойУчет);
		Форма.СуммаУчБезНДС.Доступность(1-фСуммовойУчет);
	КонецЕсли;
	
	Форма.ЭККА.Видимость(ДостНал);
	Форма.тЭККА.Видимость(ДостНал);
	Форма.Касса.Видимость(ДостНал);
	Форма.тКассы.Видимость(ДостНал);
	Форма.тЧекПробит.Видимость(ДостНал);
	Форма.Возврат.Видимость(1);
	Возврат "";
КонецФункции
                       
// ===============================
Процедура ИзмВидТорговли()
	ВидТорговли = спВидТорговли.ПолучитьЗначение(спВидТорговли.ТекущаяСтрока());
КонецПроцедуры

// ===============================
Процедура ЗаполнитьСпВидТорговли()
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Нал,Строка(Перечисление.ВидыТорговли.Нал));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Предоплата,Строка(Перечисление.ВидыТорговли.Предоплата));
КонецПроцедуры

// ===============================
Процедура ВыбранВидТорговли()   
	спВидТорговли.ТекущаяСтрока(спВидТорговли.НайтиЗначение(ВидТорговли));
КонецПроцедуры

// ===============================
Процедура ВыборДаты()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ПересчетРегистров();
КонецПроцедуры           

// ===============================
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", Контекст);
КонецПроцедуры	

// ======================================
Процедура ИзмВидНДС()
	// пересчитаем суммы НДС в строках табличной части
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
			глВыч_Суммы_Накл(Контекст,-1);
		Иначе
			глВыч_Суммы_Накл(Контекст,1);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура РассчитатьУчЦенуИСумму()
	ЦенаУчБезНДС = 0;
	СуммаУчБезНДС = 0;
	фНашли = 0;
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		// получаем нормы
		Если глПолучитьНормы(ТМЦ,,1,ДатаДок,глПолучитьЗаказ(Договор),,1)=0 Тогда
			// некалькулируемая услуга
		    Возврат;
		КонецЕсли;
		Рег = СоздатьОбъект("Регистр.Обороты");
		Рег.ВыбратьДвиженияДокумента(ДокПродажи);
		Пока Рег.ПолучитьДвижение()=1 Цикл
			Если Рег.ТМЦ <> ТМЦ Тогда
				Продолжить;
			КонецЕсли;          
			фНашли = 1;
			ПродКво 	= Рег.РасходКво;
			ПродСумма 	= Рег.РасходСум - Рег.Доход;
			Прервать;
		КонецЦикла;
	Иначе // товар или продукция
		Опер = ДокПродажи.Операция;
		Опер.ВыбратьПроводки();
		Пока Опер.ПолучитьПроводку() = 1 Цикл
			Если Опер.Кредит.Субконто(2) <> ТМЦ Тогда
			    // не тот ТМЦ
			    Продолжить;
			КонецЕсли;
			Если ((Опер.Дебет.Счет.Родитель() = СчетПоКоду("90")) или (Опер.Дебет.Счет.Родитель() = СчетПоКоду("79")))
			и (Опер.Кредит.Счет.ПринадлежитГруппе(СчетПоКоду("282"))=1) Тогда
			    // Д90.х К28.2			Д79.х К28.2
				фНашли = 1;			
			    ПродКво 	= Опер.Количество;
			    ПродСумма 	= Опер.Сумма;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если фНашли = 0 Тогда
	    глКомментарий("ТМЦ "+ТМЦ+" не списывался в расходной розничной номер "+ДокПродажи.НомерДок+" от "+ДокПродажи.ДатаДок+" !",1,,"!!");
		Возврат;
	КонецЕсли;
	Если ПродКво = 0 Тогда
	    Возврат;
	КонецЕсли;
	ЦенаУчБезНДС = Коэффициент*ПродСумма/ПродКво;
	// цена округлена до 2 знаков, сумму рассчитаем точнее
	СуммаУчБезНДС = Кво*Коэффициент*ПродСумма/ПродКво;
КонецПроцедуры	     

// ===============================
Процедура ИзмЦенаУчБезНДС()
	Если (ДокПродажи.Выбран() = 1) и (ДокПродажи.Проведен() = 1) и (МестоХранения.СуммовойУчет <> 1) Тогда
		РассчитатьУчЦенуИСумму();
	Иначе
		СуммаУчБезНДС = ЦенаУчБезНДС*Кво;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмКво()
	глВыч_суммы_накл(Контекст);
	ИзмЦенаУчБезНДС();
КонецПроцедуры

// ===============================
Процедура ИзмТМЦ()
	Если (ТМЦ.Выбран() = 1) И (МестоХранения.ВидСклада = Розничный) И (МестоХранения.СуммовойУчет=1) Тогда
		Если ТМЦ <> Константа.ТоварыВАссортименте Тогда
			глКомментарий("ТМЦ "+ТМЦ+" нельзя продавать с розничного склада с признаком ведения суммового учета.",0);
			ТМЦ = 0;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	глПриИзмененииТовара(Контекст);
КонецПроцедуры	     
         
// ===============================
// Назначение: вызывается при изменении суммы скидки
//		
// Аргументы:
//		
Процедура ИзмСкидка()
	ИтогПоДокументу = Итог("СуммаСНДС");
	Если Скидка > ИтогПоДокументу Тогда
		// скидка не может быть больше, чем итог по документу 
		Скидка = ИтогПоДокументу;	    
	КонецЕсли;
КонецПроцедуры //ИзмСкидка

// ===============================
Процедура ИзмДокПродажи()
	Если (ДокПродажи.Выбран() = 0) Или (ДокПродажи.Проведен() = 0) Тогда
	    Возврат;
	КонецЕсли;
	Если МестоХранения.СуммовойУчет <> ДокПродажи.МестоХранения.СуммовойУчет Тогда
		Предупреждение("Не совпадают признаки ведения суммового учета в выбранном месте хранения и в месте хранения из документа продажи!");
		ДокПродажи = 0;
	    Возврат;
	КонецЕсли;
	Если МестоХранения.СуммовойУчет <> 1 Тогда
		РассчитатьУчЦенуИСумму();
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмМестоХранения()
	// Инициализируем список действий по кнопке "Действия"
	СписокДействий = глПолучитьСписокДействий(
		?((МестоХранения.ВидСклада = Розничный) И (МестоХранения.СуммовойУчет=1),"","ТоварныйСостав,") + 
		?(Форма.ТолькоПросмотр() = 0,"
		|ОбновлениеЦен", "") + "		
		|СтруктураПодчиненности,
		|ДвиженияДокумента,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные");
КонецПроцедуры //ИзмМестоХранения()

// ===============================
Процедура ИзмКонтрагент()	// Процедура при выборе Контрагента в докумнете
    Если Контрагент.Выбран()=1 Тогда                                      
		Если СтарыйКонтрагент <> Контрагент Тогда
			// изменили Контрагента
			Если (глВосстановитьЗначение(,"ПодставлятьОсновнойДоговор") = Да)
			И (ПустоеЗначение(Контрагент.БазДоговор)=0) Тогда
				Если Фирма = Контрагент.БазДоговор.Фирма Тогда
					// подставим договор по умолчанию       1
					Договор = Контрагент.БазДоговор;
				КонецЕсли;	
			Иначе
				// очистим договор
				Договор = ПолучитьПустоеЗначение("Документ");
			КонецЕсли;
			ДокументОснование = ПолучитьПустоеЗначение("Документ");			
			// установим флаг конечного потребителя
			Если (Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо)
			И (ПустоеЗначение(Контрагент.ИНН) = 1) Тогда
				КонечныйПотребитель = 1;
			Иначе	
				КонечныйПотребитель = 0;
			КонецЕсли;
		КонецЕсли;
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и договор
		Договор = ПолучитьПустоеЗначение("Документ");
	КонецЕсли;
	СтарыйКонтрагент = Контрагент;
КонецПроцедуры	
	
// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в докумнете
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
КонецПроцедуры	

// ===============================
Процедура ЗаполнениеШапкиНаОсновании(ДокОснование)
	Если ПустоеЗначение(ДокОснование)=1 Тогда
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта=ДокОснование.Валюта;
		Если глЕстьРеквизитШапки("Дата_Курса",ДокОснование.Вид()) = Да Тогда
			Дата_Курса = ДокОснование.Дата_Курса;
		Иначе
			Дата_Курса = ДокОснование.ДатаДок;
		КонецЕсли;
		Курс = ДокОснование.Курс;
	КонецЕсли;     
	
	Если глЕстьРеквизитШапки("Подразделение",ДокОснование.Вид()) = Да Тогда
		Подразделение = ДокОснование.Подразделение;
	КонецЕсли;	
	Если глЕстьРеквизитШапки("ПодразделениеПроизв",ДокОснование.Вид()) = Да Тогда
		ПодразделениеПроизв = ДокОснование.ПодразделениеПроизв;
	КонецЕсли;	

	Если глЕстьРеквизитШапки("КонечныйПотребитель",ДокОснование.Вид()) = Да Тогда
		КонечныйПотребитель = ДокОснование.КонечныйПотребитель;
	КонецЕсли;	

	Если глЕстьРеквизитШапки("СубконтоВалДох",ДокОснование.Вид()) = Да Тогда
		СубконтоВалДох = ДокОснование.СубконтоВалДох;
	КонецЕсли;	
	Если ПустоеЗначение(СубконтоВалДох) = 1 Тогда
		СубконтоВалДох = глВосстановитьЗначение(Контекст,"СубконтоВалДох",Константа.БазВаловыйДоход);			
	КонецЕсли;
	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	Если ДокОснование.Вид() = "ОтчетКА" Тогда
	    ВидТорговли = Перечисление.ВидыТорговли.Нал;
		Контрагент=глВосстановитьЗначение(,"БазЧастноеЛицо");
		ИзмКонтрагент(); 	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура Заполнить(ОснованиеДляЗаполнения)
	Если ПустоеЗначение(ОснованиеДляЗаполнения)=1 Тогда
    	Возврат;
	КонецЕсли;
	              
	Если ОснованиеДляЗаполнения.Вид()= "Счет" Тогда
		Если ОснованиеДляЗаполнения.Проведен()=1 Тогда
			// Если вводим на основании Счета, то спецификацию записываем
			// исходя из остатков зарезервированных товаров
			ВремРегистры=СоздатьОбъект("Регистры");
			Если Выбран()>0 Тогда // документ не новый, а существующий
				Если (СравнитьТА()<0)  Тогда
			 	// если итоги не актуальны, то Долги по Кредиту берем из временногно расчета Регистра
					ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());				
				КонецЕсли;
			Иначе // документ новый
				Дат=ПолучитьДатуТА();
			 	Если Дат>ДатаДок Тогда
			 	// если итоги не актуальны, то остатки квоты берем из временногно расчета Регистра
					ВремРегистры.РассчитатьРегистрыНа(ДатаДок+1);
				КонецЕсли;
			КонецЕсли;      
			РегРезерв=ВремРегистры.Резервы;
			
			// Нужно вычислить скидку 
			Скидка = 0;
			СписокТоваров=СоздатьОбъект("СписокЗначений");
			ОснованиеДляЗаполнения.ВыбратьСтроки();
			Пока ОснованиеДляЗаполнения.ПолучитьСтроку()=1 Цикл
				Если ОснованиеДляЗаполнения.ТМЦ.Выбран()=0 Тогда
					Продолжить;
				КонецЕсли;
				Скидка = Скидка + ОснованиеДляЗаполнения.Скидка * (100 + глПроцентНДС(ОснованиеДляЗаполнения.ТМЦ.СтавкаНДС,ОснованиеДляЗаполнения.ДатаДок))/100;
				Если ОснованиеДляЗаполнения.ТМЦ.ВидТМЦ=Перечисление.ВидыТМЦ.Услуга Тогда
					// услуги
					НоваяСтрока();
					ТМЦ=ОснованиеДляЗаполнения.ТМЦ;
					ЦенаСНДС=ОснованиеДляЗаполнения.ЦенаСНДС;
					Кво=ОснованиеДляЗаполнения.Кво;
					Ед=ОснованиеДляЗаполнения.Ед;
					Коэффициент=ОснованиеДляЗаполнения.Коэффициент;
					СуммаСНДС=ОснованиеДляЗаполнения.СуммаБезСкидки;
					Продолжить;
				Иначе
					Если СписокТоваров.НайтиЗначение(ОснованиеДляЗаполнения.ТМЦ)=0 Тогда
						// не вносим строку с товаром, если такую уже внесли
						// таким образом отсекаем возможное
						// дублирование строк по ТМЦ в Счете
						РезервПоСчету=РегРезерв.Остаток(Фирма,ОснованиеДляЗаполнения.ТМЦ,ОснованиеДляЗаполнения,"Резерв");
						Если РезервПоСчету>0 Тогда
							НоваяСтрока();
							ТМЦ=ОснованиеДляЗаполнения.ТМЦ;
							ЦенаСНДС=ОснованиеДляЗаполнения.ЦенаСНДС;
							Коэффициент=?(ОснованиеДляЗаполнения.Коэффициент=0,1,ОснованиеДляЗаполнения.Коэффициент);
							Кво=РезервПоСчету/Коэффициент;
							Ед=ОснованиеДляЗаполнения.Ед;
							Коэффициент=Коэффициент;
							глВыч_суммы_накл(Контекст);
							СписокТоваров.ДобавитьЗначение(ТМЦ);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			РегРезерв=0;
		КонецЕсли;
	ИначеЕсли ОснованиеДляЗаполнения.Вид()= "РасходнаяРозничная" Тогда
		глСкопироватьТовСостав(Контекст,ОснованиеДляЗаполнения);      
	ИначеЕсли ОснованиеДляЗаполнения.Вид()= "ОтчетКА" Тогда
		ОснованиеДляЗаполнения.ВыбратьСтроки();
		Пока ОснованиеДляЗаполнения.ПолучитьСтроку()=1 Цикл
			НоваяСтрока();
			ТМЦ			= ОснованиеДляЗаполнения.ТМЦ;
			Кво			= ОснованиеДляЗаполнения.Кво;
			Ед			= ОснованиеДляЗаполнения.Ед;
			Коэффициент	= ОснованиеДляЗаполнения.Коэффициент;
			СуммаСНДС	= ОснованиеДляЗаполнения.СуммаСНДС;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если (ДокументОснование.Вид() <> "РасходыНаПриобретение")
		И (ДокументОснование <> СтарОснование) Тогда
			УдалитьСтроки();
			ЗаполнениеШапкиНаОсновании(ДокументОснование);
			Заполнить(ДокументОснование);
		КонецЕсли;	
	КонецЕсли;	          
	Если Договор <> СтарДоговор Тогда
		ЗаполнениеШапкиНаОсновании(Договор);
	КонецЕсли;	
КонецПроцедуры	

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета=СоздатьОбъект("СписокЗначений");
	Если МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Оптовый Тогда
		спСчета.ДобавитьЗначение(ТМЦ.Счет);
		Если глПартионныйУчетПоСкладам = Да Тогда
		    спОтбор.Установить("МестоХранения",МестоХранения);
		КонецЕсли;
	Иначе
		спСчета.ДобавитьЗначение(СчетПоКоду("28.2.1"));
		спСчета.ДобавитьЗначение(СчетПоКоду("28.2.2"));
		спОтбор.Установить("МестоХранения",МестоХранения);
	КонецЕсли;
	спОтбор.Установить("Счет",спСчета);
	спОтбор.Установить("Контекст",Контекст);  
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры

// ===============================
Процедура ВыборКассы()
	спКассы = глЗаполнитьСпКассы(Фирма,Валюта);
	спКассы.ВыбратьЗначение(Касса,,,,2);
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
		ИзмВидНДС();
	ИначеЕсли Рекв="Предпочтение" Тогда
	    ВыборПредпочтения(); 
	ИначеЕсли Рекв="Касса" Тогда
		ВыборКассы();		
	ИначеЕсли Рекв="ЭККА" Тогда
		глВыбратьЭККА(Контекст,"Чек",1);
	ИначеЕсли Рекв="ДокПродажи" Тогда
		Флаг=1;
		ДокПродажи.ВидыДляВыбора("РасходнаяРозничная,ОтчетКА");	
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры
                        
// ===============================
// функции и процедуры, вызываемые из формул элементов диалога

// ===============================
Процедура Печать()
	
	Таб = СоздатьОбъект("Таблица");    

	ПечФорма = "Накладная";
	Язык = глЯзык(ПечФорма); 	
	Таб.ИсходнаяТаблица(ПечФорма);
	глУстПропись(Валюта,Язык);
	                                                                            
	ПечОснование=глСтрокаОснование(Контекст,Договор,ДокументОснование);
	Таб.ВывестиСекцию("Шапка");
	
	Ном = 1;
	ВСоставе = 0;
	
	СуммаНДС = 0; 
	ОсталосьСкидка = Скидка;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл                
		
		ПечЦена = глФРМТ(ЦенаСНДС,Валюта,0);
		ПечСумма = глФРМТ(СуммаСНДС,Валюта,0);
		
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
		
		Если НомерСтроки = КоличествоСтрок() Тогда
			СкидкаНаСтроку = ОсталосьСкидка;
		Иначе
			СкидкаНаСтроку = Окр(Скидка* СуммаСНДС/Итог("СуммаСНДС"),2);
			ОсталосьСкидка = ОсталосьСкидка - СкидкаНаСтроку;
		КонецЕсли;
		
		ПроцНДС = глПроцентНДС(ТМЦ.СтавкаНДС,ДатаДок);
		СуммаНДС = СуммаНДС +  (СуммаСНДС - СкидкаНаСтроку)* ПроцНДС/(100 + ПроцНДС);
	КонецЦикла;
	
	Если Скидка<>0 Тогда
		ПечСкидка = глФРМ(Скидка,Валюта,0);
		Таб.ВывестиСекцию("Скидка");
	КонецЕсли;
	
	ПечНДС = глФРМТ(СуммаНДС,Валюта,0);
	ПечСНДС = глФРМТ(Итог("СуммаСНДС")-Скидка,Валюта,0);
	
	ПечНДСПропись = " "+глФРМТ(СуммаНДС,Валюта,0);
	ПечСНДСПропись = Формат(Итог("СуммаСНДС")-Скидка,"ЧПДС");
	
	Таб.ВывестиСекцию("Дно");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Расходная накладная","");
	
КонецПроцедуры

// ===============================
// Предопределенные процедуры

Процедура ПриВыбореЗакладки(Номер,Значение)
	Форма.ИспользоватьСлой("Совместный,"+Значение,2);
КонецПроцедуры

// ===============================
Процедура ВводНового(Скопирован)
	Если Скопирован=1 Тогда	//копирование документа
		ЧекПробит=0;
		Возврат;
	КонецЕсли;
	глЗаполнитьШапку(Контекст);
	Автор=глПользователь;
	глВыбратьЭККА(Контекст,"Чек",0);
	Если ЭККА.Выбран()=1 Тогда
		Если (ЭККА.РежимРаботы = Перечисление.РежимыРаботыЭККА.Регистрация) или
			(ЭККА.РежимРаботы = Перечисление.РежимыРаботыЭККА.Автономный) Тогда
			МестоХранения = ЭККА.Магазин;    
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(МестоХранения)=1 Тогда
		МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойМагазин");
	КонецЕсли;
                                         
	ДатаДок=РабочаяДата();
	Валюта = Гривня;
	Дата_Курса=ДатаДок;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);

	ЧекПробит=0;

	Контрагент=глВосстановитьЗначение(,"БазЧастноеЛицо");
	ИзмКонтрагент(); 	
	
	Если ПустоеЗначение(ВидТорговли)=1 Тогда
	    ВидТорговли = Перечисление.ВидыТорговли.Нал;
	КонецЕсли;
	
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Касса = глПолучитьКассу(Фирма,Валюта);
	КонецЕсли;
	
	ВыбранВидТорговли();	
	Подразделение = глВосстановитьЗначение(,"БазПодразделениеПродажи");
	СубконтоВалДох = глВосстановитьЗначение(Контекст,"СубконтоВалДох",Константа.БазВаловыйДоход);		
КонецПроцедуры

// ===============================
Процедура ВводНаОсновании(ДокОснование)

	СинонимДокумента	= ПредставлениеВида();
	СинонимОснования	= ДокОснование.ПредставлениеВида();

	Если глЕстьРеквизитШапки("Валюта",ДокОснование.Вид()) = Да Тогда
		Если ДокОснование.Валюта <> Гривня Тогда
			СтатусВозврата(0);
			Предупреждение("Документ """+СинонимДокумента+""" нельзя вводить на основании документа """+СинонимОснования+""" с валютой "+ДокОснование.Валюта+".");
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	Автор=глПользователь;
	Если ДокОснование.Вид()="Счет" Тогда
		Если ДокОснование.ЧтоПродаем = Перечисление.ЧтоПродаем.НеоборотныеАктивы Тогда
			Предупреждение("Для реализации основных средств используйте документ ЛиквидацияНеоборАктивов");
			СтатусВозврата(0);
			Возврат; 
		ИначеЕсли ДокОснование.ЧтоПродаем = Перечисление.ЧтоПродаем.ТМЦ Тогда
			Предупреждение("Для реализации запасов используйте документ Расходная накладная (бух)");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойМагазин");
	КонецЕсли;
	                               
	// необходимо определить на основании каккого документа вводим возврат
	текДокОснование = ДокОснование;
	глВыбратьЭККА(Контекст,"Чек",0);
	ЗаполнениеШапкиНаОсновании(ДокОснование);
	Заполнить(текДокОснование);

	// установим Док.продажи во всех строках
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл       
		ДокПродажи = ДокОснование;	
		ИзмДокПродажи();
	КонецЦикла;	
	
	ВыбранВидТорговли();
	
	ЧекПробит=0; 
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	НачальнаяДатаДокумента = ДатаДок;
	
	глПроверкаДатыДок(Контекст,"Открытие");
	
	УстДоступностьКнопок();

	Если Проведен()=1 Тогда
	    Форма.кПредварительно.Видимость(0);
	КонецЕсли;
	
	СтараяДата = ДатаДок;
	ПересчетРегистров();
	                            
	//Если документ еще не проведен, тогда 
	//Предварительное проведение делаем только в потоке
	Если ( Проведен() = 0 ) Тогда
		ПроводитьПослеТА(1,1);
	КонецЕсли;                  
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительно","Дополнительно");
	Форма.ИспользоватьСлой("Основной, Совместный",2); 
	
	Если ПустоеЗначение(ВидТорговли)=1 Тогда
	    ВидТорговли = Перечисление.ВидыТорговли.Нал;
		ВыбранВидТорговли();
	КонецЕсли;		       
	
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;           

	Если Константа.ИспользоватьСкидку = Нет Тогда
	    Форма.тСкидка.Доступность(0);
	    Форма.Скидка.Доступность(0);
	КонецЕсли;           

	// Инициализируем список действий по кнопке "Действия"
	СписокДействий = глПолучитьСписокДействий(
		?((МестоХранения.ВидСклада = Розничный) И (МестоХранения.СуммовойУчет=1),"","ТоварныйСостав,") + 
		?(Форма.ТолькоПросмотр() = 0,"
		|ОбновлениеЦен", "") + "		
		|СтруктураПодчиненности,
		|СтруктураПодчиненности,
		|ДвиженияДокумента,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные");
КонецПроцедуры

// ===============================
Процедура ПриВводеСтроки()
КонецПроцедуры
                                 
// ===============================
Процедура ПриНачалеРедактированияСтроки()
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)  
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Автор = глПользователь;
	ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;     
	// заполним реквизиты БазаНДС1,БазаНДС2,БазаНДС3,НДС1,НДС2,НДС3
	БазаНДС1 = 0;
	БазаНДС2 = 0;
	БазаНДС3 = 0;
	НДС1 = 0;
	НДС3 = 0;
	НДС2 = 0;
	ПроцБезНДС			  = глПроцентНДС(БезНДС,ДатаДок);
	ПроцЛьготнаяСтавкаНДС = глПроцентНДС(ЛьготнаяСтавкаНДС,ДатаДок);
	ПроцОсновнаяСтавкаНДС = глПроцентНДС(ОсновнаяСтавкаНДС,ДатаДок);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ТМЦ.СтавкаНДС = БезНДС Тогда
			БазаНДС1 = БазаНДС1 + СуммаСНДС; 							
		ИначеЕсли ТМЦ.СтавкаНДС = ЛьготнаяСтавкаНДС Тогда
			БазаНДС2 = БазаНДС2 + СуммаСНДС; 							
		ИначеЕсли ТМЦ.СтавкаНДС = ОсновнаяСтавкаНДС Тогда
			БазаНДС3 = БазаНДС3 + СуммаСНДС; 							
	    КонецЕсли;
	КонецЦикла;	
	НДС1 = БазаНДС1*ПроцБезНДС/(100+ПроцБезНДС);
	НДС2 = БазаНДС2*ПроцЛьготнаяСтавкаНДС/(100+ПроцЛьготнаяСтавкаНДС);
	НДС3 = БазаНДС3*ПроцОсновнаяСтавкаНДС/(100+ПроцОсновнаяСтавкаНДС);
	глСохранитьЗначение(Контекст,"СубконтоВалДох",СубконтоВалДох);
КонецПроцедуры
          



//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции



// ===============================
// При входе в Форму запомним промежуточные переменные

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|ОбновлениеЦен,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");

ЗаполнитьСпВидТорговли();
ВыбранВидТорговли();