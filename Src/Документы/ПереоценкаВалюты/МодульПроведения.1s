Перем ТекСчет, Ит;
Перем СуммаВалРасхВалюта, СуммаВалРасхЗадолж, СуммаВалДохВалюта, СуммаВалДохЗадолж;
Перем спНеоперационныеСчета, СчетЗатратОперКР, СчетЗатратНеоперКР;

// ===============================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");
	Если глВсеВыбрано = 1 Тогда
		Если ЕстьВалДохРасх = 1 Тогда
			глВыбранЛи(Константа.ВаловыйРасходВалюта,"Константа - валовые расходы по остаткам на денежных счетах");
			глВыбранЛи(Константа.ВаловыйРасходЗадолж,"Константа - валовые расходы по задолженностям в валюте");
			глВыбранЛи(Константа.ВаловыйДоходВалюта,"Константа - валовые доходы по остаткам на денежных счетах");
			глВыбранЛи(Константа.ВаловыйДоходЗадолж,"Константа - валовые доходы по задолженностям в валюте");
			Если ДатаМесяц(ДатаДок)%3 <> 0 Тогда
				глКомментарий("Обратите внимание! По налоговому учету переоценка должна выполняется в конце квартала, а документ проведен за "+ПериодСтр(НачМесяца(ДатаДок),КонМесяца(ДатаДок))+"!",0,,"!!!");
			КонецЕсли;
		КонецЕсли;
		глВыбранЛи(Константа.ВидЗатратОперКР,"Константа - вид затрат по операционной курсовой разнице");
		глВыбранЛи(Константа.ВидЗатратНеоперКР,"Константа - вид затрат по неоперационной курсовой разнице");
	КонецЕсли;
	
	глВыбранЛи(Константа.ОтражатьКурсовуюРазницуВОборотах,"Константа - отражать курсовую разницу в оборотах");
	Если Константа.ОтражатьКурсовуюРазницуВОборотах > 1  Тогда
		глВыбранЛи(Константа.КурсоваяРазница,"Константа - курсовая разница");
	КонецЕсли;
	
    Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ОбработатьРегистр(ЗнакОплаты)
	
	тбКурсоваяРазница = СоздатьОбъект("ТаблицаЗначений");
	тбКурсоваяРазница.НоваяКолонка("Контрагент","Справочник.Контрагенты");
	тбКурсоваяРазница.НоваяКолонка("Разница","Число");
		
	Если ЗнакОплаты=+1 Тогда
		ИмяРег = "ВзаиморасчетыПоставщиков";
		РегВзаим = Регистр.ВзаиморасчетыПоставщиков;
	Иначе
		ИмяРег = "ВзаиморасчетыПокупателей";
		РегВзаим = Регистр.ВзаиморасчетыПокупателей;
	КонецЕсли;
	
	Если ИтогиАктуальны()=0 Тогда
		Период = "Период с ДатаДок по ТекДок;";
		ТекДок = ТекущийДокумент();
	КонецЕсли;
	
	ТЗ = 	"//{{ЗАПРОС(ДолгиКурсРазн)
	|"+Период+"
	|Без итогов;
	|регФирма = Регистр."+ИмяРег+".Фирма;
	|Контрагент = Регистр."+ИмяРег+".Контрагент;
	|Договор = Регистр."+ИмяРег+".Договор;
	|СтавкаНДС = Регистр."+ИмяРег+".СтавкаНДС;
	|Счет = Регистр."+ИмяРег+".Счет;
	|КредДокумент = Регистр."+ИмяРег+".КредДокумент;
	|Валюта = Регистр."+ИмяРег+".Валюта;
	|Долг = Регистр."+ИмяРег+".Долг;
	|ДолгОсн = Регистр."+ИмяРег+".ДолгОсн;
	|Функция ДолгКонОст = КонОст(Долг);
	|Функция ДолгОснКонОст = КонОст(ДолгОсн);
	|Группировка Валюта без упорядочивания без групп;
	|Группировка Контрагент без упорядочивания без групп;
	|Группировка Договор без упорядочивания;
	|Группировка СтавкаНДС без упорядочивания без групп;
	|Группировка Счет без упорядочивания;
	|Группировка КредДокумент без упорядочивания;
	|Условие(регФирма = Фирма);
	|"//}}ЗАПРОС
    ;
	 
	Запр = СоздатьОбъект("Запрос");
	Если Запр.Выполнить(ТЗ) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	ВсегоДолг = 0; // сколько уже обработано долгу по договору
	ВсегоДолгОсн = 0; // сколько уже обработано долгу в гривнях по договору
	ВсегоРазница = 0; // сколько курсовой разницы начилено по регистру
	
	тВалюта = 0;
	тКонтрагент = 0;
	тДоговор = 0;
	
	Пока Запр.Группировка()=1 Цикл
		
		//Если ЗнакОплаты * Запр.ДолгОснКонОст > 0 Тогда
		//	Продолжить;
		//КонецЕсли;
		
		Если (тВалюта <> Запр.Валюта) или (тКонтрагент <> Запр.Контрагент) или (тДоговор <> Запр.Договор) Тогда
			// поменялся договор, обнуляем итоги
			ВсегоДолг = 0;
			ВсегоДолгОсн = 0;
			ВсегоРазница = 0;
		КонецЕсли;
		
		тВалюта = Запр.Валюта;
		тКонтрагент = Запр.Контрагент;
		тДоговор = Запр.Договор;
		
		ВсегоДолг = ВсегоДолг + Запр.ДолгКонОст;
		ВсегоДолгОсн = ВсегоДолгОсн + Запр.ДолгОснКонОст;
		
		НовыйДолгОсн = Окр(глПересчет(ВсегоДолг,Запр.Валюта,ДатаДок,Гривня,ДатаДок),2);
		ОбщРазница = Окр(ВсегоДолгОсн - НовыйДолгОсн,2); // такая должна быть разница всего по договору
		                                                                             
		Разница = ОбщРазница - ВсегоРазница;
		
		ВсегоРазница = ВсегоРазница + Разница;
		
		Если Разница <>0 Тогда
			РегВзаим.Фирма = Фирма;
			РегВзаим.Контрагент = Запр.Контрагент;
			РегВзаим.Договор = Запр.Договор;
			РегВзаим.СтавкаНДС = Запр.СтавкаНДС;
			РегВзаим.Счет = Запр.Счет;
			РегВзаим.КредДокумент = Запр.КредДокумент;
			РегВзаим.Валюта = Запр.Валюта;
			РегВзаим.Долг = 0;
			РегВзаим.КодОперации = ?(Разница < 0,КурсоваяРазницаДоход,КурсоваяРазницаУбыток);
			РегВзаим.СуммаСНДС_НУ = 0;
			РегВзаим.НДС = 0;
			РегВзаим.Флаг_НУ = "";
			Если Разница > 0 Тогда
				РегВзаим.ДолгОсн = Разница;
				РегВзаим.ДвижениеРасходВыполнить();
			Иначе
				РегВзаим.ДолгОсн = - Разница;
				РегВзаим.ДвижениеПриходВыполнить();
			КонецЕсли;
			тбКурсоваяРазница.НоваяСтрока();
			тбКурсоваяРазница.Контрагент = Запр.Контрагент;
			тбКурсоваяРазница.Разница = Разница;
		КонецЕсли;
	КонецЦикла;
	
	// проведем курсовые разницы по оборотам
	Если Константа.ОтражатьКурсовуюРазницуВОборотах = 1 Тогда
		//Не отражаем курсовую разницу в оборотах
	ИначеЕсли Константа.ОтражатьКурсовуюРазницуВОборотах = 2 Тогда
		//Отражаем суммарную разницу по всем контрагентам
		Разница = тбКурсоваяРазница.Итог("Разница");
		Если Разница <>0 Тогда
			Регистр.Обороты.Движение(Фирма,Константа.КурсоваяРазница,0,0,0,0,
				0,0,0,0, - ,ДоходОтКурсовойРазницы,);
		КонецЕсли;
	ИначеЕсли Константа.ОтражатьКурсовуюРазницуВОборотах = 3 Тогда
		//Отражаем по каждому контрагенту
		тбКурсоваяРазница.Свернуть("Контрагент","Разница");
		тбКурсоваяРазница.ВыбратьСтроки();
		Пока тбКурсоваяРазница.ПолучитьСтроку() = 1 Цикл
			Если тбКурсоваяРазница.Разница = 0 Тогда
				Продолжить;
			КонецЕсли;
			Если ЗнакОплаты=+1 Тогда // поставщики
				Покупатель = 0;
				Поставщик = тбКурсоваяРазница.Контрагент;
			Иначе
				Покупатель = тбКурсоваяРазница.Контрагент;
				Поставщик = 0;
			КонецЕсли;
			Регистр.Обороты.Движение(Фирма,Константа.КурсоваяРазница,0,Покупатель,Поставщик,,
			0,0,0,0, - тбКурсоваяРазница.Разница,ДоходОтКурсовойРазницы,);
		КонецЦикла;					
	КонецЕсли;
	
	Возврат 1;
КонецФункции //

// ===============================
Процедура ДвиженияВзаиморасчеты()
	
	глКомментарий("Выполняется начисление курсовых разниц по регистрам взаиморасчетов",2);
	
	ОбработатьРегистр(-1); // покупатели
	ОбработатьРегистр(+1); // поставщики
	
КонецПроцедуры
                                  
// ===============================
// Выполняет переоценку аналитического счета в бухгалтерском учете
Процедура ПереоценкаПоСубконто()
	Для ИСб = 1 По ТекСчет.КоличествоСубконто() Цикл
	    Ит.ИспользоватьСубконто(ТекСчет.ВидСубконто(ИСб),,1,0);
	КонецЦикла;
	Ит.ВыполнитьЗапрос(,КонМесяца(ДатаДок), ТекСчет);
    Уровень = 1;
	Ит.ВыбратьСубконто(Уровень);
	Флаг = Ит.ПолучитьСубконто(Уровень);
    Пока Флаг = 1 Цикл
    	Если Уровень = ТекСчет.КоличествоСубконто() Тогда
			// определим, операционная или нет курсовая разница по этому счету/субконто
			фНеоперационная = 0;
			Фильтр = ЗначениеВСтроку(ТекСчет);
			Если спНеоперационныеСчета.НайтиЗначение(Фильтр) > 0 Тогда
			    // есть такой счет в списке
				фНеоперационная = 1;
			КонецЕсли;
			Для Инд = 1 По ТекСчет.КоличествоСубконто() Цикл
				Фильтр = Фильтр + "_" + ЗначениеВСтроку(Ит.Субконто(Инд));
				Если спНеоперационныеСчета.НайтиЗначение(Фильтр) > 0 Тогда
				    // есть такая запись в списке
					фНеоперационная = 1;
				КонецЕсли;
			КонецЦикла;
			Если фНеоперационная = 0 Тогда
				СчетДоходов = СчетПоКоду("71.4");
				СчетЗатрат = СчетЗатратОперКР;
				ВидЗатрат = Константа.ВидЗатратОперКР;
			Иначе
				СчетДоходов = СчетПоКоду("74.4");
				СчетЗатрат = СчетЗатратНеоперКР;
				ВидЗатрат = Константа.ВидЗатратНеоперКР;
			КонецЕсли;
			
    		Субк1 = Ит.Субконто(1); Субк2 = 0; Субк3 = 0;
    		Если ТекСчет.КоличествоСубконто()=2 Тогда
    		    Субк2 = Ит.Субконто(2);
    		ИначеЕсли ТекСчет.КоличествоСубконто()=3 Тогда
    			Субк2 = Ит.Субконто(2);
    			Субк3 = Ит.Субконто(3);
    		КонецЕсли;
    		Ит.ВыбратьВалюты();
    		Пока Ит.ПолучитьВалюту() = 1 Цикл
				ОстТек = Ит.СКД("С") - Ит.СКК("С");
				ОстВал = Ит.СКД("В") - Ит.СКК("В");
				ОстНов = глПересчет(ОстВал,Ит.Валюта,Гривня,КонМесяца(ДатаДок));
				Если ОстНов - ОстТек > 0 Тогда
					Если ТекСчет.Забалансовый = 1 Тогда
						глПроводка(Контекст,ТекСчет,,ОстНов-ОстТек,"Переоценка валюты",, Субк1,Субк2,Субк3,
						,,, Ит.Валюта,,"ВЛ");
					Иначе
						глПроводка(Контекст,ТекСчет,СчетДоходов,ОстНов-ОстТек,"Переоценка валюты",, Субк1,Субк2,Субк3,
						,,, Ит.Валюта,,"ВЛ");
					КонецЕсли;
				ИначеЕсли ОстТек - ОстНов > 0 Тогда
					Если ТекСчет.Забалансовый = 1 Тогда
						глПроводка(Контекст,,ТекСчет,ОстТек-ОстНов,"Переоценка валюты",, ,,,
						Субк1,Субк2,Субк3, Ит.Валюта,,"ВЛ");
					Иначе
						глПроводка(Контекст,СчетЗатрат,ТекСчет,ОстТек-ОстНов,"Переоценка валюты",,,,ВидЗатрат,
						Субк1,Субк2,Субк3, Ит.Валюта,,"ВЛ");
						// Закрываем сразу на 9 класс
						Если (ИспользоватьСчетаРасходов = Класс89) И (Сред(СчетЗатрат,1,2)="84") 	Тогда
							глПроводка(Контекст,"94.5",СчетЗатрат,ОстТек-ОстНов,"Переоценка валюты",,,,ВидЗатрат,
							,,ВидЗатрат, ,,"ВЛ");
						КонецЕсли;
					КонецЕсли;
	 	    	КонецЕсли;
    		КонецЦикла;
    	КонецЕсли;

    	Если Уровень < ТекСчет.КоличествоСубконто() Тогда
    		Уровень = Уровень+1;
			Ит.ВыбратьСубконто(Уровень);
		КонецЕсли;
		Флаг = Ит.ПолучитьСубконто(Уровень);
	    Пока (Флаг = 0) И (Уровень > 1) Цикл
	    	// закончили нижний уровень, продолжаем обрабатывать верхний
	    	Уровень = Уровень - 1;
			Флаг = Ит.ПолучитьСубконто(Уровень);
	    КонецЦикла;
    КонецЦикла;
КонецПроцедуры

// ===============================
// Выполняет переоценку неаналитического счета в бухгалтерском учете
Процедура ПереоценкаБезСубконто()
	// определим, операционная или нет курсовая разница по этому счету
	СчетДоходов = СчетПоКоду("71.4");
	СчетЗатрат = СчетЗатратОперКР;
	ВидЗатрат = Константа.ВидЗатратОперКР;
	Фильтр = ЗначениеВСтроку(ТекСчет);
	Если спНеоперационныеСчета.НайтиЗначение(Фильтр) > 0 Тогда
	    // есть такой счет в списке
		СчетДоходов = СчетПоКоду("74.4");
		СчетЗатрат = СчетЗатратНеоперКР;
		ВидЗатрат = Константа.ВидЗатратНеоперКР;
	КонецЕсли;
	
	Вал = СоздатьОбъект("Справочник.Валюты");
	Вал.ВыбратьЭлементы();
	Пока Вал.ПолучитьЭлемент() = 1  Цикл
		ТекВалюта = Вал.ТекущийЭлемент();
		Ит.ВыполнитьЗапрос(,КонМесяца(ДатаДок), ТекСчет,,ТекВалюта, 1,"Проводка");
		
		// по бухгалтерскому учету
		ОстТек = Ит.СКД("С") - Ит.СКК("С");
		ОстВал = Ит.СКД("В") - Ит.СКК("В");
		ОстНов = глПересчет(ОстВал,ТекВалюта,Гривня,КонМесяца(ДатаДок));
		Если ОстНов - ОстТек > 0 Тогда
			Если ТекСчет.Забалансовый = 1 Тогда
				глПроводка(Контекст,ТекСчет,,ОстНов-ОстТек,"Переоценка валюты",, ,,,
				,,, ТекВалюта,,"ВЛ");
			Иначе
				глПроводка(Контекст,ТекСчет,СчетДоходов,ОстНов-ОстТек,"Переоценка валюты",, ,,,
				,,, ТекВалюта,,"ВЛ");
			КонецЕсли;
		ИначеЕсли ОстТек - ОстНов > 0 Тогда
			Если ТекСчет.Забалансовый = 1 Тогда
				глПроводка(Контекст,,ТекСчет,ОстТек-ОстНов,"Переоценка валюты",, ,,,
				,,, ТекВалюта,,"ВЛ");
			Иначе
				глПроводка(Контекст,СчетЗатрат,ТекСчет,ОстТек-ОстНов,"Переоценка валюты",,,,ВидЗатрат,
				,,, ТекВалюта,,"ВЛ");
				// Закрываем сразу на 9 класс
				Если (ИспользоватьСчетаРасходов = Класс89) И (Сред(СчетЗатрат,1,2)="84") 	Тогда
					глПроводка(Контекст,"94.5",СчетЗатрат,ОстТек-ОстНов,"Переоценка валюты",,,,ВидЗатрат,
				,,ВидЗатрат, ,,"ВЛ");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// ======================================
// Переоценка остатков валюты в налоговом учете
Процедура ПереоценкаОстаткиНал()
	глКомментарий("===== Выполняется переоценка остатков валюты (счет ВЛ) в налоговом учете =====",2,,"I");
	// остатки в валюте (балансовая стоимость валюты) хранятся на забалансовом счете ВЛ,
	// в конце периода они подлежат переоценке (ст. 7.3.6 З-на о прибыли)
	Ит.ИспользоватьСубконто(ВидыСубконто.НашиДенежныеСчета);
	Ит.ВыполнитьЗапрос(,КонМесяца(ДатаДок),"ВЛ");
	Ит.ВыбратьСубконто(1);
	Пока Ит.ПолучитьСубконто(1) = 1 Цикл
		Ит.ВыбратьВалюты();
		КвоВалют = 0;
		Пока Ит.ПолучитьВалюту() = 1 Цикл
			КвоВалют = КвоВалют + 1;
			ОстТек = Ит.СКД("С") - Ит.СКК("С");
			ОстВал = Ит.СКД("В") - Ит.СКК("В");
			ОстНов = глПересчет(ОстВал,Ит.Валюта,Гривня,КонМесяца(ДатаДок));
 				Если ОстНов - ОстТек > 0 Тогда
 					// валовые доходы
				СуммаВалДохВалюта = СуммаВалДохВалюта + Окр(ОстНов - ОстТек,2);
 				ИначеЕсли ОстТек - ОстНов > 0 Тогда
 					// валовые расходы
				СуммаВалРасхВалюта = СуммаВалРасхВалюта + Окр(ОстТек - ОстНов,2);
			КонецЕсли;
			глПроводка(Контекст,"ВЛ",,Окр(ОстНов - ОстТек,2),"Переоценка валюты",, Ит.Субконто(1),,,
			,,, Ит.Валюта,,"ВЛ");				
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры 

// ======================================
// Переоценка задолженности в налоговом учете
Процедура ПереоценкаЗадолженностьНал()
	// курсовые разницы по задолженности в валюте рассчитываются в момент 
	// проведения операции и в конце периода (ст. 7.3.3 и ст. 7.3.6 З-на о прибыли)
	
	// для расчета "налоговой" курсовой разницы выберем все операции за квартал
	// и рассчитаем курсовую разницу как положено на момент проведения каждой операции.
	// фактически, курс меняется не чаще раза в день, поэтому достаточно детализации до дня
	
	НеУчитыватьВНалоговомУчете = "";
	УчитыватьВНалоговомУчете = "";
	Если ДатаДок < '01.01.2003' Тогда
		// До 2003: задолженность в иностранной валюте по финансовым кредитам с целью налогообложения
		// не подлежит перерасчету для определения курсовых разниц 
		НеУчитыватьВНалоговомУчете = "50,51,52,60,61,62";
	Иначе
		// После 2003: задолженность в валюте - 
		// кредиты, депозиты и проценты по ним, 
		// задолженность по финансовому лизингу (в конфигурации не учитывается),
		// ценные долговые бумаги
		УчитыватьВНалоговомУчете = "34,50,51,60,62";
	КонецЕсли;
	
	ДатаНачКвартала = НачКвартала(ДатаДок);
	ДатаКонКвартала = КонКвартала(ДатаДок);
	глКомментарий("===== Выполняется переоценка счетов задолженности в налоговом учете =====",2,,"I");
	Для ИндСч = 1 По глСчетаЗадолженностейВВалюте.РазмерСписка() Цикл
		ТекСчет = СчетПоКоду(глСчетаЗадолженностейВВалюте.ПолучитьЗначение(ИндСч));
		ТекКоличествоСубконто = ТекСчет.КоличествоСубконто();
		
		// Пропускаем не относящиеся к налоговому учету счета.
		Если (Найти(НеУчитыватьВНалоговомУчете, Лев(Строка(ТекСчет),2)) > 0) 
		// при необходимости не переоценивать немонетарные счета нужно раскомментировать следующую строку
		//или (глНемонетарныеСчета.Принадлежит(Число(ТекСчет.Код)) = 1) 
		Тогда
			Продолжить;
		КонецЕсли;
		Если (УчитыватьВНалоговомУчете <> "") и (Найти(УчитыватьВНалоговомУчете, Лев(Строка(ТекСчет),2)) = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		глКомментарий("Переоценка счета "+ТекСчет,2,,"I");
		Если ТекКоличествоСубконто = 0 Тогда
			глКомментарий("Обнаружен счет задолженности в валюте ("+ТекСчет+"), по которому не ведется аналитический учет. Переоценка этого счета не выполнена!",1,,"!");
			Продолжить;
		КонецЕсли;
		
		// Далее следует алгоритм переоценки для аналитических счетов
		
		Ит2003 = СоздатьОбъект("БухгалтерскиеИтоги");
		Для ИСб = 1 По ТекКоличествоСубконто Цикл
		    Ит.ИспользоватьСубконто(ТекСчет.ВидСубконто(ИСб),,1,0);
		    Ит2003.ИспользоватьСубконто(ТекСчет.ВидСубконто(ИСб),,1,0);
		КонецЦикла;
		Ит.ВыполнитьЗапрос(ДатаНачКвартала,ДатаКонКвартала, ТекСчет,,, 1,"День");
		
		Если ДатаДок >= '01.01.2003' Тогда
			// Задолженность на 01.01.2003 должна переоцениваться по "старому" алгоритму
			// согласно Переходным положениям З-на N 349-IV.
			// Сформируем запрос, чтобы определить, остатки по каким объектам аналитики
			// были на 01.01.2003.
			Ит2003.ВыполнитьЗапрос('01.01.2003',, ТекСчет,,, 1);
		КонецЕсли;
		
	    Уровень = 1;
		Ит.ВыбратьСубконто(Уровень);
		Флаг = Ит.ПолучитьСубконто(Уровень);
	    Пока Флаг = 1 Цикл
	    	Если Уровень = ТекКоличествоСубконто Тогда
				Ит.ВыбратьВалюты();
				Пока Ит.ПолучитьВалюту() = 1 Цикл
					// строка с информацией о текущем субконто
					стрСубконто = "";
					Для Инд = 1 По Уровень Цикл
						стрСубконто = стрСубконто +" "+ Ит.Субконто(Инд);
					КонецЦикла;
					
					// Проверим, нет ли остатков в этом разрезе на 01.01.2003
					фОстатки2003 = 0;
					Если ДатаДок >= '01.01.2003' Тогда
						Для Инд = 1 По ТекСчет.КоличествоСубконто() Цикл
							Ит2003.ВыбратьСубконто(Инд);
							Если Ит2003.ПолучитьСубконто(Инд,,Ит.Субконто(Инд)) = 1 Тогда
								// Нашли нужное субконто в выборке
								Если Инд = ТекКоличествоСубконто Тогда
									// На последнем уровне спозиционируемся на нужную валюту
									Ит2003.ВыбратьВалюты();
									Если Ит2003.ПолучитьВалюту(,Ит.Валюта) = 1 Тогда
										Если Ит2003.СНД("В") > 0 Тогда
											// Остаток на начало 2003 есть, будем в дальнейшем применять "старый" алгоритм
											глКомментарий("  Переоценка субконто "+стрСубконто+". Есть остаток задолженности на 01.01.2003, переоценка выполняется по ""старым"" правилам.",3,,"I");
											фОстатки2003 = 1;
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
							Иначе
								Прервать;
							КонецЕсли;
						КонецЦикла; // по номерам субконто
					КонецЕсли;
					
					Если (ДатаДок < '01.01.2003') или (фОстатки2003 = 1) Тогда
						// До 2003: при каждой операции переоцениваем всю задолженность.
						// Используем разницу курсов между текущей датой и прошлой переоценкой 
						// (то есть, прошлой операцией)
						
						ОстВал = Ит.СНД("В") - Ит.СНК("В");
						// независимо от данных бухгалтерского учета, остаток по задолженности в налоговом 
						// учете на начало квартала должен быть по курсу НБУ на последний рабочий день пред квартала.
						ОстТек = Окр(глПересчет(ОстВал,Ит.Валюта,Гривня,ДатаНачКвартала-1),2);
						глКомментарий("  Переоценка субконто "+стрСубконто+". Сальдо на начало квартала в валюте ("+Ит.Валюта.Кратко+") = "+ОстВал+", эквивалент по курсу = "+ОстТек,3,,"I");
						
						Ит.ВыбратьПериоды();
						Пока Ит.ПолучитьПериод() = 1 Цикл
							// выполнена какая-то операция за этот день
							Если (Ит.ДО("В") <> 0) или (Ит.КО("В") <> 0) Тогда
								// операция изменила валютную задолженность, на этот момент положено выполнить переоценку
								ОстНов = Окр(глПересчет(ОстВал,Ит.Валюта,Гривня,Ит.НачДата),2); // по курсу на дату операции
								СуммаКурсовойРазницы = Окр(ОстНов-ОстТек,2);
								ОстВал = Ит.СКД("В") - Ит.СКК("В");// сальдо на конец дня
								ОстТек = Окр(глПересчет(ОстВал,Ит.Валюта,Гривня,Ит.НачДата),2);
								глКомментарий("    Дата "+Ит.НачДата+", курс = "+Ит.Валюта.Курс.Получить(Ит.НачДата),3,,"I");
								глКомментарий("    Курсовая разница = "+СуммаКурсовойРазницы+". Сальдо после операции = "+ОстВал+", эквивалент по курсу = "+ОстТек,3,,"I");
								Если СуммаКурсовойРазницы > 0 Тогда
									СуммаВалДохЗадолж = СуммаВалДохЗадолж + СуммаКурсовойРазницы;
								ИначеЕсли СуммаКурсовойРазницы < 0 Тогда
									СуммаВалРасхЗадолж = СуммаВалРасхЗадолж - СуммаКурсовойРазницы;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла; // по операциям
						// теперь принудительно на конец квартала
						ОстНов = Окр(глПересчет(ОстВал,Ит.Валюта,Гривня,ДатаКонКвартала),2); // по курсу на конец квартала
						СуммаКурсовойРазницы = Окр(ОстНов-ОстТек,2);
						глКомментарий("    Дата "+ДатаКонКвартала+" (конец кваратала), курс = "+Ит.Валюта.Курс.Получить(ДатаКонКвартала),3,,"I");
						глКомментарий("    Курсовая разница = "+СуммаКурсовойРазницы,3,,"I");
						Если СуммаКурсовойРазницы > 0 Тогда
							СуммаВалДохЗадолж = СуммаВалДохЗадолж + СуммаКурсовойРазницы;
						ИначеЕсли СуммаКурсовойРазницы < 0 Тогда
							СуммаВалРасхЗадолж = СуммаВалРасхЗадолж - СуммаКурсовойРазницы;
						КонецЕсли;
					Иначе
						// После 2003: переоцениваем только ту часть задолженности, которая погашается (сумма изменения).
						// Используем разницу курсов между текущей датой и началом квартала 
						// (или датой возникновения задолженности, если она возникла уже позже).
						
						НачДатаЗадолж = ПолучитьПустоеЗначение("Дата");
						Если Ит.СНД("В") > 0 Тогда
							// Задолженность возникла до начала квартала, для переоценки используем курс
							// на конец прошлого квартала
							НачДатаЗадолж = ДатаНачКвартала-1;
							глКомментарий("  Переоценка субконто "+стрСубконто+". Для переоценки используется курс на конец прошлого квартала.",3,,"I");
						КонецЕсли;
						
						Ит.ВыбратьПериоды();
						Пока Ит.ПолучитьПериод() = 1 Цикл
							// выполнена какая-то операция за этот день
							Если (Ит.ДО("В") <> 0) или (Ит.КО("В") <> 0) Тогда
								Если ПустоеЗначение(НачДатаЗадолж) = 1 Тогда
									// Задолженности раньше не было, она только что возникла. 
									// Дату запоминаем, переоценивать пока нечего.
									НачДатаЗадолж = Ит.НачДата;
									глКомментарий("  Переоценка субконто "+стрСубконто+". Для переоценки используется курс на момент возникновения задолженности ("+НачДатаЗадолж+").",3,,"I");
									Продолжить;
								КонецЕсли;
								
								// операция изменила валютную задолженность, сумма изменения должна быть переоценена
								СуммаИзмененияЗадолженности = Ит.КО("В") - Ит.ДО("В");
								ОстВал = Ит.СКД("В") - Ит.СКК("В");// сальдо на конец дня
								СуммаКурсовойРазницы = Окр(глПересчет(СуммаИзмененияЗадолженности,Ит.Валюта,Гривня,Ит.НачДата) - // на дату операции
								глПересчет(СуммаИзмененияЗадолженности,Ит.Валюта,Гривня,НачДатаЗадолж) ,2); // на начало квартала (возникновения задолженности)
								
								глКомментарий("    Дата "+Ит.НачДата+", курс = "+Ит.Валюта.Курс.Получить(Ит.НачДата),3,,"I");
								глКомментарий("    Курсовая разница = "+СуммаКурсовойРазницы+". Сальдо после операции = "+ОстВал,3,,"I");
								Если СуммаКурсовойРазницы > 0 Тогда
									СуммаВалДохЗадолж = СуммаВалДохЗадолж + СуммаКурсовойРазницы;
								ИначеЕсли СуммаКурсовойРазницы < 0 Тогда
									СуммаВалРасхЗадолж = СуммаВалРасхЗадолж - СуммаКурсовойРазницы;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
						
						// На конец квартала для существующая задолженность считается условно погашенной.
						// Переоцениваем весь остаток.
						ОстВал = Ит.СКД("В") - Ит.СКК("В");
						СуммаКурсовойРазницы = Окр(глПересчет(ОстВал,Ит.Валюта,Гривня,ДатаКонКвартала) - // на конец квартала
						глПересчет(ОстВал,Ит.Валюта,Гривня,НачДатаЗадолж) ,2); // на начало квартала (возникновения задолженности)
						глКомментарий("    Дата "+ДатаКонКвартала+" (конец кваратала), курс = "+Ит.Валюта.Курс.Получить(ДатаКонКвартала),3,,"I");
						глКомментарий("    Курсовая разница = "+СуммаКурсовойРазницы+". Сальдо на конец квартала = "+ОстВал,3,,"I");
						Если СуммаКурсовойРазницы > 0 Тогда
							СуммаВалДохЗадолж = СуммаВалДохЗадолж + СуммаКурсовойРазницы;
						ИначеЕсли СуммаКурсовойРазницы < 0 Тогда
							СуммаВалРасхЗадолж = СуммаВалРасхЗадолж - СуммаКурсовойРазницы;
						КонецЕсли;
						
					КонецЕсли;					
				КонецЦикла; // по валютам
			КонецЕсли;
	    	Если Уровень < ТекСчет.КоличествоСубконто() Тогда
	    		Уровень = Уровень+1;
				Ит.ВыбратьСубконто(Уровень);
			КонецЕсли;
			Флаг = Ит.ПолучитьСубконто(Уровень);
		    Пока (Флаг = 0) И (Уровень > 1) Цикл
		    	// закончили нижний уровень, продолжаем обрабатывать верхний
		    	Уровень = Уровень - 1;
				Флаг = Ит.ПолучитьСубконто(Уровень);
		    КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура ПроводкиШапка()
	// по бухгалтерскому учету
	глКомментарий("===== Выполняется переоценка счетов в бухгалтерском учете =====",2,,"I");
	Сч = СоздатьОбъект("Счет.Основной");
	Сч.ВыбратьСчета();
	Пока Сч.ПолучитьСчет() = 1 Цикл
		Если (Сч.ЭтоГруппа() = 0) И (Сч.Валютный = 1) Тогда
			ТекСчет = Сч.ТекущийСчет();
			Если (ТекСчет.Код = "ВЛ") Тогда
				// пропускаем счет "ВЛ", он используется только в налоговом учете
			    Продолжить;
			КонецЕсли;
			Если глНемонетарныеСчета.Принадлежит(Число(СтрЗаменить(ТекСчет.Код,".",""))) = 1 Тогда
				глКомментарий("Счет - немонетарный. Переоценка счета "+ТекСчет+" в бухг. учете не выполнена.", 2,,"I");
				Продолжить;
			КонецЕсли;
			глКомментарий("Переоценка счета "+ТекСчет,2,,"I");
			Если ТекСчет.КоличествоСубконто() > 0 Тогда
				ПереоценкаПоСубконто();
			Иначе
				ПереоценкаБезСубконто();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ДвиженияВзаиморасчеты();

	Если ЕстьВалДохРасх = 1 Тогда
		// по налоговому учету
		
		ПереоценкаОстаткиНал();
		ПереоценкаЗадолженностьНал();
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		//Если Константа.ВаловыйРасходВалюта <> Константа.НиДоходНиРасход Тогда
		//	глПроводка(Контекст,"ВР","ВР",СуммаВалРасхВалюта,"Валовые расходы по переоценке денежных счетов",, ,,Константа.ВаловыйРасходВалюта,
		//	,,Константа.ВаловыйРасходВалюта, ,,"ВЛ");
		//КонецЕсли;
		//Если Константа.ВаловыйРасходЗадолж <> Константа.НиДоходНиРасход Тогда
		//	глПроводка(Контекст,"ВР","ВР",СуммаВалРасхЗадолж,"Валовые расходы по задолженности в валюте",, ,,Константа.ВаловыйРасходЗадолж,
		//	,,Константа.ВаловыйРасходЗадолж, ,,"ВЛ");
		//КонецЕсли;
		//Если Константа.ВаловыйДоходВалюта <> Константа.НиДоходНиРасход Тогда
		//	глПроводка(Контекст,"ВД","ВД",СуммаВалДохВалюта,"Валовые доходы по переоценке денежных счетов",, ,,Константа.ВаловыйДоходВалюта,
		//	,,Константа.ВаловыйДоходВалюта, ,,"ВЛ");
		//КонецЕсли;
		//Если Константа.ВаловыйДоходЗадолж <> Константа.НиДоходНиРасход Тогда
		//	глПроводка(Контекст,"ВД","ВД",СуммаВалДохЗадолж,"Валовые доходы по задолженности в валюте",, ,,Константа.ВаловыйДоходЗадолж,
		//	,,Константа.ВаловыйДоходЗадолж, ,,"ВЛ");
		//КонецЕсли;
		
		// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура РассчитатьШапку()
	спНеоперационныеСчета = СоздатьОбъект("СписокЗначений");
	
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	
	// определим счета расходов
	Если ИспользоватьСчетаРасходов = Класс8 Тогда
		СчетЗатратОперКР = СчетПоКоду("84");
		СчетЗатратНеоперКР = СчетПоКоду("85");
	ИначеЕсли ИспользоватьСчетаРасходов = Класс9 Тогда
		СчетЗатратОперКР = СчетПоКоду("94.5");
		СчетЗатратНеоперКР = СчетПоКоду("97.4");
	Иначе
		СчетЗатратОперКР = СчетПоКоду("84");
		СчетЗатратНеоперКР = СчетПоКоду("97.4");
	КонецЕсли;
	
	СуммаВалРасхВалюта = 0;
	СуммаВалРасхЗадолж = 0;
	СуммаВалДохВалюта = 0;
	СуммаВалДохЗадолж = 0;
КонецПроцедуры 

// ===============================
Процедура РассчитатьСтроку()
	Если Счет.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Фильтр = ЗначениеВСтроку(Счет);
	Если ПустоеЗначение(Субконто1) = 0 Тогда
		Фильтр = Фильтр+"_"+ЗначениеВСтроку(Субконто1);
		Если ПустоеЗначение(Субконто2) = 0 Тогда
			Фильтр = Фильтр+"_"+ЗначениеВСтроку(Субконто2);
			Если ПустоеЗначение(Субконто3) = 0 Тогда
				Фильтр = Фильтр+"_"+ЗначениеВСтроку(Субконто3);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	спНеоперационныеСчета.ДобавитьЗначение(Фильтр);
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	Если ПроверкаШапки()=0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	
	РассчитатьШапку();
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		РассчитатьСтроку();
	КонецЦикла;
	
	ПроводкиШапка();

	Операция.СуммаОперации = 0;
    Операция.Содержание = Примечание;
    Операция.Записать();
	
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

