Перем Валюта_Прежн, Курс_Прежн;
Перем СтараяДата;              
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем ФлагБыстраяПродажа;
Перем НачальнаяДатаДокумента;
Перем СписокДействий;    

// ===============================
Функция УстДоступность()
	
	// ==== alexa
	Если НазваниеНабораПрав() = "Заказ" Тогда
	    Форма.КатегорияЦен.Доступность(0);
		Форма.ЦенаБезНДС.Доступность(0);
		Форма.ЦенаСНДС.Доступность(0);	
	КонецЕсли; 

	Спр = СоздатьОбъект("Справочник.ПрайсКонтр");
	Спр.ВыбратьЭлементы();
	Если (Спр.НайтиПоРеквизиту("Контрагент",Контрагент,1))=1 Тогда
		Форма.КатегорияЦен.Доступность(1);
	КонецЕсли;   

	// Разрешить изменение контрагента Бернацкая
	Если Контрагент.Код = "75" Тогда
	   		Форма.ЦенаБезНДС.Доступность(1);
		Форма.ЦенаСНДС.Доступность(1); 
	КонецЕсли;

// ===== alexa - end
	
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	Форма.Заголовок(глЗаголовок(Контекст,"Расходная накладная"));
	// доступность в зависимости от слоя               
	Если НазваниеНабораПрав()="Заказ" Тогда
	    Форма.КатегорияЦен.Доступность(0);
	КонецЕсли;
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		ДостКасса = 1;
	Иначе
		ДостКасса = 0;
	КонецЕсли;
	Если Закл = "Основной" Тогда
		Форма.тКасса.Доступность(ДостКасса);
		Форма.Касса.Доступность(ДостКасса);
		фВидимостьКредит = ?(ВидТорговли = Перечисление.ВидыТорговли.Кредит,1,0);
		Форма.тДатаОплаты.Видимость(фВидимостьКредит);
		Форма.тГлубина.Видимость(фВидимостьКредит);
		Форма.Глубина.Видимость(фВидимостьКредит);
	КонецЕсли;  
	Если Форма.ТолькоПросмотр()=1 Тогда
		// Если открыли только на просмотр, то надо кнопки сделать недоступными
		Форма.кФирма.Доступность(0);
		Форма.кВалюта.Доступность(0);
		Форма.кОсн.Доступность(0);
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
		//Форма.кДействия.Доступность(0);
		// ===============================
		// Инициализируем список действий по кнопке "Действия"
		СписокДействий = глПолучитьСписокДействий("
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");
		
		Форма.кДатьСкидку.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кПредварительно.Доступность(0);
		Форма.кБыстраяПродажа.Видимость(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе	
		Если ФлагБыстраяПродажа = Да Тогда
			Форма.кПредварительно.Видимость(0);
			Форма.кПровести.Видимость(0);
			Форма.кПечать.Видимость(0);
			Форма.кЗакрыть.Видимость(0);
			Форма.кОК.Видимость(0);
			Форма.кБыстраяПродажа.Видимость(1);
			Форма.КнопкаПоУмолчанию("кБыстраяПродажа");
		Иначе
			Форма.кПровести.Видимость(1);
			Форма.кПечать.Видимость(1);
			Форма.кЗакрыть.Видимость(1);
			Форма.кОК.Видимость(1);
			Форма.кБыстраяПродажа.Видимость(0);
		 	Форма.КнопкаПоУмолчанию("кОК");
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
КонецФункции
                  
// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;
	Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
		ДатаОплаты=ДатаДок + Глубина;	
	Иначе	
		ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстГлубина()
	// Формирует и показывает дату оплаты
	Если (ВидТорговли = Перечисление.ВидыТорговли.Кредит) И (Контрагент.Выбран() = 1) Тогда
		Если Контрагент.Глубина.Получить(ДатаДок) <> 0 тогда    
			Если ПустоеЗначение(Глубина)=1 тогда
				Глубина=Контрагент.Глубина.Получить(ДатаДок);
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		Глубина=0;
	КонецЕсли;	
	ИзмГлубина();
КонецПроцедуры	

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	УстГлубина(); 
КонецПроцедуры
         
// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = ТМЦ.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;  
	
КонецПроцедуры //ПересчетСтроки

// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
Процедура ИзмРеквизитШапки(Реквизит)           
	
	// пересчитаем суммы НДС в строках табличной части                                                      
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	текОтвет = Вопрос("В документе изменен реквизит """+Реквизит+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текОтвет = "Да" Тогда
			// изменим цены
			ЦенаТовара = глВернутьЦену(ТМЦ, КатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
				// получим параметры цены
				ЦенаТовара.ИспользоватьДату(ДатаДок);
				ЦенаЦены   = ЦенаТовара.Цена;
				ВалютаЦены = ЦенаТовара.Валюта;
				ЕдЦены	   = ЦенаТовара.Единица;
				ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
				ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
				ПересчетСтроки(ЦенаЦены);                                                   
			Иначе
				ПересчетСтроки();
			КонецЕсли;
		ИначеЕсли Реквизит = "ВидНДС" Тогда
			ПересчетСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 
                
// ===============================
Процедура ИзмВидТары()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("В документе изменен вид тары! Пересчитать суммы ?","Да+Нет") = "Да" Тогда
			текОсновнаяЦена = Константа.ОсновнаяЦена;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл    
				Если ПустоеЗначение(ТМЦ) = 1 Тогда
					Продолжить;
				ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					ПересчетСтроки();
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Печать(БыстраяПечать=0) Далее

// ===============================
Процедура БыстраяПродажа() // Процедура быстрой продажи
	
	Если Фирма.РС.Выбран()=0 Тогда
		Предупреждение("У фирмы """+СокрЛП(Фирма)+""" не выбран счет по умолчанию. Оформить быструю продажу нельзя.");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	глПроверкаДатыДок(Контекст,"Проведение");
	Если СтатусВозврата()=0 Тогда
	    Возврат;
	КонецЕсли;
	
	АвтоВремяТекущее();
	Записать();          
	
	Попытка

		НачатьТранзакцию();
		
		// счет
		Если глВосстановитьЗначение(,"ПечКолЭкзСчетаПриБыстройПродаже")>=0 Тогда
			Счет = СоздатьОбъект("Документ.Счет");
			Счет.Новый();
			Счет.ДатаДок = ДатаДок;
			Счет.АвтоВремяТекущее();
			
			Счет.Фирма = Фирма;
			Счет.Автор = Автор; 
			
			Счет.Контрагент 		= Контрагент;
			Счет.Договор 			= Договор;
			Счет.Валюта				= Валюта;
			Счет.Курс				= Курс;
			Счет.Дата_курса			= Дата_курса;
			Счет.СрокРезервирования = 1;
			Счет.РСчет 				= Фирма.РС;
			Счет.ВидТорговли 		= ВидТорговли;
			Счет.ВидТары 			= ВидТары;
			Счет.КатегорияЦен 		= КатегорияЦен;
			Счет.ВидНДС 			= ВидНДС;
			Счет.ЧтоПродаем			= Перечисление.ЧтоПродаем.ТМЦ;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()>0 Цикл
				Счет.НоваяСтрока();
				НазначитьВид(Счет.ТМЦ,"ТМЦ");
				Счет.ТМЦ 			= ТМЦ; 
				Счет.Кво 			= Кво;
				Счет.Ед 			= Ед;
				Счет.ЦенаБезНДС 	= ЦенаБезНДС;
				Счет.ЦенаСНДС 		= ЦенаСНДС;
				Счет.Коэффициент 	= Коэффициент;
				Счет.СуммаБезСкидки = СуммаБезСкидки;
				Счет.Скидка 		= Скидка;
				Счет.СуммаБезНДС 	= СуммаБезНДС;
				Счет.СуммаСНДС 		= СуммаСНДС;
				Счет.НДС 			= НДС;
			КонецЦикла;	
			
			глУстановитьНомер(Счет);	// меняем номер
			Счет.Записать();
			Счет.Провести(1);
			
			Если Счет.Проведен()<=0 Тогда
				ОтменитьТранзакцию();
				СтатусВозврата(0);                        
				Возврат;
			КонецЕсли;
			
			ДокументОснование = Счет.ТекущийДокумент();
			Основание		  = СокрЛП(Счет.ПредставлениеВида())+" №"+СокрЛП(Счет.НомерДок)+" от "+Шаблон("[Счет.ДатаДок]");
		КонецЕсли;                                     
		
        Записать();  // записываем
		Провести(1); // проводим
		Если Проведен()<=0 Тогда 
			ДокументОснование = 0;
			Основание = "";
			ОтменитьТранзакцию();
			СтатусВозврата(0);                        
			Возврат;
		КонецЕсли;
		
		// налоговая накладная
		Если глВосстановитьЗначение(,"ПечКолЭкзННПриБыстройПродаже")>=0 Тогда
			Параметр = СоздатьОбъект("СписокЗначений");
			Параметр.ДобавитьЗначение(ТекущийДокумент(),"ДокументОснование");
			ОткрытьФормуМодально("Обработка.ФормированиеНалоговыхДокументов#",Параметр);
			спНалоговые	  = СоздатьОбъект("СписокЗначений");
			фВсеПроведены = 1;
			Док = СоздатьОбъект("Документ");
			Док.ВыбратьПодчиненныеДокументы(ДатаДок,ДатаДок,ТекущийДокумент());
			Пока Док.ПолучитьДокумент()=1 Цикл
				Если Док.Вид() = "НалоговаяНакладная" Тогда
					Если Док.РодительскийДокумент = ТекущийДокумент() Тогда
						Если Док.Провести() = 0 Тогда
							фВсеПроведены=0
						КонецЕсли;
						спНалоговые.ДобавитьЗначение(Док.ТекущийДокумент());
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если фВсеПроведены=0 Тогда
				СделатьНеПроведенным();	// отменяем проведение накладной
				ОтменитьТранзакцию();
				СтатусВозврата(0);                        
				Возврат;
			КонецЕсли;
		КонецЕсли;

		// Приходный ордер
		Если (глВосстановитьЗначение(,"ПечКолЭкзПрихОрдераПриБыстройПродаже")>=0)
		И (ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
			ПКО = СоздатьОбъект("Документ.ПриходныйКассовый");
			ПКО.Новый();
			ПКО.ДатаДок = ДатаДок;
			ПКО.АвтоВремяТекущее();
			
			ПКО.Фирма = Фирма;
			ПКО.Автор = Автор; 

			ПКО.Счет 			= СчетПоКоду(?(Валюта = Гривня, "36.1", "36.2"));
			ПКО.НазначитьТип("Субконто1",ТипЗначенияСтр(Контрагент));
			ПКО.Субконто1 		= Контрагент;
			ПКО.ДокументДоговор = Договор;         
			ПКО.НазначитьТип("Субконто2",ТипЗначенияСтр(Договор));
			ПКО.Субконто2 		= Договор;					
			ПКО.ПринятоОт 		= ?(ПустоеЗначение(Контрагент.ПолнНаименование)=0,Контрагент.ПолнНаименование,Контрагент.Наименование);
			ПКО.ВидОплаты 		= Перечисление.ВидыОплаты.Оплата;
			ПКО.РСчет 			= глПолучитьКассу(Фирма,Валюта);
			ПКО.ВидНДС 			= ВидНДС;
			ПКО.СуммаВал		= Итог("СуммаСНДС");
			ПКО.НДС				= Итог("НДС");
			
			ПКО.ДокументОснование = ТекущийДокумент();
			ПКО.Основание 		  = СокрЛП(ПредставлениеВида())+" №"+СокрЛП(НомерДок)+" от "+Шаблон("[ДатаДок]");
			
			глУстановитьНомер(ПКО);	// меняем номер
			Если Константа.ПроводкиПоКассеТолькоОрдерами = Нет Тогда
				ПКО.НеПроводить = 1;
			КонецЕсли;	            
			ПКО.Записать();
			
			ПКО.Провести(1);
			Если ПКО.Проведен()<=0 Тогда 
				ДокументОснование = 0;
				Основание = "";
				СделатьНеПроведенным();	// отменяем проведение накладной
				ОтменитьТранзакцию();
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
        
		// печатаем счет
		Если глВосстановитьЗначение(,"ПечКолЭкзСчетаПриБыстройПродаже")>0 Тогда
			ОткрытьФорму(Счет.ТекущийДокумент(),"БыстраяПечать");
		КонецЕсли;
		
		// печатаем накладную
		Если глВосстановитьЗначение(,"ПечКолЭкзНакладнойПриБыстройПродаже")>0 Тогда
			Печать(1);
		КонецЕсли;
		
		// печатаем налоговую накладную
		Если глВосстановитьЗначение(,"ПечКолЭкзННПриБыстройПродаже")>0 Тогда
			// Печатаем все налоговые
			Для Инд = 1 по спНалоговые.РазмерСписка() Цикл
				НН = спНалоговые.ПолучитьЗначение(Инд);
				ОткрытьФорму(НН,"БыстраяПечать");
			КонецЦикла;
		КонецЕсли;                     
		
		// печатаем ПКО
		Если (глВосстановитьЗначение(,"ПечКолЭкзПрихОрдераПриБыстройПродаже")>=0)
		И (ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
			ОткрытьФорму(ПКО.ТекущийДокумент(),"БыстраяПечать");
		КонецЕсли;                     
		// фиксируем все изменения
		ЗафиксироватьТранзакцию();
		Форма.Закрыть(0);
	Исключение
		// при возникновении ошибки отменяем все изменения
		// здесь можно выдать сообщение об ошибке
		ОтменитьТранзакцию();
		// сообщение используется для отладки
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
    
КонецПроцедуры	    // БыстраяПродажа    

// ===============================
Процедура ЧастичноПровести()
	фМожноПроводить = 1;
	Если Проведен()=1 Тогда
		Если РежимПроведения=0 Тогда
			фМожноПроводить = 0;
			Предупреждение("Документ "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
			               " полностью проведен. Предварительное проведение невозможно.");
		КонецЕсли;
	ИначеЕсли ДатаДок<ПолучитьДатуТА() Тогда
		фМожноПроводить = 0;
		Предупреждение("Предварительное проведение задним числом невозможно.");
	ИначеЕсли ДатаДок<>РабочаяДата() Тогда
		фМожноПроводить = 0;
		Предупреждение("Дата документа "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
		               " отличается от рабочей даты ("+Формат(РабочаяДата(),"ДДММГГГГ")+"). Предварительное проведение невозможно.");
	КонецЕсли;
				
	Если фМожноПроводить = 1 Тогда
		Провести(3,1);
		Если Проведен() = 1 Тогда
			УстДоступность();
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры
    
// ===============================
Процедура УстСчетКонтрагента()
	Если (((СчетКонтрагента.Валютный=1) И (Валюта=Гривня))
	ИЛИ ((СчетКонтрагента.Валютный<>1) И (Валюта<>Гривня))
	ИЛИ (ПустоеЗначение(СчетКонтрагента)=1)) Тогда
		СчетКонтрагента = СчетПоКоду(?(Валюта = Гривня, "36.1", "36.2"));	
	КонецЕсли;
КонецПроцедуры
                       
// ===============================
Процедура ИзмСчетКонтрагента()
	Если ПустоеЗначение(СчетКонтрагента) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбранный счет не является счетом учета взаиморасчетов!",1,,"!");
		СчетКонтрагента = 0;             
	ИначеЕсли (Валюта = Гривня)
	И (СчетКонтрагента.Валютный = 1) Тогда
		глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
		СчетКонтрагента = 0;       
	ИначеЕсли (Валюта <> Гривня)
	И (СчетКонтрагента.Валютный = 0) Тогда
		глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
		СчетКонтрагента = 0;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ВыборКассы()
	спКассы = глЗаполнитьСпКассы(Фирма,Валюта);
	спКассы.ВыбратьЗначение(Касса,,,,2);
КонецПроцедуры

// ===============================
Процедура ИзмКасса()
	Если Касса.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	Если Валюта <> Касса.Валюта Тогда
		Предупреждение("Выбранная Вами касса должна соответствовать валюте документа!");
		Касса = глПолучитьКассу(Фирма,Валюта);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	УстСчетКонтрагента();
	ИзмКасса();
КонецПроцедуры	
                    
// ===============================
Процедура ИзмВидТорговли()
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Если (Касса.Выбран() = 0) ИЛИ (Касса.Валюта <> Валюта) Тогда
		    Касса = глПолучитьКассу(Фирма,Валюта);
		КонецЕсли;
	Иначе
		Касса = 0;
	КонецЕсли;
	УстГлубина();		
КонецПроцедуры	

// ===============================
Процедура ИзмДоговор()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			Если Валюта <> Валюта_Прежн Тогда
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
					УстСчетКонтрагента();
				КонецЕсли;
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;
			ВидНДС = Договор.ВидНДС;
			ИзмРеквизитШапки("ВидНДС");
		Иначе
			Дата_Курса=ДатаДок;
			Курс_Прежн = Курс;
			Курс = глКурсДляВалюты(Валюта,ДатаДок);
			Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
				// что-то изменилось, надо пересчитать цены
				глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;    
	ИзмВидТорговли();
КонецПроцедуры 

// ===============================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда
		Если Договор.Выбран()=1 Тогда
			Если Контрагент <> Договор.Контрагент Тогда
			    Договор = 0;
			КонецЕсли;
		КонецЕсли;	
		// подставляем БазДоговор в зависимоти от константы
		Если (Константа.ПодставлятьОсновнойДоговор = Да) 
		И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
		И (ПустоеЗначение(Договор)=1) Тогда
			Если Фирма = Контрагент.БазДоговор.Фирма Тогда
				Договор = Контрагент.БазДоговор;
				ИзмДоговор();
			КонецЕсли;
		КонецЕсли;
		Если ПустоеЗначение(Контрагент.КатегорияЦен.Получить(ДатаДок)) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
		Иначе	
			КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		КонецЕсли;      						
		Если Договор.Выбран() = 1 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
				Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
					ВидТорговли = Договор.ВидТорговли;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	                      		
		Если (ПустоеЗначение(Контрагент.ВидТорговли) = 0)
		И (ПустоеЗначение(ВидТорговли) = 1) Тогда   
			Если Контрагент.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
			    ВидТорговли = Контрагент.ВидТорговли;      
			Иначе	
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
			ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;                                             		
		УстГлубина();		
		Если ПустоеЗначение(ДокументОснование) = 0 Тогда
			Если ДокументОснование.Контрагент <> Контрагент Тогда
				ДокументОснование = 0;
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		Договор = 0;
		ДокументОснование = 0;
	КонецЕсли;                                        
	ИзмВидТорговли();
КонецПроцедуры
                     
// ===============================
Процедура ОчиститьЗаказ()
	Если Договор.Выбран() = 1 Тогда
		Договор = 0;
	КонецЕсли;
КонецПроцедуры 

// ===============================
Процедура ЗаполнитьПоУмолчанию()
	СубконтоВалДох = глВосстановитьЗначение(Контекст,"СубконтоВалДох",Константа.БазВаловыйДоход);
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
		Дата_Курса=ДатаДок;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	КонецЕсли;
	Отпустил = глВосстановитьЗначение(,"БазОтпустил");
	// проверим реквизит Отпустил на принадлежность к выбранной фирме
	Если ПустоеЗначение(Отпустил) = 0 Тогда
		Если Отпустил.Фирма <> Фирма Тогда
			Отпустил = 0;
		КонецЕсли;	
	КонецЕсли;	
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад",Константа.ОсновнойСклад);  
	Подразделение = глВосстановитьЗначение(,"БазПодразделениеПродажи");
	// проверим реквизит Подразделение на принадлежность к выбранной фирме
	Если ПустоеЗначение(Подразделение) = 0 Тогда
		Если Подразделение.Владелец <> Фирма Тогда
			Подразделение = 0;
		КонецЕсли;	
	КонецЕсли;	
	Если ПустоеЗначение(Отпустил) = 0 Тогда
		Если Отпустил.Фирма <> Фирма Тогда
			Отпустил = 0;
		КонецЕсли;	
	КонецЕсли;	
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	УстСчетКонтрагента();
	ВидТары = Перечисление.ВидыТары.Залоговая;
	УстГлубина();       
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
	ИзмКонтрагент();
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	ЗаполнитьПоУмолчанию();
КонецПроцедуры

// ===============================
Процедура ПриВводеНаОсновании(Док)
	Фирма = Док.Фирма;
	глУстановитьНомер(Контекст);
	ЗаполнитьПоУмолчанию();     
	Если глЕстьРеквизитШапки("Контрагент",Док.Вид()) = Да Тогда
		Контрагент = Док.Контрагент;
		ИзмКонтрагент();
	КонецЕсли;	
	глЗаполнитьШапкуНаОсн(Контекст,Док);
	Если Найти("Договор,Заказ",Договор.Вид()) = 0 Тогда
		// заказом может быть только договор или заказ
	    Договор = 0;
	КонецЕсли;
	Если глЕстьРеквизитШапки("Валюта",Док.Вид()) = Да Тогда
		Валюта = Док.Валюта;
		Если Док.Вид() = "Договор" Тогда
			Дата_Курса = ДатаДок;
			Курс	   = глКурсДляВалюты(Валюта,ДатаДок);
		Иначе
			Курс = Док.Курс;	
			Если глЕстьРеквизитШапки("Дата_Курса",Док.Вид()) = Да Тогда
				Дата_Курса=Док.Дата_Курса;
			Иначе
				Дата_Курса=Док.ДатаДок;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
	УстСчетКонтрагента();
	ИзмВидТорговли();
	Если Док.Вид()="Счет" Тогда
	    // табл. часть
	    Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку()=1 Цикл
			НоваяСтрока();
			ТМЦ 			= Док.ТМЦ;
			Ед 				= Док.Ед;
			Коэффициент 	= Док.Коэффициент;
			ЦенаБезНДС 		= Док.ЦенаБезНДС;
			ЦенаСНДС 		= Док.ЦенаСНДС;
			Кво 			= Док.Кво;                    
			Набор			= Док.Набор;
			глВыч_Суммы_Накл(Контекст,1);
			СуммаБезСкидки	= Док.СуммаБезСкидки;
			Скидка          = Док.Скидка;
			глВыч_Суммы_Накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли Док.Вид() = "Заказ" Тогда
		Если (ПустоеЗначение(Док.Контрагент)=1) Тогда
			глКомментарий("Расходную накладную можно вводить только на основании заказа от контрагента!",0,,"!!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;	
		Если Док.ПереработкаДавальческогоСырья=1 Тогда
			глКомментарий("Для отгрузки давальческой продукции используется документ ""Оказание услуг""!",0,,"!!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		// шапка
		Договор = Док;
	    // табл. часть
	    Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			Если Док.Продукция.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
				Продолжить;
			КонецЕсли;
			Если ПустоеЗначение(Док.Кво) = 1 Тогда
				Продолжить;
			КонецЕсли;
			глДобавитьТоварВДокумент(Контекст,Док.Продукция,Док.Кво,);
			Ед 			= Док.Ед;
			глИзмЕдин(Контекст);
		КонецЦикла;
	ИначеЕсли Док.Вид() = "ВыпускПродукции" Тогда
		// заполним реквизиты шапки, которые еще не заполнены          
		ДокументОснование = ПолучитьПустоеЗначение("Документ");
		Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
		ИзмКонтрагент();
		КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		// заполним табличную часть
		тбВыпускПродукции = СоздатьОбъект("ТаблицаЗначений");
		Док.ВыгрузитьТабличнуюЧасть(тбВыпускПродукции);
		// попробуем определить Договор/Заказ
	    тбВыпускПродукции.ВыбратьСтроки();
		Пока тбВыпускПродукции.ПолучитьСтроку() = 1 Цикл
			Если Договор <> тбВыпускПродукции.Заказ Тогда
				Если тбВыпускПродукции.НомерСтроки <> 1 Тогда
					// в табличной части несколько заказов, договор не заполняем
					Договор = ПолучитьПустоеЗначение("Документ");
					Прервать;
				Иначе
					Договор = тбВыпускПродукции.Заказ;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;		
		Если ПустоеЗначение(Договор) = 0 Тогда
			// можно определить контрагента
			Контрагент = Договор.Контрагент;
			ИзмКонтрагент();
		КонецЕсли;
		тбВыпускПродукции.Свернуть("Продукция,Ед,Коэффициент","Кво");
		// заполним табличную часть
	    тбВыпускПродукции.ВыбратьСтроки();
		Пока тбВыпускПродукции.ПолучитьСтроку() = 1 Цикл
			глДобавитьТоварВДокумент(Контекст,тбВыпускПродукции.Продукция,тбВыпускПродукции.Кво,);
			Ед 			= тбВыпускПродукции.Ед;
			глИзмЕдин(Контекст);
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры                      

// ===============================
Функция ПроверкаОснования(Док)	
	Если Док.Вид()="Счет" Тогда
		Если Док.ЧтоПродаем = Перечисление.ЧтоПродаем.НеоборотныеАктивы Тогда
			Предупреждение("Для реализации основных средств используйте документ ЛиквидацияНеоборАктивов");
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	Возврат 1;
КонецФункции

// ===============================
// основание - счет, договор, остатки взаиморасчетов
Процедура ВводНаОсновании(Док)        
	Если ПустоеЗначение(Док) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	   
	
	Если ПроверкаОснования(Док) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	 

	ПриВводеНаОсновании(Док);
	
КонецПроцедуры
           
// ===============================
Процедура ВыборОснования()  
	// Процедура по кнопке редактирования основания в докумнете
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ПроверкаОснования(ДокументОснование) = 0 Тогда 
			ДокументОснование = СтарОснование;              		
		КонецЕсли;	
		Если (ДокументОснование <> СтарОснование)
		И (ДокументОснование.Вид() <> "РасходыНаПриобретение") Тогда
			ПриВводеНаОсновании(ДокументОснование);	
		КонецЕсли;	
	КонецЕсли;	          
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры

// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзмКол()
	Если Кол = 0 Тогда
		Кол = Кво / (1-свес*0.01);
		Возврат;
	КонецЕсли;
	Кво	=	Кол-(кол*(свес*0.01));
	глВыч_Суммы_Накл(Контекст)	
КонецПроцедуры

Процедура УстСкидкаВес()
	Если ТМЦ.Выбран()=1 Тогда
		Если НеИспользоватьСВес = 1 Тогда
			свес = 0;
		Иначе
			Если ВУП = Да Тогда
				свес = Константа.СкидкаВесВУП;
			Иначе
				свес=ТМЦ.сквес;
			КонецЕсли;		    
		КонецЕсли;
		ИзмКол();
	КонецЕсли;		
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Кол = Кво;
		УстСкидкаВес();
	КонецЦикла;
КонецПроцедуры //Обработка подбора

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	ОтображаемыеСлои = "Общий," + Значение;           
	Если Значение = "Основной" Тогда
		ОтображаемыеСлои = ОтображаемыеСлои + ",ОсновнойТорг";
	КонецЕсли;	
	Форма.ИспользоватьСлой(ОтображаемыеСлои,2);	
КонецПроцедуры

// ===============================
Процедура Печать(БыстраяПечать=0)
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");
	
	Таб.ИсходнаяТаблица("Накладная"+СуффиксТаблицы);
    
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,ВУП,Набор,Кво,Ед,Коэффициент,ЦенаБезНДС,ЦенаСНДС,СуммаБезСкидки,Скидка,СуммаБезНДС,НДС,СуммаСНДС");
	
	ПечФорма = "Накладная";
	Язык = глЯзык(ПечФорма); 	
	глУстПропись(Валюта,Язык);
	ПечОснование=глСтрокаОснование(Контекст,Договор,ДокументОснование);
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = ?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);
	Таб.ВывестиСекцию("Шапка");
	Ном = 1;     
	ВСоставе = 0;
	фЕстьТара =0;
	ИтВес = 0;
	ТаблТМЦ.ВыбратьСтроки();
	Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
		Если ТаблТМЦ.Набор.Выбран()=1 Тогда
			Если (ПустоеЗначение(ВСоставе)=1) или (ВСоставе<>ТаблТМЦ.Набор) Тогда
				Таб.ВывестиСекцию("ВСоставе");
				ВСоставе=ТаблТМЦ.Набор;
			КонецЕсли;
		Иначе
			Если ПустоеЗначение(ВСоставе)=0 Тогда
				ВСоставе=0;
			КонецЕсли;
		КонецЕсли;
		Если (ВидТары <> Перечисление.ВидыТары.Покупная) и (ТаблТМЦ.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
			фЕстьТара = 1;
		    Продолжить;
		ИначеЕсли (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) и (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга) Тогда
		    ИтВес = ИтВес + ТаблТМЦ.Кво;
		КонецЕсли;		
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;
	// печать тары
	Если фЕстьТара = 1 Тогда
		Если ВидТары = Перечисление.ВидыТары.Возвратная Тогда
			ЗагТара = ?(Язык="у","Тара зворотна","Тара возвратная");
		ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			ЗагТара = ?(Язык="у","Тара заставна","Тара залоговая");
		КонецЕсли;
		Таб.ВывестиСекцию("ШапкаТара");
	    Ном = 0;
		ТаблТМЦ.ВыбратьСтроки();
		Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
			Если (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			    Продолжить;
			КонецЕсли;
			ИтСуммаТары = ИтСуммаТары + ТаблТМЦ.СуммаБезСкидки;
			Ном = Ном + 1;
			Таб.ВывестиСекцию("СтрокаТара");
		КонецЦикла;
		ИтСуммаТары = Окр(ИтСуммаТары,2);
		ПечИтСумма = глФРМТ(ИтСуммаТары,Валюта,0);
		Таб.ВывестиСекцию("ИтогоТара");
	КонецЕсли;
	
//	Если (ЕстьСкидка = 1) И (Итог("Скидка") <> 0) Тогда
//		Таб.ВывестиСекцию("ИтогоСкидка");
//	КонецЕсли;
	Если ОтЦеныСНДС = 1 Тогда
		Таб.ВывестиСекцию("ИтогоСНДС");
		Таб.ВывестиСекцию("ИтогоНДС");
		Таб.ВывестиСекцию("ИтогоБезНДС");
	Иначе
		Таб.ВывестиСекцию("ИтогоБезНДС");
		Таб.ВывестиСекцию("ИтогоНДС");
		Таб.ВывестиСекцию("ИтогоСНДС");
	КонецЕсли;
	Таб.ВывестиСекцию("Дно");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Если БыстраяПечать = 1 Тогда
		Таб.КоличествоЭкземпляров(глВосстановитьЗначение(,"ПечКолЭкзНакладнойПриБыстройПродаже"));
		Таб.Напечатать(0);
	Иначе	
		Таб.ТолькоПросмотр(1);
		Таб.Опции(0,0,,);
		Таб.Показать("ПЕЧАТЬ: Накладная","");
		глУстПропись(Гривня); 
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ДатьСкидку()
	Перем ВыбЗначение, ВыбПроцент, ВыбСумма;
	ВариантыСкидок = СоздатьОбъект("СписокЗначений");
	ВариантыСкидок.ДобавитьЗначение(1,"Процентом по накладной");
	ВариантыСкидок.ДобавитьЗначение(2,"Суммой по накладной");
	ВариантыСкидок.ДобавитьЗначение(3,"Процентом по строке");
	ВариантыСкидок.ДобавитьЗначение(4,"Суммой по строке");

	Если ВариантыСкидок.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;

	Если (ВыбЗначение = 1) или (ВыбЗначение = 3) Тогда
		Если ВвестиЧисло(ВыбПроцент,"Введите процент:",6,2) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	ИначеЕсли (ВыбЗначение = 2) или (ВыбЗначение = 4) Тогда
		Если ВвестиЧисло(ВыбСумма,"Введите сумму:",12,2) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;

	Если ВыбЗначение = 1 Тогда
	    // процентом по накладной
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Скидка = Окр(СуммаБезСкидки * ВыбПроцент / 100,2);
			глВыч_Суммы_Накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли ВыбЗначение = 2 Тогда
		// суммой по накладной
		ОсталосьРаспределить = ВыбСумма;

		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если НомерСтроки = КоличествоСтрок() Тогда
			    // в последнюю строку - то что осталось
				Скидка = ОсталосьРаспределить;
			Иначе
				// пропорционально
				Коэф = ?(Итог("СуммаБезСкидки") = 0,0,СуммаБезСкидки/Итог("СуммаБезСкидки"));
				Скидка = Окр(ВыбСумма * Коэф,2);
				ОсталосьРаспределить = ОсталосьРаспределить - Скидка;
			КонецЕсли;
			глВыч_Суммы_Накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли ВыбЗначение = 3 Тогда
		// процентом по строке
		Скидка = Окр(СуммаБезСкидки * ВыбПроцент / 100,2);
		глВыч_Суммы_Накл(Контекст,2);
	ИначеЕсли ВыбЗначение = 4 Тогда
		// суммой по строке
		Скидка = ВыбСумма;
		глВыч_Суммы_Накл(Контекст,2);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета=СоздатьОбъект("СписокЗначений");
	спСчета.ДобавитьЗначение(ТМЦ.Счет);
	спОтбор.Установить("Счет",спСчета);
	Если глПартионныйУчетПоСкладам = Да Тогда
	    спОтбор.Установить("МестоХранения",МестоХранения);
	КонецЕсли;
	спОтбор.Установить("Контекст",Контекст);      
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры
                      
// ===============================
Процедура ПриНачалеРедактированияСтроки()
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
	Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
КонецПроцедуры

// ===============================
Процедура ПриОткрытии() 
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	Форма.ДатаДок.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ВидТары.ВыполнятьФормулуТолькоПриИзменении(1);	
	Форма.ВидТорговли.ВыполнятьФормулуТолькоПриИзменении(1);
                        
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="Строка" Тогда
			Если ВРег(Форма.Параметр)="БЫСТРАЯ ПРОДАЖА" Тогда
				ФлагБыстраяПродажа = Да;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	Если Константа.ИспользоватьСкидку <> Да Тогда
		Форма.СуммаБезСкидки.Видимость(0);
		Форма.Скидка.Видимость(0);
		Форма.кДатьСкидку.Доступность(0);
	КонецЕсли;

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Общий,Основной,ОсновнойТорг",2);
	
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;

	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;  
	СтараяДата = ДатаДок;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	глУстВидимостьЦен(Контекст);
	Если ПустоеЗначение(ВидТары) = 1 Тогда
	    ВидТары=Перечисление.ВидыТары.Залоговая;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Автор = глПользователь;
	ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	глСохранитьЗначение(Контекст,"СубконтоВалДох",СубконтоВалДох);
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
		ИзмРеквизитШапки("ВидНДС");
		ФлагСтандОбр = 0;
	ИначеЕсли Рекв="Отпустил" Тогда
		КонтФирмы = Фирма;
		ФлагСтандОбр = 0;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);
	ИначеЕсли Рекв = "Предпочтение" Тогда
		Если ((глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.FIFO) 
		ИЛИ ((глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.LIFO))) Тогда
			ВыборПредПочтения();
		КонецЕсли;	
		ФлагСтандОбр = 0;
	ИначеЕсли Рекв="Касса" Тогда
		ВыборКассы();		
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры
                      
Процедура ИзмТМЦ()
	глПриИзмененииТовара(Контекст);
	УстСкидкаВес();
КонецПроцедуры

Процедура ИзмВУП()
	УстСкидкаВес();
	глПриИзмененииТовара(Контекст, 1)	
КонецПроцедуры

Процедура ИзмНеИспользоватьСВес()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("Пересчитать скидку на вес в документе?", "Да+Нет") = "Да" Тогда
		    ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				УстСкидкаВес();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|ОбновлениеЦен,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");
