Перем СтрОснование; // комментарий проводки

Перем КассовыйМетодБонусы; // + umk
Перем ТабОсновныеПартнеры; // + umk
Перем ТабЧастьДопПлатеж; // + umk
Перем  Валюта; // + umk
Перем ТабОстаткиРасчетовБонусы;// + umk

Процедура ДвижениеОстаткиРасчетовБонус() Далее // + umk 
Процедура ДвижениеБонусов() Далее // + umk 
Процедура ДвиженияВзаиморасчеты() Далее

// ======================================
Процедура ОбработкаПроведения()
	
	// Подготовим таблицы + umk
	ТабОсновныеПартнеры = СоздатьОбъект("ТаблицаЗначений");
	ТабОсновныеПартнеры.НоваяКолонка("Контрагент");
	ТабОсновныеПартнеры.НоваяКолонка("Партнер");
	
	ТабОстаткиРасчетовБонусы = СоздатьОбъект("ТаблицаЗначений");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("КонтрагентРасчетов");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("Договор");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("ВидДвижения");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("Сумма");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("Долг");
	// - umk
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ДвиженияВзаиморасчеты();			
	КонецЦикла;
	
	//+ umk
	ДвижениеОстаткиРасчетовБонус(); 
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
        ДвижениеБонусов(); 	
	КонецЦикла;
	// - umk

	глЗаписатьПроводкиВОперацию(Контекст);
	
	Операция.СуммаОперации = Итог("Сумма");
	Операция.Содержание = "Кассовая ведомость расчетов с клиентами "+" "+Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

// ===============================
Процедура ДвиженияВзаиморасчеты()
	Перем тбДолги, тбДолгиПост;
	
	//+ umk
	КонтрагентРасчетов = Контрагент;
	ДокументДоговор_ = ?(КонтрагентРасчетов.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,ДокументДоговор, КонтрагентРасчетов.БазДоговор); //  + umk заменим договор 
	
	
	Если КассовыйМетодБонусы = 1 Тогда
		ОсновнойПартнер = глОсновнойКонтрагентИерархии(Контрагент.Родитель,Контрагент);
		Если ПустоеЗначение(ОсновнойПартнер) = 0 Тогда
			КонтрагентРасчетов = ОсновнойПартнер;	
		КонецЕсли;
		//добавим в таблицу основных партнеров
		ТабОсновныеПартнеры.НоваяСтрока();
		ТабОсновныеПартнеры.Контрагент = Контрагент;
		ТабОсновныеПартнеры.Партнер = КонтрагентРасчетов;
		// Добавим в таблицу расчетов остатков бонусов
		ТабОстаткиРасчетовБонусы.НоваяСтрока();
		ТабОстаткиРасчетовБонусы.КонтрагентРасчетов = КонтрагентРасчетов;
		ТабОстаткиРасчетовБонусы.Договор = ДокументДоговор_;
		ТабОстаткиРасчетовБонусы.ВидДвижения = ?(Сумма<0,-1,1);
		ТабОстаткиРасчетовБонусы.Сумма = Сумма;
	КонецЕсли;
	//- umk
		
	ВидНДС = Константа.БазНДС;
	Валюта = Гривня;
	
	ВремРегистры=СоздатьОбъект("Регистры");

	Рег = ВремРегистры.ВзаиморасчетыПокупателей;
	РегПост = ВремРегистры.ВзаиморасчетыПоставщиков;
	
	
	Рег.УстановитьЗначениеФильтра("Фирма",Фирма,1);
	Рег.УстановитьЗначениеФильтра("Контрагент",КонтрагентРасчетов,1);
	Рег.УстановитьЗначениеФильтра("Валюта",РСчет.Валюта,1);
	
	РегПост.УстановитьЗначениеФильтра("Фирма",Фирма,1);
	РегПост.УстановитьЗначениеФильтра("Контрагент",КонтрагентРасчетов,1);
	РегПост.УстановитьЗначениеФильтра("Валюта",РСчет.Валюта,1);
	
	Если ИтогиАктуальны()=0 Тогда
		Рег.ВременныйРасчет();
		РегПост.ВременныйРасчет();
		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;
	Рег.ВыгрузитьИтоги(тбДолги,1,1);
	РегПост.ВыгрузитьИтоги(тбДолгиПост, 1, 1);	
	
	СуммаПогашения = Сумма;
	СтавкаНДСПогашения = Константа.БазНДС;
	СуммаНДС = 0;
	СуммаПогашенияГрн = 0;
	СуммаГрн = Сумма;
	ВалютаПроводки = ПолучитьПустоеЗначение("Справочник.Валюты");
	СуммаВалютная = 0;	

	Если СуммаПогашения = 0 Тогда
		Регистр.ВзаиморасчетыПокупателей.ДвижениеРасход(Фирма, КонтрагентРасчетов, ДокументДоговор_, ВидНДС, ТекущийДокумент(), ТекущийДокумент(), Валюта, 0.01, 0.01, АвансоваяОплата, 0, 0, 1);
		Регистр.ВзаиморасчетыПокупателей.ДвижениеРасход(Фирма, КонтрагентРасчетов, ДокументДоговор_, ВидНДС, ТекущийДокумент(), ТекущийДокумент(), Валюта, -0.01, -0.01, АвансоваяОплата, 0, 0, 1);		
	ИначеЕсли СуммаПогашения < 0 Тогда
		ЗнакОплаты = 1; //--- Нам платят
		глПогашениеДолга(Контекст,ЗнакОплаты,тбДолгиПост,Фирма,КонтрагентРасчетов,Перечисление.ВидыОплаты.Возврат,
		ДокументОснование,ДокументДоговор_,Перечисление.РежимыОплаты.ПоСчету,-СуммаГрн,-СуммаНДС,РСчет.Валюта,
		СтавкаНДСПогашения, 1, 0, -СуммаПогашенияГрн);		
		глПроводка(Контекст,РСчет.СчетУчета,СчетПоКоду("631",ПланыСчетов.Основной),Сумма,"Возврат денег от поставщика",, РСчет,,,
		КонтрагентРасчетов,ДокументДоговор_, ,ВалютаПроводки,СуммаВалютная,"БК",1,0);		
	Иначе
		ЗнакОплаты = -1; //--- Нам платят
		
		глПогашениеДолга(Контекст,ЗнакОплаты,тбДолги,Фирма,КонтрагентРасчетов,Перечисление.ВидыОплаты.Оплата,
		ДокументОснование,ДокументДоговор_,Перечисление.РежимыОплаты.ПоСчету,СуммаГрн,СуммаНДС,РСчет.Валюта,
		СтавкаНДСПогашения,1,0,СуммаПогашенияГрн);
		глПроводка(Контекст,РСчет.СчетУчета,СчетПоКоду("361",ПланыСчетов.Основной),Сумма,СтрОснование,, РСчет,,,
		КонтрагентРасчетов,ДокументДоговор_, ,ВалютаПроводки,СуммаВалютная,"БК",1,0);
		//глНачислитьБонусы(Контекст, Контрагент, ДокументДоговор, 1, Сумма); // + umk уберем		
	КонецЕсли;	
	
КонецПроцедуры // ДвиженияВзаиморасчеты()

// + umk 
//Выполнить движения по остаткам долгов для бонусов рассчитанных по отгрузке
//
Процедура ДвижениеОстаткиРасчетовБонус()
	
	ТабОстаткиРасчетовБонусы.Свернуть("КонтрагентРасчетов,Договор,ВидДвижения","Сумма, Долг");
	
	ТабОстаткиРасчетовБонусы.ВыбратьСтроки();
	Пока ТабОстаткиРасчетовБонусы.ПолучитьСтроку() = 1 Цикл
		ТабОстаткиРасчетовБонусы.Долг = глОстатокДолгаВзаиморасчетыБонусы(ТекущийДокумент(), Фирма, ТабОстаткиРасчетовБонусы.КонтрагентРасчетов, ТабОстаткиРасчетовБонусы.Договор, Валюта); // Добавим сумму долга на дату документа
		глПогаситьДолгОстаткиБонусов(Контекст, ТабОстаткиРасчетовБонусы.КонтрагентРасчетов, ТабОстаткиРасчетовБонусы.Сумма, ТабОстаткиРасчетовБонусы.ВидДвижения, ТабОстаткиРасчетовБонусы.Договор);
	КонецЦикла;
	
КонецПроцедуры

//Движение бонусов 
//
Процедура ДвижениеБонусов()
	
	Перем НС_, НС;
	
	БазаРасчета = Сумма;
	
	//Если применяем кассовый метод расчета, то проверим остаток долга
	Если КассовыйМетодБонусы = 1 Тогда
		
		Если ТабОсновныеПартнеры.НайтиЗначение(Контрагент,НС_,"Контрагент") = 1 Тогда //Найдем Базового контрагента расчетов
			ТабОсновныеПартнеры.ПолучитьСтрокуПоНомеру(НС_);
			КонтрагентРасчетов = ТабОсновныеПартнеры.Партнер;
			Если ТабОстаткиРасчетовБонусы.НайтиЗначение(КонтрагентРасчетов,НС,"КонтрагентРасчетов") = 1 Тогда //Найдем сумму расчетов основного партнера
				ТабОстаткиРасчетовБонусы.ПолучитьСтрокуПоНомеру(НС);
				Долг = ТабОстаткиРасчетовБонусы.Долг;
				Если Долг > БазаРасчета Тогда
					ТабОстаткиРасчетовБонусы.ПолучитьСтрокуПоНомеру(НС);
					ОстатокДолг = Долг - БазаРасчета; // уменьшаем сумму долга на сумму строки документа
					ТабОстаткиРасчетовБонусы.УстановитьЗначение(НС,"Долг", ОстатокДолг);
					Возврат; // Сумма расчетов не привысила сумма остатка долга
				Иначе //Начисляем бонусы на разницу 
					БазаРасчета = БазаРасчета - Долг; // расчитываем бонусы на разницу 
					ТабОстаткиРасчетовБонусы.УстановитьЗначение(НС,"Долг", 0); // обнулим долг. 
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	глНачислитьБонусы(Контекст, Контрагент, ДокументДоговор, 1, БазаРасчета,,1)
	
КонецПроцедуры
// - umk

СтрОснование = "Оплата заказа покупателем";

КассовыйМетодБонусы = ?((ПустоеЗначение(Константа.КассовыйМетодРасчетаБонусов)=0) И (ДатаДок>=Константа.КассовыйМетодРасчетаБонусов),1,0); // + umk
Валюта = Гривня; // + umk
