Перем НачальнаяДатаДокумента;

// ===============================
Процедура ИзмВалюта()
	Если Валюта.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли;
	КурсНБУ = Валюта.Курс.Получить(ДатаДок);
КонецПроцедуры

// ===============================
Функция УстДоступность()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	Форма.Фирма.Видимость(0);
	Форма.Заголовок(глЗаголовок(Контекст,"Покупка валюты"));
	Форма.СуммаВал.Доступность(РСчет.Выбран());
	Форма.КурсНБУ.Доступность(РСчет.Выбран());
	Форма.СуммаГРНУМВБ.Доступность(РСчет.Выбран());
	Форма.Банк.Доступность(РСчет.Выбран());
	Форма.КомБанкаГРН.Доступность(РСчет.Выбран());
	Форма.Примечание.Доступность(РСчет.Выбран());
	Форма.СуммаГРН.Доступность(РСчет.Выбран());
КонецФункции

// ===============================
Процедура ИзмРСчет()
	Если РСчет.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли;
	Валюта = РСчет.Валюта;
	ИзмВалюта();
КонецПроцедуры

// ===============================
Процедура ИзмРСчетГрн()
	Если РСчет.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли;
	Если РСчетГрн.Валюта <> Гривня Тогда
	    Предупреждение("В качестве расчетного счета должен быть выбран счет с валютой Гривня!");
	    РСчетГрн = 0;
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ИзмСчет(ИмяАтрибута)
	Сч = ПолучитьАтрибут(ИмяАтрибута);
	Если ПустоеЗначение(Сч) = 0 Тогда
		Если глПроверитьСчетЗатрат(Сч,,0)=0 Тогда
	        УстановитьАтрибут(ИмяАтрибута,0);
	    КонецЕсли; 
	КонецЕсли;
КонецПроцедуры 
                
// ===============================
Процедура ИзмСуммаГРНУМВБ()
	СуммаГРН = СуммаГРНУМВБ+КомБанкаГРН;
КонецПроцедуры
                    
// ===============================
Процедура ИзмКомБанкаГРН()
	СуммаГРН = СуммаГРНУМВБ+КомБанкаГРН;
КонецПроцедуры

// ===============================
Процедура ИзмДатаДок()
	ИзмВалюта();
КонецПроцедуры

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	Форма.ИспользоватьСлой("Общий,"+Значение,2);
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);  
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
//		Форма.кДействия.Доступность(0);          
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли; 
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Основной, Общий",2);
	
	Форма.ДатаДок.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Банк.ВыполнятьФормулуТолькоПриИзменении(1);
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);

	Банк = глВосстановитьЗначение(Контекст,"Банк");
	
	СубконтоВалРасх = глВосстановитьЗначение(Контекст,"СубконтоВалРасх");
	Если СубконтоВалРасх.Выбран() = 0 Тогда
	    Спр = СоздатьОбъект("Справочник.ВалДоходыРасходы");
	    Если Спр.НайтиПоКоду("2/2/11") = 1 Тогда
	        СубконтоВалРасх = Спр.ТекущийЭлемент();
	    КонецЕсли;
	КонецЕсли;
	ВалРасхПенсионный = глВосстановитьЗначение(Контекст,"ВалРасхПенсионный");
	Если ВалРасхПенсионный.Выбран() = 0 Тогда 
		Спр = СоздатьОбъект("Справочник.ВалДоходыРасходы");
	    Если Спр.НайтиПоКоду("2/1/16") = 1 Тогда
	    	ВалРасхПенсионный = Спр.ТекущийЭлемент();
		КонецЕсли;	
	КонецЕсли;
	
	СчетЗатратКР = глВосстановитьЗначение(Контекст,"СчетЗатратКР");
	СчетДоходовКР = глВосстановитьЗначение(Контекст,"СчетДоходовКР",СчетПоКоду("71.4"));
	СчетЗатратКом = глВосстановитьЗначение(Контекст,"СчетЗатратКом");
	СчетЗатратПенс = глВосстановитьЗначение(Контекст,"СчетЗатратПенс");
	СубконтоЗатратКР = глВосстановитьЗначение(Контекст,"СубконтоЗатратКР");
	СубконтоЗатратКом = глВосстановитьЗначение(Контекст,"СубконтоЗатратКом");
	СубконтоЗатратПенс = глВосстановитьЗначение(Контекст,"СубконтоЗатратПенс");
	
	Если СчетЗатратКР.Выбран()=0 Тогда
	    СчетЗатратКР = СчетПоКоду(?(ИспользоватьСчетаРасходов=Класс8,"84","94.5"));
	КонецЕсли;
	Если СчетЗатратКом.Выбран()=0 Тогда
	    СчетЗатратКом = СчетПоКоду(?(ИспользоватьСчетаРасходов=Класс8,"84","94.9"));
	КонецЕсли;
	Если СчетЗатратПенс.Выбран()=0 Тогда
	    СчетЗатратПенс = СчетПоКоду(?(ИспользоватьСчетаРасходов=Класс8,"84","94.9"));
	КонецЕсли;

	ВидДеятельности = глВосстановитьЗначение(,"БазВидДеятельности");

	ИзмРСчет();
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Автор = глПользователь;
	глСохранитьЗначение(Контекст,"СубконтоВалРасх",СубконтоВалРасх); 
	глСохранитьЗначение(Контекст,"ВалРасхПенсионный",ВалРасхПенсионный);
	глСохранитьЗначение(Контекст,"СчетЗатратКР",СчетЗатратКР);
	глСохранитьЗначение(Контекст,"СчетДоходовКР",СчетДоходовКР);
	глСохранитьЗначение(Контекст,"СчетЗатратКом",СчетЗатратКом);
	глСохранитьЗначение(Контекст,"СчетЗатратПенс",СчетЗатратПенс);
	глСохранитьЗначение(Контекст,"СубконтоЗатратКР",СубконтоЗатратКР);
	глСохранитьЗначение(Контекст,"СубконтоЗатратКом",СубконтоЗатратКом);
	глСохранитьЗначение(Контекст,"СубконтоЗатратПенс",СубконтоЗатратПенс);
	глСохранитьЗначение(Контекст,"Банк",Банк);
КонецПроцедуры

// ======================================
Процедура ОбработкаВыбораЗначения(Значение,Рекв,Флаг)
	Если Найти("СчетЗатратКР,СчетЗатратКом,СчетЗатратПенс",Рекв) > 0 Тогда
	    Если глПроверитьСчетЗатрат(Значение,,0)=0 Тогда
	        Флаг = 0;
	    КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");
