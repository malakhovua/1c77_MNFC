// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
          
Перем СписокПодбора,СправочникПодбора;
// СписокПодбора - список, в который отбираются элементы
//							(используется для множественных фильтров)
// СправочникПодбора - строка - идентификатор справочника, из которого осуществляется отбор
//							(используется для множественных фильтров)             
Перем Т;		
Перем Обновить;
Перем Расшифровка; 
Перем ЗаказДатаС, ЗаказДатаПо; 

Перем СтрокаЗаказаВТаблицеМФ, ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 
Перем Язык;
        
// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ВыбратьПоФильтру()
//
// Параметры:
//  Нет
//
// Описание:
//  Открывает обработку отбора элементов по произвольному фильтру
//
Процедура ВыбратьПоФильтру()
	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру

// ===============================
// ПерерисовкаНазванийЗакладок
//
// Параметры:
// 	Нет
//
// Описание:
//  Добавляет "(!)" в заголовок закладки с множественным фильтром, когда этот фильтр задан
//
Функция ПерерисовкаНазванийЗакладок()      

	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");
	
КонецФункции // ПерерисовкаНазванийЗакладок	

// ===============================
// УправлениеДиалогом()
//
// Параметры: 
//	Нет
//
// Возвращаемое значение: 
//	Нет
//
// Описание: 
//	Управление доступностью элементов диалога.
//
Процедура УправлениеДиалогом()
	
	Если Форма.Закладки.ТекущаяСтрока() = 1 Тогда           
		Форма.ИспользоватьСлой("Общий,Основной");
	Иначе     
		Форма.ИспользоватьСлой("Общий,МФ");
	КонецЕсли;
	
КонецПроцедуры //УправлениеДиалогом()   

// ===============================
Процедура ПечатьНормЗатрат(НормыЗатрат)      
	Если глПроверитьДоступКНормам(НормыЗатрат.Продукция) = 0 Тогда
		Возврат;
	КонецЕсли;
	Если Язык="у" Тогда
		ПечПродукция = "Продукція: "+ НормыЗатрат.Продукция +", на "+""+СокрЛП(Формат(НормыЗатрат.КвоПродукции,"Ч14.3")) + " "+СокрЛП(НормыЗатрат.ЕдПродукции) +", " +глДокументВОтчете(НормыЗатрат,"с номером","с датой",Язык);
	Иначе
		ПечПродукция = "Продукция: "+ НормыЗатрат.Продукция +", на "+""+СокрЛП(Формат(НормыЗатрат.КвоПродукции,"Ч14.3")) + " "+СокрЛП(НормыЗатрат.ЕдПродукции) +", " +НормыЗатрат;
	КонецЕсли;
	Расшифровка.Установить("Объект", НормыЗатрат);
	
	// материальные затраты
	Т.ВывестиСекцию("МатериальныеЗатраты");
	глОживить(3);
	СуммаМатЗатр = 0;
	НормыЗатрат.ВыбратьСтроки();
	Пока НормыЗатрат.ПолучитьСтроку() = 1 Цикл
		Вид = НормыЗатрат.ВидЭлемента;
		Если Вид = Перечисление.ВидыЭлементовСоставаПродукции.СтатьяКалькуляции Тогда
		    Продолжить;
		КонецЕсли;
		Затрата = НормыЗатрат.Элемент;
		ПечКво =  глФРМКоличествоВОтчете(НормыЗатрат.Кво,Затрата);
		ПечСумма = глФРМ(НормыЗатрат.Сумма,Гривня,0);
		СуммаМатЗатр = СуммаМатЗатр + НормыЗатрат.Сумма;
		
		Расшифровка.Установить("Объект", Затрата);
		Т.ВывестиСекцию("СтрокаМатериальные");
		глОживить(1);
	КонецЦикла; 
	ПечСуммаМатЗатр = глФРМ(СуммаМатЗатр,Гривня,0);
	Т.ВывестиСекцию("СуммаМатЗатр");
	глОживить(1);
	
	// прочие затраты
	Т.ВывестиСекцию("ПрочиеЗатраты");
	глОживить(2);
	НормыЗатрат.ВыбратьСтроки();
	Пока НормыЗатрат.ПолучитьСтроку() = 1 Цикл
		Вид = НормыЗатрат.ВидЭлемента;
		Если Вид <> Перечисление.ВидыЭлементовСоставаПродукции.СтатьяКалькуляции Тогда
		    Продолжить;
		КонецЕсли;
		Затрата = НормыЗатрат.Элемент;
		БазоваяЗатрата = НормыЗатрат.БазоваяЗатрата;
		
		ПечПроцент = ?(НормыЗатрат.Процент = 0,"",Формат(НормыЗатрат.Процент,"Ч6.2"));
		ПечСумма = глФРМ(НормыЗатрат.Сумма,Гривня,0);
		Расшифровка.Установить("Объект", Затрата);
		Т.ВывестиСекцию("СтрокаПрочие");
		глОживить(1);
	КонецЦикла; 
	
	ПечИтого = глФРМ(НормыЗатрат.Итог("Сумма"),Гривня,0);
	Т.ВывестиСекцию("Итого");
	глОживить(2);
КонецПроцедуры   	

// ===============================
// Название: Сформировать
// Параметры:
//   ЗакрытьЭкран - флаг того, что после формирования отчета надо закрыть экран	
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//   кнопки "Сформировать" и "ОК"
// Наименование,.
// Описание:
//    запускает отчет
Процедура Сформировать(ЗакрытьЭкран=0) 
	ЗаказДатаС = ДатаОтчета;
	ЗаказДатаПо = ДатаОтчета;  
	
	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	
	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
	 
	Т.ИсходнаяТаблица(ПечФорма);  
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	// все настройки помещаем в список   
	Расшифровка.Установить("Объект", "НормативныйСостав");
	Расшифровка.Установить("ДатаОтчета", ДатаОтчета);
	Расшифровка.Установить("ВыбПродукция", ВыбПродукция);
	Расшифровка.Установить("ВыбЗаказ", ВыбЗаказ);                          
	
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	
	// запомним МФ только если он задан
    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
	КонецЕсли;
		
	фЕстьМФПоЗаказам = 0; // флаг = 1, если МФ по заказам включен и не пустой
	
	// если выбран фильтр по заказу (заказам), то будет выполнен запрос по заказам, иначе запрос по продукции
	Если ТаблицаМФ.ПолучитьЗначение(СтрокаЗаказаВТаблицеМФ,"ФлВкл") =2 Тогда               
		МФВыбЗаказы = ТаблицаМФ.ПолучитьЗначение(СтрокаЗаказаВТаблицеМФ,"СписокЭлементов");
		Если (МФВыбЗаказы.РазмерСписка() > 0) Тогда
			фЕстьМФПоЗаказам = 1;
			Для НомСтр = 1 По МФВыбЗаказы.РазмерСписка() Цикл
				ДатаЗаказа = МФВыбЗаказы.ПолучитьЗначение(НомСтр).ДатаДок;
				Если ДатаЗаказа > ЗаказДатаПо Тогда
				    ЗаказДатаПо = ДатаЗаказа;
				ИначеЕсли ДатаЗаказа < ЗаказДатаС Тогда
				    ЗаказДатаС = ДатаЗаказа;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;                            
	КонецЕсли;
	
	Если ВыбЗаказ.Выбран() > 0 Тогда  
		ЗаказДатаС = ВыбЗаказ.ДатаДок;
		ЗаказДатаПо = ЗаказДатаС;
	КонецЕсли;
		
	Заг = "";
	глЧислоСтрок = 0;
	Если (ВыбЗаказ.Выбран() = 0) и (фЕстьМФПоЗаказам = 0) Тогда 
		// Запрос по продукции
		Запрос = СоздатьОбъект("Запрос");
		ТекстЗапроса =
		"//{{ЗАПРОС(ВыборТМЦ)
			|ПЕРИОД С ДатаОтчета По ДатаОтчета;
			|Продукция			= Справочник.ТМЦ.ТекущийЭлемент;
			|НормыЗатрат 		= Справочник.ТМЦ.НормыЗатрат;
			|Группировка Продукция Без Групп;
			|";//}}ЗАПРОС   
		
		Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Продукция",ВыбПродукция,"ВыбПродукция",ТекстЗапроса,Заг,Язык,"КатегорииТоваров") = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если Запрос.Выполнить(ТекстЗапроса) = 0 тогда
			Возврат;
		КонецЕсли;
		
		Т.ВывестиСекцию("Кнопки");
		Т.ВывестиСекцию("Отчет");
		глОживить(5);
		
		Пока Запрос.Группировка("Продукция") = 1 цикл
			НормыЗатрат = Запрос.НормыЗатрат;
			Если ПустоеЗначение(НормыЗатрат) = 1 Тогда
			    Продолжить;
			КонецЕсли;
			
			ПечатьНормЗатрат(НормыЗатрат);
	    КонецЦикла;                                 
	Иначе 
		//Запрос по заказам
		Запрос = СоздатьОбъект("Запрос");
		ТекстЗапроса =   
		"//{{ЗАПРОС(Заказы)
			|ПЕРИОД С ЗаказДатаС по ЗаказДатаПо;   
			|Заказ				= Документ.Заказ.ТекущийДокумент;
			|Контрагент			= Документ.Заказ.Контрагент;
			|Продукция			= Документ.Заказ.Продукция;
			|НормыЗатрат	 	= Документ.Заказ.НормыЗатрат;
			|Группировка Заказ;
			|Группировка СтрокаДокумента;
			|";//}}ЗАПРОС   
			
		Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Заказ",ВыбЗаказ,"ВыбЗаказ",ТекстЗапроса,Заг,Язык) = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если Запрос.Выполнить(ТекстЗапроса) = 0 тогда
			Возврат;
		КонецЕсли;
		
		Т.ВывестиСекцию("Кнопки");
		Т.ВывестиСекцию("Отчет");
		глОживить(5);
		
		Пока Запрос.Группировка("Заказ") = 1 цикл
			Заказ = Запрос.Заказ;
			
			Если Язык = "у" Тогда
				ПечЗаказ = "Замовлення: " + глДокументВОтчете(Заказ,"с номером","с датой",Язык) + ?(ПустоеЗначение(Запрос.Контрагент) = 0,", замовник: " + Запрос.Контрагент+".", ", внутрішнє замовлення.");   
			Иначе
				ПечЗаказ = "Заказ: " + Заказ + ?(ПустоеЗначение(Запрос.Контрагент) = 0,", заказчик: " + Запрос.Контрагент+".", ", внутренний заказ.");
			КонецЕсли;
			
			Т.ВывестиСекцию("Заказ");  
			глОживить(1);
			Пока Запрос.Группировка("СтрокаДокумента") = 1 цикл
			    // если Нормы затрат не заполнены, то берем из справочника ТМЦ на дату отчета
				Если ПустоеЗначение(Запрос.НормыЗатрат) = 1 Тогда
					НормыЗатрат = Запрос.Продукция.НормыЗатрат.Получить(ДатаОтчета);
					Если ПустоеЗначение(НормыЗатрат) = 1 Тогда
						глКомментарий("Не заданы нормы затрат по продукции """ + Запрос.Продукция+""" на дату "+ ДатаОтчета, 0,,"!");			
						Продолжить;
					КонецЕсли;
				Иначе
					НормыЗатрат = Запрос.НормыЗатрат;
				КонецЕсли;
				ПечатьНормЗатрат(НормыЗатрат);
			КонецЦикла;	
		КонецЦикла;	 
		
	КонецЕсли; 
	Запрос = 0;                                              
    
	//Вызов выходного отчета в окно просмотра и редактирования.
	Т.Опции(0,0,0,0,"НормативныйСостав");
	Т.Защита(Константа.ФлагЗащитыТаблиц);
	Т.ТолькоПросмотр(1);
	Т.ОбластьПечати(2);
	Т.Показать("Отчет о нормативном составе продукции","");
		
	Если (Обновить = 2)ИЛИ(ЗакрытьЭкран=1) Тогда
	    СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;     

	тбЗаказов = 0;
КонецПроцедуры //Сформировать

// ===============================
Процедура ВводНового()
	ТекСтрокаВТаблицеМФ="";  
	ПерерисовкаНазванийЗакладок();
	УправлениеДиалогом();       
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
КонецПроцедуры //ВводеНового

//******************************************************************************
Процедура ПриВыбореЗакладки(Номер,Значение)	// Предопределенная процедура
	// закладки
    Если Номер=1 Тогда
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	КонецЕсли;      
	
	УправлениеДиалогом();
	ПерерисовкаНазванийЗакладок();
КонецПроцедуры	// ПриВыбореЗакладки

// ===============================
Процедура ОбработкаПодбора(Значение)  
	
	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			
			Если Значение.Вид() = "ТМЦ" Тогда
				Если (Значение.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) и (Значение.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат) Тогда
					глКомментарий("Можно выбирать ТМЦ с видом ""Материал"", ""Полуфабрикат"" !", 0,,"!");			
				    Возврат;
				КонецЕсли;
			КонецЕсли;
			
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора


//******************************************************************************
Процедура ПриОткрытии()	// Предопределенная процедура
	                 
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		// восстанавливаем настройки из списка
			
		ДатаОтчета = глРасшифровка.Получить("ДатаОтчета");
		ВыбПродукция = глРасшифровка.Получить("ВыбПродукция");
		ВыбЗаказ = глРасшифровка.Получить("ВыбЗаказ");
		
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		Иначе
			//Выключаем все МФ (т.к. могут сохраниться значения после предыдущих запусков)
			ТаблицаМФ.ВыбратьСтроки();
			Пока ТаблицаМФ.ПолучитьСтроку() = 1 Цикл
				ТаблицаМФ.УстановитьЗначение(ТаблицаМФ.НомерСтроки,"ФлВкл",1);
			КонецЦикла;
		КонецЕсли;
		
		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;
	
	ТаблицаМФ.ВидимостьКолонки("Тип",0);
	ТаблицаМФ.ВидимостьКолонки("Вид",0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",0);
	
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	ПерерисовкаНазванийЗакладок();

КонецПроцедуры		// ПриОткрытии     

// ===============================
Функция УстДоступность()    
	//Если включен фильтр по заказам, то продукцию будем получать из документов "Заказ"
	фЗаказВкл = ТаблицаМФ.ПолучитьЗначение(СтрокаЗаказаВТаблицеМФ,"ФлВкл");
	
	Если (ВыбЗаказ.Выбран() = 1) или (фЗаказВкл = 2) Тогда
		ВыбПродукция = 0;
	    Форма.ВыбПродукция.Доступность(0);
		Форма.кОчиститьПродукцию.Доступность(0);                 
		
		//Выключаем флажки для "продукции" и "категории продукции"
		ТаблицаМФ.УстановитьЗначение(2,"ФлВкл",1);
		ТаблицаМФ.УстановитьЗначение(3,"ФлВкл",1);
	Иначе                                   
		Форма.ВыбПродукция.Доступность(1);         
		Форма.кОчиститьПродукцию.Доступность(1);
	КонецЕсли;
	
КонецФункции //УстДоступность

// ===============================
// ТЕЛО МОДУЛЯ
// ===============================
ДатаОтчета=ПолучитьДатуТА();

Если Число(ДатаОтчета)=0 Тогда
	ДатаОтчета='01.01.1998';
КонецЕсли;         
   
// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");
ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
                                            
//                  			тип			вид				переменная  	название
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",  "Заказ",	    "Заказ",	"По заказам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ТМЦ",			"Продукция","По продукции");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий","Продукция","По категориям продукции");
//Если значение СтрокаЗаказаВТаблицеМФ меняется, необходимо это учесть в процедуре УстДоступность()
СтрокаЗаказаВТаблицеМФ = 1;

ТекСтрокаВТаблицеМФ="";
