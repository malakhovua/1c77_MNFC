// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
                        
// переменные предназначены для механизма универсальных группировок отчета
Перем СписокГруппировок;
Перем КоличествоГруппировок;
Перем НомерГруппировкиНоменклатура;

// переменные предназначены для запроса по периодам
Перем Язык, УкрГруппировки;

Перем Запрос,ЗапросСПериодами,ТаблицаПериодов, Периодичность;	//--- УМК Сандомирский В.Ю. (08.04.15)
Перем ВалютаПечати;												//--- УМК Сандомирский В.Ю. (08.04.15)
Перем ПечЗаголовокСтолбца;										//--- УМК Сандомирский В.Ю. (08.04.15)

Перем ДокНачала, ДокКонца;
Перем Д1, Д2;

Перем ТЗ_ПримечанияСтрок;	//--- УМК Сандомирский В.Ю. (02.06.15)
Перем ТекЗаказ, ТекНоменклатура;
Перем ПечПримечаниеСтроки;
Перем ТЗ_Результирующая, ТЗ_РезультирующаяКн;		//--- УМК Сандомирский В.Ю. (08.04.15)

Перем Загол;

// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
Процедура ВыбратьПоФильтру()	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);	
КонецПроцедуры	// ВыбратьПоФильтру

// ===============================
Функция ПерерисовкаНазванийЗакладок()      
	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");
КонецФункции // ПерерисовкаНазванийЗакладок	
                          
// ===============================
Процедура ПечатьПериода(НазваниеГруппировки,НазваниеСекции,Запрос,ВалютаПечати, ПоПериоду = 0, Значен)	
	Номенклатура = Запрос.Номенклатура;
	
	ПечНачКво 	= глФРМКоличествоВОтчете(Запрос.НачРезерв,	Номенклатура); 
	ПечПрихКво 	= глФРМКоличествоВОтчете(Запрос.ПрихРезерв,	Номенклатура);
	ПечРасхКво 	= глФРМКоличествоВОтчете(Запрос.РасхРезерв,	Номенклатура);
	ПечРасхЗКво = глФРМКоличествоВОтчете(Запрос.РасхРезервС,Номенклатура);
	ПечКонКво 	= глФРМКоличествоВОтчете(Запрос.КонРезерв,	Номенклатура);
	
	ПечНачДопКво 	= глФРМКоличествоВОтчете(Запрос.НачДопКво,	Номенклатура); 
	ПечПрихДопКво 	= глФРМКоличествоВОтчете(Запрос.ПрихДопКво,	Номенклатура);
	ПечРасхДопКво 	= глФРМКоличествоВОтчете(Запрос.РасхДопКво,	Номенклатура);
	ПечРасхЗДопКво  = глФРМКоличествоВОтчете(Запрос.РасхДопКвоС,Номенклатура);
	ПечКонДопКво 	= глФРМКоличествоВОтчете(Запрос.КонДопКво,	Номенклатура);	

	Таб.ПрисоединитьСекцию(НазваниеСекции +"|Приход");
КонецПроцедуры //()

// ===============================
//Процедура ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка = "",ЭтоГруппа=0)	
//	Наим = ПечТекстСтроки;
//	Значение = ТекРасшифровка;
//	Секция = Таб.ПолучитьСекцию(НазваниеСекции);
//		
//	Область = Секция.Область("R1C1:R1C8");
//	Область.Подчеркнутый(ЭтоГруппа);
//
//	//--- Проверка выводить или нет строку
//	
//	Номенклатура = Запрос.Номенклатура;
//	
//	ПечНачКво 	= глФРМКоличествоВОтчете(Запрос.НачРезерв,	Номенклатура); 
//	ПечПрихКво 	= глФРМКоличествоВОтчете(Запрос.ПрихРезерв,	Номенклатура);
//	ПечРасхКво 	= глФРМКоличествоВОтчете(Запрос.РасхРезерв,	Номенклатура);
//	ПечРасхЗКво = глФРМКоличествоВОтчете(Запрос.РасхРезервС,Номенклатура);
//	ПечКонКво 	= глФРМКоличествоВОтчете(Запрос.КонРезерв,	Номенклатура);
//	
//	ПечНачДопКво 	= глФРМКоличествоВОтчете(Запрос.НачДопКво,	Номенклатура); 
//	ПечПрихДопКво 	= глФРМКоличествоВОтчете(Запрос.ПрихДопКво,	Номенклатура);
//	ПечРасхДопКво 	= глФРМКоличествоВОтчете(Запрос.РасхДопКво,	Номенклатура);
//	ПечРасхЗДопКво  = глФРМКоличествоВОтчете(Запрос.РасхДопКвоС,Номенклатура);
//	ПечКонДопКво 	= глФРМКоличествоВОтчете(Запрос.КонДопКво,	Номенклатура);
//	
//	фВыводитьСтроку = 0;
//	
//	Если  (Запрос.ПрихРезерв <> 0) Тогда
//		фВыводитьСтроку = 1;
//	КонецЕсли;
//	
//	
//	Если фВыводитьСтроку = 1 Тогда
//		Таб.ВывестиСекцию(НазваниеСекции +"|Наименование");
//		
//		Попытка
//			НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(Ном);
//		Исключение
//			НазваниеГруппировки = "Итоги";
//		КонецПопытки;
//		
//		Значен 				= ТекРасшифровка;
//		ПечатьПериода(НазваниеГруппировки, НазваниеСекции, Запрос, ВалютаПечати, , Значен);
//		Если (Периодичность <> 0) Тогда
//			// выведем теперь все периоды, с разворотом вправо
//			ТаблицаПериодов.ВыбратьСтроки();
//			Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
//				глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,Ном,ТаблицаПериодов.РеалНачалоПериода);
//				ПечатьПериода(НазваниеГруппировки, НазваниеСекции, ЗапросСПериодами,ВалютаПечати, 1, Значен);
//			КонецЦикла;
//		КонецЕсли;	
//	КонецЕсли;
//КонецПроцедуры

//// ===============================
//Процедура ВывестиГруппировки(Знач Ном=1)
//
//	Если Ном > КоличествоГруппировок Тогда                           
//		Возврат;
//	КонецЕсли;
//	НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(Ном);
//	Пока Запрос.Группировка(Ном) = 1 Цикл
//		
//		НазваниеСекции="Группировка"+Ном;
//		Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);	
//		
//		Если НазваниеГруппировки = "ДокументРезерва" Тогда
//			ТекЗаказ = Значение;
//		КонецЕсли;
//		
//		Если НазваниеГруппировки = "Номенклатура" Тогда
//			ТекНоменклатура = Значение;
//		КонецЕсли;
//		
//		Если Найти("Номенклатура,Покупатель,ВидУпаковки,ГруппировкаРазрешенныхВидовУпаковки",НазваниеГруппировки) > 0 Тогда  //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки (29.05.15)
//			ПечТекстСтроки = глСмещениеГруппы(Значение,фБезГрупп) + Значение;
//		Иначе // Договор, ДокументРезерва, Документ
//			Если ПустоеЗначение(Значение)=0 Тогда
//				ПечТекстСтроки = ""+глДокументВОтчете(Значение,"с номером","с датой",Язык);
//			Иначе
//				ПечТекстСтроки = "";
//			КонецЕсли;
//		КонецЕсли;	
//		ПечТекстСтроки = ?(ПустоеЗначение(ПечТекстСтроки)=1,глПредставлениеПустогоЗначения(НазваниеГруппировки,Язык),ПечТекстСтроки);
//		ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,Значение,Запрос.ЭтоГруппа(НазваниеГруппировки));
//		глОживить(1);
//		ВывестиГруппировки(Ном+1);
//	КонецЦикла;
//
//КонецПроцедуры // ВывестиГруппировки()


// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================	//--- УМК Сандомирский В.Ю. (08.04.15)
Процедура ДоступностьЭлементов(ВсеЭлементы=0)           
	
	ЭлементДиалога = Форма.АктивныйЭлемент();

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбФирма") Или (ЭлементДиалога="кХВыбФирма") Тогда
		Форма.кХВыбФирма.Доступность(ВыбФирма.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбНоменклатура") Или (ЭлементДиалога="кХВыбНоменклатура") Тогда
		Форма.кХВыбНоменклатура.Доступность(ВыбНоменклатура.Выбран()); 
	КонецЕсли;
	
	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбВидУпаковки") Или (ЭлементДиалога="кХВыбВидУпаковки") Тогда //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		Форма.кХВыбВидУпаковки.Доступность(ВыбВидУпаковки.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбПокупатель") Или (ЭлементДиалога="кХВыбПокупатель") Тогда
		Форма.кХВыбПокупатель.Доступность(ВыбПокупатель.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбДоговор") Или (ЭлементДиалога="кХВыбДоговор") Тогда
		Форма.кХВыбДоговор.Доступность(ВыбДоговор.Выбран()); 
	КонецЕсли;
	
	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбЗаказ") Или (ЭлементДиалога="кХВыбЗаказ") Тогда   // --- УМК Сандомирский В.Ю. (29.05.15)
		Форма.кХВыбЗаказ.Доступность(ВыбЗаказ.Выбран()); 
	КонецЕсли;
КонецПроцедуры  	// ДоступностьЭлементов

// ===============================	//--- УМК Сандомирский В.Ю. (08.04.15)
Процедура ВывестиШапкуПериода(НазваниеСекции,Период="",ПоПериоду = 0)
	Таб.ПрисоединитьСекцию(НазваниеСекции +"|Приход");
КонецПроцедуры 

//====================================================================== //--- УМК Сандомирский В.Ю. (01.06.15)
Процедура ВывестиИтоги()	
	//ПечатьСтроки(0,"Итого","Итого",?(Язык="у", "Всього:", "Всего:"));	
КонецПроцедуры // ВывестиИтоги

// =============================== //--- УМК Сандомирский В.Ю. (08.04.15)
Процедура ВывестиШапку()
	Если Периодичность<>0 Тогда 
		Таб.ВывестиСекцию("ШапкаПериод|Наименование");
		ВывестиШапкуПериода("ШапкаПериод",?(Язык="у", "Всього за період", "Всего за период"));
	    ТаблицаПериодов.ВыбратьСтроки(); // выводим шапку для каждого периода
		Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл	
			ВывестиШапкуПериода("ШапкаПериод",ПериодСтр(ТаблицаПериодов.НачалоПериода,ТаблицаПериодов.КонецПериода),1);
		КонецЦикла;	
		глОживить(1);	
	КонецЕсли;

	Таб.ВывестиСекцию("Шапка|Наименование");
	ВывестиШапкуПериода("Шапка");
	Если Периодичность<>0 Тогда 
	    ТаблицаПериодов.ВыбратьСтроки(); // выводим шапку для каждого периода
		Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл
			ВывестиШапкуПериода("Шапка",,1);
		КонецЦикла;
	КонецЕсли;
	глОживить(1);	
КонецПроцедуры 

// =============================== //--- УМК Сандомирский В.Ю. (08.04.15)
Функция ПериодСтрока()	
	//Зн = СписокПериодов.ПолучитьЗначение(СписокПериодов.ТекущаяСтрока());
    //Если Зн = "Общий" Тогда
    //	Возврат 0;
	//Иначе
	//	Возврат Зн;
	//КонецЕсли;
КонецФункции //

//====================================================================== //--- УМК Сандомирский В.Ю. (10.06.15)
Процедура ДополнитьРезультирующуюТЗ(Дата1,Дата2,НомерПериода)	
	Запрос				= СоздатьОбъект("Запрос");	
	ТекстЗапроса = 
		"
		|Период с Дата1 по Дата2;
		|Фирма									= Регистр.Резервы.Фирма;
		|ВидУпаковки 							= Регистр.Резервы.ВидУпаковки;
		|ГруппировкаРазрешенныхВидовУпаковки 	= Регистр.Резервы.ТМЦ.ГруппировкаРазрешенныхВидовУпаковки;
		|Номенклатура 							= Регистр.Резервы.ТМЦ;
		|Покупатель								= Регистр.Резервы.ДокументРезерва.Контрагент; 
		|ДокументРезерва						= Регистр.Резервы.ДокументРезерва;
		|Резерв									= Регистр.Резервы.Резерв;
		|Функция ПрихРезерв	= Приход(Резерв) Когда (УсловиеПоСтику(ДокументРезерва, Номенклатура, ВидУпаковки) = 1);
		|Группировка ВидУпаковки без Групп;
		|Группировка ГруппировкаРазрешенныхВидовУпаковки без Групп;
		|Группировка Номенклатура без Групп;
		|Группировка ДокументРезерва;
		|";			
	Загол="";
                            
	//Если фПросроченныйРезерв = 1 Тогда
	//	ТекстЗапроса = ТекстЗапроса + "Условие (глБанковскаяДата(ДатаРезерва,СрокРезерва) < Дата2);";
	//	Загол = Загол + ?(Язык="у","Тільки резерв, прострочений на ","Только резерв, просроченный на ")+Дата2+". ";
	//КонецЕсли;
	
	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Номенклатура", ВыбНоменклатура, "ВыбНоменклатура", ТекстЗапроса, Загол, Язык, "КатегорииТоваров")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по номенклатурным позициям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Покупатель", ВыбПокупатель, "ВыбПокупатель", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по покупателям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Договор", ВыбДоговор, "ВыбДоговор", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по договорам. Отчет не сформирован.");
		Возврат;	
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ДокументРезерва", ВыбЗаказ, "ВыбЗаказ", ТекстЗапроса, Загол, Язык)=0 Тогда // --- УМК Сандомирский В.Ю. (29.05.15)
		Предупреждение("Возникли ошибки при наложении фильтра по заказам. Отчет не сформирован.");
		Возврат;		
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ВидУпаковки", ВыбВидУпаковки, "ВыбВидУпаковки", ТекстЗапроса, Загол, Язык, "")=0 Тогда //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		Предупреждение("Возникли ошибки при наложении фильтра по видам упаковки. Отчет не сформирован.");
		Возврат;	
	КонецЕсли;
	
	////// --- Технологически вывести текст запроса //--- УМК Сандомирский В.Ю. (*)
	//Текст=СоздатьОбъект("Текст");
	//Текст.ДобавитьСтроку(ТекстЗапроса);
	//Текст.Показать("Текст запроса РЕЗЕРВЫ"); 
	////// ... Технологически вывести текст запроса
		
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда
		Предупреждение("Запрос по резервам не выполнился!!!");
		Возврат;
	Иначе
		ТЗ_1 = СоздатьОбъект("ТаблицаЗначений");
		ТЗ_1.НоваяКолонка("Индекс");
		ТЗ_1.НоваяКолонка("Группировка1");
		ТЗ_1.НоваяКолонка("Группировка2");
		ТЗ_1.НоваяКолонка("Группировка3");
		ТЗ_1.НоваяКолонка("ВидУпаковки","Справочник.ВидыУпаковки");
		ТЗ_1.НоваяКолонка("ГруппировкаРазрешенныхВидовУпаковки");
		ТЗ_1.НоваяКолонка("Номенклатура","Справочник.ТМЦ");
		ТЗ_1.НоваяКолонка("ПрихРезерв","Число",15,3);		
		ТЗ_1.НоваяКолонка("ТаблицаРезервов","ТаблицаЗначений");
		//Запрос.Выгрузить(ТЗ_1);
		//ТЗ_1.ВыбратьСтроку(); //--- Технологически
		
		Пока Запрос.Группировка(1) = 1 Цикл				
			ТЗ_1.НоваяСтрока();
			ТЗ_1.Индекс 		= СокрЛП(Строка(Запрос.ВидУпаковки));
			ТЗ_1.Группировка1 	= Запрос.ВидУпаковки;
			ТЗ_1.ВидУпаковки 	= Запрос.ВидУпаковки;
			ТЗ_1.ПрихРезерв 	= Запрос.ПрихРезерв;			
			Пока Запрос.Группировка(2) = 1 Цикл				
				ТЗ_1.НоваяСтрока();
				ТЗ_1.Индекс 		= СокрЛП(Строка(Запрос.ВидУпаковки))+СокрЛП(Строка(Запрос.ГруппировкаРазрешенныхВидовУпаковки));
				ТЗ_1.Группировка1 	= Запрос.ВидУпаковки;
				ТЗ_1.Группировка2 	= ?(ПустоеЗначение(Запрос.ГруппировкаРазрешенныхВидовУпаковки) = 1, "Не задана группировка", Запрос.ГруппировкаРазрешенныхВидовУпаковки);
				ТЗ_1.ВидУпаковки 	= Запрос.ВидУпаковки;
				ТЗ_1.ГруппировкаРазрешенныхВидовУпаковки = ?(ПустоеЗначение(Запрос.ГруппировкаРазрешенныхВидовУпаковки) = 1, "Не задана группировка", Запрос.ГруппировкаРазрешенныхВидовУпаковки);
				ТЗ_1.ПрихРезерв 	= Запрос.ПрихРезерв;
					
				Пока Запрос.Группировка(3) = 1 Цикл					
					ТЗ_1.НоваяСтрока();
					ТЗ_1.Индекс 		= СокрЛП(Строка(Запрос.ВидУпаковки))+СокрЛП(Строка(Запрос.ГруппировкаРазрешенныхВидовУпаковки))+СокрЛП(Строка(Запрос.Номенклатура));
					ТЗ_1.Группировка1 	= Запрос.ВидУпаковки;
					ТЗ_1.Группировка2 	= ?(ПустоеЗначение(Запрос.ГруппировкаРазрешенныхВидовУпаковки) = 1, "Не задана группировка", Запрос.ГруппировкаРазрешенныхВидовУпаковки);
					ТЗ_1.Группировка3 	= Запрос.Номенклатура;
					ТЗ_1.ВидУпаковки 	= Запрос.ВидУпаковки;
					ТЗ_1.ГруппировкаРазрешенныхВидовУпаковки = ?(ПустоеЗначение(Запрос.ГруппировкаРазрешенныхВидовУпаковки) = 1, "Не задана группировка", Запрос.ГруппировкаРазрешенныхВидовУпаковки);
					ТЗ_1.Номенклатура 	= Запрос.Номенклатура;
					ТЗ_1.ПрихРезерв 	= Запрос.ПрихРезерв;
					ТЗ_1.ТаблицаРезервов = СоздатьОбъект("ТаблицаЗначений");
					ТЗ_1.ТаблицаРезервов.НоваяКолонка("Заказ", "Документ.УМК_ЗаказКлиента");
					ТЗ_1.ТаблицаРезервов.НоваяКолонка("Кво", "Число", 15, 3);
					Пока Запрос.Группировка(4) = 1 Цикл
						ТЗ_1.ТаблицаРезервов.НоваяСтрока();
						ТЗ_1.ТаблицаРезервов.Заказ = Запрос.ДокументРезерва;
						ТЗ_1.ТаблицаРезервов.Кво = Запрос.ПрихРезерв * Коэффициент;
					КонецЦикла;
				КонецЦикла;				
			КонецЦикла;		
		КонецЦикла;
	КонецЕсли;

	ТЗ_Результирующая.НоваяКолонка("Пер_" + Строка(НомерПериода),"Число",15,3);		
	ТЗ_1.ВыбратьСтроки();
	Пока ТЗ_1.ПолучитьСтроку() = 1 Цикл
		Стр = 0;
		Ключ = СокрЛП(Строка(ТЗ_1.ВидУпаковки))+СокрЛП(Строка(ТЗ_1.ГруппировкаРазрешенныхВидовУпаковки))+СокрЛП(Строка(ТЗ_1.Номенклатура));
		Если ТЗ_Результирующая.НайтиЗначение(Ключ, Стр, "Индекс") = 0 Тогда
			ТЗ_Результирующая.НоваяСтрока();
			ТЗ_Результирующая.Индекс 								= СокрЛП(Строка(ТЗ_1.ВидУпаковки))+СокрЛП(Строка(ТЗ_1.ГруппировкаРазрешенныхВидовУпаковки))+СокрЛП(Строка(ТЗ_1.Номенклатура));
			ТЗ_Результирующая.ТаблицаРезервов = СоздатьОбъект("ТаблицаЗначений");
			Если ПустоеЗначение(ТЗ_1.Группировка3) = 0 Тогда
				ТЗ_Результирующая.ТаблицаРезервов.Загрузить(ТЗ_1.ТаблицаРезервов);
			КонецЕсли;
			ТЗ_Результирующая.Группировка1							= ТЗ_1.Группировка1; 
			ТЗ_Результирующая.Группировка2							= ТЗ_1.Группировка2; 	
			ТЗ_Результирующая.Группировка3							= ТЗ_1.Группировка3; 
			ТЗ_Результирующая.ВидУпаковки 							= ТЗ_1.ВидУпаковки;
			ТЗ_Результирующая.ГруппировкаРазрешенныхВидовУпаковки 	= ТЗ_1.ГруппировкаРазрешенныхВидовУпаковки;
			ТЗ_Результирующая.Номенклатура 							= ТЗ_1.Номенклатура;			
			Стр = ТЗ_Результирующая.НомерСтроки;
		Иначе
			Если ПустоеЗначение(ТЗ_1.Группировка3) = 0 Тогда
				ТЗ_1.ТаблицаРезервов.ВыбратьСтроки();
				Пока ТЗ_1.ТаблицаРезервов.ПолучитьСтроку() = 1 Цикл
					ТЗ_Результирующая.ТаблицаРезервов.НоваяСтрока();
					ТЗ_Результирующая.ТаблицаРезервов.Заказ = ТЗ_1.ТаблицаРезервов.Заказ;
					ТЗ_Результирующая.ТаблицаРезервов.Кво = ТЗ_1.ТаблицаРезервов.Кво;					
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;		
		
		//ТекСтрока = ТЗ_Результирующая.КоличествоСтрок();
		ТЗ_Результирующая.УстановитьЗначение(Стр,"Пер_" + Строка(НомерПериода),ТЗ_1.ПрихРезерв);
	КонецЦикла;
КонецПроцедуры  

//======================================================================
Функция СравнитьУпаковку(Вид1, Вид2)
	Если (Вид1 = Вид2) ИЛИ ((Вид1 = НетУп) И (ПустоеЗначение(Вид2) = 1)) ИЛИ ((Вид2 = НетУп) И (ПустоеЗначение(Вид1) = 1)) 
		ИЛИ ((ПустоеЗначение(Вид1) = НетУп) И (ПустоеЗначение(Вид1) = 1)) Тогда
		Возврат 1;
	КонецЕсли;
	
	Возврат 0;
КонецФункции // СравнитьУпаковку

// фильтр по стикеровке
// если фильтр не нужен, возвращаем 1
// если нужен, то возвращаем единцу, если стоит стикеровать и фильтр = 2 (только стикеровать) либо если стоит не стикеровать и фильтр = 3 (только не стикеровать)
//======================================================================
Функция УсловиеПоСтику(ДокументРезерва, Номенклатура, ВидУпаковки)
	Если ргСтик = 1 Тогда
		Возврат 1;
	Иначе
		Если ПустоеЗначение(ДокументРезерва) = 1 Тогда
			Возврат 0;
		ИначеЕсли ДокументРезерва.Вид() <> "УМК_ЗаказКлиента" Тогда
			Возврат 0;
		КонецЕсли;
		
		Стикеровка = -1;
		ДокРез = СоздатьОбъект("Документ");
		ДокРез.НайтиДокумент(ДокументРезерва);
		ДокРез.ВыбратьСтроки();
		Пока ДокРез.ПолучитьСтроку() = 1 Цикл
			Если (ДокРез.ТМЦ = Номенклатура) И (СравнитьУпаковку(ДокРез.ВидУпаковки, ВидУпаковки) = 1) Тогда
				Стикеровка = ?(ДокРез.Стикеровать = Да, 1, 0);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Стикеровка <> - 1 Тогда
			Возврат ?(((ргСтик = 2) И (Стикеровка = 1)) ИЛИ ((ргСтик = 3) И (Стикеровка = 0)), 1, 0);
		Иначе
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
КонецФункции // УсловиеПоСтику(ДокументРезерва, Номенклатура, ВидУпаковки)

//====================================================================== //--- УМК Сандомирский В.Ю. (10.06.15)
Процедура ДополнитьРезультирующуюТЗКонтрагентами(Дата1,Дата2,НомерПериода)	
	Запрос				= СоздатьОбъект("Запрос");	
	ТекстЗапроса = 
		"
		|Период с Дата1 по Дата2;
		|Фирма									= Регистр.Резервы.Фирма;
		|ВидУпаковки 							= Регистр.Резервы.ВидУпаковки;
		|ГруппировкаРазрешенныхВидовУпаковки 	= Регистр.Резервы.ТМЦ.ГруппировкаРазрешенныхВидовУпаковки;
		|Номенклатура 							= Регистр.Резервы.ТМЦ;
		|Покупатель								= Регистр.Резервы.ДокументРезерва.Контрагент; 
		|ДокументРезерва						= Регистр.Резервы.ДокументРезерва;
		|Резерв									= Регистр.Резервы.Резерв;
		|Функция ПрихРезерв	= Приход(Резерв) Когда (УсловиеПоСтику(ДокументРезерва, Номенклатура, ВидУпаковки) = 1);
		|Группировка Покупатель упорядочить по Покупатель.Родитель;
		|Группировка ДокументРезерва;
		|";
		
	Загол="";
                            
	//Если фПросроченныйРезерв = 1 Тогда
	//	ТекстЗапроса = ТекстЗапроса + "Условие (глБанковскаяДата(ДатаРезерва,СрокРезерва) < Дата2);";
	//	Загол = Загол + ?(Язык="у","Тільки резерв, прострочений на ","Только резерв, просроченный на ")+Дата2+". ";
	//КонецЕсли;
	
	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Номенклатура", ВыбНоменклатура, "ВыбНоменклатура", ТекстЗапроса, Загол, Язык, "КатегорииТоваров")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по номенклатурным позициям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Покупатель", ВыбПокупатель, "ВыбПокупатель", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по покупателям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Договор", ВыбДоговор, "ВыбДоговор", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по договорам. Отчет не сформирован.");
		Возврат;	
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ДокументРезерва", ВыбЗаказ, "ВыбЗаказ", ТекстЗапроса, Загол, Язык)=0 Тогда // --- УМК Сандомирский В.Ю. (29.05.15)
		Предупреждение("Возникли ошибки при наложении фильтра по заказам. Отчет не сформирован.");
		Возврат;		
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ВидУпаковки", ВыбВидУпаковки, "ВыбВидУпаковки", ТекстЗапроса, Загол, Язык, "")=0 Тогда //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		Предупреждение("Возникли ошибки при наложении фильтра по видам упаковки. Отчет не сформирован.");
		Возврат;	
	КонецЕсли;
	
	////// --- Технологически вывести текст запроса //--- УМК Сандомирский В.Ю. (*)
	//Текст=СоздатьОбъект("Текст");
	//Текст.ДобавитьСтроку(ТекстЗапроса);
	//Текст.Показать("Текст запроса РЕЗЕРВЫ"); 
	////// ... Технологически вывести текст запроса
		
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда
		Предупреждение("Запрос по резервам не выполнился!!!");
		Возврат;
	Иначе
		ТЗ_1 = СоздатьОбъект("ТаблицаЗначений");
		ТЗ_1.НоваяКолонка("Индекс");
		ТЗ_1.НоваяКолонка("Группировка1");
		ТЗ_1.НоваяКолонка("Покупатель","Справочник.Контрагенты");
		ТЗ_1.НоваяКолонка("ПрихРезерв","Число",15,3);		
		Пока Запрос.Группировка(1) = 1 Цикл	
			ТЗ_1.НоваяСтрока();
			ТЗ_1.Индекс 		= СокрЛП(Строка(Запрос.Покупатель));
			ТЗ_1.Группировка1 	= Запрос.Покупатель;
			ТЗ_1.Покупатель 	= Запрос.Покупатель;
			ТЗ_1.ПрихРезерв 	= Запрос.ПрихРезерв;
		КонецЦикла;
	КонецЕсли;

	ТЗ_РезультирующаяКн.НоваяКолонка("Пер_" + Строка(НомерПериода),"Число",15,3);		
	ТЗ_1.ВыбратьСтроки();
	Пока ТЗ_1.ПолучитьСтроку() = 1 Цикл
		ТЗ_РезультирующаяКн.НоваяСтрока();
		ТЗ_РезультирующаяКн.Индекс 								= ТЗ_1.Индекс;
		ТЗ_РезультирующаяКн.Группировка1						= ТЗ_1.Группировка1; 
		ТЗ_РезультирующаяКн.Покупатель 							= ТЗ_1.Покупатель;
		ТекСтрока = ТЗ_РезультирующаяКн.КоличествоСтрок();
		ТЗ_РезультирующаяКн.УстановитьЗначение(ТекСтрока,"Пер_" + Строка(НомерПериода),ТЗ_1.ПрихРезерв);					
	КонецЦикла;
КонецПроцедуры  

// ===============================
Процедура Сформировать(ЗакрытьЭкран=0)    
	ВалютаПечати=Гривня;
	
	//глПроверкаДаты(Дата1,Дата2);
	
	// Здесь формируется отчет, который использует регистры, критичные к
	// последовательности проведения документов
	// поэтому сравним установленные даты периода формируемого отчета с ГП
	//глПроверкаАктуальностиОтчета(Дата1,Дата2,ВыбФирма,0);
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") Или (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;

	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	Таб.ИсходнаяТаблица("Таблица");
    
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "УМК_АнализРезервовПоПериодам");
    
	Расшифровка.Установить("ВыбФирма", 			ВыбФирма);
	Расшифровка.Установить("ВыбНоменклатура", 	ВыбНоменклатура); 
	Расшифровка.Установить("ВыбВидУпаковки",	ВыбВидУпаковки);   
	Расшифровка.Установить("ВыбПокупатель", 	ВыбПокупатель);
	Расшифровка.Установить("ВыбДоговор", 		ВыбДоговор);	
	Расшифровка.Установить("ВыбЗаказ", 			ВыбЗаказ); 	
	Расшифровка.Установить("ргСтик",			ргСтик);
	
	ТЗ_ПериодыСтрокой = ЗначениеВСтрокуВнутр(ТЗ_Периоды);
	Расшифровка.Установить("ТЗ_ПериодыСтрокой", ТЗ_ПериодыСтрокой);
	
	// запомним МФ только если он задан
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
	КонецЕсли;
	
	Расшифровка.Установить("ТЗ_Периоды", 			ТЗ_Периоды);	
	Расшифровка.Установить("МинКво", 				МинКво);
	Расшифровка.Установить("Коэффициент", 			Коэффициент);
	Расшифровка.Установить("ПорядокОкругления", 	ПорядокОкругления);	

	ТЗ_Результирующая = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Результирующая.НоваяКолонка("Индекс");
	ТЗ_Результирующая.НоваяКолонка("Группировка1");
	ТЗ_Результирующая.НоваяКолонка("Группировка2");
	ТЗ_Результирующая.НоваяКолонка("Группировка3");
	ТЗ_Результирующая.НоваяКолонка("ВидУпаковки","Справочник.ВидыУпаковки");
	ТЗ_Результирующая.НоваяКолонка("ГруппировкаРазрешенныхВидовУпаковки");
	ТЗ_Результирующая.НоваяКолонка("Номенклатура","Справочник.ТМЦ");
	ТЗ_Результирующая.НоваяКолонка("ТаблицаРезервов","ТаблицаЗначений");
	
	НомерПериода = 0;
	СтрокаСвертки = "";
	ТЗ_Периоды.ВыбратьСтроки();
	Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл
		
		Дата1 = ТЗ_Периоды.Дата1;
		Если ПустоеЗначение(ТЗ_Периоды.ДокНачала) <> 1 Тогда
			Дата1 = ТЗ_Периоды.ДокНачала;
		КонецЕсли;
		
		Дата2 = ТЗ_Периоды.Дата2;
		Если ПустоеЗначение(ТЗ_Периоды.ДокКонца) <> 1 Тогда
			Дата2 = ТЗ_Периоды.ДокКонца;
		КонецЕсли;
		
		НомерПериода = НомерПериода + 1;
		
		ДополнитьРезультирующуюТЗ(Дата1,Дата2,НомерПериода);		
		//--- Получаю названия колонок с периодами для свертки таблицы значений
		СтрокаСвертки = СтрокаСвертки + ",Пер_" + Строка(НомерПериода);				
	КонецЦикла;
	
	СтрокаСвертки = Сред(СтрокаСвертки,2);
	
	//ТЗ_Результирующая.Свернуть("Индекс,Группировка1,Группировка2,Группировка3,ВидУпаковки,ГруппировкаРазрешенныхВидовУпаковки,Номенклатура",СтрокаСвертки);	
	//ТЗ_Результирующая.Сортировать("ВидУпаковки+,ГруппировкаРазрешенныхВидовУпаковки+,Номенклатура+");	
	//ТЗ_Результирующая.ВыбратьСтроку();	
	ТекстГруппировок 	= "";
	ПечЗаголовокСтолбца = "";
	
	// обнуляем счетчик числа строк, выведенных в таблицу отчета
	глЧислоСтрок=0;           

	Таб.ВывестиСекцию("Кнопки|Наименование");	
	Таб.ВывестиСекцию("Заголовок|Наименование");
	
	НомерПериода = 0;
	ТЗ_Периоды.ВыбратьСтроки();
	Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл		
		НомерПериода = НомерПериода + 1;
		
		Дата1 = ТЗ_Периоды.Дата1;
		Если ПустоеЗначение(ТЗ_Периоды.ДокНачала) <> 1 Тогда
			Дата1 = ТЗ_Периоды.ДокНачала;
		КонецЕсли;
		
		Дата2 = ТЗ_Периоды.Дата2;
		Если ПустоеЗначение(ТЗ_Периоды.ДокКонца) <> 1 Тогда
			Дата2 = ТЗ_Периоды.ДокКонца;
		КонецЕсли;
		
		ПечНомПериод = 	НомерПериода;
		ПечПериод	 = " с " + СокрЛП(Строка(Дата1)) + " по " + СокрЛП(Строка(Дата2)); 
		Таб.ВывестиСекцию("Периоды|Наименование");
		
	КонецЦикла;
	
	Таб.ВывестиСекцию("Шапка|Наименование");
	
	НомерПериода = 0;
	ТЗ_Периоды.ВыбратьСтроки();
	Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл
		
		НомерПериода = НомерПериода + 1;
		
		Таб.ПрисоединитьСекцию("Шапка|Период");
	КонецЦикла;
	
	Если перКолонкаМинимально = 1 Тогда
		НаимРезультКолонки = "min";
	Иначе		
		НаимРезультКолонки = "Среднее";		
	КонецЕсли;
	
	Таб.ПрисоединитьСекцию("Шапка|Результ");
	Таб.ПрисоединитьСекцию("Шапка|Коэф");

	// ВЫВОД ГРУППИРОВОК ЗАПРОСА по ТМЦ и УПАКОВКАМ
	
	ТекГруппировка1  = "";
	ТекГруппировка2  = "";
	ТекГруппировка3  = "";
	
	ТЗ_Результирующая.ВыбратьСтроки();
	Пока ТЗ_Результирующая.ПолучитьСтроку() = 1 Цикл
		Если (ПустоеЗначение(ТЗ_Результирующая.Группировка1) <> 1) 
			И (ПустоеЗначение(ТЗ_Результирующая.Группировка2) = 1)
			И (ПустоеЗначение(ТЗ_Результирующая.Группировка3) = 1)
																		Тогда
			Наим = ТЗ_Результирующая.ВидУпаковки;
			Таб.ВывестиСекцию("Группировка1|Наименование");
			ТекГруппировка1 = ТЗ_Результирующая.ВидУпаковки;
			//МинимумСтроки = 1000000000;
			НомерПериода = 0;
			ТЗ_Периоды.ВыбратьСтроки();
			Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл
				НомерПериода = НомерПериода + 1;		
				ТекЗначение = ТЗ_Результирующая.ПолучитьЗначение(ТЗ_Результирующая.НомерСтроки,"Пер_" + Строка(НомерПериода));
				Таб.ПрисоединитьСекцию("Группировка1|Период");
				//Если ТекЗначение < МинимумСтроки  Тогда
				//	МинимумСтроки = ТекЗначение;
				//КонецЕсли;
			КонецЦикла;	
			
			МинимумСтроки = "";
			КоэфКво    = "";
			РезультКолонка ="";			
			Таб.ПрисоединитьСекцию("Группировка1|Результ");
			Таб.ПрисоединитьСекцию("Группировка1|Коэф");			
		КонецЕсли;
			
		Если (ПустоеЗначение(ТЗ_Результирующая.Группировка1) <> 1) 
			И (ПустоеЗначение(ТЗ_Результирующая.Группировка2) <> 1)
			И (ПустоеЗначение(ТЗ_Результирующая.Группировка3) = 1) 
																		Тогда			
			Наим = ТЗ_Результирующая.ГруппировкаРазрешенныхВидовУпаковки;
			Таб.ВывестиСекцию("Группировка2|Наименование");
			ТекГруппировка2 = ТЗ_Результирующая.ГруппировкаРазрешенныхВидовУпаковки;
			//МинимумСтроки = 1000000000;
			НомерПериода = 0;
			ТЗ_Периоды.ВыбратьСтроки();
			Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл
				НомерПериода = НомерПериода + 1;		
				ТекЗначение = ТЗ_Результирующая.ПолучитьЗначение(ТЗ_Результирующая.НомерСтроки,"Пер_" + Строка(НомерПериода));			
				Таб.ПрисоединитьСекцию("Группировка2|Период");
			КонецЦикла;
			
			МинимумСтроки = "";
			КоэфКво    = "";
			РезультКолонка = "";			
			Таб.ПрисоединитьСекцию("Группировка2|Результ");		
			Таб.ПрисоединитьСекцию("Группировка2|Коэф");			
		КонецЕсли;
		
		Если (ПустоеЗначение(ТЗ_Результирующая.Группировка1) <> 1) 
			И (ПустоеЗначение(ТЗ_Результирующая.Группировка2) <> 1)
			И (ПустоеЗначение(ТЗ_Результирующая.Группировка3) <> 1) 
																		Тогда
			Наим = ТЗ_Результирующая.Номенклатура;
			Таб.ВывестиСекцию("Группировка3|Наименование");
			ТекГруппировка3 = ТЗ_Результирующая.Номенклатура;			
			
			МинимумСтроки = 1000000000;
			НомерПериода = 0;			
			СуммаПериоды = 0;
			КвоПериоды	 = 0;
			
			ТЗ_Периоды.ВыбратьСтроки();
			Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл
				НомерПериода = НомерПериода + 1;		
				ТекЗначение = ТЗ_Результирующая.ПолучитьЗначение(ТЗ_Результирующая.НомерСтроки,"Пер_" + Строка(НомерПериода));			
				Таб.ПрисоединитьСекцию("Группировка3|Период");
				
				Если ТекЗначение < МинимумСтроки  Тогда
					МинимумСтроки = ТекЗначение;
				КонецЕсли;
				
				СуммаПериоды = СуммаПериоды + ТекЗначение;
				КвоПериоды   = КвоПериоды + 1;				
			КонецЦикла;	
				
			СуммаСреднее = СуммаПериоды / КвоПериоды;			
			Если перКолонкаМинимально = 1 Тогда //--- минимальное значение
				РезультКолонка = МинимумСтроки;
			ИначеЕсли перКолонкаМинимально = 2 Тогда //--- среднее значение
				РезультКолонка = СуммаСреднее;
			КонецЕсли;
			
			Таб.ПрисоединитьСекцию("Группировка3|Результ");			
			КоэфКво = глОкруглить(РезультКолонка * Коэффициент, ПорядокОкругления);
			Если КоэфКво < минКво Тогда	
			//	МинимумСтроки = "";
				КоэфКво    = "";
			КонецЕсли;
			Таб.ПрисоединитьСекцию("Группировка3|Коэф");	
		КонецЕсли;		
	КонецЦикла;
	
	//--------------------------------------------------------------------------------------	
	//--- Про контрагенты	
	//--------------------------------------------------------------------------------------
	
	//--- Сортирующий запрос
	СортирующийЗапрос				= СоздатьОбъект("Запрос");
	ТекстСортирующегоЗапроса = 
		"
		|Обрабатывать НеПомеченныеНаУдаление;
		|Покупатель = Справочник.Контрагенты.ТекущийЭлемент;
		|Группировка Покупатель;
		|";	
	Загол="";
	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Покупатель", ВыбПокупатель, "ВыбПокупатель", ТекстСортирующегоЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по покупателям. Отчет не сформирован.");
		Возврат;	
	КонецЕсли;
		
	// Если ошибка в запросе, то выход из процедуры
	Если СортирующийЗапрос.Выполнить(ТекстСортирующегоЗапроса)=0 Тогда
		Предупреждение("Запрос по резервам не выполнился!!!");
		Возврат;		
	КонецЕсли;
	
	Таб.ВывестиСекцию("ШапкаКонтрагентов|Наименование");
	
	ТЗ_РезультирующаяКн = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_РезультирующаяКн.НоваяКолонка("Индекс");
	ТЗ_РезультирующаяКн.НоваяКолонка("Группировка1");
	ТЗ_РезультирующаяКн.НоваяКолонка("Покупатель","Справочник.Контрагенты");
	
	НомерПериода = 0;
	СтрокаСвертки = "";
	ТЗ_Периоды.ВыбратьСтроки();
	Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл
		
		Дата1 = ТЗ_Периоды.Дата1;
		Если ПустоеЗначение(ТЗ_Периоды.ДокНачала) <> 1 Тогда
			Дата1 = ТЗ_Периоды.ДокНачала;
		КонецЕсли;
		
		Дата2 = ТЗ_Периоды.Дата2;
		Если ПустоеЗначение(ТЗ_Периоды.ДокКонца) <> 1 Тогда
			Дата2 = ТЗ_Периоды.ДокКонца;
		КонецЕсли;
		
		НомерПериода = НомерПериода + 1;
		
		ДополнитьРезультирующуюТЗКонтрагентами(Дата1,Дата2,НомерПериода);		
		//--- Получаю названия колонок с периодами для свертки таблицы значений
		СтрокаСвертки = СтрокаСвертки + ",Пер_" + Строка(НомерПериода);					
	КонецЦикла;
	
	СтрокаСвертки = Сред(СтрокаСвертки,2);
	
	ТЗ_РезультирующаяКн.Свернуть("Индекс,Группировка1,Покупатель",СтрокаСвертки);	
	// ВЫВОД ГРУППИРОВОК ЗАПРОСА по КОНТРАГЕНТАМ
	
	ТекГруппировка1  = "";	
	//ТЗ_РезультирующаяКн.ВыбратьСтроки();
	//Пока ТЗ_РезультирующаяКн.ПолучитьСтроку() = 1 Цикл
	Пока СортирующийЗапрос.Группировка(1) = 1 Цикл	
		
		ТекСтр 		= "";
		ТекКолонка 	= "";
		Если ТЗ_РезультирующаяКн.НайтиЗначение(СортирующийЗапрос.Покупатель,ТекСтр,ТекКолонка) = 1 Тогда			
			ТЗ_РезультирующаяКн.ПолучитьСтрокуПоНомеру(ТекСтр);												
			Если (перГруппыКонтрагентов = 1) Тогда				
			ИначеЕсли (перГруппыКонтрагентов = 2) И (ТЗ_РезультирующаяКн.Покупатель.Уровень() = 2) Тогда				
			ИначеЕсли (перГруппыКонтрагентов = 3) И (ТЗ_РезультирующаяКн.Покупатель.Уровень() > 2) Тогда					
			Иначе 
				Продолжить;
			КонецЕсли;
				
			Наим = ТЗ_РезультирующаяКн.Покупатель;			
			Если ТЗ_РезультирующаяКн.Покупатель.ЭтоГруппа() = 1  Тогда
				НазваниеГруппировки = "Группировка2";
			Иначе
				НазваниеГруппировки = "Группировка3";
			КонецЕсли;
			
			Таб.ВывестиСекцию(НазваниеГруппировки + "|Наименование");
			ТекГруппировка1 = ТЗ_РезультирующаяКн.Покупатель;
			МинимумСтроки = 1000000000;
			НомерПериода = 0;
			
			СуммаПериоды = 0;
			КвоПериоды	 = 0;
			
			ТЗ_Периоды.ВыбратьСтроки();
			Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл
				НомерПериода = НомерПериода + 1;		
				ТекЗначение = ТЗ_РезультирующаяКн.ПолучитьЗначение(ТЗ_РезультирующаяКн.НомерСтроки,"Пер_" + Строка(НомерПериода));			
				Таб.ПрисоединитьСекцию(НазваниеГруппировки + "|Период");
				
				Если ТекЗначение < МинимумСтроки  Тогда
					МинимумСтроки = ТекЗначение;
				КонецЕсли;
				
				СуммаПериоды = СуммаПериоды + ТекЗначение;
				КвоПериоды   = КвоПериоды + 1;				
			КонецЦикла;	
			
			СуммаСреднее = СуммаПериоды / КвоПериоды;
			
			Если перКолонкаМинимально = 1 Тогда //--- минимальное значение
				РезультКолонка = МинимумСтроки;
			ИначеЕсли перКолонкаМинимально = 2 Тогда //--- среднее значение
				РезультКолонка = СуммаСреднее;
			КонецЕсли;
			
			Таб.ПрисоединитьСекцию(НазваниеГруппировки + "|Результ");
			
			КоэфКво = РезультКолонка * Коэффициент;
			Если КоэфКво < минКво Тогда	
				//МинимумСтроки = "";
				КоэфКво    = "";
			КонецЕсли;			
			Таб.ПрисоединитьСекцию(НазваниеГруппировки + "|Коэф");			
		КонецЕсли;					
	КонецЦикла;
	
	ФиксКвоКолон = 8;
	
	Таб.ОбластьПечати(Таб.ВысотаСекции("Кнопки")+1);
	
	// Вывод заполненной формы
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);

	Таб.Показать("ПЕЧАТЬ: Отчет о резервировании товаров несколько периодов : ("+?(ВыбФирма.Выбран()=0, "", ", "+ВыбФирма)+")","");

	Если (Обновить = 2) Или (ЗакрытьЭкран=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;	
КонецПроцедуры     // Сформировать        

// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение="")	
	// закладки
    Если Номер=1 Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	Иначе     
		Форма.ИспользоватьСлой("Шапка,МФ,Подвал");
	КонецЕсли;      
	ПерерисовкаНазванийЗакладок();
	ДоступностьЭлементов(1);
КонецПроцедуры	// ПриВыбореЗакладки         

// ===============================
Процедура ПриОткрытии()	// Предопределенная процедура	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;		
		ВыбФирма			= глРасшифровка.Получить("ВыбФирма");
		ВыбНоменклатура		= глРасшифровка.Получить("ВыбНоменклатура");
		ВыбВидУпаковки		= глРасшифровка.Получить("ВыбВидУпаковки");				//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		ВыбПокупатель		= глРасшифровка.Получить("ВыбПокупатель");
		ВыбДоговор			= глРасшифровка.Получить("ВыбДоговор");	
		ВыбЗаказ			= глРасшифровка.Получить("ВыбЗаказ");					//--- УМК Сандомирский В.Ю. (29.05.15) 	
		ргСтик				= глРасшифровка.Получить("ргСтик");					//--- УМК Сандомирский В.Ю. (29.05.15) 					
		
		МинКво				= глРасшифровка.Получить("МинКво");
		Коэффициент			= глРасшифровка.Получить("Коэффициент");
		ПорядокОкругления	= глРасшифровка.Получить("ПорядокОкругления");
		
		перКолонкаМинимально = глРасшифровка.Получить("перКолонкаМинимально");
		перГруппыКонтрагентов = глРасшифровка.Получить("перГруппыКонтрагентов"); 
		Если перГруппыКонтрагентов = 0 Тогда
			перГруппыКонтрагентов = 1;
		КонецЕсли;
			
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТЗ_Периоды"))="ТаблицаЗначений" Тогда
			ТЗ_Периоды.Загрузить(глРасшифровка.Получить("ТЗ_Периоды"));
			ТЗ_Периоды.ВидимостьКолонки("FormEx_ПланРаскраски",0);
		КонецЕсли;
		
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;
		
		фБезГрупп = глРасшифровка.Получить("фБезГрупп");		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			//глРасшифровка = ""; // --- Обнуляем расшифровку;
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;  		
	Иначе		
		Если ПустоеЗначение(ТЗ_ПериодыСтрокой) <> 1 Тогда
			Попытка
				ЗначениеИзСтрокиВнутр(ТЗ_ПериодыСтрокой).Выгрузить(ТЗ_Периоды);
				ТЗ_Периоды.ВидимостьКолонки("FormEx_ПланРаскраски",0);				
			Исключение
			КонецПопытки;
		КонецЕсли;		
		Обновить = 0;
	КонецЕсли;
	                                                                           
	ТаблицаМФ.ВидимостьКолонки("Тип",				0);
	ТаблицаМФ.ВидимостьКолонки("Вид",				0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",	0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",				0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",		0);
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	                                                                                
	ПриВыбореЗакладки(1);
	
	// будем отслеживать только реальные изменения этих реквизитов
//	Форма.СписокПериодов.ВыполнятьФормулуТолькоПриИзменении(1); 
	
	Форма.ТЗ_ПериодыСтрокой.Видимость(0);
	
	Если перГруппыКонтрагентов = 0 Тогда
		перГруппыКонтрагентов = 1;
	КонецЕсли;
	
	Если перКолонкаМинимально = 0 Тогда //--- УМК Сандомирский В.Ю. (01.07.15)
		перКолонкаМинимально = 1;
	КонецЕсли;
	
	Если перТипДокНачало = 0  Тогда
		перТипДокНачало = 1; 
	КонецЕсли;
	
	ТЗ_Периоды.НоваяКолонка("FormEx_ПланРаскраски");
	ТЗ_Периоды.НоваяКолонка("Дата1","Дата",,,"Дата начала");
	ТЗ_Периоды.НоваяКолонка("Дата2","Дата",,,"Дата окончания");
	Если перТипДокНачало = 1 Тогда
		ТЗ_Периоды.НоваяКолонка("ДокНачала","Документ.НачДня",,,"Документ начала");
		ТЗ_Периоды.НоваяКолонка("ДокКонца",	"Документ.НачДня",,,"Документ окончания");
	ИначеЕсли перТипДокНачало = 2 Тогда	
		ТЗ_Периоды.НоваяКолонка("ДокНачала","Документ.УМК_СнятиеРезерва",,,"Документ начала");
		ТЗ_Периоды.НоваяКолонка("ДокКонца",	"Документ.УМК_СнятиеРезерва",,,"Документ окончания");
	КонецЕсли;	
	ТЗ_Периоды.ВидимостьКолонки("FormEx_ПланРаскраски",0);
				
КонецПроцедуры		// ПриОткрытии

// ===============================
Процедура ВводНового()
	// эта предопределенная процедура выполняется при восстановлении настройки
	ТекСтрокаВТаблицеМФ="";
	ПриВыбореЗакладки(1);
КонецПроцедуры // ВводНового()   

// ===============================
Процедура ОбработкаПодбора(Значение)  

	ЭлементДиалога = Форма.АктивныйЭлемент();
	
	Если ЭлементДиалога = "ВыбДоговор" Тогда	// выбираем договор
		Возврат;
	КонецЕсли;
	
	Если ЭлементДиалога = "ВыбЗаказ" Тогда		// --- УМК Сандомирский В.Ю. (29.05.15) 
		Возврат;
	КонецЕсли;

	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора

//====================================================================== //--- УМК Сандомирский В.Ю. (09.06.15)
Процедура ДобавитьТЗПериод()
	ТЗ_Периоды.НоваяСтрока();
	ТЗ_Периоды.FormEx_ПланРаскраски = "(BRUSH["+глПолучитьЦвет(196,233,242)+"])()()()()()";
КонецПроцедуры // гл

//====================================================================== //--- УМК Сандомирский В.Ю. (09.06.15)
Процедура ИзмТзПериоды()
	
	НомСтр = ТЗ_Периоды.ТекущаяСтрока();	
	НомКол = ТЗ_Периоды.ТекущаяКолонка();
		
	Если НомКол = "Дата1" Тогда //--- формат Дата	
		глВвестиЗначениеВТаблицу(ТЗ_Периоды,НомСтр,НомКол,"Дата","Введите начало периода"); //(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение") Экспорт
	ИначеЕсли НомКол = "Дата2" Тогда //--- формат Дата	
		глВвестиЗначениеВТаблицу(ТЗ_Периоды,НомСтр,НомКол,"Дата","Введите начало периода"); //(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение") Экспорт
	ИначеЕсли НомКол = "ДокНачала" Тогда //--- формат Дата
		
		Если перТипДокНачало = 1 Тогда
			глВвестиЗначениеВТаблицу(ТЗ_Периоды,НомСтр,НомКол,"Документ.НачДня","Выберите документ начала дня"); //(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение") Экспорт
		ИначеЕсли перТипДокНачало = 2 Тогда	
			глВвестиЗначениеВТаблицу(ТЗ_Периоды,НомСтр,НомКол,"Документ.УМК_СнятиеРезерва","Выберите документ снятия с резерва"); //(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение") Экспорт
		КонецЕсли;
	
	ИначеЕсли НомКол = "ДокКонца" Тогда //--- формат Дата
		
		Если перТипДокНачало = 1 Тогда
			глВвестиЗначениеВТаблицу(ТЗ_Периоды,НомСтр,НомКол,"Документ.НачДня","Выберите документ начала дня"); //(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение") Экспорт
		ИначеЕсли перТипДокНачало = 2 Тогда	
			глВвестиЗначениеВТаблицу(ТЗ_Периоды,НомСтр,НомКол,"Документ.УМК_СнятиеРезерва","Выберите документ окончания"); //(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение") Экспорт
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ИзмТзПериоды()

//====================================================================== //--- УМК Сандомирский В.Ю. (09.06.15)
Процедура УдалитьТекущуюСтрокуТЗПериодов()
	НомСтр = ТЗ_Периоды.ТекущаяСтрока();
	ТЗ_Периоды.УдалитьСтроку(НомСтр);
КонецПроцедуры // УдалитьТекущуюСтрокуТЗПериодов()

//====================================================================== //--- УМК Сандомирский В.Ю. (20.10.14)
Процедура ИзменениеПорядкаТЗ(Направление)
	
	ТекСтрока = ТЗ_Периоды.ТекущаяСтрока();
	ТЗ_Периоды.СдвинутьСтроку(Направление,ТекСтрока);
	ТекСтрока = ТекСтрока + Направление;
	Если ТекСтрока > ТЗ_Периоды.КоличествоСтрок() Тогда
		ТекСтрока = ТЗ_Периоды.КоличествоСтрок(); 
	КонецЕсли; 
	ТЗ_Периоды.ТекущаяСтрока(ТекСтрока);
	
КонецПроцедуры // ИзменениеПорядка(1)

//======================================================================
Процедура ПриЗакрытии()
	ТЗ_ПериодыСтрокой = ЗначениеВСтрокуВнутр(ТЗ_Периоды);
КонецПроцедуры // ПриЗакрытии()


//======================================================================
Процедура ИзмТипДокументаПериода()	
	Если ТЗ_Периоды.КоличествоСтрок() = 1 Тогда
		Ответ = Вопрос("Удалить строки периодов","Да+Нет");
		Если Ответ = "Да"  Тогда
			ТЗ_Периоды.УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;	
	
	Попытка
		ТЗ_Периоды.УдалитьКолонку("ДокНачала");
		ТЗ_Периоды.УдалитьКолонку("ДокКонца");
	Исключение
	КонецПопытки;
	Если перТипДокНачало = 1 Тогда
		ТЗ_Периоды.НоваяКолонка("ДокНачала","Документ.НачДня",,,"Документ начала");
		ТЗ_Периоды.НоваяКолонка("ДокКонца",	"Документ.НачДня",,,"Документ окончания");
	ИначеЕсли перТипДокНачало = 2 Тогда	
		ТЗ_Периоды.НоваяКолонка("ДокНачала","Документ.УМК_СнятиеРезерва",,,"Документ начала");
		ТЗ_Периоды.НоваяКолонка("ДокКонца",	"Документ.УМК_СнятиеРезерва",,,"Документ окончания");
	КонецЕсли;	
КонецПроцедуры // ИзмТипДокументаПериода()

// ===============================
// ТЕЛО МОДУЛЯ
// ===============================   

// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");

//                  			тип			вид						переменная  			название
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ТМЦ",					"Номенклатура",    		"По позициям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыУпаковки",			"ВидУпаковки",			"По видам упаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Контрагенты",			"Покупатель",			"По покупателям");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",	"Договор",				"Договор",				"По договорам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",	"УМК_ЗаказКлиента",		"ДокументРезерва",		"По заказам");				//--- УМК Сандомирский В.Ю. (29.05.15)
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",		"Номенклатура",			"По категориям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",		"Покупатель",			"По категориям покупателей");

ТекСтрокаВТаблицеМФ="";
ргСтик = 1;