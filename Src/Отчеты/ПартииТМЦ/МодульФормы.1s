// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
                        
// переменные предназначены для механизма универсальных группировок отчета
Перем СписокГруппировок;
Перем КоличествоГруппировок;
Перем НомерГруппировкиНоменклатура;

Перем Запрос;
Перем Язык, УкрГруппировки;
Перем Колс;

//====================================================================== //--- УМК Сандомирский В.Ю, (27.05.14)
Процедура ПечатьКолонков(ТекНаименованиеСтроки)
	Если фНачОст	= 1 Тогда
		Таб.ПрисоединитьСекцию(ТекНаименованиеСтроки + "|НачОстаток");
    КонецЕсли;
				
	Если фПриход	= 1 Тогда
		Таб.ПрисоединитьСекцию(ТекНаименованиеСтроки + "|Приход");	
 	КонецЕсли;		
		 	
	Если фРасход	= 1 Тогда
		Таб.ПрисоединитьСекцию(ТекНаименованиеСтроки + "|Расход");
	КонецЕсли;
		
	Если фКонОст	= 1 Тогда
		Таб.ПрисоединитьСекцию(ТекНаименованиеСтроки + "|КонОстаток");	       
	КонецЕсли;	
		
КонецПроцедуры 	//... УМК Сандомирский В.Ю, (27.05.14)  

// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
Процедура ВыбратьПоФильтру()
	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру

// ===============================
Функция ПерерисовкаНазванийЗакладок()      

	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");

КонецФункции // ПерерисовкаНазванийЗакладок	

// ===============================
Процедура УстановитьГруппировкиЗапроса(ТекстЗапроса, ТекстЗагол)
	                       
	СписокГруппировок = СоздатьОбъект("СписокЗначений");
	КвоГруппировок 				= Группировки.РазмерСписка();
	НомерГруппировкиНоменклатура= КвоГруппировок;

	Для Сч=1 По КвоГруппировок Цикл
		
		Если Группировки.Пометка(Сч)=1 Тогда
			ПредставлениеГрупп		=""; 
			УкрПредставлениеГрупп	="";
			ТекстГрупп = Группировки.ПолучитьЗначение(Сч,ПредставлениеГрупп);
			УкрГруппировки.ПолучитьЗначение(УкрГруппировки.НайтиЗначение(ТекстГрупп),УкрПредставлениеГрупп);
			
			ТекстБезУпорядочивания = "";
			ТекстБезГрупп = "";
			Если ( (ТекстГрупп = "МестоХранения") Или (ТекстГрупп = "Номенклатура") Или (ТекстГрупп = "Поставщик") 
				 Или (ТекстГрупп = "Счет") ) И (фБезГрупп = 2) Тогда
					ТекстБезГрупп = " без групп";
			ИначеЕсли ( (ТекстГрупп = "Счет") Или (ТекстГрупп = "ПрихДокумент") ИЛИ (ТекстГрупп = "День"))
				И (глОптимизацияОтчетов = 1) Тогда
				ТекстБезУпорядочивания = " без упорядочивания";
			КонецЕсли;
			ТекстЗапроса= ТекстЗапроса 	+ "Группировка "+ТекстГрупп+ТекстБезУпорядочивания+ТекстБезГрупп+";";
			ТекстЗагол	= ТекстЗагол + " / "+?(Язык="у",УкрПредставлениеГрупп,ПредставлениеГрупп);
			СписокГруппировок.ДобавитьЗначение(ТекстГрупп,ПредставлениеГрупп);
			Если ТекстГрупп = "Номенклатура" Тогда
			    НомерГруппировкиНоменклатура = СписокГруппировок.РазмерСписка();
			КонецЕсли;


		КонецЕсли;
	КонецЦикла; 

	Если ПустаяСтрока(ТекстЗагол)=0 Тогда // удаляем ведущий разделитель " / "
		ТекстЗагол = Сред(ТекстЗагол,4)
	КонецЕсли;

КонецПроцедуры // УстановитьГруппировкиЗапроса()
                               
// ===============================
Процедура ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка = "",ЭтоГруппа=0)
Перем Секция;

	Если (фБезГрупп = 3) И (ЭтоГруппа = 0) Тогда
		Возврат;
	КонецЕсли;

	Наим 		= ПечТекстСтроки;
	
	Если  ТипЗначенияСтр(ТекРасшифровка) = "Документ" Тогда				//--- УМК Сандомирский В.Ю. (16.09.14) 
		Если  ТекРасшифровка.Вид() = "УМК_ДооценкаПартии" Тогда 
			Наим = ПечТекстСтроки + " " + глДокументВОтчете(ТекРасшифровка.ПриходнаяНакладная,1,1,) ;
		КонецЕсли;
	КонецЕсли;

	Значение 	= ТекРасшифровка;
    
	Если Колс = 0 Тогда
		ПечНачЗначение 		= ""; 
		ПечПрихЗначение 	= "";
		ПечРасхЗначение 	= "";
		ПечКонЗначение 		= "";
	
		Если Ном >= НомерГруппировкиНоменклатура Тогда
			Номенклатура = Запрос.Номенклатура;
			ПечНачЗначение 		= ПечНачЗначение  + РазделительСтрок + глФРМКоличествоВОтчете(Запрос.НачОстаток, Номенклатура, 1 - фЕдУм); 
			ПечПрихЗначение 	= ПечПрихЗначение + РазделительСтрок + глФРМКоличествоВОтчете(Запрос.ПрихОстаток,Номенклатура, 1 - фЕдУм);
			ПечРасхЗначение 	= ПечРасхЗначение + РазделительСтрок + глФРМКоличествоВОтчете(Запрос.РасхОстаток,Номенклатура, 1 - фЕдУм);
			ПечКонЗначение 		= ПечКонЗначение  + РазделительСтрок + глФРМКоличествоВОтчете(Запрос.КонОстаток, Номенклатура, 1 - фЕдУм);
		КонецЕсли;
		
	 	Если ВидСтоимости.ТекущаяСтрока() <> 3 Тогда // не собственная
			ПечНачЗначение 		= ПечНачЗначение  + РазделительСтрок + глФРМ(Запрос.НачСтоимость, Гривня,1); 
			ПечПрихЗначение 	= ПечПрихЗначение + РазделительСтрок + глФРМ(Запрос.ПрихСтоимость,Гривня,1);
			ПечРасхЗначение 	= ПечРасхЗначение + РазделительСтрок + глФРМ(Запрос.РасхСтоимость,Гривня,1);
			ПечКонЗначение 		= ПечКонЗначение  + РазделительСтрок + глФРМ(Запрос.КонСтоимость, Гривня,1);
		КонецЕсли;
	
	 	Если ВидСтоимости.ТекущаяСтрока() <> 2 Тогда // не полная
			ПечНачЗначение 		= ПечНачЗначение  + РазделительСтрок + глФРМ(Запрос.НачПродСтоимость, Гривня,1); 
			ПечПрихЗначение 	= ПечПрихЗначение + РазделительСтрок + глФРМ(Запрос.ПрихПродСтоимость,Гривня,1);
			ПечРасхЗначение 	= ПечРасхЗначение + РазделительСтрок + глФРМ(Запрос.РасхПродСтоимость,Гривня,1);
			ПечКонЗначение 		= ПечКонЗначение  + РазделительСтрок + глФРМ(Запрос.КонПродСтоимость, Гривня,1);
		КонецЕсли;
	
		ПечНачЗначение 		= Сред(ПечНачЗначение ,3);
		ПечПрихЗначение 	= Сред(ПечПрихЗначение,3);
		ПечРасхЗначение 	= Сред(ПечРасхЗначение,3);
		ПечКонЗначение 		= Сред(ПечКонЗначение ,3);	    
	КонецЕсли;
	Если ПустоеЗначение(ТекРасшифровка) = 0 Тогда
		Если ТипЗначенияСтр(ТекРасшифровка) = "Документ" Тогда
			Значение = СоздатьОбъект("СписокЗначений");
			Значение.ДобавитьЗначение(Запрос.Номенклатура, "Товар");
			
			Попытка		
				Значение.Установить("Док", Запрос.Документ);	//--- УМК Сандомирский В.Ю, (27.05.14)
			Исключение КонецПопытки;
			
		КонецЕсли;	    
	КонецЕсли;
	Таб.ВывестиСекцию(НазваниеСекции+"|Наименование");   	//--- УМК Сандомирский В.Ю, (27.05.14)
	Если фНачОст	= 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции + "|НачОстаток");
    КонецЕсли;
				
	Если фПриход	= 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции + "|Приход");	
 	КонецЕсли;		
		 	
	Если фРасход	= 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции + "|Расход");
	КонецЕсли;
		
	Если фКонОст	= 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции + "|КонОстаток");	       
	КонецЕсли;    	//... УМК Сандомирский В.Ю, (27.05.14)
	
КонецПроцедуры //ПечатьСтроки()

//======================================================================
Процедура ПозиционироватьЗапрос(Значение)
	Если КоличествоГруппировок = 1 Тогда
		Запрос.Получить(Значение);
	ИначеЕсли КоличествоГруппировок = 2 Тогда
		Запрос.Получить(Значение,);
	ИначеЕсли КоличествоГруппировок = 3 Тогда
		Запрос.Получить(Значение,,);		
	ИначеЕсли КоличествоГруппировок = 4 Тогда
		Запрос.Получить(Значение,,,);		
	ИначеЕсли КоличествоГруппировок = 5 Тогда
		Запрос.Получить(Значение,,,,);		
	ИначеЕсли КоличествоГруппировок = 6 Тогда
		Запрос.Получить(Значение,,,,,);		
	КонецЕсли;	
КонецПроцедуры // ПозиционироватьЗапрос()

// ===============================
Процедура ВывестиГруппировки(Знач Ном=1)

	Если Ном > КоличествоГруппировок Тогда                           
		Возврат;
	КонецЕсли;

	НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(Ном);
	Пока Запрос.Группировка(Ном) = 1 Цикл
		НазваниеСекции="Группировка"+Ном;
		Если НазваниеГруппировки = "День" Тогда
			Значение = Запрос.НачалоПериода();
		Иначе
		    Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);
		КонецЕсли;
		// флажок отрицательные подразумевает выведение в отчёт только той номенклатуры, где были отриц остатки.
		// поэтому сразу за первой группировкой прогоним вторую (это будет день). Если на конец дня есть отр. остаток то нужно вывести группировку этого уровня и дальше ехать как обычно
		// если нет, то не выводим ничего.
		Если (Ном = 1) И (фТолькоОтр = 1) Тогда
			ЕстьКонтакт = 0;
			Пока Запрос.Группировка(2) = 1 Цикл
				Если Запрос.КонОстаток < 0 Тогда
					// спозиционирумся на текущую позицию
					ЕстьКонтакт = 1;
					ПозиционироватьЗапрос(Значение);
					Прервать;
				КонецЕсли;
			КонецЦикла;			
			
			Если ЕстьКонтакт = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		// + umk
		Если (Ном = 1) И (фРасхБезСумм = 1) Тогда
			ЕстьКонтакт = 0;
			Пока Запрос.Группировка(2) = 1 Цикл
				Если (Запрос.РасхСтоимость = 0) И (Запрос.РасхОстаток<>0) Тогда
					//спозиционирумся на текущую позицию
					ЕстьКонтакт = 1;
					ПозиционироватьЗапрос(Значение);
					Прервать;
				КонецЕсли;
			КонецЦикла;			
			
			Если ЕстьКонтакт = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если (Ном = 1) И (фОстБезКол = 1) Тогда
			ЕстьКонтакт = 0;
			Пока Запрос.Группировка(2) = 1 Цикл
				Если (Запрос.КонСтоимость <> 0) И (Запрос.КонОстаток = 0) Тогда
					// спозиционирумся на текущую позицию
					ЕстьКонтакт = 1;
					ПозиционироватьЗапрос(Значение);
					Прервать;
				КонецЕсли;
			КонецЦикла;			
			
			Если ЕстьКонтакт = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		// - umk
		
		
		
		Если Найти("Счет,МестоХранения,Номенклатура,Поставщик",НазваниеГруппировки) > 0 Тогда
			Если НазваниеГруппировки = "Номенклатура" Тогда
			    ПечТекстСтроки = глСмещениеГруппы(Значение,фБезГрупп-1) +глТоварВОтчете(Запрос.Номенклатура,1,Запрос.ЭтоГруппа("Номенклатура"), Запрос.ЗначениеУпорядочивания("Номенклатура"), 1 - фЕдУм);
			Иначе
				ПечТекстСтроки = глСмещениеГруппы(Значение,фБезГрупп-1) + Значение;
			КонецЕсли;
		ИначеЕсли Найти("День",НазваниеГруппировки) > 0 Тогда
		    ПечТекстСтроки = Значение;
		Иначе // ПрихДокумент, Документ
			Если ПустоеЗначение(Значение)=0 Тогда
				Контр = СокрЛП(Строка(глКонтрагентДок(Значение)));
				Если Контр = "" Тогда
				    Если Значение.Вид() = "СписаниеТМЦВПроизводство" Тогда
				        Контр = ". Продукция: """+Строка(Значение.ПродукцияШ)+"""";
				    ИначеЕсли Значение.Вид() = "ПереработкаМяса" Тогда
				        Контр = ". Категория: """+Строка(Значение.Категория)+"""";
					КонецЕсли;
				Иначе
					Контр = ". Контрагент: """+Контр+"""";
				КонецЕсли;
				
				ПечТекстСтроки = ""+глДокументВОтчете(Значение,"с номером","с датой",Язык)+Контр;
			Иначе
				ПечТекстСтроки = "";
			КонецЕсли;
		КонецЕсли;
		
		ПечТекстСтроки = ?(ПустоеЗначение(ПечТекстСтроки)=1,глПредставлениеПустогоЗначения(НазваниеГруппировки,Язык),ПечТекстСтроки);

		ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,Значение,Запрос.ЭтоГруппа(НазваниеГруппировки));
		глОживить(1);

		ВывестиГруппировки(Ном+1);
	КонецЦикла;

КонецПроцедуры // ВывестиГруппировки()

// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
Процедура ДоступностьЭлементов(ВсеЭлементы=0)           
	
	ЭлементДиалога = Форма.АктивныйЭлемент();

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбФирма") Или (ЭлементДиалога="кХВыбФирма") Тогда
		Форма.кХВыбФирма.Доступность(ВыбФирма.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбСчет") Или (ЭлементДиалога="кХВыбСчет") Тогда
		Форма.кХВыбСчет.Доступность(ВыбСчет.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбМестоХранения") Или (ЭлементДиалога="кХВыбМестоХранения") Тогда
		Форма.кХВыбМестоХранения.Доступность(ВыбМестоХранения.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбНоменклатура") Или (ЭлементДиалога="кХВыбНоменклатура") Тогда
		Форма.кХВыбНоменклатура.Доступность(ВыбНоменклатура.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбПоставщик") Или (ЭлементДиалога="кХВыбПоставщик") Тогда
		Форма.кХВыбПоставщик.Доступность(ВыбПоставщик.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВидСтоимости") Тогда
		Если ВидСтоимости.ТекущаяСтрока()=1 Тогда
			Текст = РазделительСтрок+"Все виды стоимости.";
		ИначеЕсли ВидСтоимости.ТекущаяСтрока()=2 Тогда
			Текст = РазделительСтрок+"Полная себестоимость партии. Для продукции из давальческого сырья включает давальческую и нашу собственную составляющую."; 
		ИначеЕсли ВидСтоимости.ТекущаяСтрока()=3 Тогда
			Текст = "Для продукции из давальческого сырья - сумма нашей собственной составляющей. Для продукции и товаров, переданных в розницу, стоимость в отпускных ценах."; 
		КонецЕсли;
		Форма.ТекстВидСтоимости.Заголовок(Текст); 
	КонецЕсли;

КонецПроцедуры  	// ДоступностьЭлементов

// ===============================
Процедура Сформировать(ЗакрытьЭкран=0, Колонки = 0)    
	
	глПроверкаДаты(Дата1,Дата2);
	
	// Здесь формируется отчет, который использует регистры, критичные к
	// последовательности проведения документов
	// поэтому сравним установленные даты периода формируемого отчета с ГП
	глПроверкаАктуальностиОтчета(Дата1,Дата2,ВыбФирма,0);
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") Или (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;

	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	Колс = Колонки;
	Если Колонки = 1 Тогда
	    Таб.ИсходнаяТаблица("Колонки_")
	Иначе
		Таб.ИсходнаяТаблица(ПечФорма);
	КонецЕсли;
    
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "ПартииТМЦ");
    
	// все настройки помещаем в список
	Расшифровка.Установить("Дата1", 			Дата1);
    Расшифровка.Установить("Дата2", 			Дата2); 
	Расшифровка.Установить("Колс", 			Колс); 
	
	Расшифровка.Установить("ВыбФирма", 			ВыбФирма);
	Расшифровка.Установить("ВыбСчет", 			ВыбСчет);
	Расшифровка.Установить("ВыбМестоХранения", 	ВыбМестоХранения);
	Расшифровка.Установить("ВыбНоменклатура", 	ВыбНоменклатура);
	Расшифровка.Установить("ВыбПоставщик", 		ВыбПоставщик);
	
	//--- УМК Сандомирский В.Ю, (03.06.14)
	Расшифровка.Установить("фНачОст", 		фНачОст);
	Расшифровка.Установить("фПриход", 		фПриход);
	Расшифровка.Установить("фРасход", 		фРасход);
	Расшифровка.Установить("фКонОст", 		фКонОст);
	Расшифровка.Установить("фБезПер", 		фБезПер);
	Расшифровка.Установить("фЕдУм",			фЕдУм);
			
	// запомним МФ только если он задан
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
	КонецЕсли;

	Расшифровка.Установить("ВидСтоимости",		ВидСтоимости.ТекущаяСтрока());

	Расшифровка.Установить("Группировки",	Группировки);	
	Расшифровка.Установить("фБезГрупп",		фБезГрупп);
	
	Запрос=СоздатьОбъект("Запрос");

	Если Дата2 >= ПолучитьДатуТА() Тогда
		ТекстЗапроса = "
			|Период с Дата1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Дата1 по Дата2;";
	КонецЕсли;
	
	УслПер = "";
	Если фБезПер = 1 Тогда
		УслПер = " Когда (ТекДок.Вид() <> ""Перемещение"")";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
		"Фирма			= Регистр.Партии.Фирма;
		|Счет			= Регистр.Партии.Счет;
		|МестоХранения	= Регистр.Партии.МестоХранения;
		|Номенклатура	= Регистр.Партии.ТМЦ;
		|Поставщик		= Регистр.Партии.Поставщик; 
		|ПрихДокумент	= Регистр.Партии.ПрихДокумент;
		|Остаток		= Регистр.Партии.ОстатокТовара;
		|Стоимость		= Регистр.Партии.Стоимость;
		|ТекДок 		= Регистр.Партии.ТекущийДокумент;
		|ПродСтоимость	= Регистр.Партии.ПродСтоимость;

		|Функция НачОстаток			= НачОст(Остаток);
		|Функция КонОстаток			= КонОст(Остаток);
		|Функция ПрихОстаток		= Приход(Остаток)" + УслПер + ";
		|Функция РасхОстаток		= Расход(Остаток)" + УслПер + ";

		|Функция НачСтоимость		= НачОст(Стоимость);
		|Функция КонСтоимость		= КонОст(Стоимость);
		|Функция ПрихСтоимость		= Приход(Стоимость)" + УслПер + ";
		|Функция РасхСтоимость		= Расход(Стоимость)" + УслПер + ";

		|Функция НачПродСтоимость	= НачОст(ПродСтоимость);
		|Функция КонПродСтоимость	= КонОст(ПродСтоимость);
		|Функция ПрихПродСтоимость	= Приход(ПродСтоимость)" + УслПер + ";
		|Функция РасхПродСтоимость	= Расход(ПродСтоимость)" + УслПер + ";
		|";

	Если ВидСтоимости.ТекущаяСтрока()=1 Тогда
		Загол = ?(Язык="у","По всім видам облікової вартості. ","По всем видам учетной стоимости. ");

	ИначеЕсли ВидСтоимости.ТекущаяСтрока()=2 Тогда
		Если Язык="у" Тогда
			Загол = "По повній собівартості партії. Для продукції з давальницької сировини містить давальницьку й нашу власну складову. ";
		Иначе
			Загол = "По полной себестоимости партии. Для продукции из давальческого сырья включает давальческую и нашу собственную составляющую. ";
		КонецЕсли;
	ИначеЕсли ВидСтоимости.ТекущаяСтрока()=3 Тогда
		Если Язык="у" Тогда
			Загол = "Для продукції з давальницької сировини - сума нашої власної складової. Для продукції і товарів, переданих в роздріб, вартість у віпускних цінах. ";
		Иначе
			Загол = "Для продукции из давальческого сырья - сумма нашей собственной составляющей. Для продукции и товаров, переданных в розницу, стоимость в отпускных ценах. ";
		КонецЕсли;
	КонецЕсли;

	Загол = ?(фБезПер = 1, ?(Язык = "У", "Переміщення не враховані
	|", "Перемещения не учтены
	|"), "");
	
	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"МестоХранения", ВыбМестоХранения, "ВыбМестоХранения", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по местам хранения. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Номенклатура", ВыбНоменклатура, "ВыбНоменклатура", ТекстЗапроса, Загол, Язык, "КатегорииТоваров")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по номенклатурным позициям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Счет", ВыбСчет, "ВыбСчет", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по счетам учета. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Поставщик", ВыбПоставщик, "ВыбПоставщик", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по поставщикам. Отчет не сформирован.");
		Возврат;
	КонецЕсли;

	ТекстГруппировок 	= "";
	ПечЗаголовокСтолбца = "";
	
	УстановитьГруппировкиЗапроса(ТекстГруппировок, ПечЗаголовокСтолбца);
	КоличествоГруппировок = СписокГруппировок.РазмерСписка();
	Если КоличествоГруппировок = 0 Тогда
		Предупреждение("Следует выбрать хотя бы одну группировку!");
		Возврат;
	КонецЕсли;
	
	Если КоличествоГруппировок > 6 Тогда
		Предупреждение("Нельзя сделать больше 6 группировок!",60);
		Возврат;
	КонецЕсли;

	Если (фТолькоОтр = 1) И (КоличествоГруппировок < 2) Тогда
		Предупреждение("Для выведение только отр. остатков в группировках должна быть номенклатура, день и документ (опционально)");
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ТекстГруппировок;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда
		Предупреждение("Запрос по партиям не выполнился!!!");
		Возврат;
	КонецЕсли;

	// обнуляем счетчик числа строк, выведенных в таблицу отчета
	глЧислоСтрок=0;           

	Таб.ВывестиСекцию("Кнопки|Наименование");
	ПечатьКолонков("Кнопки");       	//--- УМК Сандомирский В.Ю, (27.05.14)
	Таб.ВывестиСекцию("Заголовок|Наименование");
	ПечатьКолонков("Заголовок");       	//--- УМК Сандомирский В.Ю, (27.05.14)
	Таб.ВывестиСекцию("Шапка|Наименование");
	ПечатьКолонков("Шапка");            //--- УМК Сандомирский В.Ю, (27.05.14)
		
	глОживить(Таб.ВысотаСекции("Заголовок")+Таб.ВысотаСекции("Шапка"));
	
	// ВЫВОД ГРУППИРОВОК ЗАПРОСА
	ВывестиГруппировки();
	
	// выводим итоги
	ПечатьСтроки(0,"Итого",?(Язык="у", "Всього:", "Всего:"));

	//Вызов выходного отчета в окно просмотра и редактирования.
	ФиксКвоСтрок = Таб.ВысотаСекции("Кнопки")+Таб.ВысотаСекции("Заголовок")+Таб.ВысотаСекции("Шапка");
	ФиксКвоКолон = 8;
	Таб.Опции(0, 0, ФиксКвоСтрок, ФиксКвоКолон, "ПарамПечатиУпрПартииТМЦ", "РазмОкнаУпрПартииТМЦ");
	Таб.ОбластьПечати(Таб.ВысотаСекции("Кнопки")+1);
	
	// Вывод заполненной формы
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);

	Таб.Показать("ПЕЧАТЬ: Отчет о партиях товаров: ("+ПериодСтр(Дата1, Дата2)+?(ВыбФирма.Выбран()=0, "", ", "+ВыбФирма)+")","");

	Если (Обновить = 2) Или (ЗакрытьЭкран=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры     // Сформировать                   
                                         
// ===============================
Процедура ПредопределенныеНастройки()
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("Поставщики", 	"По поставщикам");
	Меню.ДобавитьЗначение("МестаХранения",	"По местам хранения");
	Меню.ДобавитьЗначение("Номенклатура", 	"По номенклатуре");
	Значение = "";
	Если Меню.ВыбратьЗначение(Значение, , , , 1) = 0 Тогда
		Возврат;
	КонецЕсли;

	фБезГрупп  	= 2;

	Группировки.УдалитьВсе();
	Если Значение = "Поставщики" Тогда
		
		Группировки.ДобавитьЗначение("Поставщик", 	    "Поставщик");           
		Группировки.ДобавитьЗначение("Счет", 	        "Счет учета");
		Группировки.ДобавитьЗначение("МестоХранения",  	"Место хранения");
		Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
		Группировки.ДобавитьЗначение("ПрихДокумент", 	"Партиеобразующий документ");
		Группировки.ДобавитьЗначение("Документ",	    "Документ движения");
		
		Группировки. Пометка(1,1);
		Группировки. Пометка(2,1);
		Группировки. Пометка(3,1);
		Группировки. Пометка(4,1);
		Группировки. Пометка(5,1);
		Группировки. Пометка(6,0);

	ИначеЕсли Значение = "МестаХранения" Тогда
		
		Группировки.ДобавитьЗначение("МестоХранения",  	"Место хранения");
		Группировки.ДобавитьЗначение("Счет", 	        "Счет учета");
		Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
		Группировки.ДобавитьЗначение("Поставщик", 	    "Поставщик");           
		Группировки.ДобавитьЗначение("ПрихДокумент", 	"Партиеобразующий документ");
		Группировки.ДобавитьЗначение("Документ",	    "Документ движения");
		
		Группировки. Пометка(1,1);
		Группировки. Пометка(2,1);
		Группировки. Пометка(3,1);
		Группировки. Пометка(4,0);
		Группировки. Пометка(5,1);
		Группировки. Пометка(6,0);

	ИначеЕсли Значение = "Номенклатура" Тогда
		
		Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
		Группировки.ДобавитьЗначение("Счет", 	        "Счет учета");
		Группировки.ДобавитьЗначение("МестоХранения",  	"Место хранения");
		Группировки.ДобавитьЗначение("Поставщик", 	    "Поставщик");           
		Группировки.ДобавитьЗначение("ПрихДокумент", 	"Партиеобразующий документ");
		Группировки.ДобавитьЗначение("Документ",	    "Документ движения");
		
		Группировки. Пометка(1,1);
		Группировки. Пометка(2,1);
		Группировки. Пометка(3,1);
		Группировки. Пометка(4,0);
		Группировки. Пометка(5,1);
		Группировки. Пометка(6,0);

	КонецЕсли;

	Группировки.ТекущаяСтрока(1);  
КонецПроцедуры // КнопкаНастройкиГруппировок


// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение="")	
	// закладки
    Если Номер=1 Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	Иначе     
		Форма.ИспользоватьСлой("Шапка,МФ,Подвал");
	КонецЕсли;      
	ПерерисовкаНазванийЗакладок();
	ДоступностьЭлементов(1);
КонецПроцедуры	// ПриВыбореЗакладки

// ===============================
Процедура ПриОткрытии()	// Предопределенная процедура
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		глФлагРасшифровки = 0;
		
		// восстанавливаем настройки из списка
		Дата1 		= глРасшифровка.Получить("Дата1");
		Дата2		= глРасшифровка.Получить("Дата2");

		ВыбФирма		= глРасшифровка.Получить("ВыбФирма");
		ВыбСчет			= глРасшифровка.Получить("ВыбСчет");
		ВыбМестоХранения= глРасшифровка.Получить("ВыбМестоХранения");
		ВыбНоменклатура	= глРасшифровка.Получить("ВыбНоменклатура");
		ВыбПоставщик	= глРасшифровка.Получить("ВыбПоставщик");
		
		//--- УМК Сандомирский В.Ю, (03.06.14)
		фНачОст         = глРасшифровка.Получить("фНачОст");
		фПриход         = глРасшифровка.Получить("фПриход");
		фРасход         = глРасшифровка.Получить("фРасход");
		фКонОст         = глРасшифровка.Получить("фКонОст");
		фБезПер			= глРасшифровка.Получить("фБезПер");
		фЕдУм			= глРасшифровка.Получить("фЕдУм");
		
		
		Колс = глРасшифровка.Получить("Колс");
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;
		
		ВидСтоимости.ТекущаяСтрока(глРасшифровка.Получить("ВидСтоимости"));

		фБезГрупп = глРасшифровка.Получить("фБезГрупп");
		глРасшифровка.Получить("Группировки").Выгрузить(Группировки);

		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать(, Колс);
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
		ВыбФирма = Константа.БазФирма;
	КонецЕсли;
	                                                                           
	Доступность = ?(глПартионныйУчетПоСкладам = Да,1,0);
	Форма.тМестоХранения. 	 Доступность(Доступность);
	Форма.ВыбМестоХранения.  Доступность(Доступность);
	Форма.кХВыбМестоХранения.Доступность(Доступность);
	                  
	ТаблицаМФ.ВидимостьКолонки("Тип",				0);
	ТаблицаМФ.ВидимостьКолонки("Вид",				0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",	0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",				0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",		0);
		
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	                                                                                
	ПриВыбореЗакладки(1);

КонецПроцедуры		// ПриОткрытии

// ===============================
Процедура ВводНового()
	// эта предопределенная процедура выполняется при восстановлении настройки
	ТекСтрокаВТаблицеМФ="";
	ПриВыбореЗакладки(1);
КонецПроцедуры // ВводНового()   

// ===============================
Процедура ОбработкаПодбора(Значение)  

	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора


// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

Дата2=ПолучитьДатуТА();
Дата1=глВосстановитьЗначение(,"ОсновнаяДатаНачалаОтчета");
Если ПустоеЗначение(Дата1)=0 Тогда
	Дата1=НачМесяца(Дата1);
КонецЕсли;         

// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");

//                  			тип			вид						переменная  			название
глДобавитьВТаблицуМФ(ТаблицаМФ,"ПланСчетов","Основной",			    "Счет",	        		"По счетам учета");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","МестаХранения",		"МестоХранения",   		"По местам хранения");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ТМЦ",					"Номенклатура",    		"По позициям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Контрагенты",			"Поставщик",			"По поставщикам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",		"Номенклатура",			"По категориям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",		"Поставщик",			"По категориям поставщиков");

ТекСтрокаВТаблицеМФ="";

Группировки.ДобавитьЗначение("Поставщик", 	    "Поставщик");           
Группировки.ДобавитьЗначение("Счет", 	        "Счет учета");
Группировки.ДобавитьЗначение("МестоХранения",  	"Место хранения");
Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
Группировки.ДобавитьЗначение("ПрихДокумент", 	"Партия");
Группировки.ДобавитьЗначение("День", 	    	"День");
Группировки.ДобавитьЗначение("Документ", 	    "Документ движения");

// пометки по умолчанию
Группировки. Пометка(1,1);
Группировки. Пометка(2,1);
Группировки. Пометка(3,1);
Группировки. Пометка(4,1);
Группировки. Пометка(5,1);

// список украинских названий группировок для построения шапки отчета
УкрГруппировки = СоздатьОбъект("СписокЗначений");
УкрГруппировки.ДобавитьЗначение("Поставщик", 	    "Постачальник");           
УкрГруппировки.ДобавитьЗначение("Счет", 	        "Рахунок обліку");
УкрГруппировки.ДобавитьЗначение("МестоХранения", 	"Місце зберігання");
УкрГруппировки.ДобавитьЗначение("Номенклатура",     "Номенклатура");
УкрГруппировки.ДобавитьЗначение("ПрихДокумент", 	"Партія");
УкрГруппировки.ДобавитьЗначение("День", 	    	"День");
УкрГруппировки.ДобавитьЗначение("Документ",	 	    "Документ рухів");

ВидСтоимости.УдалитьВсе();
ВидСтоимости.ДобавитьЗначение("ОбеСтоимости","Все"); 
ВидСтоимости.ДобавитьЗначение("Полная", 	 "Полная себестоимость");
ВидСтоимости.ДобавитьЗначение("Собственная","Собственная себестоимость или сумма в розн. ценах");
ВидСтоимости.ТекущаяСтрока(1);

// расставляем флаги и значения
фБезГрупп  	= 2;
