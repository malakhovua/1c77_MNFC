// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ

Перем ОтобранныеДокументы;	// список отобранных документов        

Перем Т;		
Перем Обновить;
Перем Расшифровка; 
// используются для стандартного механизма кнопок "Обновить" и "Настройка"


// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ    

// ===============================
Функция ПредставлениеРасчСчета(Конт,Язык="")
	Если Конт.РСчет.Выбран()=0 Тогда
		Возврат "Выберите расчетный счет!";
	КонецЕсли;
	Если Язык="у" Тогда
		Возврат "Р/р № "+СокрЛП(Конт.РСчет.НомерСчета)+" у "+СокрЛП(Конт.РСчет.Банк);
	Иначе
		Возврат "Р/с № "+СокрЛП(Конт.РСчет.НомерСчета)+" в "+СокрЛП(Конт.РСчет.Банк);	
	КонецЕсли;
КонецФункции

// ===============================
// Название: ПолучитьВсеПодчиненныеДокументы
// Параметры:    
// 		Док - документ
//		СписокДок - список подчиненных документов
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Наименование,.
// Описание:
//    
//
Процедура ПолучитьВсеПодчиненныеДокументы(Док,СписокДок)
	Если СписокДок.НайтиЗначение(Док.ТекущийДокумент())<=0 Тогда
		СписокДок.ДобавитьЗначение(Док.ТекущийДокумент());
		ПодчинДок = СоздатьОбъект("Документ");
		
		Рег = СоздатьОбъект("Регистр.ВзаиморасчетыПокупателей");
		Рег.УстановитьЗначениеФильтра("Счет",Док.ТекущийДокумент());
		Рег.ВыбратьДвижения(,,);
		Пока Рег.ПолучитьДвижение()=1 Цикл
			ПодчинДок = Рег.ТекущийДокумент();
			ПолучитьВсеПодчиненныеДокументы(ПодчинДок,СписокДок);
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры		// ПолучитьВсеПодчиненныеДокументы

// ===============================
// Название: ПолучитьВыводимыеНаПечатьДанные
// Параметры:    
// 		Док - документ
//		ПечСумма - строка с суммой документа, выводимая на печать 
//		ПечСтатус - строка со статусом документа, выводимая на печать 
//		ПечИнформация - строка с информацией по документу, выводимая на печать
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Наименование,.
// Описание:
//    
//
Процедура ПолучитьВыводимыеНаПечатьДанные(Док,ПечСумма,ПечИнформация,ПечСтатус)
	
	Если глЕстьРеквизитШапки("Валюта",Док.Вид())=Нет Тогда
		ПечВалюта = СокрЛП(Гривня.Кратко);
	Иначе
		ПечВалюта = СокрЛП(Док.Валюта.Кратко);
	КонецЕсли;	
	
	ПечСумма="";
	РеквСумма=Метаданные.Документ(Док.Вид()).РеквизитТабличнойЧасти("СуммаСНДС");
    Если РеквСумма.Выбран()=1 Тогда
		ПечСумма=?(РеквСумма.ИтогПоКолонке=1,Формат(Док.Итог("СуммаСНДС"),"Ч17.2-,")+" "+ПечВалюта,"");
	Иначе
		РеквСумма=Метаданные.Документ(Док.Вид()).РеквизитШапки("СуммаСНДС");
	    Если РеквСумма.Выбран()=1 Тогда
			ПечСумма=Формат(Док.СуммаСНДС,"Ч17.2-,")+" "+ПечВалюта;
		КонецЕсли;
	КонецЕсли;                       
	
	РеквКонтрагент=Метаданные.Документ(Док.Вид()).РеквизитШапки("Контрагент");
    Если РеквКонтрагент.Выбран()=1 Тогда
		ПечКонтрагент="Клиент: "+СокрЛП(Док.Контрагент);
	Иначе
		Если Док.Вид()="Перемещение" Тогда
			ПечКонтрагент="Отправитель: "+СокрП(Док.Склад)+РазделительСтрок+"Получатель: "+СокрП(Док.НовыйСклад);
		ИначеЕсли Док.Вид()="СписаниеТМЦ" Тогда
			ПечКонтрагент="Склад: "+СокрП(Док.МестоХранения)+"; ";
		ИначеЕсли Док.Вид()="БанковскаяВыписка" Тогда
			ПечКонтрагент="Расчетный счет: "+СокрП(ПредставлениеРасчСчета(Док));
		Иначе
			ПечКонтрагент="";
		КонецЕсли;
	КонецЕсли;                   
	    
	ПечКонтрагент = СокрЛП(ПечКонтрагент);
	Если ПечКонтрагент<>"" Тогда
		ПечКонтрагент = ПечКонтрагент+". "
	КонецЕсли;	
	    
	ПечДоговор="";
	Если глЕстьРеквизитШапки("Договор",Док.Вид())=Да Тогда
	    Если Док.Договор.Выбран()>0 Тогда
			ПечДоговор="Договор: "+СокрЛП(Док.Договор)+". ";
		КонецЕсли;	
	КонецЕсли;
	
	ПечИнформация = ПечКонтрагент + ПечДоговор;
	
	ПечСтатус = "";
	Если (Док.ПометкаУдаления()>0) Тогда
		ПечСтатус = "Помечен на уд.";
	ИначеЕсли (Док.Проведен()>0) Тогда
		ПечСтатус = "Проведен";
	КонецЕсли;	       
	
КонецПроцедуры		// ПолучитьВыводимыеНаПечатьДанные

// ===============================
// Название: ОперацияВозврата
// Параметры:    
//   Возвращаемое значение: 0, если операция не явл. возвратом 
//							1, если операция явл. возвратом
// Вызывается из формул элементов диалога:
// Наименование,.
// Описание:
//
Функция ОперацияВозврата(Рег)
	    
	Если (Рег.КодОперации=ВозвратАвансовойОтгрузки)ИЛИ
		(Рег.КодОперации=ВозвратПостОтгрузки) ИЛИ
		(Рег.КодОперации=ВозвратАвансовойОплаты) ИЛИ
		(Рег.КодОперации=ВозвратПостОплаты) 
		Тогда
			Возврат 1;
	КонецЕсли;
	                  
	Возврат 0;
	
КонецФункции


// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
                           
// ===============================
// Название: ДоступностьФильтраСравненияСумм
// Параметры:    
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//		флаг аквивизации фильтра сравнения сумм
// Наименование,.
// Описание:
//    в зависимости от значения флага активизации фильтра сравнения сумм 
//		устанавливает доступность этого фильтра
//
Процедура ДоступностьФильтраСравненияСумм()    
	
	Форма.Знак.Доступность(ВклФильтрСравненияСумм);
	Форма.ЛевСумма.Доступность(ВклФильтрСравненияСумм);
	Форма.ПравСумма.Доступность(ВклФильтрСравненияСумм);
	
КонецПроцедуры		// ДоступностьФильтраСравненияСумм	

// ===============================
Процедура ДоступностьЭлементов(ВсеЭлементы=0)           
	
	ЭлементДиалога = Форма.АктивныйЭлемент();

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбФирма") Или (ЭлементДиалога="кХВыбФирма") Тогда
		Форма.кХВыбФирма.Доступность(ВыбФирма.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбКонтрагент") Или (ЭлементДиалога="кХВыбКонтрагент") Тогда
		Форма.кХВыбКонтрагент.Доступность(ВыбКонтрагент.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбДоговор") Или (ЭлементДиалога="кХВыбДоговор") Тогда
		Форма.кХВыбДоговор.Доступность(ВыбДоговор.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбАвтор") Или (ЭлементДиалога="кХВыбАвтор") Тогда
		Форма.кХВыбАвтор.Доступность(ВыбАвтор.Выбран()); 
	КонецЕсли;

КонецПроцедуры  	// ДоступностьЭлементов

// ===============================
// Название: Сформировать
// Параметры:    
//   Режим = "Печать"     
//   ЗакрытьЭкран - флаг того, что после формирования отчета надо закрыть экран	
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//		кнопки "сформировать" и "групповая обработка" и "ОК" 
// Наименование,.
// Описание:
//    в зависимости от режима формирует реестр документов или запускает групповую обработку 
//
Процедура Сформировать(Режим,ЗакрытьЭкран=0)
	
	Перем СписокДок;			// список подчиненных документов
    Перем ПереченьКодовОпераций;
    Перем КонтрагентСчета;		// контрагент обрабатываемого в данный момент счета
    
	СпособВычЛевСуммы = ВРег(ЛевСумма.ПолучитьЗначение(ЛевСумма.ТекущаяСтрока())); 
	СпособВычПравСуммы = ВРег(ПравСумма.ПолучитьЗначение(ПравСумма.ТекущаяСтрока()));
	ВыбЗнак = ВРег(Знак.ПолучитьЗначение(Знак.ТекущаяСтрока()));
	
	Док=СоздатьОбъект("Документ.Счет");
	
	Док.ВыбратьДокументы(Дата1,Дата2);
	
	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
    Т.ИсходнаяТаблица( "Таблица" );
    
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "РеестрСчетов");
    
	// все настройки помещаем в список
	Расшифровка.Установить("Дата1", Дата1);
    Расшифровка.Установить("Дата2", Дата2);
	
	Расшифровка.Установить("ВыбФирма", ВыбФирма);
	Расшифровка.Установить("ВыбКонтрагент", ВыбКонтрагент);
	Расшифровка.Установить("ВыбДоговор", ВыбДоговор);
	Расшифровка.Установить("ВыбАвтор", ВыбАвтор);
	
	Расшифровка.Установить("ВклПроведенные", ВклПроведенные); 
	Расшифровка.Установить("ВклТекущие", ВклТекущие);
	Расшифровка.Установить("ВклУдаленные", ВклУдаленные);
	                                             
	Расшифровка.Установить("ВклФильтрСравненияСумм", ВклФильтрСравненияСумм);
	Расшифровка.Установить("ЛевСумма", ЛевСумма.ТекущаяСтрока());
	Расшифровка.Установить("Знак", Знак.ТекущаяСтрока());
	Расшифровка.Установить("ПравСумма", ПравСумма.ТекущаяСтрока());
		
	Заг = "";
	
	Если ВыбФирма.Выбран()>0 Тогда
		Заг=Заг+"По фирме "+СокрП(ВыбФирма)+". ";
	КонецЕсли; 
	Если ВыбКонтрагент.Выбран()>0 Тогда
		Заг=Заг+"По контрагенту "+СокрП(ВыбКонтрагент)+". ";
	КонецЕсли; 
	Если ВыбДоговор.Выбран()>0 Тогда
		Заг=Заг+"По договору "+СокрП(ВыбДоговор)+". ";
	КонецЕсли; 
	Если ВыбАвтор.Выбран()>0 Тогда
		Заг=Заг+"Автор документов: "+СокрП(ВыбАвтор)+". ";
	КонецЕсли;                            
	
	Т.ВывестиСекцию("Кнопки");
	Т.ВывестиСекцию("Отчет");
	
		
	НПП=0;
	Пока Док.ПолучитьДокумент()=1 Цикл
        
		//Проверка статуса
		Если (Док.ПометкаУдаления()>0) Тогда
			Если ВклУдаленные=0 Тогда
				Продолжить;
			КонецЕсли;
		ИначеЕсли (Док.Проведен()>0) Тогда
			Если ВклПроведенные=0 Тогда
				Продолжить;
			КонецЕсли;	       
		Иначе	           
			Если ВклТекущие=0 Тогда
				Продолжить;
			КонецЕсли;	        
		КонецЕсли;	       
		
		//Проверка договора, к которому относится документ
		Если ВыбДоговор.Выбран() = 0 Тогда
		ИначеЕсли глЕстьРеквизитШапки("Договор",Док.Вид())=Нет Тогда
			Продолжить;
		ИначеЕсли (Док.Договор <> ВыбДоговор) Тогда
		    Продолжить;
		КонецЕсли;
		
		//Проверка контрагента, к которому относится документ
		Если ВыбКонтрагент.Выбран() = 0 Тогда
		ИначеЕсли глЕстьРеквизитШапки("Контрагент",Док.Вид())=Нет Тогда
			Продолжить;
		ИначеЕсли (Док.Контрагент <> ВыбКонтрагент) Тогда
		    Продолжить;
		КонецЕсли;
		
		//Проверка фирмы, к которой относится документ
		Если ВыбФирма.Выбран() = 0 Тогда
		ИначеЕсли (Док.Фирма <> ВыбФирма) Тогда
		    Продолжить;
		КонецЕсли;

		//Проверка автора
		Если ВыбАвтор.Выбран() = 0 Тогда
		ИначеЕсли (Док.Автор <> ВыбАвтор) Тогда
		    Продолжить;
		КонецЕсли;
		
		// надо получить список привязанных документов и их сумм
	
		СписокДок = СоздатьОбъект("СписокЗначений");
		ПолучитьВсеПодчиненныеДокументы(Док,СписокДок);
		             
		КонтрагентСчета = Док.Контрагент.ТекущийЭлемент();
		
		ВалютаКредита = Гривня;
		
		ТаблицаДокССуммами = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаДокССуммами.НоваяКолонка("Док"); 
		ТаблицаДокССуммами.НоваяКолонка("Отгружено"); 
		ТаблицаДокССуммами.НоваяКолонка("Оплачено");
		ЧислоСтрок=0;
		                    
		Рег = СоздатьОбъект("Регистр.ВзаиморасчетыПокупателей");
		                                   
		Для Индекс=1 По СписокДок.РазмерСписка() Цикл    
			
			Докум = СписокДок.ПолучитьЗначение(Индекс);	
		
			Если Рег.ВыбратьДвиженияДокумента(Докум.ТекущийДокумент()) >0 Тогда
		
				ЧислоСтрок=ЧислоСтрок+1;
				ТаблицаДокССуммами.НоваяСтрока(ЧислоСтрок);
				ТаблицаДокССуммами.ПолучитьСтрокуПоНомеру(ЧислоСтрок);
				ТаблицаДокССуммами.Док = Докум.ТекущийДокумент();
				ТаблицаДокССуммами.Отгружено = 0;
				ТаблицаДокССуммами.Оплачено = 0;
			 
				Пока Рег.ПолучитьДвижение()>0 Цикл             
					Если (Рег.Контрагент.ТекущийЭлемент()<>КонтрагентСчета.ТекущийЭлемент())
					 ИЛИ (Рег.Счет.ТекущийДокумент()<>Док.ТекущийДокумент()) Тогда						
						Продолжить;
					КонецЕсли;
				    	              
					СуммаДолга = Рег.ДолгОсн;
					
					Если (ОперацияВозврата(Рег)=0) Тогда
						Если Рег.Приход>0 Тогда
							ТаблицаДокССуммами.Отгружено = ТаблицаДокССуммами.Отгружено + СуммаДолга;
						КонецЕсли;	     
						Если Рег.Расход>0 Тогда
							ТаблицаДокССуммами.Оплачено = ТаблицаДокССуммами.Оплачено + СуммаДолга;
						КонецЕсли;
					Иначе         
						Если Рег.Приход>0 Тогда
							ТаблицаДокССуммами.Оплачено = ТаблицаДокССуммами.Оплачено - СуммаДолга; 
						КонецЕсли;	     
						Если Рег.Расход>0 Тогда
							ТаблицаДокССуммами.Отгружено = ТаблицаДокССуммами.Отгружено - СуммаДолга;
						КонецЕсли;
					КонецЕсли;	
				
		    	КонецЦикла;
		
			КонецЕсли;
		
		КонецЦикла;
		
		Отгружено = ТаблицаДокССуммами.Итог("Отгружено");
		Оплачено = ТаблицаДокССуммами.Итог("Оплачено");
		Выписано = глПересчет(Док.Итог("СуммаСНДС"),Док.Валюта,Док.ДатаДок,ВалютаКредита,Док.ДатаДок,);
		
		Если ВклФильтрСравненияСумм<>0 Тогда
			// проверяем фильтр             
			
			Если СпособВычЛевСуммы="ВЫПИСАНО" Тогда 
				ЗначЛевСуммы = Выписано;
			ИначеЕсли СпособВычЛевСуммы="0" Тогда 
				ЗначЛевСуммы = 0;
			ИначеЕсли СпособВычЛевСуммы="ОТГРУЖЕНО" Тогда 
				ЗначЛевСуммы = Отгружено;
			ИначеЕсли СпособВычЛевСуммы="ОПЛАЧЕНО" Тогда 
				ЗначЛевСуммы = Оплачено;
			Иначе	                   
				ЗначЛевСуммы = 0;
			КонецЕсли;	
			
			Если СпособВычПравСуммы="ВЫПИСАНО" Тогда 
				ЗначПравСуммы = Выписано;
			ИначеЕсли СпособВычПравСуммы="0" Тогда 
				ЗначПравСуммы = 0;
			ИначеЕсли СпособВычПравСуммы="ОТГРУЖЕНО" Тогда 
				ЗначПравСуммы = Отгружено;
			ИначеЕсли СпособВычПравСуммы="ОПЛАЧЕНО" Тогда 
				ЗначПравСуммы = Оплачено;
			Иначе	                   
				ЗначПравСуммы = 0;
			КонецЕсли;	
			            
			// сравнивать будем округленные величины, 
			// чтобы отсечь ошибку округления на N-ом знаке
			ЗначЛевСуммы = Окр(ЗначЛевСуммы,2,1); 
			ЗначПравСуммы = Окр(ЗначПравСуммы,2,1);
			
			Если ВыбЗнак="=" Тогда 
				Если ЗначЛевСуммы<>ЗначПравСуммы Тогда
					Продолжить;
				КонецЕсли;
				
			ИначеЕсли ВыбЗнак="<>" Тогда 
				Если ЗначЛевСуммы=ЗначПравСуммы Тогда
					Продолжить;
				КонецЕсли;
				
			ИначеЕсли ВыбЗнак="<" Тогда 
				Если ЗначЛевСуммы>=ЗначПравСуммы Тогда
					Продолжить;
				КонецЕсли;
				
			ИначеЕсли ВыбЗнак=">" Тогда 
				Если ЗначЛевСуммы<=ЗначПравСуммы Тогда
					Продолжить;
				КонецЕсли;
				
			ИначеЕсли ВыбЗнак="<=" Тогда 
				Если ЗначЛевСуммы>ЗначПравСуммы Тогда
					Продолжить;
				КонецЕсли;
				
			ИначеЕсли ВыбЗнак=">=" Тогда 
				Если ЗначЛевСуммы<ЗначПравСуммы Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЕсли;	
		
		Состояние("Обработка "+Док.ДатаДок);

		НПП=НПП+1;
		
		ПечОтгружено=глФРМ(Отгружено,ВалютаКредита,1);
		ПечОплачено=глФРМ(Оплачено,ВалютаКредита,1);
		ПечВыписано=глФРМ(Выписано,ВалютаКредита,1);
	    
		ПечСумма = ""; 
		ПечСтатус = "";			
		ПечИнформация = "";
		
		ПолучитьВыводимыеНаПечатьДанные(Док,ПечСумма,ПечИнформация,ПечСтатус);
		
		Т.ВывестиСекцию("Счет");
        
		ПечВыписано="";
		               
		ТаблицаДокССуммами.ВыбратьСтроки();
		Пока ТаблицаДокССуммами.ПолучитьСтроку()>0 Цикл
			ПодчДок = ТаблицаДокССуммами.Док; 
			ПечОтгружено=глФРМ(ТаблицаДокССуммами.Отгружено,ВалютаКредита,1);
			ПечОплачено=глФРМ(ТаблицаДокССуммами.Оплачено,ВалютаКредита,1);
		   
			ПечСумма = ""; 
			ПечСтатус = "";			
			ПечИнформация = "";
			
			ПолучитьВыводимыеНаПечатьДанные(ПодчДок,ПечСумма,ПечИнформация,ПечСтатус);
			
			Т.ВывестиСекцию("Докум");
		КонецЦикла;	
		
	КонецЦикла;

	Т.ВывестиСекцию("КонецОтчета");
	Т.Опции(0,0,7,0,"ОпцииПечатиРеестра");
	Т.Защита(Константа.ФлагЗащитыТаблиц);		
	Т.ТолькоПросмотр(1);
	Т.ОбластьПечати(2);
	Т.Показать("Реестр счетов",""); 
	
	Если (Обновить = 2)ИЛИ(ЗакрытьЭкран=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры 		// Сформировать

// ===============================
// Название: ПриВыбореДоговора
// Параметры:    
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//		поле ввода договора
// Наименование,.
// Описание:
//    если выбрали договор и не выбран контрагент, то выбираем его
//
Процедура ПриВыбореДоговора()	
	Если ВыбДоговор.Выбран()=0 Тогда
		Возврат;
	КонецЕсли;
	Если ВыбКонтрагент.Выбран()=0 Тогда
		ВыбКонтрагент = ВыбДоговор.Контрагент;
	КонецЕсли;	
	Если ВыбФирма.Выбран()=0 Тогда
		ВыбФирма = ВыбДоговор.Фирма;
	КонецЕсли;	
КонецПроцедуры 		// ПриВыбореДоговора
    
// ===============================
Процедура ПриВыбореКонтрагента()	
	Если (ВыбКонтрагент.Выбран()=0) Или (ВыбДоговор.Выбран()=0) Тогда
		Возврат;
	КонецЕсли;	
	Если ВыбКонтрагент <> ВыбДоговор.Контрагент Тогда
		ВыбДоговор = 0;
	КонецЕсли;	
КонецПроцедуры


// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

// ===============================
Процедура ПриНачалеВыбораЗначения(Элемент,Флаг)	// Предопределенная процедура
	Если Элемент="ВыбДоговор" Тогда	// выбираем договор
		Фрм = СоздатьОбъект("СписокЗначений");
		Фрм.ДобавитьЗначение("ДоговораКонтрагентов","ГрафаОтбора");
		Фрм.ДобавитьЗначение(ВыбКонтрагент,"Контрагент");
		ОткрытьПодбор("Журнал.ПолныйЖурнал","ДляВыбораДоговоровИСчетов",Фрм,0,ВыбДоговор);
		Флаг=0;
	КонецЕсли;	
КонецПроцедуры	// ПриНачалеВыбораЗначения
                
// ===============================
Процедура ПриОткрытии()	// Предопределенная процедура     
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		Дата1 = глРасшифровка.Получить("Дата1");
		Дата2 = глРасшифровка.Получить("Дата2");
	                        
		ВыбФирма = глРасшифровка.Получить("ВыбФирма");
		ВыбКонтрагент = глРасшифровка.Получить("ВыбКонтрагент"); 
		ВыбДоговор = глРасшифровка.Получить("ВыбДоговор"); 
		ВыбАвтор = глРасшифровка.Получить("ВыбАвтор"); 
		
		ВклПроведенные = глРасшифровка.Получить("ВклПроведенные"); 
		ВклТекущие = глРасшифровка.Получить("ВклТекущие"); 
		ВклУдаленные = глРасшифровка.Получить("ВклУдаленные"); 
		
		ВклФильтрСравненияСумм = глРасшифровка.Получить("ВклФильтрСравненияСумм"); 
		
		ЛевСумма.ТекущаяСтрока(глРасшифровка.Получить("ЛевСумма"));
        Знак.ТекущаяСтрока(глРасшифровка.Получить("Знак"));
        ПравСумма.ТекущаяСтрока(глРасшифровка.Получить("ПравСумма"));
        
		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать("Печать");
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;
	
	ДоступностьФильтраСравненияСумм();    
	ДоступностьЭлементов(1);
КонецПроцедуры	 	//	ПриОткрытии 

// ===============================
Процедура ВводНового()	// Предопределенная процедура
	ДоступностьФильтраСравненияСумм();
КонецПроцедуры		//	ВводНового

// ===============================
// ТЕЛО МОДУЛЯ

Дата2=ПолучитьДатуТА();
Дата1=глВосстановитьЗначение(,"ОсновнаяДатаНачалаОтчета");
Если Число(Дата1)=0 Тогда
	Дата1='01.01.1998';
Конецесли;

НачальнаяДата = Константа.ДатаНачалаРаботы;

ВыбФирма = глВосстановитьЗначение(,"БазФирма");

ВыбКонтрагент.ВыборГруппы(0);

ВклПроведенные=1; 
ВклТекущие=1; 
ВклУдаленные=1;  
                        
Знак.УдалитьВсе();
Знак.ДобавитьЗначение(">"); 
Знак.ДобавитьЗначение(">="); 
Знак.ДобавитьЗначение("<"); 
Знак.ДобавитьЗначение("<="); 
Знак.ДобавитьЗначение("=");
Знак.ДобавитьЗначение("<>");
Знак.ТекущаяСтрока(1);

ЛевСумма.УдалитьВсе();
ЛевСумма.ДобавитьЗначение("Выписано"); 
ЛевСумма.ДобавитьЗначение("0");
ЛевСумма.ДобавитьЗначение("Отгружено"); 
ЛевСумма.ДобавитьЗначение("Оплачено"); 
ЛевСумма.ТекущаяСтрока(1); 

ПравСумма.УдалитьВсе();
ПравСумма.ДобавитьЗначение("Выписано"); 
ПравСумма.ДобавитьЗначение("0");
ПравСумма.ДобавитьЗначение("Отгружено"); 
ПравСумма.ДобавитьЗначение("Оплачено"); 
ПравСумма.ТекущаяСтрока(1);

