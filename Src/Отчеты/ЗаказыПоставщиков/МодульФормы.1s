Перем Таб;
Перем Обновить, списВЗ, СписЗак;
Перем Расшифровка;
Перем СтрФ, ИтПриход, ИтЗаказ, ИтПриходПрч, ИтПриходПН, ПредТМЦ, ИтРасходПр, ИтРасходНО, ИтПриходОИ, План;
Перем ТЗ;
Перем СТовар;

Перем ДокНачала, ДокКонца;
Перем ПечПоставщик; 
Перем ПечРодитель;
Перем ПечМатериал;
Перем ПечПлановый;
Перем ПечНеобхКво;
Перем ПечОстаток;
Перем ПечОстатокДоп;
Перем ПечРасход;
Перем ПечПриход;
Перем ПечЗаказ;
Перем ПечКонтроль;
Перем ПечПриходПН;
Перем ПечПриходПрч;
Перем ПечПриходОИ;
Перем ПечРасходПр;
Перем ПечРасходНО;
Перем ПечРасходАкц;
Перем ПечВЗ;
Перем ПечЗаказО;
Перем ПечЗаказОП;
Перем ПечРасшифровкаТМЦ;
Перем ПечПотребность;
Перем ПечПотребностьАкц;
Перем ТЗМатериалов;
Перем Д1, Д2;
Перем СписАкц;
Перем СписАкцР;

Процедура ДобавитьСтрокуТЗ(ТМЦ)
	ТЗ.НоваяСтрока();
	ТЗ.ТМЦ = ТМЦ;
	ТЗ.Родитель = ТЗ.ТМЦ.Родитель;
	ТЗ.Акции = СоздатьОбъект("СписокЗначений");
	ТЗ.АкцииР = СоздатьОбъект("СписокЗначений");
КонецПроцедуры

Процедура ДобавитьВСписокТаблицы(Спис, ИмСпис);
	Для Инд = 1 По Спис.РазмерСписка() Цикл
		Значение = Спис.ПолучитьЗначение(Инд);
		Если ТЗ.ПолучитьЗначение(ТЗ.НомерСтроки, ИмСпис).НайтиЗначение(Значение) = 0 Тогда
			ТЗ.ПолучитьЗначение(ТЗ.НомерСтроки, ИмСпис).ДобавитьЗначение(Значение);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
	
Процедура ДобавитьДопМатериалВТЗ(ТМЦ, Кво, ИмяКол, Спис = "", ПлюсоватьРасход = 0)
	Если списТовар.РазмерСписка() > 0 Тогда
		Если ((фВсеКроме = 0) И (списТовар.Принадлежит(ТМЦ) = 0)) Тогда
			Возврат;
		ИначеЕсли ((фВсеКроме = 1) И (списТовар.Принадлежит(ТМЦ) = 1)) Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Стр = 0;
	Если ТЗ.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 0 Тогда
		ДобавитьСтрокуТЗ(ТМЦ);
	Иначе
		ТЗ.ПолучитьСтрокуПоНомеру(Стр);
	КонецЕсли;
	
	ТЗ.УстановитьЗначение(ТЗ.НомерСтроки, ИмяКол, ТЗ.ПолучитьЗначение(ТЗ.НомерСтроки, ИмяКол) + Кво);
	Если (ПлюсоватьРасход = 1) И (фНеПрибавлятьРасход = 0) Тогда
		ТЗ.Расход = ТЗ.Расход + Кво;
	КонецЕсли;
	
	Если ТипЗначенияСтр(Спис) = "СписокЗначений" Тогда
		ДобавитьВСписокТаблицы(Спис, ?(ИмяКол = "РасходАкц", "Акции", "АкцииР"));
	КонецЕсли;
КонецПроцедуры
        
Процедура ДобавитьПоНормамАкции(ЗапросАкции, Кво, СписАкций, тбНормы, ПлюсоватьРасход, ИмяКол)
	Нрм = глПолучитьНормыДляЗаказа(ЗапросАкции.ТМЦ, ЗапросАкции.ДатаДок);
	тбНормы.УдалитьСтроки();
	глПолучитьНормы(ЗапросАкции.ТМЦ, , Кво, ЗапросАкции.ДатаДок, , тбНормы,,,,Нрм);
	тбНормы.ВыбратьСтроки();
	Пока тбНормы.ПолучитьСтроку() = 1 Цикл
		ДобавитьДопМатериалВТЗ(тбНормы.Материал, тбНормы.Кво, ИмяКол, СписАкций, ПлюсоватьРасход);
	КонецЦикла;			
КонецПроцедуры

//======================================================================
Процедура ДополнитьСписываемыеПроПродажеМатериаламиУпаковки(Владелец, ИмяСпр, ТМЦ_ВУ, ФормаУпаковки, ДатаДок, Кво)
	СпрМатериалыУпаковки = СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковок" + ИмяСпр);
	СпрМатериалыУпаковки.ИспользоватьВладельца(Владелец);
	СпрМатериалыУпаковки.ВыбратьЭлементы();
	Пока СпрМатериалыУпаковки.ПолучитьЭлемент() = 1 Цикл
		Материал = СпрМатериалыУпаковки.Материал.Получить(ДатаДок);
		Если ПустоеЗначение(Материал) = 0 Тогда
			ПозСт = 0;
			КвоДляТаблицы = 0;
			Если ИмяСпр = "Форм" Тогда
				КвоДляТаблицы = (СпрМатериалыУпаковки.НормаСписания.Получить(ДатаДок)  / Владелец.Кратность / ТМЦ_ВУ.ВесУпаковки.Получить(ДатаДок)) * Кво;
			Иначе
				КвоДляТаблицы = СпрМатериалыУпаковки.НормаСписания.Получить(ДатаДок) * Кво;					
			КонецЕсли;
			Если КвоДляТаблицы <> 0 Тогда
				ТЗМатериалов.НоваяСтрока();
				ТЗМатериалов.ТМЦ = Материал;
				ТЗМатериалов.Кво = КвоДляТаблицы;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // гл

//====================================================================== УМК Сандомирский В.Ю. (17.09.14)
Функция ВернутьСписокТМЦ(БазоваяТЗ, ИндексТМЦ)
	СпТМЦ = СоздатьОбъект("СписокЗначений");
	БазоваяТЗ.ВыбратьСтроки();
	Пока БазоваяТЗ.ПолучитьСтроку() = 1 Цикл
		Если БазоваяТЗ.ТМЦ_Индекс = ИндексТМЦ Тогда
			СпТМЦ.ДобавитьЗначение(БазоваяТЗ.ТМЦ,БазоваяТЗ.ТМЦ.Наименование);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат СпТМЦ;
	
КонецФункции // ВернутьСписокТМЦ()


//====================================================================== УМК Сандомирский В.Ю. (22.09.14) дополнить список товаров
Процедура ДополнитьСписТвар()
	
	ВременныйСписокТоваров = СоздатьОбъект("СписокЗначений");
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	
	СтрТыр = "";
	Для к=1 По списТовар.РазмерСписка() Цикл
		ЗначениеСпискаТоваров = списТовар.ПолучитьЗначение(к,СтрТыр);
 		ВременныйСписокТоваров.ДобавитьЗначение(ЗначениеСпискаТоваров,СтрТыр);
 		Если ПустоеЗначение(ЗначениеСпискаТоваров.ТМЦДляПрихода.Получить(КонДата)) <> 1  Тогда
 			ЗначениеВСписок = ЗначениеСпискаТоваров.ТМЦДляПрихода.Получить(КонДата);
 			ВременныйСписокТоваров.ДобавитьЗначение(ЗначениеВСписок.ТекущийЭлемент(),Строка(ЗначениеВСписок));		
 		КонецЕсли;
 		
 		Если ПустоеЗначение(ЗначениеСпискаТоваров.ТМЦДляСписания.Получить(КонДата)) <> 1  Тогда
 			ЗначениеВСписок = ЗначениеСпискаТоваров.ТМЦДляСписания.Получить(КонДата);
 			ВременныйСписокТоваров.ДобавитьЗначение(ЗначениеВСписок.ТекущийЭлемент(),Строка(ЗначениеВСписок));		
 		КонецЕсли;
 		
 		СпрТМЦ.ВыбратьЭлементы();
		Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
			Если (СпрТМЦ.ТМЦДляСписания.Получить(КонДата) = ЗначениеСпискаТоваров) ИЛИ (СпрТМЦ.ТМЦДляПрихода.Получить(КонДата) = ЗначениеСпискаТоваров) Тогда
				ВременныйСписокТоваров.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент(),Строка(СпрТМЦ));
			КонецЕсли;
		КонецЦикла;
 			
	КонецЦикла;
	
	
	ТЗ_Сортировка  = СоздатьОбъект("ТаблицаЗначений");
	ВременныйСписокТоваров.Выгрузить(ТЗ_Сортировка);
	ТЗ_Сортировка.Свернуть("1","");
	
	
	списТовар.УдалитьВсе();
	
	ТЗ_Сортировка.Выгрузить(списТовар,,,1);
	
КонецПроцедуры // ДополнитьСписТвар()

//======================================================================
Процедура СоздатьРасшифровку()
	// все настройки помещаем в список
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "ЗаказыПоставщиков");
	Расшифровка.Установить("списТовар", списТовар);
	Расшифровка.Установить("фКонОст", фКонОст);
	Расшифровка.Установить("фСклад", фСклад);
	Расшифровка.Установить("фПриходП", фПриходП);
	Расшифровка.Установить("фРасходП", фРасходП);
	Расшифровка.Установить("фЗаказ", фЗаказ);
	Расшифровка.Установить("фЗаказО", фЗаказО);
	Расшифровка.Установить("фЗаказОП", фЗаказОП);
	Расшифровка.Установить("фПустоеКво", фПустоеКво);
	Расшифровка.Установить("фКонтроль", фКонтроль);
	Расшифровка.Установить("фПлан", фПлан);
	Расшифровка.Установить("Коэф", Коэф);
	Расшифровка.Установить("фПодробныйПриход", фПодробныйПриход);
	Расшифровка.Установить("фСортГруппа", фСортГруппа);
	Расшифровка.Установить("фБезУ3", фБезУ3);	
	Расшифровка.Установить("ДатаНачалаПросмотраП", ДатаНачалаПросмотраП);	
	Расшифровка.Установить("НачДата", НачДата);
	Расшифровка.Установить("КонДата", КонДата);	
	Расшифровка.Установить("НачДата1", НачДата1);
	Расшифровка.Установить("КонДата1", КонДата1);	
	Расшифровка.Установить("НачДата2", НачДата2);
	Расшифровка.Установить("КонДата2", КонДата2);		
	Расшифровка.Установить("НачДатаА", НачДатаА);
	Расшифровка.Установить("КонДатаА", КонДатаА);	
	Расшифровка.Установить("ВыбТМЦ", ВыбТМЦ);
	Расшифровка.Установить("фПотребностьЗак", фПотребностьЗак);
	Расшифровка.Установить("фПотребностьАкц", фПотребностьАкц);
	Расшифровка.Установить("фВсеКроме", фВсеКроме);
	Расшифровка.Установить("ДокНачала", ДокНачала);
    Расшифровка.Установить("ДокКонца", ДокКонца);	
	Расшифровка.Установить("фРасходАкц", фРасходАкц);
	Расшифровка.Установить("фНеПрибавлятьРасход", фНеПрибавлятьРасход);
КонецПроцедуры

Процедура ВывестиСекции(ИмСекц,ТекТЗ="")	
	Таб.ВывестиСекцию(ИмСекц + "|Основная");
	
	Если фПустоеКво = 1 Тогда
		Таб.ПрисоединитьСекцию(ИмСекц + "|ПустоеКво");
	КонецЕсли;
	
	Если План = 1 Тогда
		ПланТек = 0;
		
		Если ТекТЗ <> "" Тогда//--- УМК Сандомирский В.Ю. (18.09.14)
			ПланТек = ТекТЗ.РасходПр * КоэФ - ТекТЗ.КонОст;
			Если фПотребностьЗак = 1 Тогда
				Если ТекТЗ.РасходПр * КоэФ < ТЗ.ПотребностьЗак Тогда
					ПланТек = ПланТек + ТЗ.ПотребностьЗак - ТекТЗ.РасходПр * КоэФ;
				КонецЕсли;
			КонецЕсли;
			ПечПлановый  = ПланТек;
		КонецЕсли;
		
		Таб.ПрисоединитьСекцию(ИмСекц + "|Плановый");
	КонецЕсли;

	Если фЗаказО = 1 Тогда
	    Таб.ПрисоединитьСекцию(ИмСекц + "|ЗаказО");
	КонецЕсли;

	Если План = 1 Тогда
		Если ТекТЗ <> "" Тогда//--- УМК Сандомирский В.Ю. (18.09.14)
			ПечНеобхКво  = ТекТЗ.РасходПр * КоэФ;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(ИмСекц + "|Плановый2");
	КонецЕсли;

	Если фКонОст = 1 Тогда
		Таб.ПрисоединитьСекцию(ИмСекц + "|КонОст");
	КонецЕсли;
	Если фСклад = 1 Тогда
		Таб.ПрисоединитьСекцию(ИмСекц + "|КонОстДоп");
	КонецЕсли;
	
	Если фРасходП = 1 Тогда
		Таб.ПрисоединитьСекцию(ИмСекц + "|РасходП");
		Если фРасходАкц = 1 Тогда
			Если ТекТЗ <> "" Тогда
				ПечРасходАкц = ТекТЗ.РасходАкц;				
			КонецЕсли;
			Таб.ПрисоединитьСекцию(ИмСекц + "|РасходАкц");
		КонецЕсли;
		Если фПодробныйРасход = 1 Тогда			
			Если ТекТЗ <> "" Тогда
				ПечРасходПр	 = ТекТЗ.РасходПр;
				ПечРасходНО  = ТекТЗ.РасходНО;
			КонецЕсли;			
			
		    Таб.ПрисоединитьСекцию(ИмСекц + "|ПодрРасход");
			Для Инд = 1 По списВЗ.РазмерСписка() Цикл
				Кол = "";
				списВЗ.ПолучитьЗначение(Инд, Кол);
				
				Если ТекТЗ <> "" Тогда//--- УМК Сандомирский В.Ю. (18.09.14)
 					ПечВЗ 		 = ТекТЗ.ПолучитьЗначение(ТекТЗ.НомерСтроки, Кол);
 				КонецЕсли;
 				
				Таб.ПрисоединитьСекцию(ИмСекц + "|ВЗ");
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если фПотребностьЗак = 1 Тогда
		Таб.ПрисоединитьСекцию(ИмСекц + "|ПотребнЗак");
	КонецЕсли;

	Если ФПотребностьАкц = 1 Тогда
		Таб.ПрисоединитьСекцию(ИмСекц + "|ПотребнАкц");
	КонецЕсли;
	
	Если фПриходП = 1 Тогда
		Таб.ПрисоединитьСекцию(ИмСекц + "|ПриходП");
		Если фПодробныйПриход = 1 Тогда
			
			Если ТекТЗ <> "" Тогда//--- УМК Сандомирский В.Ю. (18.09.14)
				ПечПриходПН  = ТекТЗ.ПриходПН;
				ПечПриходПрч = ТекТЗ.ПриходПрч;
				ПечПриходОИ	 = ТекТЗ.ПриходОИ;
			КонецЕсли;	
			
		    Таб.ПрисоединитьСекцию(ИмСекц + "|ПодрПриход");
		КонецЕсли;
	КонецЕсли;
	Если фЗаказ = 1 Тогда
		Таб.ПрисоединитьСекцию(ИмСекц + "|Заказ");
	КонецЕсли;
	Если фЗаказО = 1 Тогда
		Если фЗаказОП = 1 Тогда
			Для Инд = 1 По СписЗак.РазмерСписка() Цикл
				Кол = "";
				СписЗак.ПолучитьЗначение(Инд, Кол);
				КолЗ = Лев(Кол, 1) + "Р" + Сред(Кол, 2);
				
				Если ТекТЗ <> "" Тогда//--- УМК Сандомирский В.Ю. (18.09.14)
					ПечЗаказОП 	 = ТекТЗ.ПолучитьЗначение(ТекТЗ.НомерСтроки, Кол); 
					ПечЗаказОП_З = ТекТЗ.ПолучитьЗначение(ТекТЗ.НомерСтроки, КолЗ)
				КонецЕсли;	
				
				Таб.ПрисоединитьСекцию(ИмСекц + "|ЗаказОП");
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	Если фКонтроль = 1 Тогда
		Таб.ПрисоединитьСекцию(ИмСекц + "|Контроль");
	КонецЕсли;
КонецПроцедуры

Процедура ОбработатьЗапросПоТЧДокументаПотребности(ЗапросЗаказыКл)	
	СпрРазрешенныеВидыУпаковокТМЦ 	= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ"); 
	
	Пока ЗапросЗаказыКл.Группировка(1) = 1 Цикл
		Пока ЗапросЗаказыКл.Группировка(2) = 1 Цикл
			СПриПродаже = ЗапросЗаказыКл.ТМЦ.ТМЦСписанияПриПродаже.Получить(ЗапросЗаказыКл.ДатаДок);
			
			Если ПустоеЗначение(СПриПродаже) = 0 Тогда
				ТЗМатериалов.НоваяСтрока();
				ТЗМатериалов.ТМЦ = ?(ПустоеЗначение(СПриПродаже.ТМЦДляСписания.Получить(ЗапросЗаказыКл.ДатаДок)) = 0, СПриПродаже.ТМЦДляСписания.Получить(ЗапросЗаказыКл.ДатаДок), СПриПродаже);
				ПроцПотерь = (1 - ЗапросЗаказыКл.ТМЦ.ПроцПотерь.Получить(ЗапросЗаказыКл.ДатаДок)/100);
				Если ПроцПотерь = 0 Тогда
					ПроцПотерь = 1;
				КонецЕсли;
				ТЗМатериалов.Кво = (ЗапросЗаказыКл.КвоПересчетСумма / ПроцПотерь) * СПриПродаже.НормаКГФарша.Получить(ЗапросЗаказыКл.ДатаДок);
			КонецЕсли;
			
			Пока ЗапросЗаказыКл.Группировка(3) = 1 Цикл					
				Если (ПустоеЗначение(ЗапросЗаказыКл.ВидУпаковки) = 0) Тогда
					СпрРазрешенныеВидыУпаковокТМЦ.ИспользоватьВладельца(ЗапросЗаказыКл.ТМЦ);
					Если СпрРазрешенныеВидыУпаковокТМЦ.НайтиПоРеквизиту("ВидУпаковки", ЗапросЗаказыКл.ВидУпаковки, 0) = 1  Тогда
						ФормаУп = СпрРазрешенныеВидыУпаковокТМЦ.ФормаУпаковки.Получить(ЗапросЗаказыКл.ДатаДок);
						ДополнитьСписываемыеПроПродажеМатериаламиУпаковки(СпрРазрешенныеВидыУпаковокТМЦ, "", "", ФормаУп, ЗапросЗаказыКл.ДатаДок, ЗапросЗаказыКл.КвоПересчетСумма);
						Если ПустоеЗначение(ФормаУп) = 0 Тогда
							ДополнитьСписываемыеПроПродажеМатериаламиУпаковки(СпрРазрешенныеВидыУпаковокТМЦ.ФормаУпаковки.Получить(ЗапросЗаказыКл.ДатаДок), "Форм", СпрРазрешенныеВидыУпаковокТМЦ, 
								ФормаУп, ЗапросЗаказыКл.ДатаДок, ЗапросЗаказыКл.КвоПересчетСумма);
						КонецЕсли;
					КонецЕсли;		
				КонецЕсли;		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ПолучитьУсловия(УсловиеТМЦ, УсловиеДляПН, ТЗВ, ТЗВ1)
	Если списЗаказ.РазмерСписка() > 0 Тогда				
		ТЗВ = СоздатьОбъект("ТаблицаЗначений");
		ТЗВ1 = СоздатьОбъект("ТаблицаЗначений");
		Для Инд = 1 По списЗаказ.РазмерСписка() Цикл
			Зак = списЗаказ.ПолучитьЗначение(Инд);
			Если Инд = 1 Тогда
				глСводПоНормам(0, Зак, "Норма", 100, ТЗВ);
			Иначе
				глСводПоНормам(0, Зак, "Норма", 100, ТЗВ1);
				ТЗВ1.ВыбратьСтроки();
				Пока ТЗВ1.ПолучитьСтроку() = 1 Цикл
					ТЗВ.НоваяСтрока();
					ТЗВ.ТМЦ = ТЗВ1.ТМЦ;
					ТЗВ.Кво = ТЗВ1.Кво;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		ТЗВ.Свернуть("ТМЦ", "Кво");
		
		СТовар = СоздатьОбъект("СписокЗначений");
		Если списТовар.РазмерСписка() > 0 Тогда
			Инд = 1;
			Пока Инд <= ТЗВ.КоличествоСтрок() Цикл
				НужноУдалить = 0;
				Если фВсеКроме = 1 Тогда
					Если списТовар.Принадлежит(ТЗВ.ПолучитьЗначение(Инд, "ТМЦ")) = 1 Тогда
						НужноУдалить = 1;
					КонецЕсли;
				ИначеЕсли фВсеКроме = 0 Тогда
					Если списТовар.Принадлежит(ТЗВ.ПолучитьЗначение(Инд, "ТМЦ")) = 0 Тогда
						НужноУдалить = 1;
					КонецЕсли;
				КонецЕсли;
				
				Если НужноУдалить = 1 Тогда
					ТЗВ.УдалитьСтроку(Инд);
				Иначе
					Инд = Инд + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ТЗВ.Выгрузить(СТовар,,,"ТМЦ");
		УсловиеТМЦ = "(ТМЦ В СТовар)";
		УсловиеДляПН = "(ТМЦ В СТовар)";
	Иначе
		УсловиеТМЦ = "((ТМЦ в списТовар) ИЛИ (ТМЦ в ВыбТМЦ))";			
		УсловиеДляПН = "(ТМЦ в сТМЦ)";
		Если ВыбТМЦ.Выбран() = 0 Тогда
			Если фВсеКроме = 1 Тогда
				УсловиеТМЦ = "(НЕ(ТМЦ в списТовар))";
				УсловиеДляПН = "((ТМЦ в сТМЦ) И (НЕ (ТМЦ в списТовар)))";
			Иначе
				УсловиеТМЦ = "(ТМЦ в списТовар)";
				УсловиеДляПН = "(ТМЦ в сТМЦ)";
			КонецЕсли;		
		ИначеЕсли (списТовар.РазмерСписка() <> 0) И (фВсеКроме = 1) Тогда
		    УсловиеТМЦ = "((НЕ(ТМЦ в списТовар)) И (ТМЦ в ВыбТМЦ))";
			УсловиеДляПН = "((ТМЦ в сТМЦ) И (НЕ (ТМЦ в списТовар)))";
		КонецЕсли;		
	КонецЕсли;	
КонецПроцедуры

Функция ДобавитьРасходАкции(НДата, КДата, ИмяКол, ПлюсоватьРасход, КоэфУм, СписАкций = "")
	ТекстЗ =
	"//{{ЗАПРОС(АкцииРасход)
	|Период с НДата по КДата;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Док = Документ.РасходнаяНакладная.ТекущийДокумент;
	|ДатаДок = Документ.РасходнаяНакладная.ДатаДок;
	|УстановкаСкидокТМЦ = Документ.РасходнаяНакладная.УстановкаСкидокТМЦ;
	|ДатаД = Документ.РасходнаяНакладная.ДатаДок;
	|ТМЦ = Документ.РасходнаяНакладная.ТМЦ;
	|Кво = Документ.РасходнаяНакладная.Кво;
	|ЦенаСНДС = Документ.РасходнаяНакладная.ЦенаСНДС;
	|ЦенаБезСкидки = Документ.РасходнаяНакладная.ЦенаБезСкидки;
	|Функция КвоПересчетСумма = Сумма(Кво);
	|Группировка ТМЦ без упорядочивания без групп;
	|Группировка ДатаДок;
	|Группировка УстановкаСкидокТМЦ;" + 
	?(СписАкций <> "", "
	|Условие (УстановкаСкидокТМЦ В (СписАкций));", "") + "
	|Условие(ЦенаБезСкидки <> ЦенаСНДС);
	|";//}}ЗАПРОС
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		Возврат 0;
	КонецЕсли;
    
	тбНормы = СоздатьОбъект("ТаблицаЗначений");	
	Пока Запрос.Группировка(1) = 1 Цикл
		Пока Запрос.Группировка(2) = 1 Цикл
			СписокФильтр = СоздатьОбъект("СписокЗначений");
			КвоДобавляемое = 0;
			Пока Запрос.Группировка(3) = 1 Цикл
				// нужно учитвать только те строки, которе в данной акции имеют план
				УС = Запрос.УстановкаСкидокТМЦ;
				УС.ВыбратьСтроки();
				Пока УС.ПолучитьСтроку() = 1 Цикл
					Если УС.ТМЦ = Запрос.ТМЦ Тогда
						Если УС.Кво <> 0 Тогда
							КвоДобавляемое = КвоДобавляемое + Запрос.КвоПересчетСумма;
							СписокФильтр.ДобавитьЗначение(Запрос.УстановкаСкидокТМЦ);
						КонецЕсли;
						Прервать;
					КонецЕсли;
				КонецЦикла;					
			КонецЦикла;
			
			
			Если КвоДобавляемое <> 0 Тогда
				ДобавитьПоНормамАкции(Запрос, КвоДобавляемое * КоэфУм, ?(СписАкций = "", СписокФильтр, ""), тбНормы, ПлюсоватьРасход, ИмяКол);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецФункции

Функция ЗаполнитьРасходПриходКонОст(УсловиеТМЦ, УсловиеДляПН, ТЗВ, ТЗВ1)
	КДата = Мин(КонДата, ПолучитьДатуТА());
	НДата = Мин(НачДата, КДата);
	
	ТекстЗ = 
	"//{{ЗАПРОС(Сформировать)
	|Период с НДата по КДата;
	|ТМЦ = Регистр.Остатки.ТМЦ;
	|МестоХранения = Регистр.Остатки.МестоХранения;
	|Ост = Регистр.Остатки.ОстатокТовара;
	|ФлагУчета = Регистр.Остатки.ФлагУчета;
	|ФлагСписания = Регистр.Остатки.ФлагСписания;"+
	?(фКонОст = 1, "
	|Функция ОстКонОст = КонОст(Ост);", "") + 
	?(фПриходП = 1, "
	|Функция ОстПриход = Приход(Ост) когда (ФлагУчета  = 2);", "") +
	?(фРасходП = 1, "
	|Функция ОстРасход = Расход(Ост) когда (ФлагУчета  = 2);", "") + "
	|Группировка ТМЦ Упорядочить по ТМЦ.Наименование без групп;" 
	//|Группировка ТМЦ без упорядочивания без групп;
	+?(фПодробныйРасход + фПодробныйПриход <> 0,"
	|Группировка Документ;","") + "
	|Условие" + УсловиеТМЦ + ";
	|"//}}ЗАПРОС
	;
	
	Если (фКонОст = 1) И (ПустоеЗначение(ВыбСклад) <> 1) Тогда			
		ТекстЗ = ТекстЗ + "
		|Условие (МестоХранения = ВыбСклад);";			
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		Возврат 0;
	КонецЕсли;

//		Если списЗаказ.РазмерСписка() = 0 Тогда
	Если (фРасхОП = 1) И (фРасходП = 1) Тогда
		КДата1 = Мин(КонДата1, ПолучитьДатуТА());
		НДата1 = Мин(НачДата1, КонДата1);
		
		ТекстЗ = " 
		//{{ЗАПРОС(Сформировать)
		|Период с НДата1 по КДата1;
		|ТМЦ = Регистр.Остатки.ТМЦ;
		|МестоХранения = Регистр.Остатки.МестоХранения;
		|Ост = Регистр.Остатки.ОстатокТовара;
		|ФлагУчета = Регистр.Остатки.ФлагУчета;
		|ФлагСписания = Регистр.Остатки.ФлагСписания;
		|Функция ОстРасход = Расход(Ост) когда (ФлагУчета  = 2);
		|Группировка ТМЦ Упорядочить по ТМЦ.Наименование без групп;
		|Группировка Документ;" + "
		|Условие" + УсловиеТМЦ + ";
		|"//}}ЗАПРОС
			;			
			
		Если (фКонОст = 1) И (ПустоеЗначение(ВыбСклад) <> 1) Тогда			
			ТекстЗ = ТекстЗ + "
			|Условие (МестоХранения = ВыбСклад);";				
		КонецЕсли;
			
		ЗапрРасх = СоздатьОбъект("Запрос");
		Если ЗапрРасх.Выполнить(ТекстЗ) = 0 Тогда
			Возврат 0;
		КонецЕсли;
	КонецЕсли;			
//	КонецЕсли;
	
	Док = СоздатьОбъект("Документ");
	СписПост = СоздатьОбъект("СписокЗначений");
	
	Пока Запрос.Группировка(1) = 1 Цикл
		ДобавитьСтрокуТЗ(Запрос.ТМЦ);
		
		Если фРасходП = 1 Тогда
			Если фРасхОП = 1 Тогда
				ЗапрРасх.ВНачалоВыборки();
				Если ЗапрРасх.Получить(Запрос.ТМЦ, ) = 1 Тогда
					ТЗ.Расход = ЗапрРасх.ОстРасход;
				КонецЕсли;
			Иначе
				ТЗ.Расход = Запрос.ОстРасход;
			КонецЕсли;
		КонецЕсли;
		Если фКонОст = 1 Тогда
			ТЗ.КонОст = Запрос.ОстКонОст;
		КонецЕсли;
		Если фПриходП = 1 Тогда
		    ТЗ.Приход = Запрос.ОстПриход;
		КонецЕсли;
		СписПост = СоздатьОбъект("СписокЗначений");
		

		Если (фПодробныйРасход = 1) ИЛИ (фПодробныйПриход = 1) Тогда
			Если (фРасхОП = 1) И (фПодробныйРасход = 1) И (списЗаказ.РазмерСписка() = 0) Тогда
				Если ЗапрРасх.Получить(Запрос.ТМЦ, ) = 1 Тогда
					Пока ЗапрРасх.Группировка(2) = 1 Цикл
						Если (ЗапрРасх.Документ.Вид() = "СписаниеТМЦВПроизводство") Тогда
							Если (фБезУ3 = 1) И (ЗапрРасх.ФлагСписания = 3) Тогда
								ТЗ.РасходНО = ТЗ.РасходНО + ЗапрРасх.ОстРасход;
							Иначе
								ТЗ.РасходПр = ТЗ.РасходПр + ЗапрРасх.ОстРасход;
							КонецЕсли;								
						ИначеЕсли ЗапрРасх.Документ.Вид() = "СписаниеТМЦ" Тогда
							Если (ЗапрРасх.ФлагСписания = 1) Тогда
								ТЗ.РасходПр = ТЗ.РасходПр + ЗапрРасх.ОстРасход;
							Иначе
								ВидЗатрат = ЗапрРасх.Документ.СубконтоСписания3;
								Если ПустоеЗначение(ВидЗатрат) = 1 Тогда
								    ВидЗатрат = ПолучитьПустоеЗначение("Справочник.ВидыЗатрат");
								КонецЕсли;
								Поз = списВЗ.НайтиЗначение(ВидЗатрат);
								Если Поз = 0 Тогда
									Кол = "ВЗ" + (списВЗ.РазмерСписка() + 1);
									ТЗ.НоваяКолонка(Кол, "Число", 15, 3);
									списВЗ.ДобавитьЗначение(ВидЗатрат, Кол);
								Иначе
									Кол = "ВЗ" + Поз;
								КонецЕсли;
								ТЗ.УстановитьЗначение(ТЗ.НомерСтроки, Кол, ТЗ.ПолучитьЗначение(ТЗ.НомерСтроки, Кол) + ЗапрРасх.ОстРасход);
							КонецЕсли;
						ИначеЕсли (фРасходП = 1) Тогда
							Если ЗапрРасх.ФлагСписания = 1 Тогда
								ТЗ.РасходПр = ТЗ.РасходПр + ЗапрРасх.ОстРасход;
							Иначе
								ТЗ.РасходНО = ТЗ.РасходНО + ЗапрРасх.ОстРасход;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
			Пока Запрос.Группировка(2) = 1 Цикл
				Если (фПодробныйРасход = 1) И (фРасхОП = 0) Тогда
					Если (Запрос.Документ.Вид() = "СписаниеТМЦВПроизводство") Тогда
						Если (фБезУ3 = 1) И (Запрос.ФлагСписания = 3) Тогда
							ТЗ.РасходНО = ТЗ.РасходНО + Запрос.ОстРасход;
						Иначе
							ТЗ.РасходПр = ТЗ.РасходПр + Запрос.ОстРасход;
						КонецЕсли;								
					ИначеЕсли Запрос.Документ.Вид() = "СписаниеТМЦ" Тогда
						Если (Запрос.ФлагСписания = 1) Тогда
							ТЗ.РасходПр = ТЗ.РасходПр + Запрос.ОстРасход;
						Иначе
							ВидЗатрат = Запрос.Документ.СубконтоСписания3;
							Если ПустоеЗначение(ВидЗатрат) = 1 Тогда
							    ВидЗатрат = ПолучитьПустоеЗначение("Справочник.ВидыЗатрат");
							КонецЕсли;
							Поз = списВЗ.НайтиЗначение(ВидЗатрат);
							Если Поз = 0 Тогда
								Кол = "ВЗ" + (списВЗ.РазмерСписка() + 1);
								ТЗ.НоваяКолонка(Кол, "Число", 15, 3);
								списВЗ.ДобавитьЗначение(ВидЗатрат, Кол);
							Иначе
								Кол = "ВЗ" + Поз;
							КонецЕсли;
							ТЗ.УстановитьЗначение(ТЗ.НомерСтроки, Кол, ТЗ.ПолучитьЗначение(ТЗ.НомерСтроки, Кол) + Запрос.ОстРасход);
						КонецЕсли;
					ИначеЕсли (фРасходП = 1) Тогда
						Если Запрос.ФлагСписания = 1 Тогда
							ТЗ.РасходПр = ТЗ.РасходПр + Запрос.ОстРасход;
						Иначе
							ТЗ.РасходНО = ТЗ.РасходНО + Запрос.ОстРасход;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;					
					
				Если фПодробныйПриход = 1 Тогда
					Если Запрос.Документ.Вид() = "ПриходнаяНакладнаяЗапасы" Тогда
						ТЗ.ПриходПН = ТЗ.ПриходПН + Запрос.ОстПриход;
					ИначеЕсли Запрос.Документ.Вид() = "ОприходованиеИзлишков" Тогда
						ТЗ.ПриходОИ = ТЗ.ПриходОИ + Запрос.ОстПриход;
					Иначе
						ТЗ.ПриходПрч = ТЗ.ПриходПрч + Запрос.ОстПриход;
					КонецЕсли;					    
				КонецЕсли;
			КонецЦикла;
			Если списЗаказ.РазмерСписка() > 0 Тогда
				Стр = 0;
				Если ТЗВ.НайтиЗначение(Запрос.ТМЦ, Стр, "ТМЦ") = 1 Тогда
					ТЗ.РасходПр = ТЗВ.ПолучитьЗначение(Стр, "Кво");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;			
	КонецЦикла;	
	
	Если фРасходАкц = 1 Тогда
		Возврат ДобавитьРасходАкции(НДата, КДата, "РасходАкц", 0, 1, "");
	КонецЕсли;
	
	Возврат 1;
КонецФункции

Функция ПолучитьДанныеПоЗаказам(УсловиеТМЦ, СписТМЦДляФильтрации)
	ТекстЗ = 
	"//{{ЗАПРОС(Заказ)
	|Период с НачДата по КонДата;
	|Поставщик = Документ.ЗаказПоставщику.Поставщик;
	|ТМЦ = Документ.ЗаказПоставщику.ТМЦ;
	|ТМЦПрихода = Документ.ЗаказПоставщику.ТМЦ.ТМЦДляПрихода;
	|Кво = Документ.ЗаказПоставщику.Кво;
	|Коэффициент = Документ.ЗаказПоставщику.Коэффициент;
	|Функция КвоСумма = Сумма(Кво);
	|Группировка ТМЦ без упорядочивания;
	|Группировка Поставщик без упорядочивания без групп;
	|Условие" + УсловиеТМЦ + ";
	|"//}}ЗАПРОС
	;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Пока Запрос.Группировка(2) = 1 Цикл
			Стр = 0;
			Если ТЗ.НайтиЗначение(Запрос.ТМЦ, Стр, "ТМЦ") = 0 Тогда
				ДобавитьСтрокуТЗ(Запрос.ТМЦ)
			Иначе
				ТЗ.ПолучитьСтрокуПоНомеру(Стр);
			КонецЕсли;
			Если Найти(ТЗ.Поставщик, Строка(Запрос.Поставщик) + ",") = 0 Тогда
			    ТЗ.Поставщик = ТЗ.Поставщик + Строка(Запрос.Поставщик) + ",";
			КонецЕсли;
			Если списПоставщик.Принадлежит(Запрос.Поставщик) = 1 Тогда
				СписТМЦДляФильтрации.ДобавитьЗначение(Запрос.ТМЦ);
				Если ПустоеЗначение(Запрос.ТМЦ.ТМЦДляПрихода) = 0 Тогда
				    СписТМЦДляФильтрации.ДобавитьЗначение(Запрос.ТМЦ.ТМЦДляПрихода);
				КонецЕсли;
			КонецЕсли;
			
			
			ТЗ.Заказ = ТЗ.Заказ + Запрос.КвоСумма;
		КонецЦикла;
	КонецЦикла;
	
	Возврат 1;
КонецФункции 

Функция ПолучитьПотребностьПоЗаказам()
	ТекстЗ =
	"//{{ЗАПРОС(ЗаказыКлиентов)
	|Период с Д1 по Д2;
	|ТМЦ = Документ.УМК_ЗаказКлиента.ТМЦ;
	|КвоПересчет = Документ.УМК_ЗаказКлиента.КвоПересчет;
	|ДатаДок = Документ.УМК_ЗаказКлиента.ДатаДок;
	|ВидУпаковки = Документ.УМК_ЗаказКлиента.ВидУпаковки;
	|Функция КвоПересчетСумма = Сумма(КвоПересчет);
	|Группировка ДатаДок без упорядочивания;
	|Группировка ТМЦ без упорядочивания без групп;		
	|Группировка ВидУпаковки без упорядочивания без групп;
	|"//}}ЗАПРОС
	;
	
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, НачДата2, КонДата2);
	
	ЗапросЗаказыКл = СоздатьОбъект("Запрос");
	Если ЗапросЗаказыКл.Выполнить(ТекстЗ) = 0 Тогда
		Сообщить("Не выполнился запрос по заказам клиентов");			
		Возврат 0;
	КонецЕсли;

	ОбработатьЗапросПоТЧДокументаПотребности(ЗапросЗаказыКл);
	
	ТЗМатериалов.Свернуть("ТМЦ", "Кво");		
	ТЗМатериалов.ВыбратьСтроки();
	Пока ТЗМатериалов.ПолучитьСтроку() = 1 Цикл
		ДобавитьДопМатериалВТЗ(ТЗМатериалов.ТМЦ, ТЗМатериалов.Кво, "ПотребностьЗак");
	КонецЦикла;	
	
	Возврат 1;
КонецФункции
		
// получим потребность по акциям. Для этого берём все акции за период акций и по нормам считаем материалы
Функция ПолучитьПотребностьПоАкциям()
	ТекстЗ =
	"//{{ЗАПРОС(Акции)
	|ТМЦ = Документ.УстановкаСкидокТМЦ.ТМЦ;
	|ТекДок = Документ.УстановкаСкидокТМЦ.ТекущийДокумент;
	|КвоПересчет = Документ.УстановкаСкидокТМЦ.Кво;
	|ДатаПо = Документ.УстановкаСкидокТМЦ.ДатаПо;
	|ДатаДок = Документ.УстановкаСкидокТМЦ.ДатаДок;
	|Функция КвоПересчетСумма = Сумма(КвоПересчет);
	|Группировка ТМЦ без упорядочивания без групп;
	|Группировка ДатаДок без упорядочивания;	
	|Группировка ТекДок упорядочить по ТекДок.ДатаДок;
	|Условие (ДатаДок <= КонДатаА);
	|Условие (ДатаПо >= НачДатаА);
	|Условие (КвоПересчет <> 0);
	|"//}}ЗАПРОС
	;
	
	ЗапросАкции = СоздатьОбъект("Запрос");
	Если ЗапросАкции.Выполнить(ТекстЗ) = 0 Тогда
		Сообщить("Не выполнился запрос по заказам клиентов");			
		Возврат 0;
	КонецЕсли;
	
	МинДатаАкций = '01.01.2100';
	МаксДатаАкций = '01.01.2000';
	СписАкцийДляЗапроса = СоздатьОбъект("СписокЗначений");
	СписАкций = СоздатьОбъект("СписокЗначений");
	тбНормы = СоздатьОбъект("ТаблицаЗначений");
	Пока ЗапросАкции.Группировка(1) = 1 Цикл		
		СписАкций.УдалитьВсе();
		Пока ЗапросАкции.Группировка(2) = 1 Цикл			
			Пока ЗапросАкции.Группировка(3) = 1 Цикл
				СписАкций.ДобавитьЗначение(ЗапросАкции.ТекДок);
				МинДатаАкций = Мин(ЗапросАкции.ТекДок.ДатаДок, МинДатаАкций);
				МаксДатаАкций = Макс(ЗапросАкции.ТекДок.ДатаПо, МаксДатаАкций);
				Если СписАкцийДляЗапроса.НайтиЗначение(ЗапросАкции.ТекДок) = 0 Тогда
					СписАкцийДляЗапроса.ДобавитьЗначение(ЗапросАкции.ТекДок);
				КонецЕсли;
			КонецЦикла;
			ДобавитьПоНормамАкции(ЗапросАкции, ЗапросАкции.КвоПересчетСумма, СписАкций, тбНормы, 1, "ПотребностьАкц");
		КонецЦикла;		
	КонецЦикла;
	
	// теперь берём то, что уже продано по этим акциям и вычитаем потребность
	ДобавитьРасходАкции(МинДатаАкций, МаксДатаАкций, "ПотребностьАкц", 1, -1, СписАкцийДляЗапроса);
	Возврат 1;
КонецФункции

Функция СоздатьТЗДляВывода()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗ.НоваяКолонка("Родитель", "Справочник.ТМЦ");
	ТЗ.НоваяКолонка("Ключ", "Строка");
	ТЗ.НоваяКолонка("Поставщик", "Строка");
	ТЗ.НоваяКолонка("КонОст", "Число" ,15, 3);
	ТЗ.НоваяКолонка("ОстатокДоп", "Число" ,15, 3);
	ТЗ.НоваяКолонка("Расход", "Число" ,15, 3);
	ТЗ.НоваяКолонка("ОбнулятьОстаток", "Число" ,1);
	ТЗ.НоваяКолонка("Акции", "СписокЗначений");
	ТЗ.НоваяКолонка("АкцииР", "СписокЗначений");
	ТЗ.ВидимостьКолонки("Ключ", 0);
	Если фПодробныйРасход = 1 Тогда
		ТЗ.НоваяКолонка("РасходПр", "Число" ,15, 3);
		ТЗ.НоваяКолонка("РасходНО", "Число" ,15, 3);
	КонецЕсли;
	Если фРасходАкц = 1 Тогда
		ТЗ.НоваяКолонка("РасходАкц", "Число" ,15, 3);
	КонецЕсли;	
	ТЗ.НоваяКолонка("ПотребностьЗак", "Число" ,15, 3);
	ТЗ.НоваяКолонка("ПотребностьАкц", "Число" ,15, 3);
	ТЗ.НоваяКолонка("Приход", "Число" ,15, 3);
	Если фПодробныйПриход = 1 Тогда
	    ТЗ.НоваяКолонка("ПриходПН", "Число" ,15, 3);
		ТЗ.НоваяКолонка("ПриходОИ", "Число" ,15, 3);
		ТЗ.НоваяКолонка("ПриходПрч", "Число" ,15, 3);
	КонецЕсли;
	ТЗ.НоваяКолонка("Заказ", "Число" ,15, 3);
	ТЗ.НоваяКолонка("ЗаказО", "Число" ,15, 3);
	
	Возврат ТЗ;
КонецФункции

Функция ПолучитьДанныеПоставщиков(УсловиеДляПН, СписТМЦДляФильтрации)	
	сТМЦ = СоздатьОбъект("СписокЗначений");
	
	ТЗ.Выгрузить(сТМЦ,,,"ТМЦ");	
	// теперь получим поставщиков для ТМЦ
	ТекстЗ = 
	"//{{ЗАПРОС(Приходы)
	|Период с ДатаНачалаПросмотраП по КонДата;
	|Контрагент = Документ.ПриходнаяНакладнаяЗапасы.Контрагент;
	|ТМЦ = Документ.ПриходнаяНакладнаяЗапасы.ТМЦ;
	|ТМЦДляПрихода = Документ.ПриходнаяНакладнаяЗапасы.ТМЦ.ТМЦДляПрихода;
	|Функция Счётчик = Счётчик();
	|Группировка ТМЦ без упорядочивания без групп;
	|Группировка Контрагент без упорядочивания без групп;
	|Условие" + УсловиеДляПН + ";
	|"//}}ЗАПРОС
	;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		Возврат 0;
	КонецЕсли;	

	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ТМ = ?(ПустоеЗначение(ТЗ.ТМЦ.ТМЦДляПрихода) = 1, "", ТЗ.ТМЦ.ТМЦДляПрихода);
		Запрос.ВНачалоВыборки();
		Если Запрос.Получить(ТЗ.ТМЦ, ) = 1 Тогда
			Пока Запрос.Группировка(2) = 1 Цикл
				СПоставщик = Строка(Запрос.Контрагент) + ",";
				Если списПоставщик.Принадлежит(Запрос.Контрагент) = 1 Тогда
					СписТМЦДляФильтрации.ДобавитьЗначение(ТЗ.ТМЦ);
					Если ПустоеЗначение(ТМ) = 0 Тогда
					    СписТМЦДляФильтрации.ДобавитьЗначение(ТМ);
					КонецЕсли;					
				КонецЕсли;
				
				Если Найти(ТЗ.Поставщик, СПоставщик) = 0 Тогда
				    ТЗ.Поставщик = ТЗ.Поставщик + СПоставщик;
				КонецЕсли;
			КонецЦикла;		    
		КонецЕсли;		
	КонецЦикла;	
	
	Возврат 1;
КонецФункции

Процедура ПолучитьДанныеОстаткиЗаказов(СписТМЦДляФильтрации)
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.Опции(1);
	//Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ,списТовар,1,0);
	Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ,,1,0);
	Ит.ИспользоватьСубконто(ВидыСубконто.ЗаказыПоставщикам,,1);
	Ит.ВыполнитьЗапрос(,Мин(КонецРассчитанногоПериодаБИ(), ?(ПустоеЗначение(НЗП) = 1, КонДата, НЗП)), "ЗП");
	ВыбТМЦЭтоГруппа = ВыбТМЦ.ЭтоГруппа();
	
	Ит.ВыбратьСубконто(1);
	Пока Ит.ПолучитьСубконто(1) = 1 Цикл
		Если (ПустоеЗначение(ВыбТМЦ) = 0) И (списТовар.РазмерСписка() > 0) И (фВсеКроме = 1) Тогда
			Если ВыбТМЦЭтоГруппа = 1 Тогда
				Если Ит.Субконто(1).ПринадлежитГруппе(ВыбТМЦ) = 0 Тогда
					Продолжить;
				ИначеЕсли списТовар.Принадлежит(Ит.Субконто(1)) = 1 Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				Если Ит.Субконто(1) <> ВыбТМЦ Тогда
					Продолжить;
				ИначеЕсли списТовар.Принадлежит(Ит.Субконто(1)) = 1 Тогда
					Продолжить;
				КонецЕсли;					
			КонецЕсли;
		ИначеЕсли (ПустоеЗначение(ВыбТМЦ) = 0) И (списТовар.РазмерСписка() > 0) И (фВсеКроме = 0) Тогда
			Если ВыбТМЦЭтоГруппа = 1 Тогда
				Если (Ит.Субконто(1).ПринадлежитГруппе(ВыбТМЦ) = 0) И (списТовар.Принадлежит(Ит.Субконто(1)) = 0) Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				Если (Ит.Субконто(1) <> ВыбТМЦ) И (списТовар.Принадлежит(Ит.Субконто(1)) = 0) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли (ПустоеЗначение(ВыбТМЦ) = 1) И (списТовар.РазмерСписка() > 0) Тогда
			Если списТовар.Принадлежит(Ит.Субконто(1)) = 0 Тогда
				Продолжить;
			КонецЕсли;
		ИначеЕсли (ПустоеЗначение(ВыбТМЦ) = 0) И (списТовар.РазмерСписка() = 0) Тогда
			Если ((ВыбТМЦЭтоГруппа = 1) И (Ит.Субконто(1).ПринадлежитГруппе(ВыбТМЦ) = 0))
				ИЛИ ((ВыбТМЦЭтоГруппа = 0) И (Ит.Субконто(1) <> ВыбТМЦ)) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Стр = 0;
		Если ТЗ.НайтиЗначение(Ит.Субконто(1), Стр, "ТМЦ") = 0 Тогда
			ДобавитьСтрокуТЗ(Ит.Субконто(1));
		Иначе
			ТЗ.ПолучитьСтрокуПоНомеру(Стр);
		КонецЕсли;
		ТЗ.ЗаказО = Ит.СКД("К");
		
		Если фЗаказОП = 1 Тогда
			Ит.ВыбратьСубконто(2);
			Пока Ит.ПолучитьСубконто(2) = 1 Цикл
				ДатаЗ = Ит.Субконто(2).ДатаДок;
				Поз = списЗак.НайтиЗначение(ДатаЗ);
				Если Найти(ТЗ.Поставщик, Строка(Ит.Субконто(2).Поставщик) + ",") = 0 Тогда
				    ТЗ.Поставщик = ТЗ.Поставщик + Строка(Ит.Субконто(2).Поставщик) + ",";
				КонецЕсли;
				Если списПоставщик.Принадлежит(Ит.Субконто(2).Поставщик) = 1 Тогда
					СписТМЦДляФильтрации.ДобавитьЗначение(ТЗ.ТМЦ);
				КонецЕсли;					
				
				Если Поз = 0 Тогда
					Кол = "З" + (списЗак.РазмерСписка() + 1);
					КолЗ = "ЗР" + (списЗак.РазмерСписка() + 1);
					ТЗ.НоваяКолонка(Кол, "Число", 15, 3);
					ТЗ.НоваяКолонка(КолЗ, "СписокЗначений");						
					списЗак.ДобавитьЗначение(ДатаЗ, Кол);
				Иначе
					Кол = "З" + Поз;
					КолЗ = "ЗР" + Поз;
				КонецЕсли;
				ТЗ.УстановитьЗначение(ТЗ.НомерСтроки, Кол, ТЗ.ПолучитьЗначение(ТЗ.НомерСтроки, Кол) + Ит.СКД("К"));
				Если ТипЗначенияСтр(ТЗ.ПолучитьЗначение(ТЗ.НомерСтроки, КолЗ)) <> "СписокЗначений" Тогда
				    ТЗ.УстановитьЗначение(ТЗ.НомерСтроки, КолЗ, СоздатьОбъект("СписокЗначений"));
				КонецЕсли;
				ТЗ.ПолучитьЗначение(ТЗ.НомерСтроки, КолЗ).ДобавитьЗначение(Ит.Субконто(2));
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПолучитьДанныеСклада()
	СписТМЦФ = СоздатьОбъект("СписокЗначений");
	ТЗ.Выгрузить(СписТМЦФ,,,"ТМЦ");
	РегО = СоздатьОбъект("Регистр.Остатки");
	РегО.УстановитьЗначениеФильтра("МестоХранения", списСклад, 2);
	РегО.УстановитьЗначениеФильтра("ТМЦ", СписТМЦФ, 2);
	РегО.УстановитьЗначениеФильтра("Фирма", Константа.БазФирма, 1);
	
	Если КонДата < ПолучитьДатуТА() Тогда
		РегО.ВременныйРасчет(1);
		РассчитатьРегистрыПо(КонДата);
	КонецЕсли;
	РегО.ВыбратьИтоги();
	Пока РегО.ПолучитьИтог() = 1 Цикл
		Стр = 0;
		Если ТЗ.НайтиЗначение(РегО.ТМЦ, Стр, "ТМЦ") = 1 Тогда
			ТЗ.УстановитьЗначение(Стр, "ОстатокДоп", ТЗ.ПолучитьЗначение(Стр, "ОстатокДоп") + РегО.ОстатокТовара);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ВывестиТаблицу(Таб, ТЗ_Основная, ТЗ_Базовая)
	Таб.ВывестиСекцию("Заголовок|Основная");

	// все настройки помещаем в список
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "ОстаткиТМЦ");
    
	Расшифровка.Установить("Дата1", НачДата);
    Расшифровка.Установить("Дата2", КонДата);
	
	Расшифровка.Установить("ВыбФирма", Константа.БазФирма);
	
	Расшифровка.Установить("ВидОтчета", 		1);
	Расшифровка.Установить("ПоказатьОстатки", 	1);
	Расшифровка.Установить("ЦенаТовара", 		1); 
	Расшифровка.Установить("ЦенаИзСправочника", "");

	Расшифровка.Установить("ДеталПоСкладам", 	1); 
	Расшифровка.Установить("ДеталПоДокументам", 1);
	Расшифровка.Установить("фБезГрупп", 1);
	Расшифровка.Установить("фДопКво", 1);	
	
	списВЗ.Сортировать();	
    ВывестиСекции("Шапка");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 3);
	
	Если фОбъединятьПоТМЦСписанияОприходования = 1 Тогда
	
		ТЗ_Основная.ВыбратьСтроки();
		Пока ТЗ_Основная.ПолучитьСтроку() = 1 Цикл
			Расшифровка.Установить("ВыбНоменклатура", ТЗ_Основная.ТМЦ_Индекс);
			
			ТекСтрока	= 0;
			ТекКолонка	= 0;
			
			ПечПоставщик = "";
			ПечРодитель  = "";
			ПечРасшифровкаТМЦ = "";
			СписАкц = "";
			СписАкцР = "";
			Если ТЗ_Базовая.НайтиЗначение(ТЗ_Основная.ТМЦ_Индекс,ТекСтрока,ТекКолонка) = 1 Тогда
				ПечПоставщик = ТЗ_Базовая.ПолучитьЗначение(ТекСтрока,4);
				ПечРодитель  = ТЗ_Базовая.ПолучитьЗначение(ТекСтрока,2);
				ПечРасшифровкаТМЦ = ВернутьСписокТМЦ(ТЗ_Базовая,ТЗ_Основная.ТМЦ_Индекс); 
				СписАкц = ТЗ_Базовая.ПолучитьЗначение(ТекСтрока,"Акции");
				СписАкцА = ТЗ_Базовая.ПолучитьЗначение(ТекСтрока,"АкцииР");
			КонецЕсли;
			
			ПечМатериал	 = ?(фПолнТМЦ=1,ТЗ_Основная.ТМЦ_Индекс.ПолнНаименование,ТЗ_Основная.ТМЦ_Индекс);			
			
			ПечОстаток	 = ТЗ_Основная.КонОст;
			ПечОстатокДоп= ТЗ_Основная.ОстатокДоп;
			ПечРасход	 = ТЗ_Основная.Расход;
			ПечПриход	 = ТЗ_Основная.Приход;
			ПечЗаказ	 = ТЗ_Основная.Заказ;
			ПечКонтроль  = ТЗ_Основная.Приход-ТЗ_Основная.Заказ;
			ПечПотребность= ТЗ_Основная.ПотребностьЗак;
			ПечПотребностьАкц= ТЗ_Основная.ПотребностьАкц;
			ПечЗаказО	 = ТЗ_Основная.ЗаказО;
					
			ВывестиСекции("Строка",ТЗ_Основная);		
		КонецЦикла;	
	Иначе	
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			Расшифровка.Установить("ВыбНоменклатура", ТЗ.ТМЦ);
			ПечРасшифровкаТМЦ = ТЗ.ТМЦ;
			ПечПоставщик = ТЗ.Поставщик;
			ПечРодитель  = ТЗ.Родитель;
			ПечМатериал	 = ?(фПолнТМЦ=1,ТЗ.ТМЦ.ПолнНаименование,ТЗ.ТМЦ);
			
			
			ПечОстаток	 = ТЗ.КонОст;
			ПечОстатокДоп= ТЗ.ОстатокДоп;
			ПечРасход	 = ТЗ.Расход;
			ПечПриход	 = ТЗ.Приход;
			ПечЗаказ	 = ТЗ.Заказ;
			ПечКонтроль  = ТЗ.Приход-ТЗ.Заказ;
			ПечПотребность= ТЗ.ПотребностьЗак;
			ПечПотребностьАкц= ТЗ.ПотребностьАкц;
			ПечЗаказО	 = ТЗ.ЗаказО;
			СписАкц = ТЗ.Акции;
			СписАкцР = ТЗ.АкцииР;
			
			ВывестиСекции("Строка",ТЗ);		
		КонецЦикла;
	
	КонецЕсли;
	
//	Форма.ТЗ.Видимость(1);
	Таб.ОбластьПечати(2);
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);	
	Таб.Показать("Заказы пост.");
	
	Расшифровка.Установить("Обновить",0);	
	Если (Обновить = 2) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;		
КонецПроцедуры

//*******************************************
Процедура Сформировать()
Перем УсловиеТМЦ, УсловиеДляПН, ТЗВ, ТЗВ1;

	СоздатьРасшифровку();
	Если (ТипЗначенияСтр(Таб) = "Таблица") и (Обновить <> 0) Тогда
	    Таб.Очистить();
	Иначе
		Таб = СоздатьОбъект("Таблица");
	КонецЕсли;

	План = фПлан;
	Если фПлан = 1 Тогда
		Если (фПодробныйРасход = 0) ИЛИ (фКонОст = 0) Тогда
			Сообщить("При указаннии показателя ""Планирование"" должны быть включены подр. расход и остаток");
			План = 0;
		КонецЕсли;
	КонецЕсли;    

	ТЗ = СоздатьТЗДляВывода();
	списВЗ = СоздатьОбъект("СписокЗначений");
	
	Если фКонОст + фПриходП + фРасходП + фЗаказ + фПотребностьЗак + фПотребностьАкц = 0 Тогда
		Предупреждение("Нужно выбрать хоть что-нибудь");
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ДатаНачалаПросмотраП) = 1 Тогда
		ДатаНачалаПросмотраП = НачДата;
	КонецЕсли;
	
	ПолучитьУсловия(УсловиеТМЦ, УсловиеДляПН, ТЗВ, ТЗВ1);
	Если фОбъединятьПоТМЦСписанияОприходования = 1 Тогда //--- УМК Сандомирский В.Ю. (22.09.14)
		ДополнитьСписТвар();
	КонецЕсли;	

	
	СтрФ = "";
	СтрСв = "";
	глФильтры(СтрФ, списТовар, "ТМЦ:");
	Если фКонОст + фПриходП + фРасходП <> 0 Тогда
		Если ЗаполнитьРасходПриходКонОст(УсловиеТМЦ, УсловиеДляПН, ТЗВ, ТЗВ1) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СписТМЦДляФильтрации = СоздатьОбъект("СписокЗначений");
	Если фЗаказ = 1 Тогда
		Если ПолучитьДанныеПоЗаказам(УсловиеТМЦ, СписТМЦДляФильтрации) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если фПотребностьЗак  = 1 Тогда
		ТЗМатериалов.УдалитьСтроки();
		
		Если фПотребностьЗак = 1 Тогда
			Если ПолучитьПотребностьПоЗаказам() = 0 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;        
	КонецЕсли;
	
	Если фПотребностьАкц = 1 Тогда
		Если фПотребностьАкц = 1 Тогда
			Если ПолучитьПотребностьПоАкциям() = 0 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;

	Если ПолучитьДанныеПоставщиков(УсловиеДляПН, СписТМЦДляФильтрации) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	списЗак = СоздатьОбъект("СписокЗначений");
	Если фЗаказО = 1 Тогда		
		ПолучитьДанныеОстаткиЗаказов(СписТМЦДляФильтрации);
	КонецЕсли;
	СписЗак.Сортировать();
	
	Если фСклад = 1 Тогда
		ПолучитьДанныеСклада();
	КонецЕсли;
	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ТМ = ТЗ.ТМЦ.ТМЦДляПрихода.Получить(КонДата);
		Если ПустоеЗначение(ТМ) = 0 Тогда
			СтрК = 0;
			Если ТЗ.НайтиЗначение(ТМ, СтрК, "ТМЦ") <> 0 Тогда
			    ТЗ.УстановитьЗначение(СтрК, "Поставщик", ТЗ.ПолучитьЗначение(СтрК, "Поставщик") + ТЗ.Поставщик + ",");
			КонецЕсли;					
		КонецЕсли;		
	КонецЦикла;
	
	Если списПоставщик.РазмерСписка() > 0 Тогда
		Инд = 1;
		Пока Инд <= ТЗ.КоличествоСтрок() Цикл
			Если СписТМЦДляФильтрации.НайтиЗначение(ТЗ.ПолучитьЗначение(Инд, "ТМЦ")) = 0 Тогда
				ТЗ.УдалитьСтроку(Инд);
			Иначе
				Инд = Инд + 1;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	
	//--- Результирующая таблица
	ТЗ.Сортировать(?(фСортГруппа = 1, "Родитель,","") + "ТМЦ");
	
	//ТЗ.ВыбратьСтроку(); //------------------------------------------ !!!
	
	Если фОбъединятьПоТМЦСписанияОприходования = 1 Тогда
		ТЗ_Основная = СоздатьОбъект("ТаблицаЗначений");
		ТЗ_Основная.Загрузить(ТЗ);
		
		ТЗ_Основная.НоваяКолонка("ТМЦ_Индекс","Справочник.ТМЦ");
		ТЗ_Основная.ВыбратьСтроки();
		Пока ТЗ_Основная.ПолучитьСтроку() = 1 Цикл
			//--- Первая итерация "ТМЦ для списания"
			Если ПустоеЗначение(ТЗ_Основная.ТМЦ.ТМЦДляСписания.Получить(КонДата)) <> 1  Тогда
				ТЗ_Основная.ТМЦ_Индекс = ТЗ_Основная.ТМЦ.ТМЦДляСписания.Получить(КонДата);
				Продолжить;
			КонецЕсли;
			//--- Первая итерация "ТМЦ для приходования"
			Если ПустоеЗначение(ТЗ_Основная.ТМЦ.ТМЦДляПрихода.Получить(КонДата)) <> 1  Тогда
				ТЗ_Основная.ТМЦ_Индекс = ТЗ_Основная.ТМЦ.ТМЦДляПрихода.Получить(КонДата);
				Продолжить;
			КонецЕсли;
			
			ТЗ_Основная.ТМЦ_Индекс = ТЗ_Основная.ТМЦ;			
		КонецЦикла;

			
		ТЗ_Базовая = СоздатьОбъект("ТаблицаЗначений");  // --- базовая это первоначальная ТЗ с индексами для опеределения ТМЦ
		ТЗ_Базовая.Загрузить(ТЗ_Основная);
		
		ТекстКолонкиСвертка = "5";
		Для НомерСтроки = 6 По ТЗ.КоличествоКолонок() Цикл //--- считаем сколько у нас значащих колонок
			ТекстКолонкиСвертка = ТекстКолонкиСвертка + "," + НомерСтроки;
		КонецЦикла; 
		
		ТЗ_Основная.Свернуть("ТМЦ_Индекс,Родитель",ТекстКолонкиСвертка);
	КонецЕсли;
	
	
	ВывестиТаблицу(Таб, ТЗ_Основная, ТЗ_Базовая);
КонецПроцедуры

Процедура ДобавитьВСписок(Элт, Наим, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Наим);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	Если Элт.Вид() = "ТМЦ" Тогда
		ДобавитьвСписок(Элт, Строка(Элт), списТовар);
	ИначеЕсли Элт.Вид() = "Контрагенты" Тогда
		ДобавитьвСписок(Элт, Строка(Элт), списПоставщик);
	ИначеЕсли Элт.Вид() = "МестаХранения" Тогда
		ДобавитьвСписок(Элт, Строка(Элт), списСклад);		
	ИначеЕсли Элт.Вид() = "УМК_ЗаданиеНаПроизводство" Тогда
		ДобавитьвСписок(Элт, Строка(Элт), списЗаказ);		
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	Если Лев(НазваниеОбъекта, 1) = "С" Тогда
	    КФормы.ВыборГруппы(1);
	КонецЕсли;	
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Процедура ИзмКол()
	Если (фПриходП = 0) и (фЗаказ = 0) Тогда
		фКонтроль = 0;
		Форма.фКонтроль.Доступность(0);
	Иначе
		Форма.фКонтроль.Доступность(1);
	КонецЕсли;
	
	Если фКонОст = 0 Тогда //--- УМК Сандомирский В.Ю. (17.06.15)
		ВыбСклад = "";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		НачДата = глРасшифровка.Получить("НачДата");
		КонДата = глРасшифровка.Получить("НачДата");
		НачДата1 = глРасшифровка.Получить("НачДата1");
		КонДата1 = глРасшифровка.Получить("НачДата1");
		НачДата2 = глРасшифровка.Получить("НачДата2");
		КонДата2 = глРасшифровка.Получить("НачДата2");
		НачДатаА = глРасшифровка.Получить("НачДатаА");
		КонДатаА = глРасшифровка.Получить("НачДатаА");		

		ДокНачала = глРасшифровка.Получить("ДокНачала");
		ДокКонца = глРасшифровка.Получить("ДокКонца");
		

		глРасшифровка.Получить("списТовар").Выгрузить(списТовар);
		фКонОст = глРасшифровка.Получить("фКонОст");
		фПриходП = глРасшифровка.Получить("фПриходП");
		фРасходП = глРасшифровка.Получить("фРасходП");
		фЗаказ = глРасшифровка.Получить("фЗаказ");
		фЗаказО = глРасшифровка.Получить("фЗаказО");
		фЗаказОП = глРасшифровка.Получить("фЗаказОП");
		фПустоеКво = глРасшифровка.Получить("фПустоеКво");
		фПодробныйРасход =глРасшифровка.Получить("фПодробныйРасход");
		фКонтроль = глРасшифровка.Получить("фКонтроль");
		фПлан = глРасшифровка.Получить("фПлан");
		Коэф = глРасшифровка.Получить("Коэф");
		ргПорядок = глРасшифровка.Получить("ргПорядок"); 
		фСортГруппа = глРасшифровка.Получить("фСортГруппа");
		фБезУ3 = глРасшифровка.Получить("фБезУ3");	
		ДатаНачалаПросмотраП = глРасшифровка.Получить("ДатаНачалаПросмотраП");
		НачДата = глРасшифровка.Получить("НачДата");
		КонДата = глРасшифровка.Получить("КонДата");
		фВсеКроме = глРасшифровка.Получить("фВсеКроме");
		фСклад = глРасшифровка.Получить("фСклад");
		ВыбТМЦ = глРасшифровка.Получить("ВыбТМЦ");
		фПотребностьЗак = глРасшифровка.Получить("фПотребностьЗак"); 
		фПотребностьАкц = глРасшифровка.Получить("фПотребностьАкц"); 
		фРасходАкц = глРасшифровка.Получить("фРасходАкц");
		фНеПрибавлятьРасход = глРасшифровка.Получить("фНеПрибавлятьРасход");

		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
		НаДату = ТекущаяДата();
	КонецЕсли; 
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (23.09.14)
Процедура ЗаполнитьИрыными()
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	СпрТМЦ.ВыбратьЭлементы();
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		
		Если СпрТМЦ.ПометкаУдаления() = 1 Тогда
			Продолжить;			
		КонецЕсли;	
			
		Если СпрТМЦ.ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СпрТМЦ.фИра.Получить(КонДата) = 1 Тогда
			Если списТовар.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
				списТовар.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент(), Строка(СпрТМЦ.ТекущийЭлемент()));
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры // ЗаполнитьИрыными

//====================================================================== УМК Сандомирский В.Ю. (17.06.15)
Функция УстДоступность() 
	
	Форма.тСклад.Видимость(фКонОст);
	Форма.ВыбСклад.Видимость(фКонОст);
	Форма.кнОчиститьСклад.Видимость(фКонОст);
	
	Возврат "";
	
КонецФункции

фПустоеКво = 1;
фКонОст = 1;
фПриходП = 1;
фРасходП = 1;
фКонтроль = 1;
фЗаказ = 1;
ргПорядок = 1;
НачДата = НачМесяца(РабочаяДата());
КонДата = КонМесяца(РабочаяДата());
Коэф = 1;
ТЗМатериалов = СоздатьОбъект("ТаблицаЗначений");
ТЗМатериалов.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
ТЗМатериалов.НоваяКолонка("Кво", "Число", 15, 3);