// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================
Перем ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
                        
// переменные предназначены для механизма универсальных группировок отчета
Перем СписокГруппировок;
Перем КоличествоГруппировок;

// переменные предназначены для запроса по периодам
Перем Запрос;
Перем Язык, УкрГруппировки;

Перем ОтчетСформирован;
Перем ДокНачала, ДокКонца;
Перем Д1, Д2;
Перем СписИсключений;


//======================================================================
Функция ФРМКоличествоВОтчете(РезервР,Номенклатура)
	Если фБезЦифр = 1 Тогда
		Возврат "";
	Иначе
		Возврат глФРМКоличествоВОтчете(РезервР,Номенклатура, 1 - фЕдУм);
	КонецЕсли;
КонецФункции // ФРМКоличествоВОтчете(РезервР,Номенклатура)
// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
Функция ПерерисовкаНазванийЗакладок()      
	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");
КонецФункции // ПерерисовкаНазванийЗакладок	

// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
Процедура ВыбратьПоФильтру()
	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру

Процедура ОбработатьСтрокуНоменклатуры(Запрос, ЗапросРез, Хвост)
	Резерв = 0; РезервР = 0;
	ЗапросРез.вНачалоВыборки();
	Если ?(фВыводитьВидУпаковки = 1, ЗапросРез.Получить(Запрос.Номенклатура,Запрос.ВУП), ЗапросРез.Получить(Запрос.Номенклатура)) = 1 Тогда
		Резерв = ЗапросРез.Рез;
		РезервР = ЗапросРез.РезР;
	КонецЕсли;
	
	// отбираем неправильные значения
	Если ПоказатьОстатки.ТекущаяСтрока()=1 Тогда		// все ненулевые
	
	ИначеЕсли ПоказатьОстатки.ТекущаяСтрока()=2 Тогда	// все
	
	ИначеЕсли ПоказатьОстатки.ТекущаяСтрока()=3 Тогда   // все положительные
		Если Запрос.КонКол<=0 Тогда
			Возврат;
		КонецЕсли;	
			
	ИначеЕсли ПоказатьОстатки.ТекущаяСтрока()=4 Тогда   // меньше мин. остатка
		Если Запрос.КонКол>=Запрос.Номенклатура.МинимальныйОстаток Тогда
			Возврат;
		КонецЕсли;	
	
	ИначеЕсли ПоказатьОстатки.ТекущаяСтрока()=5 Тогда   // меньше мин. остатка с учетом резерва
		Если (Запрос.КонКол-Резерв)>=Запрос.Номенклатура.МинимальныйОстаток Тогда
			Возврат;
		КонецЕсли;	
	
	КонецЕсли;
	
	ПечРезерв = ФРМКоличествоВОтчете(Резерв,Запрос.Номенклатура);
	ПечРезервР = ФРМКоличествоВОтчете(РезервР,Запрос.Номенклатура);
	                         
	ПечТовар = глТоварВОтчете(Запрос.Номенклатура,1,Запрос.ЭтоГруппа("Номенклатура"), Запрос.ЗначениеУпорядочивания(1), 1 - фЕдУм)+
		?(Запрос.Номенклатура.МинимальныйОстаток=0,"",?(Язык="у",", мін. залишок = ",", мин. остаток = ")
		+СокрЛП(глФРМКоличествоВОтчете(Запрос.Номенклатура.МинимальныйОстаток,Запрос.Номенклатура)));
	ПечВУП = ?(фВыводитьВидУпаковки = 1, Запрос.ВУП, "");
	Если фВыводитьВидУпаковки = 1 Тогда
		Таб.ВывестиСекцию("Товар|ТоварРезерв");
	Иначе
		Таб.ВывестиСекцию("Товар|ТоварРезерв<");
		Таб.ПрисоединитьСекцию("Товар|ТоварРезерв>");
	КонецЕсли;	

	глОживить(1);
	
	Пока Запрос.Группировка("МестоХранения") = 1 Цикл
		Если ПустоеЗначение(Запрос.МестоХранения) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ПечОстаток = ФРМКоличествоВОтчете(Запрос.КонКол,Запрос.Номенклатура);
		Если фДопКво = 1 Тогда
			ПечОстатокК = ФРМКоличествоВОтчете(Запрос.КонКолК,Запрос.Номенклатура);
		КонецЕсли;
		
		Таб.ПрисоединитьСекцию("Товар|Склад"+Хвост);
	КонецЦикла;
	глОживить(1);
КонецПроцедуры
// ===============================
Процедура ОстаткиТоваров()        
	
	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
    Таб.ИсходнаяТаблица(ПечФорма);

	Если (Дата2 >= ПолучитьДатуТА()) и (ПустоеЗначение(ДокКонца) = 1) Тогда
		ТекстЗапроса = "";
	Иначе 
		ТекстЗапроса = "
			|Период с Д2 по Д2;";
	КонецЕсли;
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, Дата1, Дата2);

	ТекстЗапроса= ТекстЗапроса +                          
		"Фирма	= Регистр.Остатки.Фирма;
		|МестоХранения	= Регистр.Остатки.МестоХранения;
		|Номенклатура	= Регистр.Остатки.ТМЦ;
		|ВУП	= Регистр.Остатки.ВидУпаковки;
		|Кол	= Регистр.Остатки.ОстатокТовара;
		|Функция КонКол = КонОст(Кол);" + 
		?(фДопКво = 1,"
		|КолК	= Регистр.Остатки.ДопКво;
		|Функция КонКолК = КонОст(КолК);","") + "
		|Группировка Номенклатура "+?(фБезГрупп = 1," без групп","") + ?(ПоказатьОстатки.ТекущаяСтрока()>=2," Все","") + ";" + 
		?(фВыводитьВидУпаковки = 1, "
		|Группировка ВУП Без Групп;", "") + "
		|Группировка МестоХранения Без групп Все ВошедшиеВЗапрос;
		|";
	
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (Номенклатура В (глГруппыДоступаПродукции));";
	КонецЕсли;	
		
	Загол="";
	
	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"МестоХранения", ВыбМестоХранения, "ВыбМестоХранения", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по местам хранения. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Номенклатура", ВыбНоменклатура, "ВыбНоменклатура", ТекстЗапроса, Загол, Язык, "КатегорииТоваров")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по ТМЦ. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ВУП", ВыбВУП, "ВыбВУП", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по видам упаковки. Отчет не сформирован.");
		Возврат;
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "
	|Условие (НЕ (Номенклатура В СписИсключений));";
	
	// выполняем запрос
	Запрос=СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса)=0 тогда
		Предупреждение("Запрос по остаткам не выполнился!");
		Возврат;
	КонецЕсли;

	Если Дата1Р = Дата(0) Тогда
	    Дата1Р = Дата1;
	КонецЕсли;
	
	Если Дата2Р = Дата(0) Тогда
	    Дата2Р = Дата2;
	КонецЕсли;
	
	
	ТекстЗ =
	"//{{ЗАПРОС(Резервы)
	|Период с Дата1Р по Дата2Р;
	|ТМЦ = Регистр.Резервы.ТМЦ;
	|ВидУпаковки = Регистр.Резервы.ВидУпаковки;
	|Резерв = Регистр.Резервы.Резерв;
	|ТекущийДокумент = Регистр.Резервы.ТекущийДокумент;
	|Функция РезР = Расход(Резерв) когда (ТекущийДокумент.Вид() <> ""СнятиеРезерва"");" + 
	?(фОстаткиРезерва = 1,"
	|Функция Рез = КонОст(Резерв);", "
	|Функция Рез = Приход(Резерв);") + "
	|Группировка ТМЦ упорядочить по ТМЦ.Наименование без групп;" + 
	?(фВыводитьВидУпаковки = 1, "
	|Группировка ВидУпаковки упорядочить по ВидУпаковки.Наименование без групп;", "") + "
	|"//}}ЗАПРОС
	;

	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (ТМЦ В (глГруппыДоступаПродукции));";
	КонецЕсли;	
	
	ЗапросРез = СоздатьОбъект("Запрос");
	Если ЗапросРез.Выполнить(ТекстЗ) = 0 Тогда
		Возврат;		
	КонецЕсли;

	//КонецЕсли;

	// обнуляем счетчик числа строк, выведенных в таблицу отчета
	глЧислоСтрок = 0;

	Таб.ВывестиСекцию("Кнопки");

	// выводим шапку отчета
	Таб.ВывестиСекцию("Отчет");  
	глОживить(Таб.ВысотаСекции("Отчет"));
	Хвост = ?(фДопКво = 1, "К", "");

	Если фВыводитьВидУпаковки = 1 Тогда
		Таб.ВывестиСекцию("Шапка|ТоварРезерв");
	Иначе
		Таб.ВывестиСекцию("Шапка|ТоварРезерв<");
		Таб.ПрисоединитьСекцию("Шапка|ТоварРезерв>");
	КонецЕсли;	
	
	Пока Запрос.Группировка("Номенклатура") = 1 Цикл
		Если Запрос.ЭтоГруппа("Номенклатура")=1 Тогда
			Продолжить;
		КонецЕсли;
        
		Если фВыводитьВидУпаковки = 1 Тогда
			Пока Запрос.Группировка("ВУП") = 1 Цикл
				Пока Запрос.Группировка("МестоХранения") = 1 Цикл
					Если ПустоеЗначение(Запрос.МестоХранения) = 1 Тогда
						Продолжить;
					КонецЕсли;
					Таб.ПрисоединитьСекцию("Шапка|Склад"+Хвост);
				КонецЦикла;
				
				Прервать;
			КонецЦикла;
		Иначе
			Пока Запрос.Группировка("МестоХранения") = 1 Цикл
				Если ПустоеЗначение(Запрос.МестоХранения) = 1 Тогда
					Продолжить;
				КонецЕсли;
				Таб.ПрисоединитьСекцию("Шапка|Склад"+Хвост);
			КонецЦикла;			
		КонецЕсли;
		
		Прервать;
	КонецЦикла;
	глОживить(1);
           
	ГруппыТоваров = СоздатьОбъект("СписокЗначений");
    
	Запрос.вНачалоВыборки();
	Пока Запрос.Группировка("Номенклатура") = 1 Цикл
		Если Запрос.ЭтоГруппа("Номенклатура")=1 Тогда
	   		ГруппыТоваров.ДобавитьЗначение(Запрос.Номенклатура);
			Продолжить;
		КонецЕсли;
		
		// выводим группу ТМЦ
		Пока ГруппыТоваров.РазмерСписка()>0 Цикл
			ГруппаТоваров = ГруппыТоваров.ПолучитьЗначение(1);
			Если Запрос.Номенклатура.ПринадлежитГруппе(ГруппаТоваров)=1 Тогда
				Если фВыводитьВидУпаковки = 1 Тогда
					Таб.ВывестиСекцию("Группа|ТоварРезерв");
				Иначе
					Таб.ВывестиСекцию("Группа|ТоварРезерв<");
					Таб.ПрисоединитьСекцию("Группа|ТоварРезерв>");
				КонецЕсли;	
				глОживить(1);
			КонецЕсли;
			ГруппыТоваров.УдалитьЗначение(1);
		КонецЦикла;
		
		
		Если фВыводитьВидУпаковки = 1 Тогда
			Пока Запрос.Группировка("ВУП") = 1 Цикл
				ОбработатьСтрокуНоменклатуры(Запрос, ЗапросРез, Хвост);
			КонецЦикла;
		Иначе
			ОбработатьСтрокуНоменклатуры(Запрос, ЗапросРез, Хвост);
		КонецЕсли;
	КонецЦикла;

	ФиксКвоСтрок = Таб.ВысотаСекции("Кнопки")+Таб.ВысотаСекции("Отчет")+Таб.ВысотаСекции("Шапка");
	ФиксКвоКолон = 2;
	Таб.Опции(0, 0, ФиксКвоСтрок, ФиксКвоКолон, "ПарамПечатиУпрОстаткиТоваров", "РазмОкнаУпрОстаткиТоваров");
	Таб.ОбластьПечати(Таб.ВысотаСекции("Кнопки")+1);

	// Вывод заполненной формы
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("ПЕЧАТЬ: Остатки ТМЦ на складах (На "+Дата2+?(ТипЗначения(ВыбФирма)=0, "", ", "+ВыбФирма)+")","");
	
	ОтчетСформирован = 1;
	
КонецПроцедуры		// ОстаткиТоваров
                                      
//======================================================================
Процедура ВывестиДетализациюНаЧто(Запрос,Таб)
	Пока Запрос.Группировка("ДляТМЦ") = 1 Цикл	
		Если ПустоеЗначение(Запрос.ДляТМЦ) = 0 Тогда
			Пока Запрос.Группировка("ДляУпаковки") = 1 Цикл	
				Если ПустоеЗначение(Запрос.ДляУпаковки) = 0 Тогда
					Таб.ВывестиСекцию("НаЧто");
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры // 
// ===============================
Процедура ВывестиДокументыДвиженияТоваров(Запрос,Таб)  
	
    КонКол=Запрос.НачКол;
	Если фДопКво = 1 Тогда
		КонКолК	= Запрос.НачКолК;
	КонецЕсли;
	РасшДок = СоздатьОбъект("СписокЗначений");
	РасшДок.ДобавитьЗначение(Запрос.Номенклатура, "Товар");
		
	Пока Запрос.Группировка("Документ") = 1 Цикл
		Док=Запрос.Документ;
		РасшДок.Установить("Док", Док);
		Если ПустоеЗначение(Док) = 1 Тогда
			Продолжить;
		КонецЕсли;

		Контр = СокрЛП(Строка(глКонтрагентДок(Док)));
		Если Контр = "" Тогда
		    Если Док.Вид() = "СписаниеТМЦВПроизводство" Тогда
		        Контр = ". Продукция: """+Строка(Док.ПродукцияШ)+"""";
		    ИначеЕсли Док.Вид() = "ПереработкаМяса" Тогда
				Контр = ". Категория: """+Строка(Док.Категория)+"""";
		    ИначеЕсли Док.Вид() = "Перемещение" Тогда				
				Контр = ". " + РазделительСтрок + Строка(Док.МестоХранения) + " -> " + Строка(Док.НовоеМестоХранения);
			КонецЕсли;
		Иначе
			Контр = ". Контрагент: """+Контр+"""";
		КонецЕсли;
		
		Наим = глДокументВОтчете(Док,"с номером","с датой",Язык)+Контр;
		//Если ПустоеЗначение(Запрос.ДляТМЦ) = 0 Тогда
		//	Наим = Наим + "
		//	|Для: " + Строка(Запрос.ДляТМЦ) + ?(ПустоеЗначение(Запрос.ДляУпаковки) = 0, " в/уп: " + Строка(Запрос.ДляУпаковки), "");
		//КонецЕсли;
		
        ПрихКол = Запрос.ПрихКол;
        РасхКол = Запрос.РасхКол;
		КонКол	= КонКол + ПрихКол - РасхКол;
		ПечПрихКол	= ФРМКоличествоВОтчете(ПрихКол,	Запрос.Номенклатура);
		ПечРасхКол	= ФРМКоличествоВОтчете(РасхКол,	Запрос.Номенклатура);
		ПечКонКол	= ФРМКоличествоВОтчете(КонКол,	Запрос.Номенклатура);
		
		Если фДопКво = 1 Тогда
			КонКолК	= КонКолК + Запрос.ПрихКолК - Запрос.РасхКолК;
			ПечПрихКолК	= ?(фБезЦифр = 1, "", Формат(Запрос.ПрихКолК, "Ч0"));
			ПечРасхКолК	= ?(фБезЦифр = 1, "", Формат(Запрос.РасхКолК, "Ч0"));
			ПечКонКолК	= ?(фБезЦифр = 1, "", Формат(КонКолК, "Ч0"));
		КонецЕсли;
		
    	Таб.ВывестиСекцию("Док");
		Если фНаЧто = 1 Тогда
			ВывестиДетализациюНаЧто(Запрос,Таб)
		КонецЕсли;
		глОживить(1);
	КонецЦикла;

КонецПроцедуры // ВывестиДокументыДвиженияТоваров
	
Функция СпПоИнв(Док)
	Если ПустоеЗначение(Док) = 1 Тогда
		Возврат 0;
	КонецЕсли;
	
	Если (Док.Вид() = "СписаниеТМЦ") ИЛИ (Док.Вид() = "ОприходованиеИзлишков") Тогда
		Если ПустоеЗначение(Док.ДокОснование) = 0 Тогда
			Если Док.ДокОснование.Вид() = "Инвентаризация" Тогда
				Возврат 1;
			КонецЕсли;
		Иначе
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
КонецФункции

Процедура ВывестиНоменклатуруВОтчетеПоДвижениям(Запрос)
	Наим = глСмещениеГруппы(Запрос.Номенклатура,0) 
			+ глТоварВОтчете(Запрос.Номенклатура,1,Запрос.ЭтоГруппа("Номенклатура"), Запрос.ЗначениеУпорядочивания(1), 1 - фЕдУм) + 
	?(фВыводитьВидУпаковки = 1, глПолучитьВУ(Запрос.Номенклатура,Запрос.ВУП, Дата2), "");  //--- УМК Сандомирский В.Ю. (06.11.14)
	Если Запрос.ЭтоГруппа("Номенклатура")=1 Тогда
		Таб.ВывестиСекцию("Группа");
		глОживить(1);
		Возврат;;
	Иначе 
		ПечНачКол	= ФРМКоличествоВОтчете(Запрос.НачКол,	Запрос.Номенклатура);
		ПечПрихКол	= ФРМКоличествоВОтчете(Запрос.ПрихКол,Запрос.Номенклатура);
		ПечРасхКол	= ФРМКоличествоВОтчете(Запрос.РасхКол,Запрос.Номенклатура);
		ПечКонКол	= ФРМКоличествоВОтчете(Запрос.КонКол,	Запрос.Номенклатура);
		Если фДопКво = 1 Тогда
			ПечНачКолК	= ?(фБезЦифр = 1, "", Формат(Запрос.НачКолК, "Ч0"));
			ПечПрихКолК	= ?(фБезЦифр = 1, "", Формат(Запрос.ПрихКолК, "Ч0"));
			ПечРасхКолК	= ?(фБезЦифр = 1, "", Формат(Запрос.РасхКолК, "Ч0"));
			ПечКонКолК	= ?(фБезЦифр = 1, "", Формат(Запрос.КонКолК, "Ч0"));
		КонецЕсли;
		
		Таб.ВывестиСекцию("Товар");
		глОживить(1);
	КонецЕсли;
	
    Если ДеталПоСкладам=1 Тогда // детализируем по складам
		Пока Запрос.Группировка("МестоХранения") = 1 Цикл
			Если ПустоеЗначение(Запрос.МестоХранения) = 1 Тогда
			    Продолжить;
			КонецЕсли;
			Наим = глСмещениеГруппы(Запрос.МестоХранения,0) + Запрос.ЗначениеУпорядочивания(2+фВыводитьВидУпаковки,1);
			
			ПечНачКол	= ФРМКоличествоВОтчете(Запрос.НачКол,	Запрос.Номенклатура);
			ПечПрихКол	= ФРМКоличествоВОтчете(Запрос.ПрихКол,Запрос.Номенклатура);
			ПечРасхКол	= ФРМКоличествоВОтчете(Запрос.РасхКол,Запрос.Номенклатура);
			ПечКонКол	= ФРМКоличествоВОтчете(Запрос.КонКол,	Запрос.Номенклатура);
			Если фДопКво = 1 Тогда
				ПечНачКолК	= ?(фБезЦифр = 1, "", Формат(Запрос.НачКолК, "Ч0"));
				ПечПрихКолК	= ?(фБезЦифр = 1, "", Формат(Запрос.ПрихКолК, "Ч0"));
				ПечРасхКолК	= ?(фБезЦифр = 1, "", Формат(Запрос.РасхКолК, "Ч0"));
				ПечКонКолК	= ?(фБезЦифр = 1, "", Формат(Запрос.КонКолК, "Ч0"));
			КонецЕсли;
		
		    Если ПустоеЗначение(ВыбМестоХранения) = 1 Тогда
				Таб.ВывестиСекцию("Склад");
				глОживить(1);
			КонецЕсли;
			
            Если ДеталПоДокументам = 1 Тогда
			    ВывестиДокументыДвиженияТоваров(Запрос,Таб);  
			ИначеЕсли фНаЧто = 1 Тогда				
				ВывестиДетализациюНаЧто(Запрос,Таб); 
            КонецЕсли;
		КонецЦикла;
	ИначеЕсли ДеталПоДокументам=1 Тогда	// не детализируем по складам
		ВывестиДокументыДвиженияТоваров(Запрос,Таб);  
	ИначеЕсли фНаЧто = 1 Тогда				
		ВывестиДетализациюНаЧто(Запрос,Таб); 		
	КонецЕсли;	
КонецПроцедуры

Функция ОдинаковыеСклады(ТМЦ, Док, ФлагУчета)
	Если ФлагУчета = 1 Тогда
		Попытка
			Если Док.Вид() = "Перемещение" Тогда
				Док.ВыбратьСтроки();
				Пока Док.ПолучитьСтроку() = 1 Цикл
					Если Док.ТМЦ = Док.Стало Тогда
						Возврат 1;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		Исключение		
		КонецПопытки;		
	КонецЕсли;	
	
	Возврат 0;
КонецФункции

// ===============================
Процедура ДвиженияТоваров()
	               
	ПечФорма = "ДвиженияТоваров";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	ПечФорма = ПечФорма + ?(фДопКво = 1,"К","");
    Таб.ИсходнаяТаблица(ПечФорма);

	Если (Дата2 >= ПолучитьДатуТА()) и (ПустоеЗначение(ДокКонца) = 1) Тогда
		ТекстЗапроса = "
			|Период с Д1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Д1 по Д2;";
	КонецЕсли;
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, Дата1, Дата2);	
	УслПер = "";
	Если (фТолькоСп = 1) и (фТолькоСпПоИнв = 0) Тогда
		УслПер = " Когда ((ТекДок.Вид() = ""СписаниеТМЦ"") ИЛИ (ТекДок.Вид() = ""ОприходованиеИзлишков""))";
	ИначеЕсли фТолькоСпПоИнв = 1 Тогда
		УслПер = " Когда (СпПоИнв(ТекДок) = 1)";
	ИначеЕсли (фБезПер = 1) Тогда
		УслПер = " Когда (ОдинаковыеСклады(Номенклатура, ТекДок, ФлагУчета) = 0)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + 
		"Фирма	= Регистр.Остатки.Фирма;
		|МестоХранения	= Регистр.Остатки.МестоХранения;
		|Номенклатура	= Регистр.Остатки.ТМЦ; 
		|ВУП = Регистр.Остатки.ВидУпаковки; 
		|ДляТМЦ = Регистр.Остатки.ДляТМЦ;
		|ДляУпаковки = Регистр.Остатки.ДляУпаковки;
		|ТекДок = Регистр.Остатки.ТекущийДокумент;
		|Кол	= Регистр.Остатки.ОстатокТовара;
		|ФлагУчета = Регистр.Остатки.ФлагУчета;
		|Функция НачКол  = НачОст(Кол);
		|Функция КонКол  = КонОст(Кол);
		|Функция ПрихКол = Приход(Кол)" + УслПер + ";
		|Функция РасхКол = Расход(Кол)" + УслПер + ";" + 
		?(фДопКво = 1,"
		|КолК	= Регистр.Остатки.ДопКво;
		|Функция НачКолК  = НачОст(КолК);
		|Функция КонКолК  = КонОст(КолК);
		|Функция ПрихКолК = Приход(КолК)" + УслПер + ";
		|Функция РасхКолК = Расход(КолК)" + УслПер + ";", "") + "
		|Группировка Номенклатура"+?(фБезГрупп = 1," без групп","") + ";
		|";

	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (Номенклатура В (глГруппыДоступаПродукции));";
	КонецЕсли;
		
	Если фВыводитьВидУпаковки = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + "Группировка ВУП Без групп;";
	КонецЕсли;
		
	Если ДеталПоСкладам = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + "Группировка МестоХранения Без групп;";
	КонецЕсли;

	Если ДеталПоДокументам = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + "Группировка Документ;";
	КонецЕсли;
	Если фНаЧто = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"Группировка ДляТМЦ без Групп;
		|Группировка ДляУпаковки без Групп;";
	КонецЕсли;	
    
	Загол = ?(фБезПер = 1, ?(Язык = "У", "Переміщення не враховані
	|", "Перемещения не учтены
	|"), "");
	Загол = ?(фТолькоСп = 1, ?(Язык = "У", "Тiльки списання та оприбуткування
	|", "Только списания и оприходования
	|"), "");
	Загол = ?(фТолькоСп = 1, ?(Язык = "У", "Тiльки списання та оприбуткування за iнвентар.
	|", "Только списания и оприходования по инвентар.
	|"), "");
	                  
	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"МестоХранения", ВыбМестоХранения, "ВыбМестоХранения", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по местам хранения. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Номенклатура", ВыбНоменклатура, "ВыбНоменклатура", ТекстЗапроса, Загол, Язык, "КатегорииТоваров")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по ТМЦ. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ВУП", ВыбВУП, "ВыбВУП", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по видам упаковки. Отчет не сформирован.");
		Возврат;
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|Условие (НЕ (Номенклатура В СписИсключений));";
	
	// выполняем запрос
	Запрос=СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса)=0 тогда
		Предупреждение("Запрос по остаткам не выполнился!");
		Возврат;
	КонецЕсли;

	// обнуляем счетчик числа строк, выведенных в таблицу отчета
 	глЧислоСтрок=0;

	Таб.ВывестиСекцию("Кнопки");
	
	ПечЗаголСтолбца = ?(Язык = "у","Номенклатура","Номенклатура");
    Если ДеталПоСкладам=1 Тогда // детализируем по складам
		ПечЗаголСтолбца = ПечЗаголСтолбца + ?(Язык = "у","/Місце зберігання","/Место хранения")
	КонецЕсли;
    Если ДеталПоДокументам=1 Тогда // детализируем по складам
		ПечЗаголСтолбца = ПечЗаголСтолбца + ?(Язык = "у","/Документ рухів","/Документ движения")
	КонецЕсли;

	// выводим шапку отчета
	Таб.ВывестиСекцию("Отчет");  
	глОживить(Таб.ВысотаСекции("Отчет"));

	Пока Запрос.Группировка("Номенклатура") = 1 Цикл
		Если фВыводитьВидУпаковки = 0 Тогда
			ВывестиНоменклатуруВОтчетеПоДвижениям(Запрос);
		Иначе
			Пока Запрос.Группировка("ВУП") = 1 Цикл
				ВывестиНоменклатуруВОтчетеПоДвижениям(Запрос);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	ФиксКвоСтрок = Таб.ВысотаСекции("Кнопки")+Таб.ВысотаСекции("Отчет");
	ФиксКвоКолон = 3;
	Таб.Опции(0, 0, ФиксКвоСтрок, ФиксКвоКолон, "ПарамПечатиУпрДвижениеТоваров", "РазмОкнаУпрДвижениеТоваров");
	Таб.ОбластьПечати(Таб.ВысотаСекции("Кнопки")+1);

	// Вывод заполненной формы
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("ПЕЧАТЬ: Отчет о движении ТМЦ на складах ("+ПериодСтр(Дата1, Дата2)+?(ТипЗначения(ВыбФирма)=0, "", ", "+ВыбФирма)+")","");
	
	ОтчетСформирован = 1;
КонецПроцедуры

// ===============================
Процедура ПолучитьЦенуТовара(ТЗИтоги,Номенклатура,МестоХранения = "",Цена,ВалютаЦены)
	ТекСтр = ЦенаТовара.ТекущаяСтрока();
	Если ТекСтр = 3 Тогда //из категории цен
		ОбЦена		= глВернутьЦену(Номенклатура, ЦенаИзСправочника);
		Если ПустоеЗначение(ОбЦена) = 0 Тогда
			// есть цена
			НайденнаяЕдиница= ОбЦена.Единица.Получить(Дата2);
			Цена			= ОбЦена.Цена.	 Получить(Дата2);
			ВалютаЦены		= ОбЦена.Валюта. Получить(Дата2);
		Иначе
			Цена			= 0;
			ВалютаЦены		= Гривня;
		КонецЕсли;

	ИначеЕсли ТекСтр = 2 Тогда //учетнаяЦена
		Цена	 	= Номенклатура.УчетнаяЦена.Получить(Дата2);
	    ВалютаЦены	= Гривня;

	ИначеЕсли ТекСтр = 1 Тогда //себестоимость без НДС
		КолТовара = 0;
		СтоимостьТовара = 0;
		НомерСтроки = 0;
		Если ТЗИтоги.НайтиЗначение(Номенклатура,НомерСтроки,"ТМЦ")=1 Тогда
			КолТовара 		= ТЗИтоги.ПолучитьЗначение(НомерСтроки,"ОстатокТовара");
			СтоимостьТовара = ТЗИтоги.ПолучитьЗначение(НомерСтроки,"Стоимость");
		КонецЕсли;

		Цена = ?(КолТовара=0,0,(СтоимостьТовара)/КолТовара);                 			
		ВалютаЦены	= Гривня;
	КонецЕсли;	  	    
КонецПроцедуры //ПолучитьЦенуТовара

// ===============================
// по Цене за базовую единицу и ТМЦ возвращает цену,  за единицу по умолчанию
Функция ЦенаЗаЕдПоУмолчанию(ЦенаБазовойЕд,Номенклатура)
	Ед = Номенклатура.ЕдиницаПоУмолчанию;
	Если ПустоеЗначение(Ед) = 1 Тогда
		Возврат ЦенаБазовойЕд;
	ИначеЕсли Ед.Коэффициент=0 Тогда
		Возврат ЦенаБазовойЕд;
	Иначе	
	    Возврат (ЦенаБазовойЕд*Ед.Коэффициент);
	КонецЕсли;	
КонецФункции

Процедура ВывестиТоварыВОтчетеСЦенами(ТЗИтоги, Запрос, СписокОстатков, СписокОстатковК, СписокСтоимостей, СписокСкладов, Хвост)
	Цена=0;
	ВалютаЦены=Гривня;
	
	ПолучитьЦенуТовара(ТЗИтоги,Запрос.Номенклатура,,Цена,ВалютаЦены);
	
	ПечЦена		= ?(фБезЦифр = 1, "", глФрм(ЦенаЗаЕдПоУмолчанию(Цена,Запрос.Номенклатура),ВалютаЦены,1));
	ПечВалюта	= ?(фБезЦифр = 1, "", Гривня.Наименование);
	
	ПечТовар = глТоварВОтчете(Запрос.Номенклатура,1, Запрос.ЭтоГруппа("Номенклатура"), Запрос.ЗначениеУпорядочивания(1), 1 - фЕдУм) 
		+ ?(Запрос.Номенклатура.МинимальныйОстаток=0,"",?(Язык="у",", мін. залишок = ",", мин. остаток = ")
		+ СокрЛП(глФРМКоличествоВОтчете(Запрос.Номенклатура.МинимальныйОстаток,Запрос.Номенклатура)));
	
	Если фВыводитьВидУпаковки = 1 Тогда
		ПечВУП = Запрос.ВУП;
		Таб.ВывестиСекцию("Товар|ТоварЦена");
	Иначе
		Таб.ВывестиСекцию("Товар|ТоварЦена<");
		Таб.ПрисоединитьСекцию("Товар|ТоварЦена>");
	КонецЕсли;	
	
	СписокОстатков	.УдалитьВсе();
	СписокОстатковК	.УдалитьВсе();
	СписокСтоимостей.УдалитьВсе();
	ИтогПоТовару=0;
	Пока Запрос.Группировка("МестоХранения") = 1 Цикл

		Если ПустоеЗначение(Запрос.МестоХранения) = 1 Тогда
			Продолжить;
		КонецЕсли;

		ЦенаТов = 0;
		ПолучитьЦенуТовара(ТЗИтоги,Запрос.Номенклатура,Запрос.МестоХранения,ЦенаТов,ВалютаЦены);
		СтоимостьТовара	= ЦенаТов*Запрос.КонКол;
		
		СписокОстатков	. ДобавитьЗначение(Запрос.МестоХранения,Запрос.КонКол);
		Если фДопКво = 1 Тогда
			СписокОстатковК	. ДобавитьЗначение(Запрос.МестоХранения,Запрос.КонКолК);
		КонецЕсли;			
		СписокСтоимостей. ДобавитьЗначение(Запрос.МестоХранения,СтоимостьТовара);
		ИтогПоТовару	= ИтогПоТовару+СтоимостьТовара;
	КонецЦикла;
	
	Для Сч=1 По СписокСкладов.РазмерСписка() Цикл
		ТекСтоимостьСклада = 0;
		ТекСклад		= СписокСкладов.ПолучитьЗначение(Сч,ТекСтоимостьСклада);
		
		ПозицияОстатка	= СписокОстатков.НайтиЗначение(ТекСклад);
		Если фДопКво = 1 Тогда
			ПозицияОстаткаК	= СписокОстатковК.НайтиЗначение(ТекСклад);
		КонецЕсли;
		
		ПечОстаток 		= 0;
		ПечСтоимость	= 0;
		ПечОстатокК 	= 0;
		
		Если ПозицияОстатка<>0 Тогда
			СписокОстатков	.ПолучитьЗначение(ПозицияОстатка,ПечОстаток);
			СписокСтоимостей.ПолучитьЗначение(ПозицияОстатка,ПечСтоимость);
		КонецЕсли;
		Если фДопКво = 1 Тогда
			Если ПозицияОстаткаК<>0 Тогда
				СписокОстатковК	.ПолучитьЗначение(ПозицияОстаткаК,ПечОстатокК);
			КонецЕсли;
		КонецЕсли;
		
		ТекСтоимостьСклада 	= Число(ТекСтоимостьСклада);
		ПечОстатокК			= Число(ПечОстатокК);
		ПечОстаток			= Число(ПечОстаток);
		ПечСтоимость 		= Число(ПечСтоимость);
		
		ТекСтоимостьСклада = ТекСтоимостьСклада + глПересчет(ПечСтоимость,ВалютаЦены,Гривня,Дата2);
		СписокСкладов.УстановитьЗначение(Сч,ТекСклад,Формат(ТекСтоимостьСклада,"Ч20.2."));
		
		ПечОстаток 		= ФРМКоличествоВОтчете(ПечОстаток,Запрос.Номенклатура);
		ПечОстатокК		= ?(фБезЦифр = 1, "", Формат(ПечОстатокК, "Ч0"));
		ПечСтоимость	= ?(фБезЦифр = 1, "", глФрм(ПечСтоимость,ВалютаЦены,1));
		
		Таб.ПрисоединитьСекцию("Товар|СкладСтоимость"+Хвост);
	КонецЦикла;                             
	ПечИтог = ?(фБезЦифр = 1, "", глФрм(ИтогПоТовару,ВалютаЦены,1));
	Таб.ПрисоединитьСекцию("Товар|ИтогСтолбец");
    глОживить(1);
	
КонецПроцедуры
// ===============================
Процедура ОстаткиТоваровСЦенами()
Перем СписокСкладов,СписокОстатков;
	
	ПечФорма = "ОстаткиСЦенами";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
    Таб.ИсходнаяТаблица(ПечФорма);

	Если (Дата2 >= ПолучитьДатуТА()) и (ПустоеЗначение(ДокКонца) = 1) Тогда
		ТекстЗапроса = "
			|Период с Д1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Д1 по Д2;";
	КонецЕсли;
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, Дата1, Дата2);	

	ТекстЗапроса= ТекстЗапроса+
		"Фирма				= Регистр.Остатки.Фирма;
		|МестоХранения		= Регистр.Остатки.МестоХранения;
		|Номенклатура		= Регистр.Остатки.ТМЦ;
		|ВУП				= Регистр.Остатки.ВидУпаковки;
		|ВидТовара			= Регистр.Остатки.ТМЦ.ВидТМЦ;
		|Кол				= Регистр.Остатки.ОстатокТовара;
		|Функция КонКол	= КонОст(Кол);" + 
		?(фДопКво = 1,"
		|КолК				= Регистр.Остатки.ДопКво;
		|Функция КонКолК	= КонОст(КолК);","") + "
		|Группировка Номенклатура"+?(фБезГрупп = 1," без групп","") + ";" + 
		?(фВыводитьВидУпаковки = 1, "
		|Группировка ВУП Без Групп;", "") + "
		|Группировка МестоХранения Без групп Все ВошедшиеВЗапрос;
		|";

	Загол="";
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (Номенклатура В (глГруппыДоступаПродукции));";
	КонецЕсли;
	
	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"МестоХранения", ВыбМестоХранения, "ВыбМестоХранения", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по местам хранения. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Номенклатура", ВыбНоменклатура, "ВыбНоменклатура", ТекстЗапроса, Загол, Язык, "КатегорииТоваров")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по ТМЦ. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ВУП", ВыбВУП, "ВыбВУП", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по видам упаковки. Отчет не сформирован.");
		Возврат;
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|Условие (НЕ (Номенклатура В СписИсключений));";

	// выполняем запрос
	Запрос=СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса)=0 тогда
		Предупреждение("Запрос по остаткам не выполнился!");
		Возврат;
	КонецЕсли;

	СписокСкладов	= СоздатьОбъект("СписокЗначений");
	СписокОстатков	= СоздатьОбъект("СписокЗначений");
	СписокОстатковК	= СоздатьОбъект("СписокЗначений");
	СписокСтоимостей= СоздатьОбъект("СписокЗначений");
	
	ЗагЦенаТовара="";     

	Если ЦенаТовара.ТекущаяСтрока()=1 Тогда // себест. без НДС
		ЗагЦенаТовара=""+?(Язык="у","Собіварт. без ПДВ","Себест. без НДС");	                    

	ИначеЕсли ЦенаТовара.ТекущаяСтрока()=2 Тогда // УчетнаяЦена
		ЗагЦенаТовара=?(Язык="у","Облікова ціна","Учетная цена");

	ИначеЕсли ЦенаТовара.ТекущаяСтрока()=3 Тогда // из справочника цен
		Если ЦенаИзСправочника.Выбран()=0 Тогда
			Предупреждение("Выберите, пожалуйста, тип используемой цены.");
			Возврат;
		КонецЕсли;
	    ЗагЦенаТовара=""+?(Язык="у",глУкр(СокрЛП(ЦенаИзСправочника)),СокрЛП(ЦенаИзСправочника));
	КонецЕсли;
	
	ТЗИтоги=СоздатьОбъект("ТаблицаЗначений");

	РегПартии = СоздатьОбъект("Регистр.Партии");
	Если ЦенаТовара.ТекущаяСтрока()=1 Тогда
		 // если считаем себестоимость из регистра партии ТМЦ
		Если ВыбФирма.Выбран()=1 Тогда
			РегПартии.УстановитьЗначениеФильтра("Фирма",ВыбФирма);
		КонецЕсли;

		Если ТипЗначенияСтр(Д2) = "Дата" Тогда
			Если Д2<ПолучитьДатуТА() Тогда
			    РегПартии.ВременныйРасчет();
				РассчитатьРегистрыПо(Д2);
			КонецЕсли;
		Иначе
			Если Д2.СравнитьТА() = -1 Тогда
			    РегПартии.ВременныйРасчет();
				РассчитатьРегистрыПо(Д2);
			КонецЕсли;
		КонецЕсли;

		РегПартии.ВыгрузитьИтоги(ТЗИтоги,0,1);
		ТЗИтоги.Свернуть("ТМЦ","Стоимость,ОстатокТовара");
	КонецЕсли;                 
	
	// обнуляем счетчик числа строк, выведенных в таблицу отчета
	глЧислоСтрок = 0;

	Таб.ВывестиСекцию("Кнопки");
    
	// выводим шапку отчета
	Таб.ВывестиСекцию("Отчет");  
	глОживить(Таб.ВысотаСекции("Отчет"));
	Хвост = ?(фДопКво = 1, "К","");

	Пока Запрос.Группировка("Номенклатура") = 1 Цикл
		Если Запрос.ЭтоГруппа("Номенклатура")=1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если фВыводитьВидУпаковки = 1 Тогда
			Пока Запрос.Группировка("ВУП") = 1 Цикл
				Пока Запрос.Группировка("МестоХранения") = 1 Цикл
					Если ПустоеЗначение(Запрос.МестоХранения) = 1 Тогда
						Продолжить;
					КонецЕсли;
					Если СписокСкладов.НайтиЗначение(Запрос.МестоХранения)=0 Тогда
						СписокСкладов.ДобавитьЗначение(Запрос.МестоХранения);
					КонецЕсли;
				КонецЦикла;
				
				Прервать;
			КонецЦикла;
		Иначе
			Пока Запрос.Группировка("МестоХранения") = 1 Цикл
				Если ПустоеЗначение(Запрос.МестоХранения) = 1 Тогда
					Продолжить;
				КонецЕсли;
				Если СписокСкладов.НайтиЗначение(Запрос.МестоХранения)=0 Тогда
					СписокСкладов.ДобавитьЗначение(Запрос.МестоХранения);
				КонецЕсли;
			КонецЦикла;			
		КонецЕсли;
	КонецЦикла;

	Если фВыводитьВидУпаковки = 1 Тогда
		Таб.ВывестиСекцию("Шапка|ТоварЦена");
	Иначе
		Таб.ВывестиСекцию("Шапка|ТоварЦена<");
		Таб.ПрисоединитьСекцию("Шапка|ТоварЦена>");
	КонецЕсли;	
	
	Для Сч=1 По СписокСкладов.РазмерСписка() Цикл
		ПечСклад=СписокСкладов.ПолучитьЗначение(Сч);
		Таб.ПрисоединитьСекцию("Шапка|СкладСтоимость"+Хвост);
	КонецЦикла;                             
	Таб.ПрисоединитьСекцию("Шапка|ИтогСтолбец");
	глОживить(1);
           
	ГруппыТоваров = СоздатьОбъект("СписокЗначений");
	Запрос.вНачалоВыборки();
	Пока Запрос.Группировка("Номенклатура") = 1 Цикл
		Если Запрос.ЭтоГруппа("Номенклатура")=1 Тогда
	   		Таб.ВывестиСекцию("Группа|ТоварЦена");
	   		Для Сч=1 По СписокСкладов.РазмерСписка() Цикл
				Таб.ПрисоединитьСекцию("Группа|СкладСтоимость"+Хвост);
			КонецЦикла;
			Таб.ПрисоединитьСекцию("Группа|ИтогСтолбец");
			глОживить(1);
			Продолжить;
		КонецЕсли;
		
		Если фВыводитьВидУпаковки =1 Тогда
			Пока Запрос.Группировка("ВУП") = 1 Цикл
				ВывестиТоварыВОтчетеСЦенами(ТЗИтоги, Запрос, СписокОстатков, СписокОстатковК, СписокСтоимостей, СписокСкладов, Хвост);
			КонецЦикла;
		Иначе
			ВывестиТоварыВОтчетеСЦенами(ТЗИтоги, Запрос, СписокОстатков, СписокОстатковК, СписокСтоимостей, СписокСкладов, Хвост);
		КонецЕсли;
	КонецЦикла;
	
	ИтогИтог=0;// итог всего
	Если фВыводитьВидУпаковки = 1 Тогда
		Таб.ВывестиСекцию("Итог|ТоварЦена");
	Иначе
		Таб.ВывестиСекцию("Итог|ТоварЦена<");
		Таб.ПрисоединитьСекцию("Итог|ТоварЦена>");
	КонецЕсли;	

	Для Сч=1 По СписокСкладов.РазмерСписка() Цикл
		ТекСтоимостьСклада 	= "";
		ТекСклад			= СписокСкладов.ПолучитьЗначение(Сч,ТекСтоимостьСклада);
		ПечИтогСтоимость	= ?(фБезЦифр = 1, "", глФрм(Число(ТекСтоимостьСклада),Гривня,1));
		ИтогИтог			= ИтогИтог+Число(ТекСтоимостьСклада);
		Таб.ПрисоединитьСекцию("Итог|СкладСтоимость"+Хвост);
	КонецЦикла;                             
	ПечИтогИтог	= ?(фБезЦифр = 1, "", глФрм(ИтогИтог,Гривня,1));
	Таб.ПрисоединитьСекцию("Итог|ИтогСтолбец");

	ФиксКвоСтрок = Таб.ВысотаСекции("Кнопки")+Таб.ВысотаСекции("Отчет")+Таб.ВысотаСекции("Шапка");
	ФиксКвоКолон = 2;
	Таб.Опции(0, 0, ФиксКвоСтрок, ФиксКвоКолон, "ПарамПечатиУпрОстаткиСЦенами", "РазмОкнаУпрОстаткиСЦенами");
	Таб.ОбластьПечати(Таб.ВысотаСекции("Кнопки")+1);

	// Вывод заполненной формы
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("ПЕЧАТЬ: Стоимость ТМЦ на складах (На "+Дата2+?(ТипЗначения(ВыбФирма)=0, "", ", "+ВыбФирма)+")","");
	
	ОтчетСформирован = 1;
	
КонецПроцедуры		// ОстаткиТоваровСЦенами


// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
Процедура ДоступностьЭлементов(ВсеЭлементы=0)           
	
	ЭлементДиалога = Форма.АктивныйЭлемент();

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВидОтчета") Тогда
		Если ВидОтчета.ТекущаяСтрока() = 1 Тогда	// движения ТМЦ
			Форма.тПериод.	Видимость(1);
			Форма.тС.		Видимость(1);
			Форма.Дата1.	Видимость(1);
			Форма.кПериод.	Видимость(1);
			Форма.тПо.Заголовок("по");

			Форма.Заголовок("Движения ТМЦ по складам");
			Форма.тНазвание.Заголовок("Движения ТМЦ по складам");

			Форма.тПоказать.		Доступность(0);
			Форма.ПоказатьОстатки.	Доступность(0);

			Форма.тЦена.			Доступность(0);
			Форма.ЦенаТовара.		Доступность(0);
			Форма.ЦенаИзСправочника.Доступность(0);
	
			Форма.рДетализация.		Доступность(1); 
			Форма.ДеталПоСкладам.	Доступность(1); 
			Форма.ДеталПоДокументам.Доступность(1);

		ИначеЕсли ВидОтчета.ТекущаяСтрока() = 2 Тогда  // остатки ТМЦ
			//Форма.тПериод.	Видимость(0);
			//Форма.тС.		Видимость(0);
			//Форма.Дата1.	Видимость(0);
			//Форма.кПериод.	Видимость(0);
			//Форма.тПо.Заголовок("На");

			Форма.Заголовок("Остатки ТМЦ на складах");
			Форма.тНазвание.Заголовок("Остатки ТМЦ на складах");

			Форма.тПоказать.		Доступность(1);
		    Форма.ПоказатьОстатки.	Доступность(1);

			Форма.тЦена.			Доступность(0);
			Форма.ЦенаТовара.		Доступность(0);
			Форма.ЦенаИзСправочника.Доступность(0);

			Форма.рДетализация.		Доступность(0); 
			Форма.ДеталПоСкладам.	Доступность(0); 
			Форма.ДеталПоДокументам.Доступность(0);
			ДеталПоСкладам		= 1;
			ДеталПоДокументам	= 0;

		Иначе	// стоимость ТМЦ на складах
			Форма.тПериод.	Видимость(0);
			Форма.тС.		Видимость(0);
			Форма.Дата1.	Видимость(0);
			Форма.кПериод.	Видимость(0);
			Форма.тПо.Заголовок("На");

			Форма.Заголовок("Суммовые остатки ТМЦ на складах");
			Форма.тНазвание.Заголовок("Суммовые остатки ТМЦ на складах");

			Форма.тПоказать.		Доступность(0);
			Форма.ПоказатьОстатки.	Доступность(0);

			Форма.тЦена.			Доступность(1);
			Форма.ЦенаТовара.		Доступность(1);
			Форма.ЦенаИзСправочника.Доступность(?(ЦенаТовара.ТекущаяСтрока()=3,1,0));

			Форма.рДетализация.		Доступность(0); 
			Форма.ДеталПоСкладам.	Доступность(0); 
			Форма.ДеталПоДокументам.Доступность(0);
			ДеталПоСкладам		= 0;
			ДеталПоДокументам	= 0;

		КонецЕсли;
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбФирма") Или (ЭлементДиалога="кХВыбФирма") Тогда
		Форма.кХВыбФирма.Доступность(ВыбФирма.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбМестоХранения") Или (ЭлементДиалога="кХВыбМестоХранения") Тогда
		Форма.кХВыбМестоХранения.Доступность(ВыбМестоХранения.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбНоменклатура") Или (ЭлементДиалога="кХВыбНоменклатура") Тогда
		Форма.кХВыбНоменклатура.Доступность(ВыбНоменклатура.Выбран()); 
	КонецЕсли;
	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбВУП") Или (ЭлементДиалога="кХВыбВУП") Тогда
		Форма.кХВыбВУП.Доступность(ВыбВУП.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ЦенаТовара") Тогда
		Если ЦенаТовара.ТекущаяСтрока()=0 Тогда
			ЦенаИзСправочника=0;
			Форма.ЦенаИзСправочника.Доступность(0);
		ИначеЕсли ЦенаТовара.ПолучитьЗначение(ЦенаТовара.ТекущаяСтрока())="изсправочника" Тогда
			Форма.ЦенаИзСправочника.Доступность(1);
		Иначе
			ЦенаИзСправочника=0;
			Форма.ЦенаИзСправочника.Доступность(0);
		КонецЕсли;	                 
	КонецЕсли;

КонецПроцедуры  	// ДоступностьЭлементов

// ===============================
Процедура Сформировать(ЗакрытьЭкран=0)	
	глПроверкаДаты(Дата1,Дата2); 
	                             
	// Здесь формируется отчет, который использует регистры, критичные к
    // последовательности проведения документов
    // поэтому сравним установленные даты периода формируемого отчета с ГП 
    глПроверкаАктуальностиОтчета(Дата1,Дата2,ВыбФирма,0);

	//  Создание Таблицы для выходного отчета
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;

	СписИсключений = глПолучитьСписИсключений();
	// все настройки помещаем в список
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "ОстаткиТМЦ");
    
	Расшифровка.Установить("Дата1", Дата1);
    Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("ДокНачала", ДокНачала);
    Расшифровка.Установить("ДокКонца", ДокКонца);

	
	Расшифровка.Установить("ВыбФирма", ВыбФирма);
	Расшифровка.Установить("ВыбМестоХранения", ВыбМестоХранения);          
	Расшифровка.Установить("ВыбНоменклатура", ВыбНоменклатура);
	// запомним МФ только если он задан
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
	КонецЕсли;
	
	Расшифровка.Установить("ВидОтчета", 		ВидОтчета.ТекущаяСтрока());
	Расшифровка.Установить("ПоказатьОстатки", 	ПоказатьОстатки.ТекущаяСтрока());
	Расшифровка.Установить("ЦенаТовара", 		ЦенаТовара.ТекущаяСтрока()); 
	Расшифровка.Установить("ЦенаИзСправочника", ЦенаИзСправочника);

	Расшифровка.Установить("ДеталПоСкладам", 	ДеталПоСкладам); 
	Расшифровка.Установить("ДеталПоДокументам", ДеталПоДокументам);
	Расшифровка.Установить("фБезГрупп", фБезГрупп);
	Расшифровка.Установить("фДопКво", фДопКво);
	Расшифровка.Установить("фБезПер", фБезПер);
	Расшифровка.Установить("фТолькоСп", фТолькоСп);
	Расшифровка.Установить("фТолькоСпПоИнв", фТолькоСпПоИнв);
	Расшифровка.Установить("фВыводитьВидУпаковки", фВыводитьВидУпаковки);
	Расшифровка.Установить("фЕдУм", фЕдУм);
	
	ОтчетСформирован = 0;
	
	Если ВидОтчета.ТекущаяСтрока()=1 Тогда		// движения ТМЦ
	    ДвиженияТоваров(); 
	ИначеЕсли ВидОтчета.ТекущаяСтрока()=2 Тогда	// остатки ТМЦ
		ОстаткиТоваров();
	ИначеЕсли ВидОтчета.ТекущаяСтрока()=3 Тогда	// остатки с себестоимостью 
		ОстаткиТоваровСЦенами();
	КонецЕсли;           
	
	Если ОтчетСформирован = 0 Тогда
		Возврат;
	КонецЕсли;	

	Если (Обновить = 2) Или (ЗакрытьЭкран=1) Тогда
	    СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;	
КонецПроцедуры              

// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение="")	
	// закладки
    Если Номер=1 Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
    ИначеЕсли Номер=2 Тогда
		Форма.ИспользоватьСлой("Шапка,МФ,Подвал");
	КонецЕсли;      
	ПерерисовкаНазванийЗакладок();
	ДоступностьЭлементов(1);
КонецПроцедуры	// ПриВыбореЗакладки

// ===============================
Процедура ОбработкаПодбора(Значение)  
	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
КонецПроцедуры  // ОбработкаПодбора
                                      
// ===============================
Процедура ПриОткрытии()	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		глФлагРасшифровки = 0;
		
		// восстанавливаем настройки из списка
		Дата1 = глРасшифровка.Получить("Дата1");
		Дата2 = глРасшифровка.Получить("Дата2");
		
		ВыбФирма = глРасшифровка.Получить("ВыбФирма");
		ВыбМестоХранения = глРасшифровка.Получить("ВыбМестоХранения");
		ВыбНоменклатура = глРасшифровка.Получить("ВыбНоменклатура");
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;
		
		ВидОтчета.		ТекущаяСтрока(глРасшифровка.Получить("ВидОтчета")); 
		ПоказатьОстатки.ТекущаяСтрока(глРасшифровка.Получить("ПоказатьОстатки"));
		ЦенаТовара.		ТекущаяСтрока(глРасшифровка.Получить("ЦенаТовара"));
		ЦенаИзСправочника = глРасшифровка.Получить("ЦенаИзСправочника");
		фБезГрупп = глРасшифровка.Получить("фБезГрупп");
		фВыводитьВидУпаковки = глРасшифровка.Получить("фВыводитьВидУпаковки");
		
		ДеталПоСкладам 		= глРасшифровка.Получить("ДеталПоСкладам");  
		ДеталПоДокументам 	= глРасшифровка.Получить("ДеталПоДокументам");  
		ДокНачала			= глРасшифровка.Получить("ДокНачала");
		ДокКонца			= глРасшифровка.Получить("ДокКонца");
		фДопКво 			= глРасшифровка.Получить("фДопКво");
		фБезПер 			= глРасшифровка.Получить("фБезПер");
		фТолькоСп			= глРасшифровка.Получить("фТолькоСп");
		фТолькоСпПоИнв		= глРасшифровка.Получить("фТолькоСпПоИнв");
		фЕдУм				= глРасшифровка.Получить("фЕдУм");
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		фВыводитьВидУпаковки = ?(ТекущаяДата() >= Константа.ДатаНачалаРаботыСУпаковкой, 1, 0);
		ВыбФирма = Константа.БазФирма;
		Обновить = 0;
	КонецЕсли;
	
	// будем отслеживать только реальные изменения этих реквизитов
	Форма.ВидОтчета.ВыполнятьФормулуТолькоПриИзменении(1); 

	ТаблицаМФ.ВидимостьКолонки("Тип",0);
	ТаблицаМФ.ВидимостьКолонки("Вид",0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",0);
	
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");

	ПриВыбореЗакладки(1);
	
	//Если НазваниеНабораПрав() = "СнабжениеТабель" Тогда	// --- УМК Сандомирский В.Ю. (15.06.15)		
	//	ФормаРасш = СоздатьОбъект("РасширениеФормы");
	//	ФормаРасш.УстановитьФорму(Форма);
	//	Для Х = 0 По ФормаРасш.КоличествоАтрибутов() - 1 Цикл				
	//		Если    (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кнОК")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кнСформировать") 
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кнЗакрыть") 
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "Дата1")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "Дата2") 
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кПериод") 
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "Дата1Р") 
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "Дата2Р")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кПериод1")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "ВыбПериода")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кнВыбДокНачала")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кнУдДокНачала")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кнВыбДокКонца") 
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кнУдДокКонца") 
	//			
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "ТаблицаМФ")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "СписокЭлементовМФ")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кн1")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кн2")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кн3")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кн4")
	//			ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кн5")
	//					
	//			Тогда	
	//				
	//			//--- не закрываем
	//			ФормаРасш.ПолучитьАтрибут(Х).Доступность = 1;		
	//		Иначе
	//			//--- закрываем
	//			ФормаРасш.ПолучитьАтрибут(Х).Доступность = 0;	
	//		КонецЕсли;			
	//	КонецЦикла;
	//	
	//	ВыбФирма 			= Константа.БазФирма;
	//	ВыбМестоХранения 	= Константа.УМК_СкладЦех;
	//	
	//КонецЕсли;	
	
	Если НазваниеНабораПрав() = "КладовщикУпаковки" Тогда	// --- УМК Сандомирский В.Ю. (15.06.15)		
		
		СпрОболочка = СоздатьОбъект("Справочник.ТМЦ");
		СпрОболочка.НайтиПоКоду("00124",0);
		ВыбНоменклатура = СпрОболочка.ТекущийЭлемент();
		
	КонецЕсли;
	
КонецПроцедуры		// ПриОткрытии()  

// ===============================
Процедура ВводНового()	// Предопределенная процедура
	// эта предопределенная процедура выполняется при восстановлении настройки
	ТекСтрокаВТаблицеМФ="";
	ПриВыбореЗакладки(1);
КонецПроцедуры		// ВводНового


// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

// инициализация границ периодов
Дата2=ПолучитьДатуТА(); 
Дата1=глВосстановитьЗначение(,"ОсновнаяДатаНачалаОтчета");
Если ПустоеЗначение(Дата1)=0 Тогда
	Дата1=НачМесяца(Дата1);
КонецЕсли;         

// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");
                                                                                
//                  			тип			вид					переменная  	название
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","МестаХранения",	"МестоХранения",	    "По складам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ТМЦ",			    "Номенклатура",			"По номенклатуре");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",    "Номенклатура",  		"По категориям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыУпаковки",     "ВУП",  				"По видам упаковки");

ТекСтрокаВТаблицеМФ="";

// инициализация списков	                       
ВидОтчета.УдалитьВсе();
ВидОтчета.ДобавитьЗначение("движения ТМЦ"); 
ВидОтчета.ДобавитьЗначение("остатки ТМЦ");
ВидОтчета.ДобавитьЗначение("стоимость ТМЦ на складах");
ВидОтчета.ТекущаяСтрока(1);                        

ПоказатьОстатки.УдалитьВсе();                             
ПоказатьОстатки.ДобавитьЗначение("все ненулевые остатки"); 
ПоказатьОстатки.ДобавитьЗначение("все"); 
ПоказатьОстатки.ДобавитьЗначение("все, имеющиеся в наличии"); 
ПоказатьОстатки.ДобавитьЗначение("меньше мин. остатка"); 
ПоказатьОстатки.ДобавитьЗначение("меньше мин. остатка с учетом резерва");
ПоказатьОстатки.ТекущаяСтрока(1);                                 

ЦенаТовара.УдалитьВсе();
ЦенаТовара.ДобавитьЗначение("себестоимость","себест. без НДС"); 
ЦенаТовара.ДобавитьЗначение("учетная",		"учетная"); 
ЦенаТовара.ДобавитьЗначение("изсправочника","из справочника");
ЦенаТовара.ТекущаяСтрока(1);

