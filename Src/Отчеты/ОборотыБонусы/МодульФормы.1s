// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================
Перем ТЗДок;
Перем ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
                        
// переменные предназначены для механизма универсальных группировок отчета
Перем СписокГруппировок;
Перем КоличествоГруппировок;
Перем НомерГруппировкиНоменклатура;

// переменные предназначены для запроса по периодам
Перем Запрос,ЗапросСПериодами,ТаблицаПериодов,Периодичность;
Перем Язык, УкрГруппировки;

Перем Заголовок, ПечЗаголовокСтолбца;

Перем ГруппировкиПоДвижениям;
Перем ХвостК;
Перем ДокНачала, ДокКонца;
Перем Д1, Д2;
Перем СписокТаблицССуммамиДок;
Перем СтекЗначенийГруппировок;

Перем ИтогСуммаДок , ИтогКвоДок, ИтогСуммаМинусБонус; //--- УМК Сандомирский В.Ю, (06.05.14)


// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
Процедура ВыбратьПоФильтру()
	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру


// ===============================
Функция ПерерисовкаНазванийЗакладок()      

	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");
	
КонецФункции // ПерерисовкаНазванийЗакладок	

// ===============================
Процедура УстановитьГруппировкиЗапроса(ТекстЗапроса, ТекстЗагол)
	                       
	СписокГруппировок = СоздатьОбъект("СписокЗначений");
	КвоГруппировок 				= Группировки.РазмерСписка();
	НомерГруппировкиНоменклатура= КвоГруппировок;

	Для Сч=1 По КвоГруппировок Цикл
		
		Если Группировки.Пометка(Сч)=1 Тогда
			ПредставлениеГрупп		=""; 
			УкрПредставлениеГрупп	="";
			ТекстГрупп = Группировки.ПолучитьЗначение(Сч,ПредставлениеГрупп);
			УкрГруппировки.ПолучитьЗначение(УкрГруппировки.НайтиЗначение(ТекстГрупп),УкрПредставлениеГрупп);
			
			ТекстБезУпорядочивания = "";
			ТекстБезГрупп = "";
			Если ( (ТекстГрупп = "Номенклатура") Или (ТекстГрупп = "Покупатель") 
				 Или (ТекстГрупп = "КатЦен") Или (ТекстГрупп = "Контрагент") ) И (фБезГрупп = 2) Тогда
					ТекстБезГрупп = " без групп";
			КонецЕсли;
			
			ТекстЗапроса= ТекстЗапроса 	+ "Группировка "+ТекстГрупп+ТекстБезУпорядочивания+ТекстБезГрупп+";";
			ТекстЗагол	= ТекстЗагол + " / "+?(Язык="у",УкрПредставлениеГрупп,ПредставлениеГрупп);
			СписокГруппировок.ДобавитьЗначение(ТекстГрупп,ПредставлениеГрупп);
			Если ТекстГрупп = "Номенклатура" Тогда
			    НомерГруппировкиНоменклатура = СписокГруппировок.РазмерСписка();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 

	Если ПустаяСтрока(ТекстЗагол)=0 Тогда // удаляем ведущий разделитель " / "
		ТекстЗагол = Сред(ТекстЗагол,4)
	КонецЕсли;

КонецПроцедуры // УстановитьГруппировкиЗапроса()
    
Функция ПолучитьСуммуДок(Ном, Запрос, КвоДок)
	// вначале получаем строку ключа и его значение
	КлючПоиска = ""; КлючПоискаСписок = "";
	Для Инд = 1 По СтекЗначенийГруппировок.РазмерСписка() Цикл
		Зн = "";
		КлючПоиска = КлючПоиска + ЗначениеВСтрокуВнутр(СтекЗначенийГруппировок.ПолучитьЗначение(Инд, Зн)) + "//";
		КлючПоискаСписок = КлючПоискаСписок + ?(Зн = "Документ", "Текущий", "") + Зн + ",";
	КонецЦикла;
	
	КлючПоискаСписок = Лев(КлючПоискаСписок, СтрДлина(КлючПоискаСписок) - 1);
	
	СуммаДок = 0; Стр = 0; КвоДок = 0;
	Если СписокТаблицССуммамиДок.НайтиЗначение(КлючПоискаСписок, Стр, "СтрГруппировки") = 1 Тогда
		СписокТаблицССуммамиДок.ПолучитьСтрокуПоНомеру(Стр);
		СтрК = 0;
		Если СписокТаблицССуммамиДок.ТЗ.НайтиЗначение(КлючПоиска, СтрК, "Ключ") = 1 Тогда
			КвоДок = СписокТаблицССуммамиДок.ТЗ.ПолучитьЗначение(СтрК, "КвоДок");
			Возврат СписокТаблицССуммамиДок.ТЗ.ПолучитьЗначение(СтрК, "СуммаДок");
		КонецЕсли;		
	КонецЕсли;
	
	Возврат СуммаДок;
КонецФункции

// ===============================
Процедура ПечатьПериода(Ном,НазваниеСекции,Запрос, Значение)

	Номенклатура = Запрос.Номенклатура;
	СуммаДок = 0; КвоДок = 0;
	Если фКатегория = 1 Тогда
		ПечКатегорияЦен = "";
		Если ТипЗначенияСтр(Значение) = "Справочник" Тогда
			Если Значение.Вид() = "Контрагенты" Тогда
				ПечКатегорияЦен = Значение.КатегорияЦен.Получить(Дата2);
			КонецЕсли;
		ИначеЕсли ТипЗначенияСтр(Значение) = "Документ" Тогда
			Попытка
				ПечКатегорияЦен = Значение.КатегорияЦен;
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		Таб.ПрисоединитьСекцию(НазваниеСекции + "|КатегорияЦен");
	КонецЕсли;
	
	Если (фСуммаДок = 1) ИЛИ (фКвоДок = 1) Тогда    
		КвоДок = 0;
		СуммаДок = ПолучитьСуммуДок(Ном, Запрос, КвоДок);
		ПечСуммаДок = глФРМ(СуммаДок,Гривня,1);
		ПечКвоДок = Формат(КвоДок, "Ч15.3");
		
		//--- УМК Сандомирский В.Ю, (06.05.14)
		Если НазваниеСекции = "Группировка1" Тогда			
			ИтогСуммаДок = ИтогСуммаДок + Формат(СуммаДок,"Ч018.2");
			ИтогКвоДок = ИтогКвоДок + Формат(КвоДок,"Ч018.2");
		КонецЕсли;
		
		Если НазваниеСекции = "Итого" Тогда
			ПечСуммаДок = глФРМ(ИтогСуммаДок,Гривня,1);
			ПечКвоДок = Формат(ИтогКвоДок,"Ч15.3");
		КонецЕсли;
		//... УМК Сандомирский В.Ю, (06.05.14)
		
		Если (фСуммаДок = 1) Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|СуммаДок");
		КонецЕсли;
		Если (фКвоДок = 1) Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|КвоДок");
		КонецЕсли;			
	КонецЕсли;
	Если фБаза = 1 Тогда    
		ПечБаза = глФРМ(Запрос.БазаСумма,Гривня,1);
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|База");
	КонецЕсли;
	Если фБонус = 1 Тогда    
		ПечБонус = глФРМ(Запрос.БонусСумма,Гривня,1);
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Бонус");
	КонецЕсли;
	Если фПроцент = 1 Тогда    
		ПечПроцент = Формат((Запрос.БонусСумма / ?(Запрос.БазаСумма = 0, 1, Запрос.БазаСумма) * 100),"Ч12.2");
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Процент");
	КонецЕсли;
	Если фРазница = 1 Тогда    
		ПечРазница = глФРМ(?(СуммаДок = 0, 0, СуммаДок - Запрос.БонусСумма), Гривня, 1);
		
		//--- УМК Сандомирский В.Ю, (06.05.14)
		Если НазваниеСекции = "Группировка1" Тогда	
			ТекРазница = ?(СуммаДок = 0, 0, СуммаДок - Запрос.БонусСумма);
			ИтогСуммаМинусБонус = ИтогСуммаМинусБонус + Формат(ТекРазница,"Ч018.2");
		КонецЕсли;
		
		Если НазваниеСекции = "Итого" Тогда
			ПечРазница = глФРМ(ИтогСуммаМинусБонус,Гривня,1);
		КонецЕсли;
		//... УМК Сандомирский В.Ю, (06.05.14)
			
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Разница");
	КонецЕсли;

КонецПроцедуры //ПечатьПериода()

// ===============================
Процедура ПечатьСтроки(Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка = "",ЭтоГруппа=0,Значение = 0)
Перем Секция;

	ТекЗн = Значение;
	Если ТипЗначенияСтр(Значение) = "Справочник" Тогда
		Если (фБезГрупп = 3) И (ЭтоГруппа = 0) Тогда
		    Возврат;
		ИначеЕсли ((фБезГрупп = 3) И (ЭтоГруппа = 0)) ИЛИ ((фБезГрупп = 4) И (ЭтоГруппа = 0) И (Значение.Уровень() <> 2)) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Наим = ПечТекстСтроки;
	Значение = ТекРасшифровка;
	Секция = Таб.ПолучитьСекцию(НазваниеСекции+"|Наименование");
	Область = Секция.Область("R1C1:R1C8");
	Область.Подчеркнутый(ЭтоГруппа);
	Таб.ВывестиСекцию(Секция);
	
    ПечатьПериода(Ном, НазваниеСекции, Запрос, ТекЗн);

	Если (Периодичность <> 0) Тогда
		// выведем теперь все периоды, с разворотом вправо
		ТаблицаПериодов.ВыбратьСтроки();
		Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
			глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,Ном,ТаблицаПериодов.РеалНачалоПериода);
//			ПечатьПериода(Ном, НазваниеСекции, ЗапросСПериодами);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры //ПечатьСтроки()

// ===============================
Процедура ВывестиГруппировки(Знач Ном=1)

	Если Ном > КоличествоГруппировок Тогда                           
		Возврат;
	КонецЕсли;

	НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(Ном);
	Пока Запрос.Группировка(Ном) = 1 Цикл
		НазваниеСекции="Группировка"+Ном;
		Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);
		СтекЗначенийГруппировок.ДобавитьЗначение(Значение, НазваниеГруппировки);
		
		Если Найти("Номенклатура,Покупатель,КатЦен,Контрагент",НазваниеГруппировки) > 0 Тогда
			ПечТекстСтроки = глСмещениеГруппы(Значение,Мин(3, фБезГрупп)-1) + Значение;
		ИначеЕсли Найти("ВидБазы",НазваниеГруппировки) > 0 Тогда
			ПечТекстСтроки = Значение;			
		ИначеЕсли Найти("СхемаРБ",НазваниеГруппировки) > 0 Тогда
			
			ПечТекстСтроки = СокрЛП(Значение.Примечание) + " " + глДокументВОтчете(Значение,"с номером","с датой",Язык);
			
		Иначе
			// Договор,Счет,КредДокумент,Документ
			Если ПустоеЗначение(Значение)=0 Тогда
				ПечТекстСтроки = ""+глДокументВОтчете(Значение,"с номером","с датой",Язык);
			Иначе
				ПечТекстСтроки = "";
			КонецЕсли;
		КонецЕсли;
		
		ПечТекстСтроки = ?(ПустоеЗначение(ПечТекстСтроки)=1,глПредставлениеПустогоЗначения(НазваниеГруппировки,Язык),ПечТекстСтроки);

		ЗначениеРасшифровки = 0;
		Если НазваниеГруппировки = "Документ" Тогда
		    // остатки расшифровать до движений нельзя
			ЗначениеРасшифровки = Значение;
		Иначе
			// расшифровываем до движений, отбираем только текущие значения
			Расшифровка.Установить("Выб"+НазваниеГруппировки, Значение);
			Расшифровка.Установить("Группировки", ГруппировкиПоДвижениям);
			ЗначениеРасшифровки = Расшифровка;
		КонецЕсли;

		ПечатьСтроки(Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,ЗначениеРасшифровки,Запрос.ЭтоГруппа(НазваниеГруппировки), Значение);
		глОживить(1);

		ВывестиГруппировки(Ном+1);
		СтекЗначенийГруппировок.УдалитьЗначение(СтекЗначенийГруппировок.РазмерСписка());
	КонецЦикла;
	// очищаем отборы по расшифровке до движений
	Если Не( НазваниеГруппировки = "Документ") Тогда
		Расшифровка.Установить("Выб"+НазваниеГруппировки);
		Расшифровка.Установить("Группировки");
	КонецЕсли;

КонецПроцедуры // ВывестиГруппировки()

// ===============================
Процедура ВывестиШапкуПериода(НазваниеСекции,Период="")
	
	Если фКатегория = 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|КатегорияЦен");
	КонецЕсли;
	Если фСуммаДок = 1 Тогда    
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|СуммаДок");
	КонецЕсли;
	Если фКвоДок = 1 Тогда    
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|КвоДок");
	КонецЕсли;	
		
	Если фБаза = 1 Тогда    
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|База");
	КонецЕсли;

	Если фБонус  = 1 Тогда    
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Бонус");
	КонецЕсли;
	Если фПроцент = 1 Тогда    
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Процент");
	КонецЕсли;
	Если фРазница = 1 Тогда    
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Разница");
	КонецЕсли;
КонецПроцедуры 


// ===============================
Процедура ВывестиШапку()
	Таб.ВывестиСекцию("Шапка|Наименование");
	ВывестиШапкуПериода("Шапка");
	Если Периодичность<>0 Тогда 
	КонецЕсли;
	глОживить(1);
	Таб.Область(5,1,5,Таб.ШиринаТаблицы()).ГоризонтальноеПоложение(1+4);
КонецПроцедуры 


// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
Процедура УстКолонкиОтчета()

	ЭлементДиалога = Форма.АктивныйЭлемент();
	
	Если фБаза + фБонус + фСуммаДок + фКвоДок = 0 Тогда // хотя бы одна должна быть выбрана
		Если ЭлементДиалога = "фСуммаДок" Тогда
			фСуммаДок = 1;
		ИначеЕсли ЭлементДиалога = "фБаза" Тогда
			фБаза = 1;
		ИначеЕсли ЭлементДиалога = "фБонус" Тогда
			фБонус = 1;
		ИначеЕсли ЭлементДиалога = "фКвоДок" Тогда
			фКвоДок = 1;			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// ===============================
Процедура ДоступностьЭлементов(ВсеЭлементы=0)           
	
	ЭлементДиалога = Форма.АктивныйЭлемент();

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбНоменклатура") Или (ЭлементДиалога="кХВыбНоменклатура") Тогда
		Форма.кХВыбНоменклатура.Доступность(ВыбНоменклатура.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбПокупатель") Или (ЭлементДиалога="кХВыбПокупатель") Тогда
		Форма.кХВыбПокупатель.Доступность(ВыбПокупатель.Выбран()); 
	КонецЕсли;
	
	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбКатЦен") Или (ЭлементДиалога="кХВыбКатЦен") Тогда
		Форма.кХВыбПокупатель.Доступность(ВыбКатЦен.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбВидБазы") Или (ЭлементДиалога="кХВыбВидБазы") Тогда
		Форма.кХВыбПокупатель.Доступность(ВыбВидБазы.Выбран()); 
	КонецЕсли;
КонецПроцедуры  	// ДоступностьЭлементов

Функция НеБылоДокумента(Номенклатура,Контрагент,Покупатель,КатЦен,СхемаРБ,ВидБазы)
КонецФункции

Процедура ЗаполнитьСписокТаблицДляСуммДок()
	СписокТаблицССуммамиДок = СоздатьОбъект("ТаблицаЗначений");
	СписокТаблицССуммамиДок.НоваяКолонка("СтрГруппировки", "Строка");
	СписокТаблицССуммамиДок.НоваяКолонка("ТЗ", "ТаблицаЗначений");
	
	АктивныеГруппировки = СоздатьОбъект("СписокЗначений");
	СписокГруппировок.Выгрузить(АктивныеГруппировки);
	СтрГруппировки = "";
	
	Для Инд = 1 По СписокГруппировок.РазмерСписка() Цикл
		Зн = СписокГруппировок.ПолучитьЗначение(Инд);
		Если Зн = "Документ" Тогда
			Зн = "ТекущийДокумент";
		КонецЕсли;
		СтрГруппировки = СтрГруппировки + Зн + ",";
		АктивныеГруппировки.УстановитьЗначение(Инд, Зн);
	КонецЦикла;

	Пока АктивныеГруппировки.РазмерСписка() > 0 Цикл
		ТЗДок.Свернуть(СтрГруппировки + "СуммаДок,КвоДок,ТекущийДокумент,Номенклатура,НомерСтроки", "БСумма");		
		
		СписокТаблицССуммамиДок.НоваяСтрока();
		СписокТаблицССуммамиДок.СтрГруппировки = Лев(СтрГруппировки, СтрДлина(СтрГруппировки) - 1);
		СписокТаблицССуммамиДок.ТЗ = СоздатьОбъект("ТаблицаЗначений");
		СписокТаблицССуммамиДок.ТЗ.Загрузить(ТЗДок);
		СписокТаблицССуммамиДок.ТЗ.Свернуть(СписокТаблицССуммамиДок.СтрГруппировки, "СуммаДок,КвоДок");
		// теперь свернём по сумме документа
		СписокТаблицССуммамиДок.ТЗ.НоваяКолонка("Ключ", "Строка");
		СписокТаблицССуммамиДок.ТЗ.ВыбратьСтроки();
		Пока СписокТаблицССуммамиДок.ТЗ.ПолучитьСтроку() = 1 Цикл
			Для Инд = 1 По АктивныеГруппировки.РазмерСписка() Цикл
				СписокТаблицССуммамиДок.ТЗ.Ключ = СписокТаблицССуммамиДок.ТЗ.Ключ + ЗначениеВСтрокуВнутр(СписокТаблицССуммамиДок.ТЗ.ПолучитьЗначение(СписокТаблицССуммамиДок.ТЗ.НомерСтроки, АктивныеГруппировки.ПолучитьЗначение(Инд))) + "//";
			КонецЦикла;
		КонецЦикла;
		
		СтрГруппировки = СтрЗаменить(СтрГруппировки, АктивныеГруппировки.ПолучитьЗначение(АктивныеГруппировки.РазмерСписка()) + ",", "");
		АктивныеГруппировки.УдалитьЗначение(АктивныеГруппировки.РазмерСписка());
	КонецЦикла;	
	
	СписокТаблицССуммамиДок.Сортировать("СтрГруппировки");
КонецПроцедуры

// ===============================
Процедура Сформировать(ЗакрытьДиалог=0)
	
	Перем ТекстЗапроса;
	СтекЗначенийГруппировок.УдалитьВсе();
	
	
	ИтогСуммаДок 		= 0;	//--- УМК Сандомирский В.Ю, (06.05.14)
	ИтогКвоДок 			= 0;	//--- УМК Сандомирский В.Ю, (06.05.14)
	ИтогСуммаМинусБонус = 0;	//--- УМК Сандомирский В.Ю, (06.05.14)

	глПроверкаДаты(Дата1,Дата2);
//	ХвостК = ?(ФТолькоКво = 1, "К", "");
	ХвостК = "";
		
	// Здесь формируется отчет, который использует регистры, критичные к
	// последовательности проведения документов
	// поэтому сравним установленные даты периода формируемого отчета с ГП
	глПроверкаАктуальностиОтчета(Дата1,Дата2,Константа.БазФирма,0);
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") Или (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;

	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	Таб.ИсходнаяТаблица(ПечФорма);
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "ОборотыБонусы");
		
	Расшифровка.Установить("Дата1", 		Дата1);
    Расшифровка.Установить("Дата2", 		Дата2);
	Расшифровка.Установить("ДокНачала", ДокНачала);
    Расшифровка.Установить("ДокКонца", ДокКонца);

	Расшифровка.Установить("ВыбНоменклатура",	ВыбНоменклатура);
	Расшифровка.Установить("ВыбПокупатель",		ВыбПокупатель);
	Расшифровка.Установить("ВыбКонтрагент",		ВыбКонтрагент);
	Расшифровка.Установить("ВыбСхемаРБ",		ВыбСхемаРБ);
	Расшифровка.Установить("ВыбКатЦен",			ВыбКатЦен);
	Расшифровка.Установить("ВыбВидБазы",		ВыбВидБазы);
	Расшифровка.Установить("ргВозвр",			ргВозвр);
	// запомним МФ только если он задан
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
	КонецЕсли;

	Расшифровка.Установить("Группировки",	Группировки);	
	Расшифровка.Установить("фБезГрупп",		фБезГрупп);

//	Расшифровка.Установить("СписокПериодов",СписокПериодов.ТекущаяСтрока());

	Расшифровка.Установить("фБонус",	фБонус);
	Расшифровка.Установить("фРазница",	фРазница);
	Расшифровка.Установить("фПроцент",	фПроцент);
	Расшифровка.Установить("фБаза",		фБаза);
	Расшифровка.Установить("фСуммаДок",	фСуммаДок);
	Расшифровка.Установить("фКвоДок",	фКвоДок);
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ЗапросСПериодами = СоздатьОбъект("Запрос");
	               
	Если (Дата2 >= ПолучитьДатуТА()) и (ПустоеЗначение(ДокКонца) = 1) Тогда
		ТекстЗапроса = "
			|Период с Д1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Д1 по Д2;";
	КонецЕсли;
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, Дата1, Дата2);
	
	ТекстЗапроса = ТекстЗапроса + 
		"Номенклатура 		= Регистр.Бонусы.ТМЦ;
		|Контрагент 		= Регистр.Бонусы.КонтрагентБазы;
		|Покупатель 		= Регистр.Бонусы.Контрагент;
		|КатЦен				= Регистр.Бонусы.КатЦен;
		|СхемаРБ			= Регистр.Бонусы.СхемаРБ;
		|ВидБазы		 	= Регистр.Бонусы.ВидБазы;
		|ТекущийДокумент	= Регистр.Бонусы.ТекущийДокумент;
		|";
	
	Загол = "";

	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Номенклатура", ВыбНоменклатура, "ВыбНоменклатура", ТекстЗапроса, Загол, Язык,"КатегорииТоваров")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по позициям номенклатуры. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Покупатель", ВыбПокупатель, "ВыбПокупатель", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по покупателям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Контрагент", ВыбКонтрагент, "ВыбКонтрагент", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по покупателям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"КатЦен", ВыбКатЦен, "ВыбКатЦен", ТекстЗапроса, Загол, Язык, "")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по категориям цен. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ВидБазы", ВыбВидБазы, "ВыбВидБазы", ТекстЗапроса, Загол, Язык, "")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по видам базы. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"СхемаРБ", ВыбСхемаРБ, "ВыбСхемаРБ", ТекстЗапроса, Загол, Язык, "")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по видам базы. Отчет не сформирован.");
		Возврат;
	КонецЕсли;
	
	Если НазваниеНабораПрав() = "АдминистраторМладший" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (Покупатель.Вид() = ""Контрагенты"");";
	КонецЕсли;
		
	// получим второй запрос без группировок
	ТаблицаПериодов = СоздатьОбъект("ТаблицаЗначений");
//	Периодичность = ПериодСтрока();
	Периодичность = 0;
	Если Периодичность <> 0 Тогда
	    ТекстЗапросаПоПериодам = ТекстЗапроса+ "Группировка " + Периодичность + ";";
	КонецЕсли;

	ПечЗаголовокСтолбца = "";
	ТекстГруппировок 	= "";

	Если (фСуммаДок = 1) ИЛИ (фКвоДок = 1) Тогда
		ТекстЗапроса = ТекстЗапроса +
			"СуммаДок = Регистр.Бонусы.СуммаДок;
			|КвоДок = Регистр.Бонусы.КвоДок;";
	КонецЕсли;
		
	
	Если (фБаза = 1) Тогда        
		ТекстЗапроса = ТекстЗапроса +
			"База 	= Регистр.Бонусы.База;";
	КонецЕсли;
	Если (фБонус = 1) Тогда        
		ТекстЗапроса = ТекстЗапроса +
			"Бонус = Регистр.Бонусы.СуммаНач;";
	КонецЕсли;
		 
	УсловиеЗапрос2 = ""; // + umk
	ТекстЗапроса2 = ТекстЗапроса;
	ТекстЗапроса2 = ТекстЗапроса2 + "
	|	НомерСтроки = Регистр.Бонусы.НомерСтроки;";
	Если ргВозвр = 1 Тогда
		ТекстВС = " когда (СуммаДок <= 0)";
		// + umk
		УсловиеЗапрос2 = "
		|Условие (СуммаДок <=0);
		|Условие (КвоДок <=0);";
		//+ umk
	ИначеЕсли ргВозвр = 2 Тогда
		ТекстВС = " когда (СуммаДок >= 0)";  
		// + umk
		УсловиеЗапрос2 = "
		|Условие (СуммаДок >=0);
		|Условие (КвоДок >=0);";
		//+ umk
	Иначе
		ТекстВС = "";
	КонецЕсли;
	
	Если (фСуммаДок = 1) ИЛИ (фКвоДок = 1) Тогда
		ТекстЗапроса = ТекстЗапроса +
			"Функция СуммаДокСумма = Сумма(СуммаДок) " + ТекстВС + ";" +
			"Функция КвоДокДокСумма = Сумма(КвоДок) " + ТекстВС + ";";
	КонецЕсли;
	Если (фБаза = 1) Тогда        
		ТекстЗапроса = ТекстЗапроса +
			"Функция БазаСумма = Сумма(База) " + ТекстВС + ";";
	КонецЕсли;
	Если (фБонус = 1) Тогда        
		ТекстЗапроса = ТекстЗапроса +
			"Функция БонусСумма = Сумма(Бонус) " + ТекстВС + ";";
	КонецЕсли;
	
	УстановитьГруппировкиЗапроса(ТекстГруппировок, ПечЗаголовокСтолбца);
	КоличествоГруппировок = СписокГруппировок.РазмерСписка();
	
	Если КоличествоГруппировок = 0 Тогда
		Предупреждение("Следует выбрать хотя бы одну группировку!");
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ТекстГруппировок;
	Если Периодичность <> 0 Тогда
		// Таблица с периодами
		глПолучитьТаблицуПериодов(ТаблицаПериодов,ЗапросСПериодами,Периодичность);
		ЗапросСПериодами.ВНачалоВыборки();
	КонецЕсли;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Предупреждение("Запрос по кредиту не выполнился!");
		Возврат;
	КонецЕсли;  

	// создаём таблицу по документам, в которой потом будет искать всё, что нам нужно. 
	// искать будем по сочетанию вышестоящих группировок, ТМЦ и документа
	Если (фСуммаДок = 1) ИЛИ (фКвоДок = 1) Тогда
		ТекстЗапроса2 = ТекстЗапроса2 + "
		|Группировка Номенклатура без групп;
		|Группировка Контрагент без групп;
		|Группировка Покупатель без групп;
		|Группировка КатЦен без групп;
		|Группировка СхемаРБ без групп;
		|Группировка ВидБазы без групп;
		|Группировка СуммаДок;
		|Группировка ТекущийДокумент без групп;
		|Группировка НомерСтроки;
		|Функция СуммаДокСумма = Сумма(СуммаДок);
		|Функция КвоДокСумма = Сумма(КвоДок);" + 
		УсловиеЗапрос2 ; // + umk 
		
	    Запрос2 = СоздатьОбъект("Запрос");
		Если Запрос2.Выполнить(ТекстЗапроса2) = 0 Тогда
			Возврат;
		КонецЕсли;
		ТЗДок =СоздатьОбъект("ТаблицаЗначений");
		Запрос2.Выгрузить(ТЗДок,3, 0);
		ЗаполнитьСписокТаблицДляСуммДок();
		
//		ТЗДок.ВыбратьСтроку();
	КонецЕсли;
	
	
	// обнуляем счетчик числа строк, выведенных в таблицу отчета
	глЧислоСтрок = 0;

	Таб.ВывестиСекцию("Кнопки|Наименование");
	Таб.ВывестиСекцию("Заголовок|Наименование");
	глОживить(Таб.ВысотаСекции("Заголовок"));
	
	Расшифровка.Установить("Обновить",0);
	Расшифровка.Установить("ТаблицаМФ", 0);
	
	ВывестиШапку();
	                         
	// ВЫВОД ГРУППИРОВОК ЗАПРОСА
	ВывестиГруппировки();
	
	// выводим итоги
	ПечатьСтроки(0,"","Итого",?(Язык="у", "Всього:", "Всего:"));

	ФиксКвоСтрок = Таб.ВысотаСекции("Кнопки")+Таб.ВысотаСекции("Заголовок")+?(Периодичность <> 0,Таб.ВысотаСекции("ШапкаПериод"),0)+Таб.ВысотаСекции("Шапка");
	ФиксКвоКолон = Таб.ШиринаСекции("Наименование");
	Таб.Опции(0, 0, ФиксКвоСтрок, ФиксКвоКолон, "ПарамПечатиУпрОбороты", "РазмОкнаУпрОбороты");
	Таб.ОбластьПечати(Таб.ВысотаСекции("Кнопки")+1);
	
	// Вывод заполненной формы
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);

	Таб.Показать("ПЕЧАТЬ: Обороты бонусы: ("+ПериодСтр(Дата1, Дата2) + ")","");
	
	Если (Обновить = 2) Или (ЗакрытьДиалог=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры // Сформировать()

// ===============================
Процедура ПредопределенныеНастройки()
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("Продажи", "Анализ продаж товаров");
	Значение = "";
	Если Меню.ВыбратьЗначение(Значение, , , , 1) = 0 Тогда
		Возврат;
	КонецЕсли;

//	СписокПериодов.ТекущаяСтрока(1);  

	фБезГрупп  	= 1;


	Группировки.УдалитьВсе();
	Если Значение = "Продажи" Тогда		
		Группировки.ДобавитьЗначение("Покупатель", 		"Покупатель");
		Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
		Группировки.ДобавитьЗначение("КатЦен", "Категория цен");
		Группировки.ДобавитьЗначение("ВидБазы",			"Вид базы");
		Группировки.ДобавитьЗначение("Документ", 	    "Документ движения");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,1);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);

		фБонус = 1;
		фСуммаДок = 1;
		фКвоДок = 1;
		фБаза	= 1;

	КонецЕсли;

	Группировки.ТекущаяСтрока(1);  
	ДоступностьЭлементов(1);

КонецПроцедуры // КнопкаНастройкиГруппировок


// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение="")	
	// закладки
    Если Номер=1 Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	Иначе     
		Форма.ИспользоватьСлой("Шапка,МФ,Подвал");
	КонецЕсли;      
	ПерерисовкаНазванийЗакладок();
	ДоступностьЭлементов(1);
КонецПроцедуры	// ПриВыбореЗакладки

Процедура ИзмБонусСуммаДок()
	Если фРазница = 1 Тогда
		фСуммаДок = 1;
		Форма.фСуммаДок.Доступность(0);
	Иначе
		Форма.фСуммаДок.Доступность(1);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()	
	Если НазваниеНабораПрав() = "Заказ" Тогда
		фЗакупка = 0;
		Форма.фЗакупка.Доступность(0);
	ИначеЕсли (НазваниеНабораПрав() = "ПрочиеЗаказ") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") Тогда
		фЗакупка = 0;
		фДоход = 0;
		Форма.фЗакупка.Доступность(0);
		Форма.фДоход.Доступность(0);		
	КонецЕсли;
	
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		глФлагРасшифровки = 0;
		
		// восстанавливаем настройки из списка
		Дата1 		= глРасшифровка.Получить("Дата1");
		Дата2		= глРасшифровка.Получить("Дата2");

		ВыбНоменклатура = глРасшифровка.Получить("ВыбНоменклатура");
		ВыбПокупатель	= глРасшифровка.Получить("ВыбПокупатель");
		ВыбПартия		= глРасшифровка.Получить("ВыбПартия");
		ВыбВидБазы		= глРасшифровка.Получить("ВыбВидБазы");
		ВыбКатЦен		= глРасшифровка.Получить("ВыбКатЦен");
		ВыбСхемаРБ		= глРасшифровка.Получить("ВыбСхемаРБ");
		ргВозвр			= глРасшифровка.Получить("ргВозвр");
		фБаза			= глРасшифровка.Получить("фБаза");
		фСуммаДок		= глРасшифровка.Получить("фСуммаДок");
		фКвоДок			= глРасшифровка.Получить("фКвоДок");
		фБонус			= глРасшифровка.Получить("фБонус");
		фРазница		= глРасшифровка.Получить("фРазница");
		фПроцент		= глРасшифровка.Получить("фПроцент");
		ДокНачала		= глРасшифровка.Получить("ДокНачала");
		ДокКонца		= глРасшифровка.Получить("ДокКонца");		
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;
		
//		СписокПериодов.ТекущаяСтрока(глРасшифровка.Получить("СписокПериодов"));

		фБезГрупп = глРасшифровка.Получить("фБезГрупп");
		глРасшифровка.Получить("Группировки").Выгрузить(Группировки);
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
		фБезГрупп = ?(фБезГрупп = 0, 1, фБезГрупп);
	КонецЕсли;            
	
	ИзмБонусСуммаДок();
	ТаблицаМФ.ВидимостьКолонки("Тип",				0);
	ТаблицаМФ.ВидимостьКолонки("Вид",				0);
	ТаблицаМФ.ВидимостьКолонки("ВидДляПустого",		0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",	0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",				0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",		0);
	
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	                                                                                
	ПриВыбореЗакладки(1);

КонецПроцедуры		// ПриОткрытии()       

// ===============================
Процедура ВводНового()
	// эта предопределенная процедура выполняется при восстановлении настройки
	ТекСтрокаВТаблицеМФ="";
	ПриВыбореЗакладки(1);
КонецПроцедуры // ВводНового()   

// ===============================
Процедура ОбработкаПодбора(Значение)  

	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора

// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

Дата2=ПолучитьДатуТА();
Дата1=глВосстановитьЗначение(,"ОсновнаяДатаНачалаОтчета");
Если ПустоеЗначение(Дата1)=0 Тогда
	Дата1=НачМесяца(Дата1);
КонецЕсли;         
                                
// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");
ТаблицаМФ.НоваяКолонка("ВидДляПустого",,,,"");

СписЗн = СоздатьОбъект("СписокЗначений");
СписЗн.ДобавитьЗначение("Контрагенты");
СписЗн.ДобавитьЗначение("Сотрудники");
//                  			тип				вид						переменная  		название
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник",	"ТМЦ",					"Номенклатура",		"По позициям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник",	СписЗн,					"Покупатель",		"По получателям");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник",	"Контрагенты",			"Контрагент",		"По контр. базы");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник",	"КатегорииЦен",			"КатЦен",			"По кат. цен");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Перечисление",	"БазыДляРасчетаБонуса",	"ВидБазы",			"По видам базы", "");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",		"СхемаРасчетаБонуса",	"СхемаРБ",			"По схемам РБ", "");

ТекСтрокаВТаблицеМФ="";

Группировки.ДобавитьЗначение("Покупатель", 		"Получатель");
Группировки.ДобавитьЗначение("Контрагент", 		"Контр. базы");
Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
Группировки.ДобавитьЗначение("КатЦен", 			"Категория цен");
Группировки.ДобавитьЗначение("ВидБазы",			"Вид базы");
Группировки.ДобавитьЗначение("СхемаРБ", 	    "Схема РБ");
Группировки.ДобавитьЗначение("Документ", 	    "Документ движения");
Группировки.ТекущаяСтрока(1);

// по умолчанию предпределенный набор "Продажи"
Группировки.Пометка(1,1);
Группировки.Пометка(2,1);

// список украинских названий группировок для построения шапки отчета
УкрГруппировки = СоздатьОбъект("СписокЗначений");
УкрГруппировки.ДобавитьЗначение("Покупатель", 		"Отримувач");
УкрГруппировки.ДобавитьЗначение("Контрагент", 		"Контр. бази");
УкрГруппировки.ДобавитьЗначение("Номенклатура",     "Номенклатура");
УкрГруппировки.ДобавитьЗначение("КатЦен", 			"Категорiя цiн");
УкрГруппировки.ДобавитьЗначение("ВидБазы",			"Вид бази");
УкрГруппировки.ДобавитьЗначение("СхемаРБ", 	    	"Схема РБ");
УкрГруппировки.ДобавитьЗначение("Документ", 	    "Документ рухів");

// для расшифровки отчета по движениям
ГруппировкиПоДвижениям = СоздатьОбъект("СписокЗначений"); 
ГруппировкиПоДвижениям.ДобавитьЗначение("Документ",		"Документ движения");
ГруппировкиПоДвижениям.Пометка(1,1);

// расставляем флаги и значения
фБезГрупп  	= 1;

ргВозвр = 3;
Если НазваниеНабораПрав() = "АдминистраторМладший" Тогда
	ВыбПокупатель.ВидыДляВыбора("Контрагенты");
Иначе
	ВыбПокупатель.ВидыДляВыбора("Контрагенты,Сотрудники");
КонецЕсли;
фСуммаДок = 1;
фКвоДок = 1;
фБонус = 1;
фБаза = 1;
СтекЗначенийГруппировок = СоздатьОбъект("СписокЗначений");
фБезГрупп  	= 1;