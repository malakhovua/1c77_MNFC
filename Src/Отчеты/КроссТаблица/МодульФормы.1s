Перем ТЗ, ТПрод, СпрТМЦ, Расш, Полуфабрикат, Продукция, СтрФ, ТЗДетализацияВЗ, списВЗ, РасшДок; // ОПЗ + umk уберем

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
Перем ТЗЦС;
Перем ПериодСписания, ПериодОстатки;

Перем ИтСуммаПоПрайсу, ИтСуммаПоЦенамКг;  //--- УМК Сандомирский В.Ю. (14.07.14)
Перем ИтОПЗ_Выпуск;// + umk

//======================================================================
Функция ПолучитьСписокДокументовДляРасшифровки(ВидЗатрат)
	ТЗР = СоздатьОбъект("ТаблицаЗначений");
	ТЗР.НоваяКолонка("Документ", "Документ");
	ТЗР.НоваяКолонка("Кво", "Число", 15, 3);
	ТЗР.НоваяКолонка("Сумма", "Число", 15, 2);
	
	Если ВидЗатрат <> 0 Тогда
		Стр = 0;
		Если ТЗ.СДок.НайтиЗначение(ВидЗатрат, Стр, "ВидЗатрат") <> 0 Тогда
			ТЗ.СДок.ПолучитьСтрокуПоНомеру(Стр);
			Пока ТЗ.СДок.ВидЗатрат = ВидЗатрат Цикл
				ТЗР.НоваяСтрока();
				ТЗР.Документ = ТЗ.СДок.Документ;
				ТЗР.Кво = ТЗ.СДок.Кво;
				ТЗР.Сумма = ТЗ.СДок.Сумма;
				
				Стр = Стр + 1;
				Если Стр <= ТЗ.СДок.КоличествоСтрок() Тогда
					ТЗ.СДок.ПолучитьСтрокуПоНомеру(Стр);
				Иначе
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;		
	КонецЕсли;
	
	Возврат ТЗР;
КонецФункции // 

Функция ПолучитьСумму(СумС, Материал, КоличествоПриход)
	Если ПустоеЗначение(ВыбУЦ) = 1 Тогда
		Возврат СумС;
	Иначе
		Стр = 0;
		Попытка
			Мат = ?(ПустоеЗначение(Материал.ТМЦДляСписания.Получить(КонДата)) = 1, Материал, Материал.ТМЦДляСписания.Получить(КонДата));
		Исключение
			Мат = Материал;
		КонецПопытки;
		Если ТЗЦС.НайтиЗначение(Мат, Стр, "ТМЦ") = 1 Тогда
		    Возврат ТЗЦС.ПолучитьЗначение(Стр, "Цена") * КоличествоПриход;
		Иначе
			Возврат СумС;
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ПорядокВЗаказе(Заказ, Продукция, ТекДок)
	Если ПустоеЗначение(Заказ) = 1 Тогда
		Если (Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) и (Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат) Тогда
			Попытка 
				ДатаДок = ТекДок.ДатаДок 
			Исключение
				Возврат 0;
			КонецПопытки;
			
			Если (ДатаДок >= НачДата) и (ДатаДок <= КонДата) Тогда
			    Возврат 1;
			Иначе
				Возврат 0;
			КонецЕсли;
			
		КонецЕсли;
	    Возврат 0;
	КонецЕсли;

	Если ТипЗначенияСтр(Заказ) = "Документ" Тогда
		Если (Заказ.ДатаДок <= КонДата) и (Заказ.ДатаДок >= НачДата) Тогда
		    Возврат 1;
		Иначе
			Возврат 0;
		КонецЕсли;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

Функция СоздатьСписокПоВР()
	СписТМЦПоВР = СоздатьОбъект("СписокЗначений");
	Если списВР.РазмерСписка() = 0 Тогда
		Возврат СписТМЦПоВР;
	КонецЕсли;
	
	СпрТМЦ.ИспользоватьРодителя(ГП);
	СпрТМЦ.ВыбратьЭлементы();
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если СпрТМЦ.ЭтоГруппа() = 0 Тогда
		    Схема = СпрТМЦ.СхемаРасчетаЗП.Получить(КонДата);
			Если ПустоеЗначение(Схема) = 0 Тогда
			    Схема.ВыбратьСтроки();
				Пока Схема.ПолучитьСтроку() = 1 Цикл
					Если списВР.Принадлежит(Схема.ВидРабот) = 1 Тогда
					    СписТМЦПоВР.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СпрТМЦ.ИспользоватьРодителя();
	СпрТМЦ.ВыбратьЭлементыПоРеквизиту("ВидТМЦ", Перечисление.ВидыТМЦ.Полуфабрикат, 0, 0);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если СпрТМЦ.ЭтоГруппа() = 0 Тогда
		    Схема = СпрТМЦ.СхемаРасчетаЗП.Получить(КонДата);
			Если ПустоеЗначение(Схема) = 0 Тогда
			    Схема.ВыбратьСтроки();
				Пока Схема.ПолучитьСтроку() = 1 Цикл
					Если списВР.Принадлежит(Схема.ВидРабот) = 1 Тогда
					    СписТМЦПоВР.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписТМЦПоВР;
КонецФункции

Процедура ВывестиСекции(Имя);
	
	ИтСуммаПоПрайсу = 0; //--- УМК Сандомирский В.Ю. (14.07.14) 
	ИтСуммаПоЦенамКг= 0; //--- УМК Сандомирский В.Ю. (14.07.14)
	ИтОПЗ_Выпуск = 0;// + umk
	
	Таб.ВывестиСекцию(Имя + "|Основная");
	Если фВыводитьОстаток = 1 Тогда
		Таб.ПрисоединитьСекцию(Имя + "|Остаток");
	КонецЕсли;
	
	ВТаб = Таб.ВысотаТаблицы();
	ТекКол = 12;
	ТПрод.ВыбратьСтроки();
	Пока ТПрод.ПолучитьСтроку() = 1 Цикл
		Если (ТПрод.КвоВып = 0) и (фУдалять = 1) и (ПустоеЗначение(ТПрод.Прод) = 0) Тогда
		    Продолжить;
		КонецЕсли;
		
		Красный = 0;
		Если Имя = "Итого" Тогда
		    ССКГ = ?(ТПрод.КвоВып = 0, (ТПрод.ССФарша+ТПрод.ССФаршаПФ), (ТПрод.ССФарша+ТПрод.ССФаршаПФ) / ТПрод.КвоВып);
			ТекРасшифровка = ""; ЦенаУпаковки = -1;
			СтУпак = глПолучитьСтУпак(ТПрод.Прод, ТекРасшифровка, КонДата, ЦенаУпаковки);
			ОПЗ = ТПрод.Прод.ОПР.Получить(КонДата); // + umk
			ОПЗ_Выпуск          = ТПрод.КвоВып * ОПЗ;// + umk
			ИтОПЗ_Выпуск        = ИтОПЗ_Выпуск + ОПЗ_Выпуск;// + umk
			ССКГ_ОПЗ_УПАК       = ССКГ + ОПЗ + СтУпак;// + umk
			ПечСуммаПоПрайсу 	= ТПрод.КвоВып * ТПрод.ЦенаП;				//--- УМК Сандомирский В.Ю. (14.07.14) 
			ИтСуммаПоПрайсу		= ИтСуммаПоПрайсу + ПечСуммаПоПрайсу;		//--- УМК Сандомирский В.Ю. (14.07.14) 
			ПечСуммаПоЦенамКг 	= ТПрод.КвоВып * (ССКГ + ОПЗ + СтУпак);				//--- УМК Сандомирский В.Ю. (14.07.14) 
			Если ТПрод.ЦенаП <> 0 Тогда
				ИтСуммаПоЦенамКг	= ИтСуммаПоЦенамКг + ПечСуммаПоЦенамКг;		//--- УМК Сандомирский В.Ю. (14.07.14) 
			КонецЕсли;
			
			Попытка
				Рентаб = Окр(((ТПрод.ЦенаП - СтУпак) / (ССКГ+ОПЗ))*100, 0);
				Рентаб_уп = Окр(((ТПрод.ЦенаП) / (ССКГ+ОПЗ+СтУпак))*100, 2);// + umk
			Исключение
				Рентаб = 0; // + umk
			КонецПопытки;
			
			РентПрод = ТПрод.Прод.НормаРент.Получить(КонДата);
			Если Рентаб < РентПрод Тогда
			    Красный = 1;
			ИначеЕсли Рентаб > РентПрод * 1.1 Тогда
				Красный = 2;
			КонецЕсли;			
		КонецЕсли;		
		
		Если Имя = "Шапка" Тогда
			СПрод = Строка(ТПрод.Род) + "
			|" + Строка(ТПрод.Прод);
			Если ТПрод.Прод.НетБезУпаковки = 1 Тогда
				СПрод = СПрод + "
				|" + Строка(ТПрод.Прод.ВидУпаковкиПоУмолчанию);
			КонецЕсли;			
		КонецЕсли;
		Таб.ПрисоединитьСекцию(Имя + "|Прод");
		Если Имя = "Шапка" Тогда
			Если ТПрод.Прод.НетБезУпаковки = 1 Тогда
				Таб.Область(6, Таб.ШиринаТаблицы(), 6, Таб.ШиринаТаблицы()).ЦветФона(182,84,142);
			КонецЕсли;
		КонецЕсли;
		ТекКол=ТекКол+1;
		Если Красный = 1 Тогда
			Таб.Область(ВТаб, ТекКол).ЦветТекста(255);
		ИначеЕсли Красный = 2 Тогда
			Таб.Область(ВТаб, ТекКол).ЦветТекста(0,0,255);
		КонецЕсли;		
	КонецЦикла;
	Таб.ПрисоединитьСекцию(Имя + "|ИтМат");
	
	Если фВыводитьСО = 1 Тогда
		Если Имя = "Строка" Тогда
			РасшДок.Установить("ТаблицаДокументов", ПолучитьСписокДокументовДляРасшифровки(ВЗСписание));
			РасшДок.Установить("ВидЗатрат", ВЗСписание);
		КонецЕсли;
		Таб.ПрисоединитьСекцию(Имя + "|СО");
		
		списВЗ.ВыбратьСтроки();
		Пока списВЗ.ПолучитьСтроку() = 1 Цикл			
			Сумма = 0; Кво = 0;
			Если Имя = "Строка" Тогда
				РасшДок.Установить("ВидЗатрат", списВЗ.ВидЗатрат);
				Поз = 0; 
				Ключ = ЗначениеВСтрокуВнутр(ТЗ.Мат) + "\\" + ЗначениеВСтрокуВнутр(списВЗ.ВидЗатрат);
				Если ТЗДетализацияВЗ.НайтиЗначение(Ключ, Поз, "Ключ") = 1 Тогда
					Сумма = ТЗДетализацияВЗ.ПолучитьЗначение(Поз, "Сумма");
					Кво = ТЗДетализацияВЗ.ПолучитьЗначение(Поз, "Кво");
					РасшДок.Установить("ТаблицаДокументов", ПолучитьСписокДокументовДляРасшифровки(списВЗ.ВидЗатрат));					
				Иначе
					РасшДок.Установить("ТаблицаДокументов", ПолучитьСписокДокументовДляРасшифровки(0));
				КонецЕсли;
			Иначе
				РасшДок.Установить("ВидЗатрат", 0);
			КонецЕсли;
			Таб.ПрисоединитьСекцию(Имя + "|ВидЗатрат");
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьРодителей(Атр, Атр1, Кво, Сумма, Род);
	Если ПустоеЗначение(Род) = 1 Тогда
	    Возврат;
	КонецЕсли;
	Стр = 0;
	Если ТЗ.НайтиЗначение(Род, Стр, "Мат") = 1 Тогда
	    ТЗ.УстановитьЗначение(Стр, Атр, ТЗ.ПолучитьЗначение(Стр, Атр) + Кво);
		Если Атр1 <> "" Тогда
		    ТЗ.УстановитьЗначение(Стр, Атр1, ТЗ.ПолучитьЗначение(Стр, Атр1) + Сумма);
		КонецЕсли;		                                                 
		УстановитьРодителей(Атр, Атр1, Кво, Сумма, Род.Родитель);
	Иначе
		Возврат;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ДобавитьСДок()
	Если фВыводитьСО = 1 Тогда
		ТЗ.СДок = СоздатьОбъект("ТаблицаЗначений");
		ТЗ.СДок.НоваяКолонка("ВидЗатрат");
		ТЗ.СДок.НоваяКолонка("Документ", "Документ");
		ТЗ.СДок.НоваяКолонка("Кво", "Число", 15, 3);
		ТЗ.СДок.НоваяКолонка("Сумма", "Число", 15, 2);
	КонецЕсли;	
КонецПроцедуры // ДобавитьСДок()

Процедура ЗаполнитьТаблицу()
	КонДата = Мин(КонДата, ПолучитьДатуТА());
	НачДата = Мин(НачДата, КонДата);
	
	СпрТМЦ.ИспользоватьРодителя(Материал);
	СпрТМЦ.ВыбратьЭлементы(1);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		ТЗ.НоваяСтрока();
		ТЗ.Мат = СпрТМЦ.ТекущийЭлемент();
		ТЗ.УчФарш = 1-СпрТМЦ.НеУчитыватьВОбщемВесе;
		ТЗ.ЭтоГруппа = СпрТМЦ.ЭтоГруппа();
		ДобавитьСДок();
	КонецЦикла;

	ТЗ.НоваяСтрока();
	ТЗ.Мат = Материал1;
	ТЗ.УчФарш = 0;
	ТЗ.ЭтоГруппа = 1;	 
	СпрТМЦ.ИспользоватьРодителя(Материал1);
	СпрТМЦ.ВыбратьЭлементы(1);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		ТЗ.НоваяСтрока();
		ТЗ.Мат = СпрТМЦ.ТекущийЭлемент();
		ТЗ.УчФарш = 1-СпрТМЦ.НеУчитыватьВОбщемВесе;
		ТЗ.ЭтоГруппа = СпрТМЦ.ЭтоГруппа();
		ДобавитьСДок();
	КонецЦикла;
	Если фВыводитьСО = 1 Тогда
		НДата = Мин(НачДата, НачДата1);
		КДата = Макс(КонДата, КонДата1);
	Иначе
		НДата = НачДата;
		КДата = КонДата;
	КонецЕсли;

	ТекстЗ =
	"//{{ЗАПРОС(Сформировать)
	|Период с НДата по КДата;
	|ТМЦ = Регистр.Партии.ТМЦ;
	|КодОперации = Регистр.Партии.КодОперации;
	|Кво = Регистр.Партии.ОстатокТовара;
	|Сум = Регистр.Партии.Стоимость;
	|ТекДок = Регистр.Партии.ТекущийДокумент;";
	
	Если фВыводитьСО = 1 Тогда
		ТекстЗ = ТекстЗ + "
		|Функция КвоПриход = Приход(Кво) когда ((ТекДок.ДатаДок >= НачДата) И (ТекДок.ДатаДок <= КонДата));
		|Функция КвоПриходСО = Приход(Кво) когда ((ТекДок.ДатаДок >= НачДата1) И (ТекДок.ДатаДок <= КонДата1));
		|Функция КвоРасход = Расход(Кво) когда ((ТекДок.ДатаДок >= НачДата1) И (ТекДок.ДатаДок <= КонДата1));
		|Функция КвоПриходПер = Приход(Кво) Когда ((ТекДок.Вид() = ""ПереработкаМяса"") И (ТекДок.ДатаДок >= НачДата) И (ТекДок.ДатаДок <= КонДата));
		|Функция СуммаПриходСО = Приход(Сум) когда ((ТекДок.ДатаДок >= НачДата1) И (ТекДок.ДатаДок <= КонДата1));
		|Функция СуммаПриход = Приход(Сум) когда ((ТекДок.ДатаДок >= НачДата) И (ТекДок.ДатаДок <= КонДата));
		|Функция СуммаРасход = Расход(Сум) когда ((ТекДок.ДатаДок >= НачДата1) И (ТекДок.ДатаДок <= КонДата1));
		|Функция СуммаПриходПер = Приход(Сум) Когда ((ТекДок.Вид() = ""ПереработкаМяса"") И (ТекДок.ДатаДок >= НачДата) И (ТекДок.ДатаДок <= КонДата));";		
	Иначе
		ТекстЗ = ТекстЗ + "
		|Функция КвоПриход = Приход(Кво);
		|Функция КвоПриходПер = Приход(Кво) Когда (ТекДок.Вид() = ""ПереработкаМяса"");
		|Функция СуммаПриход = Приход(Сум);
		|Функция СуммаПриходПер = Приход(Сум) Когда (ТекДок.Вид() = ""ПереработкаМяса"");";
	КонецЕсли;
	
	
	ТекстЗ = ТекстЗ + "
	|Группировка ТМЦ без упорядочивания без групп;
	|Группировка КодОперации без упорядочивания;" + 
	?(фВыводитьСО = 1, "
	|Группировка ТекДок;", "") + "
	|Условие((ТМЦ в Материал) ИЛИ (ТМЦ в Материал1));
	|"//}}ЗАПРОС
	;

	ЗапрП = СоздатьОбъект("Запрос");
	Если ЗапрП.Выполнить(ТекстЗ) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока ЗапрП.Группировка(1) = 1 Цикл
		Стр = 0;
		ТЗ.НайтиЗначение(ЗапрП.ТМЦ, Стр, "Мат");
		ТЗ.ПолучитьСтрокуПоНомеру(Стр);
		
		Пока ЗапрП.Группировка(2) = 1 Цикл
			Если ЗапрП.КодОперации = ВыпускПродукции Тогда
				ТЗ.КвоВып = ТЗ.КвоВып + ЗапрП.КвоПриход;
				ТЗ.СуммаВып = ТЗ.СуммаВып + ПолучитьСумму(ЗапрП.СуммаПриход, ЗапрП.ТМЦ, ЗапрП.КвоПриход);
				Если ЗапрП.КвоПриходПер <> 0 Тогда
				    ТЗ.ИзПер = ТЗ.ИзПер + ПолучитьСумму(ЗапрП.СуммаПриходПер, ЗапрП.ТМЦ, ЗапрП.КвоПриходПер);
				КонецЕсли;
				УстановитьРодителей("КвоВып", "СуммаВып1", ЗапрП.КвоПриход, ЗапрП.СуммаПриход, ТЗ.Мат.Родитель);
			ИначеЕсли (ЗапрП.КодОперации = ПолучениеДавальческогоСырья) ИЛИ (ЗапрП.КодОперации = Закупка) Тогда				
				ТЗ.КвоПрих = ТЗ.КвоПрих + ЗапрП.КвоПриход;
				ТЗ.СуммаПрих = ТЗ.СуммаПрих + ПолучитьСумму(ЗапрП.СуммаПриход, ЗапрП.ТМЦ, ЗапрП.КвоПриход);
				УстановитьРодителей("КвоПрих", "СуммаПрих1", ЗапрП.КвоПриход, ЗапрП.СуммаПриход, ТЗ.Мат.Родитель);
			ИначеЕсли ((ЗапрП.КодОперации = ОприходованиеИзлишков) ИЛИ (ЗапрП.КодОперации = СписаниеИзлишков)) И (фВыводитьСО = 1) Тогда
				КвоСП = 0; СуммаСП = 0;
				Пока ЗапрП.Группировка(3) = 1 Цикл
					Если (ЗапрП.КвоПриходСО <> 0) ИЛИ (ЗапрП.КвоРасход <> 0) ИЛИ (ЗапрП.СуммаПриходСО <> 0) ИЛИ (ЗапрП.СуммаРасход <> 0) Тогда
						НужноСчитать = 0;
						Если ЗапрП.ТекДок.Вид() = "СписаниеТМЦ" Тогда
							Если ЗапрП.ТекДок.СубконтоСписания3 <> ВЗСписание Тогда
								ТЗДетализацияВЗ.НоваяСтрока();
								Если ПустоеЗначение(ЗапрП.ТекДок.СубконтоСписания3) = 1 Тогда
									Если ПустоеЗначение(ЗапрП.ТекДок.ДокОснование) = 0 Тогда
										ТЗДетализацияВЗ.ВидЗатрат = Метаданные.Документ(ЗапрП.ТекДок.ДокОснование.Вид()).Синоним;
									Иначе
										ТЗДетализацияВЗ.ВидЗатрат = "Не определено";
									КонецЕсли;
								Иначе
									ТЗДетализацияВЗ.ВидЗатрат = ЗапрП.ТекДок.СубконтоСписания3;
								КонецЕсли;
								ТЗДетализацияВЗ.ТМЦ = ЗапрП.ТМЦ;
								ТЗДетализацияВЗ.Ключ = ЗначениеВСтрокуВнутр(ТЗ.Мат) + "\\" + ЗначениеВСтрокуВнутр(ТЗДетализацияВЗ.ВидЗатрат);
								ТЗДетализацияВЗ.Сумма = ПолучитьСумму(ЗапрП.СуммаРасход, ЗапрП.ТМЦ, ЗапрП.КвоРасход);
								ТЗДетализацияВЗ.Кво = ЗапрП.КвоРасход;
								
								ТЗ.СДок.НоваяСтрока();
								ТЗ.СДок.ВидЗатрат = ТЗДетализацияВЗ.ВидЗатрат;
								ТЗ.СДок.Документ = ЗапрП.ТекДок;
								ТЗ.СДок.Кво = ТЗДетализацияВЗ.Кво; 
								ТЗ.СДок.Сумма = ТЗДетализацияВЗ.Сумма;
							Иначе
								НужноСчитать = 1;
							КонецЕсли;
						ИначеЕсли ЗапрП.ТекДок.Вид() = "ОприходованиеИзлишков" Тогда
							НужноСчитать = 1;
						КонецЕсли;
						
						Если НужноСчитать > 0 Тогда
							КвоСП = КвоСП + ЗапрП.КвоРасход - ЗапрП.КвоПриходСО;
							СуммаСП = СуммаСП + ПолучитьСумму(ЗапрП.СуммаРасход - ЗапрП.СуммаПриходСО, ЗапрП.ТМЦ, КвоСП);
							
							ТЗ.СДок.НоваяСтрока();
							ТЗ.СДок.ВидЗатрат = ВЗСписание;
							ТЗ.СДок.Документ = ЗапрП.ТекДок;
							ТЗ.СДок.Кво = ЗапрП.КвоРасход + ЗапрП.КвоПриходСО;
							ТЗ.СДок.Сумма = ПолучитьСумму(ЗапрП.СуммаРасход + ЗапрП.СуммаПриходСО, ЗапрП.ТМЦ, ТЗ.СДок.Кво)
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				ТЗ.СО = ТЗ.СО + КвоСП;
				ТЗ.СуммаСО = ТЗ.СуммаСО + СуммаСП; 
				УстановитьРодителей("СО", "СуммаСО1", КвоСП, СуммаСП, ЗапрП.ТМЦ.Родитель);				
			КонецЕсли;
		КонецЦикла;
		
		Если фВыводитьСО = 1 Тогда
			ТЗ.СДок.Сортировать("ВидЗатрат,Документ", 1);
		КонецЕсли;
	КонецЦикла;
	
	Если фВыводитьОстаток = 1 Тогда
		РегО = СоздатьОбъект("Регистр.Партии");
		СписТ = СоздатьОбъект("СписокЗначений");
		СписТ.ДобавитьЗначение(Материал);
		СписТ.ДобавитьЗначение(Материал1);
		
		РегО.УстановитьЗначениеФильтра("ТМЦ", СписТ, 2);
		Если ДатаОст < ПолучитьДатуТА() Тогда
			РегО.ВременныйРасчет(1);
			РассчитатьРегистрыПо(ДатаОст);
		КонецЕсли;
		ТЗО = СоздатьОбъект("ТаблицаЗначений");
		РегО.ВыгрузитьИтоги(ТЗО, 1);
		ТЗО.Свернуть("ТМЦ", "ОстатокТовара,Стоимость");
		
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			Стр = 0;
			Если ТЗО.НайтиЗначение(ТЗ.Мат, Стр, "ТМЦ") = 1 Тогда
				ТЗ.Остаток = ТЗО.ПолучитьЗначение(Стр, "ОстатокТовара");
				ТЗ.СуммаОстаток = ТЗО.ПолучитьЗначение(Стр, "Стоимость");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры 

Процедура ЗаполнитьСписание()
//	списПрод = СоздатьОбъект("СписокЗначений");
//	ТПрод.Выгрузить(списПрод, ,,"Прод");
	//ГруппаДоступа = глПользователь.ГруппаДоступаПродукции;
	ТекстЗ =
	"//{{ЗАПРОС(Фарш)
	|Период с НачДата по КонДата;
	|Продукция = Документ.Заказ.Продукция;
	|Заказ = Документ.Заказ.ТекущийДокумент;
	|ВидПрод = Документ.Заказ.Продукция.ВидТМЦ;
	|КвоКутеров = Документ.Заказ.КвоКутеров;
	|КвоФаршаФакт = Документ.Заказ.КвоФаршаФакт;
	|КвоФаршаПлан = Документ.Заказ.КвоФаршаПлан;
	|ПроцПотерь = Документ.Заказ.Продукция.ПроцПотерь;
	|Функция КвоКутеровС = Сумма(КвоКутеров);
	|Функция КвоФаршаФ = Сумма(КвоФаршаФакт);
	|Функция КвоФаршаП = Сумма(КвоФаршаПлан);
	|Группировка Продукция без упорядочивания без групп все;" + 
	?(глГруппыДоступаПродукции.РазмерСписка() > 0,"
	|Условие (Продукция В глГруппыДоступаПродукции);", "") + "
//	|Условие ((Продукция в ГП) или (ВидПрод = Полуфабрикат) ил);
	|"//}}ЗАПРОС
	;
	
	ЗапрФ = СоздатьОбъект("Запрос");
	Если ЗапрФ.Выполнить(ТекстЗ) = 0 Тогда
		Возврат;
	КонецЕсли;
	ТЗЗ = СоздатьОбъект("ТаблицаЗначений");
	ЗапрФ.Выгрузить(ТЗЗ, 1, 0);
	КДата = КонДата;
	Док = СоздатьОбъект("Документ");
	
	ТЗЗ.ВыбратьСтроки();
	Пока ТЗЗ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗЗ.Заказ) = 0 Тогда
		    Док.ВыбратьПодчиненныеДокументы(,,ТЗЗ.Заказ);
			Док.УстановитьФильтр(1,0);
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если Док.Вид() = "ВыпускПродукции" Тогда
				    КДата = Макс(КДата, Док.ДатаДок);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
	
	ТекстЗ =
	"//{{ЗАПРОС(Списание)
	|Период с НачДата по КДата;
	|Продукция = Регистр.ПроизводственныеЗатраты.Продукция;
	|Заказ = Регистр.ПроизводственныеЗатраты.Заказ;
	|ВидПрод = Регистр.ПроизводственныеЗатраты.Продукция.ВидТМЦ;
	|Материал = Регистр.ПроизводственныеЗатраты.Материал;
	|Количество = Регистр.ПроизводственныеЗатраты.Количество;
	|СуммаСписано = Регистр.ПроизводственныеЗатраты.Сумма;
	|ТекДок = Регистр.ПроизводственныеЗатраты.ТекущийДокумент;
	|Функция КоличествоПриход = Приход(Количество) когда (ПорядокВЗаказе(Заказ,Продукция,ТекДок) = 1);
	|Функция СумС = Приход(СуммаСписано) когда (ПорядокВЗаказе(Заказ,Продукция,ТекДок) = 1);
	|Группировка Продукция без упорядочивания без групп;
	|Группировка Материал без упорядочивания без групп;
//	|Условие ((Продукция в ГП) или (ВидПрод = Полуфабрикат) или (ПустоеЗначение(Продукция) = 1));
	//|Условие (ПустоеЗначение(Продукция) = 0);
	|Условие (Материал в Материал);" + 
	?(глГруппыДоступаПродукции.РазмерСписка() > 0,"
	|Условие (Продукция В глГруппыДоступаПродукции);", "") + "
	|"//}}ЗАПРОС
	;
	
	ЗапрП = СоздатьОбъект("Запрос");
	Если ЗапрП.Выполнить(ТекстЗ) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗ = 
	"//{{ЗАПРОС(Выпуск)
	|Период с НачДата по КДата;
	|Продукция = Регистр.ВыпускПродукции.Продукция;
	|Заказ = Регистр.ВыпускПродукции.Заказ;
	|ТекДок = Регистр.ВыпускПродукции.ТекущийДокумент;
	|Количество = Регистр.ВыпускПродукции.Количество;
	|Сумма = Регистр.ВыпускПродукции.Сумма;
	|Функция Кво = Сумма(Количество) когда (ПорядокВЗаказе(Заказ,Продукция,ТекДок) = 1);
	|Функция СумСумма = Сумма(Сумма) когда (ПорядокВЗаказе(Заказ,Продукция,ТекДок) = 1);
	|Группировка Продукция без упорядочивания без групп;
	|Группировка ТекДок;" + 
	?(глГруппыДоступаПродукции.РазмерСписка() > 0,"
	|Условие (Продукция В глГруппыДоступаПродукции);", "") + "
	|"//}}ЗАПРОС
	;
	
	ЗапрВ = СоздатьОбъект("Запрос");
	Если ЗапрВ.Выполнить(ТекстЗ) = 0 Тогда
		Возврат;
	КонецЕсли;

	Пока ЗапрП.Группировка(1) = 1 Цикл
		Стр = 0;
		
		ТПрод.НайтиЗначение(ЗапрП.Продукция, Стр, "Прод");
		Если Стр = 0 Тогда
			Продолжить;
		КонецЕсли;
		ТПрод.ПолучитьСтрокуПоНомеру(Стр);
		//Если ПустоеЗначение(ВыбУЦ) = 0 Тогда
		//	Если ТПрод.Сырье  = 1 Тогда
		//		ТекПрод = ПолучитьПустоеЗначение("Справочник.ТМЦ");
		//	    Стр = 0;
		//		ТПрод.НайтиЗначение(ТекПрод, Стр, "Прод");
		//		Если Стр = 0 Тогда
		//			Продолжить;
		//		КонецЕсли;				
		//		ТПрод.ПолучитьСтрокуПоНомеру(Стр);
		//	Иначе
		//		ТекПрод = ЗапрП.Продукция;
		//	КонецЕсли;
		//Иначе
		//	ТекПрод = ЗапрП.Продукция;
		//КонецЕсли;
		ТекПрод = ЗапрП.Продукция;
		
		ИмКол = "Т"+ТПрод.ИД;
		// получим к-во фарша
		ЗапрФ.ВНачалоВыборки();
		Если ЗапрФ.Получить(ЗапрП.Продукция) = 1 Тогда
			ТПрод.КвоФарша = ЗапрФ.КвоФаршаФ;
			ТПрод.КвоКутеров = ЗапрФ.КвоКутеровС;
			ТПрод.ПроцПотерь = ЗапрФ.ПроцПотерь;
		КонецЕсли;
		
		Если ПустоеЗначение(ЗапрП.Продукция) = 0 Тогда
			ЗапрВ.ВНачалоВыборки();
			Если ЗапрВ.Получить(ЗапрП.Продукция,) = 1 Тогда
				ТПрод.КвоВып = ЗапрВ.Кво;
				Если ЗапрП.Продукция.ВидТМЦ <> Продукция Тогда
					ТПрод.ССФаршаВПФ = ЗапрВ.СумСумма;
				Иначе
					ТПрод.ССФаршаВ = ЗапрВ.СумСумма;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ЗапрВ.ВНачалоВыборки();
			Пока ЗапрВ.Группировка(1) = 1 Цикл
				Пока ЗапрВ.Группировка(2) = 1 Цикл
					Если ЗапрВ.ТекДок.Вид() = "ПереработкаМяса" Тогда
						ТПрод.КвоВып = ТПрод.КвоВып + ЗапрВ.Кво;
						ТПрод.ССФаршаВПФ = ТПрод.ССФаршаВПФ + ЗапрВ.СумСумма;
					КонецЕсли;
				КонецЦикла;				
			КонецЦикла;
		КонецЕсли;

		Пока ЗапрП.Группировка(2) = 1 Цикл
			Ст = 0;
			Если ТЗ.НайтиЗначение(ЗапрП.Материал, Ст, "Мат") = 1 Тогда
				ТЗ.УстановитьЗначение(Ст, ИмКол, ЗапрП.КоличествоПриход);
				// на сырьё цены не пересчитываем
				Сум = ПолучитьСумму(ЗапрП.СумС, ЗапрП.Материал, ЗапрП.КоличествоПриход);
				
				Атр = "ИтСписано";
				Если (ТекПрод.ВидТМЦ <> Продукция) или (ПустоеЗначение(ТекПрод) = 1) Тогда
				    Атр = Атр + "ПФ";
					ТПрод.ССФаршаПФ = ТПрод.ССФаршаПФ + Сум;
				Иначе
					ТПрод.ССФарша = ТПрод.ССФарша + Сум;
				КонецЕсли;
				
				ТЗ.УстановитьЗначение(Ст, Атр, ТЗ.ПолучитьЗначение(Ст, Атр) + ЗапрП.КоличествоПриход);
				ТЗ.УстановитьЗначение(Ст, Атр+"С", ТЗ.ПолучитьЗначение(Ст, Атр+"С") + Сум);
				ТПрод.КвоФаршаФ = ТПрод.КвоФаршаФ + ЗапрП.КоличествоПриход * ТЗ.ПолучитьЗначение(Ст, "УчФарш");
				УстановитьРодителей(Атр, "", ЗапрП.КоличествоПриход, Сум, ЗапрП.Материал.Родитель);				
			КонецЕсли;
		КонецЦикла;
		Стр = 0;
		Если ТекПрод.ВидТМЦ <> Продукция Тогда
			Если ПустоеЗначение(ТекПрод) = 1 Тогда
				ТПрод.СуммаВыпИзТЗ = ТЗ.Итог("ИзПер");
			Иначе				
				Если ТЗ.НайтиЗначение(ТекПрод, Стр, "Мат") = 1 Тогда
				    ТПрод.СуммаВыпИзТЗ = ТПрод.СуммаВыпИзТЗ + ТЗ.ПолучитьЗначение(Стр, "СуммаВып");
				КонецЕсли;				
			КонецЕсли;
		Иначе
			ТПрод.СуммаВыпИзТЗ = ТПрод.СуммаВыпИзТЗ + ТПрод.ССФарша;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СоздатьРасшифровку()
	// все настройки помещаем в список
	Расш = СоздатьОбъект("СписокЗначений");
    Расш.Установить("Объект", "ОстаткиТМЦ");
    
	Расш.Установить("Дата1", НачДата);
    Расш.Установить("Дата2", КонДата);
	
	Расш.Установить("ВыбФирма", Константа.БазФирма);	
	
	Расш.Установить("ВидОтчета", 		1);
	Расш.Установить("ПоказатьОстатки", 	1);
	Расш.Установить("ЦенаТовара", 		1); 

	Расш.Установить("ДеталПоСкладам", 	0); 
	Расш.Установить("ДеталПоДокументам", 1);
	Расш.Установить("фБезГрупп", 1);
	Расш.Установить("фДопКво", 0);

	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "КроссТаблица");
    
	Расшифровка.Установить("Дата1", НачДата);
    Расшифровка.Установить("Дата2", КонДата);
	Расшифровка.Установить("НачДата1", НачДата1);
    Расшифровка.Установить("КонДата1", КонДата1);
	Расшифровка.Установить("фВыводитьСО", фВыводитьСО);	
	Расшифровка.Установить("фВыводитьОстаток", фВыводитьОстаток);	
	Расшифровка.Установить("ДатаОст", ДатаОст);	
	
	Расшифровка.Установить("фУдалять", фУдалять);
	Расшифровка.Установить("списТовар", списТовар);
	Расшифровка.Установить("ГП", ГП);
	Расшифровка.Установить("Материал", Материал);
	Расшифровка.Установить("Материал1", Материал1);		
КонецПроцедуры

//*******************************************
Процедура Сформировать(НоваяТаблица = 0)
	Если ВыбУЦ.Выбран() = 1 Тогда
	    ТЗЦС = СоздатьОбъект("ТаблицаЗначений");
		ВыбУЦ.ВыгрузитьТабличнуюЧасть(ТЗЦС);
	КонецЕсли;

	РасшДок = СоздатьОбъект("СписокЗначений");
	РасшДок.Установить("Дата1", НачДата1);
	РасшДок.Установить("Дата2", КонДата1);
	РасшДок.Установить("СписаниеПоДокКросс", Да);
	
    // вначале создаем ТЗ
	//ОПЗ = Константа.ОПЗ.Получить(КонДата); // + umk уберем 
	СоздатьРасшифровку();
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Мат", "Справочник.ТМЦ");
	ТЗ.НоваяКолонка("ИзПер", "Число", 12, 2);
	ТЗ.НоваяКолонка("УчФарш", "Число");
	ТЗ.НоваяКолонка("ЭтоГруппа", "Число", 1);	
	ТЗ.НоваяКолонка("КвоПрих", "Число", 15, 3);
	ТЗ.НоваяКолонка("СуммаПрих", "Число", 15, 3);
	ТЗ.НоваяКолонка("СуммаПрих1", "Число", 15, 3);
	ТЗ.НоваяКолонка("КвоВып", "Число", 15, 3);
	ТЗ.НоваяКолонка("СуммаВып", "Число", 15, 3);
	ТЗ.НоваяКолонка("СуммаВып1", "Число", 15, 3);
	ТЗ.НоваяКолонка("СО", "Число", 15, 3);
	ТЗ.НоваяКолонка("СуммаСО", "Число", 15, 3);
	ТЗ.НоваяКолонка("СуммаСО1", "Число", 15, 3);	
	ТЗ.НоваяКолонка("ИтСписано", "Число", 15, 3);
	ТЗ.НоваяКолонка("ИтСписаноС", "Число", 15, 3);
	ТЗ.НоваяКолонка("ИтСписаноПФ", "Число", 15, 3);
	ТЗ.НоваяКолонка("ИтСписаноПФС", "Число", 15, 3);
	ТЗ.НоваяКолонка("СДок", "ТаблицаЗначений");
	ТЗ.НоваяКолонка("Остаток", "Число", 15, 3);
	ТЗ.НоваяКолонка("СуммаОстаток", "Число", 15, 3);
	
	ТЗДетализацияВЗ = СоздатьОбъект("ТаблицаЗначений");
	//ТЗДетализацияВЗ.НоваяКолонка("ВидЗатрат", "Справочник.ВидыЗатрат");
	ТЗДетализацияВЗ.НоваяКолонка("ВидЗатрат");
	ТЗДетализацияВЗ.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗДетализацияВЗ.НоваяКолонка("Ключ", "Строка");
	ТЗДетализацияВЗ.НоваяКолонка("Сумма", "Число", 15, 2);
	ТЗДетализацияВЗ.НоваяКолонка("Кво", "Число", 15, 3);
	ТЗДетализацияВЗ.НоваяКолонка("К", "Число", 15, 3);
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	ТПрод = СоздатьОбъект("ТаблицаЗначений");
	ТПрод.НоваяКолонка("Прод", "Справочник.ТМЦ");
	ТПрод.НоваяКолонка("ГП", "Число");
	ТПрод.НоваяКолонка("Сырье", "Число");
	ТПрод.НоваяКолонка("Род", "Справочник.ТМЦ");
	ТПрод.НоваяКолонка("ИД", "Число");
	ТПрод.НоваяКолонка("КвоФарша", "Число", 15, 3);
	ТПрод.НоваяКолонка("КвоФаршаФ", "Число", 15, 3);
	ТПрод.НоваяКолонка("ПроцПотерь", "Число", 15, 3);
	ТПрод.НоваяКолонка("КвоКутеров", "Число", 15, 3);
	ТПрод.НоваяКолонка("КвоВып", "Число", 15, 3);
	ТПрод.НоваяКолонка("ССФарша", "Число", 15, 3);
	ТПрод.НоваяКолонка("ССФаршаПФ", "Число", 15, 3);
	ТПрод.НоваяКолонка("ССФаршаВ", "Число", 15, 3);
	ТПрод.НоваяКолонка("ССФаршаВПФ", "Число", 15, 3);
	ТПрод.НоваяКолонка("ЦенаП", "Число", 15, 2);
	ТПрод.НоваяКолонка("СуммаВыпИзТЗ", "Число", 15, 2);

	// заполняем ТЗ материалов. Для этого нужно выполнить два запроса: по партиям и по списанию на ГП
	ЗаполнитьТаблицу();
	
	СписТМЦПоВР = СоздатьСписокПоВР();
	
	КатЦенПрайс = Константа.ОсновнаяКатегорияЦен;
	СпрТМЦ.ИспользоватьРодителя(ГП);
	СпрТМЦ.ВыбратьЭлементы();
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если СпрТМЦ.ЭтоГруппа() = 0 Тогда
			Если списТовар.РазмерСписка() > 0 Тогда
			    Если списТовар.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
					Продолжить;
			    КонецЕсли;
			КонецЕсли;		    
			Если СписТМЦПоВР.РазмерСписка() > 0 Тогда
			    Если СписТМЦПоВР.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
					Продолжить;
			    КонецЕсли;
			КонецЕсли;
			Если глПроверитьДоступКНормам(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ТПрод.НоваяСтрока();
			ТПрод.Прод = СпрТМЦ.ТекущийЭлемент();
			ТПрод.Род = СпрТМЦ.Родитель;
			ТПрод.ИД = ТПрод.КоличествоСтрок();
			ТПрод.ЦенаП = глВернутьЦену(СпрТМЦ.ТекущийЭлемент(), КатЦенПрайс, КонДата, Гривня);
			ТЗ.НоваяКолонка("Т"+ТПрод.ИД, "Число", 15, 3);
			СтрСв = СтрСв + ",Т"+ТПрод.ИД;
		КонецЕсли;
	КонецЦикла;
	Если (списТовар.РазмерСписка() = 0) и (СписТМЦПоВР.РазмерСписка() = 0) Тогда
		ТПрод.НоваяСтрока(); // добавим пустую продукцию.
		ТПрод.Прод = ПолучитьПустоеЗначение("Справочник.ТМЦ");
		ТПрод.ИД = ТПрод.КоличествоСтрок();
		ТПрод.ГП = 1;
		ТПрод.ЦенаП = 0;
		ТЗ.НоваяКолонка("Т"+ТПрод.ИД, "Число", 15, 3);
	КонецЕсли;	    
	// теперь добавим то, что получали из переработки
	СтрСв = "";
	//ДокП = СоздатьОбъект("Документ.ПереработкаМяса");
	//ДокП.УстановитьФильтр(1,0);
	//ДокП.ВыбратьДокументы(НачДата, КонДата);
	//Пока ДокП.ПолучитьДокумент() = 1 Цикл
	//	ДокП.ВыбратьСтроки();
	//	Пока ДокП.ПолучитьСтроку() = 1 Цикл
	//		Если ДокП.Приходовать <> Нет Тогда
	//			Стр = 0;
	//			Если ТПрод.НайтиЗначение(ДокП.ТМЦ, Стр, "Прод") = 0 Тогда
	//				Если списТовар.РазмерСписка() > 0 Тогда
	//				    Если списТовар.Принадлежит(ДокП.ТМЦ) = 0 Тогда
	//						Продолжить;
	//				    КонецЕсли;
	//				КонецЕсли;		    
	//				Если СписТМЦПоВР.РазмерСписка() > 0 Тогда
	//				    Если СписТМЦПоВР.Принадлежит(ДокП.ТМЦ) = 0 Тогда
	//						Продолжить;
	//				    КонецЕсли;
	//				КонецЕсли;		    
	//				
	//				ТПрод.НоваяСтрока();
	//				ТПрод.Прод = ДокП.ТМЦ;
	//				ТПрод.Род = ДокП.ТМЦ.Родитель;
	//				ТПрод.ИД = ТПрод.КоличествоСтрок();
	//				ТПрод.ГП = 1;
	//				ТПрод.Сырье = 1;
	//				ТПрод.ЦенаП = глВернутьЦену(ДокП.ТМЦ, КатЦенПрайс, КонДата, Гривня);
	//				ТЗ.НоваяКолонка("Т"+ТПрод.ИД, "Число", 15, 3);
	//				СтрСв = СтрСв + ",Т"+ТПрод.ИД;
	//			КонецЕсли;			    
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЦикла;
	
	СпрТМЦ.ИспользоватьРодителя();
	СпрТМЦ.ВыбратьЭлементыПоРеквизиту("ВидТМЦ", Перечисление.ВидыТМЦ.Полуфабрикат, 0, 0);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если глПроверитьДоступКНормам(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
			Продолжить;
		КонецЕсли;		
		Если списТовар.РазмерСписка() > 0 Тогда
		    Если списТовар.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
				Продолжить;
		    КонецЕсли;
		КонецЕсли;		    
		Если СписТМЦПоВР.РазмерСписка() > 0 Тогда
		    Если СписТМЦПоВР.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
				Продолжить;
		    КонецЕсли;
		КонецЕсли;		    
		
		ТПрод.НоваяСтрока();
		ТПрод.Прод = СпрТМЦ.ТекущийЭлемент();
		ТПрод.Род = СпрТМЦ.Родитель;
		ТПрод.ИД = ТПрод.КоличествоСтрок();
		ТПрод.ГП = 1;
		ТЗ.НоваяКолонка("Т"+ТПрод.ИД, "Число", 15, 3);
		СтрСв = СтрСв + ",Т"+ТПрод.ИД;
	КонецЦикла;
	ТПрод.Сортировать("ГП,Род,Прод");
	
	ЗаполнитьСписание();
	
	Если (ТипЗначенияСтр(Таб) = "Таблица") и (НоваяТаблица = 0) Тогда
	    Таб.Очистить();
	Иначе
		Таб = СоздатьОбъект("Таблица");
	КонецЕсли;
	Таб.ИсходнаяТаблица("Таблица");	
	Таб.ВывестиСекцию("Кнопки|Основная");
	
	//ТЗ.Сортировать("Мат");
	СтрФ = "";
	глФильтры(СтрФ, списТовар, "Продукция");
	глФильтры(СтрФ, списВР, "Виды работ");
	ТЗДетализацияВЗ.Свернуть("ВидЗатрат,ТМЦ,Ключ", "Сумма,Кво");
	списВЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗДетализацияВЗ.Выгрузить(списВЗ, , , "ВидЗатрат,Сумма,Кво");
	списВЗ.Свернуть("ВидЗатрат", "Сумма,Кво");
	списВЗ.Сортировать("ВидЗатрат");
	ПериодСписания = ""; ПериодОстатки = "";
	Если фВыводитьСО = 1 Тогда
		ПериодСписания = "Списания за: " + ПериодСтр(НачДата1, КонДата1);
	КонецЕсли;
	Если фВыводитьОстаток = 1 Тогда
		ПериодОстатки = "Остатки по дату: " + ДатаОст;
	КонецЕсли;
	
	ВывестиСекции("Шапка");
	
	ИтСуммаПоПрайсу = 0;
	ИтСуммаПоЦенамКг= 0;
	ИтОПЗ_Выпуск  = 0;
	
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 9);
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл		
		Стр = 0;
		Если (ТЗ.КвоПрих = 0) и (ТЗ.ИтСписано+ТЗ.ИтСписаноПФ = 0) и (ТЗ.КвоВып = 0) и (((фВыводитьСО = 1) И (ТЗ.СО = 0) И (ТЗДетализацияВЗ.НайтиЗначение(ТЗ.Мат, Стр, "ТМЦ") = 0)) ИЛИ (фВыводитьСО = 0)) И 
			(ТЗ.Остаток = 0) И (фУдалять = 1) Тогда
		    Продолжить;
		КонецЕсли;
		Расш.Установить("ВыбНоменклатура", ТЗ.Мат);		
		
		Если ТЗ.ЭтоГруппа = 1 Тогда
		    Таб.ВывестиСекцию("Группа|Основная");
			//Если фВыводитьСО = 1 Тогда
			//	ТПрод.ВыбратьСтроки();
			//	Пока ТПрод.ПолучитьСтроку() = 1 Цикл
			//		Если (ТПрод.КвоВып = 0) и (фУдалять = 1) и (ПустоеЗначение(ТПрод.Прод) = 0) Тогда
			//		    Продолжить;
			//		КонецЕсли;					
			//		Таб.ПрисоединитьСекцию("Группа|Прод");
			//	КонецЦикла;				
			//	Таб.ПрисоединитьСекцию("Группа|ИтМат");
			//	Таб.ПрисоединитьСекцию("Группа|СО");
			//КонецЕсли;			
		Иначе
			РасшДок.Установить("ТМЦ", ТЗ.Мат);
			ВывестиСекции("Строка");
		КонецЕсли;		
	КонецЦикла;
	
	ТЗ.Свернуть("ЭтоГруппа", "СО,СуммаСО,СуммаСО1,СуммаПрих,СуммаПрих1,КвоВып,СуммаВып,КвоПрих,СуммаВып1,ИтСписано,ИтСписаноС,ИтСписаноПФ,ИтСписаноПФС, Остаток,СуммаОстаток" + СтрСв);
	Стр = 0;
	Если ТЗ.НайтиЗначение(0, Стр, "ЭтоГруппа") = 1 Тогда
	    ТЗ.ПолучитьСтрокуПоНомеру(Стр);
	КонецЕсли;
	Попытка
		списВЗ.ПолучитьСтрокуПоНомеру(1);
	Исключение
	КонецПопытки;
	
	ВывестиСекции("Итого");
	
	//--- УМК Сандомирский В.Ю. (14.07.14) добавляем в шапку 
	Текст4Строки = "";
	Если ИтСуммаПоЦенамКг <> 0 Тогда
	    Текст4Строки = "Итог по прайсу \ Итог цен + ОПЗ в % " + Окр(ИтСуммаПоПрайсу / ИтСуммаПоЦенамКг * 100, 2);
	КонецЕсли;
	ТекОбласть = Таб.Область(4,1,4,1);
  	ТекОбласть.Текст = Текст4Строки;
  	//--- УМК Сандомирский В.Ю. (14.07.14) добавляем в шапку  	
	
	
	Таб.ОбластьПечати(2);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	
	Таб.Показать("Выпуск");
	
	Расшифровка.Установить("Обновить",0);	
	Если (Обновить = 2) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;	
	
КонецПроцедуры

//======================================================================
Процедура СформироватьДокументы()
	СписДок = глРасшифровка.Получить("ТаблицаДокументов");
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Документы");
	ВЗ = глРасшифровка.Получить("ВидЗатрат"); 
	ПризнакСтр = ВЗ;
	Товар = глРасшифровка.Получить("ТМЦ");
	Таб.ВывестиСекцию("Шапка");
	
	СписДок.ВыбратьСтроки();
	Пока СписДок.ПолучитьСтроку() = 1 Цикл
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	
	Таб.ВывестиСекцию("Итого");
	
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Опции(0,0,3);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	
	Таб.Показать("Расшрифровка документов");
КонецПроцедуры // 

Процедура ПриОткрытии()
	Если глФлагРасшифровки = 1 Тогда 
		Если глРасшифровка.Получить("СписаниеПоДокКросс") = Да Тогда
			СформироватьДокументы();
			глОбновить = 0;
			СтатусВозврата(0);
			Возврат;			
		КонецЕсли;
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		НачДата = глРасшифровка.Получить("Дата1");
		КонДата = глРасшифровка.Получить("Дата2");
		НачДата1 = глРасшифровка.Получить("НачДата1");
		КонДата1 = глРасшифровка.Получить("КонДата1");
		ДатаОст = глРасшифровка.Получить("ДатаОст"); 
		фВыводитьОстаток = глРасшифровка.Получить("фВыводитьОстаток"); 
		фВыводитьСО = глРасшифровка.Получить("фВыводитьСО");

		Материал = глРасшифровка.Получить("Материал");
		ГП = глРасшифровка.Получить("ГП");
		фУдалять = глРасшифровка.Получить("ВыбСчет");
		фУдалять	= глРасшифровка.Получить("фУдалять");
		глРасшифровка.Получить("списТовар").Выгрузить(списТовар);
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;
		
		Если Обновить <> 2 Тогда
			Сформировать();
			
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли; 
	Материал = ВосстановитьЗначение("Материалы");
	Материал1 = ВосстановитьЗначение("Материалы1");
	ГП = ВосстановитьЗначение("ГП");
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьЗначение("Материалы", Материал);
	СохранитьЗначение("Материалы1", Материал1);
	СохранитьЗначение("ГП", ГП);
КонецПроцедуры

Процедура ДобавитьВСписок(Элт, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	Если ТипЗначенияСтр(Элт) = "СписокЗначений" Тогда
		Для Инд = 1 По Элт.РазмерСписка() Цикл
			ДобавитьВСписок(Элт.ПолучитьЗначение(Инд), списТовар);
		КонецЦикла;
	Иначе
		Если Элт.Вид() = "ТМЦ" Тогда
			ДобавитьвСписок(Элт, списТовар);
		ИначеЕсли Элт.Вид() = "ВидыРабот" Тогда
			ДобавитьвСписок(Элт, списВР);
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ДобавитьИзСпецификации()
	ДокСпец = СоздатьОбъект("Документ.УМК_Спецификация");
	Если ДокСпец.Выбрать("Выберите спецификацию", "ФормаСписка") = 1 Тогда
		ДокСпец.ВыбратьСтроки();
		Пока ДокСпец.ПолучитьСтроку() = 1 Цикл
			ДобавитьВСписок(ДокСпец.ТМЦ, списТовар);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ДобавитьИзСпецификации

//======================================================================
Процедура ДобавитьИзПродаж()
	Парам = СоздатьОбъект("СписокЗначений");
	ОткрытьПодбор("Отчет.Обороты", "Форма", Парам);
КонецПроцедуры // ДобавитьИзПродаж

НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

ГП.ВыборГруппы(1);
Материал.ВыборГруппы(1);
фУдалять = 1;
Полуфабрикат = Перечисление.ВидыТМЦ.Полуфабрикат;
Продукция = Перечисление.ВидыТМЦ.Продукция;