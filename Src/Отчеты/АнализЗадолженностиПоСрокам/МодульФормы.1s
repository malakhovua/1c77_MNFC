// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 
Перем ФильтрПоДолгу[6];

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
                        
// переменные предназначены для механизма универсальных группировок отчета
Перем СписокГруппировок;
Перем КоличествоГруппировок;
Перем НомерГруппировкиВалюта;

// переменные предназначены для запроса по периодам
Перем Запрос;
Перем Язык, УкрГруппировки;
Перем Знак;

Перем ВидОтчетаСтр, ВидДолгаСтр;
Перем Заголовок, ПечЗаголовокСтолбца;

Перем МаксДнейДолга;
Перем ИтогНачДолг, ИтогКонДолг, ИтогПриход, ИтогРасход;

// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
Процедура ВыбратьПоФильтру()
	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру


// ===============================
Функция ПерерисовкаНазванийЗакладок()      

	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");

КонецФункции // ПерерисовкаНазванийЗакладок	

// ===============================
Процедура УстановитьГруппировкиЗапроса(ТекстЗапроса, ТекстЗагол)
	                       
	СписокГруппировок = СоздатьОбъект("СписокЗначений");
	КвоГруппировок 				= Группировки.РазмерСписка();
	НомерГруппировкиВалюта 		= КвоГруппировок;
	

	Для Сч=1 По КвоГруппировок Цикл
		
		Если Группировки.Пометка(Сч)=1 Тогда
			ПредставлениеГрупп		=""; 
			УкрПредставлениеГрупп	="";
			ТекстГрупп = Группировки.ПолучитьЗначение(Сч,ПредставлениеГрупп);
			УкрГруппировки.ПолучитьЗначение(УкрГруппировки.НайтиЗначение(ТекстГрупп),УкрПредставлениеГрупп);
			
			ТекстБезУпорядочивания = "";	
			ТекстБезГрупп = "";
			Если ( (ТекстГрупп = "Контрагент") Или (ТекстГрупп = "СтавкаНДС") Или (ТекстГрупп = "Валюта") ) 
				И (фБезГрупп = 1) Тогда
					ТекстБезГрупп = " без групп";        
			ИначеЕсли ( (ТекстГрупп = "Договор") Или (ТекстГрупп = "Счет") Или (ТекстГрупп = "КредДокумент") )
				И (глОптимизацияОтчетов = 1) Тогда
			    ТекстБезУпорядочивания = " без упорядочивания";	
			КонецЕсли;
			ТекстЗапроса= ТекстЗапроса 	+ "Группировка "+ТекстГрупп+ТекстБезУпорядочивания+ТекстБезГрупп+";";
			ТекстЗагол	= ТекстЗагол + " / "+?(Язык="у",УкрПредставлениеГрупп,ПредставлениеГрупп);
			СписокГруппировок.ДобавитьЗначение(ТекстГрупп,ПредставлениеГрупп);
			Если ТекстГрупп = "Валюта" Тогда
			    НомерГруппировкиВалюта = СписокГруппировок.РазмерСписка();
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла; 

	Если ПустаяСтрока(ТекстЗагол)=0 Тогда // удаляем ведущий разделитель " / "
		ТекстЗагол = Сред(ТекстЗагол,4)
	КонецЕсли;

КонецПроцедуры // УстановитьГруппировкиЗапроса()

// ===============================
Процедура ПечатьСтроки(Срок,Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка = "",ЭтоГруппа=0)
Перем Секция;
	
	Если (фБазоваяВалюта=0) И (Ном>=НомерГруппировкиВалюта) Тогда
		ВалютаПечати=Запрос.Валюта;
		ВалСуффикс = "";
	Иначе
		ВалютаПечати=Гривня;
		ВалСуффикс = "Осн";
	КонецЕсли;

	ПечНачДолг = "";
	ПечПриход  = "";
	ПечРасход  = "";
	ПечКонДолг = "";

	Если фНачОст = 1 Тогда
		Если НазваниеГруппировки="Документ" Тогда
			ПечНачДолг = "";
		Иначе
			Атрибут = "Срок"+Срок+"НачДолг"+ВалСуффикс;
			НачДолг = Запрос.ПолучитьАтрибут(Атрибут);
			Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
				Атрибут = "Срок"+Срок+"НачДолгПост"+ВалСуффикс;
				НачДолг = НачДолг+Запрос.ПолучитьАтрибут(Атрибут);
			КонецЕсли;
			ПечНачДолг = глФРМ(Знак*НачДолг, ВалютаПечати, 1);
		КонецЕсли;
	КонецЕсли;
		
	Если фПриход = 1 Тогда
		Атрибут = "Срок"+Срок+"ПрихДолг"+ВалСуффикс;
		Приход = Запрос.ПолучитьАтрибут(Атрибут);
		Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
			Атрибут = "Срок"+Срок+"ПрихДолгПост"+ВалСуффикс;
			Приход = Приход+Запрос.ПолучитьАтрибут(Атрибут);
		КонецЕсли;
		ПечПриход = глФРМ(Приход, ВалютаПечати, 1);
	КонецЕсли;

	Если фРасход = 1 Тогда
		Атрибут = "Срок"+Срок+"РасхДолг"+ВалСуффикс;
		Расход = Запрос.ПолучитьАтрибут(Атрибут);
		Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
			Атрибут = "Срок"+Срок+"РасхДолгПост"+ВалСуффикс;
			Расход = Расход+Запрос.ПолучитьАтрибут(Атрибут);
		КонецЕсли;
		ПечРасход = глФРМ(Расход, ВалютаПечати, 1);
	КонецЕсли;

	Если фКонОст = 1 Тогда
		Если НазваниеГруппировки="Документ" Тогда
			ПечКонДолг = "";
		Иначе
			Атрибут = "Срок"+Срок+"КонДолг"+ВалСуффикс;
			КонДолг = Запрос.ПолучитьАтрибут(Атрибут);
			Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
				Атрибут = "Срок"+Срок+"КонДолгПост"+ВалСуффикс;
				КонДолг = КонДолг+Запрос.ПолучитьАтрибут(Атрибут);
			КонецЕсли;
			ПечКонДолг = глФРМ(Знак*КонДолг, ВалютаПечати, 1);
		КонецЕсли;
	КонецЕсли;
	
	Если (ПустаяСтрока(ПечНачДолг)=1) И (ПустаяСтрока(ПечПриход)=1) И (ПустаяСтрока(ПечРасход)=1) И (ПустаяСтрока(ПечКонДолг)=1) Тогда
		Возврат;
	КонецЕсли;

	Наим = ПечТекстСтроки;
	Значение = ТекРасшифровка;
	Секция = Таб.ПолучитьСекцию(НазваниеСекции+"|Наименование");
	Область = Секция.Область("R1C1:R1C8");
	Область.Подчеркнутый(ЭтоГруппа);
	Таб.ВывестиСекцию(Секция);
	
	Если фНачОст = 1 Тогда    
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|НачОст");
	КонецЕсли;
		
	Если фПриход = 1 Тогда    
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Приход");
	КонецЕсли;

	Если фРасход = 1 Тогда    
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Расход");
	КонецЕсли;

	Если фКонОст = 1 Тогда    
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|КонОст");
	КонецЕсли;

КонецПроцедуры //ПечатьСтроки()

// ===============================
Функция СуммаДокументаСтр(Док,НомерСтроки)

	Если (ПустоеЗначение(Док) = 1) Или (глОптимизацияОтчетов = 1) Тогда
		Возврат "";
	КонецЕсли;

	ВидДок=Док.Вид();

	ВалютаДокумента = Гривня;
	Если глЕстьРеквизитШапки("Валюта",ВидДок) = Да Тогда
		ВалютаДокумента = Док.Валюта;
	ИначеЕсли глЕстьРеквизитМнЧ("Валюта",ВидДок) = Да Тогда
		Если Док.ПолучитьСтрокуПоНомеру(НомерСтроки) = 1 Тогда	
			ВалютаДокумента = Док.Валюта;
		КонецЕсли;	
	КонецЕсли;	    
				
	Если глЕстьРеквизитШапки("СуммаСНДС",ВидДок) = Да Тогда
		СуммаДок=Док.СуммаСНДС;
	ИначеЕсли глЕстьРеквизитШапки("СуммаБезНДС",ВидДок) = Да Тогда
		СуммаДок=Док.СуммаБезНДС;			
	ИначеЕсли глЕстьРеквизитМнЧ("СуммаБезНДСВал",ВидДок) = Да Тогда
		СуммаДок=Док.Итог("СуммаБезНДСВал");		
	ИначеЕсли глЕстьРеквизитМнЧ("СуммаСНДС",ВидДок) = Да Тогда
		Если Док.ПолучитьСтрокуПоНомеру(НомерСтроки) = 1 Тогда	
			СуммаДок=Док.СуммаСНДС;		
		Иначе
			СуммаДок=Док.Итог("СуммаСНДС");		
		КонецЕслИ;				
	ИначеЕсли глЕстьРеквизитМнЧ("СуммаБезНДС",ВидДок) = Да Тогда
		СуммаДок=Док.Итог("СуммаБезНДС");
	Иначе	                             
		СуммаДок = 0;			
	КонецЕсли;			

	Возврат глФРМ(СуммаДок,ВалютаДокумента,1);

КонецФункции

// ===============================
Процедура ВывестиГруппировки(Срок, Знач Ном=1)

	Если Ном > КоличествоГруппировок Тогда                           
		Возврат;
	КонецЕсли;

	НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(Ном);
	Пока Запрос.Группировка(Ном) = 1 Цикл

		НазваниеСекции="Группировка"+Ном;
		Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);
		
		Если Найти("Контрагент,Валюта,СтавкаНДС",НазваниеГруппировки) > 0 Тогда
			ПечТекстСтроки = глСмещениеГруппы(Значение,фБезГрупп) + Значение;
		Иначе // Счет,КредДокумент,Документ
			Если ПустоеЗначение(Значение)=0 Тогда
				ПечТекстСтроки = ""+глДокументВОтчете(Значение,"с номером","с датой",Язык);
				Если глОптимизацияОтчетов <> 1 Тогда
					ПечТекстСтроки = ПечТекстСтроки+?(Язык="у"," на суму= "," на сумму= ");
					ПечТекстСтроки = ПечТекстСтроки+СуммаДокументаСтр(Значение,Запрос.НомерСтроки);
				КонецЕсли;
			КонецЕсли;

			Если НазваниеГруппировки="КредДокумент" Тогда
				// определяем дату оплаты
				Док = Значение;
				ДатаОплаты=Док.ДатаДок;
				Если глЕстьРеквизитШапки("ДатаОплаты",Док.Вид())=Да Тогда
					Если ПустоеЗначение(Док.ДатаОплаты) = 0 Тогда
						ДатаОплаты=Док.ДатаОплаты;
					КонецЕсли;
				КонецЕсли;	               

				ПечТекстСтроки = ПечТекстСтроки + ?(Язык="у",", строк боргу= ",", срок долга= ")+(Дата2-ДатаОплаты) + ?(Язык="у"," днів"," дней");
			КонецЕсли;

		КонецЕсли;
		
		ПечТекстСтроки = ?(ПустоеЗначение(ПечТекстСтроки)=1,глПредставлениеПустогоЗначения(НазваниеГруппировки,Язык),ПечТекстСтроки);

		ПечатьСтроки(Срок,Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,Значение,Запрос.ЭтоГруппа(НазваниеГруппировки));
		глОживить(1);

		ВывестиГруппировки(Срок, Ном+1);
	КонецЦикла;

КонецПроцедуры // ВывестиГруппировки()

// ===============================
Процедура ВывестиИтоги(Срок1=0,Срок2=0)      
	
	Если (Срок1=0) И (Срок2=0) Тогда

		ИтогПоСрокам = ?(Язык="у", "Разом", "Итого");
		
		Таб.ВывестиСекцию("Итого|Наименование");
		
		Если фНачОст = 1 Тогда    
			ПечНачДолг = глФРМ(Знак*ИтогНачДолг, Гривня, 1);
			Таб.ПрисоединитьСекцию("Итого|НачОст");
		КонецЕсли;
		
		Если фПриход = 1 Тогда    
			ПечПриход = глФРМ(ИтогПриход, Гривня, 1);
			Таб.ПрисоединитьСекцию("Итого|Приход");
		КонецЕсли;
		
		Если фРасход = 1 Тогда    
			ПечРасход = глФРМ(ИтогРасход, Гривня, 1);
			Таб.ПрисоединитьСекцию("Итого|Расход");
		КонецЕсли;
		
		Если фКонОст = 1 Тогда    
			ПечКонДолг = глФРМ(Знак*ИтогКонДолг, Гривня, 1);
			Таб.ПрисоединитьСекцию("Итого|КонОст");
		КонецЕсли;

	Иначе

		Если Срок2=МаксДнейДолга Тогда
			ИтогПоСрокам = ?(Язык="у", "Борги тривалістю понад "+Срок1+" днів", "Долги сроком свыше "+Срок1+" дней");
		ИначеЕсли Срок1=0 Тогда
			ИтогПоСрокам = ?(Язык="у", "Борги тривалістю до "+Срок2+" днів", "Долги сроком до "+Срок2+" дней");
		Иначе
			ИтогПоСрокам = ?(Язык="у", "Борги тривалістю від "+Срок1+" до "+(Срок2-1)+" днів", "Долги сроком от "+Срок1+" до "+(Срок2-1)+" дней");
		КонецЕсли;
		
		Таб.ВывестиСекцию("Итого|Наименование");
		
		НачДолг = 0;
		Приход  = 0;
		Расход  = 0;
		КонДолг = 0;
		
		Если фНачОст = 1 Тогда    
			Атрибут = "Срок"+Срок1+"НачДолгОсн";
			НачДолг = НачДолг+Запрос.ПолучитьАтрибут(Атрибут);
			Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
				Атрибут = "Срок"+Срок1+"НачДолгПостОсн";
				НачДолг = НачДолг+Запрос.ПолучитьАтрибут(Атрибут);
			КонецЕсли;
			ПечНачДолг = глФРМ(Знак*НачДолг, Гривня, 1);
			Таб.ПрисоединитьСекцию("Итого|НачОст");
		КонецЕсли;
		
		Если фПриход = 1 Тогда    
			Атрибут = "Срок"+Срок1+"ПрихДолгОсн";
			Приход  = Приход+Запрос.ПолучитьАтрибут(Атрибут);
			Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
				Атрибут = "Срок"+Срок1+"ПрихДолгПостОсн";
				Приход  = Приход+Запрос.ПолучитьАтрибут(Атрибут);
			КонецЕсли;
			ПечПриход = глФРМ(Приход, Гривня, 1);
			Таб.ПрисоединитьСекцию("Итого|Приход");
		КонецЕсли;
		
		Если фРасход = 1 Тогда    
			Атрибут = "Срок"+Срок1+"РасхДолгОсн";
			Расход  = Расход+Запрос.ПолучитьАтрибут(Атрибут);
			Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
				Атрибут = "Срок"+Срок1+"РасхДолгПостОсн";
				Расход  = Расход+Запрос.ПолучитьАтрибут(Атрибут);
			КонецЕсли;
			ПечРасход = глФРМ(Расход, Гривня, 1);
			Таб.ПрисоединитьСекцию("Итого|Расход");
		КонецЕсли;
		
		Если фКонОст = 1 Тогда    
			Атрибут = "Срок"+Срок1+"КонДолгОсн";
			КонДолг = КонДолг+Запрос.ПолучитьАтрибут(Атрибут);
			Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
				Атрибут = "Срок"+Срок1+"КонДолгПостОсн";
				КонДолг = КонДолг+Запрос.ПолучитьАтрибут(Атрибут);
			КонецЕсли;
			ПечКонДолг = глФРМ(Знак*КонДолг, Гривня, 1);
			Таб.ПрисоединитьСекцию("Итого|КонОст");
		КонецЕсли;

		ИтогНачДолг = ИтогНачДолг  + НачДолг;
		ИтогПриход  = ИтогПриход   + Приход;
		ИтогРасход  = ИтогРасход   + Расход;
		ИтогКонДолг = ИтогКонДолг  + КонДолг;

	КонецЕсли;
	
КонецПроцедуры 

// ===============================
Процедура ВывестиСроки()      
	
	ИтогНачДолг = 0;
	ИтогПриход  = 0;
	ИтогРасход  = 0;
	ИтогКонДолг = 0;

	КвоСроков=Сроки.РазмерСписка();
	Срок1=МаксДнейДолга;

	Для Инд=0 По КвоСроков Цикл

		Срок2 = Срок1;    
		Если Инд <> КвоСроков Тогда
			Срок1=Сроки.ПолучитьЗначение(КвоСроков-Инд);
		Иначе
			Срок1=0;
		КонецЕсли;
		Запрос.вНачалоВыборки();
		ВывестиИтоги(Срок1,Срок2);
		глОживить(1);
		ВывестиГруппировки(Срок1);
	КонецЦикла;
	ВывестиИтоги();
	глОживить(1);
КонецПроцедуры // ВывестиСроки()


// ===============================
Процедура ВывестиШапку()

	Таб.ВывестиСекцию("Шапка|Наименование");
	Если ВидОтчетаСтр="Поставщики" Тогда
		ТекстКонтрагента = " "+?(Язык="у", "постачальник", "поставщик")+?(Знак = 1, "а","у");
	ИначеЕсли ВидОтчетаСтр="Покупатели" Тогда
		ТекстКонтрагента = " "+?(Язык="у", "покупц", "покупател")+?(Знак = 1, "я","ю");
	Иначе
		ТекстКонтрагента = " "+?(Язык="у", "клієнт", "клиент")+?(Знак = 1, "а","у");
	КонецЕсли;                           

	Если фНачОст = 1 Тогда    
		ПечЗаголовокНач = ?(Язык="у", "Початковий борг", "Начальный долг");
		ПечЗаголовокНач = ПечЗаголовокНач + ТекстКонтрагента;
		Таб.ПрисоединитьСекцию("Шапка|НачОст");
	КонецЕсли;
		
	Если фПриход = 1 Тогда    
		Если Знак = 1 Тогда
			ПечЗаголовокПриход = ?(Язык="у", "Збільшення боргу", "Увеличение долга");
		Иначе
			ПечЗаголовокПриход = ?(Язык="у", "Зменшення боргу", "Уменьшение долга");
		КонецЕсли;
		ПечЗаголовокПриход = ПечЗаголовокПриход + ТекстКонтрагента;
		Таб.ПрисоединитьСекцию("Шапка|Приход");
	КонецЕсли;
	
	Если фРасход = 1 Тогда    
		Если Знак = 1 Тогда
			ПечЗаголовокРасход = ?(Язык="у", "Зменшення боргу", "Уменьшение долга");
		Иначе
			ПечЗаголовокРасход = ?(Язык="у", "Збільшення боргу", "Увеличение долга");
		КонецЕсли;
		ПечЗаголовокРасход = ПечЗаголовокРасход + ТекстКонтрагента;
		Таб.ПрисоединитьСекцию("Шапка|Расход");
	КонецЕсли;
	
	Если фКонОст = 1 Тогда    
		ПечЗаголовокКон = ?(Язык="у", "Кінцевий. борг", "Конечный долг");
		ПечЗаголовокКон = ПечЗаголовокКон + ТекстКонтрагента;
		Таб.ПрисоединитьСекцию("Шапка|КонОст");
	КонецЕсли;

	глОживить(1);

КонецПроцедуры 

// ===============================
Функция ПолучитьКод(Контрагент, Договор, Счет, КредДокумент)
Перем Представление;
	Представление = "";
    Представление = Представление + ЗначениеВСтрокуВнутр(Контрагент) 	+ "/";
    Представление = Представление + ЗначениеВСтрокуВнутр(Договор)		+ "/";
    Представление = Представление + ЗначениеВСтрокуВнутр(Счет) 			+ "/";
    Представление = Представление + ЗначениеВСтрокуВнутр(КредДокумент);
	Возврат Представление;
КонецФункции

// ===============================
Функция ЗаполнитьСписокПоКонОст(СпЗначений, Знач ТекстЗапроса)
	
	ТекстЗапроса = ТекстЗапроса +
		"Функция КонДолг 	= КонОст(Долг);
		|Функция КонДолгОсн	= КонОст(ДолгОсн);";
	Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
		ТекстЗапроса = ТекстЗапроса +
			"Функция КонДолгПост 	= КонОст(ДолгПост);
			|Функция КонДолгПостОсн	= КонОст(ДолгПостОсн);";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
		|Группировка Контрагент Без Групп;
		|Группировка Договор;
		|Группировка Счет;
		|Группировка КредДокумент;";

	ЗапросДолг = СоздатьОбъект("Запрос");
	// Если ошибка в запросе, то выход из процедуры
	Если ЗапросДолг.Выполнить(ТекстЗапроса) = 0 Тогда
		Предупреждение("Запрос по кредиту не выполнился!");
		Возврат 0;
	КонецЕсли;  
	
	СпЗначений.УдалитьВсе();
	Пока ЗапросДолг.Группировка(1) = 1 Цикл
		Пока ЗапросДолг.Группировка(2) = 1 Цикл
			Пока ЗапросДолг.Группировка(3) = 1 Цикл
				Пока ЗапросДолг.Группировка(4) = 1 Цикл
					КонДолг 	= ЗапросДолг.КонДолг;
					КонДолгОсн	= ЗапросДолг.КонДолгОсн;
					Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда		
						КонДолг		= КонДолг	 + ЗапросДолг.КонДолгПост;
						КонДолгОсн	= КонДолгОсн + ЗапросДолг.КонДолгПостОсн;
					КонецЕсли;
					Если (Знак*КонДолг>0) Или (Знак*КонДолгОсн>0) Тогда
						СпЗначений.ДобавитьЗначение(ПолучитьКод(ЗапросДолг.Контрагент, ЗапросДолг.Договор, ЗапросДолг.Счет, ЗапросДолг.КредДокумент));
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	Если СпЗначений.РазмерСписка()=0 Тогда
		Предупреждение("Не найдено долгов с заданными свойствами.");
		Возврат 0;
	КонецЕсли;   
	Возврат 1;
КонецФункции


// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
Процедура РаботаСоСпискомСроков(Режим)
	ТекПоз = Сроки.ТекущаяСтрока();
	Если Режим="Добавить" Тогда
		Если Сроки.РазмерСписка() >= 5 Тогда
			Предупреждение("В списке не должно быть более 5 значений.");
			Возврат;
		КонецЕсли;

		НовоеЗначение = 0;
		ВвестиЧисло(НовоеЗначение,"Введите новый срок (количество дней)",,0);

		Если (НовоеЗначение <= 0) Или (НовоеЗначение >= 1000) Тогда
			Предупреждение("Вы ввели недопустимое значение.");
			Возврат;
		КонецЕсли;

		Если Сроки.НайтиЗначение(НовоеЗначение) > 0 Тогда
			Предупреждение("Такое значение уже есть в списке.");
			Возврат;
		КонецЕсли;  
		
		Если (НовоеЗначение%10 = 1) И (НовоеЗначение%100 <> 11) Тогда
			ТекстДней=" день"
		ИначеЕсли (НовоеЗначение%10 = 2) И (НовоеЗначение%100 <> 12) Тогда
			ТекстДней=" дня"
		ИначеЕсли (НовоеЗначение%10 = 3) И (НовоеЗначение%100 <> 13) Тогда
			ТекстДней=" дня"
		ИначеЕсли (НовоеЗначение%10 = 4) И (НовоеЗначение%100 <> 14) Тогда
			ТекстДней=" дня"
		Иначе
			ТекстДней=" дней"
		КонецЕсли;

		Сроки.ДобавитьЗначение(НовоеЗначение,""+НовоеЗначение+ТекстДней);
		Сроки.Сортировать();

    ИначеЕсли Режим="УдалитьВсе" Тогда	// удаляем все элементы из списка

		Сроки.УдалитьВсе();

	ИначеЕсли Режим="Удалить" Тогда	// удаляем из списка один элемент

		Если ТекПоз =0 Тогда
			Возврат;
		КонецЕсли;
		Сроки.УдалитьЗначение(ТекПоз);
		Сроки.ТекущаяСтрока(Мин(ТекПоз,Сроки.РазмерСписка()));

	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура УстКолонкиОтчета()

	ЭлементДиалога = Форма.АктивныйЭлемент();
	
	Если фНачОст + фПриход + фРасход + фКонОст = 0 Тогда // хотя бы одна должна быть выбрана
		Если ЭлементДиалога = "фНачОст" Тогда
			фНачОст = 1;
		ИначеЕсли ЭлементДиалога = "фПриход" Тогда
			фПриход = 1;
		ИначеЕсли ЭлементДиалога = "фРасход" Тогда
			фРасход = 1;
		ИначеЕсли ЭлементДиалога = "фКонОст" Тогда
			фКонОст = 1;
		КонецЕсли;
	КонецЕсли;

	Позиция = Группировки.НайтиЗначение("Документ");
	Если (фПриход = 0) И (фРасход=0) Тогда // не выводим документы движений
		Если Позиция <> 0 Тогда
			Группировки.УдалитьЗначение(Позиция);
		КонецЕсли;
	Иначе
		Если Позиция=0 Тогда
			Группировки.ДобавитьЗначение("Документ","Документ движения");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// ===============================
Процедура ДоступностьЭлементов(ВсеЭлементы=0)           
	
	ЭлементДиалога = Форма.АктивныйЭлемент();

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбФирма") Или (ЭлементДиалога="кХВыбФирма") Тогда
		Форма.кХВыбФирма.Доступность(ВыбФирма.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбКонтрагент") Или (ЭлементДиалога="кХВыбКонтрагент") Тогда
		Форма.кХВыбКонтрагент.Доступность(ВыбКонтрагент.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбДоговор") Или (ЭлементДиалога="кХВыбДоговор") Тогда
		Форма.кХВыбДоговор.Доступность(ВыбДоговор.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбСтавкаНДС") Или (ЭлементДиалога="кХВыбСтавкаНДС") Тогда
		Форма.кХВыбСтавкаНДС.Доступность(ВыбСтавкаНДС.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбВалюта") Или (ЭлементДиалога="кХВыбВалюта") Тогда
		Форма.кХВыбВалюта.Доступность(ВыбВалюта.Выбран()); 
	КонецЕсли;

КонецПроцедуры  	// ДоступностьЭлементов

// ===============================
Процедура ПриВыбореДоговора()	
	Если ВыбДоговор.Выбран()=0 Тогда
		Возврат;
	КонецЕсли;
	Если ВыбКонтрагент.Выбран()=0 Тогда
		ВыбКонтрагент = ВыбДоговор.Контрагент;
	КонецЕсли;	
	Если ВыбФирма.Выбран()=0 Тогда
		ВыбФирма = ВыбДоговор.Фирма;
	КонецЕсли;	
КонецПроцедуры 		// ПриВыбореДоговора

// ===============================
Процедура ПриВыбореКонтрагента()	
	Если (ВыбКонтрагент.Выбран()=0) Или (ВыбДоговор.Выбран()=0) Тогда
		Возврат;
	КонецЕсли;	
	Если ВыбКонтрагент <> ВыбДоговор.Контрагент Тогда
		ВыбДоговор = 0;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура Сформировать(ЗакрытьДиалог=0)
Перем ТекстЗапроса;
	
	глПроверкаДаты(Дата1,Дата2);
	
	// Здесь формируется отчет, который использует регистры, критичные к
	// последовательности проведения документов
	// поэтому сравним установленные даты периода формируемого отчета с ГП
	глПроверкаАктуальностиОтчета(Дата1,Дата2,ВыбФирма,0);
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") Или (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;

	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	Таб.ИсходнаяТаблица(ПечФорма);
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "АнализЗадолженностиПоСрокам");
		
	Расшифровка.Установить("Дата1", 		Дата1);
    Расшифровка.Установить("Дата2", 		Дата2);

	Расшифровка.Установить("ВыбФирма",		ВыбФирма);
	Расшифровка.Установить("ВыбКонтрагент",	ВыбКонтрагент);
	Расшифровка.Установить("ВыбДоговор",	ВыбДоговор);
	Расшифровка.Установить("ВыбСтавкаНДС",	ВыбСтавкаНДС);
	Расшифровка.Установить("ВыбВалюта",		ВыбВалюта);
	// запомним МФ только если он задан
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
	КонецЕсли;

	Расшифровка.Установить("фБазоваяВалюта", 	фБазоваяВалюта);
	Расшифровка.Установить("ВидОтчета",			ВидОтчета.ТекущаяСтрока());
	Расшифровка.Установить("ВидДолга",			ВидДолга.ТекущаяСтрока());

	Расшифровка.Установить("Группировки",	Группировки);	
	Расшифровка.Установить("Сроки",			Сроки);	
	Расшифровка.Установить("фБезГрупп",		фБезГрупп);

	Расшифровка.Установить("фНачОст",	фНачОст);
	Расшифровка.Установить("фКонОст",	фКонОст);
	Расшифровка.Установить("фПриход",	фПриход);
	Расшифровка.Установить("фРасход",	фРасход);
	
	ВидОтчетаСтр 	= ВидОтчета.ПолучитьЗначение(ВидОтчета.	ТекущаяСтрока());
	ВидДолгаСтр 	= ВидДолга.	ПолучитьЗначение(ВидДолга.	ТекущаяСтрока());
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	               
	Если Дата2 >= ПолучитьДатуТА() Тогда
		ТекстЗапроса = "
			|Период с Дата1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Дата1 по Дата2;";
	КонецЕсли;
	
	Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда

		Знак = 1;
		Заголовок=?(Язык="у","Взаєморозрахунки з клієнтами","Взаиморасчеты с клиентами");
		ТекстЗапроса=ТекстЗапроса+
			"Фирма			= Регистр.ВзаиморасчетыПокупателей.Фирма,				Регистр.ВзаиморасчетыПоставщиков.Фирма;
			|Контрагент		= Регистр.ВзаиморасчетыПокупателей.Контрагент,			Регистр.ВзаиморасчетыПоставщиков.Контрагент; 
			|Договор		= Регистр.ВзаиморасчетыПокупателей.Договор,				Регистр.ВзаиморасчетыПоставщиков.Договор;
			|Счет			= Регистр.ВзаиморасчетыПокупателей.Счет,				Регистр.ВзаиморасчетыПоставщиков.Счет;
			|КредДокумент	= Регистр.ВзаиморасчетыПокупателей.КредДокумент,		Регистр.ВзаиморасчетыПоставщиков.КредДокумент;
			|СтавкаНДС		= Регистр.ВзаиморасчетыПокупателей.СтавкаНДС,			Регистр.ВзаиморасчетыПоставщиков.СтавкаНДС;
			|Валюта			= Регистр.ВзаиморасчетыПокупателей.Валюта,				Регистр.ВзаиморасчетыПоставщиков.Валюта;

			|НомерСтроки	= Регистр.ВзаиморасчетыПокупателей.НомерСтроки,			Регистр.ВзаиморасчетыПоставщиков.НомерСтроки;

			|Долг			= Регистр.ВзаиморасчетыПокупателей.Долг;
			|ДолгОсн		= Регистр.ВзаиморасчетыПокупателей.ДолгОсн;

			|ДолгПост		= Регистр.ВзаиморасчетыПоставщиков.Долг;
			|ДолгПостОсн	= Регистр.ВзаиморасчетыПоставщиков.ДолгОсн;";

	Иначе // по покупателям или поставщикам

		Если ВидОтчетаСтр = "Поставщики" Тогда
			Знак = -1;
			ИмяРег="ВзаиморасчетыПоставщиков";
			Заголовок=?(Язык="у","Взаєморозрахунки з постачальниками","Взаиморасчеты с поставщиками");
		Иначе // Покупатели
			Знак = 1;
			ИмяРег="ВзаиморасчетыПокупателей";
			Заголовок=?(Язык="у","Взаєморозрахунки з покупцями","Взаиморасчеты с покупателями");
		КонецЕсли;

		ТекстЗапроса=ТекстЗапроса+"
			|Фирма			= Регистр."+ИмяРег+".Фирма;
			|Контрагент		= Регистр."+ИмяРег+".Контрагент; 
			|Договор		= Регистр."+ИмяРег+".Договор;
			|Счет			= Регистр."+ИмяРег+".Счет;
			|КредДокумент	= Регистр."+ИмяРег+".КредДокумент;
			|СтавкаНДС		= Регистр."+ИмяРег+".СтавкаНДС;
			|Валюта			= Регистр."+ИмяРег+".Валюта;

			|НомерСтроки	= Регистр."+ИмяРег+".НомерСтроки;

			|Долг			= Регистр."+ИмяРег+".Долг;
			|ДолгОсн		= Регистр."+ИмяРег+".ДолгОсн;";

	КонецЕсли;

	Загол = "";
	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Контрагент", ВыбКонтрагент, "ВыбКонтрагент", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по контрагентам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Договор", ВыбДоговор, "ВыбДоговор", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по договорам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"СтавкаНДС", ВыбСтавкаНДС, "ВыбСтавкаНДС", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по НДС. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Валюта", ВыбВалюта, "ВыбВалюта", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по валютам. Отчет не сформирован.");
		Возврат;
	КонецЕсли;

	Если ВидДолгаСтр="ВсеДолги" Тогда 
		Заголовок = Заголовок + РазделительСтрок + ?(Язык="у","Всі борги","Все долги");
	Иначе
		Если ВидДолгаСтр="ДолгНам" Тогда 
			Знак = 1;
			Заголовок = Заголовок + РазделительСтрок + ?(Язык="у","Борги нам","Долги нам");
		Иначе // наши долги
			Знак = -1;
			Заголовок = Заголовок + РазделительСтрок + ?(Язык="у","Наші борги","Наши долги");
		КонецЕсли;

		спСтрокДолга = СоздатьОбъект("СписокЗначений");                                          
		Если ЗаполнитьСписокПоКонОст(спСтрокДолга, ТекстЗапроса) = 0 Тогда
		    Возврат;
		КонецЕсли;          
		ТекстЗапроса = ТекстЗапроса + "Условие (ПолучитьКод(Контрагент,Договор,Счет,КредДокумент) В спСтрокДолга);";
	КонецЕсли;

	КвоСроков = Сроки.РазмерСписка();
	Срок2=0;
	Для Инд=1 По КвоСроков+1 Цикл
		Срок1=Срок2;
		Если Инд <> КвоСроков+1 Тогда
			Срок2=Сроки.ПолучитьЗначение(Инд);
		Иначе
			Срок2=МаксДнейДолга;
		КонецЕсли;
		
		СтрСрок = "Срок"+Срок1;
		УслСрок = "(Дата("""+Дата2+""")-КредДокумент.ДатаДок >= "+Срок1+") И (Дата("""+Дата2+""")-КредДокумент.ДатаДок < "+Срок2+")";

		Если фНачОст = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция "+СтрСрок+"НачДолг 	= НачОст(Долг)		Когда ("+УслСрок+");
				|Функция "+СтрСрок+"НачДолгОсн	= НачОст(ДолгОсн)	Когда ("+УслСрок+");";
			Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
				ТекстЗапроса = ТекстЗапроса+
					"Функция "+СтрСрок+"НачДолгПост 	= НачОст(ДолгПост)		Когда ("+УслСрок+");
					|Функция "+СтрСрок+"НачДолгПостОсн	= НачОст(ДолгПостОсн)	Когда ("+УслСрок+");";
			КонецЕсли;
		КонецЕсли;
	
		Если фКонОст = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция "+СтрСрок+"КонДолг 	= КонОст(Долг)		Когда ("+УслСрок+");
				|Функция "+СтрСрок+"КонДолгОсн	= КонОст(ДолгОсн)	Когда ("+УслСрок+");";
			Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
				ТекстЗапроса = ТекстЗапроса+
					"Функция "+СтрСрок+"КонДолгПост 	= КонОст(ДолгПост)		Когда ("+УслСрок+");
					|Функция "+СтрСрок+"КонДолгПостОсн	= КонОст(ДолгПостОсн)	Когда ("+УслСрок+");";
			КонецЕсли;
		КонецЕсли;
	
		Если фПриход = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция "+СтрСрок+"ПрихДолг 	= Приход(Долг)		Когда ("+УслСрок+");
				|Функция "+СтрСрок+"ПрихДолгОсн	= Приход(ДолгОсн)	Когда ("+УслСрок+");";
			Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
				ТекстЗапроса = ТекстЗапроса+
					"Функция "+СтрСрок+"ПрихДолгПост 	= Приход(ДолгПост)		Когда ("+УслСрок+");
					|Функция "+СтрСрок+"ПрихДолгПостОсн	= Приход(ДолгПостОсн)	Когда ("+УслСрок+");";
			КонецЕсли;
		КонецЕсли;
	
		Если фРасход = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция "+СтрСрок+"РасхДолг 	= Расход(Долг)		Когда ("+УслСрок+");
				|Функция "+СтрСрок+"РасхДолгОсн	= Расход(ДолгОсн)	Когда ("+УслСрок+");";
			Если ВидОтчетаСтр = "ОбщиеВзаиморасчеты" Тогда
				ТекстЗапроса = ТекстЗапроса+
					"Функция "+СтрСрок+"РасхДолгПост 	= Расход(ДолгПост)		Когда ("+УслСрок+");
					|Функция "+СтрСрок+"РасхДолгПостОсн	= Расход(ДолгПостОсн)	Когда ("+УслСрок+");";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ПечЗаголовокСтолбца = "";
	ТекстГруппировок 	= "";
	
	УстановитьГруппировкиЗапроса(ТекстГруппировок, ПечЗаголовокСтолбца);
	КоличествоГруппировок = СписокГруппировок.РазмерСписка();
        
	Если КоличествоГруппировок = 0 Тогда
		Предупреждение("Следует выбрать хотя бы одну группировку!");
		Возврат;
	КонецЕсли;
	
	Если КоличествоГруппировок > 7 Тогда
		Предупреждение("Нельзя сделать больше 7 группировок!",60);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ТекстГруппировок;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Предупреждение("Запрос по кредиту не выполнился!");
		Возврат;
	КонецЕсли;  

	// обнуляем счетчик числа строк, выведенных в таблицу отчета
	глЧислоСтрок = 0;

	Таб.ВывестиСекцию("Кнопки");
	Таб.ВывестиСекцию("Заголовок");
	глОживить(Таб.ВысотаСекции("Заголовок"));
	
	ВывестиШапку();
	                         
	// ВЫВОД ГРУППИРОВОК ЗАПРОСА
	ВывестиСроки();
	
	ФиксКвоСтрок = Таб.ВысотаСекции("Кнопки")+Таб.ВысотаСекции("Заголовок")+Таб.ВысотаСекции("Шапка");
	ФиксКвоКолон = Таб.ШиринаСекции("Наименование");
	Таб.Опции(0, 0, ФиксКвоСтрок, ФиксКвоКолон, "ПарамПечатиУпрАнализПоСрокам", "РазмОкнаУпрАнализПоСрокам");
	Таб.ОбластьПечати(Таб.ВысотаСекции("Кнопки")+1);
	
	// Вывод заполненной формы
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);

    Если ВидОтчетаСтр="ОбщиеВзаиморасчеты" Тогда
    	ТекстЗагол = "Анализ задолженности по срокам клиентов/клиентам"
	ИначеЕсли ВидОтчетаСтр="Покупатели" Тогда
		ТекстЗагол = "Анализ задолженности по срокам покупателей"
	Иначе
		ТекстЗагол = "Анализ задолженности по срокам поставщиков"
    КонецЕсли;

	Таб.Показать("ПЕЧАТЬ: "+ТекстЗагол+": ("+ПериодСтр(Дата1, Дата2)+?(ВыбФирма.Выбран()=0, "", ", "+ВыбФирма)+")","");
	
	Если (Обновить = 2) Или (ЗакрытьДиалог=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры // Сформировать()


// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение="")	
	// закладки
    Если Номер=1 Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	Иначе     
		Форма.ИспользоватьСлой("Шапка,МФ,Подвал");
	КонецЕсли;      
	ПерерисовкаНазванийЗакладок();
	ДоступностьЭлементов(1);
КонецПроцедуры	// ПриВыбореЗакладки
                                       
// ===============================
Процедура ПриНачалеВыбораЗначения(Элемент,Флаг)	// Предопределенная процедура
	Если Элемент="ВыбДоговор" Тогда	// выбираем договор
		Фрм = СоздатьОбъект("СписокЗначений");
		Фрм.ДобавитьЗначение("ДоговораКонтрагентов","ГрафаОтбора");
		Фрм.ДобавитьЗначение(ВыбКонтрагент,"Контрагент");
		ОткрытьПодбор("Журнал.ПолныйЖурнал","ДляВыбораДоговоровИСчетов",Фрм,0,ВыбДоговор);
		Флаг=0;
	КонецЕсли;	           
КонецПроцедуры	// ПриНачалеВыбораЗначения

// ===============================
Процедура ПриОткрытии()	
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		Дата1 		= глРасшифровка.Получить("Дата1");
		Дата2		= глРасшифровка.Получить("Дата2");

		ВыбФирма		= глРасшифровка.Получить("ВыбФирма");
		ВыбКонтрагент	= глРасшифровка.Получить("ВыбКонтрагент");
		ВыбДоговор		= глРасшифровка.Получить("ВыбДоговор");
		ВыбСтавкаНДС	= глРасшифровка.Получить("ВыбСтавкаНДС");
		ВыбВалюта		= глРасшифровка.Получить("ВыбВалюта");
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;
		
		фБазоваяВалюта = глРасшифровка.Получить("фБазоваяВалюта");
		ВидОтчета.ТекущаяСтрока(глРасшифровка.Получить("ВидОтчета"));
		ВидДолга. ТекущаяСтрока(глРасшифровка.Получить("ВидДолга"));

		фНачОст	= глРасшифровка.Получить("фНачОст");
		фКонОст	= глРасшифровка.Получить("фКонОст");
		фПриход	= глРасшифровка.Получить("фПриход");
		фРасход	= глРасшифровка.Получить("фРасход");
		
		фБезГрупп = глРасшифровка.Получить("фБезГрупп");
		глРасшифровка.Получить("Группировки").	Выгрузить(Группировки);
		глРасшифровка.Получить("Сроки").		Выгрузить(Сроки);
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;            
	
	// будем отслеживать только реальные изменения этих реквизитов
	Форма.ВидОтчета.ВыполнятьФормулуТолькоПриИзменении(1); 

	ТаблицаМФ.ВидимостьКолонки("Тип",				0);
	ТаблицаМФ.ВидимостьКолонки("Вид",				0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",	0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",				0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",		0);
	
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	                                                                                
	УстКолонкиОтчета();
	ПриВыбореЗакладки(1);
	
КонецПроцедуры		// ПриОткрытии()       

// ===============================
Процедура ВводНового()
	// эта предопределенная процедура выполняется при восстановлении настройки
	ТекСтрокаВТаблицеМФ="";
	ПриВыбореЗакладки(1);
КонецПроцедуры // ВводНового()   

// ===============================
Процедура ОбработкаПодбора(Значение)  

	ЭлементДиалога = Форма.АктивныйЭлемент();
	
	Если ЭлементДиалога = "ВыбДоговор" Тогда	// выбираем договор
		Возврат;
	КонецЕсли;

	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора


// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

Дата2=ПолучитьДатуТА();
Дата1=глВосстановитьЗначение(,"ОсновнаяДатаНачалаОтчета");
Если ПустоеЗначение(Дата1)=0 Тогда
	Дата1=НачМесяца(Дата1);
КонецЕсли;         
                                
// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");

спДоговораЗаказы = СоздатьОбъект("СписокЗначений");
спДоговораЗаказы.ДобавитьЗначение("Договор");
спДоговораЗаказы.ДобавитьЗначение("Заказ");
//                  			тип			вид						переменная  	название
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Контрагенты",			"Контрагент",	"По контрагентам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",	спДоговораЗаказы,		"Договор",		"По договорам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ШкалаСтавок",			"СтавкаНДС",	"По ставкам НДС");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Валюты",				"Валюта",		"По валютам долга");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",		"Контрагент",	"По категориям контрагентов");

ТекСтрокаВТаблицеМФ="";

Группировки.ДобавитьЗначение("Контрагент",		"Контрагент");
Группировки.ДобавитьЗначение("Договор", 		"Договор");           
Группировки.ДобавитьЗначение("Счет",	 		"Документ-счет");           
Группировки.ДобавитьЗначение("КредДокумент", 	"Документ долга");           
Группировки.ДобавитьЗначение("СтавкаНДС",		"Ставка НДС");
Группировки.ДобавитьЗначение("Валюта", 			"Валюта долга");
Группировки.ДобавитьЗначение("Документ", 		"Документ движения");
Группировки.ТекущаяСтрока(1);  

// пометки по умолчанию
Группировки. Пометка(1,1);
Группировки. Пометка(2,1);
Группировки. Пометка(3,1);

// список украинских названий группировок для построения шапки отчета
УкрГруппировки = СоздатьОбъект("СписокЗначений");
УкрГруппировки.ДобавитьЗначение("Контрагент",	"Контрагент");
УкрГруппировки.ДобавитьЗначение("Договор", 		"Договір");           
УкрГруппировки.ДобавитьЗначение("Счет",	 		"Документ-рахунок");           
УкрГруппировки.ДобавитьЗначение("КредДокумент", "Документ боргу");           
УкрГруппировки.ДобавитьЗначение("СтавкаНДС",	"Ставка ПДВ");
УкрГруппировки.ДобавитьЗначение("Валюта", 		"Валюта боргу");
УкрГруппировки.ДобавитьЗначение("Документ",	 	"Документ рухів");

// инициализация списков диалога
Сроки.УдалитьВсе();
Сроки.ДобавитьЗначение(30,"30 дней");
Сроки.ДобавитьЗначение(60,"60 дней");
Сроки.ДобавитьЗначение(90,"90 дней");

ВидОтчета.УдалитьВсе();
ВидОтчета.ДобавитьЗначение("ОбщиеВзаиморасчеты", "Общие взаиморасчеты"); 
ВидОтчета.ДобавитьЗначение("Поставщики", "По поставщикам");
ВидОтчета.ДобавитьЗначение("Покупатели", "По покупателям");
ВидОтчета.ТекущаяСтрока(1);

ВидДолга.УдалитьВсе();
ВидДолга.ДобавитьЗначение("ВсеДолги","Все долги"); 
ВидДолга.ДобавитьЗначение("ДолгНам", "Долги нам"); 
ВидДолга.ДобавитьЗначение("ДолгНаш", "Наши долги");
ВидОтчета.ТекущаяСтрока(1);

// расставляем флаги
фБезГрупп  	= 0;
фНачОст		= 1;
фПриход		= 1;
фРасход		= 1;
фКонОст		= 1;

//константа
МаксДнейДолга = 36500;  // ~100 лет. Если есть неоплаченные долги сроком более 100 лет, Тогда увеличте это значение пропорционально к-ву лет долга
