// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
                        
// переменные предназначены для механизма универсальных группировок отчета
Перем СписокГруппировок;
Перем КоличествоГруппировок;
Перем НомерГруппировкиНоменклатура;

// переменные предназначены для запроса по периодам
Перем Запрос,ЗапросСПериодами,ТаблицаПериодов,Периодичность;
Перем Язык, УкрГруппировки Экспорт;

Перем Заголовок, ПечЗаголовокСтолбца;

Перем ГруппировкиПоДвижениям;
Перем ХвостК;
Перем ДокНачала, ДокКонца;
Перем Д1, Д2;
Перем КэшЦен;
Перем СтруктураРеквизитовВосстановления;
Перем ВернутьСписокТМЦ;

// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
Процедура ВыбратьПоФильтру()
	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру

// ===============================
Функция ПерерисовкаНазванийЗакладок()      

	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");
	
КонецФункции // ПерерисовкаНазванийЗакладок	

// ===============================
Процедура УстановитьГруппировкиЗапроса(ТекстЗапроса, ТекстЗагол)
	                       
	СписокГруппировок = СоздатьОбъект("СписокЗначений");
	КвоГруппировок 				= Группировки.РазмерСписка();
	НомерГруппировкиНоменклатура= КвоГруппировок;

	Для Сч=1 По КвоГруппировок Цикл
		
		Если Группировки.Пометка(Сч)=1 Тогда
			ПредставлениеГрупп		=""; 
			УкрПредставлениеГрупп	="";
			ТекстГрупп = Группировки.ПолучитьЗначение(Сч,ПредставлениеГрупп);
			УкрГруппировки.ПолучитьЗначение(УкрГруппировки.НайтиЗначение(ТекстГрупп),УкрПредставлениеГрупп);
			
			ТекстБезУпорядочивания = "";
			ТекстБезГрупп = "";
			Если ( (ТекстГрупп = "Номенклатура") ИЛИ (ТекстГрупп = "КатегорияЦен") Или (ТекстГрупп = "Поставщик") Или (ТекстГрупп = "Покупатель") 
				 Или (ТекстГрупп = "ВидДеятельности") Или (ТекстГрупп = "Счет") Или (ТекстГрупп = "РегионПоставщика") 
				 Или (ТекстГрупп = "РегионПокупателя") Или (ТекстГрупп = "ЧерезКого") Или (ТекстГрупп = "ВидУпаковки") Или (ТекстГрупп = "ФормаУпаковки")) И (фБезГрупп = 2) Тогда
					ТекстБезГрупп = " без групп";
			КонецЕсли;
			Если (ТекстГрупп = "Счет") И (глОптимизацияОтчетов = 1) Тогда
			    ТекстБезУпорядочивания = " без упорядочивания";
			КонецЕсли;
			
			ТекстЗапроса= ТекстЗапроса 	+ "Группировка "+ТекстГрупп+ТекстБезУпорядочивания+ТекстБезГрупп+";";
			ТекстЗагол	= ТекстЗагол + " / "+?(Язык="у",УкрПредставлениеГрупп,ПредставлениеГрупп);
			СписокГруппировок.ДобавитьЗначение(ТекстГрупп,ПредставлениеГрупп);
			Если ТекстГрупп = "Номенклатура" Тогда
			    НомерГруппировкиНоменклатура = СписокГруппировок.РазмерСписка();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 

	Если ПустаяСтрока(ТекстЗагол)=0 Тогда // удаляем ведущий разделитель " / "
		ТекстЗагол = Сред(ТекстЗагол,4)
	КонецЕсли;

КонецПроцедуры // УстановитьГруппировкиЗапроса()
    
// ===============================
Функция ПериодСтрока()
	Зн = СписокПериодов.ПолучитьЗначение(СписокПериодов.ТекущаяСтрока());
    Если Зн = "Общий" Тогда
    	Возврат 0;
	Иначе
		Возврат Зн;
    КонецЕсли;
КонецФункции //

// ===============================
Процедура ПечатьПериода(Ном,НазваниеСекции,Запрос)

	Номенклатура = Запрос.Номенклатура;

	Если фСуммаУп = 1 Тогда // --- УМК Сандомирский В.Ю. (10.02.15)
		ПечСуммаУп = глФРМ(Запрос.СумСуммаУпаковки,Гривня,1);
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|СуммаУпаковок"+ХвостК);
	КонецЕсли;
	Если фССУпаковки = 1 Тогда // --- УМК Сандомирский В.Ю. (10.02.15)
		ПечССУп = глФРМ(Запрос.СумССУпаковки,Гривня,1);
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|ССУпаковок"+ХвостК);
	КонецЕсли;
	
	Если фЗакупка = 1 Тогда    
		ПечПрихСумма = глФРМ(Запрос.ПриходСумСумма,Гривня,1);
		
	    ПечПрихКво = глФРМКоличествоВОтчете(Запрос.ПриходКвоСумма,Номенклатура, 1 - фЕдУм);
		Если фДопКво = 1 Тогда
			ПечПрихКвоК = Формат(Запрос.ПриходКвоСуммаК,"Ч0");
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Закупка"+ХвостК);
	КонецЕсли;
		
	Если фПродажа = 1 Тогда
		ПечРасхСумма = глФРМ(Запрос.РасходСумСумма,Гривня,1);

		ПечРасхКво = глФРМКоличествоВОтчете(Запрос.РасходКвоСумма,Номенклатура, 1 - фЕдУм);
		Если фДопКво = 1 Тогда
			ПечРасхКвоК = Формат(Запрос.РасходКвоСуммаК,"Ч0");
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Продажа"+ХвостК);
		
		Если фВозвратОтдельно = 1 Тогда
			ПечВозврСумма = глФРМ(Запрос.ВозврСумСумма,Гривня,1);
	
			ПечВозврКво = глФРМКоличествоВОтчете(Запрос.ВозврКвоСумма,Номенклатура, 1 - фЕдУм);
			ПечОтн = Формат(?(Запрос.РасходКвоСумма = 0, 0, (-Запрос.ВозврКвоСумма / Запрос.РасходКвоСумма) * 100), "Ч12.2");
			Если фДопКво = 1 Тогда
				ПечВозврКвоК = Формат(Запрос.ВозврКвоСуммаК,"Ч0");				
			КонецЕсли;
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Возврат"+ХвостК);			
		КонецЕсли;
	КонецЕсли;
	Если фСуммаВЦенах = 1 Тогда
		ПечВЦСумма = глФРМ(Запрос.ВЦСумма,Гривня,1);
		ПечВЦЦена = глФРМ(Запрос.ВЦСумма / ?(Запрос.РасходКвоСумма <> 0 , Запрос.РасходКвоСумма, 1),Гривня,1);
		ПечСкидкаСумма = глФРМ(Запрос.СкидкаСумма,Гривня,1);
		ПечНаценкаСумма = глФРМ(Запрос.НаценкаСумма,Гривня,1);
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|ПродажаСЦ"+ХвостК);
	КонецЕсли;

	Если фДоход = 1 Тогда

		ПечДоход = глФРМ(Запрос.ДоходСумма,Гривня,1);
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Доход");
	КонецЕсли;

КонецПроцедуры //ПечатьПериода()

// ===============================
Процедура ПечатьСтроки(Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка = "",Значение = 0)
Перем Секция;
	
	Если ТипЗначенияСтр(Значение) = "Справочник" Тогда
		ЭтоГруппа = Значение.ЭтоГруппа();
		Если (фБезГрупп = 3) И (ЭтоГруппа = 0) Тогда
		    Возврат;
		ИначеЕсли ((фБезГрупп = 3) И (ЭтоГруппа = 0)) ИЛИ ((фБезГрупп = 4) И (Значение.ЭтоГруппа() = 0) И (Значение.Уровень() <> 2)) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Наим = ПечТекстСтроки;
	Значение = ТекРасшифровка;
	Секция = Таб.ПолучитьСекцию(НазваниеСекции+"|Наименование");
	Область = Секция.Область("R1C1:R1C8");
	Область.Подчеркнутый(ЭтоГруппа);
	Если НазваниеГруппировки = "Номенклатура" Тогда
		Если ЭтоГруппа = 0 Тогда
			Если Запрос.Номенклатура.ЕстьКодС.Получить(?(ПустоеЗначение(ДокКонца) = 1, Дата2, ДокКонца.ДатаДок)) = 1 Тогда
				Область.ЦветФона(255, 255, 0);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Таб.ВывестиСекцию(Секция);	
	
    ПечатьПериода(Ном, НазваниеСекции, Запрос);

	Если (Периодичность <> 0) Тогда
		// выведем теперь все периоды, с разворотом вправо
		ТаблицаПериодов.ВыбратьСтроки();
		Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
			глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,Ном,ТаблицаПериодов.РеалНачалоПериода);
			ПечатьПериода(Ном, НазваниеСекции, ЗапросСПериодами);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры //ПечатьСтроки()

// ===============================
Процедура ВывестиГруппировки(Знач Ном=1)

	Если Ном > КоличествоГруппировок Тогда                           
		Возврат;
	КонецЕсли;

	НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(Ном);
	Пока Запрос.Группировка(Ном) = 1 Цикл

		НазваниеСекции="Группировка"+Ном;
		Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);
		
		Если Найти("Номенклатура,Счет,Поставщик,Покупатель,РегионПоставщика,РегионПокупателя,ВидДеятельности,ЧерезКого,КатегорияЦен,ВидУпаковки,ФормаУпаковки",НазваниеГруппировки) > 0 Тогда
			ПечТекстСтроки = глСмещениеГруппы(Значение,Мин(3, фБезГрупп)-1) + Значение;
		ИначеЕсли НазваниеГруппировки = "Договор" Тогда
			ПечТекстСтроки = ""+глДокументВОтчете(Значение,"с номером","с датой",Язык);
			Попытка
				Адрес = глАдресСтрокой(Значение.Адрес);
				Если СокрЛП(Адрес) <> "" Тогда
				    ПечТекстСтроки = ПечТекстСтроки + " / " + Адрес;
				КонецЕсли;
			Исключение КонецПопытки;
		Иначе // Договор,Счет,КредДокумент,Документ
			Если ПустоеЗначение(Значение)=0 Тогда
				ПечТекстСтроки = ""+глДокументВОтчете(Значение,"с номером","с датой",Язык);
			Иначе
				ПечТекстСтроки = "";
			КонецЕсли;
		КонецЕсли;
		
		ПечТекстСтроки = ?(ПустоеЗначение(ПечТекстСтроки)=1,глПредставлениеПустогоЗначения(НазваниеГруппировки,Язык),ПечТекстСтроки);

		ЗначениеРасшифровки = 0;
		Если НазваниеГруппировки = "Документ" Тогда
		    // остатки расшифровать до движений нельзя
			ЗначениеРасшифровки = Значение;
		Иначе
			// расшифровываем до движений, отбираем только текущие значения
			Расшифровка.Установить("Выб"+НазваниеГруппировки, Значение);
			Расшифровка.Установить("Группировки", ГруппировкиПоДвижениям);
			ЗначениеРасшифровки = Расшифровка;
		КонецЕсли;

		ПечатьСтроки(Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,ЗначениеРасшифровки,Значение);
		глОживить(1);

		ВывестиГруппировки(Ном+1);

	КонецЦикла;
	// очищаем отборы по расшифровке до движений
	Если Не( НазваниеГруппировки = "Документ") Тогда
		Расшифровка.Установить("Выб"+НазваниеГруппировки);
		Расшифровка.Установить("Группировки");
	КонецЕсли;

КонецПроцедуры // ВывестиГруппировки()

// ===============================
Процедура ВывестиШапкуПериода(НазваниеСекции,Период="")
	
	Если НазваниеСекции="ШапкаПериод" Тогда
		
		Если фСуммаУп = 1 Тогда    //--- УМК Сандомирский В.Ю. (10.02.15)
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|СуммаУпаковок");
		КонецЕсли;
		Если фССУпаковки = 1 Тогда // --- УМК Сандомирский В.Ю. (10.02.15)
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|ССУпаковок");
		КонецЕсли;
		
		Если фЗакупка = 1 Тогда    
			Если фТолькоКво = 0 Тогда
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|Закупка");
			Иначе
			    Таб.ПрисоединитьСекцию(НазваниеСекции+"|ПериодК");
			КонецЕсли;
			
		КонецЕсли;
			
		Если фПродажа = 1 Тогда    
			Если фЗакупка = 0 Тогда
				Если фТолькоКво = 0 Тогда
				    Таб.ПрисоединитьСекцию(НазваниеСекции+"|Закупка");
				Иначе
					Таб.ПрисоединитьСекцию(НазваниеСекции+"|ПериодК");
				КонецЕсли;				
			Иначе
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|Продажа"+ХвостК);
				Если фВозвратОтдельно = 1 Тогда
					Таб.ПрисоединитьСекцию(НазваниеСекции+"|Возврат"+ХвостК);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		Если фСуммаВЦенах = 1 Тогда  
			сПериод = "";
			Если фПродажа + фЗакупка + фСуммаУп + фССУпаковки = 0 Тогда
				сПериод = Период;
			КонецЕсли;
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|ПродажаСЦ"+ХвостК);
		КонецЕсли;
		
		Если фДоход = 1 Тогда    
			Если фЗакупка + фПродажа + фСуммаВЦенах = 0 Тогда
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|Доход_Шапка");
			Иначе
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|Доход");
			КонецЕсли;
		КонецЕсли;
	
	Иначе		
		Если фСуммаУп = 1 Тогда    //--- УМК Сандомирский В.Ю. (10.02.15)
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|СуммаУпаковок"+ХвостК);
		КонецЕсли;
		Если фССУпаковки = 1 Тогда // --- УМК Сандомирский В.Ю. (10.02.15)
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|ССУпаковок");
		КонецЕсли;
		
		Если фЗакупка = 1 Тогда    
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Закупка"+ХвостК);
		КонецЕсли;
			
		Если фПродажа = 1 Тогда    
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Продажа"+ХвостК);
			Если фВозвратОтдельно = 1 Тогда
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|Возврат"+ХвостК);
			КонецЕсли;
		КонецЕсли;

		Если фСуммаВЦенах = 1 Тогда    
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|ПродажаСЦ"+ХвостК);
		КонецЕсли;
		
		Если фДоход = 1 Тогда    
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Доход");
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры 

// ===============================
Процедура ВывестиШапку()

	Если Периодичность<>0 Тогда 
		Таб.ВывестиСекцию("ШапкаПериод|Наименование");
		ВывестиШапкуПериода("ШапкаПериод",?(Язык="у", "Всього за період", "Всего за период"));
	    ТаблицаПериодов.ВыбратьСтроки(); // выводим шапку для каждого периода
		Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл
			ВывестиШапкуПериода("ШапкаПериод",ПериодСтр(ТаблицаПериодов.НачалоПериода,ТаблицаПериодов.КонецПериода));
		КонецЦикла;
		Таб.ПрисоединитьСекцию("ШапкаПериод|Рамка");
		глОживить(1);
	КонецЕсли;

	Таб.ВывестиСекцию("Шапка|Наименование");
	ВывестиШапкуПериода("Шапка");
	Если Периодичность<>0 Тогда 
	    ТаблицаПериодов.ВыбратьСтроки(); // выводим шапку для каждого периода
		Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл
			ВывестиШапкуПериода("Шапка");
		КонецЦикла;
	КонецЕсли;
	глОживить(1);
	Таб.Область(5,1,5,Таб.ШиринаТаблицы()).ГоризонтальноеПоложение(1+4);
КонецПроцедуры 


// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
Процедура УстКолонкиОтчета()

	ЭлементДиалога = Форма.АктивныйЭлемент();
	
	Если фЗакупка + фПродажа + фДоход = 0 Тогда // хотя бы одна должна быть выбрана
		Если ЭлементДиалога = "фЗакупка" Тогда
			фЗакупка = 1;
		ИначеЕсли ЭлементДиалога = "фПродажа" Тогда
			фПродажа = 1;
		ИначеЕсли ЭлементДиалога = "фДоход" Тогда
			фДоход = 1;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// ===============================
Процедура ДоступностьЭлементов(ВсеЭлементы=0)           
	
	ЭлементДиалога = Форма.АктивныйЭлемент();

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбФирма") Или (ЭлементДиалога="кХВыбФирма") Тогда
		Форма.кХВыбФирма.Доступность(ВыбФирма.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбНоменклатура") Или (ЭлементДиалога="кХВыбНоменклатура") Тогда
		Форма.кХВыбНоменклатура.Доступность(ВыбНоменклатура.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбЭкспедитор") Или (ЭлементДиалога="кХВыбЭкспедитор") Тогда
		Форма.кХВыбЭкспедитор.Доступность(ВыбЭкспедитор.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбДоговор") Или (ЭлементДиалога="кХВыбДоговор") Тогда
		Форма.кХВыбДоговор.Доступность(ВыбДоговор.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбСчет") Или (ЭлементДиалога="кХВыбСчет") Тогда
		Форма.кХВыбСчет.Доступность(ВыбСчет.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбПоставщик") Или (ЭлементДиалога="кХВыбПоставщик") Тогда
		Форма.кХВыбПоставщик.Доступность(ВыбПоставщик.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбПокупатель") Или (ЭлементДиалога="кХВыбПокупатель") Тогда
		Форма.кХВыбПокупатель.Доступность(ВыбПокупатель.Выбран()); 
	КонецЕсли;
	
	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбПартия") Или (ЭлементДиалога="кХВыбПартия") Тогда
		Форма.кХВыбПартия.Доступность(ВыбПартия.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбВидУпаковки") Или (ЭлементДиалога="кХВыбВидУпаковки") Тогда
		Форма.кХВыбВидУпаковки.Доступность(ВыбВидУпаковки.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбФормаУпаковки") Или (ЭлементДиалога="кХВыбФормаУпаковки") Тогда
		Форма.кХВыбФормаУпаковки.Доступность(ВыбФормаУпаковки.Выбран()); 
	КонецЕсли;
	
	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбКатегорияЦен") Или (ЭлементДиалога="кХВыбКатегорияЦен") Тогда
		Форма.кХВыбКатегорияЦен.Доступность(ВыбКатегорияЦен.Выбран()); 
	КонецЕсли;
КонецПроцедуры  	// ДоступностьЭлементов

Функция ПолучитьЦену(Док, Номенклатура, ТипУ)
	ДДок= Док.ДатаДок;
	Стр = 0;
	Ключ = Номенклатура.Код + " / " + Строка(ДДок);
	Если КэшЦен.НайтиЗначение(Ключ, Стр, "Ключ") = 0 Тогда
		Цена = глВернутьЦену(Номенклатура, ВыбТипЦен, Док.ДатаДок, Гривня);
		КэшЦен.НоваяСтрока();
		КэшЦен.Цена = Цена;
		КэшЦен.Ключ = Ключ;
	Иначе
		Цена = КэшЦен.ПолучитьЗначение(Стр, "Цена");
	КонецЕсли;	

	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("ВУП", "Справочник.ВидыУпаковки");
	ТЗ.НоваяСтрока();
	ТЗ.ВУП = ТипУ;
	
	Цена = Цена + глПолучитьЦенуВУП(ТЗ, ВыбТипЦен, ДДок, Гривня, ДДок, Номенклатура);
	Возврат Цена;
КонецФункции

Функция СуммаВЦенах(Док, Номенклатура, Кво, ТипУ)
	Если ТипЗначенияСтр(Док) = "Документ" Тогда
		Возврат Окр(Кво * ПолучитьЦену(Док, Номенклатура, ТипУ), 2);
	Иначе
		Возврат 0;
	КонецЕсли;	
КонецФункции

////====================================================================== //--- Сандомирский В.Ю. (10.02.15) пытаемся поймать сумму упаковки
//Функция СуммаУп(Док)
//	Если ТипЗначенияСтр(Док) = "Документ" Тогда
//		Возврат Док.СуммаУпаковки;
//	Иначе
//		Возврат 0;
//	КонецЕсли;	
//КонецФункции

Функция СкидкаВЦенах(Док, Номенклатура, Кво, Сумма, ТипУ)
	Если ТипЗначенияСтр(Док) = "Документ" Тогда
		Если Сумма > 0 Тогда
			Возврат Макс(0, Окр(ПолучитьЦену(Док, Номенклатура, ТипУ) * Кво, 2) - Сумма);
		Иначе
			Возврат Мин(0, Окр(ПолучитьЦену(Док, Номенклатура, ТипУ) * Кво, 2) - Сумма);
		КонецЕсли;		
	Иначе
		Возврат 0;
	КонецЕсли;	
КонецФункции

Функция НаценкаВЦенах(Док, Номенклатура, Кво, Сумма, ТипУ)
	Если ТипЗначенияСтр(Док) = "Документ" Тогда
		Если Сумма > 0 Тогда
			Возврат Макс(0, Сумма - Окр(ПолучитьЦену(Док, Номенклатура, ТипУ) * Кво, 2));
		Иначе
			Возврат Мин(0, Сумма - Окр(ПолучитьЦену(Док, Номенклатура, ТипУ) * Кво, 2));
		КонецЕсли;		
	Иначе
		Возврат 0;
	КонецЕсли;	
КонецФункции

// ===============================
Процедура Сформировать(ЗакрытьДиалог=0)
	
	Перем ТекстЗапроса;
	Если ВернутьСписокТМЦ = 1 Тогда
		фБезГрупп = 2;
		Для Инд = 1 По Группировки.РазмерСписка() Цикл
			Если Группировки.ПолучитьЗначение(Инд) <> "Номенклатура" Тогда
				Группировки.Пометка(Инд, 0);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	КэшЦен.УдалитьСтроки(); //--- Сандомирский В.Ю. Очищаем кеш цен. 23.04.14
	
	глПроверкаДаты(Дата1,Дата2);
	ХвостК = ?(ФТолькоКво = 1, "К", "");
		
	// Здесь формируется отчет, который использует регистры, критичные к
	// последовательности проведения документов
	// поэтому сравним установленные даты периода формируемого отчета с ГП
	глПроверкаАктуальностиОтчета(Дата1,Дата2,ВыбФирма,0);
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") Или (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;

	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	Таб.ИсходнаяТаблица(ПечФорма+?(фДопКво = 1,"К",""));
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "Обороты");
		
	Расшифровка.Установить("Дата1", 		Дата1);
    Расшифровка.Установить("Дата2", 		Дата2);
	Расшифровка.Установить("ДокНачала", ДокНачала);
    Расшифровка.Установить("ДокКонца", ДокКонца);

	Расшифровка.Установить("ВыбФирма",			ВыбФирма);
	Расшифровка.Установить("фТолькоКво",			фТолькоКво);
	Расшифровка.Установить("ВыбНоменклатура",	ВыбНоменклатура);
	Расшифровка.Установить("ВыбЭкспедитор",		ВыбЭкспедитор);
	Расшифровка.Установить("ВыбДоговор",		ВыбДоговор);
	Расшифровка.Установить("ВыбСчет",			ВыбСчет);
	Расшифровка.Установить("ВыбПокупатель",		ВыбПокупатель);
	Расшифровка.Установить("ВыбПоставщик",		ВыбПоставщик);
	Расшифровка.Установить("ВыбПартия",			ВыбПартия);
	Расшифровка.Установить("ВыбВидУпаковки",	ВыбВидУпаковки);
	Расшифровка.Установить("ВыбФормаУпаковки",	ВыбФормаУпаковки);
	Расшифровка.Установить("ргВозвр",			ргВозвр);
	Расшифровка.Установить("фВозвратОтдельно",	фВозвратОтдельно);
	Расшифровка.Установить("ргВП",				ргВП);
	Расшифровка.Установить("фТолькоФ1",			фТолькоФ1);
	Расшифровка.Установить("фЕдУм",				фЕдУм);
	
	// запомним МФ только если он задан
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
	КонецЕсли;

	Расшифровка.Установить("Группировки",	Группировки);	
	Расшифровка.Установить("фБезГрупп",		фБезГрупп);

	Расшифровка.Установить("СписокПериодов",СписокПериодов.ТекущаяСтрока());

	Расшифровка.Установить("фЗакупка",	фЗакупка);
	Расшифровка.Установить("фПродажа",	фПродажа);
	Расшифровка.Установить("фДоход",	фДоход);
	
	//--- УМК Сандомирский В.Ю (11.02.15)
	Расшифровка.Установить("фСуммаУп",фСуммаУп);
	Расшифровка.Установить("фССУпаковки",фССУпаковки);
	Расшифровка.Установить("фСуммаВЦенах",фСуммаВЦенах);
		
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ЗапросСПериодами = СоздатьОбъект("Запрос");
	               
	Если (Дата2 >= ПолучитьДатуТА()) и (ПустоеЗначение(ДокКонца) = 1) Тогда
		ТекстЗапроса = "
			|Период с Д1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Д1 по Д2;";
	КонецЕсли;
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, Дата1, Дата2);
	
	ТекстЗапроса = ТекстЗапроса + 
		"Фирма 				= Регистр.Обороты.Фирма;
		|Номенклатура 		= Регистр.Обороты.ТМЦ;
		|ЧерезКого			= Регистр.Обороты.ЧерезКого;
		|ТекДок				= Регистр.Обороты.ТекущийДокумент;
		|Договор 			= Регистр.Обороты.ТекущийДокумент.РасходнаяНакладная.Договор,Регистр.Обороты.ТекущийДокумент.ВозвратнаяНакладная.Договор,Регистр.Обороты.ТекущийДокумент.ПриходнаяНакладнаяЗапасы.Договор;
		|Ф1					= Регистр.Обороты.ТекущийДокумент.РасходнаяНакладная.Ф1;
		|ВНП				= Регистр.Обороты.ТекущийДокумент.ВозвратнаяНакладная.СпецВозврат,Регистр.Обороты.ТекущийДокумент.ПереоценкаРозницы.СпецВозврат;
		|Счет		 		= Регистр.Обороты.Счет;
		|Поставщик 			= Регистр.Обороты.Поставщик;
		|Покупатель 		= Регистр.Обороты.Покупатель;
		|РегионПоставщика 	= Регистр.Обороты.Поставщик. Регион;
		|РегионПокупателя 	= Регистр.Обороты.Покупатель.Регион;
		|ВидДеятельности	= Регистр.Обороты.ВидДеятельности;
		|Партия				= Регистр.Обороты.Партия;
		|ВидУпаковки		= Регистр.Обороты.ВидУпаковки;
		|ФормаУпаковки		= Регистр.Обороты.ФормаУпаковки;
		|КатегорияЦен		= Регистр.Обороты.ТекущийДокумент.РасходнаяНакладная.КатегорияЦен,Регистр.Обороты.ТекущийДокумент.ВозвратнаяНакладная.КатегорияЦен,Регистр.Обороты.ТекущийДокумент.ПриходнаяНакладнаяЗапасы.КатегорияЦен;
		|";
	
	Если фЗакупка = 1 Тогда    
		ТекстЗапроса = ТекстЗапроса +
			"ПриходСум 	= Регистр.Обороты.ПриходСум;
			|ПриходКво 	= Регистр.Обороты.ПриходКво;" + 
			?(фДопКво = 1,"
			|ПриходКвоК	= Регистр.Обороты.ПриходКвоД;", "");
	КонецЕсли;
			
	Если ргВозвр = 1 Тогда
		ТекстВС = " когда (РасходСум <= 0)";
		ТекстВК = " когда (РасходКво < 0)";
	ИначеЕсли ргВозвр = 2 Тогда
		ТекстВС = " когда (РасходСум >= 0)";
		ТекстВК = " когда (РасходКво > 0)";
	Иначе
		ТекстВС = "";
		ТекстВК = "";
	КонецЕсли;
	
	Если (фПродажа = 1) ИЛИ (фСуммаВЦенах = 1) Тогда        
		ТекстЗапроса = ТекстЗапроса +
			"РасходСум 	= Регистр.Обороты.РасходСум;
			|РасходКво 	= Регистр.Обороты.РасходКво;" + 
			?(фДопКво = 1,"
			|РасходКвоК	= Регистр.Обороты.РасходКвоД;", "");
	//ИначеЕсли (фПродажа = 1) И (фВозвратОтдельно = 1) Тогда        
	//	ТекстЗапроса = ТекстЗапроса +
	//		"РасходСум 	= Регистр.Обороты.РасходСум Когда (РасходКво > 0);
	//		|РасходКво 	= Регистр.Обороты.РасходКво Когда (РасходКво > 0);
	//		|ВозврСум 	= Регистр.Обороты.РасходСум Когда (РасходКво < 0);
	//		|ВозврКво 	= Регистр.Обороты.РасходКво Когда (РасходКво < 0);" + 
	//		?(фДопКво = 1,"
	//		|РасходКвоК	= Регистр.Обороты.РасходКвоД Когда (РасходКво > 0);
	//		|ВозврКвоК	= Регистр.Обороты.РасходКвоД Когда (РасходКво < 0);", "");
	КонецЕсли;
	
	Если фДоход = 1 Тогда          
		ТекстЗапроса = ТекстЗапроса +
			"Доход 		= Регистр.Обороты.Доход;";
	КонецЕсли;
		
	Если фСуммаУп = 1 Тогда     // --- УМК Сандомирский В.Ю. (10.02.15) СуммаУпаковки   
		ТекстЗапроса = ТекстЗапроса +
			"СуммаУпаковки 		= Регистр.Обороты.СуммаУпаковки;";
	КонецЕсли;
	Если фССУпаковки = 1 Тогда     // --- УМК Сандомирский В.Ю. (10.02.15) СуммаУпаковки   
		ТекстЗапроса = ТекстЗапроса +
			"ССУпаковки 		= Регистр.Обороты.ССУпаковки;";
	КонецЕсли;		
	
	Если фЗакупка = 1 Тогда    
		ТекстЗапроса = ТекстЗапроса +
			"Функция ПриходСумСумма = Сумма(ПриходСум);
			|Функция ПриходКвоСумма = Сумма(ПриходКво);" + 
			?(фДопКво = 1,"
			|Функция ПриходКвоСуммаК = Сумма(ПриходКвоК);", "");
	КонецЕсли;
			
	Если (фПродажа = 1) и (фВозвратОтдельно = 0) Тогда        
		ТекстЗапроса = ТекстЗапроса +
			"Функция РасходСумСумма = Сумма(РасходСум) " + ТекстВС + ";
			|Функция РасходКвоСумма = Сумма(РасходКво) " + ТекстВК + ";" + ?(фДопКво = 1,"
			|Функция РасходКвоСуммаК = Сумма(РасходКвоК)" + ТекстВК + ";", "");

	ИначеЕсли (фПродажа = 1) и (фВозвратОтдельно = 1) Тогда
		ТекстЗапроса = ТекстЗапроса +
			"Функция РасходСумСумма = Сумма(РасходСум) Когда (РасходСум >= 0);
			|Функция РасходКвоСумма = Сумма(РасходКво) Когда (РасходКво >= 0);
			|Функция ВозврСумСумма = Сумма(РасходСум) Когда (РасходСум < 0);
			|Функция ВозврКвоСумма = Сумма(РасходКво) Когда (РасходКво < 0);
			|" + ?(фДопКво = 1,"
			|Функция РасходКвоСуммаК = Сумма(РасходКвоК) Когда (РасходКво >= 0);
			|Функция ВозврКвоСуммаК = Сумма(РасходКвоК) Когда (РасходКво < 0);", "");		
	КонецЕсли;
	Если (фСуммаВЦенах = 1) Тогда
		ТекстЗапроса = ТекстЗапроса +
		"Функция ВЦСумма = Сумма(СуммаВЦенах(ТекДок, Номенклатура, РасходКво, ВидУпаковки)) " + ТекстВС + ";
		|Функция СкидкаСумма = Сумма(СкидкаВЦенах(ТекДок, Номенклатура, РасходКво, РасходСум, ВидУпаковки)) " + ТекстВС + ";
		|Функция НаценкаСумма = Сумма(НаценкаВЦенах(ТекДок, Номенклатура, РасходКво, РасходСум, ВидУпаковки)) " + ТекстВС + ";";
	КонецЕсли;		
	
	Если (фСуммаУп = 1) Тогда
		ТекстЗапроса = ТекстЗапроса +
		"Функция СумСуммаУпаковки = Сумма(СуммаУпаковки);";
	КонецЕсли;
	Если (фССУпаковки = 1) Тогда
		ТекстЗапроса = ТекстЗапроса +
		"Функция СумССУпаковки = Сумма(ССУпаковки);";
	КонецЕсли;	
	
	Если фДоход = 1 Тогда          
		ТекстЗапроса = ТекстЗапроса +
			"Функция ДоходСумма = Сумма(Доход)" + ТекстВС + ";";
	КонецЕсли;
	Если ргВП > 1 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (ВНП = " + ?(ргВП = 2, 1, 0) + ");";
	КонецЕсли;
	Если фТолькоФ1 = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (Ф1 = 1);";
	КонецЕсли;	
	
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда		
		ТекстЗапроса = ТекстЗапроса + "
		|Условие ((Покупатель В (глГруппыДоступаКонтрагенты)) ИЛИ (Поставщик В (глГруппыДоступаКонтрагенты)));
		|Условие (Номенклатура В (глГруппыДоступаПродукции));";
	КонецЕсли;
	
	Загол = "";

	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Номенклатура", ВыбНоменклатура, "ВыбНоменклатура", ТекстЗапроса, Загол, Язык,"КатегорииТоваров")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по позициям номенклатуры. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"КатегорияЦен", ВыбКатегорияЦен, "ВыбКатегорияЦен", ТекстЗапроса, Загол, Язык,"")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по категориям цен. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ЧерезКого", ВыбЭкспедитор, "ВыбЭкспедитор", ТекстЗапроса, Загол, Язык,"")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по позициям номенклатуры. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Договор", ВыбДоговор, "ВыбДоговор", ТекстЗапроса, Загол, Язык,"")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по позициям номенклатуры. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Счет", ВыбСчет, "ВыбСчет", ТекстЗапроса, Загол,Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по счетам учета. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Поставщик", ВыбПоставщик, "ВыбПоставщик", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по поставщикам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Покупатель", ВыбПокупатель, "ВыбПокупатель", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по покупателям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Партия", ВыбПартия, "ВыбПартия", ТекстЗапроса, Загол, Язык, "Партия")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по партиям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"РегионПоставщика", "", "", ТекстЗапроса, Загол, Язык, "")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по поставщикам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"РегионПокупателя", "", "", ТекстЗапроса, Загол, Язык, "")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по покупателям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ВидУпаковки", ВыбВидУпаковки, "ВыбВидУпаковки", ТекстЗапроса, Загол, Язык, "")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по видам упаковки. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ФормаУпаковки", ВыбВидУпаковки, "ВыбФормаУпаковки", ТекстЗапроса, Загол, Язык, "")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по формам упаковки. Отчет не сформирован.");
		Возврат;		
	КонецЕсли;
	Если фТолькоФ1 = 1 Тогда
		Загол = Загол + ?(СокрЛП(Загол) = "", "", "
		| только Ф1");
	КонецЕсли;
		
	ТаблицаПериодов = СоздатьОбъект("ТаблицаЗначений");
	Периодичность = ПериодСтрока();
	Если Периодичность <> 0 Тогда
	    ТекстЗапросаПоПериодам = ТекстЗапроса+ "Группировка " + Периодичность + ";";
	КонецЕсли;

	ПечЗаголовокСтолбца = "";
	ТекстГруппировок 	= "";
	
	УстановитьГруппировкиЗапроса(ТекстГруппировок, ПечЗаголовокСтолбца);
	КоличествоГруппировок = СписокГруппировок.РазмерСписка();
	
	Если КоличествоГруппировок = 0 Тогда
		Предупреждение("Следует выбрать хотя бы одну группировку!");
		Возврат;
	КонецЕсли;
	
	Если ((КоличествоГруппировок > 7) И (СписокПериодов.ТекущаяСтрока()=1)) 
		Или ((КоличествоГруппировок > 6) И (СписокПериодов.ТекущаяСтрока()>1)) Тогда
		Предупреждение("Нельзя сделать больше 7 группировок!",60);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ТекстГруппировок;
	Если Периодичность <> 0 Тогда
	    ТекстЗапросаПоПериодам = ТекстЗапросаПоПериодам + ТекстГруппировок;		
		Если ЗапросСПериодами.Выполнить(ТекстЗапросаПоПериодам)=0 Тогда
			Предупреждение("Запрос по периодам не выполнился!!!");
			Возврат;
		КонецЕсли;
		// Таблица с периодами
		глПолучитьТаблицуПериодов(ТаблицаПериодов,ЗапросСПериодами,Периодичность);
		ЗапросСПериодами.ВНачалоВыборки();
	КонецЕсли;
	
	Если фОборотыРозницы = 1 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".Обороты.", ".ОборотыР.");
	КонецЕсли;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Предупреждение("Запрос по кредиту не выполнился!");
		Возврат;
	КонецЕсли;  
	
	Если ВернутьСписокТМЦ = 1 Тогда
		Спис = СоздатьОбъект("СписокЗначений");
		Пока Запрос.Группировка(1) = 1 Цикл
			Если Запрос.Номенклатура.ЭтоГруппа() = 0 Тогда
				Спис.ДобавитьЗначение(Запрос.Номенклатура);
			КонецЕсли;
		КонецЦикла;
		Форма.ВыполнитьВыбор(Спис);
		Форма.Закрыть();
		Возврат;
	КонецЕсли;
	
	// обнуляем счетчик числа строк, выведенных в таблицу отчета
	глЧислоСтрок = 0;

	Таб.ВывестиСекцию("Кнопки|Наименование");
	Таб.ВывестиСекцию("Заголовок|Наименование");
	глОживить(Таб.ВысотаСекции("Заголовок"));
	
	Расшифровка.Установить("Обновить",0);
	Расшифровка.Установить("ТаблицаМФ", 0);
	
	ВывестиШапку();
	                         
	// ВЫВОД ГРУППИРОВОК ЗАПРОСА
	ВывестиГруппировки();
	
	// выводим итоги
	ПечатьСтроки(0,"","Итого",?(Язык="у", "Всього:", "Всего:"));

	ФиксКвоСтрок = Таб.ВысотаСекции("Кнопки")+Таб.ВысотаСекции("Заголовок")+?(Периодичность <> 0,Таб.ВысотаСекции("ШапкаПериод"),0)+Таб.ВысотаСекции("Шапка");
	ФиксКвоКолон = Таб.ШиринаСекции("Наименование");
	Таб.Опции(0, 0, ФиксКвоСтрок, ФиксКвоКолон, "ПарамПечатиУпрОбороты", "РазмОкнаУпрОбороты");
	Таб.ОбластьПечати(Таб.ВысотаСекции("Кнопки")+1);
	
	// Вывод заполненной формы
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);

	Таб.Показать("ПЕЧАТЬ: Обороты: ("+ПериодСтр(Дата1, Дата2)+?(ВыбФирма.Выбран()=0, "", ", "+ВыбФирма)+")","");
	
	Если (Обновить = 2) Или (ЗакрытьДиалог=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры // Сформировать()

// ===============================
Процедура ПредопределенныеНастройки()
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("Продажи", "Анализ продаж товаров");
	Меню.ДобавитьЗначение("Закупки", "Анализ закупок товаров");
	Меню.ДобавитьЗначение("Себест", "Себестоимость по поставщикам");
	Значение = "";
	Если Меню.ВыбратьЗначение(Значение, , , , 1) = 0 Тогда
		Возврат;
	КонецЕсли;

	СписокПериодов.ТекущаяСтрока(1);  

	фБезГрупп  	= 1;

	Группировки.УдалитьВсе();
	Если Значение = "Продажи" Тогда
		
		Группировки.ДобавитьЗначение("Покупатель", 		"Покупатель");
		Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
		Группировки.ДобавитьЗначение("ВидУпаковки",   	"Вид упаковки");
		Группировки.ДобавитьЗначение("ФормаУпаковки",   "Форма упаковки");
		Группировки.ДобавитьЗначение("КатегорияЦен",   	"Категория цен");
		Группировки.ДобавитьЗначение("Поставщик", 	    "Поставщик");           
		Группировки.ДобавитьЗначение("Счет", 	        "Счет учета");
		Группировки.ДобавитьЗначение("РегионПоставщика","Регион поставщика");
		Группировки.ДобавитьЗначение("РегионПокупателя","Регион покупателя");
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");
		Группировки.ДобавитьЗначение("ЧерезКого",   	"Через кого");
		Группировки.ДобавитьЗначение("Договор",   		"Договор");
		Группировки.ДобавитьЗначение("Документ",	    "Документ движения");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,1);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);
		Группировки.Пометка(6,0);
		Группировки.Пометка(7,0);
		Группировки.Пометка(8,0);

		фЗакупка = 0;
		фПродажа = 1;
		фДоход   = 1;

	ИначеЕсли Значение = "Закупки" Тогда

		Группировки.ДобавитьЗначение("Поставщик", 	    "Поставщик");           
		Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
		Группировки.ДобавитьЗначение("ВидУпаковки",   	"Вид упаковки");
		Группировки.ДобавитьЗначение("ФормаУпаковки",   "Форма упаковки");
		Группировки.ДобавитьЗначение("КатегорияЦен",   	"Категория цен");
		Группировки.ДобавитьЗначение("Счет", 	        "Счет учета");
		Группировки.ДобавитьЗначение("Покупатель", 		"Покупатель");
		Группировки.ДобавитьЗначение("РегионПоставщика","Регион поставщика");
		Группировки.ДобавитьЗначение("РегионПокупателя","Регион покупателя");
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");
		Группировки.ДобавитьЗначение("Документ",	    "Документ движения");
		Группировки.ДобавитьЗначение("ЧерезКого",   	"Через кого");
		Группировки.ДобавитьЗначение("Договор",   		"Договор");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,1);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);
		Группировки.Пометка(6,0);
		Группировки.Пометка(7,0);
		Группировки.Пометка(8,0);
		
		фЗакупка = 1;
		фПродажа = 0;
		фДоход   = 0;

	ИначеЕсли Значение = "Себест" Тогда

		Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
		Группировки.ДобавитьЗначение("ФормаУпаковки",   "Форма упаковки");
		Группировки.ДобавитьЗначение("КатегорияЦен",   	"Категория цен");
		Группировки.ДобавитьЗначение("Поставщик", 	    "Поставщик");           
		Группировки.ДобавитьЗначение("Покупатель", 		"Покупатель");
		Группировки.ДобавитьЗначение("Счет", 	        "Счет учета");
		Группировки.ДобавитьЗначение("РегионПоставщика","Регион поставщика");
		Группировки.ДобавитьЗначение("РегионПокупателя","Регион покупателя");
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");
		Группировки.ДобавитьЗначение("ЧерезКого",   	"Через кого");
		Группировки.ДобавитьЗначение("Договор",   		"Договор");
		Группировки.ДобавитьЗначение("Документ", 	    "Документ движения");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,1);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);
		Группировки.Пометка(6,0);
		Группировки.Пометка(7,0);
		Группировки.Пометка(8,0);

		фЗакупка = 1;
		фПродажа = 0;
		фДоход   = 0;

	КонецЕсли;

	Группировки.ТекущаяСтрока(1);  
	ДоступностьЭлементов(1);

КонецПроцедуры // КнопкаНастройкиГруппировок


// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение="")	
	// закладки
    Если Номер=1 Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	Иначе     
		Форма.ИспользоватьСлой("Шапка,МФ,Подвал");
	КонецЕсли;      
	ПерерисовкаНазванийЗакладок();
	ДоступностьЭлементов(1);
КонецПроцедуры	// ПриВыбореЗакладки

//======================================================================
Процедура ВосстановитьГруппировки();
	Для Инд = 1 По СтруктураРеквизитовВосстановления.РазмерСписка() Цикл
		Имя = "";
		Зн = СтруктураРеквизитовВосстановления.ПолучитьЗначение(Инд, Имя);
		Если Имя = "УкрГруппировки" Тогда
			глАктуализироватьСписок(Зн, УкрГруппировки);
		ИначеЕсли Имя = "Группировки" Тогда
			глАктуализироватьСписок(Зн, Группировки);
		ИначеЕсли Имя = "ТаблицаМФ" Тогда
			глАктуализироватьТаблицу(Зн, ТаблицаМФ, "ИмяПеременной");
			ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // 

// ===============================
Процедура ПриОткрытии()	
	Если НазваниеНабораПрав() = "Заказ" Тогда
		фЗакупка = 0;
		Форма.фЗакупка.Доступность(0);
	ИначеЕсли (НазваниеНабораПрав() = "ПрочиеЗаказ") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") Тогда
		фЗакупка = 0;
		фДоход = 0;
		Форма.фЗакупка.Доступность(0);
		Форма.фДоход.Доступность(0);		
	КонецЕсли;
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		глФлагРасшифровки = 0;
		
		// восстанавливаем настройки из списка
		Дата1 		= глРасшифровка.Получить("Дата1");
		Дата2		= глРасшифровка.Получить("Дата2");

		ВыбФирма		= глРасшифровка.Получить("ВыбФирма");
		ВыбНоменклатура = глРасшифровка.Получить("ВыбНоменклатура");
		ВыбВидУпаковки	= глРасшифровка.Получить("ВыбВидУпаковки");		
		ВыбФормаУпаковки= глРасшифровка.Получить("ВыбФормаУпаковки");
		ВыбСчет			= глРасшифровка.Получить("ВыбСчет");
		ВыбПоставщик	= глРасшифровка.Получить("ВыбПоставщик");
		ВыбПокупатель	= глРасшифровка.Получить("ВыбПокупатель");
		ВыбПартия		= глРасшифровка.Получить("ВыбПартия");
		ргВозвр			= глРасшифровка.Получить("ргВозвр");
		фТолькоКво		= глРасшифровка.Получить("фТолькоКво");
		ДокНачала		= глРасшифровка.Получить("ДокНачала");
		ДокКонца		= глРасшифровка.Получить("ДокКонца");
		ргВП			= глРасшифровка.Получить("ргВП");
		фТолькоФ1		= глРасшифровка.Получить("фТолькоФ1");
		ВыбКатегорияЦен = глРасшифровка.Получить("ВыбКатегорияЦен");
		фЕдУм			= глРасшифровка.Получить("фЕдУм");
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;
		
		СписокПериодов.ТекущаяСтрока(глРасшифровка.Получить("СписокПериодов"));

		фЗакупка	= глРасшифровка.Получить("фЗакупка");
		фПродажа	= глРасшифровка.Получить("фПродажа");
		фДоход		= глРасшифровка.Получить("фДоход");
		
		фБезГрупп = глРасшифровка.Получить("фБезГрупп");
		глРасшифровка.Получить("Группировки").Выгрузить(Группировки);
		
		//--- УМК Сандомирский В.Ю (11.02.15)
		фСуммаУп   		= глРасшифровка.Получить("фСуммаУп");
		фССУпаковки		= глРасшифровка.Получить("фССУпаковки");
		фСуммаВЦенах 	= глРасшифровка.Получить("фСуммаВЦенах");		
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		ВосстановитьГруппировки();
		Обновить = 0;
	КонецЕсли;            
	
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		ВернутьСписокТМЦ = 1;
	КонецЕсли;
	
	ТаблицаМФ.ВидимостьКолонки("Тип",				0);
	ТаблицаМФ.ВидимостьКолонки("Вид",				0);
	ТаблицаМФ.ВидимостьКолонки("ВидДляПустого",		0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",	0);
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",				0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",		0);
	
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	                                                                                
	ПриВыбореЗакладки(1);	
	
КонецПроцедуры		// ПриОткрытии()       

// ===============================
Процедура ВводНового()
	// эта предопределенная процедура выполняется при восстановлении настройки
	ТекСтрокаВТаблицеМФ="";
	ПриВыбореЗакладки(1);
КонецПроцедуры // ВводНового()   

// ===============================
Процедура ОбработкаПодбора(Значение)  

	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора

Процедура ПриНачалеВыбораЗначения(Идент, Флаг)
КонецПроцедуры

// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

Дата2=ПолучитьДатуТА();
Дата1=глВосстановитьЗначение(,"ОсновнаяДатаНачалаОтчета");
Если ПустоеЗначение(Дата1)=0 Тогда
	Дата1=НачМесяца(Дата1);
КонецЕсли;         
                                
// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");
ТаблицаМФ.НоваяКолонка("ВидДляПустого",,,,"");

//                  			тип			вид					переменная  		название
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ТМЦ",				"Номенклатура",		"По позициям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыУпаковки",		"ВидУпаковки",		"По видам упаковки");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ФормыУпаковки",	"ФормаУпаковки",	"По формам упаковки");
глДобавитьВТаблицуМФ(ТаблицаМФ,"ПланСчетов","Основной",			"Счет",	        	"По счетам учета");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Контрагенты",		"Поставщик",		"По поставщикам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Контрагенты",		"Покупатель",		"По покупателям");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Регионы",			"РегионПоставщика",	"По регионам поставщиков");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Регионы",			"РегионПокупателя",	"По регионам покупателей");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","КатегорииЦен",		"КатегорияЦен",		"По категориям цен");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",	"Номенклатура",		"По категориям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",	"Поставщик",		"По категориям поставщиков");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",	"Покупатель",		"По категориям покупателей");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Экспедитор",		"ЧерезКого",		"По экспедиторам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ"  ,"Договор",			"Договор",			"По договорам", "");

ТекСтрокаВТаблицеМФ="";

Группировки.ДобавитьЗначение("Покупатель", 		"Покупатель");
Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
Группировки.ДобавитьЗначение("ВидУпаковки",   	"Вид упаковки");
Группировки.ДобавитьЗначение("ФормаУпаковки",   "Форма упаковки");
Группировки.ДобавитьЗначение("КатегорияЦен",   	"Категория цены");
Группировки.ДобавитьЗначение("ЧерезКого", 	    "Через кого");
Группировки.ДобавитьЗначение("Договор", 	    "Договор");
Группировки.ДобавитьЗначение("Поставщик", 	    "Поставщик");           
Группировки.ДобавитьЗначение("Счет", 	        "Счет учета");
Группировки.ДобавитьЗначение("РегионПоставщика","Регион поставщика");
Группировки.ДобавитьЗначение("РегионПокупателя","Регион покупателя");
Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");
Группировки.ДобавитьЗначение("Партия",			"Партия");
Группировки.ДобавитьЗначение("Документ", 	    "Документ движения");
Группировки.ТекущаяСтрока(1);

// по умолчанию предпределенный набор "Продажи"
Группировки.Пометка(1,1);
Группировки.Пометка(2,1);

// список украинских названий группировок для построения шапки отчета
УкрГруппировки = СоздатьОбъект("СписокЗначений");
УкрГруппировки.ДобавитьЗначение("Покупатель", 		"Покупець");
УкрГруппировки.ДобавитьЗначение("Номенклатура",     "Номенклатура");
УкрГруппировки.ДобавитьЗначение("ВидУпаковки",   	"Вид пакування");
УкрГруппировки.ДобавитьЗначение("ФормаУпаковки",   	"Форма пакування");
УкрГруппировки.ДобавитьЗначение("КатегорияЦен",     "Категорія ціни");
УкрГруппировки.ДобавитьЗначение("ЧерезКого", 	    "Через кого");
УкрГруппировки.ДобавитьЗначение("Договор", 	    	"Договiр");
УкрГруппировки.ДобавитьЗначение("Поставщик", 	    "Постачальник");           
УкрГруппировки.ДобавитьЗначение("Счет", 	        "Рахунок обліку");
УкрГруппировки.ДобавитьЗначение("РегионПоставщика",	"Регіон постачальника");
УкрГруппировки.ДобавитьЗначение("РегионПокупателя",	"Регіон покупця");
УкрГруппировки.ДобавитьЗначение("ВидДеятельности", 	"Вид діяльності");
УкрГруппировки.ДобавитьЗначение("Партия", 			"Партія");
УкрГруппировки.ДобавитьЗначение("Документ", 	    "Документ рухів");

// для расшифровки отчета по движениям
ГруппировкиПоДвижениям = СоздатьОбъект("СписокЗначений"); 
ГруппировкиПоДвижениям.ДобавитьЗначение("Документ",		"Документ движения");
ГруппировкиПоДвижениям.Пометка(1,1);

// расставляем флаги и значения
фБезГрупп  	= 1;
фЗакупка 	= 0;
фПродажа 	= 1;
фДоход   	= 0;

// инициализация списков диалога
СписокПериодов.УдалитьВсе();
СписокПериодов.ДобавитьЗначение("Общий","Общие итоги");
СписокПериодов.ДобавитьЗначение("День","День");
СписокПериодов.ДобавитьЗначение("Неделя","Неделя");
СписокПериодов.ДобавитьЗначение("Месяц","Месяц");  
СписокПериодов.ДобавитьЗначение("Квартал","Квартал");
СписокПериодов.ДобавитьЗначение("Год","Год");
СписокПериодов.ТекущаяСтрока(1);

ргВозвр = 3;
ргВП = 1;
КэшЦен = СоздатьОбъект("ТаблицаЗначений");
КэшЦен.НоваяКолонка("Цена", "Число", 12, 2);
КэшЦен.НоваяКолонка("Ключ", "Строка");

СтруктураРеквизитовВосстановления = СоздатьОбъект("СписокЗначений");
глДобавитьЗначениеСохранения(СтруктураРеквизитовВосстановления, Группировки, "Группировки");
глДобавитьЗначениеСохранения(СтруктураРеквизитовВосстановления, УкрГруппировки, "УкрГруппировки");
глДобавитьЗначениеСохранения(СтруктураРеквизитовВосстановления, ТаблицаМФ, "ТаблицаМФ");
ВернутьСписокТМЦ = 0;