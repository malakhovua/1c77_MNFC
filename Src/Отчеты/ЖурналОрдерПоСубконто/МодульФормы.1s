//-----------------------------------------------
Перем Т;
Перем Обновить;
Перем Расшифровка;
Перем Представление, ПоПроводке, Параметр, ВидПериода;
Перем Закрыть;
Перем ОтборСубк1, ОтборСубк2, ОтборСубк3;
Перем ПланСчетов;
Перем ВыбПланСчетов;
Перем ПредставлениеРУ;
Перем ДоступностьЗП; //для  ЗаполнитьПериод(Режим)
Перем СписокСубконто, ДобавитьСубконто, ОтборСубк;

Процедура ПроверитьСоответствиеСписка(Спис, Номер, ВыбВидСубконто)
	Если Спис.РазмерСписка() = 0 Тогда
		Возврат;
	КонецЕсли;
	Тип = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор()).Тип;
	Вид = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор()).Вид;
	Зн = Спис.ПолучитьЗначение(1);
	Если (ТипЗначенияСтр(Зн) <> Тип) Тогда		
		Спис.УдалитьВсе();
	ИначеЕсли (Вид <> "") Тогда
		Если Зн.Вид() <> Вид Тогда
			Спис.УдалитьВсе();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьДоступностьКнопокСписков()
	Для Инд = 1 По 3 Цикл
		Если Счет.КоличествоСубконто() >= Инд Тогда
			ДоступноСписок = 1;
		Иначе
			ДоступноСписок = 0;
		КонецЕсли;
		
		Форма.ПолучитьАтрибут("ВыбратьСубконто"+Инд).Доступность(ДоступноСписок);
		Форма.ПолучитьАтрибут("ДобавитьСубконто"+Инд).Доступность(ДоступноСписок);
		Форма.ПолучитьАтрибут("УдалитьСубконто"+Инд).Доступность(ДоступноСписок);
		Форма.ПолучитьАтрибут("УдалитьВсеСубконто"+Инд).Доступность(ДоступноСписок);
		
		Если ДоступноСписок = 0 Тогда
			Если Инд = 1 Тогда
				ВыбСубконто1.УдалитьВсе();
			ИначеЕсли Инд = 2 Тогда
				ВыбСубконто2.УдалитьВсе();
			Иначе
				ВыбСубконто3.УдалитьВсе();
			КонецЕсли;
		Иначе			
			Если Инд = 1 Тогда
				ПроверитьСоответствиеСписка(ВыбСубконто1, 1, ВыбВидСубконто1);
			ИначеЕсли Инд = 2 Тогда
				ПроверитьСоответствиеСписка(ВыбСубконто2, 2, ВыбВидСубконто2);
			Иначе
				ПроверитьСоответствиеСписка(ВыбСубконто3, 3, ВыбВидСубконто3);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура ЗаполнитьПериод(Режим)

	Если глФлагРасшифровки = 1 Тогда
		ВидПериода = глРасшифровка.Получить("ВидПериода");
	Иначе
		Если Период.ТекущаяСтрока() = 0 Тогда
			ВидПериода = 1;
		Иначе
			ВидПериода = Период.ПолучитьЗначение(Период.ТекущаяСтрока());
		КонецЕсли;
	КонецЕсли;

	Период.УдалитьВсе();
	Если Режим = 1 Тогда
		Период.ДобавитьЗначение(1, "Без детализации");
	КонецЕсли;
	Период.ДобавитьЗначение(2, "Проводка");
	Период.ДобавитьЗначение(3, "Операция");
	Период.ДобавитьЗначение(4, "Дата");
	Период.ДобавитьЗначение(5, "Неделя");
	Период.ДобавитьЗначение(6, "Декада");
	Период.ДобавитьЗначение(7, "Месяц");
	Период.ДобавитьЗначение(8, "Квартал");

	Позиция = Период.НайтиЗначение(ВидПериода);
	Позиция = ?(Позиция = 0, 1, Позиция);

	Период.ТекущаяСтрока(Позиция);
КонецПроцедуры

//-----------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

// ===============================
Процедура КорСчета(Т, Ит, Секция, Гр)
	Т.ВывестиСекцию(Секция+"|Наименование");
	Если ПоПроводке <> 0 Тогда
		ЧЧ = 0;	ММ = 0;	СС = 0;
		Оп = Ит.Операция;
		Оп.ПолучитьВремя(ЧЧ, ММ, СС);
		Т.ПрисоединитьСекцию(Секция+"|Документ");
	КонецЕсли;

	Если ОстНачД = 1 Тогда
		Т.ПрисоединитьСекцию(Секция+"|СНД");
	КонецЕсли;

	Если ОстНачК = 1 Тогда
		Т.ПрисоединитьСекцию(Секция+"|СНК");
	КонецЕсли;

	Если ПоПроводке <> 1 Тогда
		Расшифровка.Установить("ДтКт", 1);
	КонецЕсли;
  	Если КорОбД = 1 Тогда
	  	Ит.ВыбратьКорСчета(Гр, 1);
	    Пока Ит.ПолучитьКорСчет() = 1 Цикл
			Если ПоПроводке <> 1 Тогда
				Расшифровка.Установить("КорСчет", Ит.КорСчет);
			КонецЕсли;
	    	Т.ПрисоединитьСекцию(Секция+"|СчетД");
	    КонецЦикла;
		Если ПоПроводке <> 1 Тогда
			Расшифровка.Установить("КорСчет");
		КонецЕсли;
	КонецЕсли;

  	Если ОбД = 1 Тогда
		Т.ПрисоединитьСекцию(Секция+"|ДО");
	КонецЕсли;

	Если ПоПроводке <> 1 Тогда
		Расшифровка.Установить("ДтКт", 2);
	КонецЕсли;
  	Если КорОбК = 1 Тогда
	  	Ит.ВыбратьКорСчета(Гр, 2);
	    Пока Ит.ПолучитьКорСчет() = 1 Цикл
			Если ПоПроводке <> 1 Тогда
				Расшифровка.Установить("КорСчет", Ит.КорСчет);
			КонецЕсли;
	    	Т.ПрисоединитьСекцию(Секция+"|СчетК");
	    КонецЦикла;
		Если ПоПроводке <> 1 Тогда
			Расшифровка.Установить("КорСчет");
		КонецЕсли;
	КонецЕсли;

  	Если ОбК = 1 Тогда
		Т.ПрисоединитьСекцию(Секция+"|КО");
	КонецЕсли;

	Если ПоПроводке <> 1 Тогда
		Расшифровка.Установить("ДтКт", 3);
	КонецЕсли;
	Если ОстКонД = 1 Тогда
		Т.ПрисоединитьСекцию(Секция+"|СКД");
	КонецЕсли;

	Если ОстКонК = 1 Тогда
		Т.ПрисоединитьСекцию(Секция+"|СКК");
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура Сформировать(Ручн=0)
	Если Счет.Выбран() = 0 Тогда
		Предупреждение("Не указан счет!");
		Возврат;
	КонецЕсли;
	
	Если глПроверкаИнтервалаОтчета(Дата1,Дата2) = 0 Тогда
		Возврат;
	КонецЕсли;

	ЗаполнитьПериод(ДоступностьЗП);

	Если Ручн=1 Тогда
	    СохранитьЗначение("ОтчРабСчет",Счет);
	КонецЕсли;

	Если Обновить = 2 Тогда
	    СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;

	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить=0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
	 
	
	Если ПоВсемРУ = 1 Тогда
		тФирма = "По всем фирмам";
	ИначеЕсли РазделительУчета.Выбран() = 1 Тогда
		тФирма = РазделительУчета.ПолнНаименование;
	Иначе
		глКомментарий("Не задана фирма. Отчет не построен.",0,,"!");
		Возврат;
	КонецЕсли;

	глУстПропись(Гривня);
	Если Константа.ФормыНаУкраинском = Да Тогда
		Т.ИсходнаяТаблица("Таблица_Укр");
	Иначе
		Т.ИсходнаяТаблица("Таблица");
	КонецЕсли;
              
    Если ВыбПланСчетов = 1 Тогда
        ПланСчетов = ВыбранныйПланСчетов();
    КонецЕсли;

	ОтборСубк1 = ?(ВыбВидСубконто1.Выбран() = 0, 3, ОтборСубконто1.ПолучитьЗначение(ОтборСубконто1.ТекущаяСтрока()));
	ОтборСубк2 = ?(ВыбВидСубконто2.Выбран() = 0, 3, ОтборСубконто2.ПолучитьЗначение(ОтборСубконто2.ТекущаяСтрока()));
	ОтборСубк3 = ?(ВыбВидСубконто3.Выбран() = 0, 3, ОтборСубконто3.ПолучитьЗначение(ОтборСубконто3.ТекущаяСтрока()));
    
	Если (ВидПериода = 2) или (ВидПериода = 3) Тогда
		ПоПроводке = 1;
	Иначе
		ПоПроводке = 0;
	КонецЕсли;

 	ФлВал = ПоВалюте;

   	Расшифровка = СоздатьОбъект("СписокЗначений");
    Ит = СоздатьОбъект("БухгалтерскиеИтоги");
    Ит.ИспользоватьПланСчетов(ПланСчетов);
    Ит.ИспользоватьРазделительУчета(РазделительУчета);
	Если ОтборСубк1 < 2 Тогда
		Если ПустоеЗначение(Субконто1) = 1 Тогда
	    	Ит.ИспользоватьСубконто(ВыбВидСубконто1, ВыбСубконто1, ОтборСубк1+1, ПоГруппам1);
		Иначе
			Ит.ИспользоватьСубконто(ВыбВидСубконто1, Субконто1, ОтборСубк1+1, ПоГруппам1);
		КонецЕсли;
	КонецЕсли;
	Если ОтборСубк2 < 2 Тогда
		Если ПустоеЗначение(Субконто2) = 1 Тогда
	    	Ит.ИспользоватьСубконто(ВыбВидСубконто2, ВыбСубконто2, ОтборСубк2+1, ПоГруппам2);
		Иначе
			Ит.ИспользоватьСубконто(ВыбВидСубконто2, Субконто2, ОтборСубк2+1, ПоГруппам2);
		КонецЕсли;	    
	КонецЕсли;
	Если ОтборСубк3 < 2 Тогда
		Если ПустоеЗначение(Субконто3) = 1 Тогда
	    	Ит.ИспользоватьСубконто(ВыбВидСубконто3, ВыбСубконто3, ОтборСубк3+1, ПоГруппам3);
		Иначе
			Ит.ИспользоватьСубконто(ВыбВидСубконто3, Субконто3, ОтборСубк3+1, ПоГруппам3);
		КонецЕсли;		
	    
	КонецЕсли;

	Ит.ВключатьСубсчета(0,ДанныеПоСубсчетам);

   	Если ВидПериода = 1 Тогда
   		Если ФлВал = 1 Тогда
   			Ит.ВыполнитьЗапрос(Дата1, Дата2, Счет, , Валюта, 3);
   		Иначе
   			Ит.ВыполнитьЗапрос(Дата1, Дата2, Счет, , ,  3);
   		КонецЕсли;
   	Иначе
   		Если ФлВал = 1 Тогда
   			Ит.ВыполнитьЗапрос(Дата1, Дата2, Счет, , Валюта, 3, ВидПериода);
   		Иначе
   			Ит.ВыполнитьЗапрос(Дата1, Дата2, Счет, , , 3, ВидПериода);
   		КонецЕсли;
   	КонецЕсли;

   	Расшифровка.Установить("Отчет", "ЖурналОрдерПоСубконто");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
    Расшифровка.Установить("ПланСчетов", ПланСчетов);
   	Расшифровка.Установить("Дата1", Дата1);
   	Расшифровка.Установить("Дата2", Дата2);
   	Расшифровка.Установить("Счет", Счет);
   	Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);
   	Расшифровка.Установить("ВидПериода", ВидПериода);

   	Расшифровка.Установить("ОстКонД", ОстКонД);
   	Расшифровка.Установить("ОстКонК", ОстКонК);
   	Расшифровка.Установить("ОстНачД", ОстНачД);
   	Расшифровка.Установить("ОстНачК", ОстНачК);
   	Расшифровка.Установить("ОбД", ОбД);
   	Расшифровка.Установить("ОбК", ОбК);
   	Расшифровка.Установить("КорОбД", КорОбД);
   	Расшифровка.Установить("КорОбК", КорОбК);
	Расшифровка.Установить("ВидПериода", ВидПериода);
	Расшифровка.Установить("ПериодыСНулевымиОборотами", ПериодыСНулевымиОборотами);

   	Если ОтборСубк1 <> 3 Тогда
	   	Расшифровка.Установить("ВидСубконто1", ВыбВидСубконто1);
	   	Расшифровка.Установить("ВыбСубконто1", ВыбСубконто1);
		Расшифровка.Установить("Субконто1", Субконто1);
		Расшифровка.Установить("ОтборСубконто1", ОтборСубк1);
		Расшифровка.Установить("ПоГруппам1", ПоГруппам1);
   	КонецЕсли;
   	Если ОтборСубк2 <> 3 Тогда
   		Расшифровка.Установить("ВидСубконто2", ВыбВидСубконто2);
   		Расшифровка.Установить("ВыбСубконто2", ВыбСубконто2);
   		Расшифровка.Установить("Субконто2", Субконто2);
   		Расшифровка.Установить("ОтборСубконто2", ОтборСубк2);
   		Расшифровка.Установить("ПоГруппам2", ПоГруппам2);
   	КонецЕсли;
   	Если ОтборСубк3 <> 3 Тогда
   		Расшифровка.Установить("ВидСубконто3", ВыбВидСубконто3);
   		Расшифровка.Установить("ВыбСубконто3", ВыбСубконто3);
   		Расшифровка.Установить("Субконто3", Субконто3);
   		Расшифровка.Установить("ОтборСубконто3", ОтборСубк3);
   		Расшифровка.Установить("ПоГруппам3", ПоГруппам3);
   	КонецЕсли;

    Т.ВывестиСекцию("Секция_12");
	Т.ВывестиСекцию("Секция_0");
    Т.ВывестиСекцию("Шапка");

	Расшифровка.Установить("Субконто1");
	Расшифровка.Установить("ОтборСубконто1");
	Расшифровка.Установить("ПоГруппам1");
 	Расшифровка.Установить("ВидСубконто2");
	Расшифровка.Установить("Субконто2");
	Расшифровка.Установить("ОтборСубконто2");
	Расшифровка.Установить("ПоГруппам2");
 	Расшифровка.Установить("ВидСубконто3");
	Расшифровка.Установить("Субконто3");
	Расшифровка.Установить("ОтборСубконто3");
	Расшифровка.Установить("ПоГруппам3");
	Расшифровка.Установить("Обновить");

   	ФлПервый = 1;

   	Если ОтборСубк1 >= 2 Тогда //журнал-оредер без аналитики
		Если ПоПроводке = 1 Тогда
			Расшифровка.Установить("Отчет");
			Расшифровка.Установить("Счет");
			Расшифровка.Установить("Валюта");
			Расшифровка.Установить("ПоВалюте");
		Иначе
			Расшифровка.Установить("Отчет", "ОтчетПоПроводкам");
			Расшифровка.Установить("РазделительУчета", РазделительУчета);
			Расшифровка.Установить("ПланСчетов", ПланСчетов);
			Расшифровка.Установить("ДтКт", 3);
		КонецЕсли;
		Параметр = Представление;
		КорСчета(Т, Ит,"Заголовок", -1); 		// заголовок
		Ит.ВыбратьПериоды(ПериодыСНулевымиОборотами);
		Пока Ит.ПолучитьПериод() = 1 Цикл
			Если ПоПроводке = 1 Тогда
				Опер = Ит.Операция;
				Расшифровка.Установить("Документ", Опер.Документ.ТекущийДокумент());
				Если ВидПериода = 2 Тогда
					Расшифровка.Установить("НомерПроводки", Опер.НомерПроводки());
					Расшифровка.Установить("НомерКорреспонденции", Опер.НомерКорреспонденции());
				КонецЕсли;
			Иначе
				Расшифровка.Установить("Дата1", Ит.НачДата);
				Расшифровка.Установить("Дата2", Ит.КонДата);
			КонецЕсли;
			КорСчета(Т, Ит, "Секция_13", -2);    // по датам
		КонецЦикла;
		Если ПоПроводке = 1 Тогда
			ПоПроводке = 2;
			Расшифровка.Установить("Документ");
			Расшифровка.Установить("НомерПроводки");
			Расшифровка.Установить("НомерКорреспонденции");
			Расшифровка.Установить("Отчет", "ОтчетПоПроводкам");
			Расшифровка.Установить("РазделительУчета", РазделительУчета);
			Расшифровка.Установить("ПланСчетов", ПланСчетов);
			Расшифровка.Установить("ДтКт", 3);
			Расшифровка.Установить("Счет", Счет);
		    Если ПоВалюте = 1 Тогда
				Расшифровка.Установить("Валюта", Валюта);
				Расшифровка.Установить("ПоВалюте", 1);
			КонецЕсли;
		КонецЕсли;
		Расшифровка.Установить("Дата1", Дата1);
		Расшифровка.Установить("Дата2", Дата2);
		КорСчета(Т, Ит, "Секция_14", -1);        // итоги
	Иначе //журнал-ордер с разверткой по анлитике
	   	Расшифровка.Установить("Отчет", "КарточкаСчета");
	   	Расшифровка.Установить("РазделительУчета", РазделительУчета);
	   	Расшифровка.Установить("ПланСчетов", ПланСчетов);
   		ФлПервый = 1;
		Ит.ВыбратьСубконто(1);
    	Пока Ит.ПолучитьСубконто(1) = 1 Цикл
    		//разворот
    		Если ФлПервый = 1 Тогда
				Параметр = "Субконто/"+Представление;
				КорСчета(Т, Ит,"Заголовок", 1); 		// заголовок
				ФлПервый = 0;
			КонецЕсли;
    		Расшифровка.Установить("Субконто1", Ит.Субконто());
			КорСчета(Т, Ит,"Секция_2", 1);

	        Если Ит.Счет.Количественный = 1 Тогда
				КорСчета(Т, Ит,"Секция_3", 1);
        	КонецЕсли;
	        Если ФлВал = 1 Тогда
    	        Ит.ВыбратьВалюты();
        	    Пока Ит.ПолучитьВалюту()=1 Цикл
				   	Расшифровка.Установить("Валюта",Ит.Валюта);
			   		Расшифровка.Установить("ПоВалюте",1);
		            КорСчета(Т, Ит,"Секция_4", 1);
    	        КонецЦикла;
			   	Расшифровка.Установить("Валюта");
				Расшифровка.Установить("ПоВалюте");
			КонецЕсли;
			Если (ВидПериода <> 1) И (ОтборСубк2 <> 0) Тогда
				Если ПоПроводке = 1 Тогда
					Расшифровка.Установить("Отчет");
					Расшифровка.Установить("Счет");
					Расшифровка.Установить("Валюта");
					Расшифровка.Установить("ПоВалюте");
				Иначе
					Расшифровка.Установить("Отчет", "КарточкаСчета");
					Расшифровка.Установить("РазделительУчета", РазделительУчета);
    				Расшифровка.Установить("ПланСчетов", ПланСчетов);
				КонецЕсли;
				Ит.ВыбратьПериоды(ПериодыСНулевымиОборотами);
				Пока Ит.ПолучитьПериод() = 1 Цикл
					Если ПоПроводке = 1 Тогда
						Опер = Ит.Операция;
						Расшифровка.Установить("Документ", Опер.Документ.ТекущийДокумент());
						Если ВидПериода = 2 Тогда
							Расшифровка.Установить("НомерПроводки", Опер.НомерПроводки());
							Расшифровка.Установить("НомерКорреспонденции", Опер.НомерКорреспонденции());
						КонецЕсли;
					Иначе
						Расшифровка.Установить("Дата1", Ит.НачДата);
						Расшифровка.Установить("Дата2", Ит.КонДата);
					КонецЕсли;
					КорСчета(Т, Ит, "Секция_13", 1);    // по датам
				КонецЦикла;
			КонецЕсли;
		   	Расшифровка.Установить("Отчет", "КарточкаСчета");
		   	Расшифровка.Установить("РазделительУчета", РазделительУчета);
		   	Расшифровка.Установить("ПланСчетов", ПланСчетов);
			Расшифровка.Установить("Счет", Счет);

			Если ОтборСубк2 = 0 Тогда // разворачивать
			    Ит.ВыбратьСубконто(2);
			    Расшифровка.Установить("ВидСубконто2", ВыбВидСубконто2);
		    	Пока Ит.ПолучитьСубконто(2) = 1 Цикл
			   		Расшифровка.Установить("Субконто2", Ит.Субконто(2));
		    		Расшифровка.Установить("ОтборСубконто2", 2);
					КорСчета(Т, Ит, "Секция_5", 1);    // по датам
		        	Если Ит.Счет.Количественный = 1 Тогда
						КорСчета(Т, Ит, "Секция_6", 1);    // по датам
	        		КонецЕсли;
	        		Если ФлВал=1  Тогда
		        		Ит.ВыбратьВалюты(,,1);
		        		Пока Ит.ПолучитьВалюту(1)=1 Цикл
						   	Расшифровка.Установить("Валюта",Ит.Валюта);
						   	Расшифровка.Установить("ПоВалюте",1);
							КорСчета(Т, Ит, "Секция_7", 1);    // по датам
	        			КонецЦикла;
					   	Расшифровка.Установить("Валюта");
						Расшифровка.Установить("ПоВалюте");
					КонецЕсли;

					Если (ВидПериода <> 1) И (ОтборСубк3 <> 0) Тогда
						Если ПоПроводке = 1 Тогда
							Расшифровка.Установить("Отчет");
							Расшифровка.Установить("Счет");
							Расшифровка.Установить("Валюта");
							Расшифровка.Установить("ПоВалюте");
						Иначе
							Расшифровка.Установить("Отчет", "КарточкаСчета");
							Расшифровка.Установить("РазделительУчета", РазделительУчета);
		    				Расшифровка.Установить("ПланСчетов", ПланСчетов);
						КонецЕсли;
						Ит.ВыбратьПериоды(ПериодыСНулевымиОборотами,,1);
						Пока Ит.ПолучитьПериод(1) = 1 Цикл
							Если ПоПроводке = 1 Тогда
								Опер = Ит.Операция;
								Расшифровка.Установить("Документ", Опер.Документ.ТекущийДокумент());
								Если ВидПериода = 2 Тогда
									Расшифровка.Установить("НомерПроводки", Опер.НомерПроводки());
									Расшифровка.Установить("НомерКорреспонденции", Опер.НомерКорреспонденции());
								КонецЕсли;
							Иначе
								Расшифровка.Установить("Дата1", Ит.НачДата);
								Расшифровка.Установить("Дата2", Ит.КонДата);
							КонецЕсли;
							КорСчета(Т, Ит, "Секция_13", 1);    // по датам
						КонецЦикла;
					КонецЕсли;
				   	Расшифровка.Установить("Отчет", "КарточкаСчета");
				   	Расшифровка.Установить("РазделительУчета", РазделительУчета);
				   	Расшифровка.Установить("ПланСчетов", ПланСчетов);
					Расшифровка.Установить("Счет", Счет);

		   			Если ОтборСубк3 = 0 Тогда // разворачивать
					    Ит.ВыбратьСубконто(3);
					    Расшифровка.Установить("ВидСубконто3", ВыбВидСубконто3);
					    Пока Ит.ПолучитьСубконто(3) = 1 Цикл
						   	Расшифровка.Установить("Субконто3", Ит.Субконто(3));
				    		Расшифровка.Установить("ОтборСубконто3", 2);
							КорСчета(Т, Ит, "Секция_9", 1);    // по датам
			        		Если Ит.Счет.Количественный = 1 Тогда
								КорСчета(Т, Ит, "Секция_10", 1);    // по датам
				        	КонецЕсли;
				        	Если ФлВал=1  Тогда
				        		Ит.ВыбратьВалюты(,,2);
				        		Пока Ит.ПолучитьВалюту(2)=1 Цикл
								   	Расшифровка.Установить("Валюта",Ит.Валюта);
								   	Расшифровка.Установить("ПоВалюте",1);
									КорСчета(Т, Ит, "Секция_11", 1);    // по датам
			        			КонецЦикла;
							   	Расшифровка.Установить("Валюта");
								Расшифровка.Установить("ПоВалюте");
							КонецЕсли;

							Если (ВидПериода <> 1) Тогда
								Если ПоПроводке = 1 Тогда
									Расшифровка.Установить("Отчет");
									Расшифровка.Установить("Счет");
									Расшифровка.Установить("Валюта");
									Расшифровка.Установить("ПоВалюте");
								Иначе
									Расшифровка.Установить("Отчет", "КарточкаСчета");
									Расшифровка.Установить("РазделительУчета", РазделительУчета);
				    				Расшифровка.Установить("ПланСчетов", ПланСчетов);
								КонецЕсли;
								Ит.ВыбратьПериоды(ПериодыСНулевымиОборотами,,2);
								Пока Ит.ПолучитьПериод(2) = 1 Цикл
									Если ПоПроводке = 1 Тогда
										Опер = Ит.Операция;
										Расшифровка.Установить("Документ", Опер.Документ.ТекущийДокумент());
										Если ВидПериода = 2 Тогда
											Расшифровка.Установить("НомерПроводки", Опер.НомерПроводки());
											Расшифровка.Установить("НомерКорреспонденции", Опер.НомерКорреспонденции());
										КонецЕсли;
									Иначе
										Расшифровка.Установить("Дата1", Ит.НачДата);
										Расшифровка.Установить("Дата2", Ит.КонДата);
									КонецЕсли;
									КорСчета(Т, Ит, "Секция_13", 1);    // по датам
								КонецЦикла;
							КонецЕсли;
						   	Расшифровка.Установить("Отчет", "КарточкаСчета");
						   	Расшифровка.Установить("РазделительУчета", РазделительУчета);
						   	Расшифровка.Установить("ПланСчетов", ПланСчетов);
							Расшифровка.Установить("Счет", Счет);
				        КонецЦикла;
					   	Расшифровка.Установить("Субконто3");
			    		Расшифровка.Установить("ОтборСубконто3");
				 		Расшифровка.Установить("ВидСубконто3");
					КонецЕсли;
	    	    КонецЦикла;
		   		Расшифровка.Установить("Субконто2");
	    		Расшифровка.Установить("ОтборСубконто2");
			 	Расшифровка.Установить("ВидСубконто2");
			КонецЕсли;
		КонецЦикла;
		КорСчета(Т, Ит, "Секция_8", 1);    // по датам
	КонецЕсли;

	Ит = 0;
    Т.ТолькоПросмотр(1);
    Т.Опции(0, 0, 6, 1,"ОпцииПечатиЖурналОрдерПоСубконто","ЖурналОрдерПоСубконто",);
	Т.ОбластьПечати(2);
    Т.Показать("Журнал-ордер по субконто по счету: "+Счет+"("+Дата1+"-"+Дата2+?(ТипЗначения(РазделительУчета)=0, "", " "+РазделительУчета)+")", "");
    Если Закрыть = 1 Тогда
    	СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСчета()
	Если Счет.КоличествоСубконто() > 0 Тогда
		НазначитьСчет(ВыбВидСубконто1, Счет, 1);
		Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
		Доступность = 1;
	Иначе
		ВыбВидСубконто1 = "";
		Субконто1 = "";
		Доступность = 0;
	КонецЕсли;
	
    ДоступностьЗП = Доступность;
	ЗаполнитьПериод(ДоступностьЗП);
	
	ОтборСубконто1.ТекущаяСтрока(1);
	Форма.Субконто1.Доступность(Доступность);
	Форма.ОтборСубконто1.Доступность(Доступность);
	Форма.ВыбВидСубконто1.Доступность(Доступность);
	Форма.ПоГруппам1.Доступность(Доступность);
	Форма.ОчиститьСубконто1.Доступность(Доступность);
		//-----
	Если Счет.КоличествоСубконто() > 1 Тогда
		НазначитьСчет(ВыбВидСубконто2, Счет, 2);
		Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
		ОтборСубконто2.ТекущаяСтрока(1);
		Доступность = 1;
	Иначе
		ВыбВидСубконто2 = "";
		Субконто2 = "";
		ОтборСубконто2.ТекущаяСтрока(3);
		Доступность = 0;
	КонецЕсли;
	Форма.Субконто2.Доступность(Доступность);
	Форма.ОтборСубконто2.Доступность(Доступность);
	Форма.ВыбВидСубконто2.Доступность(Доступность);
	Форма.ПоГруппам2.Доступность(Доступность);
	Форма.ОчиститьСубконто2.Доступность(Доступность);
		//-----
	Если Счет.КоличествоСубконто() > 2 Тогда
		НазначитьСчет(ВыбВидСубконто3, Счет, 3);
		Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
		ОтборСубконто3.ТекущаяСтрока(1);
		Доступность = 1;
	Иначе
		ВыбВидСубконто3 = "";
		Субконто3 = "";
		ОтборСубконто3.ТекущаяСтрока(3);
		Доступность = 0;
	КонецЕсли;
	Форма.Субконто3.Доступность(Доступность);
	Форма.ОтборСубконто3.Доступность(Доступность);
	Форма.ВыбВидСубконто3.Доступность(Доступность);
	Форма.ПоГруппам3.Доступность(Доступность);
	Форма.ОчиститьСубконто3.Доступность(Доступность);
	УстановитьДоступностьКнопокСписков();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто1()
	Если ПустоеЗначение(Субконто1) = 0 Тогда
	    Если ТипЗначения(Субконто1) = 11 Тогда //Справочник
	    	Если Субконто1.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто1.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто1.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто1.ТекущаяСтрока(2);
		КонецЕсли;
	Иначе
		ОтборСубконто1.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто2()
	Если ПустоеЗначение(Субконто2) = 0 Тогда
	    Если ТипЗначения(Субконто2) = 11 Тогда //Справочник
	    	Если Субконто2.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто2.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто2.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто2.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто2.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто3()
	Если ПустоеЗначение(Субконто3) = 0 Тогда
	    Если ТипЗначения(Субконто3) = 11 Тогда //Справочник
	    	Если Субконто3.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто3.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто3.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто3.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто3.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто1()
	ОтборСубконто1.ТекущаяСтрока(1);
	Субконто1 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто2()
	ОтборСубконто2.ТекущаяСтрока(1);
	Субконто2 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто3()
	ОтборСубконто3.ТекущаяСтрока(1);
	Субконто3 = "";
КонецПроцедуры 

//-----------------------------------------------
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОткрытии()
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
		Форма.Текст.Видимость(0);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;
	
	ЗаполнитьПериод(1);

	Форма.КнопкаПоУмолчанию("ОК");
	ОтборСубконто1.УдалитьВсе();
	ОтборСубконто1.ДобавитьЗначение(0, "Разворачивать");
	ОтборСубконто1.ДобавитьЗначение(1, "Отбирать");
	ОтборСубконто1.ДобавитьЗначение(2, "Не учитывать");

	ОтборСубконто2.УдалитьВсе();
	ОтборСубконто2.ДобавитьЗначение(0, "Разворачивать");
	ОтборСубконто2.ДобавитьЗначение(1, "Отбирать");
	ОтборСубконто2.ДобавитьЗначение(2, "Не учитывать");

	ОтборСубконто3.УдалитьВсе();
	ОтборСубконто3.ДобавитьЗначение(0, "Разворачивать");
	ОтборСубконто3.ДобавитьЗначение(1, "Отбирать");
	ОтборСубконто3.ДобавитьЗначение(2, "Не учитывать");

	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;
		ВыбПланСчетов = 0;
	   	Дата1 = глРасшифровка.Получить("Дата1");
	   	Дата2 = глРасшифровка.Получить("Дата2");
	   	Счет = глРасшифровка.Получить("Счет");
	   	ПриВыбореСчета();
		ДанныеПоСубсчетам = глРасшифровка.Получить("ДанныеПоСубсчетам");
		ПриВыбореСчета();
		ПланСчетов = глРасшифровка.Получить("ПланСчетов");
		РУ = глРасшифровка.Получить("РазделительУчета");
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
		Если Обновить <> 0 Тогда
			ОстНачД = глРасшифровка.Получить("ОстНачД");
			ОстНачК = глРасшифровка.Получить("ОстНачК");
			ОстКонД = глРасшифровка.Получить("ОстКонД");
			ОстКонК = глРасшифровка.Получить("ОстКонК");
			ОбД = глРасшифровка.Получить("ОбД");
			ОбК = глРасшифровка.Получить("ОбК");
			КорОбД = глРасшифровка.Получить("КорОбД");
			КорОбК = глРасшифровка.Получить("КорОбК");
			ВидПериода = глРасшифровка.Получить("ВидПериода");
			Период.ТекущаяСтрока(ВидПериода);
			ПериодыСНулевымиОборотами = глРасшифровка.Получить("ПериодыСНулевымиОборотами");
			
		   	ВыбВидСубконто1 = глРасшифровка.Получить("ВидСубконто1");
		   	глРасшифровка.Получить("ВыбСубконто1").Выгрузить(ВыбСубконто1);
			Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
			Субконто1 = глРасшифровка.Получить("Субконто1");
			ОтборСубконто1.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто1")+1);
			ПоГруппам1 = глРасшифровка.Получить("ПоГруппам1");

			Если Счет.КоличествоСубконто() > 1 Тогда
			   	ВыбВидСубконто2 = глРасшифровка.Получить("ВидСубконто2");
			   	глРасшифровка.Получить("ВыбСубконто2").Выгрузить(ВыбСубконто2);
				Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);			
				Субконто2 = глРасшифровка.Получить("Субконто2");
				ОтборСубконто2.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто2")+1);
				ПоГруппам2 = глРасшифровка.Получить("ПоГруппам2");
			КонецЕсли;

			Если Счет.КоличествоСубконто() > 2 Тогда
				ВыбВидСубконто3 = глРасшифровка.Получить("ВидСубконто3");
				глРасшифровка.Получить("ВыбСубконто3").Выгрузить(ВыбСубконто3);
				Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
				Субконто3 = глРасшифровка.Получить("Субконто3");
				ОтборСубконто3.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто3")+1);
				ПоГруппам3 = глРасшифровка.Получить("ПоГруппам3");
			КонецЕсли;
			
			Т = глТаблица;
		Иначе
		    ОстНачД = 1;
		    ОстНачК = 1;
		    КорОбД  = 1;
		    ОбД     = 1;
		    КорОбК  = 1;
		    ОбК     = 1;
		    ОстКонД = 1;
		    ОстКонК = 1;
			ВидПериода = 1;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	Иначе
		Обновить = 0;
		ВыбПланСчетов = 1;
		ПланСчетов = ВыбранныйПланСчетов();
		РазделительУчета = глВосстановитьЗначение(,"БазФирма");
		ПоВсемРУ = 0;
		Дата1 = НачалоПериодаБИ();
		Дата2 = КонецПериодаБИ();
		Если Счет.Выбран()=0 Тогда
		    ВосстановитьЗначение("ОтчРабСчет",Счет);
		КонецЕсли;
		ПриВыбореСчета();
		ОстНачД = 1;
		ОстНачК = 1;
		ОстКонД = 1;
		ОстКонК = 1;
		ОбД = 1;
		ОбК = 1;
		КорОбД = 1;
		КорОбК = 1;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриВыбореВалюты()
	ПоВалюте = Валюта.Выбран();
КонецПроцедуры

//-----------------------------------------------
Процедура ОбработкаПодбора(ВыбранноеЗначение)
	РазмерСписка = СписокСубконто.РазмерСписка();
	Если (ДобавитьСубконто = 1) Или (СписокСубконто.РазмерСписка() = 0) Тогда
		СписокСубконто.ДобавитьЗначение(ВыбранноеЗначение);
		СписокСубконто.ТекущаяСтрока(СписокСубконто.РазмерСписка());
	Иначе
		Позиция = СписокСубконто.ТекущаяСтрока();
		СписокСубконто.УстановитьЗначение(Позиция, ВыбранноеЗначение);
		СписокСубконто.ТекущаяСтрока(Позиция);
	КонецЕсли;
	//Если ДобавитьСубконто = 1 Тогда
	//    Если (РазмерСписка = 0) И (СписокСубконто.РазмерСписка() = 1) И (ОтборСубк.ТекущаяСтрока() = 1) Тогда
	//		ОтборСубк.ТекущаяСтрока(3);
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ВводСубконто(ВыбВидСубконто, ВыбСубконто, РежимПодбора, ДобСубконто, ОтборСубконто)
	Перем Субк, Форма;
	Если (ВыбСубконто.РазмерСписка() > 0) И (ВыбСубконто.ТекущаяСтрока() > 0)  Тогда
		Субк = ВыбСубконто.ПолучитьЗначение(ВыбСубконто.ТекущаяСтрока());
	КонецЕсли;

	СписокСубконто = ВыбСубконто;
	ДобавитьСубконто = ДобСубконто;
	ОтборСубк = ОтборСубконто;

	МД = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор());
	Тип = МД.Тип;
	Если (Тип = "Справочник") Или (Тип = "Счет") Тогда
		ТипВид = Тип;
		Если МД.Вид <> "" Тогда
			ТипВид = ТипВид+"."+МД.Вид;
		КонецЕсли;
		ОткрытьПодбор(ТипВид,,Форма, РежимПодбора, Субк);
		Если (Тип = "Справочник") Или (Тип = "Счет") Тогда
			Форма.ВыборГруппы(1);
		КонецЕсли;
	ИначеЕсли Тип = "Документ" Тогда
		ТипВид = Тип;
		Если МД.Вид <> "" Тогда
			ТипВид = ТипВид+"."+МД.Вид;
			ОткрытьПодбор(ТипВид,,Форма, РежимПодбора, Субк);
		Иначе
			Заказ = СоздатьОбъект("Документ");
			ВидыЗаказов = "Договор,Заказ,Счет,РасходнаяНакладная,СчетВходящий,ПриходнаяНакладнаяГТД,ПриходнаяНакладнаяЗапасы,ВозвратнаяНакладная,ВводОстатковКредита,ВозвратПоставщику,ЛиквидацияНеоборАктивов,ОказаниеУслуг,УслугиСтороннихОрганизаций,УслугиСтороннихОрганизацийПроизводственногоХарактера";
		    Заказ.ВидыДляВыбора(ВидыЗаказов);
			Если Заказ.Выбрать("Список заказов") = 1 Тогда
			    ВыбСубконто.ДобавитьЗначение(Заказ.ТекущийДокумент());
			КонецЕсли;
			Заказ = 0;			
		КонецЕсли;		
	ИначеЕсли Тип = "Перечисление" Тогда
		СписокЗначений = СоздатьОбъект("СписокЗначений");
		П = Перечисление.ПолучитьАтрибут(МД.Вид);
		Для А=1 По П.КоличествоЗначений() Цикл
			СписокЗначений.ДобавитьЗначение(П.ЗначениеПоНомеру(А));
			Если РежимПодбора = 1 Тогда
				Если ВыбСубконто.НайтиЗначение(П.ЗначениеПоНомеру(А)) <> 0 Тогда
				    СписокЗначений.Пометка(А, 1);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если РежимПодбора = 1 Тогда
			Если СписокЗначений.ОтметитьЗначения(, "Выберите "+МД.Синоним) = 1 Тогда
				РазмерСписка = ВыбСубконто.РазмерСписка();
				ВыбСубконто.УдалитьВсе();
				Для А=1 По СписокЗначений.РазмерСписка() Цикл
					Если СписокЗначений.Пометка(А) = 1 Тогда
						ВыбСубконто.ДобавитьЗначение(СписокЗначений.ПолучитьЗначение(А));
					КонецЕсли;
				КонецЦикла;
				Если ДобавитьСубконто = 1 Тогда
				    Если (РазмерСписка = 0) И (ВыбСубконто.РазмерСписка() = 1) И (ОтборСубк.ТекущаяСтрока() = 1) Тогда
						ОтборСубк.ТекущаяСтрока(3);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли
		Иначе
			Если СписокЗначений.ВыбратьЗначение(Субк, "Выберите "+МД.Синоним) = 1 Тогда
				ОбработкаПодбора(Субк);
			КонецЕсли
		КонецЕсли;
	Иначе
		ВвестиЗначение(Субк, "Введите "+Тип, Тип, МД.Длина, МД.Точность);
		ОбработкаПодбора(Субк);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриРедактированииСубконто(ВыбВидСубконто, ВыбСубконто)
	ВводСубконто(ВыбВидСубконто, ВыбСубконто, 0, 0, "");
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто(ВыбВидСубконто, ВыбСубконто, ОтборСубконто)
	ВводСубконто(ВыбВидСубконто, ВыбСубконто, 0, 1, ОтборСубконто);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриДобавленииСубконто(ВыбВидСубконто, ВыбСубконто, ОтборСубконто)
	ВводСубконто(ВыбВидСубконто, ВыбСубконто, 1, 1, ОтборСубконто);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриУдаленииСубконто(ВыбСубконто, ОтборСубконто)
	Если (ВыбСубконто.РазмерСписка() > 0) И
		 (ВыбСубконто.ТекущаяСтрока() > 0) Тогда
		ВыбСубконто.УдалитьЗначение(ВыбСубконто.ТекущаяСтрока());
		Если (ВыбСубконто.РазмерСписка() = 0) И (ОтборСубконто.ТекущаяСтрока() = 3) Тогда
			ОтборСубконто.ТекущаяСтрока(1);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриУдаленииВсехСубконто(ВыбСубконто, ОтборСубконто)
	ВыбСубконто.УдалитьВсе();
	Если ОтборСубконто.ТекущаяСтрока() = 3 Тогда
		ОтборСубконто.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

Процедура ИзмВидСубконто(Номер, ВыбранноеСубконто)
	Форма.ПолучитьАтрибут("Субконто"+Номер).НазначитьТип(ВыбранноеСубконто);
	УстановитьДоступностьКнопокСписков();
КонецПроцедуры