Перем ВыбПечать;

Перем МаксимальноеКвоСтрокКолонки;
Перем Строк11;
Перем Строк12;
Перем Строк21;
Перем Строк22;

//======================================================================
Процедура ПриВыбореСтроки() Далее

//======================================================================
Процедура ЗаполнитьСписокСтрокПрайса()	
	Перем СтрокаПрайсЛиста;
	Перем Индекс;
	
	Если ТекущийЭлемент().Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	
	СтрокаПрайсЛиста = СоздатьОбъект("Справочник.УМК_СтрокиПрайсЛиста");
	СтрокаПрайсЛиста.ИспользоватьВладельца(ТекущийЭлемент());
	СтрокаПрайсЛиста.ПорядокКодов();
	СтрокаПрайсЛиста.ВыбратьЭлементы();
	Индекс = 0; 
	СписокСтрокПрайса.УдалитьСтроки();
	Пока СтрокаПрайсЛиста.ПолучитьЭлемент()=1 Цикл
		Если СтрокаПрайсЛиста.ПометкаУдаления()=1 Тогда
		    Продолжить;
		КонецЕсли;

	    Индекс = Индекс + 1;
		СписокСтрокПрайса.НоваяСтрока(Индекс);
		СписокСтрокПрайса.Ссылка 			= СтрокаПрайсЛиста.ТекущийЭлемент();
		СписокСтрокПрайса.ТМЦ				= СтрокаПрайсЛиста.ТМЦ;
		СписокСтрокПрайса.ВидУпаковки		= СтрокаПрайсЛиста.ВидУпаковки;
		СписокСтрокПрайса.НаименованиеДляПечати = СтрокаПрайсЛиста.НаименованиеДляПечати;
		СписокСтрокПрайса.Гатунок			= СтрокаПрайсЛиста.Гатунок;
		СписокСтрокПрайса.Оболочка			= СтрокаПрайсЛиста.Оболочка;
		СписокСтрокПрайса.СрокХранения		= СтрокаПрайсЛиста.СрокХранения;
		СписокСтрокПрайса.ЦенаПовышена		= СтрокаПрайсЛиста.фЦеныПовышены;
		СписокСтрокПрайса.ЦенаСнижена		= СтрокаПрайсЛиста.фЦеныСнижены;
		СписокСтрокПрайса.НетБезУпаковки 	= ?(СтрокаПрайсЛиста.ТМЦ.НетБезУпаковки = 1,4,"");
		
		Если ПустоеЗначение(СписокСтрокПрайса.ТМЦ) = 1 Тогда
			СписокСтрокПрайса.FormEx_ПланРаскраски = "(BRUSH["+глПолучитьЦвет(196,233,242)+"])()()()()()";
		ИначеЕсли СписокСтрокПрайса.ТМЦ.фНовый = 1 Тогда	
			СписокСтрокПрайса.FormEx_ПланРаскраски = "(BRUSH["+глПолучитьЦвет(255,255,198)+"])()()()";
		КонецЕсли;		
	КонецЦикла;	
КонецПроцедуры // ПриВыбореСтроки()

//======================================================================
Процедура ИзмРедактированиеВак()
	МаксимальноеКвоСтрокКолонки = 57;
	СписокСтрокПрайса.ВидимостьКолонки("ВидУпаковки", 0);
	
	Если ргВак = 2 Тогда
		Форма.тЗаголовокГруппы.Заголовок("Группы для вак.");
		Форма.тЗаголовокСтроки.Заголовок("Строки для вакуума");
		Форма.кПечать.Заголовок("Печать вак.");
		МаксимальноеКвоСтрокКолонки = 72;		
		//Форма.кнШиринаКол.Видимость(1);		
	ИначеЕсли ргВак = 1 Тогда		
		Форма.тЗаголовокГруппы.Заголовок("Группы прайс");
		Форма.тЗаголовокСтроки.Заголовок("Строки прайс-листа");
		Форма.кПечать.Заголовок("Печать прайса");
	Иначе
		Форма.тЗаголовокГруппы.Заголовок("Группы упак. прайс");
		Форма.тЗаголовокСтроки.Заголовок("Строки прайс-листа с упак.");
		Форма.кПечать.Заголовок("Печать прайса");
		СписокСтрокПрайса.ВидимостьКолонки("ВидУпаковки", 1);
	КонецЕсли;
	фВак = ?(ргВак = 2, 1, 0);
	Форма.кнПорядокВУ.Видимость(фВак);
	Форма.ВысотаСтроки.Видимость(фВак);
	Форма.кнОбновление.Видимость(фВак);
	Форма.ЛистА3.Видимость(фВак);
	Форма.кДанныеИзПрайса.Видимость(?(ргВак = 3, 1, 0));
	
	
	Форма.кнПорядокВУ.Видимость(фВак);
	УстановитьОтбор("ДляВакуума", ргВак - 1);
	ПриВыбореСтроки();
КонецПроцедуры // 

//======================================================================
Процедура ПриОткрытии() 
	
	Если (НазваниеНабораПрав() = "Администратор") 
		ИЛИ (НазваниеНабораПрав() = "ПроизводствоКасса") 
		ИЛИ (НазваниеНабораПрав() = "ПроизводствоСбыт")	Тогда
			
	Иначе
		СтатусВозврата(0);
		Возврат;		
	КонецЕсли;
	
	ВыбПечать = СоздатьОбъект("СписокЗначений");
	СпрЦены	  = СоздатьОбъект("Справочник.КатегорииЦен");
	СпрЦены.ВыбратьЭлементы();
	Пока СпрЦены.ПолучитьЭлемент() = 1 Цикл
		Если СпрЦены.ПометкаУдаления() = 1 Тогда
			Продолжить;			
		КонецЕсли;
		
		ВыбПечать.ДобавитьЗначение(СпрЦены.ТекущийЭлемент(),СпрЦены.Наименование);
				
	КонецЦикла;
	
	Форма.ОбработкаВыбораСтроки(1);
	УстановитьОтбор("ДляВакуума", ргВак - 1);
	ИзмРедактированиеВак();
КонецПроцедуры // ПриОткрытии

//======================================================================
Процедура ПриВыбореСтроки()
	ЗаполнитьСписокСтрокПрайса();
КонецПроцедуры // ПриВыбореСтроки

//====================================================================== //--- УМК Сандомирский В.Ю. (20.10.14)
Процедура ИзменениеПорядка(Направление)
	
	//ТекСтрока = СписокСтрокПрайса.ТекущаяСтрока();
	//СписокСтрокПрайса.СдвинутьСтроку(Направление,ТекСтрока);
	
	//ТекСтрока = ТекСтрока + Направление;
	//Если ТекСтрока > СписокСтрокПрайса.КоличествоСтрок() Тогда
	//	ТекСтрока = СписокСтрокПрайса.КоличествоСтрок(); 
	//КонецЕсли; 
	
	//СписокСтрокПрайса.ТекущаяСтрока(ТекСтрока);
	
	ТекЭлемент = ТекущийЭлемент();
	
	//--- Сдвигаем номерацию на 1000
	ТЗ_Элементы = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Элементы.НоваяКолонка("Ссылка");
	СпрСтрокиПрайсЛиста	= СоздатьОбъект("Справочник.УМК_ПрайсЛист");
	СпрСтрокиПрайсЛиста.ВыбратьЭлементы();
	Пока СпрСтрокиПрайсЛиста.ПолучитьЭлемент() = 1 Цикл
		ТЗ_Элементы.НоваяСтрока();
		ТЗ_Элементы.Ссылка = СпрСтрокиПрайсЛиста.ТекущийЭлемент();
	КонецЦикла;
	
	ТекСтрока 	= "";
	ТекКолонка 	= "";
	
	ТЗ_Элементы.НайтиЗначение(ТекЭлемент,ТекСтрока,ТекКолонка);
	
	ТЗ_Элементы.СдвинутьСтроку(Направление,ТекСтрока);
	
	ТЗ_Элементы2 = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Элементы.Выгрузить(ТЗ_Элементы2);
	
	
	ТЗ_Элементы2.ВыбратьСтроки();
	Пока ТЗ_Элементы2.ПолучитьСтроку() = 1 Цикл
		СпрСтрокиПрайсЛиста.НайтиЭлемент(ТЗ_Элементы2.Ссылка);
		СпрСтрокиПрайсЛиста.Код = СпрСтрокиПрайсЛиста.Код + 1000;
		СпрСтрокиПрайсЛиста.Записать();
	КонецЦикла;
	//--- Сдвигаем номерацию на 1000
	
	ТекКод = 0;
	ТЗ_Элементы.ВыбратьСтроки();
	Пока ТЗ_Элементы.ПолучитьСтроку() = 1 Цикл
		ТекКод = ТекКод + 1;
		СпрСтрокиПрайсЛиста.НайтиЭлемент(ТЗ_Элементы.Ссылка);
		СпрСтрокиПрайсЛиста.Код = ТекКод;
		СпрСтрокиПрайсЛиста.Записать();
	КонецЦикла;
	
КонецПроцедуры // ИзменениеПорядка(1)

// ===============================
Функция УстДоступность()
	
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю. (20.10.14)
Процедура ПечатьПрайса()
Перем ВыбЗначение;
	Если ргВак = 2 Тогда
		Варианты = СоздатьОбъект("СписокЗначений");
		Варианты.ДобавитьЗначение(1,"Не выделять новые");
		Варианты.ДобавитьЗначение(2,"Выделять новые");	
		Варианты.ДобавитьЗначение(3,"Не выделять новые А3");
		Варианты.ДобавитьЗначение(4,"Выделять новые А3");
		Варианты.ДобавитьЗначение(5,"Для инвентаризации");
		
		Если Варианты.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
		    Возврат;
		КонецЕсли;		
		ОткрытьФорму("Отчет.ПечатьВакуума", ВыбЗначение);
	ИначеЕсли ПустоеЗначение(КатегорияЦены) <> 1 Тогда
		СписПарам = СоздатьОбъект("СписокЗначений");
		СписПарам.ДобавитьЗначение(КатегорияЦены, "Категория");
		СписПарам.ДобавитьЗначение(Листы, "Листы");
		СписПарам.ДобавитьЗначение(?(ргВак = 1, 0, 1), "Упаковки");
		ОткрытьФорму("Обработка.УМК_ПечатьПрайсЛиста", СписПарам);
	КонецЕсли;	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (20.10.14)
Процедура ВыборПечати()	
	Перем ВыбЗначение;
		
	Если ВыбПечать.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;		
КонецПроцедуры // ВыборПечати()


//--- КНОПКИ НА ФОРМЕ  //--- работа с таблицей значений (Строки прайс листа)

//====================================================================== //--- УМК Сандомирский В.Ю. (12.09.14)
Процедура ДобавитьСтрокуПрайса()
	Перем ФормаЗаписи;
	Если Выбран() = 0 Тогда
		Предупреждение("Элемент сначала следует записать!");
		Возврат;
	КонецЕсли;	
	ОткрытьФормуМодально("Элемент.УМК_СтрокиПрайсЛиста",Контекст,,,ТекущийЭлемент());
	ЗаполнитьСписокСтрокПрайса();
	
	СписокСтрокПрайса.ТекущаяСтрока(СписокСтрокПрайса.КоличествоСтрок());	
КонецПроцедуры // ДобавитьСтрокуПрайса

//====================================================================== //--- УМК Сандомирский В.Ю. (20.10.14)
Процедура ИзменитьСтрокуПрайса()
	
	Перем ФормаЗаписи;
	Поз=СписокСтрокПрайса.ТекущаяСтрока();	
	Если Поз = 0 Тогда
	    // не выбрана строка таблицы
		Возврат;
	КонецЕсли;               	
	Эл=СписокСтрокПрайса.ПолучитьЗначение(Поз,"Ссылка");
	ОткрытьФормуМодально(Эл,Контекст);
	ЗаполнитьСписокСтрокПрайса();
	СписокСтрокПрайса.ТекущаяСтрока(Поз);
	
КонецПроцедуры // Изменить

//====================================================================== //--- УМК Сандомирский В.Ю. (20.10.14)
Процедура УдалитьСтрокуПрайса()
	
	Перем Поз;
	
	Поз=СписокСтрокПрайса.ТекущаяСтрока();
	
	Если Поз = 0 Тогда
	    // не выбрана строка таблицы
		Возврат;
	КонецЕсли;
	
	Эл=СписокСтрокПрайса.ПолучитьЗначение(Поз,"Ссылка");

	Если Вопрос("Удалить вид упаковки ?",1)=2 Тогда
		Возврат;
	КонецЕсли;
	Спр=СоздатьОбъект("Справочник.УМК_СтрокиПрайсЛиста");
	Спр.ИспользоватьВладельца(ТекущийЭлемент());
	Если Спр.НайтиЭлемент(Эл)=1 Тогда
		Спр.Удалить(0);
		СписокСтрокПрайса.УдалитьСтроку(Поз);
		СписокСтрокПрайса.ТекущаяСтрока(?(Поз>1,Поз-1,1));
		Форма.Обновить();
	КонецЕсли;
КонецПроцедуры // Удалить

//====================================================================== //--- УМК Сандомирский В.Ю. (20.10.14)
Процедура ИзменениеПорядкаТЗ(Направление)
	
	ТекСтрока = СписокСтрокПрайса.ТекущаяСтрока();
	СписокСтрокПрайса.СдвинутьСтроку(Направление,ТекСтрока);
	
	ТекСтрока = ТекСтрока + Направление;
	Если ТекСтрока > СписокСтрокПрайса.КоличествоСтрок() Тогда
		ТекСтрока = СписокСтрокПрайса.КоличествоСтрок(); 
	КонецЕсли; 
	
	СписокСтрокПрайса.ТекущаяСтрока(ТекСтрока);
	
	//--- Сдвигаем номерацию на 100
	ТЗ_Элементы = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Элементы.НоваяКолонка("Ссылка");
	СпрСтрокиПрайсЛиста	= СоздатьОбъект("Справочник.УМК_СтрокиПрайсЛиста");
	СпрСтрокиПрайсЛиста.ИспользоватьВладельца(ТекущийЭлемент());
	СпрСтрокиПрайсЛиста.ВыбратьЭлементы();
	Пока СпрСтрокиПрайсЛиста.ПолучитьЭлемент() = 1 Цикл
		ТЗ_Элементы.НоваяСтрока();
		ТЗ_Элементы.Ссылка = СпрСтрокиПрайсЛиста.ТекущийЭлемент();
	КонецЦикла;
	
	ТЗ_Элементы.ВыбратьСтроки();
	Пока ТЗ_Элементы.ПолучитьСтроку() = 1 Цикл
		СпрСтрокиПрайсЛиста.НайтиЭлемент(ТЗ_Элементы.Ссылка);
		СпрСтрокиПрайсЛиста.Код = СпрСтрокиПрайсЛиста.Код + 100;
		СпрСтрокиПрайсЛиста.Записать();
	КонецЦикла;
	//--- Сдвигаем номерацию на 100
	
	ТекКод = 0;
	СписокСтрокПрайса.ВыбратьСтроки();
	Пока СписокСтрокПрайса.ПолучитьСтроку() = 1 Цикл
		ТекКод = ТекКод + 1;
		СпрСтрокиПрайсЛиста.НайтиЭлемент(СписокСтрокПрайса.Ссылка);
		СпрСтрокиПрайсЛиста.Код = ТекКод;
		СпрСтрокиПрайсЛиста.Записать();
	КонецЦикла;
	
КонецПроцедуры // ИзменениеПорядка(1)

//======================================================================
Процедура ЗаписатьЭлементСтрокиПрайса(СпрСтрокиПрайса, СпрТМЦ, ВидУпаковки = "")
	СпрСтрокиПрайса.Новый();
	СпрСтрокиПрайса.ТМЦ 			= СпрТМЦ.ТекущийЭлемент();
	СпрСтрокиПрайса.ВидУпаковки		= ВидУпаковки;
	СпрСтрокиПрайса.Записать();	
КонецПроцедуры // 

//======================================================================
Процедура ЗаписатьЭлементСтрокиПрайсаВак(СпрСтрокиПрайса, СпрТМЦ, ВидУпаковки)
	СпрСтрокиПрайса.ВыбратьЭлементыПоРеквизиту("ТМЦ", СпрТМЦ.ТекущийЭлемент(), 1, 0);
	Пока СпрСтрокиПрайса.ПолучитьЭлемент() = 1 Цикл
		Если СпрСтрокиПрайса.ВидУпаковки = ВидУпаковки Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	

	ЗаписатьЭлементСтрокиПрайса(СпрСтрокиПрайса, СпрТМЦ, ВидУпаковки);	
КонецПроцедуры // 

//======================================================================
Процедура ЗаполнитьИзГруппыТМЦ()
	Если ТекущийЭлемент().Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	
	//Если ПустоеЗначение(ТекущийЭлемент().ГруппаТМЦ) = 1 Тогда
	//	 Возврат;
	//КонецЕсли;	
	СпМеню = СоздатьОбъект("СписокЗначений");
	Если ПустоеЗначение(ТекущийЭлемент().ГруппаТМЦ) = 0 Тогда
		СпМеню.ДобавитьЗначение(1, "Из выбранной");
		СпМеню.ДобавитьЗначение(2, "Выбрать вручную");
		Зн = 1;
		Если СпМеню.ВыбратьЗначение(Зн, ,,,1) = 0 Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Зн = 2;
	КонецЕсли;
	
	Если Зн = 2 Тогда
		СпрГ = СоздатьОбъект("Справочник.ТМЦ");
		СпрГ.ВыборГруппы(1);
		Если СпрГ.Выбрать("Выберите группу для заполнения", "ФормаСписка") = 0 Тогда
			Возврат;
		КонецЕсли;
		Если СпрГ.ЭтоГруппа() = 0 Тогда
			Возврат;
		КонецЕсли;
		ТекРодитель = СпрГ.ТекущийЭлемент();
	Иначе
		ТекРодитель = ТекущийЭлемент().ГруппаТМЦ;
	КонецЕсли;
	
	
	СпрСтрокиПрайса = СоздатьОбъект("Справочник.УМК_СтрокиПрайсЛиста");
	СпрСтрокиПрайса.ИспользоватьВладельца(ТекущийЭлемент());	
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	СпрТМЦ.ИспользоватьРодителя(ТекРодитель);
	СпрТМЦ.ВыбратьЭлементы();
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл		
		Если ргВак = 3 Тогда
			ТЗ = глПолучитьСписокВидовУпаковкиДляТМЦ(СпрТМЦ.ТекущийЭлемент(), 1, 1);
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				ЗаписатьЭлементСтрокиПрайсаВак(СпрСтрокиПрайса, СпрТМЦ.ТекущийЭлемент(), ТЗ.ВидУпаковки);
			КонецЦикла;
		Иначе
			Если СпрСтрокиПрайса.НайтиПоРеквизиту("ТМЦ",СпрТМЦ,0) <> 1 Тогда
				ЗаписатьЭлементСтрокиПрайса(СпрСтрокиПрайса, СпрТМЦ.ТекущийЭлемент());
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьСписокСтрокПрайса();	
КонецПроцедуры // ЗаполнитьИзГруппыТМЦ()

//====================================================================== //--- УМК Сандомирский В.Ю. (16.02.15)
Процедура СортироватьСтрокиПрайсЛиста()
	
	Перем ВыбЗначение;
	
	ВариантыСкидок = СоздатьОбъект("СписокЗначений");
	ВариантыСкидок.ДобавитьЗначение(1,"Цена по убыванию");
	ВариантыСкидок.ДобавитьЗначение(2,"Цена по увеличению");
	ВариантыСкидок.ДобавитьЗначение(3,"Наименование по алфавиту");
	
	Если ВариантыСкидок.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;

	СписокСтрокПрайса.ВыбратьСтроки();
	Пока СписокСтрокПрайса.ПолучитьСтроку() = 1 Цикл
		СписокСтрокПрайса.Цена = глВернутьЦену(СписокСтрокПрайса.ТМЦ, Константа.ОсновнаяКатегорияЦен,РабочаяДата());	
	КонецЦикла;
	
	//СписокСтрокПрайса.Сортировать("Цена");
	
	Если ВыбЗначение = 1 Тогда
		
		СписокСтрокПрайса.Сортировать("Цена-");
		
	ИначеЕсли ВыбЗначение = 2 Тогда
		
		СписокСтрокПрайса.Сортировать("Цена+");
		
	ИначеЕсли ВыбЗначение = 3 Тогда
		СписокСтрокПрайса.ВыбратьСтроки();
		Пока СписокСтрокПрайса.ПолучитьСтроку() = 1 Цикл
			СписокСтрокПрайса.НаименованиеСортировки = Врег(СписокСтрокПрайса.НаименованиеДляПечати);
		КонецЦикла;
		СписокСтрокПрайса.Сортировать("НаименованиеСортировки+");	
		
	КонецЕсли;
	
	//--- Сдвигаем номерацию на 100
	ТЗ_Элементы = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Элементы.НоваяКолонка("Ссылка");
	СпрСтрокиПрайсЛиста	= СоздатьОбъект("Справочник.УМК_СтрокиПрайсЛиста");
	СпрСтрокиПрайсЛиста.ИспользоватьВладельца(ТекущийЭлемент());
	СпрСтрокиПрайсЛиста.ВыбратьЭлементы();
	Пока СпрСтрокиПрайсЛиста.ПолучитьЭлемент() = 1 Цикл
		ТЗ_Элементы.НоваяСтрока();
		ТЗ_Элементы.Ссылка = СпрСтрокиПрайсЛиста.ТекущийЭлемент();
	КонецЦикла;
	
	ТЗ_Элементы.ВыбратьСтроки();
	Пока ТЗ_Элементы.ПолучитьСтроку() = 1 Цикл
		СпрСтрокиПрайсЛиста.НайтиЭлемент(ТЗ_Элементы.Ссылка);
		СпрСтрокиПрайсЛиста.Код = СпрСтрокиПрайсЛиста.Код + 100;
		СпрСтрокиПрайсЛиста.Записать();
	КонецЦикла;
	//--- Сдвигаем номерацию на 100
	
	ТекКод = 0;
	СписокСтрокПрайса.ВыбратьСтроки();
	Пока СписокСтрокПрайса.ПолучитьСтроку() = 1 Цикл
		ТекКод = ТекКод + 1;
		СпрСтрокиПрайсЛиста.НайтиЭлемент(СписокСтрокПрайса.Ссылка);
		СпрСтрокиПрайсЛиста.Код = ТекКод;
		СпрСтрокиПрайсЛиста.Записать();
	КонецЦикла;	
КонецПроцедуры // СортироватьСтрокиПрайсЛиста()

//======================================================================
Функция ВернутьКритическоеЧислоСтрок()	
	ТЗ_Подсчет = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Подсчет.НоваяКолонка("Лист","Число",10);
	ТЗ_Подсчет.НоваяКолонка("Колонка","Число",10);
	ТЗ_Подсчет.НоваяКолонка("Кво","Число",10);
//	ТЗ_Подсчет.НоваяКолонка("МаксимальноеКоличествоСтрок","Число",10);

	СпрПрайс 		= СоздатьОбъект("Справочник.УМК_ПрайсЛист");
	СпрСтрокиПрайса = СоздатьОбъект("Справочник.УМК_СтрокиПрайсЛиста");

	СпрПрайс.ВыбратьЭлементыПоРеквизиту("ДляВакуума", ргВак - 1, 0);
	Пока СпрПрайс.ПолучитьЭлемент() = 1 Цикл		
		Если СпрПрайс.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
			
		ТЗ_Подсчет.НоваяСтрока();
		ТЗ_Подсчет.Лист 		= СпрПрайс.Лист;
		ТЗ_Подсчет.Колонка 		= СпрПрайс.Колонка;
		ТЗ_Подсчет.Кво 			= 1;
		
		СпрСтрокиПрайса.ИспользоватьВладельца(СпрПрайс.ТекущийЭлемент());
		СпрСтрокиПрайса.ВыбратьЭлементы();
		Пока СпрСтрокиПрайса.ПолучитьЭлемент() = 1 Цикл
			
			Если СпрСтрокиПрайса.ПометкаУдаления() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			ТЗ_Подсчет.НоваяСтрока();
			ТЗ_Подсчет.Лист 		= СпрПрайс.Лист;
			ТЗ_Подсчет.Колонка 		= СпрПрайс.Колонка;
			ТЗ_Подсчет.Кво 			= 1;				
		КонецЦикла;				
	КонецЦикла;

	
	ТекстПредупреждения = "";
	ТЗ_Подсчет.Свернуть("Лист,Колонка", "Кво");
	ТЗ_Подсчет.ВыбратьСтроки();
	Пока ТЗ_Подсчет.ПолучитьСтроку() = 1 Цикл
		Если ТЗ_Подсчет.Кво > МаксимальноеКвоСтрокКолонки Тогда
			ТекстПредупреждения = ТекстПредупреждения + ?(ТекстПредупреждения = "","","
			|") + "Страница: " + ТЗ_Подсчет.Лист + ". Колонка: " + ТЗ_Подсчет.Колонка + " превышение на: " + (ТЗ_Подсчет.Кво - МаксимальноеКвоСтрокКолонки);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТекстПредупреждения;		
	
	//Строк11 = 0;
	//Строк12 = 0;
	//Строк21 = 0;
	//Строк22 = 0;
	//
	//ТЗ_Подсчет.Свернуть("Лист,Колонка","Кво");
	//ТЗ_Подсчет.ВыбратьСтроки();
	//Пока ТЗ_Подсчет.ПолучитьСтроку() = 1 Цикл
	//	Если (ТЗ_Подсчет.Лист = 1) И (ТЗ_Подсчет.Колонка = 1) Тогда		
	//		Строк11 = ТЗ_Подсчет.Кво;	
	//	ИначеЕсли (ТЗ_Подсчет.Лист = 1) И (ТЗ_Подсчет.Колонка = 2)  Тогда			
	//		Строк12 = ТЗ_Подсчет.Кво;			
	//	ИначеЕсли (ТЗ_Подсчет.Лист = 2) И (ТЗ_Подсчет.Колонка = 1)  Тогда			
	//		Строк21 = ТЗ_Подсчет.Кво;			
	//	ИначеЕсли (ТЗ_Подсчет.Лист = 2) И (ТЗ_Подсчет.Колонка = 2)  Тогда			
	//		Строк22 = ТЗ_Подсчет.Кво;			
	//	КонецЕсли;		
	//КонецЦикла;
	//
	//ТекстПредупреждения = "Превышение ( " + МаксимальноеКвоСтрокКолонки + " строки) ";
	//
	//Если Строк11 > МаксимальноеКвоСтрокКолонки Тогда
	//	ТекстПредупреждения = ТекстПредупреждения + глПравильныйСимволПереноса + " первая страница первый столбец " + Строк11 + " стр. ";
	//КонецЕсли;
	//
	//Если Строк12 > МаксимальноеКвоСтрокКолонки Тогда
	//	ТекстПредупреждения = ТекстПредупреждения + глПравильныйСимволПереноса + " первая страница второй столбец " + Строк12 + " стр. ";
	//КонецЕсли;
	//
	//Если Строк21 > МаксимальноеКвоСтрокКолонки Тогда
	//	ТекстПредупреждения = ТекстПредупреждения + глПравильныйСимволПереноса + " вторая страница первый столбец " + Строк21 + " стр. ";
	//КонецЕсли;
	//
	//Если Строк22 > МаксимальноеКвоСтрокКолонки Тогда
	//	ТекстПредупреждения = ТекстПредупреждения + глПравильныйСимволПереноса + " вторая страница второй столбец " + Строк22 + " стр. ";
	//КонецЕсли;
	//
	//Если ТекстПредупреждения <> "Превышение (55 строки) " Тогда		
	//	Возврат ТекстПредупреждения;		
	//КонецЕсли;		
КонецФункции // ВернутьКритическоеЧислоСтрокПерваяКолонка()

//====================================================================== //--- УМК Сандомирский В.Ю. (20.10.14)
Процедура ПриРедактированииНовойСтроки()
	ДляВакуума = ргВак - 1;
КонецПроцедуры

Процедура ПриУстановкеОтбора(ИмяРекв, Значение)	
	Если ИмяРекв = "ДляВаккума" Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура НастройкаПорядкаВыводаВУ()
	Если ТекущийЭлемент().Выбран() = 1 Тогда
		ОткрытьФорму("Обработка.НастройкаПорядкаВыводаВУ", ТекущийЭлемент());
	КонецЕсли;
КонецПроцедуры // НастройкаПорядкаВыводаВУ

//======================================================================
Процедура ЗаполнитьПоГРВУ()
	Если ТекущийЭлемент().Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	Если ПустоеЗначение(ТекущийЭлемент().ГруппаТМЦ) = 1 Тогда
		 Возврат;
	КонецЕсли;
	
	
	СпрГРВУ = СоздатьОбъект("Справочник.УМК_ГруппировкиВидовУпаковки");
	Если СпрГРВУ.Выбрать("Выберите группировку", "ФормаСписка") = 1 Тогда
		СпрСтрокиПрайса = СоздатьОбъект("Справочник.УМК_СтрокиПрайсЛиста");
		СпрСтрокиПрайса.ИспользоватьВладельца(ТекущийЭлемент());
		
		СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
		СпрТМЦ.ВыбратьЭлементыПоРеквизиту("ГруппировкаРазрешенныхВидовУпаковки", СпрГРВУ.ТекущийЭлемент(), 0, 0);
		Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
			Если СпрСтрокиПрайса.НайтиПоРеквизиту("ТМЦ",СпрТМЦ,0) <> 1 Тогда
				СпрСтрокиПрайса.Новый();
				СпрСтрокиПрайса.ТМЦ 			= СпрТМЦ.ТекущийЭлемент();
				СпрСтрокиПрайса.Записать();					
			КонецЕсли;
		КонецЦикла;
		
		ЗаполнитьСписокСтрокПрайса();
	КонецЕсли;
КонецПроцедуры // ЗаполнитьПоГРВУ()

//======================================================================
Процедура ОткрытьНаименованияЛистов()
	//КФормы = Да;
	КФормы = ргВак;
	ОткрытьФорму("Справочник.НаименованияЛистовПриёмки.ФормаСписка", КФормы);
КонецПроцедуры // ОткрытьНаименованияЛистов

//======================================================================
Процедура НастройкаШириныКолонок()
	ОткрытьФормуМодально("Обработка.НастройкаШириныКолонок");
КонецПроцедуры //

//======================================================================
Процедура ПоискНовых()
	ОткрытьФорму("Обработка.ПоискНовыхЭлементовВакиПрайса", ргВак);
КонецПроцедуры // ПоискНовых

//======================================================================
Процедура ОбновленияПорядкаВУ()
	Если Вопрос("Запустить процесс обновления порядка сортировки?", "Да+Нет") = "Да" Тогда
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("Таблица");
		Таб.ВывестиСекцию("Шапка");
		НачатьТранзакцию();
		
		СпрСП = СоздатьОбъект("Справочник.УМК_ПрайсЛист");
		СпрСП.ВыбратьЭлементыПоРеквизиту("ДляВакуума", 1, 0, 0);
		Пока СпрСП.ПолучитьЭлемент() = 1 Цикл
			Если СпрСП.ПометкаУдаления() = 0 Тогда
				СписокВУ = глПолучитьСписокДопустимыхВидовУпаковкиДляВакуума(СпрСП.ТекущийЭлемент());
				СписВУУжеЕсть = СоздатьОбъект("СписокЗначений");
				
				// посмотрим, что нужно удалить. Это виды упаковок, которых нет в ТМЦ, входящих в данную группу
				СпрСорт = СоздатьОбъект("Справочник.ПорядокВыводаУпаковок");
				СпрСорт.ИспользоватьВладельца(СпрСП.ТекущийЭлемент());
				СпрСорт.ВыбратьЭлементы();
				Пока СпрСорт.ПолучитьЭлемент() = 1 Цикл
					Если СписокВУ.НайтиЗначение(СпрСорт.ВидУпаковки) = 0 Тогда
						СтатусП = "Удален";
						Таб.ВывестиСекцию("Строка");
						СпрСорт.Удалить(1);
					Иначе
						СписВУУжеЕсть.ДобавитьЗначение(СпрСорт.ВидУпаковки);
					КонецЕсли;
				КонецЦикла;
				
				// теперь наоборот, глянем, что есть нового
				Для Инд = 1 По СписокВУ.РазмерСписка() Цикл
					Зн = СписокВУ.ПолучитьЗначение(Инд);
					Если СписВУУжеЕсть.НайтиЗначение(Зн) = 0 Тогда
						СпрСорт.Новый();
						СпрСорт.Наименование = Строка(Зн);
						СпрСорт.ВидУпаковки = Зн;
						СпрСорт.Записать();
						СтатусП = "Добавлен";
						Таб.ВывестиСекцию("Строка");
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Если Вопрос("Подтвердить?", "Да+Нет") = "Да" Тогда
			ЗафиксироватьТранзакцию();
			Результат = "Изменения выполнены";
		Иначе
			ОтменитьТранзакцию();
			Результат = "Изменения НЕ выполнены";
		КонецЕсли;
		
		Таб.ВывестиСекцию("Результат");
		
		Таб.ТолькоПросмотр(1);
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.Показать();
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Функция Сортировка()
	Если ПустоеЗначение(ТекущийЭлемент()) = 0 Тогда
		Если ТекущийЭлемент().Сортировка = 1 Тогда
			Возврат "Как в спр.";
		ИначеЕсли ТекущийЭлемент().Сортировка = 2 Тогда
			Возврат "Цена убыв.";
		ИначеЕсли ТекущийЭлемент().Сортировка = 3 Тогда
			Возврат "Цена возр.";
		ИначеЕсли ТекущийЭлемент().Сортировка = 4 Тогда
			Возврат "Наим.";
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
КонецФункции // Сортировка

//======================================================================
Функция ПечатьУп()
	Если ПустоеЗначение(ТекущийЭлемент()) = 0 Тогда
		Если ТекущийЭлемент().ОтображениеУпаковки = 1 Тогда
			Возврат "Если нет без";
		ИначеЕсли ТекущийЭлемент().ОтображениеУпаковки = 2 Тогда
			Возврат "Если есть по умолч.";
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
КонецФункции // ПечатьУп

//======================================================================
Процедура ДанныеИзПрайса()
	Если ПустоеЗначение(ТекущийЭлемент()) = 0 Тогда
		Если Вопрос("Заполнить реквизиты из прайс-листа?", "Да+Нет") = "Да" Тогда
			СтарТМЦ = "";
			НачатьТранзакцию();
			СпрСтрокиПрайса = СоздатьОбъект("Справочник.УМК_СтрокиПрайсЛиста");
			СпрСтрокиПрайсаПрайс = СоздатьОбъект("Справочник.УМК_СтрокиПрайсЛиста");
			
			СпрСтрокиПрайса.ПорядокКодов();
			СпрСтрокиПрайса.ИспользоватьВладельца(ТекущийЭлемент());
			СпрСтрокиПрайса.ВыбратьЭлементы();
			Пока СпрСтрокиПрайса.ПолучитьЭлемент() = 1 Цикл
				Если ПустоеЗначение(СпрСтрокиПрайса.ТМЦ) = 0 Тогда
					Если СтарТМЦ <> СпрСтрокиПрайса.ТМЦ Тогда
						ТекЭлемент = "";
						СпрСтрокиПрайсаПрайс.ВыбратьЭлементыПоРеквизиту("ТМЦ", СпрСтрокиПрайса.ТМЦ, 0, 0);
						Пока СпрСтрокиПрайсаПрайс.ПолучитьЭлемент() = 1 Цикл
							Если СпрСтрокиПрайсаПрайс.ПометкаУдаления() = 0 Тогда
								Если СпрСтрокиПрайсаПрайс.Владелец.ДляВакуума = 0 Тогда
									ТекЭлемент = СпрСтрокиПрайсаПрайс.ТекущийЭлемент();
									Прервать;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
						СтарТМЦ = СпрСтрокиПрайса.ТМЦ;
					КонецЕсли;
					
					Если ПустоеЗначение(ТекЭлемент) = 0 Тогда
						СпрСтрокиПрайса.НаименованиеДляПечати = ТекЭлемент.НаименованиеДляПечати;
						СпрСтрокиПрайса.Гатунок = ТекЭлемент.Гатунок;
						СпрСтрокиПрайса.Оболочка = ТекЭлемент.Оболочка;
						СпрСтрокиПрайса.Записать();
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;			
			
			ЗафиксироватьТранзакцию();
			ЗаполнитьСписокСтрокПрайса();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //

СписокСтрокПрайса.НоваяКолонка("FormEx_ПланРаскраски");
СписокСтрокПрайса.НоваяКолонка("Ссылка",				"Справочник.УМК_СтрокиПрайсЛиста",,,,0);
СписокСтрокПрайса.НоваяКолонка("ТМЦ",					"Справочник.ТМЦ",,,"ТМЦ",20);
СписокСтрокПрайса.НоваяКолонка("ВидУпаковки",			"Справочник.ВидыУпаковки",,,"ВидыУпаковки",7);
СписокСтрокПрайса.НоваяКолонка("НаименованиеДляПечати",	"Строка",200,,"Наименование для печати",20);
СписокСтрокПрайса.НоваяКолонка("Гатунок",				"Перечисление.УМК_Гатунки",,,"Гатунок",3);
СписокСтрокПрайса.НоваяКолонка("Оболочка",				"Справочник.УМК_Оболочки",,,"Оболочка",10);
СписокСтрокПрайса.НоваяКолонка("СрокХранения",			"Справочник.УМК_СрокиХранения",,,"Срок хранения",7);
СписокСтрокПрайса.НоваяКолонка("ЦенаПовышена",			"Число",1,,"Повыш.",3);
СписокСтрокПрайса.НоваяКолонка("ЦенаСнижена",			"Число",1,,"Сниж.",3);
СписокСтрокПрайса.НоваяКолонка("НетБезУпаковки",	"Число",1,,"Нет Без уп.",4);
СписокСтрокПрайса.НоваяКолонка("Цена", "Число");
СписокСтрокПрайса.НоваяКолонка("НаименованиеСортировки", "Строка");


СписокСтрокПрайса.ВыводитьПиктограммы("ЦенаПовышена");
СписокСтрокПрайса.ВыводитьПиктограммы("ЦенаСнижена");
СписокСтрокПрайса.ВыводитьПиктограммы("НетБезУпаковки");

СписокСтрокПрайса.ВидимостьКолонки("Ссылка",0);
СписокСтрокПрайса.ВидимостьКолонки("ВидУпаковки", 0);
СписокСтрокПрайса.ВидимостьКолонки("Цена",0);
СписокСтрокПрайса.ВидимостьКолонки("НаименованиеСортировки",0);
СписокСтрокПрайса.ВидимостьКолонки("FormEx_ПланРаскраски",0);;

ГруппаТМЦ.ВыборГруппы(1);

МаксимальноеКвоСтрокКолонки = 55;
ргВак = 1;
//--- 