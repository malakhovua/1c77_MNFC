Перем ОстаткиТоваров;
Перем КатегорияЦен;

Перем СтарыйТовар, СтараяИнформационнаяСтрока;

//******************************************************************************
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ

Функция Сформировать_информационную_строку()
	Перем Рез;
	ТекТовар = ТекущийЭлемент();
	Если (ТекТовар.ЭтоГруппа()=0) И ((ПоказатьОстаткиЦену=0) ИЛИ (ИерархическийСписок()=0)) Тогда
		Если СтарыйТовар<>ТекТовар Тогда
			// инф. строку показываем в случае, если не показываем колонки
			ОстТоваров = СоздатьОбъект("Регистр.Остатки");
			ТекТовар = ТекущийЭлемент();
			ВремКолво = ОстТоваров.СводныйОстаток(,ТекТовар,,"ОстатокТовара");
			Если ТекТовар.ЕдиницаПоУмолчанию.Коэффициент > 1 Тогда
				ВремКолво = ВремКолво / ТекТовар.ЕдиницаПоУмолчанию.Коэффициент;
			КонецЕсли;
			Рез = "Остаток: "+Формат(ВремКолво, глФорматКоличестваВформах)+" "+ТекТовар.ЕдиницаПоУмолчанию.Единица;
			ИнформационнаяСтрока = "Остаток: "+Формат(ВремКолво, глФорматКоличестваВформах)+" "+ТекТовар.ЕдиницаПоУмолчанию.Единица;
			СтарыйТовар = ТекТовар;
			СтараяИнформационнаяСтрока = ИнформационнаяСтрока;
		Иначе
			ИнформационнаяСтрока = СтараяИнформационнаяСтрока;
		КонецЕсли;
	Иначе
		ИнформационнаяСтрока="";
	КонецЕсли;
	
	Возврат ИнформационнаяСтрока;
КонецФункции

//******************************************************************************
Процедура ЗаполнитьКЭШ(Группа)
	Перем СписокТоваров, СпрТовары;

	ОстаткиТоваров.УдалитьСтроки();
	ОстТоваров = СоздатьОбъект("Регистр.Остатки");

	// Получим список товаров группы
	СписокТоваров = СоздатьОбъект("СписокЗначений");
	СпрТовары = СоздатьОбъект("Справочник.ТМЦ");
	СпрТовары.ИспользоватьРодителя(Группа);
	СпрТовары.ВключатьПодчиненные(0);
	СпрТовары.ВыбратьЭлементы();
	Пока СпрТовары.ПолучитьЭлемент()=1 Цикл
	    ОстаткиТоваров.НоваяСтрока();
		ТекТовар = СпрТовары.ТекущийЭлемент();
		ОстаткиТоваров.Элемент = ТекТовар;    
		Если СпрТовары.ЭтоГруппа() = 1 тогда
			Продолжить;
		КонецЕсли;	
		Если ПустоеЗначение(КатегорияЦен)=0 Тогда
			ВремЦена = глВернутьЦену(СпрТовары.ТекущийЭлемент(),КатегорияЦен);
			Если ПустоеЗначение(ВремЦена)=0 Тогда
				ЕдиницаЦены = ВремЦена.Единица.Получить(РабочаяДата());
			    ОстаткиТоваров.Цена = ВремЦена.Цена.Получить(РабочаяДата());
				Если ЕдиницаЦены<>СпрТовары.ЕдиницаПоУмолчанию Тогда
				    ОстаткиТоваров.Цена = ОстаткиТоваров.Цена*СпрТовары.ЕдиницаПоУмолчанию.Коэффициент/ЕдиницаЦены.Коэффициент;
				КонецЕсли;
				ОстаткиТоваров.Валюта = ВремЦена.Валюта.Получить(РабочаяДата());
			КонецЕсли;
		КонецЕсли;
		ВремКолво = ОстТоваров.СводныйОстаток(,ТекТовар,,"ОстатокТовара");
		Если ТекТовар.ЕдиницаПоУмолчанию.Коэффициент > 1 Тогда
		    ВремКолво = ВремКолво / ТекТовар.ЕдиницаПоУмолчанию.Коэффициент;
		КонецЕсли;
		ОстаткиТоваров.Количество = ВремКолво;
	КонецЦикла;
КонецПроцедуры

//******************************************************************************
Функция ПолучитьЗначениеКолонки(Колонка)
	Если (ПоказатьОстаткиЦену=0) ИЛИ (ИерархическийСписок()=0) ИЛИ (ТекущийЭлемент().ЭтоГруппа()=1) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекТовар = ТекущийЭлемент();
	Поз=0;
	Если ОстаткиТоваров.НайтиЗначение(ТекТовар,Поз,"Элемент")=0 Тогда
	    // Не нашли. Вернем пустую строку
		Возврат "";
	КонецЕсли;
	
    Рез=ОстаткиТоваров.ПолучитьЗначение(Поз,Колонка);
	Если Колонка="Количество" Тогда
	    Возврат СокрЛ(Формат(Рез,глФорматКоличестваВформах));
	//ИначеЕсли Колонка="Цена" Тогда
	//	Возврат СокрЛ(Формат(Рез,"Ч15.2"));
	//ИначеЕсли Колонка="Валюта" Тогда
	//	Возврат Рез;
	КонецЕсли;
	Возврат "";
КонецФункции
//******************************************************************************
Процедура УправлениеКолонками()
	Форма.Остаток.Видимость(ПоказатьОстаткиЦену);
	Если НЕ((ПоказатьОстаткиЦену=0) ИЛИ (ИерархическийСписок()=0)) Тогда
	    ЗаполнитьКЭШ(Родитель);
	КонецЕсли;
	
	СтарыйТовар = 0;
	Форма.Обновить();
КонецПроцедуры

//******************************************************************************
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

//******************************************************************************
Процедура ВыбратьГруппу()
	Если ПустоеЗначение(ТекущийЭлемент()) = 0 Тогда
		Если ЭтоГруппа() = 0 Тогда
			Предупреждение("Выберите группу!")
		Иначе
			Форма.ВыполнитьВыбор(ТекущийЭлемент());
		КонецЕсли;
	Иначе
		Предупреждение("Не выбран элемент!");
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ПриОткрытии()	// Предопределенная процедура
	ПоказатьОстаткиЦену=ВосстановитьЗначение("Подбор_ПоказыватьОЦ");
	УправлениеКолонками();
	глУстановитьНачальнуюГруппуПользователя(Контекст, глГруппыДоступаПродукции);
КонецПроцедуры

//---------------------------
Процедура ПриНачалеРедактированияСтроки()	// Предопределенная процедура
	// практически все элементы справочника имею много реквизитов.
	// поэтому редактировать элемент или создавать новый в списке
	// является нецелесообразным.
	СтатусВозврата(0);
КонецПроцедуры

//---------------------------
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр)	// Предопределенная процедура
	Перем КонтекстФормы;
	Если ИдентЭлемДиалога = "РодительДляПрайса" Тогда
		// нужно открыть справочник единиц измерения для выбора 
		// только для текущего товара
		ОткрытьПодбор("Справочник.Прайс_лист","ДляВыбора",КонтекстФормы,0,РодительДляПрайса);
		КонтекстФормы.ВыборГруппы(1);
		ФлагСтандОбр = 0;
	//ИначеЕсли ИдентЭлемДиалога = "<ЭелементДиалога2>" Тогда
	КонецЕсли;
	
КонецПроцедуры	// ПриНачалеВыбораЗначения

//---------------------------
Процедура ОбработкаВыбораЗначения(ВыбЗнач,ИдентЭлемДиалога, ФлагСтандОбр)	// Предопределенная процедура
	Если ИдентЭлемДиалога = "РодительДляПрайса" Тогда
		Если ВыбЗнач.ЭтоГруппа() = 0 Тогда
			РодительДляПрайса = ВыбЗнач.Родитель;
		Иначе
			РодительДляПрайса = ВыбЗнач;
		КонецЕсли;
		ФлагСтандОбр = 0;
//	ИначеЕсли ИдентЭлемДиалога = "<ЭелементДиалога2>" Тогда
	КонецЕсли;
КонецПроцедуры	// ОбработкаВыбораЗначения

//******************************************************************************
Процедура ПриСменеИерархии(Способ)
	Если НЕ((ПоказатьОстаткиЦену=0) ИЛИ (Способ=0)) Тогда
		ЗаполнитьКЭШ(Родитель);
	КонецЕсли;
КонецПроцедуры
//******************************************************************************
Процедура ПриВыбореРодителя(Элемент)
	Если НЕ((ПоказатьОстаткиЦену=0) ИЛИ (ИерархическийСписок()=0)) Тогда
		ЗаполнитьКЭШ(Элемент);
	КонецЕсли;
	Если глПользователь.НакладыватьФильтрыПриОткрытии = 1 Тогда
		СтатусВозврата(глГруппыДоступаПродукции.Принадлежит(Элемент));
	КонецЕсли;		
КонецПроцедуры
//********************************************************************************
Процедура ПриЗакрытии()
	СохранитьЗначение("Подбор_ПоказыватьОЦ", ПоказатьОстаткиЦену);
КонецПроцедуры

//******************************************************************************
// ТЕЛО МОДУЛЯ
ОстаткиТоваров = СоздатьОбъект("ТаблицаЗначений");
ОстаткиТоваров.НоваяКолонка("Элемент","Справочник.Товары");
ОстаткиТоваров.НоваяКолонка("Количество","Число",10,3);
