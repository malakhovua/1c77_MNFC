Перем НачФирма;
Перем спМетодыРасчетов;
Перем ПерваяЗапись; // Флаг того, что записывается новый элемент.
                    // Используется для того, что бы запрещать ручное редактирование периодических реквизитов 

// ===============================
Процедура ЗаполнитьФайлы()
	Перем КомлектующиеНабора;
	Перем Индекс;
	
	Если Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;

	ФЛ = СоздатьОбъект("Справочник.ФайлыНА");
	ФЛ.ИспользоватьВладельца(ТекущийЭлемент());
	ФЛ.ВыбратьЭлементы();
	Индекс = 0; 
	Файлы.УдалитьСтроки();
	Пока ФЛ.ПолучитьЭлемент()=1 Цикл
		Если ФЛ.ПометкаУдаления()=1 Тогда
		    Продолжить;
		КонецЕсли;

	    Индекс = Индекс + 1;
		Файлы.НоваяСтрока(Индекс);
		Файлы.Ссылка = ФЛ.ТекущийЭлемент();
		Файлы.Категория = ФЛ.Категория;
		Файлы.Описание = ФЛ.Наименование;
	КонецЦикла;
	
	Файлы.Сортировать("Категория,Описание");
КонецПроцедуры	// ЗаполнитьСписокКомплектующих      

// ======================================
Процедура ИзмКод()
	ИнвенНомер = глНомерБезПрефикса(Код);
КонецПроцедуры 

// ======================================
Процедура ИзмФирма()
	Если Фирма.Выбран() = 1 Тогда
		УстановитьНовыйКод(СокрЛП(Фирма.Префикс)+"-");
		ИзмКод();
	КонецЕсли;
КонецПроцедуры 
                    
// ===============================
Процедура ИсторияЗначений()
	глРедактироватьИсториюЗначений(Контекст, "",
	"История периодических реквизитов (" + ТекущийЭлемент() + ")", 1, 0);
КонецПроцедуры //ИсторияЗначений

// ===============================
Процедура ИзмНаименование()
	Если СокрЛП(ПолнНаименование) = "" Тогда
		ПолнНаименование = Наименование;
	КонецЕсли
КонецПроцедуры

// ===============================
Процедура ЗаполнитьСписокМетодовРасчетов(НА);
	// создадим список методов расчетов износа
	спМетодыРасчетов.УдалитьВсе();
	Если НА = Перечисление.ВидыНеоборотныхАктивов.Гудвил Тогда
		спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("ПрямолинейноеСписание"));
	ИначеЕсли НА <> Перечисление.ВидыНеоборотныхАктивов.ДругиеНеоборотныеМатериальныеАктивы Тогда
		спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("ПрямолинейноеСписание"));
		спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("УменьшениеОстатка"));
		спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("УскоренноеУменьшениеОстатка"));
		спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("СуммЕдиниц"));
		спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("Кумулятивный"));
		спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("Налоговый"));
	Иначе
		спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("ПрямолинейноеСписание"));
		спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("СуммЕдиниц"));
		Если (Счет.Код = "111") или (Счет.Код = "112") Тогда 
			//Малоценные необоротные материальные активы или библиотечные фонды
			спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("ПервыйИПоследнийМесяц"));	
			спМетодыРасчетов.ДобавитьЗначение(Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("ПервыйМесяц"));	
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры	

// ===============================
Процедура ИзмСчет()
	Если Счет.ВидСубконто(3) <> ВидыСубконто.НеоборотныеАктивы Тогда
		Предупреждение("Выберите счет с аналитикой по необоротным активам!");
	    Счет = глВосстановитьЗначение(Контекст,"Счет");
		Возврат;
	КонецЕсли;
	
	Ошибка = 0;
	Если ВидНеоборотногоАктива = ОсновныеСредства Тогда
	    Если Сред(Счет.Код,1,2) <> "10" Тогда
			Ошибка = 1;
		КонецЕсли;
	ИначеЕсли ВидНеоборотногоАктива = Перечисление.ВидыНеоборотныхАктивов.ДругиеНеоборотныеМатериальныеАктивы Тогда
	    Если Сред(Счет.Код,1,2) <> "11" Тогда
			Ошибка = 1;
		КонецЕсли;
	ИначеЕсли ВидНеоборотногоАктива = НМА Тогда
	    Если Сред(Счет.Код,1,2) <> "12" Тогда
			Ошибка = 1;
		КонецЕсли;
	ИначеЕсли ВидНеоборотногоАктива = Перечисление.ВидыНеоборотныхАктивов.Гудвил Тогда
		Если Сред(Счет.Код,1,2) <> "19" Тогда
			Ошибка = 1;
		КонецЕсли;
	КонецЕсли;
	Если Ошибка > 0 Тогда
		Предупреждение("Недопустимый счет для данного вида необоротного актива!");
	    Счет = глВосстановитьЗначение(Контекст,"Счет");
		Возврат;
	КонецЕсли;
	
	Если ((Счет.Код <> "111") или (Счет.Код <> "112")) и ((МетодРасчетаИзноса <> Перечисление.МетодыРасчетаИзноса.ПрямолинейноеСписание) и (МетодРасчетаИзноса <> Перечисление.МетодыРасчетаИзноса.СуммЕдиниц) и (МетодРасчетаИзноса <> Перечисление.МетодыРасчетаИзноса.Кумулятивный)) Тогда
		МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.ЗначениеПоИдентификатору("ПрямолинейноеСписание");
	КонецЕсли;
		
	ЗаполнитьСписокМетодовРасчетов(ВидНеоборотногоАктива);
КонецПроцедуры                    

// ======================================
Процедура ИзмСчетЗатрат()
	Если глПроверитьСчетЗатрат(СчетЗатрат,1)=0 Тогда
		Если ИспользоватьСчетаРасходов = Класс8 Тогда
			СчетЗатрат = СчетПоКоду("83"+Строка(Число(Сред(Счет.Код,1,2))-9));
		Иначе
			СчетЗатрат = СчетПоКоду("91");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

// ===============================
Процедура ИзмВидНеоборотногоАктива()
	СчетИзменен = 0;
	Если ВидНеоборотногоАктива = ОсновныеСредства Тогда
	    Если Сред(Счет.Код,1,2) <> "10" Тогда
			Счет = СчетПоКоду("10.41");
			СчетИзменен = 1;
		КонецЕсли;
	ИначеЕсли ВидНеоборотногоАктива = Перечисление.ВидыНеоборотныхАктивов.ДругиеНеоборотныеМатериальныеАктивы Тогда
	    Если Сред(Счет.Код,1,2) <> "11" Тогда
			Счет = СчетПоКоду("11.7");
			СчетИзменен = 1;
		КонецЕсли;
		МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.ПрямолинейноеСписание;
	ИначеЕсли ВидНеоборотногоАктива = НМА Тогда
	    Если Сред(Счет.Код,1,2) <> "12" Тогда
			Счет = СчетПоКоду("12.7");
			СчетИзменен = 1;
		КонецЕсли;
	ИначеЕсли ВидНеоборотногоАктива = Перечисление.ВидыНеоборотныхАктивов.Гудвил Тогда
		Если Сред(Счет.Код,1,2) <> "19" Тогда
			Счет = СчетПоКоду("19.1");
			СчетИзменен = 1;
		КонецЕсли;
		МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.ПрямолинейноеСписание;
	КонецЕсли;
	Если СчетИзменен = 1 Тогда
	    Предупреждение("Счет установлен исходя из вида необоротного актива!");
	КонецЕсли;
	ЗаполнитьСписокМетодовРасчетов(ВидНеоборотногоАктива);
	ИзмСчет();
КонецПроцедуры

// ===============================
Процедура НарисоватьСлойДополнительно()
	// установим видимость реквизитов
	МетодРасчетаИзносаСтр = ?(МетодРасчетаИзноса.Идентификатор()="Кумулятивный","ПрямолинейноеСписание",Строка(МетодРасчетаИзноса.Идентификатор()));
	Слои = "Дополнительный,"+МетодРасчетаИзносаСтр;
	Форма.Закладки.УстановитьЗначение(2,Слои,"Дополнительно");
	Форма.ИспользоватьСлой("Общий,"+Слои,2);
	Если (МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.УменьшениеОстатка) или 
	     (МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.УскоренноеУменьшениеОстатка)	Тогда
		Форма.ЛиквидационнаяСтоимость.Видимость(1);
		Форма.тЛиквидационнаяСтоимость.Видимость(1);
		Форма.СрокИспользования.Видимость(1);
		Форма.тСрокИспользования.Видимость(1);
		Форма.тНормаАмортизации_Год.Видимость(1);
		Форма.НормаАмортизации_Год.Видимость(1);
	ИначеЕсли МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.СуммЕдиниц Тогда
		Форма.ЛиквидационнаяСтоимость.Видимость(1);
		Форма.тЛиквидационнаяСтоимость.Видимость(1);  
	ИначеЕсли (МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.Налоговый) и
			  (ВидНеоборотногоАктива = НМА) Тогда
		Форма.СрокИспользования.Видимость(1);   
		Форма.тСрокИспользования.Видимость(1);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	Если Номер = 2 Тогда
		НарисоватьСлойДополнительно();
	ИначеЕсли Номер = 3 Тогда
	    Форма.ИспользоватьСлой("Общий,Файлы",2);
	Иначе
		Форма.ИспользоватьСлой("Общий,Основной",2);
		Если МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.СуммЕдиниц Тогда
		    Форма.ЛиквидационнаяСтоимость.Видимость(0);
		    Форма.тЛиквидационнаяСтоимость.Видимость(0);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	ПерваяЗапись = 1;
	Если ПризнакКопирования = 1 Тогда
		ИзмФирма();
		Возврат;
	КонецЕсли;
	Фирма = глВосстановитьЗначение(,"БазФирма");
	ИзмФирма();
	ВидНеоборотногоАктива = глВосстановитьЗначение("НеоборотныеАктивы","ВидНеоборотногоАктива");
	ВидДеятельности = глВосстановитьЗначение(,"БазВидДеятельности");
	БазЕдиница = глВосстановитьЗначение("НеоборотныеАктивы","БазЕдиница",Константа.БазЕдиница);
	Счет = глВосстановитьЗначение("НеоборотныеАктивы","Счет",СчетПоКоду("10.41"));
	СчетЗатрат = глВосстановитьЗначение("НеоборотныеАктивы","СчетЗатрат");
	ВидЗатрат = глВосстановитьЗначение("НеоборотныеАктивы","ВидЗатрат");
	МетодРасчетаИзноса = глВосстановитьЗначение("НеоборотныеАктивы","МетодРасчетаИзноса",Перечисление.МетодыРасчетаИзноса.ПрямолинейноеСписание);
	Группа = глВосстановитьЗначение("НеоборотныеАктивы","Группа");

	Если (СчетЗатрат.Выбран() = 0) или (глПроверитьСчетЗатрат(СчетЗатрат,0)=0) Тогда
		Если ИспользоватьСчетаРасходов = Класс8 Тогда
			СчетЗатрат = СчетПоКоду("831");
		Иначе
			СчетЗатрат = СчетПоКоду("91");
		КонецЕсли;
	КонецЕсли;
	
	Производственное = 1;
	Группа = ?(Группа = 0, 1, Группа);
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	Если ((МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.УменьшениеОстатка)
	Или (МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.УскоренноеУменьшениеОстатка))
	И (СрокИспользования%12 <> 0) Тогда
		Если Вопрос("Метод расчета износа уменьшением остатка рассчитан на работу
			|с целым числом лет, а указанный срок использования не кратен 12!
			|Записать элемент?", "Да+Нет") = "Нет" Тогда
			СтатусВозврата(0);
		КонецЕсли;
	КонецЕсли;
	
	Если (ВидДеятельности.ПозаказноеПроизводство = Да) и (Продукция.Выбран() = 1) Тогда
		глКомментарий("Затратная аналитика ""Продукция"" должна указываться только, если вид деятельности не относится к позаказному производтву!",0,,"!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	//Проверка уникальности инвентарного номера
	Спр = СоздатьОбъект("Справочник.НеоборотныеАктивы");  
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		Если Спр.ЭтоГруппа() = 1 Тогда
		    Продолжить;
		КонецЕсли;     
		
		Если Спр.Фирма <> Фирма Тогда
		    Продолжить;
		КонецЕсли;     
		
		Если (Спр.ИнвенНомер = ИнвенНомер) И (ПустоеЗначение(ИнвенНомер)=0)
		И (Спр.ТекущийЭлемент() <> ТекущийЭлемент()) Тогда
	    	глКомментарий("Уже есть необоротный актив с таким инвентарным номером!",0,,"!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЦикла;

	Если (глЗаписьПериодическихРеквизитов(Контекст) = 0)  или (глПроверитьСчетЗатрат(СчетЗатрат,2)=0) Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	глСохранитьЗначение("НеоборотныеАктивы","ВидНеоборотногоАктива", ВидНеоборотногоАктива);
	глСохранитьЗначение("НеоборотныеАктивы","БазЕдиница", БазЕдиница);
	глСохранитьЗначение("НеоборотныеАктивы","Счет", Счет);
	глСохранитьЗначение("НеоборотныеАктивы","СчетЗатрат", СчетЗатрат);
	глСохранитьЗначение("НеоборотныеАктивы","ВидЗатрат", ВидЗатрат);
	глСохранитьЗначение("НеоборотныеАктивы","МетодРасчетаИзноса", МетодРасчетаИзноса);
	глСохранитьЗначение("НеоборотныеАктивы","Группа", Группа);
	
	//--- УМК Сандомирский В.Ю, Закоментил 24.04.14
	//глОтправитьУведомлениеЭП("Справочник.НеоборотныеАктивы", "Необоротные активы: уведомление об изменении", ?(ТекущийЭлемент().Выбран() = 1, "Изменен","Добавлен новый") + " элемент справочника Необоротные активы: " + Наименование + " пользователь: " + Строка(глПользователь));	

КонецПроцедуры                    

// ===============================
Процедура ПриОткрытии()
	СохранениеПериодическихРеквизитов(2, "*");
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.Закладки.ДобавитьЗначение("Файлы","Файлы");
	Форма.ИспользоватьСлой("Основной,Общий",2);
	
    НормаАмортизации_Год = НормаАмортизации * 12;
	
	спМетодыРасчетов = СоздатьОбъект("СписокЗначений");
	ЗаполнитьСписокМетодовРасчетов(ВидНеоборотногоАктива);
	Если Выбран() = 1 Тогда
		НачФирма = Фирма;
	КонецЕсли;
	ЗаполнитьФайлы();
КонецПроцедуры

// ===============================
Функция УстДоступность()
	фОС = 1;
	фНалогУч = ?(МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.Налоговый,1,0);
    Форма.Группа.Доступность(?((Производственное + фНалогУч)>1,1,(Производственное + фНалогУч)));
    Форма.Группа2.Доступность(?((Производственное + фНалогУч)>1,1,(Производственное + фНалогУч)));
    Форма.Группа3.Доступность(?((Производственное + фНалогУч)>1,1,(Производственное + фНалогУч)));
	Форма.Группа4.Доступность(?((Производственное + фНалогУч)>1,1,(Производственное + фНалогУч)));
	Если (ПустоеЗначение(Фирма) = 0) И (Фирма = НачФирма) Тогда
	    Форма.Фирма.Доступность(0);
	КонецЕсли;
	Если Файлы.КоличествоСтрок() = 0 Тогда
		Форма.кИзменитьФайл.Доступность(0);
		Форма.кУдалитьФайл.Доступность(0);
		Форма.кОткрытьФайл.Доступность(0);
	Иначе
		Форма.кИзменитьФайл.Доступность(1);
		Форма.кУдалитьФайл.Доступность(1);
		Форма.кОткрытьФайл.Доступность(1);
	КонецЕсли;
	Если Файлы.ТекущаяСтрока() <> 0 Тогда
		Если Файлы.Ссылка.Картинка = 1 Тогда
		    Путь = СокрЛП(Файлы.Ссылка.Путь);
			сКартинка.Загрузить(Путь);
		Иначе
			Файлы.ВыбратьСтроки();
			Пока Файлы.ПолучитьСтроку() = 1 Цикл
				Если Файлы.Ссылка.Картинка = 1 Тогда
				    Путь = СокрЛП(Файлы.Ссылка.Путь);
					Если Путь <> "" Тогда
						сКартинка.Загрузить(Путь);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	// Запрещено ручное редактирование периодических реквизитов, если справочник был записан
	Если ПерваяЗапись = 0 Тогда
	    Если Найти("Счет,СчетЗатрат,ВидДеятельности,ВидЗатрат,Продукция,Состояние",Рекв) > 0 Тогда
			Предупреждение("Для изменения данного реквизита рекомедуется пользоваться" + РазделительСтрок +
						   "документом ""Изменение параметров необоротных активов"".");
		КонецЕсли;  
	КонецЕсли;                                           
	
	Если Рекв = "МетодРасчетаИзноса" Тогда
		Если спМетодыРасчетов.РазмерСписка() = 0 Тогда
			Возврат;
		КонецЕсли;
		Флаг = 0;
		спМетодыРасчетов.ВыбратьЗначение(МетодРасчетаИзноса,,,,2);
		НарисоватьСлойДополнительно();
	КонецЕсли;  
КонецПроцедуры  

//=================================
Процедура Печать()
	Перем ВыбЗначение;
	ВариантыПечати = СоздатьОбъект("СписокЗначений");
	ВариантыПечати.ДобавитьЗначение(1,	"Типовая форма ОЗ-6");
	ВариантыПечати.ДобавитьЗначение(2,	"Произвольная форма");
	Если ВариантыПечати.ВыбратьЗначение(ВыбЗначение,"",,,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;  
	
	глРасшифровка = СоздатьОбъект("СписокЗначений");
	глФлагРасшифровки = 1;
	глОбновить = 0;
	
    глРасшифровка.Установить("Объект", 				"КарточкаНеоборАктива");
	глРасшифровка.Установить("ДатаОтчета", 			РабочаяДата());
	глРасшифровка.Установить("ВыбНеоборотныйАктив",	ТекущийЭлемент());
	глРасшифровка.Установить("спФормПечати", 		ВыбЗначение);

    ОткрытьФорму("Отчет.КарточкаНеоборАктива#");
	глФлагРасшифровки = 0;
	глРасшифровка = 0;
	глОбновить = 0;
КонецПроцедуры

//******************************************************************************
// ОБРАБОТКА СПИСКА ФАЙЛОВ

// ===============================
Процедура ДобавитьФайл()
	Перем ФормаЗаписи;
	Если Выбран() = 0 Тогда
		Предупреждение("Элемент сначала следует записать!");
		Возврат;
	КонецЕсли;	
	ОткрытьФормуМодально("Элемент.ФайлыНА",Контекст,,,ТекущийЭлемент());
КонецПроцедуры	// ДобавитьКомпл

// ===============================
// Модально открывается форма текущего в списке файлов для редактирования
Процедура ИзменитьФайл()
	Перем ФормаЗаписи;                                        
	Поз=Файлы.ТекущаяСтрока();	
	Если Поз = 0 Тогда
	    // не выбрана строка таблицы
		Возврат;
	КонецЕсли;               	
	Эл=Файлы.ПолучитьЗначение(Поз,"Ссылка");
	ОткрытьФормуМодально(Эл,Контекст);
КонецПроцедуры	// ИзменитьКомпл

// ===============================
// Удаляет текущий файл в списке 
Процедура УдалитьФайл()
	Если Вопрос("Удалить файл?",1)=2 Тогда
		Возврат;
	КонецЕсли;
	Поз=Файлы.ТекущаяСтрока();
	
	Если Поз = 0 Тогда
	    // не выбрана строка таблицы
		Возврат;
	КонецЕсли;

	Эл=Файлы.ПолучитьЗначение(Поз,"Ссылка");
	Спр=СоздатьОбъект("Справочник.ФайлыНА");
	Спр.ИспользоватьВладельца(ТекущийЭлемент());
	Если Спр.НайтиЭлемент(Эл)=1 Тогда
		Спр.Удалить(0);
		Файлы.УдалитьСтроку(Поз);
		Файлы.ТекущаяСтрока(?(Поз>1,Поз-1,1));
		Форма.Обновить();
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьФайл()
	Поз = Файлы.ТекущаяСтрока();
	Если Поз <> 0 Тогда
	    ЗапуститьПриложение(СокрЛП(Файлы.ПолучитьЗначение(Поз, "Ссылка").Путь));
	КонецЕсли;
КонецПроцедуры

ПерваяЗапись = 0;
// ===============================
Файлы.НоваяКолонка("Ссылка","Справочник.ФайлыНА",,,,0);
Файлы.НоваяКолонка("Категория","Справочник.ВидыКатегорий",,,"Кат.",10);
Файлы.НоваяКолонка("Описание","Строка",,,"Описание",30);
