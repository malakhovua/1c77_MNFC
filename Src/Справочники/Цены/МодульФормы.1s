Перем ВнешнийКонтекст;
Перем НоваяЦена;

//====================================================================== УМК Сандомирский В.Ю, (08.05.14) (пока элемент еще не записан не возможно использовать глобальный пересчет)
Функция ПересчетЦеныПоСхеме(ТекБазЦена) 	
	УстанавливаемаяЦена = ТекБазЦена;
	Если СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена = 2 Тогда 
		Возврат ТекБазЦена;
	ИначеЕсли СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена = 3 Тогда 
		Возврат Владелец.Цена_Приод.Получить(ТекущаяДата());
	КонецЕсли;	
			
	Если ПустоеЗначение(СхемаЦенообразования.ДокументСхемаЦенообразования) <> 1 Тогда		   
		ТекДокументСхемаЦенообразования = СхемаЦенообразования.ДокументСхемаЦенообразования.ТекущийДокумент();		
		ТекДокументСхемаЦенообразования.ВыбратьСтроки();
		Пока ТекДокументСхемаЦенообразования.ПолучитьСтроку() = 1 Цикл
			Если ТекДокументСхемаЦенообразования.ВидРасчетаЦеновыхСхем = Перечисление.ВидРасчетаЦеновыхСхем.Процент Тогда
				
				УстанавливаемаяЦена = УстанавливаемаяЦена 
						+ (УстанавливаемаяЦена * ТекДокументСхемаЦенообразования.ВыбЗначение / 100); // --- Процент
			ИначеЕсли ТекДокументСхемаЦенообразования.ВидРасчетаЦеновыхСхем = Перечисление.ВидРасчетаЦеновыхСхем.Сумма Тогда
				//--- итерация сумма;						
				УстанавливаемаяЦена = УстанавливаемаяЦена + ТекДокументСхемаЦенообразования.ВыбЗначение;	//--- Сумма	
			КонецЕсли;					
		КонецЦикла;
		
		Если СхемаЦенообразования.фОкруглятьЦены = 1 Тогда   // --- Округляем
			УстанавливаемаяЦена = глОкруглить(УстанавливаемаяЦена, СхемаЦенообразования.КратностьОкругления);	
		КонецЕсли;				
	КонецЕсли;			
	Возврат УстанавливаемаяЦена;	
КонецФункции// глАвтоПересчетЦены //... УМК Сандомирский В.Ю, (08.05.14) (пока элемент еще не записан не возможно использовать глобальный пересчет) 

// ===============================
// Название: ПоказатьИсторию()
// Параметры: 
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Кнопка "История",.
// Описание:
// Открывается форма обработки для редактирования периодических реквизитов
Процедура ПоказатьИсторию()
	Если Выбран()=0 Тогда
	     Предупреждение("Историю периодических реквизитов можно" + РазделительСтрок +
		                          "смотреть только для сохраненного элемента");
		Возврат;
	КонецЕсли;

	глРедактироватьИсториюЗначений(Контекст,
	"",
	"История периодических реквизитов ("+ТекущийЭлемент()+")",1);
КонецПроцедуры // ПоказатьИсторию

// ===============================
// Название: СформироватьНаценку()
// Параметры: 
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Кнопка "Наценка (%)",.
// Описание:
// Формирует процент наценки.
// Торговая наценка является результатом сложения
// реквизитов ТорговаяНаценка из товара, владельца цены и категории, 
// к которой принадлежит цена
Процедура СформироватьНаценку()
	Наценка = Владелец.ТорговаяНаценка + КатегорияЦены.ТорговаяНаценка;
КонецПроцедуры

// ===============================
// Название: СформироватьЦену()
// Параметры: 
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Кнопка "Цена",.
// Описание:
// Формирует цену товара на основе "УчетнойЦены" и наценки.
Процедура СформироватьЦену()
	Перем ВычисленнаяЦена;
	Перем Числ;
	
	Если ПустоеЗначение(Единица) = 1 Тогда
		Числ = 1;
	ИначеЕсли Единица.Коэффициент = 0 Тогда
		Числ = 1;
	Иначе
		Числ = Единица.Коэффициент;
	КонецЕсли;
	
	
	
	
	СпрБазЦена = СоздатьОбъект("Справочник.Цены");
	СпрБазЦена.ИспользоватьВладельца(Владелец);
	
	Если ПустоеЗначение(Владелец.БазоваяКатегорияЦены.Получить(РабочаяДата())) = 1 Тогда
		Сообщить("Не найдена базовая цена","!");
		Возврат;	
	КонецЕсли;
	
	
	Если СпрБазЦена.НайтиПоРеквизиту("КатегорияЦены", Владелец.БазоваяКатегорияЦены.Получить(РабочаяДата()) ,0) = 1 Тогда
		БазоваяЦена = СпрБазЦена.Цена.Получить(РабочаяДата());
		
		
		Если ПустоеЗначение(СхемаЦенообразования) <> 1 Тогда // --- УМК Сандомирский В.Ю, (ценообразование расчет с учетом схем) 03.04.14 г
			
			ВычисленнаяЦена = ПересчетЦеныПоСхеме(БазоваяЦена);
				
		Иначе
			
			ВычисленнаяЦена = Числ * БазоваяЦена * (100 + Наценка) / 100;		
			
			//// Учитываем что в учетной цене хранится значение без НДС
			//ВычисленнаяЦена  = ВычисленнаяЦена * (100 + глПроцентНДС (Владелец.СтавкаНДС))/100;
			
			ВычисленнаяЦена = глПересчет(ВычисленнаяЦена, Гривня, РабочаяДата(), Валюта, Рабочаядата());
	
								
		КонецЕсли; // ... УМК Сандомирский В.Ю, (ценообразование расчет с учетом схем) 03.04.14 г	
	Иначе	
		
		Сообщить("Не найдена базовая цена","!");
		
	КонецЕсли;	
		
		
	
	
	Цена = ВычисленнаяЦена;

КонецПроцедуры   

// ===============================
Процедура ИзмВалюта()
	Если Вопрос("Изменнить цену?",4) = 6 тогда
		СформироватьЦену();
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриИзмененииЕдиницы()
	Перем НоваяЕдиница;
	
	НоваяЕдиница = СписокЕдиниц.ПолучитьЗначение(СписокЕдиниц.ТекущаяСтрока());
	// пересчитаем цену
	Если ПустоеЗначение(Единица) = 0 Тогда
		// единица задана
		Если Единица.Коэффициент <> 0 Тогда
			// пересчитывается цена, только если коэффициент не равен нулю
			Цена = Цена * НоваяЕдиница.Коэффициент / Единица.Коэффициент;
		КонецЕсли;
	КонецЕсли;
	Единица = НоваяЕдиница;
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнКопирования)	// Предопределенная процедура

	Если  ПризнКопирования=1 Тогда
		Наименование = "";
		КатегорияЦены = ПолучитьПустоеЗначение("Справочник.КатегорииЦен");
	Иначе
		// заполнение полей по умолчанию
		Валюта = Гривня;
		Единица = глВернутьБазовуюЕдиницуТовара(Владелец);
	КонецЕсли;
	
	ИспользоватьДату(Константа.ДатаНачалаРаботы);

	НоваяЦена = Да;
КонецПроцедуры	// ВводНового

// ===============================
Процедура ПриОткрытии()	// Предопределенная процедура
	Перем ЕдиницыВладельца;
	
	ВнешнийКонтекст = Форма.Параметр;
	
	Форма.КнопкаПоУмолчанию("КнОК");
	СохранениеПериодическихРеквизитов(2, "*");
	
	// заполняем список единиц
	ЕдиницыВладельца = СоздатьОбъект("Справочник.Единицы");
	ЕдиницыВладельца.ИспользоватьВладельца(Владелец);
	ЕдиницыВладельца.ВыбратьЭлементы();
	Пока ЕдиницыВладельца.ПолучитьЭлемент() = 1 Цикл
		Если ЕдиницыВладельца.ПометкаУдаления() = 1 Тогда
			// пропускаем помеченные на удаление
			Продолжить;
		КонецЕсли;
		СписокЕдиниц.ДобавитьЗначение(ЕдиницыВладельца.ТекущийЭлемент());
	КонецЦикла;
	
	// для сохраненного элемента установим список единиц в сохраненную позицию
	Позиция = СписокЕдиниц.НайтиЗначение(Единица);
	Если ПустоеЗначение(Позиция) = 0 Тогда
		// нашли единицу в списке
		СписокЕдиниц.ТекущаяСтрока(Позиция);
	КонецЕсли;
	
	Если ПустоеЗначение(Владелец.ШаблонСхемЦенообразования) = 0 Тогда //--- Сандомирский В.Ю. (01.07.14) не давать изменять схему если есть шаблон схем ценообразования
		Если  СокрЛП(ВнешнийКонтекст.СписокЦен.СхемаВШаблоне) = "+" Тогда  	
			Форма.СхемаЦенообразования.Доступность(0);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры	// ПриОткрытии

// ===============================
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога,ФлагСтандОбр)	// Предопределенная процедура
	Перем КонтекстФормы;
	Если ИдентЭлемДиалога = "Единица" Тогда
		ОткрытьПодбор("Справочник.Единицы",,КонтекстФормы,0,Единица);
		КонтекстФормы.ИспользоватьВладельца(Владелец);
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаВыбораЗначения(ВыбЗнач,ИдентЭлемДиалога,ФлагСтандОбр)	// Предопределенная процедура
	Если ИдентЭлемДиалога = "Единица" Тогда
		Единица = ВыбЗнач;
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()	// Предопределенная процедура
	// в процедуре при записи проверятся заполнение обязательных реквизитов
	Перем Описание;
	Перем ФлагОшибки;
	Перем ВыборкаЦен;
	
	Описание = "Не заполнено поле ";
	                
	// изначально считаем, что не все обязательные поля заполнены
	ФлагОшибки = 0;
	
	// проверка обязательных полей
	Если ПустоеЗначение(Валюта) = 1 Тогда
	    Описание = Описание + "'Валюта'";
	ИначеЕсли ПустоеЗначение(КатегорияЦены) = 1 Тогда
	    Описание = Описание + "'Тип цены'";
	ИначеЕсли ПустоеЗначение(Единица) = 1 Тогда
	    Описание = Описание + "'Единица измерения'";
	Иначе
		// все обязательные поля заполнены
		ФлагОшибки = 1;
	КонецЕсли;
	
	Если ФлагОшибки=0 Тогда
	    
		// не заполнено обязательное поле
		Предупреждение(Описание);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	// проверяем, есть ли уже цена с такой категорией
	ВыборкаЦен = СоздатьОбъект("Справочник.Цены");
	ВыборкаЦен.ИспользоватьВладельца(Владелец);
	ВыборкаЦен.ВыбратьЭлементы();
	Пока ВыборкаЦен.ПолучитьЭлемент()=1 Цикл
		Если КатегорияЦены = ВыборкаЦен.КатегорияЦены Тогда
			Если Выбран()=0 Тогда
				// для новой цена сравниваем только совпадение категории
				ФлагОшибки = 0;
				Прервать;
			Иначе
				// для сохраненного элемента проверить несовпадение категорий
				// недостаточно, т.к. из выборки можно получить редактируемый элемент
				// дублирование категорий может произойти только если совпадают
				// категории у разных элементов
				Если ТекущийЭлемент() <> ВыборкаЦен.ТекущийЭлемент() Тогда
					ФлагОшибки = 0;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ФлагОшибки = 0 Тогда
		Если ВыборкаЦен.ПометкаУдаления()=1 Тогда
			Если Вопрос("У ТМЦ уже есть тип цены '"+КатегорияЦены+"' (помечен на удаление). Снять пометку на удаление?",4) = 6 Тогда
				Попытка
					ВыборкаЦен.СнятьПометкуУдаления();
				Исключение
					Предупреждение(ОписаниеОшибки());
					СтатусВозврата(0);
					Возврат;
				КонецПопытки;
				 
				 Если ТипЗначенияСтр(ВнешнийКонтекст) = "ГрупповойКонтекст" Тогда
				 	// форму открыли из карточки товара
				 	ТекЦена = ВыборкаЦен.ТекущийЭлемент();
				 	ТекЦена.ИспользоватьДату(РабочаяДата());
				 	
			 		// добавляем в конец списка
			 		ВнешнийКонтекст.СписокЦен.НоваяСтрока();
			 		ВнешнийКонтекст.СписокЦен.Ссылка = ТекЦена;
			 		ВнешнийКонтекст.СписокЦен.Валюта = ТекЦена.Валюта;
			 		ВнешнийКонтекст.СписокЦен.Единица = ТекЦена.Единица;
			 		ВнешнийКонтекст.СписокЦен.КатегорияЦены = ТекЦена.КатегорияЦены;
			 		ВнешнийКонтекст.СписокЦен.Наценка = ТекЦена.Наценка;
			 		ВнешнийКонтекст.СписокЦен.Цена = ТекЦена.Цена;
			 		Форма.Закрыть(0);
			 	КонецЕсли;	
				
			КонецЕсли;
			СтатусВозврата(0);
			Возврат;
		Иначе
			Предупреждение("У ТМЦ уже есть тип цены'"+КатегорияЦены+"'.");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;

	Наименование = КатегорияЦены.Наименование;

	глЗаписьПериодическихРеквизитов(Контекст);
КонецПроцедуры	// ПриЗаписи

// ===============================
Процедура ПриЗакрытии()                 
	Перем ТекЦена;
	Если Выбран() = 1 Тогда
		// только если элемент записан
		Если ТипЗначенияСтр(ВнешнийКонтекст) = "ГрупповойКонтекст" Тогда
			// форму открыли из карточки товара
			ТекЦена = ТекущийЭлемент();
			ТекЦена.ИспользоватьДату(РабочаяДата());
			Если НоваяЦена = Да Тогда       
				// добавляем в конец списка
				ВнешнийКонтекст.СписокЦен.НоваяСтрока();
				ВнешнийКонтекст.СписокЦен.Ссылка = ТекЦена;
				ВнешнийКонтекст.СписокЦен.Валюта = ТекЦена.Валюта;
				ВнешнийКонтекст.СписокЦен.Единица = ТекЦена.Единица;
				ВнешнийКонтекст.СписокЦен.КатегорияЦены = ТекЦена.КатегорияЦены;
//				ВнешнийКонтекст.СписокЦен.Наценка = ТекЦена.Наценка;    //--- УМК Сандомирский В.Ю, (31.07.14) т.к. реквизит удален
 				ВнешнийКонтекст.СписокЦен.Цена = ТекЦена.Цена;
				ВнешнийКонтекст.СписокЦен.СхемаЦенообразования = ТекЦена.СхемаЦенообразования;	//--- УМК Сандомирский В.Ю, (01.04.14)
			Иначе
				// найдем позицию в списке цен
				Позиция = 0;
				Если ВнешнийКонтекст.СписокЦен.НайтиЗначение(ТекущийЭлемент(), Позиция, "Ссылка") = 1 Тогда
					// нашли позицию в таблице значений
					ВнешнийКонтекст.СписокЦен.УстановитьЗначение(Позиция, "Валюта", ТекЦена.Валюта);
					ВнешнийКонтекст.СписокЦен.УстановитьЗначение(Позиция, "Единица", ТекЦена.Единица);
					ВнешнийКонтекст.СписокЦен.УстановитьЗначение(Позиция, "КатегорияЦены", ТекЦена.КатегорияЦены);
//					ВнешнийКонтекст.СписокЦен.УстановитьЗначение(Позиция, "Наценка", ТекЦена.Наценка);				//... УМК Сандомирский В.Ю, 01.07.14 г. (закоментил - уходим от наценок)
					ВнешнийКонтекст.СписокЦен.УстановитьЗначение(Позиция, "Цена", ТекЦена.Цена);
					ВнешнийКонтекст.СписокЦен.УстановитьЗначение(Позиция, "СхемаЦенообразования", ТекЦена.СхемаЦенообразования); 	//--- УМК Сандомирский В.Ю, (01.04.14)
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

НоваяЦена = Нет;