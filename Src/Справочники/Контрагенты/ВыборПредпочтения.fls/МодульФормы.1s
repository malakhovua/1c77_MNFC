Перем Конт; // контекст документа, который открыл обработку
                              
Перем ВыбТовар, ВыбФирма,спСчета,ВыбМестоХранения; // Отборы
Перем тбПартии; // таблица, в которой хранятся партии для всех контрагентов

Перем ПоискКонтрагент, ПоискПартия;

// ===============================
Функция ИзмКонтрагент()
	Перем Контрагент;
	Контрагент = ТекущийЭлемент();
	НС = 0;
	Если тбПартии.НайтиЗначение(Контрагент,НС,"Поставщик") = 1 Тогда
		тбПартии.ПолучитьСтрокуПоНомеру(НС);
		Если ТипЗначенияСтр(тбПартии.Партии)="ТаблицаЗначений" Тогда
			тбПартии.Партии.Выгрузить(тбВыборПартий);
		Иначе
			тбВыборПартий.УдалитьСтроки();
		КонецЕсли;
	Иначе
		тбВыборПартий.УдалитьСтроки();
	КонецЕсли;
	Возврат "";
КонецФункции

// ===============================
Функция ТаблицаПартий(тбИтоги,Контрагент)
	
	Перем тбРезультат,тбВрем;
	
	тбВрем = СоздатьОбъект("ТаблицаЗначений");;
	тбВрем.НоваяКолонка("Партия",,,,"Документ прихода",20);
	тбВрем.НоваяКолонка("Счет","Строка",5,,"Сч",5,,2);
	тбВрем.НоваяКолонка("Остаток","Число",10,3,"Ост.",7,,2);
	тбВрем.НоваяКолонка("Сумма","Число",10,3,"Сумма",7,,2);
	
	тбИтоги.ВыбратьСтроки();
	Пока тбИтоги.ПолучитьСтроку()=1 Цикл
		Если тбИтоги.Поставщик = Контрагент Тогда
			тбВрем.НоваяСтрока();
			Если ПустоеЗначение(тбИтоги.ПрихДокумент)=0 Тогда
				тбВрем.Партия = тбИтоги.ПрихДокумент;
			Иначе
				тбВрем.Партия = "Средневзвешенная";
			КонецЕсли;
			тбВрем.Счет = ""+тбИтоги.Счет;
			тбВрем.Остаток = тбИтоги.ОстатокТовара;
			тбВрем.Сумма = тбИтоги.Стоимость;
		КонецЕсли;
	КонецЦикла;
    
	тбВрем.Свернуть("Партия,Счет","Остаток,Сумма");
	тбВрем.Выгрузить(тбРезультат);
            
	Возврат тбРезультат;
КонецФункции

// ===============================
Процедура ЗаполнитьПартии()
	
	тбИтоги = 0;
	
	ВремРегистры = СоздатьОбъект("Регистры");
	Рег = ВремРегистры.Партии;
	
	Рег.УстановитьЗначениеФильтра("ТМЦ",ВыбТовар,1);
	Рег.УстановитьЗначениеФильтра("Фирма",ВыбФирма,1);
	
	Если ПустоеЗначение(спСчета)=0 Тогда
		Рег.УстановитьЗначениеФильтра("Счет",спСчета,2);    
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбМестоХранения)=0 Тогда
	    Рег.УстановитьЗначениеФильтра("МестоХранения",ВыбМестоХранения,1);
	КонецЕсли;
	
	Если фВсеПартии = 0 Тогда
		// Только с остатками, выбираем итоги
		Если Конт.Выбран()=1 Тогда
			Если (Конт.ТекущийДокумент().СравнитьТА() <= 0) Тогда
				Рег.ВременныйРасчет();
				ВремРегистры.РассчитатьРегистрыНа(Конт.ТекущийДокумент());
			КонецЕсли;
		Иначе
			Если Конт.ДатаДок < ПолучитьДатуТА() Тогда
				Рег.ВременныйРасчет();
				ВремРегистры.РассчитатьРегистрыНа(Конт.ДатаДок);
			КонецЕсли;
		КонецЕсли;
		Рег.ВыгрузитьИтоги(тбИтоги,1,1);
		
	Иначе
		Если ГраницаС > ПолучитьДатуТА() Тогда
		    ГраницаС = ПолучитьДатуТА();
		КонецЕсли;

		Рег.ВременныйРасчет();
		ВремРегистры.РассчитатьРегистрыНа(ГраницаС);
		
		// Выбираем движения
		Если (Конт.СравнитьТА()=1) Тогда
		    Рег.ВыбратьДвиженияСОстатками();
		ИначеЕсли (Конт.СравнитьТА()=-2) Тогда
			Если Конт.ДатаДок>=ПолучитьДатуТА() Тогда
				Рег.ВыбратьДвиженияСОстатками();
			Иначе
				Рег.ВыбратьДвиженияСОстатками(Конт.ДатаДок);
			КонецЕсли;
		//ИначеЕсли (Конт.СравнитьТА()=-1) Тогда
		//	Рег.ВыбратьДвиженияСОстатками(СформироватьПозициюДокумента(Конт.ТекущийДокумент(),-1));
		Иначе			
			Рег.ВыбратьДвиженияСОстатками();
		КонецЕсли;		
		
		
		тбИтоги = СоздатьОбъект("ТаблицаЗначений");
		тбИтоги.НоваяКолонка("Поставщик");
		тбИтоги.НоваяКолонка("ПрихДокумент");
		тбИтоги.НоваяКолонка("Счет");
		тбИтоги.НоваяКолонка("ОстатокТовара","Число",15,3);
		тбИтоги.НоваяКолонка("Стоимость","Число",17,5);
		
		Пока Рег.ПолучитьДвижение()=1 Цикл 
			тбИтоги.НоваяСтрока();
			тбИтоги.Поставщик = Рег.Поставщик;
			тбИтоги.ПрихДокумент = Рег.ПрихДокумент;
			тбИтоги.Счет = Рег.Счет;
			Если Рег.ТекущийДокумент() = Конт.ТекущийДокумент() тогда				
				тбИтоги.ОстатокТовара = ?(Рег.Приход = 1,-Рег.ОстатокТовара,Рег.ОстатокТовара); 
				тбИтоги.Стоимость = ?(Рег.Приход = 1,-Рег.Стоимость,Рег.Стоимость);
			КонецЕсли;	
		КонецЦикла;
				
		тбИтоги.Свернуть("Поставщик,ПрихДокумент,Счет","ОстатокТовара,Стоимость");
		
		// Выбираем остатки:
		тбИтоги.ВыбратьСтроки();
		Пока тбИтоги.ПолучитьСтроку()=1 Цикл
			Если ПустоеЗначение(ВыбМестоХранения)=1 Тогда
				тбИтоги.ОстатокТовара = тбИтоги.ОстатокТовара+Рег.СводныйОстаток(ВыбФирма,тбИтоги.Счет,,ВыбТовар,тбИтоги.Поставщик,,тбИтоги.ПрихДокумент,"ОстатокТовара");
				тбИтоги.Стоимость = тбИтоги.Стоимость+Рег.СводныйОстаток(ВыбФирма,тбИтоги.Счет,,ВыбТовар,тбИтоги.Поставщик,,тбИтоги.ПрихДокумент,"Стоимость");
			Иначе	
				тбИтоги.ОстатокТовара = тбИтоги.ОстатокТовара+Рег.СводныйОстаток(ВыбФирма,тбИтоги.Счет,ВыбМестоХранения,ВыбТовар,тбИтоги.Поставщик,,тбИтоги.ПрихДокумент,"ОстатокТовара");
				тбИтоги.Стоимость = тбИтоги.Стоимость+Рег.СводныйОстаток(ВыбФирма,тбИтоги.Счет,ВыбМестоХранения,ВыбТовар,тбИтоги.Поставщик,,тбИтоги.ПрихДокумент,"Стоимость");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	тбВрем = СоздатьОбъект("ТаблицаЗначений");;
	
	тбИтоги.Выгрузить(тбВрем,,,"Поставщик");
	тбВрем.Свернуть("Поставщик","");
	
	спКонтрагенты = СоздатьОбъект("СписокЗначений");
	тбВрем.ВыбратьСтроки();
	Пока тбВрем.ПолучитьСтроку()=1 Цикл
		спКонтрагенты.ДобавитьЗначение(тбВрем.Поставщик);
	КонецЦикла;
	
	ИспользоватьСписокЭлементов(спКонтрагенты);
	
	тбВрем.Выгрузить(тбПартии);
	тбПартии.НоваяКолонка("Партии");
	
	тбПартии.ВыбратьСтроки();
	Пока тбПартии.ПолучитьСтроку()=1 Цикл
		тбПартии.Партии = ТаблицаПартий(тбИтоги,тбПартии.Поставщик);
	КонецЦикла;
	
	Если ПустоеЗначение(ПоискКонтрагент)=0 Тогда
		Попытка
		АктивизироватьОбъект(ПоискКонтрагент);
		Исключение КонецПопытки;
		ИзмКонтрагент();
		Если ПустоеЗначение(ПоискПартия)=0 Тогда
		    НС = 0;
			Если тбВыборПартий.НайтиЗначение(ПоискПартия,НС,"Партия") = 1 Тогда
				тбВыборПартий.ТекущаяСтрока(НС);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


// ===============================
Процедура ИзмФирма()
	ВыбФирма = спФирмы.ПолучитьЗначение(спФирмы.ТекущаяСтрока());
	ЗаполнитьПартии();
КонецПроцедуры

// ===============================
Процедура ИзмФВсеПартии()
	Форма.ГраницаС.Видимость(фВсеПартии);
	Форма.тГраницаС.Видимость(фВсеПартии);
	ЗаполнитьПартии();
КонецПроцедуры

// ===============================
Процедура ИзмГраницаС()
	ЗаполнитьПартии();
КонецПроцедуры

// ===============================
Процедура ПриВыбореСтроки()
	Если глЕстьРеквизитМнЧ("Партия",Конт.Вид()) = Да Тогда
		Конт.Форма.Партия.УстановитьТип(ТекущийЭлемент());
		Конт.Партия = ТекущийЭлемент();
	ИначеЕсли глЕстьРеквизитМнЧ("Предпочтение",Конт.Вид()) = Да Тогда
		Конт.Форма.Предпочтение.УстановитьТип(ТекущийЭлемент());
		Конт.Предпочтение = ТекущийЭлемент();
	КонецЕсли;
	
	Форма.Закрыть();
КонецПроцедуры

// ===============================
Процедура ВыборПартии()
	Если ТипЗначенияСтр(тбВыборПартий.Партия)="Документ" Тогда
		Если глЕстьРеквизитМнЧ("Партия",Конт.Вид()) = Да Тогда
			Конт.Форма.Партия.УстановитьТип(тбВыборПартий.Партия);
			Конт.Партия = тбВыборПартий.Партия;
		ИначеЕсли глЕстьРеквизитМнЧ("Предпочтение",Конт.Вид()) = Да Тогда
			Конт.Форма.Предпочтение.УстановитьТип(тбВыборПартий.Партия);
			Конт.Предпочтение = тбВыборПартий.Партия;
		КонецЕсли;
	Иначе
		// средневзвешенная
	КонецЕсли;
	Форма.Закрыть();
КонецПроцедуры

// ===============================
Процедура ВыборПустой()
	Если глЕстьРеквизитМнЧ("Партия",Конт.Вид()) = Да Тогда
		Конт.Партия = 0;
	ИначеЕсли глЕстьРеквизитМнЧ("Предпочтение",Конт.Вид()) = Да Тогда
		Конт.Предпочтение = 0;
	КонецЕсли;	
	Форма.Закрыть();
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	
	ГраницаС = глВосстановитьЗначение("Предпочтение","ГраницаС",);	
	
	Если ПустоеЗначение(Форма.Параметр)=1 Тогда
		СтатусВозврата(0);
	    Возврат;
	КонецЕсли;
	
	спОтбор = Форма.Параметр;
	Конт = спОтбор.Получить("Контекст");
	
	спСчета = спОтбор.Получить("Счет");
	ВыбМестоХранения = спОтбор.Получить("МестоХранения");

	Если глЕстьРеквизитМнЧ("Партия",Конт.Вид()) = Да Тогда
		Предпочтение = Конт.Партия;
	ИначеЕсли глЕстьРеквизитМнЧ("Предпочтение",Конт.Вид()) = Да Тогда
		Предпочтение = Конт.Предпочтение;
	КонецЕсли;
	
	Если глЕстьРеквизитМнЧ("Товар",Конт.Вид()) = Да Тогда
	    ВыбТовар = Конт.Товар;
	ИначеЕсли глЕстьРеквизитМнЧ("ТМЦ",Конт.Вид()) = Да Тогда
		ВыбТовар = Конт.ТМЦ;
	КонецЕсли;

	Если ПустоеЗначение(ГраницаС) = 1 тогда	
		ГраницаС = НачМесяца(Конт.ДатаДок);
	КонецЕсли;	
	
	Если ПустоеЗначение(ВыбТовар)=1 Тогда
		СтатусВозврата(0);
	    Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(Предпочтение)=0 Тогда
		Если Предпочтение.Вид()="Контрагенты" Тогда
			ПоискКонтрагент = Предпочтение;
			ПоискПартия = 0;
		ИначеЕсли ТипзначенияСтр(Предпочтение)="Документ" Тогда
			ПоискПартия = Предпочтение;
			Попытка 
			ПоискКонтрагент = ПоискПартия.Контрагент;
			Исключение КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	спФирмы.ДобавитьЗначение(Конт.Фирма);
	ВыбФирма = Конт.Фирма;
		
	спФирмы.ТекущаяСтрока(1);
	
	тбВыборПартий.НоваяКолонка("Партия",,,,"Документ прихода",20);
	тбВыборПартий.НоваяКолонка("Счет","Строка",5,,"Сч",5,,2);
	тбВыборПартий.НоваяКолонка("Остаток","Число",10,3,"Ост.",7,,2);
	тбВыборПартий.НоваяКолонка("Сумма","Число",10,3,"Сумма",7,,2);
	
	ЗаполнитьПартии();
	
	Форма.ПанельИнструментов(0);
	Форма.Заголовок("Выбор предпочтения партии. "+ВыбТовар+", ед.изм. "+ВыбТовар.ЕдиницаПоУмолчанию);
	Форма.ОбработкаВыбораСтроки(1);
	ИерархическийСписок(0,0);
	
	Форма.спФирмы.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ГраницаС.ВыполнятьФормулуТолькоПриИзменении(1);
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()
	глСохранитьЗначение("Предпочтение","ГраницаС",ГраницаС);	
КонецПроцедуры
