// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
                        
// переменные предназначены для механизма универсальных группировок отчета
Перем СписокГруппировок;
Перем КоличествоГруппировок;
Перем НомерГруппировкиНоменклатура;

// переменные предназначены для запроса по периодам
Перем Язык, УкрГруппировки;

Перем Запрос,ЗапросСПериодами,ТаблицаПериодов, Периодичность;	//--- УМК Сандомирский В.Ю. (08.04.15)
Перем ВалютаПечати;												//--- УМК Сандомирский В.Ю. (08.04.15)
Перем ПечЗаголовокСтолбца;										//--- УМК Сандомирский В.Ю. (08.04.15)

Перем ДокНачала, ДокКонца;
Перем Д1, Д2;

Перем ТЗ_ПримечанияСтрок;	//--- УМК Сандомирский В.Ю. (02.06.15)
Перем ТекЗаказ, ТекНоменклатура;

Перем ПечПримечаниеСтроки;


// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
Процедура ВыбратьПоФильтру()
	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру

// ===============================
Функция ПерерисовкаНазванийЗакладок()      

//	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");

КонецФункции // ПерерисовкаНазванийЗакладок	

// ===============================
Процедура УстановитьГруппировкиЗапроса(ТекстЗапроса, ТекстЗагол)
	                       
	СписокГруппировок = СоздатьОбъект("СписокЗначений");
	КвоГруппировок 				= Группировки.РазмерСписка();
	НомерГруппировкиНоменклатура= КвоГруппировок;


	Для Сч=1 По КвоГруппировок Цикл
		
		Если Группировки.Пометка(Сч)=1 Тогда
			ПредставлениеГрупп		=""; 
			УкрПредставлениеГрупп	="";
			ТекстГрупп = Группировки.ПолучитьЗначение(Сч,ПредставлениеГрупп);
			УкрГруппировки.ПолучитьЗначение(УкрГруппировки.НайтиЗначение(ТекстГрупп),УкрПредставлениеГрупп);
			
			ТекстБезУпорядочивания = "";
			ТекстБезГрупп = "";
			Если ( (ТекстГрупп = "Номенклатура") Или (ТекстГрупп = "Покупатель") Или (ТекстГрупп = "ВидУпаковки") 
				Или (ТекстГрупп = "ФормаУпаковки")
				Или (ТекстГрупп = "ГруппировкаРазрешенныхВидовУпаковки"))  //--- УМК Сандомирский В.Ю. (04.04.15)
				И (фБезГрупп = 1) Тогда
					ТекстБезГрупп = " без групп";
			ИначеЕсли ( (ТекстГрупп = "Договор") Или (ТекстГрупп = "ДокументРезерва") )
				И (глОптимизацияОтчетов = 1) Тогда
			    ТекстБезУпорядочивания = " без упорядочивания";
			КонецЕсли;
			ТекстЗапроса= ТекстЗапроса 	+ "Группировка "+ТекстГрупп+ТекстБезУпорядочивания+ТекстБезГрупп+";";
			ТекстЗагол	= ТекстЗагол + " / "+?(Язык="у",УкрПредставлениеГрупп,ПредставлениеГрупп);
			СписокГруппировок.ДобавитьЗначение(ТекстГрупп,ПредставлениеГрупп);
			Если ТекстГрупп = "Номенклатура" Тогда
			    НомерГруппировкиНоменклатура = СписокГруппировок.РазмерСписка();
			КонецЕсли;

		КонецЕсли;
	КонецЦикла; 

	Если ПустаяСтрока(ТекстЗагол)=0 Тогда // удаляем ведущий разделитель " / "
		ТекстЗагол = Сред(ТекстЗагол,4)
	КонецЕсли;

КонецПроцедуры // УстановитьГруппировкиЗапроса()
                               
// ===============================
Процедура ПечатьПериода(НазваниеГруппировки,НазваниеСекции,Запрос,ВалютаПечати, ПоПериоду = 0, Значен)
	
	Номенклатура = Запрос.Номенклатура;
	
	ПечНачКво 	= глФРМКоличествоВОтчете(Запрос.НачРезерв,	Номенклатура); 
	ПечПрихКво 	= глФРМКоличествоВОтчете(Запрос.ПрихРезерв,	Номенклатура);
	ПечРасхКво 	= глФРМКоличествоВОтчете(Запрос.РасхРезерв,	Номенклатура);
	ПечРасхЗКво = глФРМКоличествоВОтчете(Запрос.РасхРезервС,Номенклатура);
	ПечКонКво 	= глФРМКоличествоВОтчете(Запрос.КонРезерв,	Номенклатура);
	
	Если фДопКво = 1 Тогда
		ПечНачДопКво 	= глФРМКоличествоВОтчете(Запрос.НачДопКво,	Номенклатура); 
		ПечПрихДопКво 	= глФРМКоличествоВОтчете(Запрос.ПрихДопКво,	Номенклатура);
		ПечРасхДопКво 	= глФРМКоличествоВОтчете(Запрос.РасхДопКво,	Номенклатура);
		ПечРасхЗДопКво  = глФРМКоличествоВОтчете(Запрос.РасхДопКвоС,Номенклатура);
		ПечКонДопКво 	= глФРМКоличествоВОтчете(Запрос.КонДопКво,	Номенклатура);	
	КонецЕсли;
	
	Если (фНачОст = 1)  Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции +"|НачОст");
		Если фДопКво = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции +"|ДопНачОст");	
		КонецЕсли;
	КонецЕсли;
	
	Если (фПриход = 1)  Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции +"|Приход");
		Если фДопКво = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции +"|ДопПриход");	
		КонецЕсли;
	КонецЕсли;
	
	Если (фРасход = 1) Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции +"|Расход");
		Если фДопКво = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции +"|ДопРасход");	
		КонецЕсли;
	КонецЕсли;
	
	Если (фКонОст = 1) Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции +"|КонОст");
		Если фДопКво = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции +"|ДопКонОст");	
		КонецЕсли;	
	КонецЕсли;
	
	
	ПечПримечаниеСтроки = "";
	
	Если (фВыводитьПримечанияСтрок = 1) И (НазваниеГруппировки = "Номенклатура") Тогда
			
		Если ТекНоменклатура.ЭтоГруппа() <> 1 Тогда
			
			ТекИндексПоиска = Строка(ТекЗаказ)+Строка(ТекНоменклатура);
		
			ТекСтр = "";
			ТекКол = "";
			
			Если ТЗ_ПримечанияСтрок.НайтиЗначение(ТекИндексПоиска,ТекСтр,ТекКол) = 1 Тогда
				ТЗ_ПримечанияСтрок.ПолучитьСтрокуПоНомеру(ТекСтр);	
				ПечПримечаниеСтроки = ТЗ_ПримечанияСтрок.ПримечаниеСтроки;
				Таб.ПрисоединитьСекцию(НазваниеСекции +"|ПримечаниеСтроки");
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЕсли;
	
	
	
КонецПроцедуры //ПечатьСтроки()

// ===============================
Процедура ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка = "",ЭтоГруппа=0)
	
	Наим = ПечТекстСтроки;
	Значение = ТекРасшифровка;
	Секция = Таб.ПолучитьСекцию(НазваниеСекции);
		
	Область = Секция.Область("R1C1:R1C8");
	Область.Подчеркнутый(ЭтоГруппа);

	//--- Проверка выводить или нет строку
	
	Номенклатура = Запрос.Номенклатура;
	
	ПечНачКво 	= глФРМКоличествоВОтчете(Запрос.НачРезерв,	Номенклатура); 
	ПечПрихКво 	= глФРМКоличествоВОтчете(Запрос.ПрихРезерв,	Номенклатура);
	ПечРасхКво 	= глФРМКоличествоВОтчете(Запрос.РасхРезерв,	Номенклатура);
	ПечРасхЗКво = глФРМКоличествоВОтчете(Запрос.РасхРезервС,Номенклатура);
	ПечКонКво 	= глФРМКоличествоВОтчете(Запрос.КонРезерв,	Номенклатура);
	
	Если фДопКво = 1 Тогда
		ПечНачДопКво 	= глФРМКоличествоВОтчете(Запрос.НачДопКво,	Номенклатура); 
		ПечПрихДопКво 	= глФРМКоличествоВОтчете(Запрос.ПрихДопКво,	Номенклатура);
		ПечРасхДопКво 	= глФРМКоличествоВОтчете(Запрос.РасхДопКво,	Номенклатура);
		ПечРасхЗДопКво  = глФРМКоличествоВОтчете(Запрос.РасхДопКвоС,Номенклатура);
		ПечКонДопКво 	= глФРМКоличествоВОтчете(Запрос.КонДопКво,	Номенклатура);
	КонецЕсли;
	
	фВыводитьСтроку = 0;
	Если (фНачОст = 1) И (Запрос.НачРезерв <> 0) Тогда
		фВыводитьСтроку = 1;
	КонецЕсли;
	Если (фПриход = 1) И (Запрос.ПрихРезерв <> 0) Тогда
		фВыводитьСтроку = 1;
	КонецЕсли;
	Если (фРасход = 1) И ((Запрос.РасхРезерв <> 0) ИЛИ (Запрос.РасхРезервС <> 0)) Тогда
		фВыводитьСтроку = 1;
	КонецЕсли;
	Если (фКонОст = 1) И (Запрос.КонРезерв <> 0) Тогда
		фВыводитьСтроку = 1;
	КонецЕсли;
	
	Если фВыводитьСтроку = 1 Тогда
		Таб.ВывестиСекцию(НазваниеСекции +"|Наименование");
		
		Попытка
			НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(Ном);
		Исключение
			НазваниеГруппировки = "Итоги";
		КонецПопытки;
		
		Значен 				= ТекРасшифровка;
		ПечатьПериода(НазваниеГруппировки, НазваниеСекции, Запрос, ВалютаПечати, , Значен);
		Если (Периодичность <> 0) Тогда
			// выведем теперь все периоды, с разворотом вправо
			ТаблицаПериодов.ВыбратьСтроки();
			Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
				глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,Ном,ТаблицаПериодов.РеалНачалоПериода);
				ПечатьПериода(НазваниеГруппировки, НазваниеСекции, ЗапросСПериодами,ВалютаПечати, 1, Значен);
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

// ===============================
Процедура ВывестиГруппировки(Знач Ном=1)

	Если Ном > КоличествоГруппировок Тогда                           
		Возврат;
	КонецЕсли;
	НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(Ном);
	Пока Запрос.Группировка(Ном) = 1 Цикл
		
		НазваниеСекции="Группировка"+Ном;
		Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);	
		
		Если НазваниеГруппировки = "ДокументРезерва" Тогда
			ТекЗаказ = Значение;
		КонецЕсли;
		
		Если НазваниеГруппировки = "Номенклатура" Тогда
			ТекНоменклатура = Значение;
		КонецЕсли;
		
		Если Найти("Номенклатура,Покупатель,ВидУпаковки,ФормаУпаковки,ГруппировкаРазрешенныхВидовУпаковки",НазваниеГруппировки) > 0 Тогда  //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки (29.05.15)
			ПечТекстСтроки = глСмещениеГруппы(Значение,фБезГрупп) + Значение;
		Иначе // Договор, ДокументРезерва, Документ
			Если ПустоеЗначение(Значение)=0 Тогда
				ПечТекстСтроки = ""+глДокументВОтчете(Значение,"с номером","с датой",Язык);
			Иначе
				ПечТекстСтроки = "";
			КонецЕсли;
		КонецЕсли;	
		ПечТекстСтроки = ?(ПустоеЗначение(ПечТекстСтроки)=1,глПредставлениеПустогоЗначения(НазваниеГруппировки,Язык),ПечТекстСтроки);
		ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,Значение,Запрос.ЭтоГруппа(НазваниеГруппировки));
		глОживить(1);
		ВывестиГруппировки(Ном+1);
	КонецЦикла;

КонецПроцедуры // ВывестиГруппировки()

// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================	//--- УМК Сандомирский В.Ю. (08.04.15)
Процедура ДоступностьЭлементов(ВсеЭлементы=0)           
	
	ЭлементДиалога = Форма.АктивныйЭлемент();

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбФирма") Или (ЭлементДиалога="кХВыбФирма") Тогда
		Форма.кХВыбФирма.Доступность(ВыбФирма.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбНоменклатура") Или (ЭлементДиалога="кХВыбНоменклатура") Тогда
		Форма.кХВыбНоменклатура.Доступность(ВыбНоменклатура.Выбран()); 
	КонецЕсли;
	
	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбВидУпаковки") Или (ЭлементДиалога="кХВыбВидУпаковки") Тогда //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		Форма.кХВыбВидУпаковки.Доступность(ВыбВидУпаковки.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбФормаУпаковки") Или (ЭлементДиалога="кХВыбФормаУпаковки") Тогда //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		Форма.кХВыбФормаУпаковки.Доступность(ВыбФормаУпаковки.Выбран()); 
	КонецЕсли;
	
	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбПокупатель") Или (ЭлементДиалога="кХВыбПокупатель") Тогда
		Форма.кХВыбПокупатель.Доступность(ВыбПокупатель.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбДоговор") Или (ЭлементДиалога="кХВыбДоговор") Тогда
		Форма.кХВыбДоговор.Доступность(ВыбДоговор.Выбран()); 
	КонецЕсли;
	
	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбЗаказ") Или (ЭлементДиалога="кХВыбЗаказ") Тогда   // --- УМК Сандомирский В.Ю. (29.05.15)
		Форма.кХВыбЗаказ.Доступность(ВыбЗаказ.Выбран()); 
	КонецЕсли;

КонецПроцедуры  	// ДоступностьЭлементов

// ===============================	//--- УМК Сандомирский В.Ю. (08.04.15)
Процедура ВывестиШапкуПериода(НазваниеСекции,Период="",ПоПериоду = 0)
	
	Если фНачОст = 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции +"|НачОст");
		Если фДопКво = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции +"|ДопНачОст");
		КонецЕсли;
	КонецЕсли;
	
	Если фПриход = 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции +"|Приход");
		Если фДопКво = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции +"|ДопПриход");
		КонецЕсли;
	КонецЕсли;
	
	Если фРасход = 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции +"|Расход");
		Если фДопКво = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции +"|ДопРасход");
		КонецЕсли;
	КонецЕсли;
	
	Если фКонОст = 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции +"|КонОст");
		Если фДопКво = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции +"|ДопКонОст");
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры 

//====================================================================== //--- УМК Сандомирский В.Ю. (01.06.15)
Процедура ВывестиИтоги()
	
	ПечатьСтроки(0,"Итого","Итого",?(Язык="у", "Всього:", "Всего:"));
	
КонецПроцедуры // ВывестиИтоги

// =============================== //--- УМК Сандомирский В.Ю. (08.04.15)
Процедура ВывестиШапку()

	Если Периодичность<>0 Тогда 
		Таб.ВывестиСекцию("ШапкаПериод|Наименование");
		ВывестиШапкуПериода("ШапкаПериод",?(Язык="у", "Всього за період", "Всего за период"));
	    ТаблицаПериодов.ВыбратьСтроки(); // выводим шапку для каждого периода
		Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл	
			ВывестиШапкуПериода("ШапкаПериод",ПериодСтр(ТаблицаПериодов.НачалоПериода,ТаблицаПериодов.КонецПериода),1);
		КонецЦикла;	
		глОживить(1);	
	КонецЕсли;

	Таб.ВывестиСекцию("Шапка|Наименование");
	ВывестиШапкуПериода("Шапка");
	Если Периодичность<>0 Тогда 
	    ТаблицаПериодов.ВыбратьСтроки(); // выводим шапку для каждого периода
		Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл
			ВывестиШапкуПериода("Шапка",,1);
		КонецЦикла;
	КонецЕсли;
	глОживить(1);
	
КонецПроцедуры 

// =============================== //--- УМК Сандомирский В.Ю. (08.04.15)
Функция ПериодСтрока()
	Зн = СписокПериодов.ПолучитьЗначение(СписокПериодов.ТекущаяСтрока());
    Если Зн = "Общий" Тогда
    	Возврат 0;
	Иначе
		Возврат Зн;
    КонецЕсли;
КонецФункции //

Функция УбратьПеременнуюЗапроса(ИмяПеременной, СписокГруппировок, Отбор)
	
	КвоГруппировок 				= СписокГруппировок.РазмерСписка();
	
	Если ПустоеЗначение(Отбор) = 0 Тогда //Отбор
		Возврат 0;
	КонецЕсли;
	
	Для Сч=1 По КвоГруппировок Цикл
		
		Если СписокГруппировок.Пометка(Сч)=1 Тогда //Пометка 
			ТекстГрупп = СписокГруппировок.ПолучитьЗначение(Сч);
			Если ИмяПеременной = ТекстГрупп Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат 1; //Нет отбора и нет пометки
	
КонецФункции
// ===============================
Процедура Сформировать(ЗакрытьЭкран=0)    
	
	ВалютаПечати=Гривня;
	
	глПроверкаДаты(Дата1,Дата2);
	
	// Здесь формируется отчет, который использует регистры, критичные к
	// последовательности проведения документов
	// поэтому сравним установленные даты периода формируемого отчета с ГП
	глПроверкаАктуальностиОтчета(Дата1,Дата2,ВыбФирма,0);
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") Или (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;

	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	Таб.ИсходнаяТаблица(ПечФорма);
    
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "Резервы");
    
	// все настройки помещаем в список
	Расшифровка.Установить("Дата1", 			Дата1);
    Расшифровка.Установить("Дата2", 			Дата2); 
	
	Расшифровка.Установить("ДокНачала", 	ДокНачала);
    Расшифровка.Установить("ДокКонца", 		ДокКонца);
	
	Расшифровка.Установить("ВыбФирма", 			ВыбФирма);
	Расшифровка.Установить("ВыбНоменклатура", 	ВыбНоменклатура); 
	Расшифровка.Установить("ВыбВидУпаковки",	ВыбВидУпаковки);   //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
	Расшифровка.Установить("ВыбФормаУпаковки",	ВыбФормаУпаковки);   //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
	Расшифровка.Установить("ВыбПокупатель", 	ВыбПокупатель);
	Расшифровка.Установить("ВыбДоговор", 		ВыбДоговор);
	
	Расшифровка.Установить("ВыбЗаказ", 			ВыбЗаказ); 	// --- УМК Сандомирский В.Ю, (29.05.15)
	
	Расшифровка.Установить("ТолькоПросроченныйРезерв", фПросроченныйРезерв);	

	Расшифровка.Установить("фНачОст", 			фНачОст);
	Расшифровка.Установить("фПриход", 			фПриход);
	Расшифровка.Установить("фРасход", 			фРасход);
	Расшифровка.Установить("фКонОст", 			фКонОст);
	Расшифровка.Установить("фДопКво", 			фДопКво);
	
	Расшифровка.Установить("фВыводитьПримечания", фВыводитьПримечания); 			// --- УМК Сандомирский В.Ю. (02.06.15) выводить блок примечаний вначале перед таблицей
	Расшифровка.Установить("фВыводитьПримечанияСтрок", фВыводитьПримечанияСтрок); 	// --- УМК Сандомирский В.Ю. (02.06.15) выводить блок примечаний вначале перед таблицей
	
	Расшифровка.Установить("СписокПериодов",		СписокПериодов.ТекущаяСтрока());
	
	// запомним МФ только если он задан
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
	КонецЕсли;

	Расшифровка.Установить("Группировки",	Группировки);	
	Расшифровка.Установить("фБезГрупп",		фБезГрупп);
	
	Запрос				= СоздатьОбъект("Запрос");
	ЗапросСПериодами 	= СоздатьОбъект("Запрос");				//--- УМК Сандомирский В.Ю. (08.04.15)

	Если (Дата2 >= ПолучитьДатуТА()) и (ПустоеЗначение(ДокКонца) = 1) Тогда
		ТекстЗапроса = "
			|Период с Д1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Д1 по Д2;";
	КонецЕсли;
	
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, Дата1, Дата2);
	
	ТекстЗапроса = ТекстЗапроса +
		"Фирма									= Регистр.Резервы.Фирма;
		|Номенклатура 							= Регистр.Резервы.ТМЦ;" +
		?(УбратьПеременнуюЗапроса("ГруппировкаРазрешенныхВидовУпаковки",Группировки, "")=1,"",
		"ГруппировкаРазрешенныхВидовУпаковки   =Регистр.Резервы.ТМЦ.ГруппировкаРазрешенныхВидовУпаковки;") +
		?(УбратьПеременнуюЗапроса("ВидУпаковки",Группировки, ВыбВидУпаковки)=1,"",
		"ВидУпаковки                            = Регистр.Резервы.ВидУпаковки;") +
        ?(УбратьПеременнуюЗапроса("ФормаУпаковки",Группировки, ВыбФормаУпаковки)=1,"",
		 "ФормаУпаковки 							= Регистр.Резервы.ФормаУпаковки;") +
		?(УбратьПеременнуюЗапроса("Покупатель",Группировки, ВыбПокупатель)=1,"", 
		"Покупатель								= Регистр.Резервы.ДокументРезерва.Контрагент;") +
		?(УбратьПеременнуюЗапроса("Договор",Группировки, ВыбДоговор)=1,"", 
		"Договор 								= Регистр.Резервы.ДокументРезерва.Договор;") +
		?(УбратьПеременнуюЗапроса("ДокументРезерва",Группировки, ВыбЗаказ)=1,"", 
		"ДокументРезерва						= Регистр.Резервы.ДокументРезерва;") +
		?(УбратьПеременнуюЗапроса("ДатаРезерва",Группировки, "")=1,"", 
		"ДатаРезерва							= Регистр.Резервы.ДокументРезерва.ДатаДок;") +
		?(УбратьПеременнуюЗапроса("СрокРезерва",Группировки, "")=1,"", 
		"СрокРезерва 							= Регистр.Резервы.ДокументРезерва.СрокРезервирования;") +
		 " ТекущийДокумент						= Регистр.Резервы.ТекущийДокумент;
        |Резерв									= Регистр.Резервы.Резерв;" +
		?(фДопКво = 1,
		"ДопКво									= Регистр.Резервы.ДопКво;","") +
		"
		|Функция НачРезерв	= НачОст(Резерв);
		|Функция КонРезерв	= КонОст(Резерв);
		|Функция ПрихРезерв	= Приход(Резерв);
		|Функция РасхРезерв	= Расход(Резерв) когда (ТекущийДокумент.Вид() <> ""УМК_СнятиеРезерва"");
		|Функция РасхРезервС= Расход(Резерв) когда (ТекущийДокумент.Вид()  = ""УМК_СнятиеРезерва"");" +
		?(фДопКво = 1,"
		|Функция НачДопКво	= НачОст(ДопКво);
		|Функция КонДопКво	= КонОст(ДопКво);
		|Функция ПрихДопКво	= Приход(ДопКво);
		|Функция РасхДопКво	= Расход(ДопКво) когда (ТекущийДокумент.Вид() <> ""УМК_СнятиеРезерва"");
		|Функция РасхДопКвоС= Расход(ДопКво) когда (ТекущийДокумент.Вид()  = ""УМК_СнятиеРезерва"");","") +"
		|";
	
			
	Загол="";
                            
	Если фПросроченныйРезерв = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + "Условие (глБанковскаяДата(ДатаРезерва,СрокРезерва) < Дата2);";
		Загол = Загол + ?(Язык="у","Тільки резерв, прострочений на ","Только резерв, просроченный на ")+Дата2+". ";
	КонецЕсли;
	
	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Номенклатура", ВыбНоменклатура, "ВыбНоменклатура", ТекстЗапроса, Загол, Язык, "КатегорииТоваров")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по номенклатурным позициям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Покупатель", ВыбПокупатель, "ВыбПокупатель", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по покупателям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Договор", ВыбДоговор, "ВыбДоговор", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по договорам. Отчет не сформирован.");
		Возврат;		
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ДокументРезерва", ВыбЗаказ, "ВыбЗаказ", ТекстЗапроса, Загол, Язык)=0 Тогда // --- УМК Сандомирский В.Ю. (29.05.15)
		Предупреждение("Возникли ошибки при наложении фильтра по заказам. Отчет не сформирован.");
		Возврат;			
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ВидУпаковки", ВыбВидУпаковки, "ВыбВидУпаковки", ТекстЗапроса, Загол, Язык, "")=0 Тогда //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		Предупреждение("Возникли ошибки при наложении фильтра по видам упаковки. Отчет не сформирован.");
		Возврат;		
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ФормаУпаковки", ВыбВидУпаковки, "ВыбФормаУпаковки", ТекстЗапроса, Загол, Язык, "")=0 Тогда //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		Предупреждение("Возникли ошибки при наложении фильтра по формам упаковки. Отчет не сформирован.");
		Возврат;
		
	КонецЕсли;

	ТаблицаПериодов = СоздатьОбъект("ТаблицаЗначений"); 	//--- УМК Сандомирский В.Ю. (08.04.15)
	Периодичность = ПериодСтрока();
	Если Периодичность <> 0 Тогда
	    ТекстЗапросаПоПериодам = ТекстЗапроса+ "Группировка " + Периодичность + ";";
	КонецЕсли;	 //... УМК Сандомирский В.Ю. (08.04.15)
		
	ТекстГруппировок 	= "";
	ПечЗаголовокСтолбца = "";
	
	УстановитьГруппировкиЗапроса(ТекстГруппировок, ПечЗаголовокСтолбца);
	КоличествоГруппировок = СписокГруппировок.РазмерСписка();

	Если КоличествоГруппировок = 0 Тогда
		Предупреждение("Следует выбрать хотя бы одну группировку!");
		Возврат;
	КонецЕсли;
	
	Если КоличествоГруппировок > 7 Тогда
		Предупреждение("Нельзя сделать больше 7 группировок!",60);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ТекстГруппировок;
	
	Если Периодичность <> 0 Тогда
	    ТекстЗапросаПоПериодам = ТекстЗапросаПоПериодам + ТекстГруппировок;		
		Если ЗапросСПериодами.Выполнить(ТекстЗапросаПоПериодам)=0 Тогда
			Предупреждение("Запрос по периодам не выполнился!!!");
			Возврат;
		КонецЕсли;
		// Таблица с периодами
		глПолучитьТаблицуПериодов(ТаблицаПериодов,ЗапросСПериодами,Периодичность);
		ЗапросСПериодами.ВНачалоВыборки();
	КонецЕсли;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда
		Предупреждение("Запрос по резервам не выполнился!!!");
		Возврат;
	КонецЕсли;

	// обнуляем счетчик числа строк, выведенных в таблицу отчета
	глЧислоСтрок=0;           

	Таб.ВывестиСекцию("Кнопки|Наименование");	
	Таб.ВывестиСекцию("Заголовок|Наименование");
	
	Если (фВыводитьПримечания + фВыводитьПримечанияСтрок) > 0 Тогда	// --- УМК Сандомирский В.Ю. (29.05.15)
		
		ПустаяСтрочка = "";
		
		ЗапросПоЗаказам				= СоздатьОбъект("Запрос");
		Если Дата2 >= ПолучитьДатуТА() Тогда
			ТекстЗапросаПоЗаказам = "
				|Период с Дата1;";
		Иначе 
			ТекстЗапросаПоЗаказам = "
				|Период с Дата1 по Дата2;";
		КонецЕсли;
		
		ТекстЗапросаПоЗаказам = ТекстЗапросаПоЗаказам +
		"
		|ОбрабатыватьДокументы Проведенные;
		|Покупатель								= Документ.УМК_ЗаказКлиента.Контрагент; 
		|ДокументРезерва						= Документ.УМК_ЗаказКлиента.ТекущийДокумент;
		|Примечание 							= Документ.УМК_ЗаказКлиента.Примечание;
		|
		|Группировка ДокументРезерва;
		|
		|Условие(Примечание <> ПустаяСтрочка);
		|
		|";
		
		Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Покупатель", ВыбПокупатель, "ВыбПокупатель", ТекстЗапросаПоЗаказам, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
			Предупреждение("Возникли ошибки при наложении фильтра по покупателям. Отчет не сформирован.");
			Возврат;
		ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ДокументРезерва", ВыбЗаказ, "ВыбЗаказ", ТекстЗапросаПоЗаказам, Загол, Язык)=0 Тогда // --- УМК Сандомирский В.Ю. (29.05.15)
			Предупреждение("Возникли ошибки при наложении фильтра по заказам. Отчет не сформирован.");
			Возврат;		
		КонецЕсли;
	
		
		// Если ошибка в запросе, то выход из процедуры
		Если ЗапросПоЗаказам.Выполнить(ТекстЗапросаПоЗаказам)=0 Тогда
			Предупреждение("Запрос по резервам не выполнился!!!");
			Возврат;
		КонецЕсли;

		Если фВыводитьПримечания = 1 Тогда
			Таб.ВывестиСекцию("ПримечанияШапка|Наименование");
		КонецЕсли;
				
		Если фВыводитьПримечанияСтрок = 1 Тогда
			ТЗ_ПримечанияСтрок = СоздатьОбъект("ТаблицаЗначений");
			ТЗ_ПримечанияСтрок.НоваяКолонка("ИндексПоиска");
			ТЗ_ПримечанияСтрок.НоваяКолонка("ПримечаниеСтроки");
		КонецЕсли;
		
		Пока ЗапросПоЗаказам.Группировка(1) = 1 Цикл
			
			Если фВыводитьПримечания = 1 Тогда
				Если ПустоеЗначение(ЗапросПоЗаказам.ДокументРезерва.Примечание) <> 1 Тогда
					ПечПримечание = "" + СокрЛП(Строка(ЗапросПоЗаказам.ДокументРезерва.Контрагент)) + " " 
									+ СокрЛП(Строка(ЗапросПоЗаказам.ДокументРезерва.ТекущийДокумент())) + " " 
									+ СокрЛП(ЗапросПоЗаказам.ДокументРезерва.Примечание);
					РасшифровкаЗаказ = ЗапросПоЗаказам.ДокументРезерва.ТекущийДокумент();				
					Таб.ВывестиСекцию("ПримечанияСтрока|Наименование");
				КонецЕсли;
			КонецЕсли;
			
			Если фВыводитьПримечанияСтрок = 1 Тогда
				
				ТекЗаказ = ЗапросПоЗаказам.ДокументРезерва.ТекущийДокумент();
				ТекЗаказ.ВыбратьСтроки();
				Пока ТекЗаказ.ПолучитьСтроку() = 1 Цикл
					Если ПустоеЗначение(ТекЗаказ.ПримечаниеСтроки) <> 1 Тогда
						ТЗ_ПримечанияСтрок.НоваяСтрока();
						ТЗ_ПримечанияСтрок.ИндексПоиска 		= Строка(ТекЗаказ)+Строка(ТекЗаказ.ТМЦ);
						ТЗ_ПримечанияСтрок.ПримечаниеСтроки 	= СокрЛП(ТекЗаказ.ПримечаниеСтроки);
					КонецЕсли;
				КонецЦикла;
		
			КонецЕсли;
					
		КонецЦикла;
		
	КонецЕсли;
		
	ВывестиШапку();
	
	// ВЫВОД ГРУППИРОВОК ЗАПРОСА
	ВывестиГруппировки();
	
	// Вывод итогов
	ВывестиИтоги();
	
	ФиксКвоКолон = 8;
	
	Таб.ОбластьПечати(Таб.ВысотаСекции("Кнопки")+1);
	
	// Вывод заполненной формы
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);

	Таб.Показать("ПЕЧАТЬ: Отчет о резервировании товаров: ("+ПериодСтр(Дата1, Дата2)+?(ВыбФирма.Выбран()=0, "", ", "+ВыбФирма)+")","");

	Если (Обновить = 2) Или (ЗакрытьЭкран=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры     // Сформировать        

// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение="")	
	// закладки
    Если Номер=1 Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	Иначе     
		//Форма.ИспользоватьСлой("Шапка,МФ,Подвал");
		Форма.ИспользоватьСлой("Шапка,Подвал"); // Уберем МФ
	КонецЕсли;      
	ПерерисовкаНазванийЗакладок();
	ДоступностьЭлементов(1);
КонецПроцедуры	// ПриВыбореЗакладки         

// ===============================
Процедура ПриОткрытии()	// Предопределенная процедура
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		// восстанавливаем настройки из списка
		Дата1 		= глРасшифровка.Получить("Дата1");
		Дата2		= глРасшифровка.Получить("Дата2");
		
		ДокНачала			= глРасшифровка.Получить("ДокНачала");
		ДокКонца			= глРасшифровка.Получить("ДокКонца");	
		
		ВыбФирма			= глРасшифровка.Получить("ВыбФирма");
		ВыбНоменклатура		= глРасшифровка.Получить("ВыбНоменклатура");
		ВыбВидУпаковки		= глРасшифровка.Получить("ВыбВидУпаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		ВыбФормаУпаковки	= глРасшифровка.Получить("ВыбФормаУпаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		ВыбПокупатель		= глРасшифровка.Получить("ВыбПокупатель");
		ВыбДоговор			= глРасшифровка.Получить("ВыбДоговор");
		
		ВыбЗаказ			= глРасшифровка.Получить("ВыбЗаказ");			//--- УМК Сандомирский В.Ю. (29.05.15) 
		
		фПросроченныйРезерв = глРасшифровка.Получить("ТолькоПросроченныйРезерв");	
			
		фНачОст				= глРасшифровка.Получить("фНачОст");	//--- УМК Сандомирский В.Ю. (08.04.15)
		фПриход				= глРасшифровка.Получить("фПриход");	//--- УМК Сандомирский В.Ю. (08.04.15)
		фРасход				= глРасшифровка.Получить("фРасход");	//--- УМК Сандомирский В.Ю. (08.04.15)
		фКонОст				= глРасшифровка.Получить("фКонОст");	//--- УМК Сандомирский В.Ю. (08.04.15)
		фДопКво				= глРасшифровка.Получить("фДопКво");	//--- УМК Сандомирский В.Ю. (08.04.15)
		
		фВыводитьПримечания 		= глРасшифровка.Получить("фВыводитьПримечания"); 		// --- УМК Сандомирский В.Ю. (02.06.15)
		фВыводитьПримечанияСтрок 	= глРасшифровка.Получить("фВыводитьПримечанияСтрок"); 	// --- УМК Сандомирский В.Ю. (02.06.15) 
	
		СписокПериодов.ТекущаяСтрока(глРасшифровка.Получить("СписокПериодов"));
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;
		фБезГрупп = глРасшифровка.Получить("фБезГрупп");
		
		Попытка
			глРасшифровка.Получить("Группировки").Выгрузить(Группировки);
		Исключение
		КонецПопытки;
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;
	                                                                           
	ТаблицаМФ.ВидимостьКолонки("Тип",				0);
	ТаблицаМФ.ВидимостьКолонки("Вид",				0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",	0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",				0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",		0);
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	                                                                                
	ПриВыбореЗакладки(1);
	
	// будем отслеживать только реальные изменения этих реквизитов
	Форма.СписокПериодов.ВыполнятьФормулуТолькоПриИзменении(1); 
	
	Если перТипДокНачало = 0 Тогда
		перТипДокНачало = 1;
	КонецЕсли;
	
КонецПроцедуры		// ПриОткрытии

// ===============================
Процедура ВводНового()
	// эта предопределенная процедура выполняется при восстановлении настройки
	ТекСтрокаВТаблицеМФ="";
	ПриВыбореЗакладки(1);
КонецПроцедуры // ВводНового()   

// ===============================
Процедура ОбработкаПодбора(Значение)  

	ЭлементДиалога = Форма.АктивныйЭлемент();
	
	Если ЭлементДиалога = "ВыбДоговор" Тогда	// выбираем договор
		Возврат;
	КонецЕсли;
	
	Если ЭлементДиалога = "ВыбЗаказ" Тогда		// --- УМК Сандомирский В.Ю. (29.05.15) 
		Возврат;
	КонецЕсли;

	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора

// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

Дата2=ПолучитьДатуТА();
Дата1=глВосстановитьЗначение(,"ОсновнаяДатаНачалаОтчета");
Если ПустоеЗначение(Дата1)=0 Тогда
	Дата1=НачМесяца(Дата1);
КонецЕсли;         

// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
//Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");

//                  			тип			вид						переменная  			название
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ТМЦ",					"Номенклатура",    		"По позициям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыУпаковки",			"ВидУпаковки",			"По видам упаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ФормыУпаковки",		"ФормаУпаковки",		"По формам упаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Контрагенты",			"Покупатель",			"По покупателям");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",	"Договор",				"Договор",				"По договорам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",	"УМК_ЗаказКлиента",		"ДокументРезерва",		"По заказам");				//--- УМК Сандомирский В.Ю. (29.05.15)
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",		"Номенклатура",			"По категориям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",		"Покупатель",			"По категориям покупателей");

ТекСтрокаВТаблицеМФ="";

Группировки.ДобавитьЗначение("Номенклатура", 	"Номенклатура");
Группировки.ДобавитьЗначение("ВидУпаковки",   	"Вид упаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
Группировки.ДобавитьЗначение("ФормаУпаковки",   "Форма упаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
Группировки.ДобавитьЗначение("ГруппировкаРазрешенныхВидовУпаковки", "Группировка видов упаковки"); //--- УМК Сандомирский В.Ю. (29.05.15) + группировка ГруппировокВидУпаковки
Группировки.ДобавитьЗначение("Покупатель",  	"Покупатель");
Группировки.ДобавитьЗначение("Договор",   		"Договор");
Группировки.ДобавитьЗначение("ДокументРезерва", "Документ резерва");
Группировки.ДобавитьЗначение("Документ", 	    "Документ движения");

// по умолчанию
Группировки.Пометка(1,1);
Группировки.Пометка(2,1);

// список украинских названий группировок для построения шапки отчета
УкрГруппировки = СоздатьОбъект("СписокЗначений");
УкрГруппировки.ДобавитьЗначение("Номенклатура", 	"Номенклатура");
УкрГруппировки.ДобавитьЗначение("ВидУпаковки",   	"Вид пакування");//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
УкрГруппировки.ДобавитьЗначение("ФормаУпаковки",   	"Форма пакування");//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
УкрГруппировки.ДобавитьЗначение("ГруппировкаРазрешенныхВидовУпаковки",   	"Группировка видів пакування");//--- УМК Сандомирский В.Ю. (29.05.15) + группировка ГРуппировокВидУпаковки
УкрГруппировки.ДобавитьЗначение("Покупатель", 		"Покупець");
УкрГруппировки.ДобавитьЗначение("Договор",     		"Договір");
УкрГруппировки.ДобавитьЗначение("ДокументРезерва", 	"Документ резервування");           
УкрГруппировки.ДобавитьЗначение("Документ",	 	    "Документ рухів");

// расставляем флаги и значения
фБезГрупп  	= 0;

// инициализация списков диалога
СписокПериодов.УдалитьВсе();
СписокПериодов.ДобавитьЗначение("Общий","Общие итоги");
СписокПериодов.ДобавитьЗначение("День","День");
СписокПериодов.ДобавитьЗначение("Неделя","Неделя");
СписокПериодов.ДобавитьЗначение("Месяц","Месяц");  
СписокПериодов.ДобавитьЗначение("Квартал","Квартал");
СписокПериодов.ДобавитьЗначение("Год","Год");
СписокПериодов.ТекущаяСтрока(1);