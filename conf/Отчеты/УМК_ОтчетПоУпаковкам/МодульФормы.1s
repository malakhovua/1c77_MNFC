Перем спПодбора;
Перем Обновить; 
Перем Расшифровка; 
Перем Т, ТЗ,ТЗ_Групп;
Перем СписВЗ, СтрВССписаний;
Перем СтрокаДоступ;
Перем ТекЗакладка;
Перем СписокПодбора,СправочникПодбора;
Перем ТекРазрешенныеВидыУпаковки,СпВидыУпаковкиЛокальный;

//====================================================================== //---УМК Сандомирский В.Ю. (01.10.14)
Функция ПолучитьМатериалыУпаковки_2(ТекТовар,ТекВидУпаковки, БезНорм = 0)
	Элем = ТекВидУпаковки; ФормаУпаковки = "";
	СпрМатериалыУпаковок 			= СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковок");	

	Если ТекВидУпаковки.Вид() = "УМК_РазрешенныеВидыУпаковкиТМЦ" Тогда
		ФормаУпаковки = ТекВидУпаковки.ФормаУпаковки.Получить(ВыбДата);
		СпрМатериалыУпаковок.ИспользоватьВладельца(ТекВидУпаковки);
	Иначе
		СпрРазрешенныеВидыУпаковкиТМЦ 	= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
		СпрРазрешенныеВидыУпаковкиТМЦ.ИспользоватьВладельца(ТекТовар);
		Если СпрРазрешенныеВидыУпаковкиТМЦ.НайтиПоРеквизиту("ВидУпаковки", ТекВидУпаковки, 0) = 1 Тогда
			СпрМатериалыУпаковок.ИспользоватьВладельца(СпрРазрешенныеВидыУпаковкиТМЦ);
		Иначе
			Возврат "";
		КонецЕсли;		
		ФормаУпаковки = СпрРазрешенныеВидыУпаковкиТМЦ.ФормаУпаковки.Получить(ВыбДата);
	КонецЕсли;	
	
	ТекМатериалы = "";	
	СпрМатериалыУпаковок.ВыбратьЭлементы();
	Пока СпрМатериалыУпаковок.ПолучитьЭлемент() = 1 Цикл
		Если СпрМатериалыУпаковок.ПометкаУдаления() = 0 Тогда
			ТекМатериалы = ТекМатериалы + СпрМатериалыУпаковок.Материал.Получить(ВыбДата) + ?(БезНорм = 1, "", " | норма: " + СпрМатериалыУпаковок.НормаСписания.Получить(ВыбДата)) + глПравильныйСимволПереноса;
		КонецЕсли;
	КонецЦикла;	

	Если ПустоеЗначение(ФормаУпаковки) = 0 Тогда
		СпрФормы = СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковокФорм");
		СпрФормы.ИспользоватьВладельца(ФормаУпаковки);
		СпрФормы.ВыбратьЭлементы();		
		Пока СпрФормы.ПолучитьЭлемент() = 1 Цикл
			Если СпрФормы.ПометкаУдаления() = 0 Тогда
				ТекМатериалы = ТекМатериалы + СпрФормы.Материал.Получить(ВыбДата) + ?(БезНорм = 1, "", " | норма: " + 
				(СпрФормы.НормаСписания.Получить(ВыбДата)  / СпрФормы.Владелец.Кратность)) + глПравильныйСимволПереноса;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекМатериалы;	
КонецФункции // ПолучитьМатериалыУпаковки(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки)

//====================================================================== 
Функция ОпределитьНаличиеУпаковки(ТекТовар,ТекВидУпаковки)	
	Если ПустоеЗначение(ТекТовар) = 1 Тогда
		Возврат "";
	КонецЕсли;
	
	ТекРазрешенныеВидыУпаковки.ИспользоватьВладельца(ТекТовар.ТекущийЭлемент());
	Если ТекРазрешенныеВидыУпаковки.НайтиПоРеквизиту("ВидУпаковки", ТекВидУпаковки, 0) = 1 Тогда
		Если ТекВидУпаковки =  ТекРазрешенныеВидыУпаковки.ТекущийЭлемент().ВидУпаковки Тогда
			Если ТекРазрешенныеВидыУпаковки.ПометкаУдаления() = 0 Тогда
				Возврат "+";
			Иначе
				Возврат "Х";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат "";	
КонецФункции // ОпределитьНаличиеУпаковки(ТекТовар,ТекВидУпаковки)

//======================================================================
Процедура Сформировать()
	
	Если (ПустоеЗначение(ВыбДата) = 1) И (перНаличиеЦены = 2) Тогда
		Возврат;
	КонецЕсли;
	
	//--- Технологические 
	СпрЦены 	= СоздатьОбъект("Справочник.Цены");
	Расшифровка = СоздатьОбъект("СписокЗначений");
	
	ТекРазрешенныеВидыУпаковки 		= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
	ТекРазрешенныеВидыУпаковкиТМЦ 	= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
	СпВидыУпаковкиЛокальный 		= СоздатьОбъект("СписокЗначений");
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "УМК_ОтчетПоУпаковкам");
	
	Расшифровка.Установить("фКроме", фКроме);
	Расшифровка.Установить("ПоГруппам", ПоГруппам);
	Расшифровка.Установить("перГруппировкаСтрок",перГруппировкаСтрок);
	Расшифровка.Установить("перНаличиеЦены", перНаличиеЦены);
	Расшифровка.Установить("фКромеСписокУпаковок",фКромеСписокУпаковок);
	Расшифровка.Установить("СписокВыбТМЦ",СписокВыбТМЦ);
	Расшифровка.Установить("СписокГруппУпаковок",СписокГруппУпаковок);
	Расшифровка.Установить("СписокУпаковок",СписокУпаковок);
	Расшифровка.Установить("ВыбДата", ВыбДата);
	Расшифровка.Установить("фНеВыводитьПустыеСтолбцы",фНеВыводитьПустыеСтолбцы);
	Расшифровка.Установить("фФормаЗаказа",фФормаЗаказа);
	Расшифровка.Установить("фФормаЗаказаБезколичества",фФормаЗаказаБезколичества);
	Расшифровка.Установить("фВыводитьТоварыБезУпаковок",фВыводитьТоварыБезУпаковок);
	Расшифровка.Установить("фМатериалыУпаковки",фМатериалыУпаковки);
		
	//--- Типы Виды упаковок 
	Тз_ВидыУпаковок = СоздатьОбъект("ТаблицаЗначений");
	Тз_ВидыУпаковок.НоваяКолонка("ВидУпаковки","Справочник.ВидыУпаковки");
	Тз_ВидыУпаковок.НоваяКолонка("ГруппыУпаковки","Строка");
	
	// Вариант 0
//	СпрВидыУпаковок = СоздатьОбъект("Справочник.ВидыУпаковки");
//	СпрВидыУпаковок.ВыбратьЭлементы();
//	Пока СпрВидыУпаковок.ПолучитьЭлемент() = 1 Цикл
//
//		Если СпрВидыУпаковок.ЭтоГруппа() = 1 Тогда
//			Продолжить;
//		КонецЕсли;		
//		
//		
//		Если СпрВидыУпаковок.ПометкаУдаления() = 1 Тогда
//			Продолжить;
//		КонецЕсли;
//	
//		Тз_ВидыУпаковок .НоваяСтрока();
//		Тз_ВидыУпаковок .ВидУпаковки			= СпрВидыУпаковок.ТекущийЭлемент();
//		Тз_ВидыУпаковок.ГруппыУпаковки			= СпрВидыУпаковок.Родитель;
//	КонецЦикла;
	
	ЗапросПоУпаковкам = СоздатьОбъект("Запрос");

	ТекстЗапросаПоУпаковкам = 
	"//{{ЗАПРОС(СпрВидыУпаковки)
	|Период с ДатаОтчета;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Без итогов;
	|ВидУпаковки 			= Справочник.ВидыУпаковки.ТекущийЭлемент;
	|ГруппыУпаковки			= Справочник.ВидыУпаковки.ТекущийЭлемент.Родитель;
	|Группировка ВидУпаковки без групп;	
	|Группировка  ГруппыУпаковки без групп;
	|";
	
	Если СписокУпаковок.РазмерСписка() > 0 Тогда //--- УМК Сандомирский В.Ю, (15.11.14)
	
		ТекстЗапросаПоУпаковкам = ТекстЗапросаПоУпаковкам  + "
		|Условие(" + ?(фКромеСписокУпаковок = 1, "НЕ","") + "(ВидУпаковки в СписокУпаковок));
		|"//}}ЗАПРОС
		;
		
	КонецЕсли;
	
	Если ЗапросПоУпаковкам.Выполнить(ТекстЗапросаПоУпаковкам) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПоУпаковкам.Выгрузить(Тз_ВидыУпаковок);
	//Тз_ВидыУпаковок.ВыбратьСтроку();
	Тз_ВидыУпаковок.Сортировать("ГруппыУпаковки+ ,ВидУпаковки+");
	
	//Тз_ВидыУпаковок.ВыбратьСтроку(); //-------------- !!!
	
	ПечФорма = "Таблица";
	
	Если (Обновить = 0) ИЛИ (ПустоеЗначение(Обновить) = 1 ) Тогда //--- УМК Сандомирский В.Ю. 
		Т = СоздатьОбъект("Таблица");
	Иначе
		Т.Очистить();
	КонецЕсли;
	
	Т.ИсходнаяТаблица(ПечФорма);	
	
	ДатаОтчета = ВыбДата;
	Если (ВыбДата > ПолучитьДатуТА()) Тогда
		ДатаОтчета = ПолучитьДатуТА();
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");

	Если фВыводитьТоварыБезУпаковок = 0 Тогда
			
		ТекстЗапроса = 
		"//{{ЗАПРОС(СпрТМЦ)
		|Период с ДатаОтчета;
		|ВидУпаковки 			= Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ.ВидУпаковки;
		|Товар 					= Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ.Владелец;
		|ГруппаВидовУпаковок 	= Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ.Владелец.ГруппировкаРазрешенныхВидовУпаковки; 
		|";
	
	
		
		
	
		Если перГруппировкаСтрок = 1 Тогда
		
			Если ПоГруппам = 0 Тогда
				
				ТекстЗапроса = ТекстЗапроса + "
				|Группировка Товар без групп;";
				
				//|Группировка ГруппаВидовУпаковок;";
				
			Иначе
				
				ТекстЗапроса = ТекстЗапроса + "
				|Группировка Товар;";	
				
			КонецЕсли;
	
		ИначеЕсли перГруппировкаСтрок = 2 Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|Группировка ГруппаВидовУпаковок;
			|Группировка Товар;";	
			
		КонецЕсли;
		
		Если СписокВыбТМЦ.РазмерСписка() > 0 Тогда
		
			ТекстЗапроса = ТекстЗапроса + "
			|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
			|"//}}ЗАПРОС
			;
			
		КонецЕсли;
		
			
		Если СписокГруппУпаковок.РазмерСписка() > 0 Тогда
		
			ТекстЗапроса = ТекстЗапроса + "
			|Условие (ГруппаВидовУпаковок в СписокГруппУпаковок);
			|"//}}ЗАПРОС
			;
			
		КонецЕсли;
		
		
		Если СписокУпаковок.РазмерСписка() > 0 Тогда //--- УМК Сандомирский В.Ю, (15.11.14)
		
			ТекстЗапросаВидовУпаковок = ТекстЗапросаВидовУпаковок + "
			|Условие(" + ?(фКромеСписокУпаковок = 1, "НЕ","") + "(ВидУпаковки в СписокУпаковок));
			|"//}}ЗАПРОС
			;
			
		КонецЕсли;
		
	ИначеЕсли фВыводитьТоварыБезУпаковок = 1 Тогда
		
		ТекстЗапроса = 
		"//{{ЗАПРОС(СпрТМЦ)
		|Период с ДатаОтчета;
		|Товар 					= Справочник.ТМЦ.ТекущийЭлемент;
		|ГруппаВидовУпаковок 	= Справочник.ТМЦ.ГруппировкаРазрешенныхВидовУпаковки; 
		|";
			
		
			
		Если перГруппировкаСтрок = 1 Тогда
		
			Если ПоГруппам = 0 Тогда
				
				ТекстЗапроса = ТекстЗапроса + "
				|Группировка Товар без групп;";
				
				//|Группировка ГруппаВидовУпаковок;";
				
			Иначе
				
				ТекстЗапроса = ТекстЗапроса + "
				|Группировка Товар;";	
				
			КонецЕсли;
	
		ИначеЕсли перГруппировкаСтрок = 2 Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|Группировка ГруппаВидовУпаковок;
			|Группировка Товар;";	
			
		КонецЕсли;
		
		Если СписокВыбТМЦ.РазмерСписка() > 0 Тогда
		
			ТекстЗапроса = ТекстЗапроса + "
			|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
			|"//}}ЗАПРОС
			;
			
		КонецЕсли;
		
			
		Если СписокГруппУпаковок.РазмерСписка() > 0 Тогда
		
			ТекстЗапроса = ТекстЗапроса + "
			|Условие (ГруппаВидовУпаковок в СписокГруппУпаковок);
			|"//}}ЗАПРОС
			;
			
		КонецЕсли;

			
	КонецЕсли;	
		
		
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	//---  Запрос по видам упаковки у товаров главной выборки
	ЗапросВидовУпаковок = СоздатьОбъект("Запрос");

	ТекстЗапросаВидовУпаковок = 
	"//{{ЗАПРОС(СпрТМЦ)
	|Обрабатывать НеПомеченныеНаУдаление;
	|Без итогов;
	|Товар 		 = Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ.Владелец;
	|ВидУпаковки = Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ.ВидУпаковки;
	|Группировка ВидУпаковки без групп без упорядочивания;
	|";
	
	
	Если СписокВыбТМЦ.РазмерСписка() > 0 Тогда
	
		ТекстЗапросаВидовУпаковок = ТекстЗапросаВидовУпаковок + "
		|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
		|"//}}ЗАПРОС
		;
		
	КонецЕсли;
	
	Если СписокУпаковок.РазмерСписка() > 0 Тогда //--- УМК Сандомирский В.Ю, (15.11.14)
	
		ТекстЗапросаВидовУпаковок = ТекстЗапросаВидовУпаковок + "
		|Условие(" + ?(фКромеСписокУпаковок = 1, "НЕ","") + "(ВидУпаковки в СписокУпаковок));
		|"//}}ЗАПРОС
		;
		
	КонецЕсли;
	
	Если СписокГруппУпаковок.РазмерСписка() > 0 Тогда
	
		ТекстЗапросаВидовУпаковок = ТекстЗапросаВидовУпаковок + "
		|Условие (ГруппаВидовУпаковок в СписокГруппУпаковок);
		|"//}}ЗАПРОС
		;
		
	КонецЕсли;
		
	Если ЗапросВидовУпаковок.Выполнить(ТекстЗапросаВидовУпаковок) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗ_УплотненныеУпаковки = СоздатьОбъект("ТаблицаЗначений");
	ЗапросВидовУпаковок.Выгрузить(ТЗ_УплотненныеУпаковки);
	ТЗ_УплотненныеУпаковки.НоваяКолонка("ГруппыУпаковки");
	
	Если фНеВыводитьПустыеСтолбцы = 1 Тогда
		Тз_ВидыУпаковок.Загрузить(ТЗ_УплотненныеУпаковки);
	КонецЕсли;
	
	ТЗтовары = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗтовары);
	Если ТЗтовары.КоличествоСтрок() = 0 Тогда
		Возврат;		
	КонецЕсли;
	

	Т.ВывестиСекцию("Кнопки");	
	Т.ВывестиСекцию("Заголовок|Основная");

	
	Т.ВывестиСекцию("ШапкаГруппы|Основная");
	
	Если перНаличиеЦены <> 3 Тогда
			
		Тз_ВидыУпаковок.ВыбратьСтроки();
		Пока Тз_ВидыУпаковок.ПолучитьСтроку() = 1 Цикл
			
			ПечВидУпаковки = СокрЛП(Тз_ВидыУпаковок.ВидУпаковки.Родитель.Наименование);
			Т.ПрисоединитьСекцию("ШапкаГруппы|Упаковка");
		
		КонецЦикла;
	
	КонецЕсли;
	
	Т.ВывестиСекцию("ШапкаЭлементы|Основная");
	
	Если перНаличиеЦены <> 3 Тогда		
		Тз_ВидыУпаковок.ВыбратьСтроки();
		Пока Тз_ВидыУпаковок.ПолучитьСтроку() = 1 Цикл
			
			ПечВидУпаковки = СокрЛП(Тз_ВидыУпаковок.ВидУпаковки.Наименование);
			Т.ПрисоединитьСекцию("ШапкаЭлементы|Упаковка");		
		КонецЦикла;		
	КонецЕсли;
	
	//--- Уплотняем таблицу видов упаковки 

	Запрос.вНачалоВыборки();	
	Если перГруппировкаСтрок = 1 Тогда	
		Пока Запрос.Группировка(1) = 1 Цикл		
			Если  Запрос.Товар.ЭтоГруппа() = 1 Тогда	
				ПечГруппа = Запрос.Товар;	
				Т.ВывестиСекцию("ГруппаТовар|Основная");		
			Иначе
				РасчетняЦена = "";
				ПечТовар 		= Запрос.Товар;								
				Если (перНаличиеЦены = 3) И (фФормаЗаказа = 1) Тогда					
					Если фФормаЗаказаБезколичества = 1 Тогда
						Т.ВывестиСекцию("ТоварЗаказ<|Основная");	
					Иначе
						Т.ВывестиСекцию("ТоварЗаказ|Основная");			
					КонецЕсли;
					
					ПечЯчейка = "Без упак.";
					ПечЦена   = "";
					
					Если фМатериалыУпаковки = 1  Тогда
						ПечМатериалы		= ПолучитьМатериалыУпаковки_2(Запрос.Товар, ТекРазрешенныеВидыУпаковкиТМЦ);
						Т.ПрисоединитьСекцию("Материалы|УпаковкаМатериалы");	
					Иначе
						Если фФормаЗаказаБезколичества = 1 Тогда
							Т.ПрисоединитьСекцию("ТоварЗаказ<|УпаковкаЗаказ");
						Иначе
							Т.ПрисоединитьСекцию("ТоварЗаказ|УпаковкаЗаказ");			
						КонецЕсли;
					КонецЕсли;							
				Иначе
					Т.ВывестиСекцию("Товар|Основная");
				КонецЕсли;
				
				Если фФормаЗаказа = 1 Тогда
					ТекРазрешенныеВидыУпаковкиТМЦ.ИспользоватьВладельца(Запрос.Товар);
					ТекРазрешенныеВидыУпаковкиТМЦ.ПорядокКодов();
					ТекРазрешенныеВидыУпаковкиТМЦ.ВыбратьЭлементы();
					Пока ТекРазрешенныеВидыУпаковкиТМЦ.ПолучитьЭлемент() = 1 Цикл						
						//Если ТекРазрешенныеВидыУпаковкиТМЦ.ПометкаУдаления() = 1 Тогда //--- не выводить помеченные на удаление
						//	Продолжить;
						//КонецЕсли;						
						Если СписокУпаковок.РазмерСписка() > 0 Тогда							
							Если СписокУпаковок.НайтиЗначение(ТекРазрешенныеВидыУпаковкиТМЦ.ВидУпаковки) = 0 Тогда
								Продолжить;		
							КонецЕсли;							
						КонецЕсли;						
						
						ПечЯчейка = ТекРазрешенныеВидыУпаковкиТМЦ.ВидУпаковки;
						ПечЦена   = Строка(Формат(глПолучитьЦенуУпаковки(Запрос.Товар,ТекРазрешенныеВидыУпаковкиТМЦ.ВидУпаковки,ВыбДата),"Ч1.2"));						
						
						Если фМатериалыУпаковки = 1  Тогда						
							ПечМатериалы		= ПолучитьМатериалыУпаковки_2(Запрос.Товар,ТекРазрешенныеВидыУпаковкиТМЦ);
							Т.ПрисоединитьСекцию("Материалы|УпаковкаМатериалы");						
						Иначе						
							Если фФормаЗаказаБезколичества = 1 Тогда
								Т.ПрисоединитьСекцию("ТоварЗаказ<|УпаковкаЗаказ");
							Иначе
								Т.ПрисоединитьСекцию("ТоварЗаказ|УпаковкаЗаказ");			
							КонецЕсли;						
						КонецЕсли;						
					КонецЦикла;
				Иначе			
					Тз_ВидыУпаковок.ВыбратьСтроки();
					Пока Тз_ВидыУпаковок.ПолучитьСтроку() = 1 Цикл
						ПечВидУпаковки = СокрЛП(Тз_ВидыУпаковок.ВидУпаковки.Наименование);	
						ПечЯчейка = ОпределитьНаличиеУпаковки(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки);	
						
						Если (ПечЯчейка = "+") И (перНаличиеЦены = 2) Тогда
							ПечЯчейка = Формат(глПолучитьЦенуУпаковки(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки,ВыбДата),"Ч1.2");
						КонецЕсли;
						
						Если (ПечЯчейка = "+") И (перНаличиеЦены = 4) Тогда
							ПечЯчейка = ПолучитьМатериалыУпаковки_2(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки, 1);
						КонецЕсли;
																	
						Если перНаличиеЦены = 3 Тогда
							Если ПечЯчейка = "+" Тогда
								ПечЯчейка = Тз_ВидыУпаковок.ВидУпаковки;								
								ПечЦена   = Строка(Формат(глПолучитьЦенуУпаковки(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки,ВыбДата),"Ч1.2"));								
								Т.ПрисоединитьСекцию("Товар|Упаковка");								
							КонецЕсли;
						Иначе
							Т.ПрисоединитьСекцию("Товар|Упаковка");
						КонецЕсли;						
					КонецЦикла;					
				КонецЕсли;					
			КонецЕсли;			
		КонецЦикла;		
	ИначеЕсли перГруппировкаСтрок = 2 Тогда		
		Пока Запрос.Группировка(1) = 1 Цикл			
			ПечГруппа = Запрос.ГруппаВидовУпаковок;
			Т.ВывестиСекцию("ГруппаТовар|Основная");			
			Пока Запрос.Группировка(2) = 1 Цикл				
				Если  Запрос.Товар.ЭтоГруппа() = 1 Тогда	
					Продолжить;
				КонецЕсли;				
				РасчетняЦена = "";
				ПечТовар 		= Запрос.Товар;				
				Если (перНаличиеЦены = 3) И (фФормаЗаказа = 1) Тогда
					Если фФормаЗаказаБезколичества = 1 Тогда
						Т.ВывестиСекцию("ТоварЗаказ<|Основная");	
					Иначе
						Т.ВывестиСекцию("ТоварЗаказ|Основная");			
					КонецЕсли;					
					
					ПечЯчейка = "Без упак.";
					ПечЦена   = "";
					
					Если фМатериалыУпаковки = 1  Тогда						
						ПечМатериалы		= ПолучитьМатериалыУпаковки_2(Запрос.Товар,ТекРазрешенныеВидыУпаковкиТМЦ);
						Т.ПрисоединитьСекцию("Материалы|УпаковкаМатериалы");						
					Иначе					
						Если фФормаЗаказаБезколичества = 1 Тогда
							Т.ПрисоединитьСекцию("ТоварЗаказ<|УпаковкаЗаказ");
						Иначе
							Т.ПрисоединитьСекцию("ТоварЗаказ|УпаковкаЗаказ");			
						КонецЕсли;						
					КонецЕсли;								
				Иначе
					Т.ВывестиСекцию("Товар|Основная");
				КонецЕсли;
				
				Тз_ВидыУпаковок.ВыбратьСтроки();
				Пока Тз_ВидыУпаковок.ПолучитьСтроку() = 1 Цикл
					ПечВидУпаковки = СокрЛП(Тз_ВидыУпаковок.ВидУпаковки.Наименование);	
					ПечЯчейка = ОпределитьНаличиеУпаковки(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки);	
					Если (ПечЯчейка = "+") И (перНаличиеЦены = 2) Тогда
						ПечЯчейка = Формат(глПолучитьЦенуУпаковки(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки,ВыбДата),"Ч1.2");
					КонецЕсли;	
					
					Если (ПечЯчейка = "+") И (перНаличиеЦены = 4) Тогда
						ПечЯчейка = ПолучитьМатериалыУпаковки_2(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки, 1);
					КонецЕсли;
																
					Если перНаличиеЦены = 3 Тогда
						Если ПечЯчейка = "+" Тогда
							ПечЯчейка = Тз_ВидыУпаковок.ВидУпаковки;
							   
							ПечЦена   = Строка(Формат(глПолучитьЦенуУпаковки(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки,ВыбДата),"Ч1.2"));
							
				
						
							Если (перНаличиеЦены = 3) И (фФормаЗаказа = 1) Тогда								
								Если фМатериалыУпаковки = 1  Тогда					
									ПечМатериалы		= ПолучитьМатериалыУпаковки_2(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки);
									Т.ПрисоединитьСекцию("Материалы|УпаковкаМатериалы");								
								Иначе								
									Если фФормаЗаказаБезколичества = 1 Тогда
										Т.ПрисоединитьСекцию("ТоварЗаказ<|УпаковкаЗаказ");
									Иначе
										Т.ПрисоединитьСекцию("ТоварЗаказ|УпаковкаЗаказ");			
									КонецЕсли;								
								КонецЕсли;								
							Иначе	
								Т.ПрисоединитьСекцию("Товар|Упаковка");
							КонецЕсли;						
						КонецЕсли;
					Иначе
						Т.ПрисоединитьСекцию("Товар|Упаковка");
					КонецЕсли;
					
				КонецЦикла;		
			КонецЦикла;			
		КонецЦикла;		
	КонецЕсли;	
	
	//--- Постобработка 
	
	Тз_ВидыУпаковок.ВыбратьСтроки();
	Ном = 0;
	ТочкаНачала = 3;
	ТекГруппа = "";
	Пока Тз_ВидыУпаковок.ПолучитьСтроку() = 1 Цикл
		Ном = Ном + 1;
		ПечВидУпаковки = СокрЛП(Тз_ВидыУпаковок.ВидУпаковки.Родитель.Наименование);
		Если (ТекГруппа <> ПечВидУпаковки) Тогда
			ТекГруппа = ПечВидУпаковки;
			Т.Область(3, ТочкаНачала, 3, ТочкаНачала+Ном-2).Объединить();
			//	Сообщить("3," + ТочкаНачала + ",3," + (ТочкаНачала+Ном-2));
			ТочкаНачала = ТочкаНачала+Ном-1;
			Ном = 1;
		КонецЕсли;		
	КонецЦикла;
	
	Т.Область(3, ТочкаНачала, 3, ТочкаНачала+Ном-1).Объединить(); //--- Объединяем последнюю
	//Сообщить("3," + ТочкаНачала + ",3," + (ТочкаНачала+Ном-1));
	
	
	Т.ПовторятьПриПечатиСтроки(3,3);
	Т.ОбластьПечати(2);
	
	Если фФормаЗаказа = 1 Тогда
		Т.ПараметрыСтраницы(1,,,,,,,,,1);
	Иначе
		Т.ПараметрыСтраницы(2,,,,,,,,,1);
	КонецЕсли;
	 
	Т.ТолькоПросмотр(1);
	Т.Опции(0,0,4,2);
	Т.Показать("Отчет по упаковкам ТМЦ", "");
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ОбработкаПодбора(Значение) 	
	Перем ПредставлениеЗначения;
	
	Если (ВРег(Значение.Вид())=СправочникПодбора) И (СписокПодбора.НайтиЗначение(Значение)=0) Тогда
		ПредставлениеЗначения = Строка(Значение);
		Если СписокПодбора.НайтиЗначение(Значение) <> 1 Тогда
			СписокПодбора.ДобавитьЗначение(Значение,ПредставлениеЗначения);
		КонецЕсли;
		СписокПодбора.ТекущаяСтрока(СписокПодбора.РазмерСписка());
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()  
		
	Если глФлагРасшифровки = 1 Тогда 
		
		Обновить 		= глОбновить;	
		ВыбДата 		= глРасшифровка.Получить("ВыбДата");
		фКроме 			= глРасшифровка.Получить("фКроме");
		ПоГруппам 		= глРасшифровка.Получить("ПоГруппам");	
		перНаличиеЦены 	= глРасшифровка.Получить("перНаличиеЦены");
		перГруппировкаСтрок= глРасшифровка.Получить("перГруппировкаСтрок");
	
		фКромеСписокУпаковок 		= глРасшифровка.Получить("фКромеСписокУпаковок");
		фНеВыводитьПустыеСтолбцы 	= глРасшифровка.Получить("фНеВыводитьПустыеСтолбцы");
		фФормаЗаказа				= глРасшифровка.Получить("фФормаЗаказа");
		фФормаЗаказаБезколичества	= глРасшифровка.Получить("фФормаЗаказаБезколичества");
		фВыводитьТоварыБезУпаковок	= глРасшифровка.Получить("фВыводитьТоварыБезУпаковок");
		фМатериалыУпаковки			= глРасшифровка.Получить("фМатериалыУпаковки");
		
		глРасшифровка.Получить("СписокВыбТМЦ").Выгрузить(СписокВыбТМЦ);
		глРасшифровка.Получить("СписокГруппУпаковок").Выгрузить(СписокГруппУпаковок);
		глРасшифровка.Получить("СписокУпаковок").Выгрузить(СписокУпаковок);
				
		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;  
		
	ИначеЕсли глФлагРасшифровки = 5 Тогда	
		глРасшифровка.Получить("СписокВыбТМЦ").Выгрузить(СписокВыбТМЦ); 
		
	Иначе
		
		Обновить = 0;
		РесурсСумма = 1;
		
	КонецЕсли;
	
	Если перНаличиеЦены = 0 Тогда
		перНаличиеЦены = 1
	КонецЕсли;
	Если перГруппировкаСтрок = 0 Тогда
		перГруппировкаСтрок = 1
	КонецЕсли;
	
	
КонецПроцедуры	

//======================================================================
Процедура ПриЗакрытии()

	//СохранитьЗначение("фКроме", фКроме);
	//СохранитьЗначение("ПоГруппам", ПоГруппам);
	
КонецПроцедуры

//======================================================================
// Название: РаботаСоСписком
// Параметры:
// 	Режим - строка, принимающая 4 значения:
//		"Добавить"
//		"ДобавитьНесколько"
// 		"Удалить"
// 		"УдалитьВсе"
//	Список - список значений, в котором задается множественный фильтр
//	ТипСправочника - строка, содержащая идентификатор справочнника, по
//						которому осуществляется мноджественный фильтр
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//   кнопок работы с множественными фильтрами ("...",".....","X","XX")
// Наименование,.
// Описание:
// процедура предназначена для добавления и удаления элементов
// из множественных фильтров
Процедура РаботаСоСписком(Режим,Список,ТипСправочника)
	
	Перем ТекПоз;
	Перем ТекЭлемент;
	Перем Фрм;
                                     
	Если ТипСправочника = "Категории" Тогда
		ТипСправочника = "ВидыКатегорий";
	КонецЕсли;	
	
	ТекПоз = Список.ТекущаяСтрока();
	Если ТекПоз>0 Тогда
		ТекЭлемент=Список.ПолучитьЗначение(ТекПоз);
	КонецЕсли;

	Если Режим="Добавить" Тогда		// добавляем в список один элемент
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,0,ТекЭлемент);
		Фрм.ВыборГруппы(1);

	ИначеЕсли Режим="ДобавитьНесколько" Тогда  // добавляем в список несколько элементов
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,1,ТекЭлемент);
		Фрм.ВыборГруппы(1);

 	ИначеЕсли Режим="УдалитьВсе" Тогда	// удаляем все элементы из списка
		Список.УдалитьВсе();

	ИначеЕсли Режим="Удалить" Тогда	// удаляем из списка один элемент
		Если ТекПоз>0 Тогда
			Список.УдалитьЗначение(ТекПоз);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры		// работа со списком

//======================================================================
Функция УстДоступность()  
	
	//Форма.тВыбДата.Видимость(?(перНаличиеЦены=2,1,0));
	//Форма.ВыбДата.Видимость(?(перНаличиеЦены=2,1,0));	
	Форма.фФормаЗаказаБезколичества.Видимость(фФормаЗаказа);
	Форма.фВыводитьТоварыБезУпаковок.Видимость(фФормаЗаказа);

	Возврат "";
КонецФункции

//======================================================================
Процедура ОбработкаЯчейкиТаблицы(ТекЗначение,фСтандартнойОбработки,ТекТаблица,ТекАдрес)
	
	Если ТипЗначенияСтр(ТекЗначение) = "СписокЗначений" Тогда
		глОбработкаЯчейкиТаблицы(ТекЗначение, фСтандартнойОбработки, ТекТаблица, ТекАдрес);		
	Иначе	
		Если ТекЗначение.Вид() = "ТМЦ" Тогда
			фСтандартнойОбработки = 0;
			ТекКонтекстФормы = "РазрешенныеВидыУпаковки"; //--- передаем параметр отурыть на определенной закладке
			ОткрытьФорму(ТекЗначение,ТекКонтекстФормы); 	
		КонецЕсли;
	КонецЕсли;
	
	////--- УМК Сандомирский В.Ю. (11.09.14) добавляю открытие справочника
	//Если ТипЗначенияСтр(Расшифровка) = "Справочник" Тогда
	//	Если Расшифровка.Вид() = "ТМЦ" Тогда
	//		фСтандартнойОбработки = 0;
	//		ТекКонтекстФормы = "РазрешенныеВидыУпаковки";
	//		//--- можно еще кучу параметров
	//		ОткрытьФорму(Расшифровка,ТекКонтекстФормы); 
	//	КонецЕсли;
	//	Возврат;
	//КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура УстФормаЗаказа()
	Если фФормаЗаказа <> 1 Тогда
		фФормаЗаказаБезколичества = 0;
	Иначе
		перНаличиеЦены = 3;
	КонецЕсли;
КонецПроцедуры // УстФормаЗаказа

ВыбБазоваяКатегорияЦен 	= ВосстановитьЗначение("ВыбБазоваяКатегорияЦен");
фТолькоСхемы 			= ВосстановитьЗначение("фТолькоСхемы");
фКроме 					= ВосстановитьЗначение("фКроме");
ПоГруппам			 	= ВосстановитьЗначение("ПоГруппам");

ВыбДата = ТекущаяДата(); 