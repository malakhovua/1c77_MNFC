Перем спПодбора;
Перем Обновить; 
Перем Расшифровка; 
Перем Т, ТЗ,ТЗ_Групп;
Перем СписВЗ, СтрВССписаний;
Перем СтрокаДоступ;
Перем Тз_ВидыУпаковок;
Перем СписокПодбора,СправочникПодбора;
Перем ТекРазрешенныеВидыУпаковки,СпВидыУпаковкиЛокальный, ТекРазрешенныеВидыУпаковкиТМЦ;

//====================================================================== //---УМК Сандомирский В.Ю. (01.10.14)
Функция ПолучитьМатериалыУпаковки(ТекТовар,ТекВидУпаковки)
	СпрМатериалыУпаковок 			= СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковок");
	СпрРазрешенныеВидыУпаковкиТМЦ 	= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
	СпрРазрешенныеВидыУпаковкиТМЦ.ИспользоватьВладельца(ТекТовар);
	Если СпрРазрешенныеВидыУпаковкиТМЦ.НайтиПоРеквизиту("ВидУпаковки",ТекВидУпаковки,0) = 1 Тогда
		СпрМатериалыУпаковок.ИспользоватьВладельца(СпрРазрешенныеВидыУпаковкиТМЦ);
		СпрМатериалыУпаковок.ВыбратьЭлементы();
		ТекМатириалы = "";
		Пока СпрМатериалыУпаковок.ПолучитьЭлемент() = 1 Цикл
			ТекМатириалы = ТекМатириалы + СпрМатериалыУпаковок.Материал;
		КонецЦикла;
		Возврат ТекМатириалы;
	КонецЕсли;
	
КонецФункции // ПолучитьМатериалыУпаковки(Запрос.Товар,Тз_ВидыУпаковок.ВидУпаковки)

//====================================================================== 
Функция ОпределитьНаличиеУпаковки(ТекТовар,ТекВидУпаковки)	
	Если ПустоеЗначение(ТекТовар) = 1 Тогда
		Возврат "";
	КонецЕсли;
	
	ТекРазрешенныеВидыУпаковки.ИспользоватьВладельца(ТекТовар.ТекущийЭлемент());
	Если ТекРазрешенныеВидыУпаковки.НайтиПоРеквизиту("ВидУпаковки", ТекВидУпаковки, 0) = 1 Тогда
		Если ТекВидУпаковки =  ТекРазрешенныеВидыУпаковки.ТекущийЭлемент().ВидУпаковки Тогда
			Если ТекРазрешенныеВидыУпаковки.ПометкаУдаления() = 0 Тогда
				Возврат "+";
			Иначе
				Возврат "Х";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат "";	
КонецФункции // ОпределитьНаличиеУпаковки(ТекТовар,ТекВидУпаковки)

//======================================================================
Процедура ВывестиТовар(ТекТовар)		
	ПечТовар 		= ТекТовар;		
	
	Т.ВывестиСекцию("Товар|Основная");		
	Если  перЗначения = 1 Тогда				
		Тз_ВидыУпаковок.ВыбратьСтроки();
		Пока Тз_ВидыУпаковок.ПолучитьСтроку() = 1 Цикл
			ПечВидУпаковки = СокрЛП(Тз_ВидыУпаковок.ВидУпаковки.Наименование);	
			ПечЯчейка = ОпределитьНаличиеУпаковки(ТекТовар,Тз_ВидыУпаковок.ВидУпаковки);
			Т.ПрисоединитьСекцию("Товар|Упаковка");
		КонецЦикла;			
	ИначеЕсли ПерЗначения = 2 Тогда		
		ПечЯчейка = "Без упак.";
		//СписУп = СоздатьОбъект("СписокЗначений");
		СписУп = СоздатьОбъект("ТаблицаЗначений");
		СписУп.НоваяКолонка("ВУ", "Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
		СписРекв = СоздатьОбъект("СписокЗначений");
		Для Инд = 1 По списРеквизитов.РазмерСписка() Цикл
			Если списРеквизитов.Пометка(Инд) = 1 Тогда
				Стр = "";
				Зн = списРеквизитов.ПолучитьЗначение(Инд, Стр);
				СписРекв.ДобавитьЗначение(Зн, Стр);
			КонецЕсли;
		КонецЦикла;
		СписУп.НоваяКолонка("Цена", "Число", 15, 2);
		СписУп.НоваяКолонка("Себестоимость", "Число", 15, 2);
		
		Т.ПрисоединитьСекцию("Товар|УпаковкаРеквизиты");
		ТЦен = СоздатьОбъект("ТаблицаЗначений");
		ТЦен.НоваяКолонка("ТипЦен", "Справочник.КатегорииЦен");
		
		СпрЦеныУп = СоздатьОбъект("Справочник.УМК_ЦеныУпаковки");		
		ТекРазрешенныеВидыУпаковкиТМЦ.ИспользоватьВладельца(ТекТовар);
		ТекРазрешенныеВидыУпаковкиТМЦ.ПорядокКодов();
		ТекРазрешенныеВидыУпаковкиТМЦ.ВыбратьЭлементы();
		Пока ТекРазрешенныеВидыУпаковкиТМЦ.ПолучитьЭлемент() = 1 Цикл			
			Если фБезПомеченных = 1 Тогда
				Если ТекРазрешенныеВидыУпаковкиТМЦ.ПометкаУдаления() = 1 Тогда //--- не выводить помеченные на удаление
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Если СписокУпаковок.РазмерСписка() > 0 Тогда				
				Если СписокУпаковок.НайтиЗначение(ТекРазрешенныеВидыУпаковкиТМЦ.ВидУпаковки) = 0 Тогда
					Продолжить;		
				КонецЕсли;					
			КонецЕсли;
			
			СписУп.НоваяСтрока();
			СписУп.ВУ = ТекРазрешенныеВидыУпаковкиТМЦ.ТекущийЭлемент();			
			СписУп.Себестоимость = СписУп.ВУ.Себестоимость.Получить(ВыбДата);
			
			Если фЦеныИскл = 1 Тогда
				ТЦен.НоваяКолонка("Ц" + СписУп.КоличествоСтрок(), "Число");
				ТЦен.НоваяКолонка("Э" + СписУп.КоличествоСтрок(), "Справочник.УМК_ЦеныУпаковки");
				СпрЦеныУп.ИспользоватьВладельца(ТекРазрешенныеВидыУпаковкиТМЦ.ТекущийЭлемент());
				Если ПустоеЗначение(ВыбТипЦен) = 0 Тогда
					СпрЦеныУп.ВыбратьЭлементыПоРеквизиту("КатегорияЦены", ВыбТипЦен, 1, 0);
				Иначе
					СпрЦеныУп.ВыбратьЭлементы();
				КонецЕсли;
				Пока СпрЦеныУп.ПолучитьЭлемент() = 1 Цикл
					Если (СпрЦеныУп.ПометкаУдаления() = 0) И (СпрЦеныУп.Действует.Получить(ВыбДата) = 1) Тогда
						СтрТЦУ = 0;
						Если ТЦен.НайтиЗначение(СпрЦеныУп.КатегорияЦены, СтрТЦУ, "ТипЦен") = 0 Тогда
							ТЦен.НоваяСтрока();
							ТЦен.ТипЦен = СпрЦеныУп.КатегорияЦены;
						Иначе
							ТЦен.ПолучитьСтрокуПоНомеру(СтрТЦУ);
						КонецЕсли;
						ТЦен.УстановитьЗначение(ТЦен.НомерСтроки, "Ц" + СписУп.КоличествоСтрок(), СпрЦеныУп.Цена.Получить(ВыбДата));
						ТЦен.УстановитьЗначение(ТЦен.НомерСтроки, "Э" + СписУп.КоличествоСтрок(), СпрЦеныУп.ТекущийЭлемент());
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если фТМЦбезГрупп + фЦена + фРазница + фРазницаП + фЦенаТМЦвупаковке <> 0 Тогда
				СписУп.Цена = 0;
				Если фЦенаТМЦвупаковке = 1 Тогда
					СпрЦеныУп.ИспользоватьВладельца(ТекРазрешенныеВидыУпаковкиТМЦ.ТекущийЭлемент());
					Если СпрЦеныУп.НайтиПоРеквизиту("КатегорияЦены", ВыбТипЦен, 0) = 1 Тогда
						СписУп.Цена = СпрЦеныУп.Цена.Получить(ВыбДата);
					КонецЕсли;
				КонецЕсли;
				
				Если СписУп.Цена = 0 Тогда
					СписУп.Цена = СписУп.ВУ.Цена.Получить(ВыбДата);
				КонецЕсли;
			КонецЕсли;
			
			ПечЯчейка = ТекРазрешенныеВидыУпаковкиТМЦ.ВидУпаковки;
			ТекРазрешенныеВидыУпаковкиТМЦ.ИспользоватьДату(ВыбДата,1);
			Т.ПрисоединитьСекцию("Товар|УпаковкаРеквизиты" + ?(ТекРазрешенныеВидыУпаковкиТМЦ.ПометкаУдаления() = 1, "ПУ", ""));
		КонецЦикла;		
		
		Если фЦенаТМЦвупаковке = 1 Тогда //--- Вывод реквизита 			
			Т.ВывестиСекцию("ЦенаТМЦвупаковке|Основная");					
			
			Ц = глВернутьЦену(ТекТовар, ВыбТипЦен, ВыбДата); 
			ПечЦенаТМЦВупаковке		= Строка(Формат(Ц,"Ч14.2"));
			Т.ПрисоединитьСекцию("ЦенаТМЦвупаковке|УпаковкаРеквизиты");

			СписУп.ВыбратьСтроки();
			Пока СписУп.ПолучитьСтроку() = 1 Цикл
				ПечЦенаТМЦВупаковке		= Строка(Формат(Ц + СписУп.Цена,"Ч14.2")); 
				Т.ПрисоединитьСекцию("ЦенаТМЦвупаковке|УпаковкаРеквизиты");													
			КонецЦикла;		
		КонецЕсли;		
		Если фЦена = 1 Тогда //--- Вывод реквизита 			
			Т.ВывестиСекцию("ЦенаФилиала|Основная");			
			Т.ПрисоединитьСекцию("ЦенаФилиала|УпаковкаРеквизиты");	
			
			СписУп.ВыбратьСтроки();
			Пока СписУп.ПолучитьСтроку() = 1 Цикл
				ПечЦенаФилиала  	= Формат(СписУп.Цена, "Ч41.2");
				Т.ПрисоединитьСекцию("ЦенаФилиала|УпаковкаРеквизиты");													
			КонецЦикла;		
		КонецЕсли;

		Если фКодВесы = 1 Тогда //--- Вывод реквизита 
			Т.ВывестиСекцию("КодВВесах|Основная");
			Если ПустоеЗначение(СписУп.ВУ) = 1 Тогда
				ПечКодВВесах = Формат(Число(ТекТовар.КодЭ), "Ч(0)4");
			Иначе
				ПечКодВВесах = Формат(Число(СписУп.ВУ.Владелец.КодЭ), "Ч(0)4");
			КонецЕсли;
			Т.ПрисоединитьСекцию("КодВВесах|УпаковкаРеквизиты");	
			
			СписУп.ВыбратьСтроки();
			Пока СписУп.ПолучитьСтроку() = 1 Цикл
				ПечКодВВесах = ?(СписУп.ВУ.КодPLU = 0, "не уст.", Строка(СписУп.ВУ.КодPLU) + Формат(Число(СписУп.ВУ.Владелец.КодЭ), "Ч(0)3"));
				Т.ПрисоединитьСекцию("КодВВесах|УпаковкаРеквизиты");													
			КонецЦикла;		
		КонецЕсли;
		Если фСС = 1 Тогда //--- Вывод реквизита 			
			Т.ВывестиСекцию("Себестоимость|Основная");			
			Т.ПрисоединитьСекцию("Себестоимость|УпаковкаРеквизиты");	
			
			СписУп.ВыбратьСтроки();
			Пока СписУп.ПолучитьСтроку() = 1 Цикл
				ПечСебестоимость = Формат(СписУп.Себестоимость,"Ч41.2");						
				Т.ПрисоединитьСекцию("Себестоимость|УпаковкаРеквизиты");													
			КонецЦикла;		
		КонецЕсли;
		Если фРазница = 1 Тогда //--- Вывод реквизита 			
			Т.ВывестиСекцию("Разница|Основная");			
			Т.ПрисоединитьСекцию("Разница|УпаковкаРеквизиты");	
			
			СписУп.ВыбратьСтроки();
			Пока СписУп.ПолучитьСтроку() = 1 Цикл
				ПечРазница = Формат(СписУп.Цена - 
					СписУп.Себестоимость,"Ч41.2");
				Т.ПрисоединитьСекцию("Разница|УпаковкаРеквизиты");													
			КонецЦикла;		
		КонецЕсли;
		Если фРазницаП = 1 Тогда //--- Вывод реквизита 			
			Т.ВывестиСекцию("РазницаП|Основная");			
			Т.ПрисоединитьСекцию("РазницаП|УпаковкаРеквизиты");	
			
			СписУп.ВыбратьСтроки();
			Пока СписУп.ПолучитьСтроку() = 1 Цикл
				СС = СписУп.Себестоимость;
				ПечРазницаП = Формат((СписУп.Цена - СС) / ?(СС = 0, 1, СС) * 100,"Ч41.2");
				Т.ПрисоединитьСекцию("РазницаП|УпаковкаРеквизиты");													
			КонецЦикла;		
		КонецЕсли;		
		
		Если фЦеныИскл = 1 Тогда //--- Вывод реквизита 
			ТЦен.ВыбратьСтроки();
			Пока ТЦен.ПолучитьСтроку() = 1 Цикл
				Т.ВывестиСекцию("ЦенаИ|Основная");
				ПечЦенаИ = ""; ТекРасшифровка = "";
				Т.ПрисоединитьСекцию("ЦенаИ|УпаковкаРеквизиты");	
				
				СписУп.ВыбратьСтроки();	
				Пока СписУп.ПолучитьСтроку() = 1 Цикл
					ТекРасшифровка = ТЦен.ПолучитьЗначение(ТЦен.НомерСтроки, "Э" + СписУп.НомерСтроки);
					Если ПустоеЗначение(ТекРасшифровка) = 1 Тогда
						ПечЦенаИ = "";
					Иначе
						ПечЦенаИ = Формат(ТЦен.ПолучитьЗначение(ТЦен.НомерСтроки, "Ц" + СписУп.НомерСтроки),"Ч14.2");
					КонецЕсли;				
					
					Т.ПрисоединитьСекцию("ЦенаИ|УпаковкаРеквизиты");													
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	
		Для Инд = 1 По СписРекв.РазмерСписка() Цикл			
			Рекв = "";
			ТекРекв = СписРекв.ПолучитьЗначение(Инд, Рекв);
			Рекв = ?(Рекв = "", ТекРекв, Рекв);
			Периодический = Метаданные.Справочник("УМК_РазрешенныеВидыУпаковкиТМЦ").Реквизит(ТекРекв).Периодический;
			Т.ВывестиСекцию("Реквизит|Основная");
			ПечЗначение = "";
			Попытка
				Периодический = Метаданные.Справочник("ТМЦ").Реквизит(ТекРекв).Периодический;
				ПечЗначение = ?(Периодический = 1, ТекТовар.ПолучитьАтрибут(ТекРекв).Получить(ВыбДата), ТекТовар.ПолучитьАтрибут(ТекРекв));
			Исключение
			КонецПопытки;
			Т.ПрисоединитьСекцию("Реквизит|Упаковка");
			СписУп.ВыбратьСтроки();
			Пока СписУп.ПолучитьСтроку() = 1 Цикл
				ПечЗначение = ?(Периодический = 1, списУп.ВУ.ПолучитьАтрибут(ТекРекв).Получить(ВыбДата), списУп.ВУ.ПолучитьАтрибут(ТекРекв));
				Т.ПрисоединитьСекцию("Реквизит|УпаковкаРеквизиты");
			КонецЦикла;
			//Т.ПрисоединитьСекцию("Реквизит|УпаковкаРеквизиты");
		КонецЦикла;		
	КонецЕсли;
						
	
КонецПроцедуры // ВывестиТОвар

//======================================================================
Процедура Сформировать()	
	Если (ПустоеЗначение(ВыбДата) = 1) Тогда
		Сообщить("Выберите дату истории.", "!");
		Возврат;
	КонецЕсли;
	
	Если фЦенаТМЦвупаковке = 1 Тогда //--- УМК Сандомирский В.Ю. (27.02.15) для расчета ТМЦ в упаковке
		Если ПустоеЗначение(ВыбТипЦен) = 1 Тогда
			Предупреждение("Не выбран тип цен");
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	//--- Технологические 
	СпрЦены 	= СоздатьОбъект("Справочник.Цены");
	Расшифровка = СоздатьОбъект("СписокЗначений");
	
	ТекРазрешенныеВидыУпаковки 		= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
	ТекРазрешенныеВидыУпаковкиТМЦ 	= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
	СпВидыУпаковкиЛокальный 		= СоздатьОбъект("СписокЗначений");
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "УМК_ОтчетПоУпаковкам");
	Расшифровка.Установить("ВыбДата", ВыбДата);
	Расшифровка.Установить("фКроме", фКроме);
	Расшифровка.Установить("фТМЦбезГрупп", фТМЦбезГрупп);
	Расшифровка.Установить("перЗначения", перЗначения);
	Расшифровка.Установить("СписокВыбТМЦ",СписокВыбТМЦ);
	Расшифровка.Установить("СписокУпаковок",СписокУпаковок);
	Расшифровка.Установить("списРеквизитов",списРеквизитов);
		
	Расшифровка.Установить("фЦенаТМЦвупаковке"	, фЦенаТМЦвупаковке);
	Расшифровка.Установить("ВыбТипЦен"			, ВыбТипЦен);
	Расшифровка.Установить("фЦеныИскл"			, фЦеныИскл);
	Расшифровка.Установить("фРазница"			, фРазница);
	Расшифровка.Установить("фРазницаП"			, фРазницаП);
	Расшифровка.Установить("фКодВесы"			, фКодВесы);
	Расшифровка.Установить("фСС"				, фСС);
	Расшифровка.Установить("фЦена"				, фЦена);
			
	//--- Типы Виды упаковок 
	Тз_ВидыУпаковок = СоздатьОбъект("ТаблицаЗначений");
	Тз_ВидыУпаковок.НоваяКолонка("ВидУпаковки","Справочник.ВидыУпаковки");
	Тз_ВидыУпаковок.НоваяКолонка("ГруппыУпаковки","Строка");
	
	ЗапросПоУпаковкам = СоздатьОбъект("Запрос");

	ТекстЗапросаПоУпаковкам = 
	"//{{ЗАПРОС(СпрТМЦ)
	|Период с ДатаОтчета;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Без итогов;
	|ВидУпаковки 			= Справочник.ВидыУпаковки.ТекущийЭлемент;
	|ГруппыУпаковки			= Справочник.ВидыУпаковки.ТекущийЭлемент.Родитель;
	|Группировка ВидУпаковки без групп;	
	|Группировка  ГруппыУпаковки без групп;
	|";
	
	Если СписокУпаковок.РазмерСписка() > 0 Тогда //--- УМК Сандомирский В.Ю, (15.11.14)
		ТекстЗапросаПоУпаковкам = ТекстЗапросаПоУпаковкам  + "
		|Условие(ВидУпаковки в СписокУпаковок);
		|"//}}ЗАПРОС
		;
	КонецЕсли;
	
	Если ЗапросПоУпаковкам.Выполнить(ТекстЗапросаПоУпаковкам) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПоУпаковкам.Выгрузить(Тз_ВидыУпаковок);
	//Тз_ВидыУпаковок.ВыбратьСтроку();
	Тз_ВидыУпаковок.Сортировать("ГруппыУпаковки+ ,ВидУпаковки+");
	
	//Тз_ВидыУпаковок.ВыбратьСтроку(); //-------------- !!!
	
	ПечФорма = "Таблица";
	
	Если (Обновить = 0) ИЛИ (ПустоеЗначение(Обновить) = 1 ) Тогда //--- УМК Сандомирский В.Ю. 
		Т = СоздатьОбъект("Таблица");
	Иначе
		Т.Очистить();
	КонецЕсли;
	
	Т.ИсходнаяТаблица(ПечФорма);	
	
	ДатаОтчета = ВыбДата;
	Если (ВыбДата > ПолучитьДатуТА()) Тогда
		ДатаОтчета = ПолучитьДатуТА();
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");

	Если фВыводитьТоварыБезУпаковок = 0 Тогда
		ТекстЗапроса = 
		"//{{ЗАПРОС(СпрТМЦ)
		|Период с ДатаОтчета;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Товар 					= Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ.Владелец.ТекущийЭлемент;
		|ВидУпаковки 			= Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ.ВидУпаковки;
		|ГруппаВидовУпаковок 	= Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ.Владелец.ГруппировкаРазрешенныхВидовУпаковки; 
		|";
		
		Если фТМЦбезГрупп = 1 Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|Группировка Товар без групп;";
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
			|Группировка Товар;";	
		КонецЕсли;
		
		Если СписокВыбТМЦ.РазмерСписка() > 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
			|"//}}ЗАПРОС
			;
		КонецЕсли;
			
		Если СписокУпаковок.РазмерСписка() > 0 Тогда //--- УМК Сандомирский В.Ю, (15.11.14)
			ТекстЗапросаВидовУпаковок = ТекстЗапросаВидовУпаковок + "
			|Условие(ВидУпаковки в СписокУпаковок);
			|"//}}ЗАПРОС
			;
		КонецЕсли;
	ИначеЕсли фВыводитьТоварыБезУпаковок = 1 Тогда		
		ТекстЗапроса = 
		"//{{ЗАПРОС(СпрТМЦ)
		|Период с ДатаОтчета;
		|Обрабатывать НеПомеченныеНаУдаление;
		|Товар 					= Справочник.ТМЦ.ТекущийЭлемент;
		|ГруппаВидовУпаковок 	= Справочник.ТМЦ.ГруппировкаРазрешенныхВидовУпаковки; 
		|";
		
		Если фТМЦбезГрупп = 1 Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|Группировка Товар без групп;";
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
			|Группировка Товар;";	
		КонецЕсли;
		
		Если СписокВыбТМЦ.РазмерСписка() > 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
			|"//}}ЗАПРОС
			;
		КонецЕсли;
	КонецЕсли;	
		
		
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	//---  Запрос по видам упаковки у товаров главной выборки
	ЗапросВидовУпаковок = СоздатьОбъект("Запрос");

	ТекстЗапросаВидовУпаковок = 
	"//{{ЗАПРОС(СпрТМЦ)
	|Обрабатывать НеПомеченныеНаУдаление;
	|Без итогов;
	|Товар 		 = Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ.Владелец;
	|ВидУпаковки = Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ.ВидУпаковки;
	|Группировка ВидУпаковки без групп без упорядочивания;
	|";
	
	
	Если СписокВыбТМЦ.РазмерСписка() > 0 Тогда	
		ТекстЗапросаВидовУпаковок = ТекстЗапросаВидовУпаковок + "
		|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
		|"//}}ЗАПРОС
		;		
	КонецЕсли;
	
	Если СписокУпаковок.РазмерСписка() > 0 Тогда //--- УМК Сандомирский В.Ю, (15.11.14)	
		ТекстЗапросаВидовУпаковок = ТекстЗапросаВидовУпаковок + "
		|Условие(ВидУпаковки в СписокУпаковок);
		|"//}}ЗАПРОС
		;		
	КонецЕсли;
		
	Если ЗапросВидовУпаковок.Выполнить(ТекстЗапросаВидовУпаковок) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗ_УплотненныеУпаковки = СоздатьОбъект("ТаблицаЗначений");
	ЗапросВидовУпаковок.Выгрузить(ТЗ_УплотненныеУпаковки);
	ТЗ_УплотненныеУпаковки.НоваяКолонка("ГруппыУпаковки");
	
	//Если фНеВыводитьПустыеСтолбцы = 1 Тогда
		Тз_ВидыУпаковок.Загрузить(ТЗ_УплотненныеУпаковки);
	//КонецЕсли;
	
	ТЗтовары = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗтовары);
	Если ТЗтовары.КоличествоСтрок() = 0 Тогда
		Возврат;		
	КонецЕсли;

	Т.ВывестиСекцию("Кнопки");	
	Т.ВывестиСекцию("Заголовок|Основная");
	
	Т.ВывестиСекцию("ШапкаГруппы|Основная");
	
	Если перЗначения = 1 Тогда			
		Тз_ВидыУпаковок.ВыбратьСтроки();
		Пока Тз_ВидыУпаковок.ПолучитьСтроку() = 1 Цикл			
			ПечВидУпаковки = СокрЛП(Тз_ВидыУпаковок.ВидУпаковки.Родитель.Наименование);
			Т.ПрисоединитьСекцию("ШапкаГруппы|Упаковка");		
		КонецЦикла;	
	КонецЕсли;
	
	Т.ВывестиСекцию("ШапкаЭлементы|Основная");	
	Если перЗначения = 1 Тогда		
		Тз_ВидыУпаковок.ВыбратьСтроки();
		Пока Тз_ВидыУпаковок.ПолучитьСтроку() = 1 Цикл			
			ПечВидУпаковки = СокрЛП(Тз_ВидыУпаковок.ВидУпаковки.Наименование);
			Т.ПрисоединитьСекцию("ШапкаЭлементы|Упаковка");		
		КонецЦикла;		
	КонецЕсли;
	
	Запрос.вНачалоВыборки();
	
	Пока Запрос.Группировка(1) = 1 Цикл		
		Если  Запрос.Товар.ЭтоГруппа() = 1 Тогда	
			ПечГруппа = Запрос.Товар;	
			Т.ВывестиСекцию("ГруппаТовар|Основная");		
		Иначе		
			ВывестиТовар(Запрос.Товар);		
		КонецЕсли;	
	КонецЦикла;			
	
	//--- Постобработка 	
	Тз_ВидыУпаковок.ВыбратьСтроки();
	Ном = 0;
	ТочкаНачала = 3;
	ТекГруппа = "";
	Пока Тз_ВидыУпаковок.ПолучитьСтроку() = 1 Цикл
		Ном = Ном + 1;
		ПечВидУпаковки = СокрЛП(Тз_ВидыУпаковок.ВидУпаковки.Родитель.Наименование);
		Если (ТекГруппа <> ПечВидУпаковки) Тогда
			ТекГруппа = ПечВидУпаковки;
			Т.Область(3, ТочкаНачала, 3, ТочкаНачала+Ном-2).Объединить();
			//	Сообщить("3," + ТочкаНачала + ",3," + (ТочкаНачала+Ном-2));
			ТочкаНачала = ТочкаНачала+Ном-1;
			Ном = 1;
		КонецЕсли;		
	КонецЦикла;
	
	Т.Область(3, ТочкаНачала, 3, ТочкаНачала+Ном-1).Объединить(); //--- Объединяем последнюю
	//Сообщить("3," + ТочкаНачала + ",3," + (ТочкаНачала+Ном-1));
	
	
	Т.ПовторятьПриПечатиСтроки(3,3);
	Т.ОбластьПечати(2);
	Т.ПараметрыСтраницы(2,,,,,,,,,1);
	Т.ТолькоПросмотр(1);
	Т.Опции(0,0,4,2);
	Т.Показать("Отчет по упаковкам ТМЦ", "");
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ОбработкаПодбора(Значение) 	
	Перем ПредставлениеЗначения;
	
	Если (ВРег(Значение.Вид())=СправочникПодбора) И (СписокПодбора.НайтиЗначение(Значение)=0) Тогда
		ПредставлениеЗначения = Строка(Значение);
		Если СписокПодбора.НайтиЗначение(Значение) <> 1 Тогда
			СписокПодбора.ДобавитьЗначение(Значение,ПредставлениеЗначения);
		КонецЕсли;
		СписокПодбора.ТекущаяСтрока(СписокПодбора.РазмерСписка());
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии() 		
	Если глФлагРасшифровки = 1 Тогда 		
		Обновить 		= глОбновить;	
		ВыбДата 		= глРасшифровка.Получить("ВыбДата");
		фКроме 			= глРасшифровка.Получить("фКроме");
		фТМЦбезГрупп 	= глРасшифровка.Получить("фТМЦбезГрупп");	
		перЗначения 	= глРасшифровка.Получить("перЗначения");
	
		фВыводитьТоварыБезУпаковок = глРасшифровка.Получить("фВыводитьТоварыБезУпаковок");
		
		глРасшифровка.Получить("СписокВыбТМЦ").Выгрузить(СписокВыбТМЦ); 
		глРасшифровка.Получить("СписокУпаковок").Выгрузить(СписокУпаковок);
		глРасшифровка.Получить("списРеквизитов").Выгрузить(списРеквизитов); 
			
		фЦенаТМЦвупаковке   = глРасшифровка.Получить("фЦенаТМЦвупаковке");
		ВыбТипЦен			= глРасшифровка.Получить("ВыбТипЦен"); 
		фЦеныИскл 			= глРасшифровка.Получить("фЦеныИскл");
		фЦена 				= глРасшифровка.Получить("фЦена");
		фРазница 			= глРасшифровка.Получить("фРазница"); 
		фРазницаП 			= глРасшифровка.Получить("фРазницаП");
		фКодВесы 			= глРасшифровка.Получить("фКодВесы");
		фСС 				= глРасшифровка.Получить("фСС");
		
		
		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;		
	ИначеЕсли глФлагРасшифровки = 5 Тогда	
		глРасшифровка.Получить("СписокВыбТМЦ").Выгрузить(СписокВыбТМЦ); 	
	Иначе		
		Обновить = 0;
		РесурсСумма = 1;		
	КонецЕсли;
	
	Для Инд = 1 По Метаданные.Справочник("УМК_РазрешенныеВидыУпаковкиТМЦ").Реквизит() Цикл
		Рекв = Метаданные.Справочник("УМК_РазрешенныеВидыУпаковкиТМЦ").Реквизит(Инд);
		Если Рекв.Идентификатор <> "Цена" Тогда
			Если списРеквизитов.НайтиЗначение(Рекв.Идентификатор) = 0 Тогда
				списРеквизитов.ДобавитьЗначение(Рекв.Идентификатор, Рекв.Синоним);
				списРеквизитов.Пометка(списРеквизитов.РазмерСписка(), 1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Если перЗначения = 0 Тогда
		перЗначения = 1
	КонецЕсли;
КонецПроцедуры	

//======================================================================
Процедура ПриЗакрытии()

	//СохранитьЗначение("фКроме", фКроме);
	//СохранитьЗначение("ПоГруппам", ПоГруппам);
	
КонецПроцедуры

//======================================================================
// Название: РаботаСоСписком
// Параметры:
// 	Режим - строка, принимающая 4 значения:
//		"Добавить"
//		"ДобавитьНесколько"
// 		"Удалить"
// 		"УдалитьВсе"
//	Список - список значений, в котором задается множественный фильтр
//	ТипСправочника - строка, содержащая идентификатор справочнника, по
//						которому осуществляется мноджественный фильтр
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//   кнопок работы с множественными фильтрами ("...",".....","X","XX")
// Наименование,.
// Описание:
// процедура предназначена для добавления и удаления элементов
// из множественных фильтров
Процедура РаботаСоСписком(Режим,Список,ТипСправочника)
	
	Перем ТекПоз;
	Перем ТекЭлемент;
	Перем Фрм;
                                     
	Если ТипСправочника = "Категории" Тогда
		ТипСправочника = "ВидыКатегорий";
	КонецЕсли;	
	
	ТекПоз = Список.ТекущаяСтрока();
	Если ТекПоз>0 Тогда
		ТекЭлемент=Список.ПолучитьЗначение(ТекПоз);
	КонецЕсли;

	Если Режим="Добавить" Тогда		// добавляем в список один элемент
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,0,ТекЭлемент);
		Фрм.ВыборГруппы(1);

	ИначеЕсли Режим="ДобавитьНесколько" Тогда  // добавляем в список несколько элементов
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,1,ТекЭлемент);
		Фрм.ВыборГруппы(1);

 	ИначеЕсли Режим="УдалитьВсе" Тогда	// удаляем все элементы из списка
		Список.УдалитьВсе();

	ИначеЕсли Режим="Удалить" Тогда	// удаляем из списка один элемент
		Если ТекПоз>0 Тогда
			Список.УдалитьЗначение(ТекПоз);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры		// работа со списком

//======================================================================
Функция УстДоступность()  
	
	Если перЗначения = 2 Тогда
		Форма.ИспользоватьСлой("РеквизитыУпаковок",1);
	Иначе
		Форма.ИспользоватьСлой("РеквизитыУпаковок",0);	
	КонецЕсли;	
	
	Возврат "";
КонецФункции

//======================================================================
Процедура ОбработкаЯчейкиТаблицы(ТекЗначение,фСтандартнойОбработки,ТекТаблица,ТекАдрес)
	
	Если ТипЗначенияСтр(ТекЗначение) = "СписокЗначений" Тогда
		глОбработкаЯчейкиТаблицы(ТекЗначение, фСтандартнойОбработки, ТекТаблица, ТекАдрес);		
	Иначе	
		Если ТекЗначение.Вид() = "ТМЦ" Тогда
			фСтандартнойОбработки = 0;
			ТекКонтекстФормы = "РазрешенныеВидыУпаковки"; //--- передаем параметр отурыть на определенной закладке
			ОткрытьФорму(ТекЗначение,ТекКонтекстФормы); 	
		ИначеЕсли ТипЗначенияСтр(ТекЗначение) = "Справочник" Тогда
			ОткрытьФорму(ТекЗначение,"");			
		КонецЕсли;
	КонецЕсли;
	
	////--- УМК Сандомирский В.Ю. (11.09.14) добавляю открытие справочника
	//Если ТипЗначенияСтр(Расшифровка) = "Справочник" Тогда
	//	Если Расшифровка.Вид() = "ТМЦ" Тогда
	//		фСтандартнойОбработки = 0;
	//		ТекКонтекстФормы = "РазрешенныеВидыУпаковки";
	//		//--- можно еще кучу параметров
	//		ОткрытьФорму(Расшифровка,ТекКонтекстФормы); 
	//	КонецЕсли;
	//	Возврат;
	//КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура УстФормаЗаказа()
	
КонецПроцедуры // УстФормаЗаказа



ВыбБазоваяКатегорияЦен 	= ВосстановитьЗначение("ВыбБазоваяКатегорияЦен");
фТолькоСхемы 			= ВосстановитьЗначение("фТолькоСхемы");
фКроме 					= ВосстановитьЗначение("фКроме");
ПоГруппам			 	= ВосстановитьЗначение("ПоГруппам");

ВыбДата = ТекущаяДата(); 

