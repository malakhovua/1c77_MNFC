Перем Расшифровка;
Перем Обновить;
Перем Таб;

Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

Функция РасшифровкаДокумент(ТекущийДокумент)
	СписокРасшифровка = СоздатьОбъект("СписокЗначений");
	СписокРасшифровка.Установить("Расшифровка", Расшифровка);
	СписокРасшифровка.Установить("ТекущийДокумент", ТекущийДокумент);
	Возврат СписокРасшифровка;
КонецФункции

//*******************************************
// Процедура генерации запроса Сформировать.
//
Процедура Сформировать()
	Перем Запрос, ТекстЗапроса, ТЗ;
	
	Если Обновить = 2 Тогда
	    СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|ОбрабатыватьДокументы все;
	|ТекущийДокумент = Документ.ВозвратнаяНакладная.ТекущийДокумент;
	|ДатаДок = Документ.ВозвратнаяНакладная.ДатаДок;
	|НомерДок = Документ.ВозвратнаяНакладная.НомерДок;
	|Контрагент = Документ.ВозвратнаяНакладная.Контрагент;
	|Родитель = Документ.ВозвратнаяНакладная.Контрагент.Родитель;
	|МестоХранения = Документ.ВозвратнаяНакладная.МестоХранения;
	|Ф1 = Документ.ВозвратнаяНакладная.Ф1;
	|Примечание = Документ.ВозвратнаяНакладная.Примечание;
	|Фирма = Документ.ВозвратнаяНакладная.Фирма;
	|Автор = Документ.ВозвратнаяНакладная.Автор;
	|Проверено = Документ.ВозвратнаяНакладная.Проверено;
	|Группировка ТекущийДокумент" +?(фПорядокКонтрагент=1," упорядочить по ТекущийДокумент.Контрагент","") + ";
	|" + ?(ПустоеЗначение(ВыбКонтрагент)=0,"Условие(Контрагент В (ВыбКонтрагент));","") + "
	|" + ?(фПроверено=1 ,"Условие(Проверено = 1);","") + "
	|" + ?(фНеПроверено = 1,"Условие(Проверено = 0);","") + "
 	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
    Запрос.Выгрузить(ТЗ,1,0);
	
	Расшифровка.Установить("ВыбНачПериода", ВыбНачПериода);
	Расшифровка.Установить("ВыбКонПериода", ВыбКонПериода);
	Расшифровка.Установить("ВыбКонтрагент", ВыбКонтрагент);
	Расшифровка.Установить("фПорядокКонтрагент", фПорядокКонтрагент);
	Расшифровка.Установить("фПроверено", фПроверено);
	Расшифровка.Установить("фНеПроверено", фНеПроверено);
	
	Расшифровка.Установить("Отчет", "Отчет_РеестрВН");
	
	Расшифровка.Установить("Обновить");

	// Подготовка к заполнению выходных форм данными запроса
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить=0) Тогда
	  Таб = СоздатьОбъект("Таблица");
	Иначе
	  Таб.Очистить();
	КонецЕсли;
	 
	Таб.ИсходнаяТаблица("РеестрВН");
	
	//Кнопки
	Таб.ВывестиСекцию("Кнопки");
	
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	Состояние("Заполнение выходной таблицы...");
	
	//Заполнение полей "Строки"
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ТекущийДокумент = ТЗ.ТекущийДокумент;
		ПометкаУдаления = ?(ТекущийДокумент.ПометкаУдаления()=1,"X","");
		Проведен = ?(ТекущийДокумент.Проведен()=1,"V","");
		Проверено = ?(ТЗ.Проверено=1,"V","");
		Ф1 = ?(ТЗ.Ф1=1,"V","");
		СуммаСНДС = ТекущийДокумент.Итог("СуммаСНДС");
		
		ИмяСекции = "Строка";
		Если Проведен = "" Тогда
		  ИмяСекции = "СтрокаНеПроведен";	
		КонецЕсли;
		Если ПометкаУдаления = "X" Тогда
		  ИмяСекции = "СтрокаУдален";
		КонецЕсли;
		Таб.ВывестиСекцию(ИмяСекции);
		
	КонецЦикла;
	
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Реестр возвратных накладных", "");
	
КонецПроцедуры

Процедура ОбработкаЯчейкиТаблицы(ТекЗначение,ТекФлагСтандОбраб,ТекТаблица,ТекАдрес)
	
	пОбновить = 0;
	
	Если Прав(ТекАдрес,2) = "C3" Тогда
		Документ = СоздатьОбъект("Документ.ВозвратнаяНакладная");
		ТекРасшифровка = ТекЗначение.ПолучитьЗначение(1);
		ТекЗначениеДок = ТекЗначение.ПолучитьЗначение(2); 
		Если Документ.НайтиДокумент(ТекЗначениеДок) = 1 Тогда
			Попытка
				Если Документ.ПометкаУдаления() = 0 Тогда
					Документ.Удалить(0);
					Сообщить(Строка(ТекЗначениеДок) + " - помечен на удаление.", "!");
					пОбновить = 1;
				ИначеЕсли Документ.ПометкаУдаления() = 1 Тогда
					Документ.СнятьПометкуУдаления();
					Сообщить(Строка(ТекЗначениеДок) + " - снята пометка на удаление.", "!");
					пОбновить = 1;
				КонецЕсли
			Исключение
				Сообщить("Не удалось изменить пометку удаления.");
			КонецПопытки;
		КонецЕсли;
	Иначе
		глОбработкаЯчейкиТаблицы(ТекЗначение,ТекФлагСтандОбраб,ТекТаблица,ТекАдрес);
	КонецЕсли;
	
	Если пОбновить = 1 Тогда
		ТекРасшифровка.Установить("Обновить", пОбновить);
		глОбработкаЯчейкиТаблицы(ТекРасшифровка,ТекФлагСтандОбраб,ТекТаблица,ТекАдрес);
	КонецЕсли;

КонецПроцедуры

Процедура ПриОткрытии()
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		ВыбНачПериода = глРасшифровка.Получить("ВыбНачПериода");
		ВыбКонПериода = глРасшифровка.Получить("ВыбКонПериода");
		ВыбКонтрагент = глРасшифровка.Получить("ВыбКонтрагент");
		фПорядокКонтрагент = глРасшифровка.Получить("фПорядокКонтрагент");
		фПроверено = глРасшифровка.Получить("фПроверено");
		фНеПроверено = глРасшифровка.Получить("фНеПроверено");
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;
	
	Форма.КнопкаПоУмолчанию("Сформировать");
	
КонецПроцедуры


