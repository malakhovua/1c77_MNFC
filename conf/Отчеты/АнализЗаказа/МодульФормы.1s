//*******************************************
Процедура Сформировать()
	ТекстЗ =
	"//{{ЗАПРОС(Сформировать)
	|Период с НачДата по КонДата;
	|Контрагент = Документ.УМК_ЗаказКлиента.Контрагент;
	|Док = Документ.УМК_ЗаказКлиента.ТекущийДокумент;
	|ТМЦ = Документ.УМК_ЗаказКлиента.ТМЦ;
	|КвоПересчет = Документ.УМК_ЗаказКлиента.КвоПересчет;
	|Функция КвоСумма = Сумма(КвоПересчет);
	|Группировка ТМЦ упорядочить по ТМЦ.Наименование без групп;
	|Группировка Док;
	|Условие(Контрагент = ВыбКонтрагент);
	|Условие(Док <> ВыбЗаказ);
	|"//}}ЗАПРОС
	;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		Сообщить("Ошибка выполнения запроса");
		Возврат;
	КонецЕсли;
	
	ТЗаказы = СоздатьОбъект("ТаблицаЗначений");
	ТЗаказы.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗаказы.НоваяКолонка("КвоОтгружено", "Число", 15, 3);
	ТЗаказы.НоваяКолонка("КвоЗаказов", "Число", 15);
	ТЗаказы.НоваяКолонка("СреднийЗаказ", "Число", 15, 3);
	ТЗаказы.НоваяКолонка("МинЗаказ", "Число", 15, 3);
	ТЗаказы.НоваяКолонка("МаксЗаказ", "Число", 15, 3);
	ТЗаказы.НоваяКолонка("ВЭтомЗаказе", "Число", 15, 3);
	ТЗаказы.НоваяКолонка("Отклонение", "Число", 15, 3);
	ТЗаказы.НоваяКолонка("МаксОтклонение", "Число", 15, 3);
	ТЗ = СоздатьОбъект("ТаблицаЗначений"); 
	ВыбЗаказ.ВыгрузитьТабличнуюЧасть(ТЗ);
	ТЗ.Свернуть("ТМЦ", "КвоПересчет");
	
	Пока Запрос.Группировка(1) = 1 Цикл
		ТЗаказы.НоваяСтрока();
		ТЗаказы.ТМЦ = Запрос.ТМЦ;
		ТЗаказы.КвоОтгружено = Запрос.КвоСумма;
		ТЗаказы.МинЗаказ = 9999999999999;
		Пока Запрос.Группировка(2) = 1 Цикл
			ТЗаказы.КвоЗаказов = ТЗаказы.КвоЗаказов + 1;
			ТЗаказы.МинЗаказ = Мин(ТЗаказы.МинЗаказ, Запрос.КвоСумма);
			ТЗаказы.МаксЗаказ= Макс(ТЗаказы.МаксЗаказ, Запрос.КвоСумма);
		КонецЦикла;
		
		ТЗаказы.СреднийЗаказ = Запрос.КвоСумма / ТЗаказы.КвоЗаказов;
//		ТЗаказы.МаксОтклонение = Макс(ТЗаказы.МаксЗаказ / ТЗаказы.СреднийЗаказ - 1, 1 - (ТЗаказы.МинЗаказ / ТЗаказы.СреднийЗаказ));
		Стр = 0;
		Если ТЗ.НайтиЗначение(ТЗаказы.ТМЦ, Стр, "ТМЦ") = 1 Тогда
			ТЗаказы.ВЭтомЗаказе = ТЗ.ПолучитьЗначение(Стр, "КвоПересчет");
			ТЗаказы.Отклонение = ?(ТЗаказы.ВЭтомЗаказе >= ТЗаказы.СреднийЗаказ,  ТЗаказы.ВЭтомЗаказе / ТЗаказы.СреднийЗаказ - 1, 1 - ТЗаказы.ВЭтомЗаказе / ТЗаказы.СреднийЗаказ) * 100;
			ТЗ.УдалитьСтроку(Стр);
		КонецЕсли;
	КонецЦикла;
	
	// добавим ТМЦ из Этого заказа, которые не отгружались
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ТЗаказы.НоваяСтрока();
		ТЗаказы.ТМЦ = ТЗ.ТМЦ;
		ТЗаказы.ВЭтомЗаказе = ТЗ.КвоПересчет;
		ТЗаказы.Отклонение = 0;
	КонецЦикла;
	
	ТЗаказы.Сортировать("ТМЦ");
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы());	
	ТЗаказы.ВыбратьСтроки();
	Пока ТЗаказы.ПолучитьСтроку() = 1 Цикл
		// если в этом заказе - 0, выделим строку красным
		// если в этом заказе отклонение превышает максимальное - выделим жёлтым
		Секц = Таб.ПолучитьСекцию("Строка|Основная");
		Если ТЗаказы.ВЭтомЗаказе = 0 Тогда
			Секц.Область(1, 1, 1, Таб.ШиринаТаблицы()).ЦветФона(255, 128, 128);
		ИначеЕсли (ТЗаказы.КвоОтгружено = 0) Тогда
			Секц.Область(1, 1, 1, Таб.ШиринаТаблицы()).ЦветФона(128, 128, 255);
		ИначеЕсли (ТЗаказы.ВЭтомЗаказе > 0) И ((ТЗаказы.ВЭтомЗаказе > ТЗаказы.МаксЗаказ) ИЛИ (ТЗаказы.ВЭтомЗаказе < ТЗаказы.МинЗаказ)) Тогда
			Секц.Область(1, 1, 1, Таб.ШиринаТаблицы()).ЦветФона(255, 255, 179);
		КонецЕсли;
		Таб.ВывестиСекцию(Секц);
	КонецЦикла;	
	
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);	
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Анализ заказа");
КонецПроцедуры

//======================================================================
Процедура ИзмЗаказ()
	ВыбКонтрагент = ВыбЗаказ.Контрагент;
	НачДата = ВыбЗаказ.ДатаДок - Константа.КвоДнейПериодаАнализаЗаказов;
	КонДата = ВыбЗаказ.ДатаДок - 1;
КонецПроцедуры // ИзмЗаказ()

//======================================================================
Процедура ПриОткрытии()
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		ВыбЗаказ = Форма.Параметр;
		ИзмЗаказ();
		Сформировать();
		Форма.Закрыть();
	КонецЕсли;
КонецПроцедуры // ПриОткрытии

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("НачалоПериодаАнализаЗаказов", НачДата);
	СохранитьЗначение("КонецПериодаАнализаЗаказов", КонДата);
КонецПроцедуры // ПриЗакрытии