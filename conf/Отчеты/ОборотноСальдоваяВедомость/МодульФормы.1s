Перем Т;
Перем Обновить;
Перем Расшифровка;
Перем ПланСчетов;
Перем ВыбПланСчетов;
Перем Субконто;
Перем Ит, РазвСальдоИт, ТЗСальдо;
Перем ПредставлениеРУ;

//----------------------------------------------------------------------
Функция РазвСальдоЕстьПравило(ПарамСчет, Стр = 0)
	// ПАРАМЕТРЫ:
	//  ДЕЙСТВИЕ: 0 - правила нет. 2 - Есть. 1 - есть в поддереве.

	Если ФормРазворот.НайтиЗначение(ПарамСчет, Стр,"Счет") = 1 Тогда
		Возврат 2;
	КонецЕсли;

	Если ПарамСчет.ЭтоГруппа() = 1 Тогда
		ФормРазворот.ВыбратьСтроки();
		Пока ФормРазворот.ПолучитьСтроку() = 1 Цикл
			Если ФормРазворот.Счет.ПринадлежитГруппе(ПарамСчет) = 1 Тогда
				Возврат 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат 0;
КонецФункции

//----------------------------------------------------------------------
Процедура РассчитатьСальдоПоПравилам(ПланСчетов)
	ТЗСальдо = СоздатьОбъект("ТаблицаЗначений");
	ТЗСальдо.НоваяКолонка("СумСальдо");
	Если ДанныеПоВалютам = 1 Тогда
		ТЗСальдо.НоваяКолонка("ВалСальдо");
	КонецЕсли;

	ФормРазворот.ВыбратьСтроки();
	Пока ФормРазворот.ПолучитьСтроку() = 1 Цикл
		ТЗСальдо.НоваяСтрока();

		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ТЗ.НоваяКолонка("Валюта");
		ТЗ.НоваяКолонка("СНД");
		ТЗ.НоваяКолонка("СНК");
		ТЗ.НоваяКолонка("СКД");
		ТЗ.НоваяКолонка("СКК");
		ТЗСальдо.СумСальдо = ТЗ;

		Если (ФормРазворот.Счет.Валютный = 1) И (ДанныеПоВалютам = 1) Тогда
			ТЗВ = СоздатьОбъект("ТаблицаЗначений");
			ТЗВ.НоваяКолонка("Валюта");
			ТЗВ.НоваяКолонка("СНД");
			ТЗВ.НоваяКолонка("СНК");
			ТЗВ.НоваяКолонка("СКД");
			ТЗВ.НоваяКолонка("СКК");
			ТЗСальдо.ВалСальдо = ТЗВ;
		КонецЕсли;

		Если ПланСчетов <> ФормРазворот.Счет.ПланСчетов() Тогда
			Продолжить;
		КонецЕсли;

		Если ФормРазворот.Субсчета = "Х" Тогда
			// ...по субсчетам...
			Уровень = ФормРазворот.Счет.Уровень()+1;
			Если Ит.ПолучитьСчет(, ФормРазворот.Счет) = 1 Тогда
				ТЗ.НоваяСтрока();
				ТЗ.СНД = 0;
				ТЗ.СНК = 0;
				ТЗ.СКД = 0;
				ТЗ.СКК = 0;
				Пока Ит.ПолучитьСчет() = 1 Цикл
					Если Ит.Счет.Уровень() < Уровень Тогда
						Прервать;
					КонецЕсли;
					Если Ит.Счет.Уровень() > Уровень Тогда
						Продолжить;
					КонецЕсли;
					СН = Ит.СНД(1)-Ит.СНК(1);
					Если СН > 0 Тогда
						ТЗ.СНД = ТЗ.СНД+СН;
					Иначе
						ТЗ.СНК = ТЗ.СНК-СН;
					КонецЕсли;

					СК = Ит.СКД(1)-Ит.СКК(1);
					Если СК > 0 Тогда
						ТЗ.СКД = ТЗ.СКД+СК;
					Иначе
						ТЗ.СКК = ТЗ.СКК-СК;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;

			Если (ФормРазворот.Счет.Валютный = 1) И (ДанныеПоВалютам = 1) Тогда
				Ит.ПолучитьСчет(, "");
				Ит.ВыбратьВалюты();
				Пока Ит.ПолучитьВалюту() = 1 Цикл
					Если Ит.ПолучитьСчет(, ФормРазворот.Счет) = 1 Тогда
						ТЗ.НоваяСтрока();
						ТЗ.Валюта = Ит.Валюта;
						ТЗ.СНД = 0;
						ТЗ.СНК = 0;
						ТЗ.СКД = 0;
						ТЗ.СКК = 0;
						ТЗВ.НоваяСтрока();
						ТЗВ.Валюта = Ит.Валюта;
						ТЗВ.СНД = 0;
						ТЗВ.СНК = 0;
						ТЗВ.СКД = 0;
						ТЗВ.СКК = 0;
						Пока Ит.ПолучитьСчет() = 1 Цикл
							Если Ит.Счет.Уровень() < Уровень Тогда
								Прервать;
							КонецЕсли;
							Если Ит.Счет.Уровень() > Уровень Тогда
								Продолжить;
							КонецЕсли;
							СН = Ит.СНД(1)-Ит.СНК(1);
							Если СН > 0 Тогда
								ТЗ.СНД = ТЗ.СНД+СН;
							Иначе
								ТЗ.СНК = ТЗ.СНК-СН;
							КонецЕсли;

							СК = Ит.СКД(1)-Ит.СКК(1);
							Если СК > 0 Тогда
								ТЗ.СКД = ТЗ.СКД+СК;
							Иначе
								ТЗ.СКК = ТЗ.СКК-СК;
							КонецЕсли;

							СН = Ит.СНД(2)-Ит.СНК(2);
							Если СН > 0 Тогда
								ТЗВ.СНД = ТЗВ.СНД+СН;
							Иначе
								ТЗВ.СНК = ТЗВ.СНК-СН;
							КонецЕсли;

							СК = Ит.СКД(2)-Ит.СКК(2);
							Если СК > 0 Тогда
								ТЗВ.СКД = ТЗВ.СКД+СК;
							Иначе
								ТЗВ.СКК = ТЗВ.СКК-СК;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
				Ит.ПолучитьВалюту(, "");
			КонецЕсли;
		Иначе
			// ...по субконто - выполним запрос...
			//
			Субконто = ФормРазворот.Список;
			Для А = 1 По ФормРазворот.Счет.КоличествоСубконто() Цикл
				Если Субконто.НайтиЗначение(ФормРазворот.Счет.ВидСубконто(А)) <> 0 Тогда
					РазвСальдоИт.ИспользоватьСубконто(ФормРазворот.Счет.ВидСубконто(А),,1);
				КонецЕсли;
			КонецЦикла;

			Если (ДанныеПоВалютам = 1) И (ФормРазворот.Счет.Валютный = 1) Тогда
				РазвСальдоИт.ВыполнитьЗапрос(Дата1, Дата2, ФормРазворот.Счет,,,  1,, "СВ");
			Иначе
				РазвСальдоИт.ВыполнитьЗапрос(Дата1, Дата2, ФормРазворот.Счет,,,  1,, "С");
			КонецЕсли;

			ТЗ.НоваяСтрока();
			ТЗ.СНД = РазвСальдоИт.СНДРС(1);
			ТЗ.СНК = РазвСальдоИт.СНКРС(1);
			ТЗ.СКД = РазвСальдоИт.СКДРС(1);
			ТЗ.СКК = РазвСальдоИт.СККРС(1);
			Если (ДанныеПоВалютам = 1) И (ФормРазворот.Счет.Валютный = 1) Тогда
				РазвСальдоИт.ВыбратьВалюты(,,, 1);
				Пока РазвСальдоИт.ПолучитьВалюту() = 1 Цикл
					СНД = РазвСальдоИт.СНДРС(1);
					СНК = РазвСальдоИт.СНКРС(1);
					СКД = РазвСальдоИт.СКДРС(1);
					СКК = РазвСальдоИт.СККРС(1);

					СНДВ = РазвСальдоИт.СНДРС(2);
					СНКВ = РазвСальдоИт.СНКРС(2);
					СКДВ = РазвСальдоИт.СКДРС(2);
					СККВ = РазвСальдоИт.СККРС(2);
					Если (СНД  = 0) И (СНК  = 0) И (СКД  = 0) И (СКК  = 0) И
					     (СНДВ = 0) И (СНКВ = 0) И (СКДВ = 0) И (СККВ = 0) Тогда
						Продолжить;
					КонецЕсли;

					ТЗ.НоваяСтрока();
					ТЗ.Валюта = РазвСальдоИт.Валюта;
					ТЗ.СНД = СНД;
					ТЗ.СНК = СНК;
					ТЗ.СКД = СКД;
					ТЗ.СКК = СКК;

					ТЗВ.НоваяСтрока();
					ТЗВ.Валюта = РазвСальдоИт.Валюта;
					ТЗВ.СНД = СНДВ;
					ТЗВ.СНК = СНКВ;
					ТЗВ.СКД = СКДВ;
					ТЗВ.СКК = СККВ;
				КонецЦикла;
			КонецЕсли;
			Если (ТЗ.КоличествоСтрок() = 1) И (ТЗ.СНД = 0) И (ТЗ.СНК = 0) И (ТЗ.СКД = 0) И (ТЗ.СКК = 0) Тогда
				ТЗ.УдалитьСтроку(1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//----------------------------------------------------------------------
Функция СальдоПолучить(ПарамСчет, СНД, СНК, СКД, СКК, ТипСуммы, ПарамВалюта)
	// ПАРАМЕТРЫ: ФормРазворот содержит правила разворота сальдо.
	//  ДЕЙСТВИЕ: возвращает разверутое сальдо по ПарамСчет в соотв. с зад. правилами.

	Перем ВремСНД, ВремСНК, ВремСКД, ВремСКК;

	Стр = 0;
	Правило = РазвСальдоЕстьПравило(ПарамСчет, Стр);
	Если Правило = 2 Тогда
		// Считаем сальдо в соотв. с правилами...
		// Развернутое сальдо...
		ТЗСальдо.ПолучитьСтрокуПоНомеру(Стр);
		Если ТипСуммы = 1 Тогда
			ТЗ = ТЗСальдо.СумСальдо;
		Иначе
			ТЗ = ТЗСальдо.ВалСальдо;
		КонецЕсли;
		Стр = 0;
		Если ТЗ.НайтиЗначение(ПарамВалюта, Стр, "Валюта") = 0 Тогда
			Возврат 0;
		КонецЕсли;
		ТЗ.ПолучитьСтрокуПоНомеру(Стр);
		СНД = ТЗ.СНД;
		СНК = ТЗ.СНК;
		СКД = ТЗ.СКД;
		СКК = ТЗ.СКК;
	ИначеЕсли Правило = 0 Тогда
		// Считаем простое сальдо, т. к. правил нет...
		Если ПарамСчет <> Ит.Счет Тогда
			Возврат 0;
		КонецЕсли;
		Если (ПарамВалюта <> ПолучитьПустоеЗначение()) И (ПарамВалюта <> Ит.Валюта) Тогда
			Возврат 0;
		КонецЕсли;

		СНД = Ит.СНД(ТипСуммы);
		СНК = Ит.СНК(ТипСуммы);
		СКД = Ит.СКД(ТипСуммы);
		СКК = Ит.СКК(ТипСуммы);
	Иначе // = 1
		// Есть правила в поддереве. Рекурсия...
		Уровень = ПарамСчет.Уровень()+1;
        Найдено = 0;

        // Запомнить позицию в объекте бух. итогов
		Счет = Ит.Счет;
		Валюта = Ит.Валюта;

		Если ПарамВалюта <> ПолучитьПустоеЗначение() Тогда
			Ит.ПолучитьСчет(, "");
			Если Ит.ПолучитьВалюту(, ПарамВалюта) = 1 Тогда
				Если Ит.ПолучитьСчет(, ПарамСчет) = 1 Тогда
					Ит.ПолучитьСчет();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		Субсчета = СоздатьОбъект("Счет");
		Субсчета.ИспользоватьРодителя(ПарамСчет);
		Субсчета.ВыбратьСчета();
		Пока Субсчета.ПолучитьСчет() = 1 Цикл
			Ит.ПолучитьСчет(, Субсчета.ТекущийСчет());
			Если СальдоПолучить(Субсчета.ТекущийСчет(), ВремСНД, ВремСНК, ВремСКД, ВремСКК, ТипСуммы, ПарамВалюта) = 1 Тогда
				Найдено = 1;
				СНД = СНД + ВремСНД;
				СНК = СНК + ВремСНК;
				СКД = СКД + ВремСКД;
				СКК = СКК + ВремСКК;
			КонецЕсли;
		КонецЦикла;

        // Восстановить позицию в объекте бух. итогов
		Если ПарамВалюта <> ПолучитьПустоеЗначение() Тогда
			Ит.ПолучитьВалюту(, "");
			Ит.ПолучитьСчет(, Счет);
			Ит.ПолучитьВалюту(, Валюта);
		Иначе
			Ит.ПолучитьСчет(, Счет);
		КонецЕсли;

		Возврат Найдено;
	КонецЕсли;

	Возврат 1;
КонецФункции

//-------------------------------------------------------------------
Функция ИтогиПолучить(ПарамСчет, СНД, СНК, СКД, СКК, ДО, КО, ТипСуммы, ПарамВалюта)
	СНД = 0;
	СНК = 0;
	СКД = 0;
	СКК = 0;
	ДО = 0;
	КО = 0;

	Найдено = 1;
	Если ПарамСчет <> Ит.Счет Тогда
		Найдено = 0;
	КонецЕсли;
	Если (Найдено = 1) И (ПарамВалюта <> ПолучитьПустоеЗначение()) Тогда
		Если ПарамВалюта <> Ит.Валюта Тогда
			Найдено = 0;
		КонецЕсли;
	КонецЕсли;

	Если Найдено = 1 Тогда
		ДО = Ит.ДО(ТипСуммы);
		КО = Ит.КО(ТипСуммы);
	КонецЕсли;

	Если СальдоПолучить(ПарамСчет, СНД, СНК, СКД, СКК, ТипСуммы, ПарамВалюта) = 1 Тогда
		Найдено = 1;
	КонецЕсли;

	Возврат Найдено;
КонецФункции

//----------------------------------------------------------------------
Функция РасшифровкаДтКт(ДтКт)
	Расшифровка.Установить("ДтКт", ДтКт);
	Возврат Расшифровка;
КонецФункции

//----------------------------------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

//----------------------------------------------------------------------
Процедура Сформировать()
	Перем ВремСНД, ВремСНК, ВремСКД, ВремСКК, ВремДО, ВремКО, МаскаСубконто[5];
    Перем ПутьОтчета;

	РасположениеФайла(ПутьОтчета);

	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;

	Если глПроверкаИнтервалаОтчета(Дата1,Дата2) = 0 Тогда
		Возврат;
	КонецЕсли;

	Расшифровка = СоздатьОбъект("СписокЗначений");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	РазвСальдоИт = СоздатьОбъект("БухгалтерскиеИтоги");

	НФ = РазделительУчета;
	
	СНД = 0;
	СНК = 0;
	СКД = 0;
	СКК = 0;
	Если ВыбПланСчетов = 1 Тогда
		ПланСчетов = ВыбранныйПланСчетов();
	КонецЕсли;
	Ит.ИспользоватьПланСчетов(ПланСчетов);
	Ит.ИспользоватьРазделительУчета(РазделительУчета);
	Ит.ВключатьСубсчета(1);
	Если Ит.ВыполнитьЗапрос(Дата1, Дата2) = 0 Тогда
		Возврат;
	КонецЕсли;
	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить = 0) Тогда
		Т = СоздатьОбъект("Таблица");
	Иначе
		Т.Очистить();
	КонецЕсли;
	
	глУстПропись(Гривня);
	Если Константа.ФормыНаУкраинском = Да Тогда
		Т.ИсходнаяТаблица("Таблица_Укр");
	Иначе
		Т.ИсходнаяТаблица("Таблица");
	КонецЕсли;
	
	Если РазвернутоеСальдо = 1 Тогда
		РазвСальдоИт.ИспользоватьПланСчетов(ПланСчетов);
		РазвСальдоИт.ИспользоватьРазделительУчета(РазделительУчета);
		РассчитатьСальдоПоПравилам(ПланСчетов);
		Счет = СоздатьОбъект("Счет");

		Расшифровка.Установить("Дата1", Дата1);
		Расшифровка.Установить("Дата2", Дата2);
		Расшифровка.Установить("РазделительУчета", РазделительУчета);
		Расшифровка.Установить("ПланСчетов", ПланСчетов);
		Если ПутьОтчета = "" Тогда
			Расшифровка.Установить("Отчет", "ОборотноСальдоваяВедомость");
			Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);
			Расшифровка.Установить("ДанныеПоВалютам", ДанныеПоВалютам);
			Расшифровка.Установить("РазвернутоеСальдо", РазвернутоеСальдо);
			Расшифровка.Установить("ФормРазворот", ФормРазворот);
			Т.ВывестиСекцию("Секция_6");
		    Расшифровка.Установить("Отчет");
		    Расшифровка.Установить("ДанныеПоСубсчетам");
		    Расшифровка.Установить("ДанныеПоВалютам");
			Расшифровка.Установить("РазвернутоеСальдо");
			Расшифровка.Установить("ФормРазворот");
		    Расшифровка.Установить("Обновить");
		КонецЕсли;
	    Т.ВывестиСекцию("Секция_1");
	    Расшифровка.Установить("Меню", 1);

		Счет.ВыбратьСчета();
		Ит.ВыбратьСчета();
		Ит.ПолучитьСчет();
		Пока Счет.ПолучитьСчет() = 1 Цикл
			Сч = Счет.ТекущийСчет();
			Если (ДанныеПоСубсчетам = 1) Или (Сч.Уровень() = 1) Тогда
				Расшифровка.Установить("Счет", Сч);
				Если ИтогиПолучить(Сч, ВремСНД, ВремСНК, ВремСКД, ВремСКК, ВремДО, ВремКО, 1, ПолучитьПустоеЗначение()) = 1 Тогда
					Т.ВывестиСекцию("Секция_7");
					Если (Сч.Уровень() = 1) И (Сч.Забалансовый = 0) Тогда
						СНД = СНД + ВремСНД;
						СНК = СНК + ВремСНК;
						СКД = СКД + ВремСКД;
						СКК = СКК + ВремСКК;
					КонецЕсли;
					Если (Сч.Валютный = 1) И (ДанныеПоВалютам = 1) Тогда
						Валюта = СоздатьОбъект("Справочник.Валюты");
						ТекВалюта = Валюта.ТекущийЭлемент();
						Валюта.ВыбратьЭлементы();
						Ит.ВыбратьВалюты();
						Ит.ПолучитьВалюту();
						Пока 1=1 Цикл
						    Расшифровка.Установить("Валюта", ТекВалюта);
						    Расшифровка.Установить("ПоВалюте", 1);
							Если ИтогиПолучить(Сч, ВремСНД, ВремСНК, ВремСКД, ВремСКК, ВремДО, ВремКО, 1, ТекВалюта) = 1 Тогда
								Т.ВывестиСекцию("Секция_8");
							КонецЕсли;
							Если ИтогиПолучить(Сч, ВремСНД, ВремСНК, ВремСКД, ВремСКК, ВремДО, ВремКО, 2, ТекВалюта) = 1 Тогда
								Т.ВывестиСекцию("Секция_9");
							КонецЕсли;
							Если Ит.Валюта = ТекВалюта Тогда
								Ит.ПолучитьВалюту();
							КонецЕсли;
							Если Валюта.ПолучитьЭлемент() = 0 Тогда
								Прервать;
							КонецЕсли;
							ТекВалюта = Валюта.ТекущийЭлемент();
						КонецЦикла;
					    Расшифровка.Установить("Валюта");
					    Расшифровка.Установить("ПоВалюте");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если Ит.Счет = Сч Тогда
				Ит.ПолучитьСчет();
			КонецЕсли;
		КонецЦикла;
		Т.ВывестиСекцию("Секция_5");
		РазвСальдоИт = 0;
		ТЗСальдо = 0;
	Иначе
		Расшифровка.Установить("Дата1", Дата1);
		Расшифровка.Установить("Дата2", Дата2);
		Расшифровка.Установить("РазделительУчета", РазделительУчета);
		Расшифровка.Установить("ПланСчетов", ПланСчетов);
		Если ПутьОтчета = "" Тогда
			Расшифровка.Установить("Отчет", "ОборотноСальдоваяВедомость");
			Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);
			Расшифровка.Установить("ДанныеПоВалютам", ДанныеПоВалютам);
			Расшифровка.Установить("РазвернутоеСальдо", РазвернутоеСальдо);
			Расшифровка.Установить("ФормРазворот", ФормРазворот);
			Т.ВывестиСекцию("Секция_6");
		    Расшифровка.Установить("Отчет");
		    Расшифровка.Установить("ДанныеПоСубсчетам");
		    Расшифровка.Установить("ДанныеПоВалютам");
			Расшифровка.Установить("РазвернутоеСальдо");
			Расшифровка.Установить("ФормРазворот");
		    Расшифровка.Установить("Обновить");
		КонецЕсли;
	    Т.ВывестиСекцию("Секция_1");
	    Расшифровка.Установить("Меню", 1);
	    Ит.ВыбратьСчета();
	    Пока Ит.ПолучитьСчет() = 1 Цикл
		    Расшифровка.Установить("Счет", Ит.Счет); 
			Если ((Ит.Счет.Уровень() > 1) и (ДанныеПоСубсчетам = 1)) или  (Ит.Счет.Уровень() = 1) тогда
				Т.ВывестиСекцию("Секция_2");
			КонецЕсли;

	        Если (Ит.Счет.Уровень() = 1) и (Ит.Счет.Забалансовый = 0) Тогда
			    СНД = СНД + Ит.СНД();
			    СНК = СНК + Ит.СНК();
			    СКД = СКД + Ит.СКД();
			    СКК = СКК + Ит.СКК();
			КонецЕсли;

			Если ДанныеПоВалютам = 1 Тогда
		        Ит.ВыбратьВалюты();
		        Пока Ит.ПолучитьВалюту() = 1 Цикл
				    Расшифровка.Установить("Валюта", Ит.Валюта);
				    Расшифровка.Установить("ПоВалюте", 1);
		            Т.ВывестиСекцию("Секция_3");
		            Если Ит.Валюта.Выбран() = 1 Тогда
			            Т.ВывестиСекцию("Секция_4");
			        КонецЕсли;
		        КонецЦикла;
			    Расшифровка.Установить("Валюта");
			    Расшифровка.Установить("ПоВалюте");
		    КонецЕсли;
	    КонецЦикла;
	    Т.ВывестиСекцию("Секция_5");
	КонецЕсли;
    Ит = 0;
    Т.ТолькоПросмотр(1);
    Т.Опции(0, 0, 6, 2,"ОпцииПечатиОборотноСальдоваяВедомость","ОборотноСальдоваяВедомость");
	Т.ОбластьПечати(2);
    Т.Показать("Оборотно-Сальдовая ведомость ("+ПериодСтр(Дата1, Дата2)+?(ТипЗначения(РазделительУчета)=0, "", " "+РазделительУчета)+")", "");
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
КонецПроцедуры
                    
// ===============================
Процедура УстРазвернутоеСальдо()
	// закладки
	Если РазвернутоеСальдо = 0 Тогда
		Инд = Форма.Закладки.НайтиЗначение("Сальдо");
		Если Инд <> 0 Тогда
		    // удалим закладку
			Форма.Закладки.УдалитьЗначение(Инд);
		КонецЕсли;
	Иначе
		Если Форма.Закладки.НайтиЗначение("Сальдо") = 0 Тогда
		    // добавим закладку
			Форма.Закладки.ДобавитьЗначение("Сальдо", "Развернутое сальдо");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//----------------------------------------------------------------------
Процедура ПриОткрытии(ИспНастройки)
	// Установим закладки...
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Параметры", "Параметры");
	УстРазвернутоеСальдо();
	Форма.ИспользоватьСлой("Основной,Параметры", 2);

	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
		Форма.Текст.Видимость(0);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;
	
	Если ИспНастройки=0 Тогда
		ДанныеПоСубсчетам=1;
		Дата1 = НачалоПериодаБИ();
		Дата2 = КонецПериодаБИ();
	КонецЕсли;

	// Инициализируем таблицу значений...
	ФормРазворот.Очистить();
	ФормРазворот.НоваяКолонка("Счет",,,,"Счет",10);
	ФормРазворот.НоваяКолонка("Субсчета",,,,"С/с",5);
	ФормРазворот.НоваяКолонка("Субконто1",,,,"Ан.1",15);
	ФормРазворот.НоваяКолонка("Субконто2",,,,"Ан.2",15);
	ФормРазворот.НоваяКолонка("Субконто3",,,,"Ан.3",15);
	ФормРазворот.НоваяКолонка("Список", "СписокЗначений");
	ВосстановитьЗначение("ОСВФормРазворот", ФормРазворот);

	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;
		ВыбПланСчетов = 0;
		Если Обновить <> 0 Тогда
			ПланСчетов = глРасшифровка.Получить("ПланСчетов");
			РУ = глРасшифровка.Получить("РазделительУчета");
			Если ТипЗначенияСтр(РУ) <> "" Тогда
				РазделительУчета = РУ;
				ПоВсемРУ = 0;
			Иначе
				Форма.РазделительУчета.НазначитьТип("");
				ПоВсемРУ = 1;
			КонецЕсли;
			Дата1 = глРасшифровка.Получить("Дата1");
			Дата2 = глРасшифровка.Получить("Дата2");
			ДанныеПоСубсчетам = глРасшифровка.Получить("ДанныеПоСубсчетам");
			ДанныеПоВалютам = глРасшифровка.Получить("ДанныеПоВалютам");
			РазвернутоеСальдо = глРасшифровка.Получить("РазвернутоеСальдо");
			УстРазвернутоеСальдо();
			глРасшифровка.Получить("ФормРазворот").Выгрузить(ФормРазворот);
			Т = глТаблица;
		Иначе
			ПланСчетов = ВыбранныйПланСчетов();
			РазделительУчета = глВосстановитьЗначение(,"БазФирма");
			ПоВсемРУ = 0;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	Иначе
		Обновить = 0;
		ВыбПланСчетов = 1;
		ПланСчетов = ВыбранныйПланСчетов();
		РазделительУчета = глВосстановитьЗначение(,"БазФирма");
		ПоВсемРУ = 0;
	КонецЕсли;

	Форма.КнопкаПоУмолчанию( "Сформировать" );

	ФормРазворот.ВидимостьКолонки("Список", 0);
КонецПроцедуры

//----------------------------------------------------------------------
Процедура ПриЗакрытии ()
	СохранитьЗначение("ОСВФормРазворот", ФормРазворот);
КонецПроцедуры

//----------------------------------------------------------------------
Процедура ВводНового() //Считывание существующей настройки
	Дата1 = НачалоПериодаБИ();
	Дата2 = КонецПериодаБИ();
КонецПроцедуры
                                 
//----------------------------------------------------------------------
Функция РазворотПроверить(Счет,ЧтоПроверить)
	ТекСтр = ФормРазворот.ТекущаяСтрока();
	Если ЧтоПроверить = "Субсчета" Тогда
		Если Счет.ЭтоГруппа() = 1 Тогда
			ФормРазворот.ВыбратьСтроки();
			Пока ФормРазворот.ПолучитьСтроку() = 1 Цикл
				Если (ФормРазворот.Счет <> Счет) И (Сред(ФормРазворот.Счет.Код,1,СтрДлина(Счет.Код)) = Счет.Код) Тогда
					// субсчет
					Предупреждение("Сначала удалите информацию по всем субсчетам!");
					ФормРазворот.ПолучитьСтрокуПоНомеру(ТекСтр);
					Возврат 0;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Иначе
		Уровень = Счет.Уровень() - 1;
		Если Уровень > 0 Тогда
			// проверим информацию о родителях
			Родителей = 0;
			Для Инд = 1 По Уровень Цикл
				НомСтр = 0;
				Сч = СчетПоКоду(Сред(Счет.Код,1,СтрДлина(Счет.Код)-Инд));
				ЕстьРодитель = ФормРазворот.НайтиЗначение(Сч,НомСтр,"Счет");
				Если (ЕстьРодитель = 1) и (НомСтр <> ТекСтр) Тогда
					Родителей = Родителей + 1;
				КонецЕсли;
			КонецЦикла;
			Если Родителей < Уровень Тогда
				Предупреждение("Сначала добавьте информацию о всех счетах верхних уровней!");
				ФормРазворот.ПолучитьСтрокуПоНомеру(ТекСтр);
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ФормРазворот.ПолучитьСтрокуПоНомеру(ТекСтр);
	Возврат 1;
КонецФункции

//----------------------------------------------------------------------
Процедура РазворотИзменить(Колонка)
	Перем Счет, Вариант;
	Перем КвоСуб, Суб[3];

	Если ФормРазворот.КоличествоСтрок()=0 Тогда
		Возврат;
	КонецЕсли;

	Если Колонка = "Счет" Тогда
		СтарыйСчет = ФормРазворот.Счет;
		Счет = ФормРазворот.Счет;
		Если ВвестиЗначение (Счет, "Введите счет", "Счет",,) = 0 Тогда
			Если Счет = "<Счет>" Тогда
				ФормРазворот.УдалитьСтроку(ФормРазворот.ТекущаяСтрока());
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		Если СтарыйСчет = "<Счет>" Тогда
			// новый счет
			Если РазворотПроверить(Счет,"Родители") = 0 Тогда
				ФормРазворот.УдалитьСтроку(ФормРазворот.ТекущаяСтрока());
				Возврат;
			КонецЕсли;
		Иначе
			// модификация
			Если Счет <> СтарыйСчет Тогда
				Если РазворотПроверить(СтарыйСчет,"Субсчета") = 0 Тогда
					Возврат;
				КонецЕсли;
				Если РазворотПроверить(Счет,"Родители") = 0 Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ФормРазворот.Счет = Счет;
        КвоСуб = ФормРазворот.Счет.КоличествоСубконто();
		
		// Заполним список субконто для счета...
		Субконто = СоздатьОбъект("СписокЗначений");
		Для Индекс = 1 по КвоСуб Цикл
			ВрСуб = ФормРазворот.Счет.ВидСубконто(Индекс);
			Субконто.ДобавитьЗначение(ФормРазворот.Счет.ВидСубконто(Индекс));
		КонецЦикла;

		ФормРазворот.Список = Субконто;

		Если Счет.ЭтоГруппа() = 0 Тогда
			ФормРазворот.Субсчета = "-";
		Иначе
			ФормРазворот.Субсчета = "Х"; // по умолчанию будет разворот по субсчетам
		КонецЕсли;

		// установим доступность субконто
		ФормРазворот.Субконто1 = "-"; Суб[1] = "";
		ФормРазворот.Субконто2 = "-"; Суб[2] = "";
		ФормРазворот.Субконто3 = "-"; Суб[3] = "";
		КвоСуб = Счет.КоличествоСубконто();
		Если КвоСуб = 1 Тогда
		    ФормРазворот.Субконто1 = " ";
		ИначеЕсли КвоСуб = 2 Тогда
			ФормРазворот.Субконто1 = " ";
			ФормРазворот.Субконто2 = " ";
		ИначеЕсли КвоСуб = 3 Тогда
			ФормРазворот.Субконто1 = " ";
			ФормРазворот.Субконто2 = " ";
			ФормРазворот.Субконто3 = " ";
		КонецЕсли;

	ИначеЕсли (Колонка = "Субсчета") и (ФормРазворот.Субсчета <> "-") Тогда
		ФормРазворот.Субсчета = "Х";
		Если ФормРазворот.Субконто1 <> "-" Тогда
			ФормРазворот.Субконто1 = " ";
		КонецЕсли;
		Если ФормРазворот.Субконто2 <> "-" Тогда
			ФормРазворот.Субконто2 = " ";
		КонецЕсли;
		Если ФормРазворот.Субконто3 <> "-" Тогда
			ФормРазворот.Субконто3 = " ";
		КонецЕсли;

	ИначеЕсли (Колонка = "Субконто1") и (ФормРазворот.Субконто1 <> "-") Тогда
		ФормРазворот.Субконто1 = ?(Сокрлп(ФормРазворот.Субконто1) = "", Строка(ФормРазворот.Счет.ВидСубконто(1)), " ");
		Если ФормРазворот.Субсчета <> "-" Тогда
			ФормРазворот.Субсчета = " ";
		КонецЕсли;
		
	ИначеЕсли (Колонка = "Субконто2") и (ФормРазворот.Субконто2 <> "-") Тогда
		ФормРазворот.Субконто2 = ?(Сокрлп(ФормРазворот.Субконто2) = "", Строка(ФормРазворот.Счет.ВидСубконто(2)), " ");
		Если ФормРазворот.Субсчета <> "-" Тогда
			ФормРазворот.Субсчета = " ";
		КонецЕсли;
	
	ИначеЕсли (Колонка = "Субконто3") и (ФормРазворот.Субконто3 <> "-") Тогда
		ФормРазворот.Субконто3 = ?(Сокрлп(ФормРазворот.Субконто3) = "", Строка(ФормРазворот.Счет.ВидСубконто(3)), " ");
		Если ФормРазворот.Субсчета <> "-" Тогда
			ФормРазворот.Субсчета = " ";
		КонецЕсли;
		
	КонецЕсли;
	
	// если у счета есть субсчета или субконто, заполним по умолчанию, если нужно
	Если ФормРазворот.Субсчета+ФормРазворот.Субконто1+ФормРазворот.Субконто2+ФормРазворот.Субконто3 <> "----" Тогда
		// если следующая строка окажется непустой, значит, есть выбранные субконто
		ВыбранныеСубконто = СокрЛП(СтрЗаменить(ФормРазворот.Субконто1+ФормРазворот.Субконто2+ФормРазворот.Субконто3,"-",""));
		// у счета есть субсчета или субконто
		Если СокрЛП(ФормРазворот.Субсчета) = "" Тогда
			// у счета есть субсчета
			Если ПустаяСтрока(ВыбранныеСубконто) = 1 Тогда
				// субконто нет или они не выбраны
				ФормРазворот.Субсчета = "Х";
			КонецЕсли;
		ИначеЕсли (ФормРазворот.Субсчета = "-") И (ПустаяСтрока(ВыбранныеСубконто) = 1) Тогда
			// у счет нет субсчетов и субконто не выбраны, выберем все
			Если ФормРазворот.Субконто1 <> "-" Тогда
				ФормРазворот.Субконто1 = Строка(ФормРазворот.Счет.ВидСубконто(1));
			КонецЕсли;
			Если ФормРазворот.Субконто2 <> "-" Тогда
				ФормРазворот.Субконто2 = Строка(ФормРазворот.Счет.ВидСубконто(2));
			КонецЕсли;
			Если ФормРазворот.Субконто3 <> "-" Тогда
				ФормРазворот.Субконто3 = Строка(ФормРазворот.Счет.ВидСубконто(3));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Заполним список субконто для счета...
	ФормРазворот.Список.УдалитьВсе();
	КвоСуб = ФормРазворот.Счет.КоличествоСубконто();
	Суб[1] = ФормРазворот.Субконто1;
	Суб[2] = ФормРазворот.Субконто2;
	Суб[3] = ФормРазворот.Субконто3;
	Если КвоСуб > 0 Тогда
		Для Индекс = 1 по КвоСуб Цикл
			Если Сокрлп(Суб[Индекс]) <> "" Тогда
				ФормРазворот.Список.ДобавитьЗначение(ФормРазворот.Счет.ВидСубконто(Индекс));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//----------------------------------------------------------------------
Процедура РазворотДобавить()
	ФормРазворот.НоваяСтрока();
	ФормРазворот.Счет = "<Счет>";
	ФормРазворот.ТекущаяКолонка(1);
	ФормРазворот.ТекущаяСтрока(ФормРазворот.КоличествоСтрок());

	РазворотИзменить("Счет");
КонецПроцедуры

//----------------------------------------------------------------------
Процедура РазворотУдалить()
	Если ФормРазворот.КоличествоСтрок() = 0 Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗначенияСтр(ФормРазворот.Счет) = "Счет" Тогда
		Если РазворотПроверить(ФормРазворот.Счет,"Субсчета") = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ФормРазворот.УдалитьСтроку(ФормРазворот.ТекущаяСтрока());
КонецПроцедуры

//----------------------------------------------------------------------
Процедура ПриВыбореЗакладки(Номер, Значение)
	Если Значение = "Параметры" Тогда
		Форма.ИспользоватьСлой("Основной, Параметры", 2);
	ИначеЕсли Значение = "Сальдо" Тогда
		Форма.ИспользоватьСлой("Основной, Разворот", 2);
	КонецЕсли;
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		Форма.Текст.Видимость(0);
    Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;
КонецПроцедуры