//*******************************************
//Конструкции <<...>> необходимо заменить на реальные логические условия и значения переменных
Процедура ЗаполнитьТаблицу(Номенклатура,Группа, Таб)

		Если Номенклатура.ЭтоГруппа() = 1 Тогда
			Возврат;
		КонецЕсли;
		
		Если ПустоеЗначение(Группа) = 0 Тогда
			
			Если  Номенклатура.Родитель <> Группа Тогда
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		

		Продукция = Номенклатура.ТекущийЭлемент();
		Таб.ВывестиСекцию("Строка_1");
		
		//Все характеристики номенклатурной позиции 		
		СпрРВУ = CreateObject("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
		СпрРВУ.ИспользоватьВладельца(Номенклатура.ТекущийЭлемент());
		СпрРВУ.ВыбратьЭлементы();
		
		Пока СпрРВУ.ПолучитьЭлемент() = 1 Цикл
			
			Если СпрРВУ.ПометкаУдаления() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Упаковка = СпрРВУ.ТекущийЭлемент();
			УпаковкаВУ = Упаковка.ВидУпаковки;
			Таб.ВывестиСекцию("Строка_2");
			Если ПустоеЗначение(Упаковка.ФормаУпаковки) = 0 Тогда
				ФормаУпаковки = Упаковка.ФормаУпаковки.Получить(ТекущаяДата());
				Таб.ВывестиСекцию("Строка_3");
				спрМатериалов = СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковокФорм");
				спрМатериалов.ИспользоватьВладельца(ФормаУпаковки);
				спрМатериалов.ПорядокКодов();
				спрМатериалов.ВыбратьЭлементы();
				
				Пока спрМатериалов.ПолучитьЭлемент()=1 Цикл
					Если спрМатериалов.ПометкаУдаления()=1 Тогда
						Продолжить;
					КонецЕсли;
					
					Материал =  спрМатериалов.Материал.Получить(ТекущаяДата());
					Количество = спрМатериалов.НормаСписания.Получить(ТекущаяДата());
					Таб.ВывестиСекцию("Строка_4");
				
				КонецЦикла;//По Материалам
				
			КонецЕсли;//По Форме
			
		КонецЦикла;//ПО ВУ
		

	
КонецПроцедуры

Процедура ЗаполнитьТаблицу_по_материалам_упаковки(Номенклатура,Группа, Таб)

		Если Номенклатура.ЭтоГруппа() = 1 Тогда
			Возврат;
		КонецЕсли;
		
		Если ПустоеЗначение(Группа) = 0 Тогда
			
			Если  Номенклатура.Родитель <> Группа Тогда
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		

		Продукция = Номенклатура.ТекущийЭлемент();
		Таб.ВывестиСекцию("Строка_1");
		
		//Все характеристики номенклатурной позиции 		
		СпрРВУ = CreateObject("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
		СпрРВУ.ИспользоватьВладельца(Номенклатура.ТекущийЭлемент());
		СпрРВУ.ВыбратьЭлементы();
		
		Пока СпрРВУ.ПолучитьЭлемент() = 1 Цикл
			
			Если СпрРВУ.ПометкаУдаления() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Упаковка = СпрРВУ.ТекущийЭлемент();
			УпаковкаВУ = Упаковка.ВидУпаковки;
			Таб.ВывестиСекцию("Строка_2");
			Если ПустоеЗначение(Упаковка.ФормаУпаковки) = 0 Тогда
				
				спрМатериалов = СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковок");
				спрМатериалов.ИспользоватьВладельца(Упаковка);
				спрМатериалов.ПорядокКодов();
				спрМатериалов.ВыбратьЭлементы();
				
				Пока спрМатериалов.ПолучитьЭлемент()=1 Цикл
					Если спрМатериалов.ПометкаУдаления()=1 Тогда
						Продолжить;
					КонецЕсли;
					
					Материал =  спрМатериалов.Материал.Получить(ТекущаяДата());
					Количество = спрМатериалов.НормаСписания.Получить(ТекущаяДата());
					Таб.ВывестиСекцию("Строка_3");
				
				КонецЦикла;//По Материалам
				
			КонецЕсли;//По Форме
			
		КонецЦикла;//ПО ВУ
		

	
КонецПроцедуры


Процедура Сформировать()
	
	Таб = СоздатьОбъект("Таблица");
	
	Если ПоУпаковке = 1 Тогда
		Таб.ИсходнаяТаблица("ТабОтчетаУпаковка");
	Иначе
		Таб.ИсходнаяТаблица("ТабОтчета");
	КонецЕсли;
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0,0,Таб.ВысотаТаблицы(),0);
	
	Номенклатура = CreateObject("Справочник.ТМЦ");
	Если ПустоеЗначение(ТМЦ) = 0 Тогда
		Номенклатура = ТМЦ;
		ЗаполнитьТаблицу(Номенклатура, Группа, Таб);
	Иначе
		Номенклатура.ВыбратьЭлементы();
		Пока Номенклатура.ПолучитьЭлемент(1) = 1 Цикл 
			Если ПоУпаковке = 1 Тогда
				ЗаполнитьТаблицу_по_материалам_упаковки(Номенклатура,Группа, Таб)
			Иначе
				ЗаполнитьТаблицу(Номенклатура, Группа, Таб);
		КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Таб.ВывестиСекцию("Подвал");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Материалы формы упаковки","");

КонецПроцедуры


