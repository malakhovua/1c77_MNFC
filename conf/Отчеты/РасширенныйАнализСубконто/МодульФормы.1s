//-----------------------------------------------
Перем Т;
Перем Обновить;
Перем Расшифровка;
Перем Ит;
Перем ПланСчетов;
Перем ВыбПланСчетов;
Перем ПредставлениеРУ;
Перем СортировкаСубконто[3];
Перем ВидСубконто[3], Субконто[3], ОтборСубконто[3], ПоГруппам[3], Номер[3];
Перем Сортировка[3], НаправлениеСортировки[3], НапрСортировки[3];
Перем СписокСубконто, ДобавитьСубконто, ОтборСубк;

//-----------------------------------------------
Функция ЗначенияВСтроку(Значения)
	Если ТипЗначенияСтр(Значения) = "СписокЗначений" Тогда
		С = "";
		Для А=1 По Значения.РазмерСписка() Цикл
			Если А <> 1 Тогда
				С = С+" ";
			КонецЕсли;
			С = С+Значения.ПолучитьЗначение(А);
		КонецЦикла;
		Возврат С;
	Иначе
		Возврат Значения;
	КонецЕсли;
КонецФункции

//-----------------------------------------------
Процедура ПоменятьЗначения(А1, А2)
	А = А1;
	А1 = А2;
	А2 = А;
КонецПроцедуры

//-----------------------------------------------
Процедура КопироватьСЗ(Куда, Откуда)
	Куда.УдалитьВсе();
	Для А=1 По Откуда.РазмерСписка() Цикл
		Куда.ДобавитьЗначение(Откуда.ПолучитьЗначение(А));
	КонецЦикла;
КонецПроцедуры

//-----------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

//-----------------------------------------------
Процедура Поменять(Поз1, Поз2)
	ПоменятьЗначения(ВидСубконто[Поз1], ВидСубконто[Поз2]);
	ПоменятьЗначения(Субконто[Поз1], Субконто[Поз2]);
	ПоменятьЗначения(ОтборСубконто[Поз1], ОтборСубконто[Поз2]);
	ПоменятьЗначения(ПоГруппам[Поз1], ПоГруппам[Поз2]);
	ПоменятьЗначения(Номер[Поз1], Номер[Поз2]);
	ПоменятьЗначения(Сортировка[Поз1], Сортировка[Поз2]);
	ПоменятьЗначения(НапрСортировки[Поз1], НапрСортировки[Поз2]);
КонецПроцедуры

//-----------------------------------------------
Процедура ЗаполнитьСортировку(ВыбВидСубконто, ВыбСортировка)
	Перем Сортировка;
	Сортировка = "";
	Если ВыбСортировка.ТекущаяСтрока() <> 0 Тогда
		Сортировка = ВыбСортировка.ПолучитьЗначение(ВыбСортировка.ТекущаяСтрока());
	КонецЕсли;
	ВыбСортировка.УдалитьВсе();
	ВыбСортировка.ДобавитьЗначение("", "<Стандартная>");
	МД = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор());
	Тип = МД.Тип;
	Если Тип = "Справочник" Тогда
		ВыбСортировка.ДобавитьЗначение("Код");
		ВыбСортировка.ДобавитьЗначение("Наименование");
		МД = Метаданные.Справочник(МД.Вид);
		Для А=1 По МД.Реквизит() Цикл
			ВыбСортировка.ДобавитьЗначение(МД.Реквизит(А).Идентификатор, МД.Реквизит(А).Синоним);
		КонецЦикла;
	ИначеЕсли Тип = "Документ" Тогда
		ВыбСортировка.ДобавитьЗначение("ДатаДок", "Дата");
		ВыбСортировка.ДобавитьЗначение("НомерДок", "Номер");
		//МД = Метаданные.Документ(МД.Вид);
		//Для А=1 По МД.РеквизитШапки() Цикл
		//	ВыбСортировка.ДобавитьЗначение(МД.РеквизитШапки(А).Идентификатор, МД.РеквизитШапки(А).Синоним);
		//КонецЦикла;
	КонецЕсли;
	ВыбСортировка.ТекущаяСтрока(ВыбСортировка.НайтиЗначение(Сортировка));
КонецПроцедуры

//-----------------------------------------------
Процедура ОбновитьНапрСортировки(Номер, СортПоВозрастанию, СортПоУбыванию)
	СортПоВозрастанию.Видимость(1-НаправлениеСортировки[Номер]);
	СортПоУбыванию.Видимость(НаправлениеСортировки[Номер]);
КонецПроцедуры

//-----------------------------------------------
Процедура ПереключитьСортировку(Номер, СортПоВозрастанию, СортПоУбыванию)
	СортПоВозрастанию.Видимость(НаправлениеСортировки[Номер]);
	НаправлениеСортировки[Номер] = 1-НаправлениеСортировки[Номер];
	СортПоУбыванию.Видимость(НаправлениеСортировки[Номер]);
КонецПроцедуры


//-----------------------------------------------
Процедура ДоступностьСубконто1()
	Выбран = ВыбВидСубконто1.Выбран();
    Форма.ВыбОтборСубконто1.Доступность(Выбран);
    Форма.ВыбСортировка1.Доступность(?((Выбран = 1) И (ВыбСортировка1.РазмерСписка() > 1), 1, 0));
    Форма.ВыбСубконто1.Доступность(Выбран);
	Форма.ВыбратьСубконто1.Доступность(Выбран);
	Форма.ДобавитьСубконто1.Доступность(Выбран);
	Форма.УдалитьСубконто1.Доступность(Выбран);
	Форма.УдалитьВсеСубконто1.Доступность(Выбран);
	Форма.СортПоВозрастанию1.Доступность(Выбран);
	Форма.СортПоУбыванию1.Доступность(Выбран);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто1()
	ВыбСубконто1.УдалитьВсе();
	Если ВыбВидСубконто1.Выбран() = 0 Тогда
		ВыбОтборСубконто1.ТекущаяСтрока(4);
		ВыбСортировка1.УдалитьВсе();
	Иначе
		ВыбОтборСубконто1.ТекущаяСтрока(1);
		ЗаполнитьСортировку(ВыбВидСубконто1, ВыбСортировка1);
	КонецЕсли;
	ДоступностьСубконто1();
КонецПроцедуры

//-----------------------------------------------
Процедура ДоступностьСубконто2()
	Выбран = ВыбВидСубконто2.Выбран();
    Форма.ВыбОтборСубконто2.Доступность(Выбран);
    Форма.ВыбСортировка2.Доступность(?((Выбран = 1) И (ВыбСортировка2.РазмерСписка() > 1), 1, 0));
    Форма.ВыбСубконто2.Доступность(Выбран);
	Форма.ВыбратьСубконто2.Доступность(Выбран);
	Форма.ДобавитьСубконто2.Доступность(Выбран);
	Форма.УдалитьСубконто2.Доступность(Выбран);
	Форма.УдалитьВсеСубконто2.Доступность(Выбран);
	Форма.СортПоВозрастанию2.Доступность(Выбран);
	Форма.СортПоУбыванию2.Доступность(Выбран);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто2()
	ВыбСубконто2.УдалитьВсе();
	Если ВыбВидСубконто2.Выбран() = 0 Тогда
		ВыбОтборСубконто2.ТекущаяСтрока(4);
		ВыбСортировка2.УдалитьВсе();
	Иначе
		ВыбОтборСубконто2.ТекущаяСтрока(1);
		ЗаполнитьСортировку(ВыбВидСубконто2, ВыбСортировка2);
	КонецЕсли;
	ДоступностьСубконто2();
КонецПроцедуры

//-----------------------------------------------
Процедура ДоступностьСубконто3()
	Выбран = ВыбВидСубконто3.Выбран();
    Форма.ВыбОтборСубконто3.Доступность(Выбран);
    Форма.ВыбСортировка3.Доступность(?((Выбран = 1) И (ВыбСортировка3.РазмерСписка() > 1), 1, 0));
    Форма.ВыбСубконто3.Доступность(Выбран);
	Форма.ВыбратьСубконто3.Доступность(Выбран);
	Форма.ДобавитьСубконто3.Доступность(Выбран);
	Форма.УдалитьСубконто3.Доступность(Выбран);
	Форма.УдалитьВсеСубконто3.Доступность(Выбран);
	Форма.СортПоВозрастанию3.Доступность(Выбран);
	Форма.СортПоУбыванию3.Доступность(Выбран);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореВидаСубконто3()
	ВыбСубконто3.УдалитьВсе();
	Если ВыбВидСубконто3.Выбран() = 0 Тогда
		ВыбОтборСубконто3.ТекущаяСтрока(4);
		ВыбСортировка3.УдалитьВсе();
	Иначе
		ВыбОтборСубконто3.ТекущаяСтрока(1);
		ЗаполнитьСортировку(ВыбВидСубконто3, ВыбСортировка3);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСчета()
	ВидСубк = ВыбВидСубконто1;
	НазначитьСчет(ВыбВидСубконто1, Счет, 1);
	Если Счет.Выбран() = 0 Тогда
		ВыбВидСубконто1 = ВидСубк;
	ИначеЕсли ВыбВидСубконто1 <> ВидСубк Тогда
		ПриВыбореВидаСубконто1();
	КонецЕсли;

	ВидСубк = ВыбВидСубконто2;
	НазначитьСчет(ВыбВидСубконто2, Счет, 2);
	Если Счет.Выбран() = 0 Тогда
		ВыбВидСубконто2 = ВидСубк;
	ИначеЕсли ВыбВидСубконто2 <> ВидСубк Тогда
		ПриВыбореВидаСубконто2();
	КонецЕсли;

	ВидСубк = ВыбВидСубконто3;
	НазначитьСчет(ВыбВидСубконто3, Счет, 3);
	Если Счет.Выбран() = 0 Тогда
		ВыбВидСубконто3 = ВидСубк;
	ИначеЕсли ВыбВидСубконто3 <> ВидСубк Тогда
		ПриВыбореВидаСубконто3();
	КонецЕсли;

	Если Счет.Выбран() = 0 Тогда
		Форма.ДанныеПоСубсчетам.Доступность(1);
	Иначе
		ДанныеПоСубсчетам = 0;
		Форма.ДанныеПоСубсчетам.Доступность(0);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ОбработкаПодбора(ВыбранноеЗначение)
	РазмерСписка = СписокСубконто.РазмерСписка();
	Если (ДобавитьСубконто = 1) Или (СписокСубконто.РазмерСписка() = 0) Тогда
		СписокСубконто.ДобавитьЗначение(ВыбранноеЗначение);
		СписокСубконто.ТекущаяСтрока(СписокСубконто.РазмерСписка());
	Иначе
		Позиция = СписокСубконто.ТекущаяСтрока();
		СписокСубконто.УстановитьЗначение(Позиция, ВыбранноеЗначение);
		СписокСубконто.ТекущаяСтрока(Позиция);
	КонецЕсли;
	Если ДобавитьСубконто = 1 Тогда
	    Если (РазмерСписка = 0) И (СписокСубконто.РазмерСписка() = 1) И (ОтборСубк.ТекущаяСтрока() = 1) Тогда
			ОтборСубк.ТекущаяСтрока(3);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ВводСубконто(ВыбВидСубконто, ВыбСубконто, РежимПодбора, ДобСубконто, ОтборСубконто)
	Перем Субк, Форма;
	Если (ВыбСубконто.РазмерСписка() > 0) И (ВыбСубконто.ТекущаяСтрока() > 0)  Тогда
		Субк = ВыбСубконто.ПолучитьЗначение(ВыбСубконто.ТекущаяСтрока());
	КонецЕсли;

	СписокСубконто = ВыбСубконто;
	ДобавитьСубконто = ДобСубконто;
	ОтборСубк = ОтборСубконто;

	МД = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор());
	Тип = МД.Тип;
	Если (Тип = "Справочник") Или (Тип = "Счет") Тогда
		ТипВид = Тип;
		Если МД.Вид <> "" Тогда
			ТипВид = ТипВид+"."+МД.Вид;
		КонецЕсли;
		ОткрытьПодбор(ТипВид,,Форма, РежимПодбора, Субк);
		Если (Тип = "Справочник") Или (Тип = "Счет") Тогда
			Форма.ВыборГруппы(1);
		КонецЕсли;
	ИначеЕсли Тип = "Документ" Тогда
		Заказ = СоздатьОбъект("Документ");
		ВидыЗаказов = "Договор,Заказ,Счет,РасходнаяНакладная,СчетВходящий,ПриходнаяНакладнаяГТД,ПриходнаяНакладнаяЗапасы,ВозвратнаяНакладная,ВводОстатковКредита,ВозвратПоставщику,ЛиквидацияНеоборАктивов,ОказаниеУслуг,УслугиСтороннихОрганизаций,УслугиСтороннихОрганизацийПроизводственногоХарактера";
	    Заказ.ВидыДляВыбора(ВидыЗаказов);
		Если Заказ.Выбрать("Список заказов") = 1 Тогда
		    ВыбСубконто.ДобавитьЗначение(Заказ.ТекущийДокумент());
		КонецЕсли;
		Заказ = 0;
	ИначеЕсли Тип = "Перечисление" Тогда
		СписокЗначений = СоздатьОбъект("СписокЗначений");
		П = Перечисление.ПолучитьАтрибут(МД.Вид);
		Для А=1 По П.КоличествоЗначений() Цикл
			СписокЗначений.ДобавитьЗначение(П.ЗначениеПоНомеру(А));
			Если РежимПодбора = 1 Тогда
				Если ВыбСубконто.НайтиЗначение(П.ЗначениеПоНомеру(А)) <> 0 Тогда
				    СписокЗначений.Пометка(А, 1);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если РежимПодбора = 1 Тогда
			Если СписокЗначений.ОтметитьЗначения(, "Выберите "+МД.Синоним) = 1 Тогда
				РазмерСписка = ВыбСубконто.РазмерСписка();
				ВыбСубконто.УдалитьВсе();
				Для А=1 По СписокЗначений.РазмерСписка() Цикл
					Если СписокЗначений.Пометка(А) = 1 Тогда
						ВыбСубконто.ДобавитьЗначение(СписокЗначений.ПолучитьЗначение(А));
					КонецЕсли;
				КонецЦикла;
				Если ДобавитьСубконто = 1 Тогда
				    Если (РазмерСписка = 0) И (ВыбСубконто.РазмерСписка() = 1) И (ОтборСубк.ТекущаяСтрока() = 1) Тогда
						ОтборСубк.ТекущаяСтрока(3);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли
		Иначе
			Если СписокЗначений.ВыбратьЗначение(Субк, "Выберите "+МД.Синоним) = 1 Тогда
				ОбработкаПодбора(Субк);
			КонецЕсли
		КонецЕсли;
	Иначе
		ВвестиЗначение(Субк, "Введите "+Тип, Тип, МД.Длина, МД.Точность);
		ОбработкаПодбора(Субк);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриРедактированииСубконто(ВыбВидСубконто, ВыбСубконто)
	ВводСубконто(ВыбВидСубконто, ВыбСубконто, 0, 0, "");
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто(ВыбВидСубконто, ВыбСубконто, ОтборСубконто)
	ВводСубконто(ВыбВидСубконто, ВыбСубконто, 0, 1, ОтборСубконто);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриДобавленииСубконто(ВыбВидСубконто, ВыбСубконто, ОтборСубконто)
	ВводСубконто(ВыбВидСубконто, ВыбСубконто, 1, 1, ОтборСубконто);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриУдаленииСубконто(ВыбСубконто, ОтборСубконто)
	Если (ВыбСубконто.РазмерСписка() > 0) И
		 (ВыбСубконто.ТекущаяСтрока() > 0) Тогда
		ВыбСубконто.УдалитьЗначение(ВыбСубконто.ТекущаяСтрока());
		Если (ВыбСубконто.РазмерСписка() = 0) И (ОтборСубконто.ТекущаяСтрока() = 3) Тогда
			ОтборСубконто.ТекущаяСтрока(1);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриУдаленииВсехСубконто(ВыбСубконто, ОтборСубконто)
	ВыбСубконто.УдалитьВсе();
	Если ОтборСубконто.ТекущаяСтрока() = 3 Тогда
		ОтборСубконто.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ЦиклПоСчетам()
	Ит.ВыбратьСчета();
	Расшифровка.Установить("Отчет", "КарточкаСчета");
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Расшифровка.Установить("Счет", Ит.Счет);
		Т.ВывестиСекцию("Секция_4");
		Расшифровка.Установить("ПоВалюте", 1);
		Ит.ВыбратьВалюты();
		Пока Ит.ПолучитьВалюту() = 1 Цикл
			Расшифровка.Установить("Валюта", Ит.Валюта);
			Т.ВывестиСекцию("Секция_6");
		КонецЦикла;
		Расшифровка.Установить("Валюта");
		Расшифровка.Установить("ПоВалюте");
		Если Ит.Счет.Количественный = 1 Тогда
			Т.ВывестиСекцию("Секция_5");
		КонецЕсли;
	КонецЦикла;
	Расшифровка.Установить("Счет");
	Расшифровка.Установить("Отчет", "КарточкаСубконто");
КонецПроцедуры

//-----------------------------------------------
Процедура Сформировать()
	Если (ВыбВидСубконто1.Выбран() = 0) И
		 (ВыбВидСубконто2.Выбран() = 0) И
		 (ВыбВидСубконто3.Выбран() = 0) Тогда
		глКомментарий("Выберите вид субконто!",0,,"!");
		Возврат;
	КонецЕсли;

	Если глПроверкаИнтервалаОтчета(Дата1,Дата2) = 0 Тогда
		Возврат;
	КонецЕсли;

	НФ = РазделительУчета;

	ВидСубконто[1] = ВыбВидСубконто1; ВидСубконто[2] = ВыбВидСубконто2; ВидСубконто[3] = ВыбВидСубконто3;
	Субконто[1] = ВыбСубконто1; Субконто[2] = ВыбСубконто2; Субконто[3] = ВыбСубконто3;
	ОтборСубконто[1] = ?(ВидСубконто[1].Выбран()=1, ВыбОтборСубконто1.ТекущаяСтрока(), 4);
	ОтборСубконто[2] = ?(ВидСубконто[2].Выбран()=1, ВыбОтборСубконто2.ТекущаяСтрока(), 4);
	ОтборСубконто[3] = ?(ВидСубконто[3].Выбран()=1, ВыбОтборСубконто3.ТекущаяСтрока(), 4);
	ПоГруппам[1] = 0; ПоГруппам[2] = 0; ПоГруппам[3] = 0;
	НапрСортировки[1] = НаправлениеСортировки[1];
	НапрСортировки[2] = НаправлениеСортировки[2];
	НапрСортировки[3] = НаправлениеСортировки[3];
	Если (ВыбСортировка1.РазмерСписка() > 0) И (ВыбСортировка1.ТекущаяСтрока() > 0) Тогда
		Сортировка[1] = ВыбСортировка1.ПолучитьЗначение(ВыбСортировка1.ТекущаяСтрока());
	Иначе
		Сортировка[1] = "";
	КонецЕсли;
	Если (ВыбСортировка2.РазмерСписка() > 0) И (ВыбСортировка2.ТекущаяСтрока() > 0) Тогда
		Сортировка[2] = ВыбСортировка2.ПолучитьЗначение(ВыбСортировка2.ТекущаяСтрока());
	Иначе
		Сортировка[2] = "";
	КонецЕсли;
	Если (ВыбСортировка3.РазмерСписка() > 0) И (ВыбСортировка3.ТекущаяСтрока() > 0) Тогда
		Сортировка[3] = ВыбСортировка3.ПолучитьЗначение(ВыбСортировка3.ТекущаяСтрока());
	Иначе
		Сортировка[3] = "";
	КонецЕсли;

	Номер[1] = 1; Номер[2] = 2;	Номер[3] = 3;

	Если ОтборСубконто[1] = 2 Тогда
		ОтборСубконто[1] = 1;
		ПоГруппам[1] = 1;
	ИначеЕсли ОтборСубконто[1] <> 1 Тогда
		ОтборСубконто[1] = ОтборСубконто[1]-1;
	КонецЕсли;
	Если ОтборСубконто[2] = 2 Тогда
		ОтборСубконто[2] = 1;
		ПоГруппам[2] = 1;
	ИначеЕсли ОтборСубконто[2] <> 1 Тогда
		ОтборСубконто[2] = ОтборСубконто[2]-1;
	КонецЕсли;
	Если ОтборСубконто[3] = 2 Тогда
		ОтборСубконто[3] = 1;
		ПоГруппам[3] = 1;
	ИначеЕсли ОтборСубконто[3] <> 1 Тогда
		ОтборСубконто[3] = ОтборСубконто[3]-1;
	КонецЕсли;

	Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
		Поменять(1, 2);
	КонецЕсли;
	Если ОтборСубконто[2] > ОтборСубконто[3] Тогда
		Поменять(2, 3);
		Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
			Поменять(1, 2);
		КонецЕсли;
	КонецЕсли;


	Если Обновить = 2 Тогда
	    СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ВключатьСубСчета(ДанныеПоСубсчетам);
	Заголовок = "";
	Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
			Заголовок = Заголовок+?(А=1, "", ", ")+Строка(глУкр(ВидСубконто[А]))+?(ОтборСубконто[А] = 2, ":"+ЗначенияВСтроку(Субконто[А]), "");
			Ит.ИспользоватьСубконто(ВидСубконто[А], Субконто[А], ОтборСубконто[А], ПоГруппам[А]);
		КонецЕсли;
	КонецЦикла;
    Если ВыбПланСчетов = 1 Тогда
        ПланСчетов = ВыбранныйПланСчетов();
    КонецЕсли;
    Ит.ИспользоватьПланСчетов(ПланСчетов);
    Ит.ИспользоватьРазделительУчета(РазделительУчета);
	Если Ит.ВыполнитьЗапрос(Дата1, Дата2, Счет) = 0 Тогда
		Возврат;
	КонецЕсли;
	Если (ТипЗначенияСтр(Т) <> "Таблица")ИЛИ(Обновить=0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
	 
 	глУстПропись(Гривня);
	Если Константа.ФормыНаУкраинском = Да Тогда
		Т.ИсходнаяТаблица("Таблица_Укр");
	Иначе
		Т.ИсходнаяТаблица("Таблица");
	КонецЕсли;
	
	Расшифровка.Установить("Отчет", "РасширенныйАнализСубконто");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
    Расшифровка.Установить("ПланСчетов", ПланСчетов);
	Расшифровка.Установить("Обновить", 1);
	Расшифровка.Установить("Дата1", Дата1);
	Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("Счет", Счет);
	Для А=1 По 3 Цикл
		Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
		Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
		Расшифровка.Установить("ПоГруппам"+Номер[А], ПоГруппам[А]);
		Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
		Расшифровка.Установить("Сортировка"+Номер[А], Сортировка[А]);
		Расшифровка.Установить("НаправлениеСортировки"+Номер[А], НапрСортировки[А]);
	КонецЦикла;
	Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);
	Т.ВывестиСекцию("Секция_12");
	Т.ВывестиСекцию("Секция_1");
	Расшифровка.УдалитьВсе();
	Если Счет.Выбран() = 1 Тогда
		Расшифровка.Установить("Отчет", "КарточкаСчета");
	Иначе
		Расшифровка.Установить("Отчет", "КарточкаСубконто");
	КонецЕсли;
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
    Расшифровка.Установить("ПланСчетов", ПланСчетов);
	Расшифровка.Установить("Дата1", Дата1);
	Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("Счет", Счет);
	Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
			Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
			Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
			Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
		КонецЕсли;
	КонецЦикла;

	Если (ОтборСубконто[1] = 1) Или (ОтборСубконто[1] = 2) И (Субконто[1].РазмерСписка() > 1)  Тогда
		Ит.ВыбратьСубконто(1,,,, 1, Сортировка[1], НапрСортировки[1]);
		Пока Ит.ПолучитьСубконто(1) = 1 Цикл
			Расшифровка.Установить("ОтборСубконто"+Номер[1], 2);
			Расшифровка.Установить("Субконто"+Номер[1], Ит.Субконто());
			Если (ОтборСубконто[2] = 1) Или (ОтборСубконто[2] = 2) И (Субконто[2].РазмерСписка() > 1) Тогда
				Т.ВывестиСекцию("Секция_2");
				Ит.ВыбратьСубконто(2,,,, 1, Сортировка[2], НапрСортировки[2]);
				Пока Ит.ПолучитьСубконто(2) = 1 Цикл
					Расшифровка.Установить("ОтборСубконто"+Номер[2], 2);
					Расшифровка.Установить("Субконто"+Номер[2], Ит.Субконто(2));
					Если (ОтборСубконто[3] = 1) Или (ОтборСубконто[3] = 2) И (Субконто[3].РазмерСписка() > 1) Тогда
						Т.ВывестиСекцию("Секция_3");
						Ит.ВыбратьСубконто(3,,,, 1, Сортировка[3], НапрСортировки[3]);
						Пока Ит.ПолучитьСубконто(3) = 1 Цикл
							Расшифровка.Установить("ОтборСубконто"+Номер[3], 2);
							Расшифровка.Установить("Субконто"+Номер[3], Ит.Субконто(3));
							Если Счет.Выбран() = 0 Тогда
								Т.ВывестиСекцию("Секция_10");
								ЦиклПоСчетам();
								Т.ВывестиСекцию("Секция_11");
							Иначе
								Т.ВывестиСекцию("Секция_13");
							КонецЕсли;
						КонецЦикла;
						Расшифровка.Установить("Субконто"+Номер[3]);
						Расшифровка.Установить("ОтборСубконто"+Номер[3]);
						Т.ВывестиСекцию("Секция_7");
					ИначеЕсли Счет.Выбран() = 0 Тогда
						Т.ВывестиСекцию("Секция_3");
						ЦиклПоСчетам();
						Т.ВывестиСекцию("Секция_7");
					Иначе
						Т.ВывестиСекцию("Секция_14");
					КонецЕсли;
				КонецЦикла;
				Расшифровка.Установить("Субконто"+Номер[2]);
				Расшифровка.Установить("ОтборСубконто"+Номер[2]);
				Т.ВывестиСекцию("Секция_8");
			ИначеЕсли Счет.Выбран() = 0 Тогда
				Т.ВывестиСекцию("Секция_2");
				ЦиклПоСчетам();
				Т.ВывестиСекцию("Секция_8");
			Иначе
				Т.ВывестиСекцию("Секция_15");
			КонецЕсли;
		КонецЦикла;
		Расшифровка.Установить("Субконто"+Номер[1]);
		Расшифровка.Установить("ОтборСубконто"+Номер[1]);
	ИначеЕсли Счет.Выбран() = 0 Тогда
		ЦиклПоСчетам();
	КонецЕсли;
	Т.ВывестиСекцию("Секция_9");
	Ит = 0;
	Т.ТолькоПросмотр(1);
	Т.Опции(0, 0, 7, 1, "ОпцииПечатиРасширенныйАнализСубконто", "РасширенныйАнализСубконто");
	Т.ОбластьПечати(2);
	Т.Показать("Анализ субконто "+Заголовок+" ("+ПериодСтр(Дата1, Дата2)+?(ТипЗначения(РазделительУчета)=0, "", " "+РазделительУчета)+")", "");
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОткрытии()
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
		Форма.Текст.Видимость(0);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;

	ВыбОтборСубконто1.УдалитьВсе();
	ВыбОтборСубконто1.ДобавитьЗначение(1, "Разворачивать");
	ВыбОтборСубконто1.ДобавитьЗначение(2, "Разворачивать по группам");
	ВыбОтборСубконто1.ДобавитьЗначение(3, "Отбирать");
	ВыбОтборСубконто1.ДобавитьЗначение(4, "Не учитывать");
	ВыбОтборСубконто1.ТекущаяСтрока(1);

	ВыбОтборСубконто2.УдалитьВсе();
	ВыбОтборСубконто2.ДобавитьЗначение(1, "Разворачивать");
	ВыбОтборСубконто2.ДобавитьЗначение(2, "Разворачивать по группам");
	ВыбОтборСубконто2.ДобавитьЗначение(3, "Отбирать");
	ВыбОтборСубконто2.ДобавитьЗначение(4, "Не учитывать");
	ВыбОтборСубконто2.ТекущаяСтрока(4);

	ВыбОтборСубконто3.УдалитьВсе();
	ВыбОтборСубконто3.ДобавитьЗначение(1, "Разворачивать");
	ВыбОтборСубконто3.ДобавитьЗначение(2, "Разворачивать по группам");
	ВыбОтборСубконто3.ДобавитьЗначение(3, "Отбирать");
	ВыбОтборСубконто3.ДобавитьЗначение(4, "Не учитывать");
	ВыбОтборСубконто3.ТекущаяСтрока(4);

	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;
		ВыбПланСчетов = 0;
		ПланСчетов = глРасшифровка.Получить("ПланСчетов");
		РУ = глРасшифровка.Получить("РазделительУчета");
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
		Дата1 = глРасшифровка.Получить("Дата1");
		Дата2 = глРасшифровка.Получить("Дата2");
		Счет = глРасшифровка.Получить("Счет");
		ПриВыбореСчета();
		ВыбВидСубконто1 = глРасшифровка.Получить("ВидСубконто1");
		ПриВыбореВидаСубконто1();
		КопироватьСЗ(ВыбСубконто1, глРасшифровка.Получить("Субконто1"));
		ПоГруппам1 = глРасшифровка.Получить("ПоГруппам1");
		ВыбОтборСубконто1.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто1"));
		НаправлениеСортировки[1] = глРасшифровка.Получить("НаправлениеСортировки1");
		ВыбСортировка1.ТекущаяСтрока(ВыбСортировка1.НайтиЗначение(глРасшифровка.Получить("Сортировка1")));
		ВыбВидСубконто2 = глРасшифровка.Получить("ВидСубконто2");
		ПриВыбореВидаСубконто2();
		КопироватьСЗ(ВыбСубконто2, глРасшифровка.Получить("Субконто2"));
		ПоГруппам2 = глРасшифровка.Получить("ПоГруппам2");
		ВыбОтборСубконто2.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто2"));
		НаправлениеСортировки[2] = глРасшифровка.Получить("НаправлениеСортировки2");
		ВыбСортировка2.ТекущаяСтрока(ВыбСортировка2.НайтиЗначение(глРасшифровка.Получить("Сортировка2")));
		ВыбВидСубконто3 = глРасшифровка.Получить("ВидСубконто3");
		ПриВыбореВидаСубконто3();
		КопироватьСЗ(ВыбСубконто3, глРасшифровка.Получить("Субконто3"));
		ПоГруппам3 = глРасшифровка.Получить("ПоГруппам3");
		ВыбОтборСубконто3.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто3"));
		НаправлениеСортировки[3] = глРасшифровка.Получить("НаправлениеСортировки3");
		ВыбСортировка3.ТекущаяСтрока(ВыбСортировка3.НайтиЗначение(глРасшифровка.Получить("Сортировка3")));

		ДанныеПоСубсчетам = глРасшифровка.Получить("ДанныеПоСубсчетам");

		ОбновитьНапрСортировки(1, Форма.СортПоВозрастанию1, Форма.СортПоУбыванию1);
		ОбновитьНапрСортировки(2, Форма.СортПоВозрастанию2, Форма.СортПоУбыванию2);
		ОбновитьНапрСортировки(3, Форма.СортПоВозрастанию3, Форма.СортПоУбыванию3);

		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	Иначе
		Обновить = 0;
		ВыбПланСчетов = 1;
		ПланСчетов = ВыбранныйПланСчетов();
		РазделительУчета = глВосстановитьЗначение(,"БазФирма");
		ПоВсемРУ = 0;
		Если МаксимальноеКоличествоСубконто() < 2 Тогда
			Форма.ВыбВидСубконто2.Доступность(0);
			Форма.ВыбСубконто2.Доступность(0);
			Форма.ВыбОтборСубконто2.Доступность(0);
			Форма.ВыбСортировка2.Доступность(0);
			Форма.СортПоВозрастанию2.Доступность(0);
			Форма.СортПоУбыванию2.Доступность(0);
			Форма.ВвестиСубконто2.Доступность(0);
			Форма.ДобавитьСубконто2.Доступность(0);
			Форма.УдалитьСубконто2.Доступность(0);
			Форма.УдалитьВсеСубконто2.Доступность(0);
		КонецЕсли;

		Если МаксимальноеКоличествоСубконто() < 3 Тогда
			Форма.ВыбВидСубконто3.Доступность(0);
			Форма.ВыбСубконто3.Доступность(0);
			Форма.ВыбОтборСубконто3.Доступность(0);
			Форма.ВыбСортировка3.Доступность(0);
			Форма.СортПоВозрастанию3.Доступность(0);
			Форма.СортПоУбыванию3.Доступность(0);
			Форма.ВвестиСубконто3.Доступность(0);
			Форма.ДобавитьСубконто3.Доступность(0);
			Форма.УдалитьСубконто3.Доступность(0);
			Форма.УдалитьВсеСубконто3.Доступность(0);
		КонецЕсли;

		Дата1 = НачалоПериодаБИ();
		Дата2 = КонецПериодаБИ();

		НаправлениеСортировки[1] = 0;
		НаправлениеСортировки[2] = 0;
		НаправлениеСортировки[3] = 0;

		ОбновитьНапрСортировки(1, Форма.СортПоВозрастанию1, Форма.СортПоУбыванию1);
		ОбновитьНапрСортировки(2, Форма.СортПоВозрастанию2, Форма.СортПоУбыванию2);
		ОбновитьНапрСортировки(3, Форма.СортПоВозрастанию3, Форма.СортПоУбыванию3);

		ПриВыбореВидаСубконто1();
		ПриВыбореВидаСубконто2();
		ПриВыбореВидаСубконто3();
	КонецЕсли;
	Форма.КнопкаПоУмолчанию("Сформировать");
КонецПроцедуры

Процедура ВводНового()
	ОбновитьНапрСортировки(1, Форма.СортПоВозрастанию1, Форма.СортПоУбыванию1);
	ОбновитьНапрСортировки(2, Форма.СортПоВозрастанию2, Форма.СортПоУбыванию2);
	ОбновитьНапрСортировки(3, Форма.СортПоВозрастанию3, Форма.СортПоУбыванию3);

	ПриВыбореСчета();
	ДоступностьСубконто1();
	ДоступностьСубконто2();
	ДоступностьСубконто3();
КонецПроцедуры
