Перем Расшифровка;
Перем Обновить;
Перем Таб;

///////////////////////////////////Расшифровка//////////////////////////////////////////////////////////////
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

Процедура ОбработкаЯчейкиТаблицы(ТекЗначение,ТекФлагСтандОбраб,ТекТаблица,ТекАдрес)
	
КонецПроцедуры
///////////////////////////////////Область формирования отчета///////////////////////////////////////////////

Процедура ВывестиСекцииДопКолонок(Таб,тз,Область)
	
	Для Инд = 1 По Колонки.РазмерСписка() Цикл
		Если Колонки.Пометка(Инд) = 1 Тогда
			Таб.ПрисоединитьСекцию(Область + "|" + Колонки.ПолучитьЗначение(Инд));	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//Дополняет расчетные значения для таблицы отчета
Процедура РасссчитатьНедостающиеПоля(тз)
		
		СхемаЦенообразования = "";
		УстановкаСкидокТМЦ =тз.УстановкаСкидокТМЦ;
		Номенкклатура = тз.ТМЦ;
		ДатаЦены = УстановкаСкидокТМЦ.ДатаДок;
		тз.КатегорияЦен = ?(ПустоеЗначение(ПарамКатегорияЦены)=0, ПарамКатегорияЦены, тз.КатегорияЦен);
		КатегорияЦен = тз.КатегорияЦен;
		СпособПредоставления = тз.СпособПредоставления;
		Скидка = тз.Скидка;
		
		//Цена
		тз.ПериодСкидкиНало = УстановкаСкидокТМЦ.ДатаДок;
		тз.Цена = глВернутьЦену(Номенкклатура, КатегорияЦен, ДатаЦены, Гривня,,, СхемаЦенообразования);
		
		//Цена со скидкой
		Цена = тз.Цена;
		ЦенаСоСкидкой = тз.Цена;
		ОкруглятьДо = тз.ОкруглятьДо;
		ЦенаСоСкидкой = глРассчитатьЦенуСоСкидкой(ДатаЦены, Цена, Номенкклатура, "", СпособПредоставления, Скидка, ОкруглятьДо, УстановкаСкидокТМЦ);
		тз.ЦенаСоСкидкой = ЦенаСоСкидкой;
		
		//План продаж
		тз.ПродажиПланСумма = тз.ЦенаСоСкидкой * тз.ПродажиПланКол; 
		тз.СхемаЦенообразования = СхемаЦенообразования;
		
		//Сумма скидки
		тз.СуммаСкидки = тз.ПродажиФактКол * тз.Цена - тз.ПродажиФактСумма;
				
		
КонецПроцедуры

Процедура Сформировать()
	Перем тз;
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
	Расшифровка = СоздатьОбъект("СписокЗначений");

	//СписТМЦ
	списТМЦ_ = СоздатьОбъект("СписокЗначений");
	Если ПустоеЗначение(Спецификация) = 0 Тогда
		Спецификация.ВыгрузитьТабличнуюЧасть(списТМЦ_, "ТМЦ");
	Иначе
		списТМЦ_ = списТМЦ;
	КонецЕсли;
	
	рс = СоздатьОбъект("ODBCRecordset");
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора внесенные вручную изменения будут потеряны!!!
	ТекстЗапроса = "
	|SELECT 
	| Q2.ТМЦ [ТМЦ $Справочник.ТМЦ]
	|,Q2.УстановкаСкидокТМЦ_IDDOC [УстановкаСкидокТМЦ $Документ.УстановкаСкидокТМЦ]
	|,Q2.Контрагенты_ID [Контрагент $Справочник.Контрагенты]
	|,Q2.ПериодСкидкиОкончание
	|,Q2.КатегорииЦен_ID [КатегорияЦен $Справочник.КатегорииЦен]
	|,Q2.КомментСтр
	|,Q2.СпособПредоставления [СпособПредоставления $Перечисление.СпособыПредоставленияСкидки]
	|,Q2.Скидка
	|,Q2.ОкруглятьДо
	|,max(Q2.ПродажиПланКол) ПродажиПланКол
	|,Sum(Q2.ПродажиФактКол) ПродажиФактКол
	|,Sum(Q2.ПродажиФактСумма) ПродажиФактСумма
	|,Sum(Q2.ВозвратКол) ВозвратКол
	|,Sum(Q2.ВозвратСумма) ВозвратСумма
	|,GROUPING(Q2.ТМЦ) ТМЦ_Итог
	|,GROUPING(Q2.УстановкаСкидокТМЦ_IDDOC) УстановкаСкидокТМЦ_Итог
	|,GROUPING(Q2.Контрагенты_ID) Контрагент_Итог
	|,GROUPING(Q2.ПериодСкидкиОкончание) ПериодСкидкиОкончание_Итог
	|,GROUPING(Q2.КатегорииЦен_ID) КатегорияЦен_Итог
	|,GROUPING(Q2.КомментСтр) КомментСтр_Итог
	|,GROUPING(Q2.СпособПредоставления) СпособПредоставления_Итог
	|,GROUPING(Q2.Скидка) Скидка_Итог
	|,GROUPING(Q2.ОкруглятьДо) ОкруглятьДо_Итог
	|FROM
	|(
	|SELECT 
	| Q1.Контрагенты_ID 
	|,Q1.УстановкаСкидокТМЦ_IDDOC 
	|,Q1.ПериодСкидкиОкончание
	|,Q1.КатегорииЦен_ID 
	|,Q1.ТМЦ 
	|,Q1.КомментСтр
	|,Q1.СпособПредоставления 
	|,Q1.Скидка
	|,Q1.ОкруглятьДо
	|,max(Q1.ПродажиПланКол) ПродажиПланКол
	|,Sum(Q1.ПродажиФактКол) ПродажиФактКол
	|,Sum(Q1.ПродажиФактСумма) ПродажиФактСумма
	|,Sum(Q1.ВозвратКол) ВозвратКол
	|,Sum(Q1.ВозвратСумма) ВозвратСумма
	|FROM 
	|(
	|SELECT Контрагенты.ID as Контрагенты_ID
	|	, УстановкаСкидокТМЦ.IDDOC as УстановкаСкидокТМЦ_IDDOC 
	|	, $УстановкаСкидокТМЦ.ДатаПо ПериодСкидкиОкончание
	|	, КатегорииЦен.ID as КатегорииЦен_ID
	|	, $УстановкаСкидокТМЦСтроки.ТМЦ as ТМЦ
	|   , $УстановкаСкидокТМЦСтроки.КомментСтр КомментСтр
	|	, $УстановкаСкидокТМЦСтроки.СпособПредоставления as СпособПредоставления 
	|	, $УстановкаСкидокТМЦСтроки.Скидка Скидка
	|   , $УстановкаСкидокТМЦСтроки.ОкруглятьДо ОкруглятьДо
	|	, $УстановкаСкидокТМЦСтроки.Кво ПродажиПланКол
	|	, ОборотыОбороты.РасходКвоОборот ПродажиФактКол
	|	, ОборотыОбороты.РасходСумОборот ПродажиФактСумма
	|   , 0 ВозвратКол
	|   , 0 ВозвратСумма
	|FROM $Документ.РасходнаяНакладная AS РасходнаяНакладная
	|	INNER JOIN _1SJOURN AS Журнал ON РасходнаяНакладная.IDDOC = Журнал.IDDOC
	|	INNER JOIN $РегистрОбороты.Обороты(:НачалоПериода,
	|		:ОкончаниеПериода,
	|		Документ) AS ОборотыОбороты ON Журнал.DATE_TIME_IDDOC = ОборотыОбороты.ПозицияДокумента
	|	INNER JOIN $Документ.УстановкаСкидокТМЦ AS УстановкаСкидокТМЦ ON $РасходнаяНакладная.УстановкаСкидокТМЦ = УстановкаСкидокТМЦ.IDDOC
	|	INNER JOIN $ДокументСтроки.УстановкаСкидокТМЦ AS УстановкаСкидокТМЦСтроки ON УстановкаСкидокТМЦ.IDDOC = УстановкаСкидокТМЦСтроки.IDDOC AND $УстановкаСкидокТМЦСтроки.ТМЦ = ОборотыОбороты.ТМЦ
	|	INNER JOIN $Справочник.Контрагенты AS Контрагенты ON $РасходнаяНакладная.Контрагент = Контрагенты.ID
	|	LEFT OUTER JOIN $Справочник.КатегорииЦен AS КатегорииЦен ON $ПоследнееЗначение.Контрагенты.КатегорияЦен(Контрагенты.ID, Cast(Left(Журнал.DATE_TIME_IDDOC, 8) AS datetime)) = КатегорииЦен.ID
	|WHERE (Журнал.DATE_TIME_IDDOC >= :НачалоПериода)
	|	AND (Журнал.DATE_TIME_IDDOC <= :ОкончаниеПериода~)
	|	AND ((Журнал.CLOSED & 1) = 1)
	|	AND ($РасходнаяНакладная.УстановкаСкидокТМЦ <> $ПустойИд)"   
	+ ?(списКонтрагентов.РазмерСписка()>0,"  and Контрагенты.ID IN (SELECT Val FROM #списКонтрагентов)", "")
	+ ?(списКатегорийЦен.РазмерСписка()>0 ,"  and КатегорииЦен.ID IN (SELECT Val FROM #списКатегорийЦен)", "")
	+ ?(списТМЦ_.РазмерСписка()>0," and $УстановкаСкидокТМЦСтроки.ТМЦ IN (SELECT Val FROM #списТМЦ)", "") +"
	|UNION ALL
	|SELECT Контрагенты.ID
	|	, УстановкаСкидокТМЦ.IDDOC
	|	, $УстановкаСкидокТМЦ.ДатаПо
	|	, КатегорииЦен.ID
	|	, $УстановкаСкидокТМЦСтроки.ТМЦ
	|   , $УстановкаСкидокТМЦСтроки.КомментСтр
	|	, $УстановкаСкидокТМЦСтроки.СпособПредоставления
	|	, $УстановкаСкидокТМЦСтроки.Скидка
	|   , $УстановкаСкидокТМЦСтроки.ОкруглятьДо
	|	, $УстановкаСкидокТМЦСтроки.Кво
	|	, ОборотыОбороты.РасходКвоОборот
	|	, ОборотыОбороты.РасходСумОборот
	|   , ОборотыОбороты.РасходКвоОборот 
	|   , ОборотыОбороты.РасходСумОборот
	|FROM $Документ.ВозвратнаяНакладная AS ВозвратнаяНакладная
	|	INNER JOIN _1SJOURN AS Журнал ON ВозвратнаяНакладная.IDDOC = Журнал.IDDOC
	|	INNER JOIN $РегистрОбороты.Обороты(:НачалоПериода,
	|		:ОкончаниеПериода,
	|		Документ) AS ОборотыОбороты ON Журнал.DATE_TIME_IDDOC = ОборотыОбороты.ПозицияДокумента
	|	INNER JOIN $Документ.УстановкаСкидокТМЦ AS УстановкаСкидокТМЦ ON $ВозвратнаяНакладная.УстановкаСкидокТМЦ = УстановкаСкидокТМЦ.IDDOC
	|	INNER JOIN $ДокументСтроки.УстановкаСкидокТМЦ AS УстановкаСкидокТМЦСтроки ON УстановкаСкидокТМЦ.IDDOC = УстановкаСкидокТМЦСтроки.IDDOC AND $УстановкаСкидокТМЦСтроки.ТМЦ = ОборотыОбороты.ТМЦ
	|	INNER JOIN $Справочник.Контрагенты AS Контрагенты ON $ВозвратнаяНакладная.Контрагент = Контрагенты.ID
	|	LEFT OUTER JOIN $Справочник.КатегорииЦен AS КатегорииЦен ON $ПоследнееЗначение.Контрагенты.КатегорияЦен(Контрагенты.ID, Cast(Left(Журнал.DATE_TIME_IDDOC, 8) AS datetime)) = КатегорииЦен.ID
	|WHERE (Журнал.DATE_TIME_IDDOC >= :НачалоПериода)
	|	AND (Журнал.DATE_TIME_IDDOC <= :ОкончаниеПериода~)
	|	AND ((Журнал.CLOSED & 1) = 1)
	|	AND ($ВозвратнаяНакладная.УстановкаСкидокТМЦ <> $ПустойИд)"   
	+ ?(списКонтрагентов.РазмерСписка()>0,"  and Контрагенты.ID IN (SELECT Val FROM #списКонтрагентов)", "")
	+ ?(списКатегорийЦен.РазмерСписка()>0 ,"  and КатегорииЦен.ID IN (SELECT Val FROM #списКатегорийЦен)", "")
	+ ?(списТМЦ_.РазмерСписка()>0," and $УстановкаСкидокТМЦСтроки.ТМЦ IN (SELECT Val FROM #списТМЦ)", "") +"
	|)
	| AS Q1
	|GROUP BY 
	| Q1.ТМЦ
	|,Q1.УстановкаСкидокТМЦ_IDDOC
	|,Q1.Контрагенты_ID
	|,Q1.ПериодСкидкиОкончание
	|,Q1.КатегорииЦен_ID 
	|,Q1.КомментСтр
	|,Q1.СпособПредоставления 
	|,Q1.Скидка
	|,Q1.ОкруглятьДо)
	|AS Q2
	|GROUP BY 
	|Q2.ТМЦ
	|,Q2.УстановкаСкидокТМЦ_IDDOC
	|,Q2.Контрагенты_ID
	|,Q2.ПериодСкидкиОкончание
	|,Q2.КатегорииЦен_ID
	|,Q2.КомментСтр
	|,Q2.СпособПредоставления 
	|,Q2.Скидка
	|,Q2.ОкруглятьДо WITH ROLLUP
	|
	|";
	

	Если списКонтрагентов.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(списКонтрагентов, "#списКонтрагентов","Контрагенты");
	КонецЕсли;
	
	Если списКатегорийЦен.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(списКатегорийЦен, "#списКатегорийЦен", "КатегорииЦен");
	КонецЕсли;
	
	Если списТМЦ_.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(списТМЦ_, "#списТМЦ","ТМЦ");
	КонецЕсли;
	
	рс.УстановитьТекстовыйПараметр("НачалоПериода", НачалоПериода);
	рс.УстановитьТекстовыйПараметр("ОкончаниеПериода", ОкончаниеПериода);
	
	тз = рс.ВыполнитьИнструкцию(ТекстЗапроса);
	
	тз.НоваяКолонка("ПериодСкидкиНало","Дата");
	тз.НоваяКолонка("СхемаЦенообразования","Справочник.СхемыЦенообразования");
	тз.НоваяКолонка("Цена","Число", 15,2);
	тз.НоваяКолонка("ЦенаСоСкидкой","Число", 15,2);
	тз.НоваяКолонка("ПродажиПланСумма", "Число", 15,2);
	тз.НоваяКолонка("СуммаСкидки", "Число", 15,2);
	
	//Расшифровка
	Расшифровка.Установить("НачалоПериода", НачалоПериода);
	Расшифровка.Установить("ОкончаниеПериода", ОкончаниеПериода);
	Расшифровка.Установить("Спецификация", Спецификация);
	Расшифровка.Установить("ПарамКатегорияЦены", ПарамКатегорияЦены);
	Расшифровка.Установить("списКонтрагентов",списКонтрагентов);
	Расшифровка.Установить("списКатегорийЦен", списКатегорийЦен);
	Расшифровка.Установить("списТМЦ", списТМЦ);
	Расшифровка.Установить("Колонки", Колонки);
	
	Расшифровка.Установить("Отчет", "Отчет_ПоПредоставленнымСкидкамТМЦ");
	
	Расшифровка.Установить("Обновить");
	
	// Подготовка к заполнению выходных форм данными запроса
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить=0) Тогда
		Таб = СоздатьОбъект("Таблица");
	Иначе
		Таб.Очистить();
	КонецЕсли;
	
	Таб.ИсходнаяТаблица("Отчет");
	
	//Кнопки
	Таб.ВывестиСекцию("Кнопки|ОсновнойРаздел");
	Таб.ПрисоединитьСекцию("Кнопки|ТМЦ");
	ВывестиСекцииДопКолонок(Таб,тз,"Кнопки");
    Таб.ПрисоединитьСекцию("Кнопки|ОсновнойРаздел_2");	
	
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок|ОсновнойРаздел");
	Таб.ПрисоединитьСекцию("Заголовок|ТМЦ");
	ВывестиСекцииДопКолонок(Таб,тз,"Заголовок");
    Таб.ПрисоединитьСекцию("Заголовок|ОсновнойРаздел_2");
	
	//Шапка таблицы
	Таб.ВывестиСекцию("Шапка|ОсновнойРаздел");
	Таб.ПрисоединитьСекцию("Шапка|ТМЦ");
	ВывестиСекцииДопКолонок(Таб,тз,"Шапка");
	Таб.ПрисоединитьСекцию("Шапка|ОсновнойРаздел_2");
	
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	
	Состояние("Заполнение выходной таблицы...");
	
	тз.ВыбратьСтроки();
	
	ИтогоПродажиПланКол = 0;
	ИтогоПродажиПланСумма = 0;
	
	ЦенаСумма = 0;
	ЦенаСоСкидкойСумма = 0;
	КоличествоЗаписей = 0;
	
	//Промежут. итоги 
	ЦенаСред = 0;
	ЦенаСоСкидкойСред = 0;
	СуммаСкидкиПрожежутИтог = 0;
	
	//вывод строки 
	Пока тз.ПолучитьСтроку() = 1  Цикл
		
		Уровень = 9 - (тз.Контрагент_Итог + тз.УстановкаСкидокТМЦ_Итог + тз.ПериодСкидкиОкончание_Итог + тз.КатегорияЦен_Итог +
		тз.ТМЦ_Итог + тз.КомментСтр_Итог + тз.СпособПредоставления_Итог + тз.Скидка_Итог +  тз.ОкруглятьДо_Итог);
		
		//Вывод строки 
		Если Уровень = 9  Тогда
			
			РасссчитатьНедостающиеПоля(тз);
			
			Таб.ВывестиСекцию("Строка|ОсновнойРаздел");
			Таб.ПрисоединитьСекцию("Строка|ТМЦ");
			ВывестиСекцииДопКолонок(Таб,тз,"Строка");
			Таб.ПрисоединитьСекцию("Строка|ОсновнойРаздел_2");
			ЦенаСумма = ЦенаСумма + тз.Цена;
			ЦенаСоСкидкойСумма = ЦенаСоСкидкойСумма + тз.ЦенаСоСкидкой;
			КоличествоЗаписей = КоличествоЗаписей + 1;
			СуммаСкидкиПрожежутИтог = СуммаСкидкиПрожежутИтог + тз.СуммаСкидки;
			
			ИтогоСуммаСкидки = ИтогоСуммаСкидки + тз.СуммаСкидки;
			
		КонецЕсли;
		
		//Вывод строки промежуточных итогов
		Если Уровень = 2  Тогда
			
			РасссчитатьНедостающиеПоля(тз);
			//Средние цены
			Если КоличествоЗаписей>0 Тогда
				ЦенаСред = Окр(ЦенаСумма/КоличествоЗаписей,2);
				ЦенаСоСкидкойСред = Окр(ЦенаСоСкидкойСумма/КоличествоЗаписей,2);
			КонецЕсли;
			//плановая сумма 
			тз.ПродажиПланСумма = тз.ПродажиПланКол*ЦенаСоСкидкойСред;
			
			Таб.ВывестиСекцию("Строка_итог|ОсновнойРаздел");
			Таб.ПрисоединитьСекцию("Строка_итог|ТМЦ");
			ВывестиСекцииДопКолонок(Таб,тз,"Строка_итог");
			Таб.ПрисоединитьСекцию("Строка_итог|ОсновнойРаздел_2");
			
			//подсчет итогов плановых продаж
			ИтогоПродажиПланКол = ИтогоПродажиПланКол + тз.ПродажиПланКол;
			ИтогоПродажиПланСумма = ИтогоПродажиПланСумма + тз.ПродажиПланСумма;
			
			ЦенаСумма = 0;
			ЦенаСоСкидкойСумма = 0;
			КоличествоЗаписей = 0;
			
			ЦенаСред = 0;
			ЦенаСоСкидкойСред = 0;	
			СуммаСкидкиПрожежутИтог = 0;
			
		КонецЕсли;
		
		//Итоги
		Если Уровень = 0 Тогда
			Таб.ВывестиСекцию("Итоги|ОсновнойРаздел");
			Таб.ПрисоединитьСекцию("Итоги|ТМЦ");
			ВывестиСекцииДопКолонок(Таб,тз,"Итоги");
			Таб.ПрисоединитьСекцию("Итоги|ОсновнойРаздел_2");
		КонецЕсли;
		
	КонецЦикла;
	
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	ЗаголовокОтчета = "Отчет по скидкам цен и продажам продукции за период " +ПериодСтр(НачалоПериода,ОкончаниеПериода);
	
	Таб.Показать(ЗаголовокОтчета, "");
	
КонецПроцедуры

///////////////////////////////////Работа со списками отбора и подбором///////////////////////////////////////

Процедура ДобавитьВСписок(Элт, Спис)
	
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	
	Если Элт.Вид() = "Контрагенты" Тогда
		ДобавитьвСписок(Элт, списКонтрагентов);
	ИначеЕсли Элт.Вид() = "КатегорииЦен" Тогда
		ДобавитьвСписок(Элт, списКатегорийЦен);
	ИначеЕсли Элт.Вид() = "ТМЦ" Тогда
		ДобавитьвСписок(Элт, списТМЦ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
	
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////Предопределенные процедуры//////////////////////////////////////////////// 
Процедура ПриОткрытии()
	
	Если глФлагРасшифровки = 1 Тогда 
		
		Обновить = глОбновить;
		
		НачалоПериода = глРасшифровка.Получить("НачалоПериода");
		ОкончаниеПериода = глРасшифровка.Получить("ОкончаниеПериода");
		Спецификация = глРасшифровка.Получить("Спецификация");
		ПарамКатегорияЦены = глРасшифровка.Получить("ПарамКатегорияЦены");
		
		глРасшифровка.Получить("списКонтрагентов").Выгрузить(списКонтрагентов);
		глРасшифровка.Получить("списКатегорийЦен").Выгрузить(списКатегорийЦен);
		глРасшифровка.Получить("списТМЦ").Выгрузить(списТМЦ);
		глРасшифровка.Получить("Колонки").Выгрузить(Колонки);
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;
	
	Форма.КнопкаПоУмолчанию("Сформировать");
	
КонецПроцедуры

//////////////////////////////Инициализация///////////////////////////////////////////////////////////////

Если Колонки.РазмерСписка() = 0 Тогда
	Колонки.ДобавитьЗначение("ПериодСкидкиНало");	
	Колонки.ДобавитьЗначение("ПериодСкидкиОкончание");	
	Колонки.ДобавитьЗначение("КомментСтр");
	Колонки.ДобавитьЗначение("КатегорияЦен");
	Колонки.ДобавитьЗначение("СхемаЦенообразования");
	Колонки.ДобавитьЗначение("СпособПредоставления");	
	Колонки.ДобавитьЗначение("Скидка");	
КонецЕсли;

Колонки.ТекущаяСтрока(1);