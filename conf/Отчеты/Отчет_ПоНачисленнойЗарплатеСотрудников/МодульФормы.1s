Перем ТабДокументы;
Перем Расшифровка;
Перем Обновить;
Перем Таб;

Процедура  Сформировать() Далее

///////////////////////////////////Предопределенные процедуры/////////////////////////////////////////////// 

Процедура ПриОткрытии()
	
	Если глФлагРасшифровки = 1 Тогда 
		
		Обновить = глОбновить;
		
		ДатаНачала = глРасшифровка.Получить("ДатаНачала");
		ДатаОкончания = глРасшифровка.Получить("ДатаОкончания");
		глРасшифровка.Получить("списСотрудников").Выгрузить(списСотрудников);
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;

	Форма.КнопкаПоУмолчанию("Сформировать");
	
КонецПроцедуры

///////////////////////////////////Расшифровка//////////////////////////////////////////////////////////////

Функция РасшифровкаОбновить(Обновить)
	
	Расшифровка.Установить("Обновить", Обновить);
	
	Возврат Расшифровка;
	
КонецФункции

//////////////////////////////////Команды отчета/////////////////////////////////////////////////////////////

Процедура Сформировать()
	
	Перем ТекущийСотрудник, ТЗ_Периоды;
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
	//Расшифровка
	Расшифровка = СоздатьОбъект("СписокЗначений");
	
	Расшифровка.Установить("ДатаНачала", ДатаНачала);
	Расшифровка.Установить("ДатаОкончания", ДатаОкончания);
	
	Расшифровка.Установить("списСотрудников", списСотрудников);
		
	Расшифровка.Установить("Отчет", "Отчет_ПоНачисленнойЗарплатеСотрудников");
	Расшифровка.Установить("Обновить");
	
	// Подготовка к заполнению выходных форм данными запроса
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить=0) Тогда
		Таб = СоздатьОбъект("Таблица");
	Иначе
		Таб.Очистить();
	КонецЕсли;
	
	Результат = СоздатьОбъект("ИндексированнаяТаблица");
	
	рс = СоздатьОбъект("ODBCRecordset");
	
	///////////////////////////////////////////Оклады//////////////////////////////////////////////////////////////////////
	
	ТекстЗапроса = "
	|SELECT Сотрудники.PARENTID [Подразделение $Справочник.Сотрудники]
	|	, Сотрудники.CODE Код
	|	, Сотрудники.ID [Сотрудник $Справочник.Сотрудники]
	|	, $ПоследнееЗначение.Сотрудники.Оклад(Сотрудники.ID, :ДатаОкончания) УстановленныйОклад
	|	, $ПоследнееЗначение.Сотрудники.Должность(Сотрудники.ID, :ДатаОкончания) Должность
	|	, $ПоследнееЗначение.Сотрудники.СчетЗатрат(Сотрудники.ID, :ДатаОкончания) [СчетЗатрат $Счет.Основной]
	|	, NullIf($НачислениеЗП.МесяцНачисленияЗП, '17530101') Месяц
	|	, $НачислениеЗПСтроки.ОтработаноДней ОтработаноДней
	|	, $НачислениеЗПСтроки.ОтработаноЧасов ОтработаноЧасов
	|	, $НачислениеЗПСтроки.Оклад Оклад
	|	, $НачислениеЗПСтроки.Тариф Тариф
	|	, $НачислениеЗПСтроки.Премия Премия
	|	, $НачислениеЗПСтроки.Начислено Начислено
	|FROM $Документ.НачислениеЗП AS НачислениеЗП With (NOLOCK)
	|	FULL OUTER JOIN _1SJOURN AS Журнал With (NOLOCK) ON НачислениеЗП.IDDOC = Журнал.IDDOC
	|	LEFT OUTER JOIN $ДокументСтроки.НачислениеЗП AS НачислениеЗПСтроки With (NOLOCK) ON НачислениеЗП.IDDOC = НачислениеЗПСтроки.IDDOC
	|	RIGHT OUTER JOIN $Справочник.Сотрудники AS Сотрудники With (NOLOCK) ON $НачислениеЗПСтроки.Сотрудник = Сотрудники.ID
	|WHERE ((Журнал.CLOSED & 1) = 1)
	|	AND (NullIf($НачислениеЗП.МесяцНачисленияЗП, '17530101') >= :ДатаНачала)
	|	AND (NullIf($НачислениеЗП.МесяцНачисленияЗП, '17530101') <= :ДатаОкончания)"
	+  ?(списСотрудников.РазмерСписка()>0," AND Сотрудники.ID IN (SELECT Val FROM #списСотрудников)", "") + "
	|ORDER BY Сотрудники.PARENTID
	|	, Сотрудники.ID
	|	, $НачислениеЗП.МесяцНачисленияЗП";
	
	рс.УстановитьТекстовыйПараметр("ДатаНачала", ДатаНачала);
	рс.УстановитьТекстовыйПараметр("ДатаОкончания", ДатаОкончания);
	
	Если списСотрудников.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(списСотрудников, "#списСотрудников","Сотрудники");
	КонецЕсли;
	
	рс.ВыполнитьИнструкцию(ТекстЗапроса,Результат);
	
	//////////////////////////Наряды. Сделная зарплата////////////////////////////////////////////////////////////////////
	
	ТекстЗапроса = 
	"
	|SELECT Сотрудники.PARENTID [Подразделение $Справочник.Сотрудники]
	|	, Сотрудники.CODE Код
	|	, Сотрудники.ID [Сотрудник $Справочник.Сотрудники]
	|	, $ПоследнееЗначение.Сотрудники.Оклад(Сотрудники.ID, :ДатаОкончания) УстановленныйОклад
	|	, $ПоследнееЗначение.Сотрудники.Должность(Сотрудники.ID, :ДатаОкончания) Должность
	|	, $ПоследнееЗначение.Сотрудники.СчетЗатрат(Сотрудники.ID, :ДатаОкончания) [СчетЗатрат $Счет.Основной]
	|	, NullIf(Журнал.DATE_TIME_IDDOC, '17530101') Месяц
	|	, $НарядСтроки.СуммаС Начислено
	|FROM _1SJOURN AS Журнал With (NOLOCK)
	|	FULL OUTER JOIN $Документ.Наряд AS Наряд With (NOLOCK) ON Журнал.IDDOC = Наряд.IDDOC
	|	LEFT OUTER JOIN $ДокументСтроки.Наряд AS НарядСтроки With (NOLOCK) ON Наряд.IDDOC = НарядСтроки.IDDOC
	|	RIGHT OUTER JOIN $Справочник.Сотрудники AS Сотрудники With (NOLOCK) ON $НарядСтроки.Сотрудник = Сотрудники.ID
	|WHERE ((Журнал.CLOSED & 1) = 1)
	|	AND (Журнал.DATE_TIME_IDDOC >= :ДатаНачала)
	|	AND (Журнал.DATE_TIME_IDDOC <= :ДатаОкончания~)"
	+  ?(списСотрудников.РазмерСписка()>0," AND Сотрудники.ID IN (SELECT Val FROM #списСотрудников)", "") + "
	|ORDER BY Сотрудники.PARENTID
	|	, Сотрудники.ID
	|   , NullIf($Наряд.ДатаН, '17530101')";
	
	РезультатНаряды = СоздатьОбъект("ТаблицаЗначений");
	
	рс.УстановитьТекстовыйПараметр("ДатаНачала", ДатаНачала);
	рс.УстановитьТекстовыйПараметр("ДатаОкончания", ДатаОкончания);
	
	Если списСотрудников.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(списСотрудников, "#списСотрудников","Сотрудники");
	КонецЕсли;
	
	рс.ВыполнитьИнструкцию(ТекстЗапроса,РезультатНаряды);
	
	РезультатНаряды.ВыбратьСтроки();
	
	Пока РезультатНаряды.ПолучитьСтроку() = 1 Цикл
		Результат.НоваяСтрока();
		Результат.Подразделение = РезультатНаряды.Подразделение;
		Результат.Код = РезультатНаряды.Код;
		Результат.Сотрудник = РезультатНаряды.Сотрудник;
		Результат.УстановленныйОклад = РезультатНаряды.УстановленныйОклад;
		Результат.Должность = РезультатНаряды.Должность;
		Результат.СчетЗатрат = РезультатНаряды.СчетЗатрат;
		Результат.Месяц = НачМесяца(РезультатНаряды.Месяц); 
		Результат.Начислено = РезультатНаряды.Начислено;	
	КонецЦикла;
	
	Результат.Свернуть("Подразделение, Код, Сотрудник, УстановленныйОклад, Должность, СчетЗатрат,Месяц",
	"ОтработаноДней, ОтработаноЧасов,Оклад,Тариф,Премия,Начислено");
	
	Результат.Выгрузить(ТЗ_Периоды);
	ТЗ_Периоды.Свернуть("Месяц","Начислено");
	ТЗ_Периоды.Сортировать("Месяц");
	
	//ТЗ_Периоды.ВыбратьСтроку();
	
	//Добавляем индекс и группируем.
	Результат.ДобавитьИндекс("Ключ_индекс","Подразделение, Сотрудник");
	Результат.Группировать("Подразделение: Подразделение; Сотрудник: Сотрудник; Месяц: Месяц","Начислено");
	Результат.Сортировать("Подразделение");
	
	//Результат.Показать();
	
	Таб.ИсходнаяТаблица("Отчет");
	
	//Кнопки
	Таб.ВывестиСекцию("Кнопки");
	
	Таб.ВывестиСекцию("Заголовок");
	Таб.ВывестиСекцию("Шапка|Начало");
	
	ТЗ_Периоды.ВыбратьСтроки();
	
	Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл
		Таб.ПрисоединитьСекцию("Шапка|Колонка");
	КонецЦикла;
	
	КоличествоПериодов = ТЗ_Периоды.КоличествоСтрок();
	
	Таб.Опции(0,0,Таб.ВысотаТаблицы(),0);
	
	Результат.ВыбратьСтроки();
	
	Пока Результат.ПолучитьСтроку() = 1 Цикл //По подразделениям
		
		Таб.ВывестиСекцию("Подразделение|Начало");
		
		тзСотрудники = Результат.тзПотомки;
		тзСотрудники.Сортировать("Сотрудник");
		//тзСотрудники.Показать();
		
		тзСотрудники.ВыбратьСтроки();
		
		Пока тзСотрудники.ПолучитьСтроку() = 1 Цикл // По сотрудникам
			Таб.ВывестиСекцию("Строка|Начало");	
			
			тзМесяца = тзСотрудники.тзПотомки;
			тзМесяца.Сортировать("Месяц");
			
			тзМесяца.ВыбратьСтроки();
			
			Пока тзМесяца.ПолучитьСтроку() = 1 Цикл // По месяцам
				Таб.ПрисоединитьСекцию("Строка|Колонка");
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	//Итоги
	Таб.ВывестиСекцию("Подвал|Начало");
	
	ТЗ_Периоды.ВыбратьСтроки();
	
	Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл
		Таб.ПрисоединитьСекцию("Подвал|Колонка");
	КонецЦикла;
	
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет по начисленной зарплате "  + ПериодСтр(ДатаНачала,ДатаОкончания));
	
КонецПроцедуры

///////////////////////////////////Работа со списками отбора и подбором///////////////////////////////////////

Процедура ДобавитьВСписок(Элт, Спис)
	
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	
	Если Элт.Вид() = "Сотрудники" Тогда
		ДобавитьвСписок(Элт, списСотрудников);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
	
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
	
КонецПроцедуры


