//*********************************************
//Расчет затрат производства
Функция РасчетПрямыхЗатратНаОплатуТруда(Продукция, Док)
	ПрямаяЗарплата = 0;
	Если ПустоеЗначение(Продукция.СхемаРасчетаЗП) = 0 Тогда
		СхемаЗП = Продукция.СхемаРасчетаЗП.Получить(Док.ДатаДок);
		СхемаЗП.ВыбратьСтроки();
		Пока СхемаЗП.ПолучитьСтроку() = 1 Цикл
			ВидРабот = СхемаЗП.ВидРабот;
			ВидБазы = СхемаЗП.ВидРабот.База;
			База = ?((СхемаЗП.ВидРабот.База = Перечисление.ТипБазыВР.КвоФарша) ИЛИ (СхемаЗП.ВидРабот.База = Перечисление.ТипБазыВР.Кутера), Док.КвоНорма, Док.КвоГПприемки);
			Тариф = ВидРабот.Тариф.Получить(Док.ДатаДок);
			СтоимостьЗП = База*Тариф;
			ПрямаяЗарплата = ПрямаяЗарплата + СтоимостьЗП;
		КонецЦикла;
	КонецЕсли;
	Возврат Окр(ПрямаяЗарплата,2);
КонецФункции

Функция ЦенаЕдПродукции(Продукция, Док, Группировка = 0)
	
	ЦенаЦены = 0;
	ЦенаТовара = глВернутьЦену(Продукция, ВидЦены);
	
	Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
		
		ПериодЦены = ?((Группировка = 1)ИЛИ(фВыводитьБонусы = 1), выбПериод, Док.ДатаДок);  
		Коэфф      = ?((Группировка = 1)ИЛИ(фВыводитьБонусы = 1), 1, // Тогда 1 Иначе 
		 ?(ПустоеЗначение(Док.Коэффициент) = 1,1,Док.Коэффициент));
		
		ЦенаТовара.ИспользоватьДату(ПериодЦены);
		ЦенаЦены = ЦенаТовара.Цена;
		ВалютаЦены = ЦенаТовара.Валюта;
		ЕдЦены = ЦенаТовара.Единица;
		Попытка		              
				ЦенаЦены = ЦенаЦены * Коэфф / ЕдЦены.Коэффициент;			
		Исключение       
			// если на дату документа у единицы еще не было коэффициента
			ЦенаЦены = 0;
			глКомментарий(Шаблон("[Продукция] - У единицы [ЕдЦены] на дату [ПериодЦены] не установлен коэффициент."),1);
		КонецПопытки;
		
	КонецЕсли;
	
	
	Возврат ЦенаЦены;
	

КонецФункции

//*******************************************
// Процедура генерации запроса Сформировать.
//
Процедура Сформировать()
	Перем Запрос, ТекстЗапроса, Таб;
	
	Если ПустоеЗначение(ВидЦены) = 1 Тогда
		Сообщить("Вид цен не заполнен", "!");
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(выбПериод) = 1 Тогда
		Сообщить("Период не заполнен", "!");
		Возврат;
	КонецЕсли;
	
	Если (ПустоеЗначение(ВыбНачПериода) = 1) ИЛИ (ПустоеЗначение(ВыбКонПериода) = 1)  Тогда
		Сообщить("Период не заполнен","!");
		Возврат;
	КонецЕсли;
	
	Если (фВыводитьБонусы = 1) И (ПустоеЗначение(СхемаРБ) = 1) Тогда
		Сообщить("Схема бонусов не заполнена", "!");
		Возврат;
	КонецЕсли;
	
	СписТоваровСпециф = СоздатьОбъект("СписокЗначений");
	ОтборПоСпециф = ?(ПустоеЗначение(Спецификация)=1,0,1);
	
	Если ОтборПоСпециф = 1 Тогда
		
		Спецификация.ВыгрузитьТабличнуюЧасть(СписТоваровСпециф,"ТМЦ");
		
	КонецЕсли;
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|ТекущийДокумент = Документ.ВыпускПродукции.ТекущийДокумент;
	|Продукция = Документ.ВыпускПродукции.Продукция;
	|Группировка Продукция;
	|Группировка ТекущийДокумент;
	|Условие(Продукция в списТовар);
	|"//}}ЗАПРОС
	;
	
	Если ОтборПоСпециф = 1 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "списТовар", "СписТоваровСпециф");
	КонецЕсли;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИтогПланКол = 0;
	ИтогФактКол = 0;
	ИтогОтклонение = 0;
	ИтогСумма = 0;
	ИтогМатЗатраты = 0;
	ИтогОПР = 0;
	ИтогССУпак = 0;
	ИтогПрямЗарплата = 0;
	ИтогЗатраты = 0;
	ИтогБонусы = 0;
	
	//Доп ТЗ
	//ТЗ для итогов
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("ПланКол", "Число", 15, 3);
	ТЗ.НоваяКолонка("ФактКол", "Число", 15, 3);
	ТЗ.НоваяКолонка("Отклонение", "Число", 15, 3);
	ТЗ.НоваяКолонка("ОтнОтклонение", "Число", 15, 3);
	ТЗ.НоваяКолонка("Цена", 12, 2);
	ТЗ.НоваяКолонка("Сумма", 15, 2);
	ТЗ.НоваяКолонка("Затраты", 15, 2);
	ТЗ.НоваяКолонка("МатЗатраты", 15, 2);
	ТЗ.НоваяКолонка("ОПР", 15, 2);
	ТЗ.НоваяКолонка("ССУпак", 15, 2);
	ТЗ.НоваяКолонка("ПрямЗарплата", 15, 2);
	ТЗ.НоваяКолонка("ТекущийДокумент", "Документ");
	ТЗ.НоваяКолонка("Бонусы", "Число", 15, 2);
	
	//Для расчета бонусов
	ТЗ_Бонусы = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Бонусы.НоваяКолонка("ДатаДок", "Дата");
	ТЗ_Бонусы.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗ_Бонусы.НоваяКолонка("ТекущийДокумент", "Документ");
	ТЗ_Бонусы.НоваяКолонка("ЦенаБезСкидки", "Число", 12, 2);
	ТЗ_Бонусы.НоваяКолонка("СуммаБезСкидки", "Число", 15, 2);
	ТЗ_Бонусы.НоваяКолонка("ЦенаСНДС", "Число", 12, 2);//ЦенаСНДС
	ТЗ_Бонусы.НоваяКолонка("СуммаСНДС", "Число", 15, 2);
	ТЗ_Бонусы.НоваяКолонка("Ед", "Справочник.Единицы");
	ТЗ_Бонусы.НоваяКолонка("Кво", "Число", 12, 2);
	ТЗ_Бонусы.НоваяКолонка("ВидУпаковки", "Справочник.ВидыУпаковки");
	ТЗ_Бонусы.НоваяКолонка("Коэффициент", "Число", 10, 3);
	ТЗ_Бонусы.НоваяКолонка("Кво", "Число", 15, 3);
	ТЗ_Бонусы.НоваяКолонка("Бонусы", "Число", 15, 2);
	
	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Отчет");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок|Основная");
	
	Если фВыводитьБонусы = 1 Тогда
		Таб.ПрисоединитьСекцию("Заголовок|Бонусы");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Заголовок|Рентабельность");
	
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	Пока Запрос.Группировка(1) = 1 Цикл
		// Заполнение полей Продукция
		Если Запрос.Продукция.ЭтоГруппа() = 1 Тогда
			Таб.ВывестиСекцию("ПродукцияГруппа|Основная");
			Если фВыводитьБонусы = 1 Тогда
				Таб.ПрисоединитьСекцию("ПродукцияГруппа|Бонусы");
			КонецЕсли;
			Таб.ПрисоединитьСекцию("ПродукцияГруппа|Рентабельность");
			Продолжить;
		КонецЕсли;
		
		Если Запрос.Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция Тогда
			Продолжить;
		КонецЕсли;
			
		ТЗ.УдалитьСтроки();
		
		Продукция = Запрос.Продукция;
		
		Пока Запрос.Группировка(2) = 1 Цикл
			// В контексте группировки
			Док = Запрос.ТекущийДокумент;
			Док.ВыбратьСтроки();
			
			Пока  Док.ПолучитьСтроку() = 1 Цикл
				
				Если Запрос.Продукция <> Док.Продукция Тогда
					Продолжить;
				КонецЕсли;
				
				ТЗ.НоваяСтрока();
				ТЗ.ТекущийДокумент = Док;
				ТЗ.ПланКол = Док.Кво;
				ТЗ.ФактКол = Док.КвоГППриемки;
				ТЗ.Отклонение = Док.КвоГППриемки-Док.Кво;
				ТЗ.ОтнОтклонение = Окр(?(Док.Кво = 0,0,(Док.КвоГППриемки-Док.Кво)/Док.Кво)*100,2);
				ТЗ.Цена = ЦенаЕдПродукции(Продукция, Док);
				ТЗ.Сумма = Окр(ТЗ.Цена*ТЗ.ФактКол,2);
				
				ТЗ.МатЗатраты = Окр(глПроизводственныеЗатратыПоДокументу(Продукция, Док),2);
				ТЗ.ОПР = Окр(Продукция.ОПР.Получить(Док.ДатаДок)*Док.КвоГПприемки,2);
				ТЗ.ССУпак = Окр(глПолучитьСтУпак(Продукция,, Док.ДатаДок)*Док.КвоГПприемки,2);
				ТЗ.ПрямЗарплата = Окр(РасчетПрямыхЗатратНаОплатуТруда(Продукция, Док),2);
				ТЗ.Затраты = Окр(ТЗ.МатЗатраты + ТЗ.ОПР + ТЗ.ССУпак + ТЗ.ПрямЗарплата,2); 
				
				//Бонусы
				ТЗ_Бонусы.УдалитьСтроки();
				Если фВыводитьБонусы =1  Тогда 
					ТЗ_Бонусы.НоваяСтрока();
					ТЗ_Бонусы.ТекущийДокумент = ТЗ.ТекущийДокумент;
					ТЗ_Бонусы.ДатаДок = выбПериод;
					ТЗ_Бонусы.ТМЦ =Запрос.Продукция;
					ТЗ_Бонусы.ЦенаБезСкидки = ТЗ.Цена ;
					ТЗ_Бонусы.СуммаБезСкидки = ТЗ.Сумма;
					ТЗ_Бонусы.ЦенаСНДС = ТЗ.Цена;
					ТЗ_Бонусы.СуммаСНДС = ТЗ.Сумма;
					ТЗ_Бонусы.Ед = Док.Ед;
					ТЗ_Бонусы.Кво =ТЗ.ФактКол;
					ТЗ_Бонусы.ВидУпаковки = "";
					ТЗ_Бонусы.Коэффициент = Док.Коэффициент;
					глНачислитьБонусы(ТЗ_Бонусы,Контрагент,"",1,,,,СхемаРБ,1);
					ТЗ.Бонусы = ТЗ_Бонусы.Бонусы;
				КонецЕсли;
				
				//Итоги
				ИтогПланКол = ИтогПланКол + ТЗ.ПланКол;
				ИтогФактКол = ИтогФактКол + ТЗ.ФактКол;
				
				ИтогСумма = ИтогСумма + ТЗ.Сумма;
				ИтогМатЗатраты = ИтогМатЗатраты + ТЗ.МатЗатраты;
				ИтогОПР = ИтогОПР + ТЗ.ОПР;
				ИтогССУпак = ИтогССУпак + ТЗ.ССУпак;
				ИтогПрямЗарплата = ИтогПрямЗарплата + ТЗ.ПрямЗарплата; 
				ИтогЗатраты = ИтогЗатраты + ТЗ.Затраты;
				ИтогБонусы  = ИтогБонусы + ТЗ.Бонусы;
			
			КонецЦикла;
			
		КонецЦикла;
	
		//Вывод итогов
		Таб.ВывестиСекцию("Продукция|Основная");
		Если фВыводитьБонусы = 1 Тогда
			Таб.ПрисоединитьСекцию("Продукция|Бонусы");
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Продукция|Рентабельность");
		
		ТЗ.ВыбратьСтроки();
		//Вывод детальн. записей
		Если фДетальныеЗаписиДокумент = 1 Тогда
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				Таб.ВывестиСекцию("ТекущийДокумент|Основная");
				Если фВыводитьБонусы = 1 Тогда
					Таб.ПрисоединитьСекцию("ТекущийДокумент|Бонусы");
				КонецЕсли;
				Таб.ПрисоединитьСекцию("ТекущийДокумент|Рентабельность");
			КонецЦикла;
		КонецЕсли;
	
	КонецЦикла;
	
	//Итоги по отчету
	ИтогОтнОтклонение = Окр(?(ИтогПланКол = 0,0, (ИтогФактКол - ИтогПланКол)/ИтогПланКол)*100,2);
	ИтогОтклонение = ИтогФактКол - ИтогПланКол;
	ИтогРентабельность = Окр(?(ИтогЗатраты=0,0,ИтогСумма/?(фВыводитьБонусы = 1, ИтогЗатраты + ИтогБонусы, ИтогЗатраты))*100,2);
	
	Таб.ВывестиСекцию("Итоги|Основная");
	Если фВыводитьБонусы = 1 Тогда
		Таб.ПрисоединитьСекцию("Итоги|Бонусы");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Итоги|Рентабельность");
	
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет", "");
	
КонецПроцедуры

//*******************************************
//Работа со списком

Процедура ДобавитьВСписок(Элт, Наим, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Наим);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	Если Элт.Вид() = "ТМЦ" Тогда
		ДобавитьвСписок(Элт, Строка(Элт), списТовар);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	Если Лев(НазваниеОбъекта, 1) = "С" Тогда
	    КФормы.ВыборГруппы(1);
	КонецЕсли;	
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьВидЦенСхемуРБ()
	СхемаРБ = Контрагент.СхемаРасчетаБонуса.Получить(выбПериод);
	ВидЦены = Контрагент.КатегорияЦен.Получить(выбПериод);
КонецПроцедуры

Процедура УстановитьВидимость()
	Форма.РамкаБонусы.Видимость(фВыводитьБонусы);
	Форма.Контрагент.Видимость(фВыводитьБонусы);
	Форма.СхемаРБ.Видимость(фВыводитьБонусы);
	Форма.нКонтрагент.Видимость(фВыводитьБонусы);
	Форма.кКонтрагент.Видимость(фВыводитьБонусы);
	Форма.кСхемаРБ.Видимость(фВыводитьБонусы);
	Форма.нСхема.Видимость(фВыводитьБонусы);
КонецПроцедуры

//******************************Обработчики событий формы***************

Процедура ПриОткрытии()
	УстановитьВидимость();
	Если ПустоеЗначение(выбПериод) = 1 Тогда
		выбПериод = ТекущаяДата();
	КонецЕсли;
	УстановитьВидЦенСхемуРБ();
КонецПроцедуры

//**************************Конец Обработчики событий формы*************
