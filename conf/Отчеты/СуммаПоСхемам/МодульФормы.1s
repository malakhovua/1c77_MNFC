Перем ТЗВР, ТАут, Дл, ТЗДок;
Перем СпТовар;
Перем ТаблицаВидовРабот_индекс; // + umk

Процедура ПриОткрытии()
	
	Если Константа.УМК_ИспользоватьПрямыеЗапросы = Да Тогда
		ОткрытьФорму("Отчет.СуммыПоСхемамЗП_sql");
		СтатусВозврата(0);
		Возврат; 
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЯчейкиТаблицы(ТекЗначение,ТекФлагСтандОбраб,ТекТаблица,ТекАдрес)
	
	Если ТипЗначения(ТекЗначение) = 2 Тогда
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("Расшифровка");
		ТЗДок.ВыбратьСтроки();
		ИтогБаза = 0;
		ИтогСумма = 0;
		
		Таб.ВывестиСекцию("Заголовок");
		Пока ТЗДок.ПолучитьСтроку() = 1 Цикл
			Если ТЗДок.Ключ = ТекЗначение Тогда
				Таб.ВывестиСекцию("Строка");
				ИтогБаза = ИтогБаза + ТЗДок.База;
				ИтогСумма = ИтогСумма + ТЗДок.Сумма;
			КонецЕсли;
		КонецЦикла;
		
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		
		Если ИтогБаза <> 0 Тогда
			Таб.ВывестиСекцию("Итоги");
			Таб.Показать("Расшифровка");
		КонецЕсли;
		
	Иначе
		ОткрытьФорму(ТекЗначение);
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьСтрокуТЗП(ТМЦ, Схема, ДатаСхемы, ТЗП)
	// вначале проверим что там с датой в пред. строке и установим её
	Если ТЗП.КоличествоСтрок() > 0 Тогда
		Если ТЗП.Продукция = ТМЦ Тогда
			ТЗП.ДатаКон = ДатаСхемы-1;
		КонецЕсли;
	КонецЕсли;

	Если ПустоеЗначение(Схема) = 0 Тогда
		ТЗП.НоваяСтрока();
		ТЗП.Продукция = ТМЦ;
		ТЗП.ДатаНач = ДатаСхемы;
		ТЗП.Схема = Схема;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьСтрокуТАут(Продукция, КодТМЦ, КлючПоиска, База, Документ = "")
	
	// + umk
	КПоиска = КодТМЦ + "/" + КлючПоиска;
	
	сзКлюч = СоздатьОбъект("СписокЗначений");
	сзКлюч.ДобавитьЗначение(КПоиска);
	ТаблицаВидовРабот_индекс.Подмножество(сзКлюч, 1,"Индекс");
	ТаблицаВидовРабот_индекс.ВыбратьСтроки("Индекс");
	
	Пока ТаблицаВидовРабот_индекс.ПолучитьСтроку("Индекс") = 1 Цикл
		ТАут.НоваяСтрока();
		ТАут.Продукция = Продукция;
		ТАут.ВидРабот = ТаблицаВидовРабот_индекс.ВР;
		ТАут.Сумма = База * ?(фСумма = 1, ТаблицаВидовРабот_индекс.Тариф, 1);
		//Добавим строку в расшифровку.
		ТЗДок.НоваяСтрока();
		ТЗДок.Ключ = Строка(ТаблицаВидовРабот_индекс.ВР.Код) + ";" + Строка(Продукция.Код);
		ТЗДок.Документ = Документ;
		ТЗДок.База = База;
		ТЗДок.Тариф = ?(фСумма = 1, ТаблицаВидовРабот_индекс.Тариф, 1);
		ТЗДок.Сумма = ТАут.Сумма;
	КонецЦикла;
	// - umk
	
	//Стр = 0;
	//КПоиска = КодТМЦ + "/" + КлючПоиска;
	//Если ТЗВР.НайтиЗначение(КПоиска, Стр, "Ключ") = 1 Тогда
	//	ТЗВР.ПолучитьСтрокуПоНомеру(Стр);
	//	Пока ТЗВР.Ключ = КПоиска Цикл
	//		ТАут.НоваяСтрока();
	//		ТАут.Продукция = Продукция;
	//		ТАут.ВидРабот = ТЗВР.ВР;
	//		ТАут.Сумма = База * ?(фСумма = 1, ТЗВР.Тариф, 1);
	//		//Добавим строку в расшифровку.
	//		ТЗДок.НоваяСтрока();
	//		ТЗДок.Ключ = Строка(ТЗВР.ВР.Код) + ";" + Строка(Продукция.Код);
	//		ТЗДок.Документ = Документ;
	//		ТЗДок.База = База;
	//		ТЗДок.Тариф = ?(фСумма = 1, ТЗВР.Тариф, 1);
	//		ТЗДок.Сумма = ТАут.Сумма;
	//		
	//		
	//		Стр = Стр + 1;
	//		Если Стр > ТЗВР.КоличествоСтрок() Тогда
	//			Прервать;
	//		Иначе
	//			ТЗВР.ПолучитьСтрокуПоНомеру(Стр);
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;
	// - umk
	
КонецПроцедуры

Процедура  ОбработатьСписЗаказов(СписЗаказов, КлючСпособа);
	Ключ1 = Строка(Перечисление.ТипБазыВР.КвоФарша) + "/" + КлючСпособа;
	Ключ2 = Строка(Перечисление.ТипБазыВР.Кутера) + "/" + КлючСпособа;
	Для Инд = 1 По СписЗаказов.РазмерСписка() Цикл
		ДокЗаказ = СписЗаказов.ПолучитьЗначение(Инд);
		КлючПоиска1 = Ключ1 + "/" + Строка(ДокЗаказ.ДатаДок);
		КлючПоиска2 = Ключ2 + "/" + Строка(ДокЗаказ.ДатаДок);
		
		ДокЗаказ.ВыбратьСтроки();
		Пока ДокЗаказ.ПолучитьСтроку() = 1 Цикл
			// ищем в таблице продукции и видов работ
			КодТМЦ = ДокЗаказ.Продукция.Код;
			ДобавитьСтрокуТАут(ДокЗаказ.Продукция, КодТМЦ, КлючПоиска1, ДокЗаказ.КвоФаршаФакт, ДокЗаказ);
			ДобавитьСтрокуТАут(ДокЗаказ.Продукция, КодТМЦ, КлючПоиска2, ДокЗаказ.КвоКутеров*100, ДокЗаказ);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьЗапросПоВыпуску(НДата, КДата, СписЗ, Способ)
	ТекстЗ = 
	"//{{ЗАПРОС(Выпуск)
	|Период с НДата по КДата;
	|Продукция = Регистр.ВыпускПродукции.Продукция;
	|Количество = Регистр.ВыпускПродукции.Количество;
	|Заказ = Регистр.ВыпускПродукции.Заказ;
	|ДатаЗ = Регистр.ВыпускПродукции.Заказ.ДатаДок;
	|Функция КвоСумма = Сумма(Количество);
	|Группировка Продукция упорядочить по Продукция.Наименование без групп;" +
	?(Способ = 0,"
	|Группировка День;", "
	|Группировка ДатаЗ;") + "
	|Группировка Документ;" + "
	|Условие(Продукция в спТовар);" + 
	?(Способ = 1,"
	|Условие(Заказ в СписЗ);","") + "
	|"//}}ЗАПРОС
	;
	
	Запр = СоздатьОбъект("Запрос");
	Если Запр.Выполнить(ТекстЗ) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат Запр;
КонецФункции

Процедура ДобавитьТПрод(Прод, ТПрод, НачСтр)
	Если ПустоеЗначение(Прод) = 1 Тогда
		Возврат;
	КонецЕсли;
		
	Наим = Формат(Прод.Наименование, "С"+Дл);
	Если Прод.ЭтоГруппа() = 1 Тогда
		Наим = "*" + Наим;
	КонецЕсли;
	Для Инд = НачСтр+1 По ТПрод.КоличествоСтрок() Цикл
		ТПрод.УстановитьЗначение(Инд, "ПолноеИмя", Наим + "\" + ТПрод.ПолучитьЗначение(Инд, "ПолноеИмя"));
	КонецЦикла;
	
	ТПрод.НоваяСтрока();
	ТПрод.Продукция = Прод;
	ТПрод.ПолноеИмя = Наим;
	ДобавитьТПрод(Прод.Родитель, ТПрод, НачСтр);
КонецПроцедуры

Процедура ВывестиТаблицу()
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	
	ТВР = СоздатьОбъект("ТаблицаЗначений");
	ТАут.Свернуть("Продукция,ВидРабот", "Сумма");
	ТАут.Сортировать("Продукция");
	ТАут.Выгрузить(ТВР,,,"ВидРабот,Сумма");
	ТВР.Свернуть("ВидРабот", "Сумма");
	ТВР.Сортировать("ВидРабот");
	Таб.ВывестиСекцию("Шапка|Основная");
	ТВР.ВыбратьСтроки();
	Пока ТВР.ПолучитьСтроку() = 1 Цикл
		Таб.ПрисоединитьСекцию("Шапка|ВР");
	КонецЦикла;
	Таб.Опции(0,0,Таб.ВысотаТаблицы(), 1);
	
	ТПрод = СоздатьОбъект("ТаблицаЗначений");
	ТПрод.НоваяКолонка("Продукция", "Справочник.ТМЦ");
	ТПрод.НоваяКолонка("ПолноеИмя", "Строка");
	СтарПрод = "";
	ТАут.ВыбратьСтроки();
	Пока ТАут.ПолучитьСтроку() = 1 Цикл
		Если СтарПрод <> ТАут.Продукция Тогда
			ДобавитьТПрод(ТАут.Продукция, ТПрод, ТПрод.КоличествоСтрок());
		КонецЕсли;
	КонецЦикла; 
	ТПрод.Свернуть("Продукция,ПолноеИмя", "Сумма");
	ТПрод.Сортировать("ПолноеИмя");
	
	ТПрод.ВыбратьСтроки();
	Пока ТПрод.ПолучитьСтроку() = 1 Цикл
		Если ТПрод.Продукция.ЭтоГруппа() = 1 Тогда
			Таб.ВывестиСекцию("Группа|Основная");
		Иначе
			ТВР.Заполнить(0,,,"Сумма");
			Стр = 0;
			Если ТАут.НайтиЗначение(ТПрод.Продукция, Стр, "Продукция") = 1 Тогда
				ТАут.ПолучитьСтрокуПоНомеру(Стр);
				Пока ТАут.Продукция = ТПрод.Продукция Цикл
					Стр = Стр + 1;
					Стр1 = 0;
					Если ТВР.НайтиЗначение(ТАут.ВидРабот, Стр1, "ВидРабот") = 1 Тогда
						ТВР.УстановитьЗначение(Стр1, "Сумма", ТАут.Сумма);
					КонецЕсли;					

					Если Стр > ТАут.КоличествоСтрок() Тогда
						Прервать;
					Иначе
						ТАут.ПолучитьСтрокуПоНомеру(Стр);
					КонецЕсли;					
				КонецЦикла;
				
				Таб.ВывестиСекцию("Строка|Основная");
				ТВР.ВыбратьСтроки();
				Пока ТВР.ПолучитьСтроку() = 1 Цикл
					Таб.ПрисоединитьСекцию("Строка|ВР");
				КонецЦикла;				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
    
	Таб.ВывестиСекцию("Итого|Основная");
	ТАут.Свернуть("ВидРабот", "Сумма");
	ТАут.Сортировать("ВидРабот");
	ТАут.ВыбратьСтроки();
	Пока ТАут.ПолучитьСтроку() = 1 Цикл
		Таб.ПрисоединитьСекцию("Итого|ВР");
	КонецЦикла;
	
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Продукция и ВР");	
КонецПроцедуры

//*******************************************
Процедура Сформировать()
	// алгоритм 
	// вначале формирум таблицу, где будут все сочетания дат и схем
	Сообщить("start " + Строка(ТекущаяДата()) + " " + Строка(ТекущееВремя()));
	Состояние("Подготовка таблицы схем");
	спТовар = СоздатьОбъект("СписокЗначений");
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	ТЗП = СоздатьОбъект("ТаблицаЗначений");
	ТЗП.НоваяКолонка("Продукция", "Справочник.ТМЦ");
	ТЗП.НоваяКолонка("ДатаНач", "Дата");
	ТЗП.НоваяКолонка("ДатаКон", "Дата");
	ТЗП.НоваяКолонка("Схема", "Документ.СхемаРасчетаЗП");
	Пер = СоздатьОбъект("Периодический");
	
	СпрТМЦ.ВыбратьЭлементы(0);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если СпрТМЦ.ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;

		Если списТовар.РазмерСписка() > 0 Тогда
			Если списТовар.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Сх = СпрТМЦ.СхемаРасчетаЗП.Получить(НачДата);
		Если ПустоеЗначение(Сх) = 0 Тогда
			ДобавитьСтрокуТЗП(СпрТМЦ.ТекущийЭлемент(), Сх, НачДата, ТЗП);
		КонецЕсли;
		
		Пер.ИспользоватьОбъект("СхемаРасчетаЗП", СпрТМЦ.ТекущийЭлемент());
		Пер.ВыбратьЗначения(НачДата+1, КонДата);
		Пока Пер.ПолучитьЗначение() = 1 Цикл
			ДобавитьСтрокуТЗП(СпрТМЦ.ТекущийЭлемент(), Пер.Значение, Пер.ДатаЗнач, ТЗП);
		КонецЦикла;
		Если ТЗП.КоличествоСтрок() > 0 Тогда
			Если ТЗП.Продукция = СпрТМЦ.ТекущийЭлемент() Тогда
				Если ПустоеЗначение(ТЗП.ДатаКон) = 1 Тогда
					ТЗП.ДатаКон = КонДата;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		спТовар.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
	КонецЦикла;		
	
	// теперь имеем таблицу значений, сколько дней действовала какая схема
	// её нужно развернуть в таблицу видов работ с датами
	ТЗВР = СоздатьОбъект("ТаблицаЗначений");
	ТЗВР.НоваяКолонка("Продукция", "Справочник.ТМЦ");
	ТЗВР.НоваяКолонка("Дата", "Дата");
	ТЗВР.НоваяКолонка("Ключ", "Строка");
	ТЗВР.НоваяКолонка("ВР", "Справочник.ВидыРабот");
	ТЗВР.НоваяКолонка("Тариф", "Число", 13, 5);
	
	ТСхем = СоздатьОбъект("ТаблицаЗначений");
	ТСх = СоздатьОбъект("ТаблицаЗначений");
	ТСх.НоваяКолонка("Схема", "Документ.СхемаРасчетаЗП");
	ТСх.НоваяКолонка("ВР", "Справочник.ВидыРабот");
	ТСх.НоваяКолонка("База", "Перечисление.ТипБазыВР");
	//ТСх.НоваяКолонка("Тариф", "Число", 13, 5);
	ТСх.НоваяКолонка("Способ", "Число");
	ТЗП.Выгрузить(ТСхем, ,,"Схема");
	ТСхем.НоваяКолонка("С", "Число");
	ТСхем.Свернуть("Схема", "С");
	ТСхем.ВыбратьСтроки();
	Пока ТСхем.ПолучитьСтроку() = 1 Цикл
		Сх = ТСхем.Схема;
		Сх.ВыбратьСтроки();
		Пока Сх.ПолучитьСтроку() = 1 Цикл
			Если списВидР.РазмерСписка() > 0 Тогда
				Если Мин(списВидР.НайтиЗначение(Сх.ВидРабот), 1) = ?(фНЕВР = 1, 1, 0) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			ТСх.НоваяСтрока();
			ТСх.Схема = Сх;
			ТСх.ВР = Сх.ВидРабот;
			ТСх.Способ = Сх.ВидРабот.Способ;
			ТСх.База = Сх.ВидРабот.База;
			//ТСх.Тариф = Сх.Тариф;
		КонецЦикла;
	КонецЦикла;
	ТСх.Сортировать("Схема*");
	
	ТемпВР = СоздатьОбъект("ТаблицаЗначений");
	ТемпВР.НоваяКолонка("Ключ", "Строка");
	ТемпВР.НоваяКолонка("ВидРабот", "Справочник.ВидыРабот");
	//ТемпВР.НоваяКолонка("Тариф", "Число", 13, 5);
	
	ТЗП.ВыбратьСтроки();
	Пока ТЗП.ПолучитьСтроку() = 1 Цикл
		// ищем схему в таблице и добавляем все её виды работ
		ТемпВР.УдалитьСтроки();
		Стр = 0;
		Если ТСх.НайтиЗначение(ТЗП.Схема, Стр, "Схема") = 1 Тогда
			ТСх.ПолучитьСтрокуПоНомеру(Стр);
			Пока ТСх.Схема = ТЗП.Схема Цикл
				ТемпВР.НоваяСтрока();
				ТемпВР.Ключ = Строка(ТСх.База) + "/" + ТСх.Способ;
				ТемпВР.ВидРабот = ТСх.ВР;
				//ТемпВР.Тариф = ТСх.Тариф;
				Стр = Стр + 1;
				Если Стр > ТСх.КоличествоСтрок() Тогда
					Прервать;
				Иначе
					ТСх.ПолучитьСтрокуПоНомеру(Стр);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Ключ = ТЗП.Продукция.Код;
		НДата = ТЗП.ДатаНач;
		Пока НДата <= ТЗП.ДатаКон Цикл
			ТемпВР.ВыбратьСтроки();
			Пока ТемпВР.ПолучитьСтроку() = 1 Цикл
				ТЗВР.НоваяСтрока();
				ТЗВР.Продукция = ТЗП.Продукция;
				ТЗВР.Дата = НДата;
				ТЗВР.Ключ = Ключ + "/" + ТемпВР.Ключ + "/" + Строка(НДата);
				ТЗВР.ВР = ТемпВР.ВидРабот;
				ТЗВР.Тариф = ТемпВР.ВидРабот.Тариф.Получить(НДата);
			КонецЦикла;
			НДата=НДата+1;
		КонецЦикла;
	КонецЦикла;	
	
	ТЗВР.Сортировать("Ключ");
	//Поместим таблицу видов работ в индексированную таблицу  + umk
	ТаблицаВидовРабот_индекс = СоздатьОбъект("ИндексированнаяТаблица");
	ТаблицаВидовРабот_индекс.Загрузить(ТЗВР);
	ТаблицаВидовРабот_индекс.ДобавитьИндекс("Индекс", "Ключ");
	
	
	
	ТАут = СоздатьОбъект("ТаблицаЗначений");
	ТАут.НоваяКолонка("Продукция", "Справочник.ТМЦ");
	ТАут.НоваяКолонка("ВидРабот", "Справочник.ВидыРабот");
	ТАут.НоваяКолонка("Сумма", "Число", 15, 3);
	
	//**************************************************
	//Подготовим таблицу необходимую для расшифровки базы начислений по документам
	ТЗДок = СоздатьОбъект("ТаблицаЗначений");
	ТЗДок.НоваяКолонка("Ключ"); //Вид работ код; Продукция код
	ТЗДок.НоваяКолонка("База");
	ТЗДок.НоваяКолонка("Тариф");
	ТЗДок.НоваяКолонка("Сумма");
	ТЗДок.НоваяКолонка("Документ");
	
	Состояние("База: к-во фарша или кутера");
	//**************************************************
	// теперь выполняем запросы по способам начисления
	// Вариат первый. (БазаВР = Перечисление.ТипБазыВР.КвоФарша) или (БазаВР = Перечисление.ТипБазыВР.Кутера)
	// Способ 0
	СписЗаказов = СоздатьОбъект("СписокЗначений");
	ДокЗаказ = СоздатьОбъект("Документ.Заказ");
	ДокЗаказ.УстановитьФильтр(1, 0);
	ДокЗаказ.ВыбратьДокументы(НачДата, КонДата);
	Пока ДокЗаказ.ПолучитьДокумент() = 1 Цикл
		СписЗаказов.ДобавитьЗначение(ДокЗаказ.ТекущийДокумент());
	КонецЦикла;
	ОбработатьСписЗаказов(СписЗаказов, 0);

	Состояние("База: к-во фарша или кутера в2");
	//**************************************************
	// теперь выполняем запросы по способам начисления
	// Вариат второй. (БазаВР = Перечисление.ТипБазыВР.КвоФарша) или (БазаВР = Перечисление.ТипБазыВР.Кутера)
	// Способ 1
	
	СписЗаказовВ = СоздатьОбъект("СписокЗначений");
	КДата = Мин(ПолучитьДатуТА(), КонДата);
	НДата = Мин(НачДата, КДата);
	ТекстЗ = 
	"//{{ЗАПРОС(ВыпускЗак)
	|Период с НДата по КДата;
	|Продукция = Регистр.ВыпускПродукции.Продукция;
	|Количество = Регистр.ВыпускПродукции.Количество;
	|Заказ = Регистр.ВыпускПродукции.Заказ;
	|Функция КвоСумма = Сумма(Количество);
	|Группировка Заказ;
	|"//}}ЗАПРОС
	;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		СписЗаказовВ.ДобавитьЗначение(Запрос.Заказ);
	КонецЦикла;
	ОбработатьСписЗаказов(СписЗаказовВ, 1);
	
	Состояние("База: реализовано");
	// **************************
	// Вариант 3 (БазаВР = Перечисление.ТипБазыВР.Реализовано)
	ТекстЗ = 
	"//{{ЗАПРОС(Реализция)
	|Период с НДата по КДата;
	|Продукция = Регистр.Обороты.ТМЦ;
	|Количество = Регистр.Обороты.РасходКво;
	|ВидУпаковки = Регистр.Обороты.ВидУпаковки;
	|Функция КвоСумма1 = Сумма(Количество) Когда (ВидУпаковки <> НетУп);
	|Функция КвоСумма2 = Сумма(Количество) Когда (ВидУпаковки = НетУп);	
	|Группировка Продукция без групп;
	|Группировка ВидУпаковки без групп;
	|Группировка День;	
	|Группировка Документ;
	|Условие (Продукция в спТовар);
	|"//}}ЗАПРОС
	;
	
	Запр = СоздатьОбъект("Запрос");
	Если Запр.Выполнить(ТекстЗ) = 0  Тогда
	    Возврат;
	КонецЕсли;
	
	СписПродДляПер = СоздатьОбъект("СписокЗначений");
	КлючПоиска1 = Строка(Перечисление.ТипБазыВР.Реализовано) + "/1";
	КлючПоиска2 = Строка(Перечисление.ТипБазыВР.Реализовано) + "/0";
	Пока Запр.Группировка(1) = 1 Цикл
		СписПродДляПер.ДобавитьЗначение(Запр.Продукция);
		КодТМЦ = Запр.Продукция.Код;
		Пока Запр.Группировка(2) = 1 Цикл			
			РВУ = глПолучитьРазрешенныйВидУпаковки(Запр.Продукция, Запр.ВидУпаковки);			
			Пока Запр.Группировка(3) = 1 Цикл // День
				Пока Запр.Группировка(4) = 1 Цикл //Документ
					ДобавитьСтрокуТАут(Запр.Продукция, КодТМЦ, КлючПоиска2 + "/" + Строка(Запр.НачалоПериода()), Запр.КвоСумма2, Запр.Документ);
					Если ПустоеЗначение(РВУ) = 0 Тогда
						Если РВУ.СчитатьВЗарплатуПоПеремещению.Получить(Запр.НачалоПериода()) = 0 Тогда
							ДобавитьСтрокуТАут(Запр.Продукция, КодТМЦ, КлючПоиска1 + "/" + Строка(Запр.НачалоПериода()), Запр.КвоСумма1, Запр.Документ);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;	
	
	Если СписПродДляПер.РазмерСписка() > 0 Тогда
		ТекстЗ = 
		"//{{ЗАПРОС(Перемещения)
		|Период с НДата по КДата;
		|ОбрабатыватьДокументы Проведенные;
		|Продукция = Документ.Перемещение.Стало;
		|Количество = Документ.Перемещение.Кво;
		|ВидУпаковки = Документ.Перемещение.ВидУпаковкиСтало;
		|Функция КвоСумма = Сумма(Количество);
		|Группировка Продукция без групп;
		|Группировка ВидУпаковки без групп;
		|Группировка День;
		|Группировка Документ;
		|Условие (Продукция в СписПродДляПер);
		|"//}}ЗАПРОС
		;			
		
		Запр = СоздатьОбъект("Запрос");
		Если Запр.Выполнить(ТекстЗ) = 0  Тогда
		    Возврат;
		КонецЕсли;
		
		Пока Запр.Группировка(1) = 1 Цикл
			КодТМЦ = Запр.Продукция.Код;
			Пока Запр.Группировка(2) = 1 Цикл
				РВУ = глПолучитьРазрешенныйВидУпаковки(Запр.Продукция, Запр.ВидУпаковки);
				Если ПустоеЗначение(РВУ) = 0 Тогда
					Пока Запр.Группировка(3) = 1 Цикл//День
						Пока Запр.Группировка(4) = 1 Цикл //Документ
							Если РВУ.СчитатьВЗарплатуПоПеремещению.Получить(Запр.НачалоПериода()) = 1 Тогда
								ДобавитьСтрокуТАут(Запр.Продукция, КодТМЦ, КлючПоиска1 + "/" + Строка(Запр.НачалоПериода()), Запр.КвоСумма, Запр.Документ);
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Состояние("База: выпущено");
	// **************************
	// Вариант 4 (БазаВР = Перечисление.ТипБазыВР.Выпущено)
	// период по заказам. Способ 1
	МинДата = НачДата;
	МаксДата = КонДата;
	// вначале отберём заказы за период и определим мин и макс. дату выпуска
	Док = СоздатьОбъект("Документ");
	Для Инд = 1 По СписЗаказов.РазмерСписка() Цикл
		Док.УстановитьФильтр(1,0);
		Док.ВыбратьПодчиненныеДокументы(,,СписЗаказов.ПолучитьЗначение(Инд));
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Вид() = "ВыпускПродукции" Тогда
			    МинДата = Мин(МинДата, Док.ДатаДок);
				МаксДата = Макс(МаксДата, Док.ДатаДок);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Запр = ПолучитьЗапросПоВыпуску(МинДата, МаксДата, СписЗаказов, 1);
	КлючПоиска = Строка(Перечисление.ТипБазыВР.Выпущено) + "/1";
	Пока Запр.Группировка(1) = 1 Цикл
		КодТМЦ = Запр.Продукция.Код;
		Пока Запр.Группировка(2) = 1 Цикл //Продукция
			Пока Запр.Группировка(3) = 1 Цикл //Документ
				ДобавитьСтрокуТАут(Запр.Продукция, КодТМЦ, КлючПоиска + "/" + Строка(Запр.ДатаЗ), Запр.КвоСумма, Запр.Документ);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;		
		
	Состояние("База: выпущено по зак.");
	// **************************
	// Вариант 4 (БазаВР = Перечисление.ТипБазыВР.Выпущено)
	// период по заказам. Способ 0
	Запр = ПолучитьЗапросПоВыпуску(НачДата, КонДата, СписЗаказов, 0);
	КлючПоиска = Строка(Перечисление.ТипБазыВР.Выпущено) + "/0";
	Пока Запр.Группировка(1) = 1 Цикл
		КодТМЦ = Запр.Продукция.Код;
		Пока Запр.Группировка(2) = 1 Цикл//Продукция
			Пока Запр.Группировка(3) = 1 Цикл //Документ
				ДобавитьСтрокуТАут(Запр.Продукция, КодТМЦ, КлючПоиска + "/" + Строка(Запр.НачалоПериода()), Запр.КвоСумма, Запр.Документ);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;		

	// **************************
	// Вариант 4 (БазаВР = Перечисление.ТипБазыВР.Списано) ИЛИ (БазаВР = Перечисление.ТипБазыВР.Обвалка)
	// период по заказам. Способ 1
	ТекстЗ = 
	"//{{ЗАПРОС(Списание)
	|Период с НДата по КДата;
	|Материал = Регистр.Партии.ТМЦ;
	|Количество = Регистр.Партии.ОстатокТовара;
	|КодОперации = Регистр.Партии.КодОперации;
	|Функция КвоПриход = Расход(Количество);
	|Группировка Материал без групп;
	|Группировка Документ;
	|Условие (Материал в спТовар);
	|Условие (КодОперации = СписаниеВПроизводство);
	|"//}}ЗАПРОС
	;			
	
	Запр = СоздатьОбъект("Запрос");
	Если Запр.Выполнить(ТекстЗ) = 0  Тогда
	    Возврат;
	КонецЕсли;
	КлючПоиска = Строка(Перечисление.ТипБазыВР.Списано) + "/0";
	КлючПоиска1 = Строка(Перечисление.ТипБазыВР.Обвалка) + "/0";
	Док = СоздатьОбъект("Документ");
	Пока Запр.Группировка(1) = 1 Цикл
		Пока Запр.Группировка(2) = 1 Цикл
			ДобавитьСтрокуТАут(Запр.Материал,Запр.Материал.Код, КлючПоиска + "/" + Строка(Запр.Документ.ДатаДок), Запр.КвоПриход, Запр.Документ);
			Док.ВыбратьПодчиненныеДокументы(,,Запр.Документ);
			Док.УстановитьФильтр(1,0);
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если Док.Вид() = "ПереработкаМяса" Тогда
					ДобавитьСтрокуТАут(Запр.Материал,Запр.Материал.Код, КлючПоиска1 + "/" + Строка(Запр.Документ.ДатаДок), Док.Итог("ВесФакт"),Запр.Документ);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
		
	Состояние("Печать");
	ВывестиТаблицу();
	Сообщить("end " + Строка(ТекущаяДата()) + " " + Строка(ТекущееВремя()));
КонецПроцедуры

Процедура ДобавитьВСписок(Элт, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	Если Элт.Вид() = "ТМЦ" Тогда
		ДобавитьвСписок(Элт, списТовар);
	ИначеЕсли Элт.Вид() = "ВидыРабот" Тогда
		ДобавитьвСписок(Элт, списВидР);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Дл = Метаданные.Справочник("ТМЦ").ДлинаНаименования;