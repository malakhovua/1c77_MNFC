Перем СписокПодбора,СправочникПодбора;
Перем Обновить; 
Перем Расшифровка; 
Перем Таб;

//======================================================================
Процедура Сформировать()
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "УМК_РеестрЗаказовПокупателей");

	Расшифровка.Установить("НачДата",  НачДата);
	Расшифровка.Установить("НачЧасов", НачЧасов);
	Расшифровка.Установить("КонДата",  КонДата);
	Расшифровка.Установить("КонЧасов", КонЧасов);
	Расшифровка.Установить("СписокКонтрагентов",СписокКонтрагентов);
	
	ТЗ_Заказы = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Заказы.НоваяКолонка("Заказ","Документ.УМК_ЗаказКлиента");
	ТЗ_Заказы.НоваяКолонка("Контрагент","Справочник.Контрагенты");
	ТЗ_Заказы.НоваяКолонка("ДатаДок","Дата");
	ТЗ_Заказы.НоваяКолонка("ВремяДок","Число",2,0);
	
	ТекстЗапроса = 
	"//{{ЗАПРОС(СпрТМЦ)
	|Период с НачДата по КонДата;
	|ОбрабатыватьДокументы Проведенные;
	|Контрагент = Документ.УМК_ЗаказКлиента.Контрагент;
	|Группировка Документ;
	|
	|Условие (Контрагент в  СписокКонтрагентов);
	|";
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл		
		ТЗ_Заказы.НоваяСтрока();
		ТЗ_Заказы.Заказ 		= Запрос.Документ.ТекущийДокумент();
		ТЗ_Заказы.Контрагент 	= Запрос.Документ.Контрагент;
		ТЗ_Заказы.ДатаДок 		= Запрос.Документ.ДатаДок;
		ТЗ_Заказы.ВремяДок 		= Запрос.Документ.ВремяЗаказа;	
	КонецЦикла;	
	
	Номер = 1;
	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Кнопки");	
	Таб.ВывестиСекцию("Шапка");
	ТЗ_Заказы.Сортировать("ДатаДок+,ВремяДок+,Контрагент+");
	ТЗ_Заказы.ВыбратьСтроки();
	Пока ТЗ_Заказы.ПолучитьСтроку() = 1 Цикл		
		Если (ТЗ_Заказы.ДатаДок = НачДата) И (ТЗ_Заказы.ВремяДок < НачЧасов) Тогда
			Продолжить;
		КонецЕсли;

		Если (ТЗ_Заказы.ДатаДок = КонДата) И (ТЗ_Заказы.ВремяДок > КонЧасов) Тогда
			Продолжить;
		КонецЕсли;

		ПечЗаказ 		= ТЗ_Заказы.Заказ.ТекущийДокумент();
		ПечДатаДок		= ТЗ_Заказы.Заказ.ДатаДок;
		ПечВремяДок		= ТЗ_Заказы.Заказ.ВремяЗаказа;
		ПечНомер		= ТЗ_Заказы.Заказ.НомерДок;	
		ПечКонтрагент	= ТЗ_Заказы.Заказ.Контрагент;
		ПечВес			= ТЗ_Заказы.Заказ.Итог("Кво") + ТЗ_Заказы.Заказ.Итог("КвоПересчет");
		ПечВодитель		= ТЗ_Заказы.Заказ.Водитель;
		ПечПримечание	= ТЗ_Заказы.Заказ.Примечание;
		ПечАвтомобиль	= ТЗ_Заказы.Заказ.Автомобиль;
		
		Таб.ВывестиСекцию("Строка");
		
		Номер = Номер + 1;
	КонецЦикла;	
	
	Таб.ПовторятьПриПечатиСтроки(2,2);
	Таб.ОбластьПечати(2);
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,2);
	Таб.Показать("Реестр заказов", "");
	
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
		
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()	
	Если глФлагРасшифровки = 1 Тогда 		
		Обновить 		= глОбновить;
		НачДата 		= глРасшифровка.Получить("НачДата");
		НачЧасов		= глРасшифровка.Получить("НачЧасов");
		КонДата 		= глРасшифровка.Получить("КонДата");
		КонЧасов		= глРасшифровка.Получить("КонЧасов");
		НеЗакрывать		= глРасшифровка.Получить("НеЗакрывать"); 
		глРасшифровка.Получить("СписокКонтрагентов").Выгрузить(СписокКонтрагентов); 
	
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;	
		
		Если НеЗакрывать = 1 Тогда
			Обновить = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриОткрытии

//======================================================================
Процедура ОбработкаПодбора(Значение) 	
	Перем ПредставлениеЗначения;
	
	Если (ВРег(Значение.Вид())=СправочникПодбора) И (СписокПодбора.НайтиЗначение(Значение)=0) Тогда
		ПредставлениеЗначения = Строка(Значение);
		Если СписокПодбора.НайтиЗначение(Значение) <> 1 Тогда
			СписокПодбора.ДобавитьЗначение(Значение,ПредставлениеЗначения);
		КонецЕсли;
		СписокПодбора.ТекущаяСтрока(СписокПодбора.РазмерСписка());
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
// Название: РаботаСоСписком
// Параметры:
// 	Режим - строка, принимающая 4 значения:
//		"Добавить"
//		"ДобавитьНесколько"
// 		"Удалить"
// 		"УдалитьВсе"
//	Список - список значений, в котором задается множественный фильтр
//	ТипСправочника - строка, содержащая идентификатор справочнника, по
//						которому осуществляется мноджественный фильтр
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//   кнопок работы с множественными фильтрами ("...",".....","X","XX")
// Наименование,.
// Описание:
// процедура предназначена для добавления и удаления элементов
// из множественных фильтров
Процедура РаботаСоСписком(Режим,Список,ТипСправочника)
	
	Перем ТекПоз;
	Перем ТекЭлемент;
	Перем Фрм;
                                     
	Если ТипСправочника = "Категории" Тогда
		ТипСправочника = "ВидыКатегорий";
	КонецЕсли;	
	
	ТекПоз = Список.ТекущаяСтрока();
	Если ТекПоз>0 Тогда
		ТекЭлемент=Список.ПолучитьЗначение(ТекПоз);
	КонецЕсли;

	Если Режим="Добавить" Тогда		// добавляем в список один элемент
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,0,ТекЭлемент);
		Фрм.ВыборГруппы(1);

	ИначеЕсли Режим="ДобавитьНесколько" Тогда  // добавляем в список несколько элементов
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,1,ТекЭлемент);
		Фрм.ВыборГруппы(1);

 	ИначеЕсли Режим="УдалитьВсе" Тогда	// удаляем все элементы из списка
		Список.УдалитьВсе();

	ИначеЕсли Режим="Удалить" Тогда	// удаляем из списка один элемент
		Если ТекПоз>0 Тогда
			Список.УдалитьЗначение(ТекПоз);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры		// работа со списком

