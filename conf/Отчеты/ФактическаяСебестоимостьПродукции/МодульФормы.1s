// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
                        
// переменные предназначены для механизма универсальных группировок отчета
Перем СписокГруппировок;
Перем КоличествоГруппировок;
Перем НомерГруппировкиПоТМЦ;

// переменные предназначены для запроса по периодам
Перем Запрос,ЗапросСПериодами,ТаблицаПериодов,Периодичность;
Перем Язык, УкрГруппировки;

Перем ВыпускПродукции, ВыпускПродукцииЗаПериод;

Перем ГруппировкиПоДвижениям;

// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
// ВыбратьПоФильтру()
//
// Параметры:
//  Нет
//
// Описание:
//  Открывает обработку отбора элементов по произвольному фильтру
//
Процедура ВыбратьПоФильтру()
	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру


// ===============================
// ПерерисовкаНазванийЗакладок
//
// Параметры:
// 	Нет
//
// Описание:
//  Добавляет "(!)" в заголовок закладки с множественным фильтром, когда этот фильтр задан
//
Функция ПерерисовкаНазванийЗакладок()      

	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");
	
КонецФункции // ПерерисовкаНазванийЗакладок	

// ===============================
// УправлениеДиалогом()
//
// Параметры: 
//	Нет
//
// Возвращаемое значение: 
//	Нет
//
// Описание: 
//	Управление доступностью элементов диалога.
//
Процедура УправлениеДиалогом()
	
	Если Форма.Закладки.ТекущаяСтрока() = 1 Тогда           
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
	Иначе     
		Форма.ИспользоватьСлой("Шапка,МФ,Подвал");
	КонецЕсли;
	
КонецПроцедуры //УправлениеДиалогом()   

// ===============================
// УстановитьГруппировкиЗапроса(ТекстЗапроса, ТекстЗагол)
//
// Параметры:  ТекстЗапроса - переданный по ссылке текст запроса
// 			   ТекстЗагол   - переданный по ссылке текст заголовка
//
// Возвращаемое значение: 
//	Нет
//
// Описание: 
//	Дополняет строку запроса и заголовка в соответствии с выбранными группировками.
//       
Процедура УстановитьГруппировкиЗапроса(ТекстЗапроса, ТекстЗагол)
	                       
	СписокГруппировок = СоздатьОбъект("СписокЗначений");
	НомерГруппировкиПоТМЦ = 9999;
	
	Для Сч=1 По Группировки.РазмерСписка() Цикл
		
		Если Группировки.Пометка(Сч)=1 Тогда
			ПредставлениеГрупп=""; УкрПредставлениеГрупп="";
			ТекстГрупп		= Группировки.ПолучитьЗначение(Сч,ПредставлениеГрупп);
			УкрГруппировки.ПолучитьЗначение(УкрГруппировки.НайтиЗначение(ТекстГрупп),УкрПредставлениеГрупп);
			
			ТекстБезУпорядочивания = "";
			ТекстБезГрупп = "";
			Если  ((ТекстГрупп = "Подразделение") Или (ТекстГрупп = "Продукция") Или (ТекстГрупп = "Материал") Или (ТекстГрупп = "ВидЗатрат"))
				И (фБезГрупп = 1) Тогда
					ТекстБезГрупп = " без групп";
			ИначеЕсли (ТекстГрупп = "Заказ") И (глОптимизацияОтчетов = 1) Тогда
				ТекстБезУпорядочивания = " без упорядочивания";
			КонецЕсли;
			ТекстЗапроса 	= ТекстЗапроса 	+ "Группировка "+ТекстГрупп+ТекстБезУпорядочивания+ТекстБезГрупп+";";
			ТекстЗагол	= ТекстЗагол + " / "+?(Язык="у",УкрПредставлениеГрупп,ПредставлениеГрупп);
			СписокГруппировок.ДобавитьЗначение(ТекстГрупп,ПредставлениеГрупп);
			Если  (ТекстГрупп = "Продукция") Тогда
			    НомерГруппировкиПоТМЦ = СписокГруппировок.РазмерСписка();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	Если ПустаяСтрока(ТекстЗагол)=0 Тогда // удаляем ведущий разделитель " / "
		ТекстЗагол = Сред(ТекстЗагол,4)
	КонецЕсли;
КонецПроцедуры // УстановитьГруппировкиЗапроса()

// ===============================
Функция ПериодСтрока()
	Зн = СписокПериодов.ПолучитьЗначение(СписокПериодов.ТекущаяСтрока());
    Если Зн = "Общий" Тогда
    	Возврат 0;
	Иначе
		Возврат Зн;
    КонецЕсли;
КонецФункции //

// ===============================
Функция ТипСуммСтрокой()  
	ТипСуммСтр = "";
    Если Язык = "у" Тогда
		Если фТипСуммНачОст = 1 Тогда
			ТипСуммСтр = ТипСуммСтр + "Залишок на початок (незавершене виробництво минулого місяця). ";
		КонецЕсли;    
		Если фТипСуммПриход = 1 Тогда
		    ТипСуммСтр = ТипСуммСтр + "Прихід (накопичені за період витрати). ";
		КонецЕсли;    	
		Если фТипСуммРасход = 1 Тогда
		    ТипСуммСтр = ТипСуммСтр + "Розхід (витрати, що включені в собівартість за період). ";
		КонецЕсли;    	
		Если фТипСуммКонОст = 1 Тогда
			ТипСуммСтр = ТипСуммСтр + "Залишок на кінець (залишок накопичених витрат, незавершене виробництво). ";
		КонецЕсли;      
	Иначе               
		Если фТипСуммНачОст = 1 Тогда
			ТипСуммСтр = ТипСуммСтр + "Остаток на начало (незавершенное производство прошлого месяца). ";
		КонецЕсли;    
		Если фТипСуммПриход = 1 Тогда
		    ТипСуммСтр = ТипСуммСтр + "Приход (накопленные за период затраты). ";
		КонецЕсли;    	
		Если фТипСуммРасход = 1 Тогда
		    ТипСуммСтр = ТипСуммСтр + "Расход (включенные в себестоимость за период затраты). ";
		КонецЕсли;    	
		Если фТипСуммКонОст = 1 Тогда
			ТипСуммСтр = ТипСуммСтр + "Остаток на конец (остаток накопленных затрат, незавершенное производство). ";
		КонецЕсли;      
	КонецЕсли;
	Возврат ТипСуммСтр;
КонецФункции //ТипСуммСтрокой

// ===============================
Процедура ПредопределенныеНастройки()
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("ПоПродукции", 			"Анализ по продукции");
	Меню.ДобавитьЗначение("ПоПродукцииСтатьям", 	"Анализ продукции по статьям калькуляции");
	Меню.ДобавитьЗначение("ПоПродукцииЗаказам", 	"Анализ продукции по заказам");
	Меню.ДобавитьЗначение("ПоПодразделениям", 		"Анализ по подразделениям");
	Меню.ДобавитьЗначение("ПоПодразделениямСтатьям","Анализ подразделений по статьям калькуляции");
	Меню.ДобавитьЗначение("ПоСтатьям", 				"Анализ по статьям калькуляции");
	Меню.ДобавитьЗначение("ПоВидамДеятельности", 	"Анализ по видам деятельности");
	Значение = "";
	Если Меню.ВыбратьЗначение(Значение, , , , 1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Группировки.УдалитьВсе();
	Если Значение = "ПоПродукции" Тогда
		Группировки.ДобавитьЗначение("Продукция", 		"Продукция");
		Группировки.ДобавитьЗначение("Фирма", 			"Фирма");
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");           
		Группировки.ДобавитьЗначение("Подразделение",	"Подразделение");
		Группировки.ДобавитьЗначение("Заказ", 			"Заказ");
		Группировки.ДобавитьЗначение("СтатьяКалькуляции","Статья калькуляции");
		Группировки.ДобавитьЗначение("Материал",		"Материал");
		Группировки.ДобавитьЗначение("ВидЗатрат",		"Вид затрат");
		Группировки.ДобавитьЗначение("Документ",		"Документ движения");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,0);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);
		Группировки.Пометка(6,0);
		Группировки.Пометка(7,0);
		Группировки.Пометка(8,0);
		Группировки.Пометка(9,0);
		
		фСебестоимостьЗаЕдиницу = 1;
		
	ИначеЕсли Значение = "ПоПродукцииСтатьям" Тогда
		Группировки.ДобавитьЗначение("Продукция", 		"Продукция");
		Группировки.ДобавитьЗначение("СтатьяКалькуляции","Статья калькуляции");
		Группировки.ДобавитьЗначение("Фирма", 			"Фирма");
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");           
		Группировки.ДобавитьЗначение("Подразделение",	"Подразделение");
		Группировки.ДобавитьЗначение("Заказ", 			"Заказ");
		Группировки.ДобавитьЗначение("Материал",		"Материал");
		Группировки.ДобавитьЗначение("ВидЗатрат",		"Вид затрат");
		Группировки.ДобавитьЗначение("Документ",		"Документ движения");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,1);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);
		Группировки.Пометка(6,0);
		Группировки.Пометка(7,0);
		Группировки.Пометка(8,0);
		Группировки.Пометка(9,0);
		
		фСебестоимостьЗаЕдиницу = 1;
		
	ИначеЕсли Значение = "ПоПродукцииЗаказам" Тогда
		Группировки.ДобавитьЗначение("Продукция", 		"Продукция");
		Группировки.ДобавитьЗначение("Заказ", 			"Заказ");
		Группировки.ДобавитьЗначение("Фирма", 			"Фирма");
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");           
		Группировки.ДобавитьЗначение("Подразделение",	"Подразделение");
		Группировки.ДобавитьЗначение("СтатьяКалькуляции","Статья калькуляции");
		Группировки.ДобавитьЗначение("Материал",		"Материал");
		Группировки.ДобавитьЗначение("ВидЗатрат",		"Вид затрат");
		Группировки.ДобавитьЗначение("Документ",		"Документ движения");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,1);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);
		Группировки.Пометка(6,0);
		Группировки.Пометка(7,0);
		Группировки.Пометка(8,0);
		Группировки.Пометка(9,0);
		
		фСебестоимостьЗаЕдиницу = 1;
		
	ИначеЕсли Значение = "ПоПодразделениям" Тогда
		Группировки.ДобавитьЗначение("Подразделение",	"Подразделение");
		Группировки.ДобавитьЗначение("Фирма", 			"Фирма");
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");           
		Группировки.ДобавитьЗначение("Продукция", 		"Продукция");
		Группировки.ДобавитьЗначение("Заказ", 			"Заказ");
		Группировки.ДобавитьЗначение("СтатьяКалькуляции","Статья калькуляции");
		Группировки.ДобавитьЗначение("Материал",		"Материал");
		Группировки.ДобавитьЗначение("ВидЗатрат",		"Вид затрат");
		Группировки.ДобавитьЗначение("Документ",		"Документ движения");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,0);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);
		Группировки.Пометка(6,0);
		Группировки.Пометка(7,0);
		Группировки.Пометка(8,0);
		Группировки.Пометка(9,0);
		
		фСебестоимостьЗаЕдиницу = 0;
		
	ИначеЕсли Значение = "ПоПодразделениямСтатьям" Тогда
		Группировки.ДобавитьЗначение("Подразделение",	"Подразделение");
		Группировки.ДобавитьЗначение("СтатьяКалькуляции","Статья калькуляции");
		Группировки.ДобавитьЗначение("Фирма", 			"Фирма");
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");           
		Группировки.ДобавитьЗначение("Продукция", 		"Продукция");
		Группировки.ДобавитьЗначение("Заказ", 			"Заказ");
		Группировки.ДобавитьЗначение("Материал",		"Материал");
		Группировки.ДобавитьЗначение("ВидЗатрат",		"Вид затрат");
		Группировки.ДобавитьЗначение("Документ",		"Документ движения");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,1);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);
		Группировки.Пометка(6,0);
		Группировки.Пометка(7,0);
		Группировки.Пометка(8,0);
		Группировки.Пометка(9,0);
		
		фСебестоимостьЗаЕдиницу = 0;
		
	ИначеЕсли Значение = "ПоСтатьям" Тогда
		Группировки.ДобавитьЗначение("СтатьяКалькуляции","Статья калькуляции");
		Группировки.ДобавитьЗначение("Фирма", 			"Фирма");
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");           
		Группировки.ДобавитьЗначение("Подразделение",	"Подразделение");
		Группировки.ДобавитьЗначение("Продукция", 		"Продукция");
		Группировки.ДобавитьЗначение("Заказ", 			"Заказ");
		Группировки.ДобавитьЗначение("Материал",		"Материал");
		Группировки.ДобавитьЗначение("ВидЗатрат",		"Вид затрат");
		Группировки.ДобавитьЗначение("Документ",		"Документ движения");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,0);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);
		Группировки.Пометка(6,0);
		Группировки.Пометка(7,0);
		Группировки.Пометка(8,0);
		Группировки.Пометка(9,0);
		
		фСебестоимостьЗаЕдиницу = 0;
		
	ИначеЕсли Значение = "ПоВидамДеятельности" Тогда
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");           
		Группировки.ДобавитьЗначение("Фирма", 			"Фирма");
		Группировки.ДобавитьЗначение("Подразделение",	"Подразделение");
		Группировки.ДобавитьЗначение("Продукция", 		"Продукция");
		Группировки.ДобавитьЗначение("Заказ", 			"Заказ");
		Группировки.ДобавитьЗначение("СтатьяКалькуляции","Статья калькуляции");
		Группировки.ДобавитьЗначение("Материал",		"Материал");
		Группировки.ДобавитьЗначение("ВидЗатрат",		"Вид затрат");
		Группировки.ДобавитьЗначение("Документ",		"Документ движения");
		
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,0);
		Группировки.Пометка(3,0);
		Группировки.Пометка(4,0);
		Группировки.Пометка(5,0);
		Группировки.Пометка(6,0);
		Группировки.Пометка(7,0);
		Группировки.Пометка(8,0);
		Группировки.Пометка(9,0);
		
		фСебестоимостьЗаЕдиницу = 0;
		
	КонецЕсли;
КонецПроцедуры // КнопкаНастройкиГруппировок

// ===============================
Процедура ПечатьСекции(НазвСекции,Сумма,Кво,фРамкаНиз=0,СуммаСтр = "")
Перем Секция;	
	ПечСумма = ?(СуммаСтр <> "",СуммаСтр,глФРМ(Сумма,Гривня,0));
	ПечКво  = Формат(Кво,"Ч15.3");
	Секция = Таб.ПолучитьСекцию(НазвСекции);
	Если фРамкаНиз = 1 Тогда
		Секция.Область("R2C1").Рамка(,,,3);
	КонецЕсли;
	Таб.ПрисоединитьСекцию(Секция);
КонецПроцедуры //ПечатьСекции

// ===============================
// ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка)
//
// Параметры:
//	Ном - Номер группировки запроса (Число)
//	НазваниеСекции - название секции, которую следует использовать (Строка)
//	ПечТекстСтроки - текстовое представление текущей строки
//	ТекРасшифровка - расшифровка текущей строки
//
// Возвращаемое значение:
//  1 - строку нужно выводить, 0 - не нужно
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Производит вывод в печатную форму одной строки запроса.
//                                                
// ===============================
Функция ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка = "",ЭтоГруппа=0,фСекция = 0,фРамкаНиз = 0)
Перем Секция;
	Если фСекция = 0 Тогда
		Наим = ПечТекстСтроки;
		Значение = ТекРасшифровка;
		Секция = Таб.ПолучитьСекцию(НазваниеСекции+"|Наименование");
		Область = Секция.Область("R1C1:R1C7");
		Область.Подчеркнутый(ЭтоГруппа);   
		Если фРамкаНиз = 1 Тогда
			Секция.Область("R2C1:R2C7").Рамка(,,,3);
		КонецЕсли;
		Таб.ВывестиСекцию(Секция);
	
		ПечСумма = "";ПечКво = "";
		Если фТипСуммНачОст = 1 Тогда
			ПечатьСекции(НазваниеСекции+"|НачОст",Запрос.НачОстСумма,Запрос.НачОстКво,фРамкаНиз);
		КонецЕсли;
		Если фТипСуммПриход = 1 Тогда
			ПечатьСекции(НазваниеСекции+"|Приход",Запрос.ПриходСумма,Запрос.ПриходКво,фРамкаНиз);
		КонецЕсли;
		Если фТипСуммРасход = 1 Тогда
			ПечатьСекции(НазваниеСекции+"|Расход",Запрос.РасходСумма,Запрос.РасходКво,фРамкаНиз);
		КонецЕсли;
		Если фСебестоимостьЗаЕдиницу = 1 Тогда
			Если ВыпускПродукции = 0 Тогда
				ПечЗаЕдиницу = "-";
			Иначе
				ПечЗаЕдиницу = глФРМ(Запрос.РасходСумма/ВыпускПродукции,Гривня,0);
			КонецЕсли;
			ПечатьСекции(НазваниеСекции+"|СебестоимостьЗаЕдиницу",0,ВыпускПродукции,фРамкаНиз,ПечЗаЕдиницу);
		КонецЕсли;
		Если фТипСуммКонОст = 1 Тогда
			ПечатьСекции(НазваниеСекции+"|КонОст",Запрос.КонОстСумма,Запрос.КонОстКво,фРамкаНиз);
		КонецЕсли;
	ИначеЕсли фСекция = 1 Тогда
		Таб.ВывестиСекцию(НазваниеСекции+"Д|Наименование");
		Если фТипСуммНачОст = 1 Тогда
			ПечДавСумма = глФРМ(Запрос.НачОстСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|НачОст");
		КонецЕсли;
		Если фТипСуммПриход = 1 Тогда
			ПечДавСумма = глФРМ(Запрос.ПриходСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|Приход");
		КонецЕсли;
		Если фТипСуммРасход = 1 Тогда
			ПечДавСумма = глФРМ(Запрос.РасходСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|Расход");
		КонецЕсли;
		Если фСебестоимостьЗаЕдиницу = 1 Тогда
			Если ВыпускПродукции = 0 Тогда
				ПечДавСумма = "-";
			Иначе
				ПечДавСумма = глФРМ(Запрос.РасходСуммаДав/ВыпускПродукции,Гривня,0);
			КонецЕсли;
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|СебестоимостьЗаЕдиницу");
		КонецЕсли;
		Если фТипСуммКонОст = 1 Тогда
			ПечДавСумма = глФРМ(Запрос.КонОстСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|КонОст");
		КонецЕсли;
		
	ИначеЕсли фСекция = 2 Тогда		//--- УМК Сандомирский В.Ю. (24.06.14) кутера
		Таб.ВывестиСекцию(НазваниеСекции+"К|Наименование");
		Если фТипСуммНачОст = 1 Тогда
			ПечКутер = глФРМ(Запрос.НачОстКутер,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"К|НачОст");
		КонецЕсли;
		Если фТипСуммПриход = 1 Тогда
			ПечКутер = глФРМ(Запрос.ПриходКутер,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"К|Приход");
		КонецЕсли;
		Если фТипСуммРасход = 1 Тогда
			ПечКутер = глФРМ(Запрос.РасходКутер,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"К|Расход");
		КонецЕсли;
		Если фСебестоимостьЗаЕдиницу = 1 Тогда
			//Если ВыпускПродукции = 0 Тогда
				ПечКутер = "-";
			//Иначе
			//	ПечДавСумма = глФРМ(Запрос.РасходСуммаДав/ВыпускПродукции,Гривня,0);
			//КонецЕсли;
			Таб.ПрисоединитьСекцию(НазваниеСекции+"К|СебестоимостьЗаЕдиницу");
		КонецЕсли;
		Если фТипСуммКонОст = 1 Тогда
			ПечКутер = глФРМ(Запрос.КонОстКутер,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"К|КонОст");
		КонецЕсли;	
		
	КонецЕсли; //... УМК Сандомирский В.Ю. (24.06.14) кутера
	
	
	Возврат 1
КонецФункции //ПечатьСтроки()

// ===============================
// ПечатьПериода(Ном,НазваниеСекции)
//
// Параметры:
//	Ном - Номер группировки запроса (Число)
//	НазваниеСекции - название секции, которую следует использовать (Строка)
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Производит присоединение к печатнуй форме одного периода.
//                                                
Процедура ПечатьПериода(Ном,НазваниеСекции,фСекция = 0,фРамкаНиз = 0)
Перем ПечНормаЗаЕдиницу, ПечФактЗаЕдиницу;
	Если фСекция = 0 Тогда
		ПечСумма = "";ПечКво = "";
		Если фТипСуммНачОст = 1 Тогда
			ПечатьСекции(НазваниеСекции+"|НачОст",ЗапросСПериодами.НачОстСумма,ЗапросСПериодами.НачОстКво,фРамкаНиз);
		КонецЕсли;
		Если фТипСуммПриход = 1 Тогда
			ПечатьСекции(НазваниеСекции+"|Приход",ЗапросСПериодами.ПриходСумма,ЗапросСПериодами.ПриходКво,фРамкаНиз);
		КонецЕсли;
		Если фТипСуммРасход = 1 Тогда
			ПечатьСекции(НазваниеСекции+"|Расход",ЗапросСПериодами.РасходСумма,ЗапросСПериодами.РасходКво,фРамкаНиз);
		КонецЕсли;
		Если фСебестоимостьЗаЕдиницу = 1 Тогда
			//ПечВыпуск = Формат(ВыпускПродукцииЗаПериод,"Ч10.3");
			Если ВыпускПродукцииЗаПериод = 0 Тогда
				ПечЗаЕдиницу = "-";
			Иначе
				ПечЗаЕдиницу = глФРМ(ЗапросСПериодами.РасходСумма/ВыпускПродукцииЗаПериод,Гривня,0);
			КонецЕсли;
			ПечатьСекции(НазваниеСекции+"|СебестоимостьЗаЕдиницу",0,ВыпускПродукцииЗаПериод,фРамкаНиз,ПечЗаЕдиницу);
		КонецЕсли;
		Если фТипСуммКонОст = 1 Тогда
			ПечатьСекции(НазваниеСекции+"|КонОст",ЗапросСПериодами.КонОстСумма,ЗапросСПериодами.КонОстКво,фРамкаНиз);
		КонецЕсли;
	ИначеЕсли фСекция = 1 Тогда
		Если фТипСуммНачОст = 1 Тогда
			ПечДавСумма = глФРМ(ЗапросСПериодами.НачОстСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|НачОст");
		КонецЕсли;
		Если фТипСуммПриход = 1 Тогда
			ПечДавСумма = глФРМ(ЗапросСПериодами.ПриходСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|Приход");
		КонецЕсли;
		Если фТипСуммРасход = 1 Тогда
			ПечДавСумма = глФРМ(ЗапросСПериодами.РасходСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|Расход");
		КонецЕсли;
		Если фСебестоимостьЗаЕдиницу = 1 Тогда
			Если ВыпускПродукцииЗаПериод = 0 Тогда
				ПечДавСумма = "-";
			Иначе
				ПечДавСумма = глФРМ(ЗапросСПериодами.РасходСуммаДав/ВыпускПродукцииЗаПериод,Гривня,0);
			КонецЕсли;
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|СебестоимостьЗаЕдиницу");
		КонецЕсли;
		Если фТипСуммКонОст = 1 Тогда
			ПечДавСумма = глФРМ(ЗапросСПериодами.КонОстСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|КонОст");
		КонецЕсли;
		
	ИначеЕсли фСекция = 2 Тогда
		Если фТипСуммНачОст = 1 Тогда
			ПечДавСумма = глФРМ(ЗапросСПериодами.НачОстСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"К|НачОст");
		КонецЕсли;
		Если фТипСуммПриход = 1 Тогда
			ПечДавСумма = глФРМ(ЗапросСПериодами.ПриходСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"К|Приход");
		КонецЕсли;
		Если фТипСуммРасход = 1 Тогда
			ПечДавСумма = глФРМ(ЗапросСПериодами.РасходСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"К|Расход");
		КонецЕсли;
		Если фСебестоимостьЗаЕдиницу = 1 Тогда
			Если ВыпускПродукцииЗаПериод = 0 Тогда
				ПечДавСумма = "-";
			Иначе
				ПечДавСумма = глФРМ(ЗапросСПериодами.РасходСуммаДав/ВыпускПродукцииЗаПериод,Гривня,0);
			КонецЕсли;
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|СебестоимостьЗаЕдиницу");
		КонецЕсли;
		Если фТипСуммКонОст = 1 Тогда
			ПечДавСумма = глФРМ(ЗапросСПериодами.КонОстСуммаДав,Гривня,0);
			Таб.ПрисоединитьСекцию(НазваниеСекции+"Д|КонОст");
		КонецЕсли;	
		
		
	КонецЕсли;
	
КонецПроцедуры //ПечатьПериода()

// ===============================
// ВывестиГруппировки(Ном)
//
// Параметры:
//	Ном - номер выводимой группировки
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Выводит в печатную форму одну группировку запроса. Если
//	Есть нижележащие группировки, они выводятся также с использованием рекурсивного
//	вызова этой же процедуры.
//
Процедура ВывестиГруппировки(Ном=1)
	Если Ном <= КоличествоГруппировок Тогда                           
		НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(Ном);
		Пока Запрос.Группировка(Ном) = 1 Цикл
			НазваниеСекции="Группировка"+Ном;   
			Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);
			
			Если (НазваниеГруппировки <> "Документ") и (НазваниеГруппировки <> "Заказ") Тогда
				ПечТекстСтроки = глСмещениеГруппы(Значение,фБезГрупп) + Значение;
			Иначе
				ПечТекстСтроки = ""+глДокументВОтчете(Значение,"с номером","с датой",Язык);
			КонецЕсли;
			
			ЗначениеРасшифровки = 0;
			Если ((фТипСуммПриход = 0) и (фТипСуммРасход = 0)) или (НазваниеГруппировки = "Документ") Тогда
			    // остатки расшифровать до движений нельзя
				ЗначениеРасшифровки = Значение;
			Иначе
				// расшифровываем до движений, отбираем только текущие значения
				Расшифровка.Установить("Выб"+НазваниеГруппировки, Значение);
				Расшифровка.Установить("Группировки", ГруппировкиПоДвижениям);
				ЗначениеРасшифровки = Расшифровка;
			КонецЕсли;
			ПечТекстСтроки = ?(ПустоеЗначение(ПечТекстСтроки)=1,глПредставлениеПустогоЗначения(НазваниеГруппировки,Язык),ПечТекстСтроки);
			
			Если фСебестоимостьЗаЕдиницу = 1 Тогда
				// сделаем так, чтобы количество выпущенной продукции было доступно и в нижних группировках
				// по которым разреза в ВыпускПродукции нет
				Если (НазваниеГруппировки = "ВидЗатрат") или  (НазваниеГруппировки = "СтатьяКалькуляции") или (НазваниеГруппировки = "Материал") или (НазваниеГруппировки = "Документ")  Тогда
				    // выпущенное кол-во определилось на вышестоящих группировках, переопределять не надо
				Иначе
					// в этом разрезе выпуск хранится
					ВыпускПродукции = Запрос.Выпуск;
				КонецЕсли;
			КонецЕсли;
			
			Если ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,ЗначениеРасшифровки,Запрос.ЭтоГруппа(НазваниеГруппировки)) = 1 Тогда
				Если (Периодичность <> 0) Тогда
					// выведем теперь все периоды, с разворотом вправо
					ТаблицаПериодов.ВыбратьСтроки();
					Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
						глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,Ном,ТаблицаПериодов.РеалНачалоПериода);
						
						Если фСебестоимостьЗаЕдиницу = 1 Тогда
							// сделаем так, чтобы количество выпущенной продукции было доступно и в нижних группировках
							// по которым разреза в ВыпускПродукции нет
							Если (НазваниеГруппировки = "ВидЗатрат") или  (НазваниеГруппировки = "СтатьяКалькуляции") или (НазваниеГруппировки = "Материал") или (НазваниеГруппировки = "Документ")  Тогда
							    // выпущенное кол-во определилось на вышестоящих группировках, переопределять не надо
							Иначе
								// в этом разрезе выпуск хранится
								ВыпускПродукцииЗаПериод = ЗапросСПериодами.Выпуск;
							КонецЕсли;
						КонецЕсли;
						ПечатьПериода(Ном,НазваниеСекции);
					КонецЦикла;
				КонецЕсли;
				
				глОживить(1);
			КонецЕсли;
			
			Если фВыделятьДавСоставляющую = 1 Тогда
				Если ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,ЗначениеРасшифровки,Запрос.ЭтоГруппа(НазваниеГруппировки),1) = 1 Тогда
					Если (Периодичность <> 0) Тогда
						// выведем теперь все периоды, с разворотом вправо
						ТаблицаПериодов.ВыбратьСтроки();
						Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
							глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,Ном,ТаблицаПериодов.РеалНачалоПериода);
							
							Если фСебестоимостьЗаЕдиницу = 1 Тогда
								// сделаем так, чтобы количество выпущенной продукции было доступно и в нижних группировках
								// по которым разреза в ВыпускПродукции нет
								Если (НазваниеГруппировки = "ВидЗатрат") или  (НазваниеГруппировки = "СтатьяКалькуляции") или (НазваниеГруппировки = "Материал") или (НазваниеГруппировки = "Документ")  Тогда
								    // выпущенное кол-во определилось на вышестоящих группировках, переопределять не надо
								Иначе
									// в этом разрезе выпуск хранится
									ВыпускПродукцииЗаПериод = ЗапросСПериодами.Выпуск;
								КонецЕсли;
							КонецЕсли;
							ПечатьПериода(Ном,НазваниеСекции,1);
						КонецЦикла;
					КонецЕсли;
					
					глОживить(1);
				КонецЕсли;
			КонецЕсли;
			
			
			Если фВыводитьКутера = 1 Тогда //--- УМК Сандомирский В.Ю. (24.06.14) кутера
				Если ПечатьСтроки(Ном,НазваниеСекции,ПечТекстСтроки,ЗначениеРасшифровки,Запрос.ЭтоГруппа(НазваниеГруппировки),2) = 1 Тогда
					Если (Периодичность <> 0) Тогда
						// выведем теперь все периоды, с разворотом вправо
						ТаблицаПериодов.ВыбратьСтроки();
						Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
							глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,Ном,ТаблицаПериодов.РеалНачалоПериода);
							
							Если фСебестоимостьЗаЕдиницу = 1 Тогда
								// сделаем так, чтобы количество выпущенной продукции было доступно и в нижних группировках
								// по которым разреза в ВыпускПродукции нет
								Если (НазваниеГруппировки = "ВидЗатрат") или  (НазваниеГруппировки = "СтатьяКалькуляции") или (НазваниеГруппировки = "Материал") или (НазваниеГруппировки = "Документ")  Тогда
								    // выпущенное кол-во определилось на вышестоящих группировках, переопределять не надо
								Иначе
									// в этом разрезе выпуск хранится
									ВыпускПродукцииЗаПериод = ЗапросСПериодами.Выпуск;
								КонецЕсли;
							КонецЕсли;
							ПечатьПериода(Ном,НазваниеСекции,1);
						КонецЦикла;
					КонецЕсли;
					
					глОживить(1);
				КонецЕсли;
			КонецЕсли; //... УМК Сандомирский В.Ю. (24.06.14) кутера

			// если есть более детальная группировка - выведем ее
			Если КоличествоГруппировок > Ном Тогда
				ВывестиГруппировки(Ном+1);
			КонецЕсли;
		КонецЦикла;
		// очищаем отборы по расшифровке до движений
		Если Не(((фТипСуммПриход = 0) и (фТипСуммРасход = 0)) или (НазваниеГруппировки = "Документ")) Тогда
			Расшифровка.Установить("Выб"+НазваниеГруппировки);
			Расшифровка.Установить("Группировки");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ВывестиГруппировки()

// ===============================
Процедура ВывестиШапкуПериода(НазваниеСекции,Период,фВывестиПериод)
	Если фТипСуммНачОст = 1 Тогда
		Секция = Таб.ПолучитьСекцию(НазваниеСекции+"|НачОст");
		Если фВывестиПериод = 1 Тогда
			фВывестиПериод = 0;
			Секция.Область("R1C1").Текст = Период;
			Секция.Область("R1C1").Рамка(3,,,);
		КонецЕсли;
		Таб.ПрисоединитьСекцию(Секция);
	КонецЕсли;
	Если фТипСуммПриход = 1 Тогда
		Секция = Таб.ПолучитьСекцию(НазваниеСекции+"|Приход");
		Если фВывестиПериод = 1 Тогда
			фВывестиПериод = 0;
			Секция.Область("R1C1").Текст = Период;
			Секция.Область("R1C1").Рамка(3,,,);
		КонецЕсли;
		Таб.ПрисоединитьСекцию(Секция);
	КонецЕсли;
	Если фТипСуммРасход = 1 Тогда
		Секция = Таб.ПолучитьСекцию(НазваниеСекции+"|Расход");
		Если фВывестиПериод = 1 Тогда
			фВывестиПериод = 0;
			Секция.Область("R1C1").Текст = Период;
			Секция.Область("R1C1").Рамка(3,,,);
		КонецЕсли;
		Таб.ПрисоединитьСекцию(Секция);
	КонецЕсли;
	Если фСебестоимостьЗаЕдиницу = 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|СебестоимостьЗаЕдиницу");
	КонецЕсли;
	Если фТипСуммКонОст = 1 Тогда
		Секция = Таб.ПолучитьСекцию(НазваниеСекции+"|КонОст");
		Если фВывестиПериод = 1 Тогда
			фВывестиПериод = 0;
			Секция.Область("R1C1").Текст = Период;
			Секция.Область("R1C1").Рамка(3,,,);
		КонецЕсли;
		Таб.ПрисоединитьСекцию(Секция);
	КонецЕсли;
КонецПроцедуры

// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

//============================
Процедура ИзмПериод(Знач Пер, Знач Мес)
	Если Пер = 1 Тогда
		Дата1 = НачМесяца(Мин(ДобавитьМесяц(Дата1,Мес),Дата2));
	Иначе
		Дата2 = КонМесяца(Макс(ДобавитьМесяц(Дата2,Мес),Дата1));
	КонецЕсли;
КонецПроцедуры

// ===============================
Функция УстДоступность()
	фДат = ?(Дата2=КонМесяца(Дата1),0,1);
	
	Если НазваниеНабораПрав() <> "СнабжениеТабель" Тогда	// --- УМК Сандомирский В.Ю. (15.06.15)	
	
		Форма.кПериодМес2.Доступность(фДат);
		Форма.кПериодГод2.Доступность(фДат);
		Форма.кПериодМес3.Доступность(фДат);
		Форма.кПериодГод3.Доступность(фДат);
		ПериодС = ПериодСтр(Дата1,КонМесяца(Дата1));
		ПериодПо = ПериодСтр(НачМесяца(Дата2),Дата2);
		Форма.кХФирма.Доступность(1-ПустоеЗначение(ВыбФирма));
		Форма.кХВидДеятельности.Доступность(1-ПустоеЗначение(ВыбВидДеятельности));
		Форма.кХПодразделение.Доступность(1-ПустоеЗначение(ВыбПодразделение));
		Форма.кХПродукция.Доступность(1-ПустоеЗначение(ВыбПродукция));
		Форма.кХЗаказ.Доступность(1-ПустоеЗначение(ВыбЗаказ));
		Форма.кХСтатьяКалькуляции.Доступность(1-ПустоеЗначение(ВыбСтатьяКалькуляции));
		Форма.кХМатериал.Доступность(1-ПустоеЗначение(ВыбМатериал));
		Форма.кХВидЗатрат.Доступность(1-ПустоеЗначение(ВыбВидЗатрат));
	
	КонецЕсли;
	
	Если фТипСуммРасход = 1 Тогда
	    // только расход по регистру соответствует выпущенной продукции
		Форма.фСебестоимостьЗаЕдиницу.Доступность(1);
	Иначе
		Форма.фСебестоимостьЗаЕдиницу.Доступность(0);
		фСебестоимостьЗаЕдиницу = 0;
	КонецЕсли;
	
	Если НазваниеНабораПрав() = "СнабжениеТабель" Тогда	// --- УМК Сандомирский В.Ю. (15.06.15)	
		Форма.фСебестоимостьЗаЕдиницу.Доступность(0);
	КонецЕсли;
	
КонецФункции //УстДоступность

// ===============================
Процедура УстКолонкиОтчета()

	ЭлементДиалога = Форма.АктивныйЭлемент();
	
	Если фТипСуммНачОст + фТипСуммПриход + фТипСуммРасход + фТипСуммКонОст = 0 Тогда // хотя бы одна должна быть выбрана
		Если ЭлементДиалога = "фТипСуммНачОст" Тогда
			фТипСуммНачОст = 1;
		ИначеЕсли ЭлементДиалога = "фТипСуммПриход" Тогда
			фТипСуммПриход = 1;
		ИначеЕсли ЭлементДиалога = "фТипСуммРасход" Тогда
			фТипСуммРасход = 1;
		ИначеЕсли ЭлементДиалога = "фТипСуммКонОст" Тогда
			фТипСуммКонОст = 1;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// ===============================
// Сформировать(ЗакрытьДиалог=0)
//
// Параметры:
//   ЗакрытьДиалог - флаг того, что после формирования отчета надо закрыть диалог	
//
// Возвращаемое значение: 
//	Нет
// 
// Вызывается из формул элементов диалога:
//   кнопки "Сформировать" и "ОК"
//
// Описание:   
//	Запускает отчет.
//
Процедура Сформировать(ЗакрытьДиалог=0)
	
	Перем ТекстЗапроса;
	
	глПроверкаДаты(Дата1,Дата2);
	
	ПечФорма = "Таблица" + ?(фТолькоКво = 1,"К","");
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;
	Таб.ИсходнаяТаблица(ПечФорма);
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "ФактическаяСебестоимостьПродукции");
	
	// все настройки помещаем в список
	Расшифровка.Установить("Дата1", 		Дата1);
    Расшифровка.Установить("Дата2", 		Дата2);
	Расшифровка.Установить("ВыбФирма",		ВыбФирма);
	
	Расшифровка.Установить("ВыбВидДеятельности",	ВыбВидДеятельности);
	Расшифровка.Установить("ВыбПодразделение",		ВыбПодразделение);
	Расшифровка.Установить("ВыбПродукция",			ВыбПродукция);
	Расшифровка.Установить("ВыбЗаказ",				ВыбЗаказ);
	Расшифровка.Установить("ВыбСтатьяКалькуляции",	ВыбСтатьяКалькуляции);
	Расшифровка.Установить("ВыбМатериал",			ВыбМатериал);
	Расшифровка.Установить("ВыбВидЗатрат",			ВыбВидЗатрат);
	Расшифровка.Установить("Группировки",	Группировки);
	Расшифровка.Установить("фБезГрупп",		фБезГрупп);
	Расшифровка.Установить("фТолькоКво",	фТолькоКво);
	Расшифровка.Установить("фСебестоимостьЗаЕдиницу",фСебестоимостьЗаЕдиницу);
	Расшифровка.Установить("фВыделятьДавСоставляющую",фВыделятьДавСоставляющую);
	
	Расшифровка.Установить("фВыводитьКутера",фВыводитьКутера); //--- УМК Сандомирский В.Ю. (24.06.14) кутера
	
	Расшифровка.Установить("фТипСуммНачОст",фТипСуммНачОст);
	Расшифровка.Установить("фТипСуммПриход",фТипСуммПриход);
	Расшифровка.Установить("фТипСуммРасход",фТипСуммРасход);
	Расшифровка.Установить("фТипСуммКонОст",фТипСуммКонОст);
	Расшифровка.Установить("СписокПериодов",СписокПериодов.ТекущаяСтрока());
	
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были

	// запомним МФ только если он задан
    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
	КонецЕсли;
	
	ПечТипСумм = ТипСуммСтрокой();
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ЗапросСПериодами = СоздатьОбъект("Запрос");
	               
	Если Дата2 >= ПолучитьДатуТА() Тогда
		ТекстЗапроса = "
			|Период с Дата1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Дата1 по Дата2;";
	КонецЕсли;
	
	Если фСебестоимостьЗаЕдиницу = 1 Тогда
	    // запрос с учетом количества выпущенной продукции (по двум регистрам)
		ТекстЗапроса = ТекстЗапроса + "
		|Фирма 			= Регистр.ПроизводственныеЗатраты.Фирма,Регистр.ВыпускПродукции.Фирма;
		|ВидДеятельности= Регистр.ПроизводственныеЗатраты.ВидДеятельности,Регистр.ВыпускПродукции.ВидДеятельности;
		|Подразделение	= Регистр.ПроизводственныеЗатраты.Подразделение,Регистр.ВыпускПродукции.Подразделение;
		|Продукция		= Регистр.ПроизводственныеЗатраты.Продукция,Регистр.ВыпускПродукции.Продукция;
		|Заказ			= Регистр.ПроизводственныеЗатраты.Заказ,Регистр.ВыпускПродукции.Заказ;
		|Материал 		= Регистр.ПроизводственныеЗатраты.Материал;
		|СтатьяКалькуляции = Регистр.ПроизводственныеЗатраты.ВидЗатрат.СтатьяКалькуляции;
		|ВидЗатрат 		= Регистр.ПроизводственныеЗатраты.ВидЗатрат;
		|_Сумма			= Регистр.ПроизводственныеЗатраты.Сумма;
		|_Кво			= Регистр.ПроизводственныеЗатраты.Количество;";
		
		Если фВыделятьДавСоставляющую = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|_СуммаДав		= Регистр.ПроизводственныеЗатраты.СуммаДав;";
		КонецЕсли;
		
		Если фВыводитьКутера = 1 Тогда  //--- УМК Сандомирский В.Ю. (24.06.14) кутера
 			ТекстЗапроса = ТекстЗапроса + "
			|_Кутер		= Регистр.ПроизводственныеЗатраты.Кутер;";
		КонецЕсли; //--- УМК Сандомирский В.Ю. (24.06.14) кутера
			
	    ТекстЗапроса = ТекстЗапроса + "
		|_Выпуск		= Регистр.ВыпускПродукции.Количество;";
		
		Если фТипСуммНачОст = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция НачОстСумма = НачОст(_Сумма);";      
		КонецЕсли;
		Если фТипСуммПриход = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция ПриходСумма = Приход(_Сумма);";      
		КонецЕсли;
	    Если фТипСуммРасход = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция РасходСумма = Расход(_Сумма);";      
		КонецЕсли;
		Если фТипСуммКонОст = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция КонОстСумма = КонОст(_Сумма);";      
		КонецЕсли;
		
		Если фВыделятьДавСоставляющую = 1 Тогда
			
			Если фТипСуммНачОст = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция НачОстСуммаДав = НачОст(_СуммаДав);";      
			КонецЕсли;
								
			Если фТипСуммПриход = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция ПриходСуммаДав = Приход(_СуммаДав);";      
			КонецЕсли;
			Если фТипСуммРасход = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция РасходСуммаДав = Расход(_СуммаДав);";      
			КонецЕсли;
			Если фТипСуммКонОст = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция КонОстСуммаДав = КонОст(_СуммаДав);";      
			КонецЕсли;
			
		КонецЕсли;
			
		Если фВыводитьКутера= 1 Тогда //--- УМК Сандомирский В.Ю. (24.06.14) кутера
			
			Если фТипСуммНачОст = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция НачОстКутер = НачОст(_Кутер);";      
			КонецЕсли;					
			Если фТипСуммПриход = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция ПриходКутер = Приход(_Кутер);";      
			КонецЕсли;
			Если фТипСуммРасход = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция РасходКутер = Расход(_Кутер);";      
			КонецЕсли;
			Если фТипСуммКонОст = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция КонОстКутер = КонОст(_Кутер);";      
			КонецЕсли;
		КонецЕсли;			//... УМК Сандомирский В.Ю. (24.06.14) кутера
		
	    // количество
		Если фТипСуммНачОст = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция НачОстКво = НачОст(_Кво);";
		КонецЕсли;
		Если фТипСуммПриход = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция ПриходКво = Приход(_Кво);";      
		КонецЕсли;
	    Если фТипСуммРасход = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция РасходКво = Расход(_Кво);";      
		КонецЕсли;
		Если фТипСуммКонОст = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция КонОстКво = КонОст(_Кво);";      
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|Функция Выпуск		= Сумма(_Выпуск);
		|";
	Иначе
		// без учета количества выпущенной
		ТекстЗапроса = ТекстЗапроса + "
		|Фирма 			= Регистр.ПроизводственныеЗатраты.Фирма;
		|ВидДеятельности= Регистр.ПроизводственныеЗатраты.ВидДеятельности;
		|Подразделение	= Регистр.ПроизводственныеЗатраты.Подразделение;
		|Продукция		= Регистр.ПроизводственныеЗатраты.Продукция;
		|Заказ			= Регистр.ПроизводственныеЗатраты.Заказ;
		|Материал 		= Регистр.ПроизводственныеЗатраты.Материал;
		|СтатьяКалькуляции = Регистр.ПроизводственныеЗатраты.ВидЗатрат.СтатьяКалькуляции;
		|ВидЗатрат 		= Регистр.ПроизводственныеЗатраты.ВидЗатрат;
		|_Сумма			= Регистр.ПроизводственныеЗатраты.Сумма;
		|_Кво			= Регистр.ПроизводственныеЗатраты.Количество;";
		
		Если фВыделятьДавСоставляющую = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|_СуммаДав		= Регистр.ПроизводственныеЗатраты.СуммаДав;";
		КонецЕсли;
		
		Если фВыводитьКутера = 1 Тогда //--- УМК Сандомирский В.Ю. (24.06.14) кутера
		    ТекстЗапроса = ТекстЗапроса + "
			|_Кутер		= Регистр.ПроизводственныеЗатраты.Кутер;";
		КонецЕсли; //... УМК Сандомирский В.Ю. (24.06.14) кутера
		
	    ТекстЗапроса = ТекстЗапроса + "
		|_Выпуск		= Регистр.ВыпускПродукции.Количество;";
				
		Если фТипСуммНачОст = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция НачОстСумма = НачОст(_Сумма);";      
		КонецЕсли;
		Если фТипСуммПриход = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция ПриходСумма = Приход(_Сумма);";      
		КонецЕсли;
	    Если фТипСуммРасход = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция РасходСумма = Расход(_Сумма);";      
		КонецЕсли;
		Если фТипСуммКонОст = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция КонОстСумма = КонОст(_Сумма);";      
		КонецЕсли;
		
		Если фВыделятьДавСоставляющую = 1 Тогда
			Если фТипСуммНачОст = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция НачОстСуммаДав = НачОст(_СуммаДав);";      
			КонецЕсли;
			Если фТипСуммПриход = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция ПриходСуммаДав = Приход(_СуммаДав);";      
			КонецЕсли;
			Если фТипСуммРасход = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция РасходСуммаДав = Расход(_СуммаДав);";      
			КонецЕсли;
			Если фТипСуммКонОст = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция КонОстСуммаДав = КонОст(_СуммаДав);";      
			КонецЕсли;
		КонецЕсли;
		
		Если фВыводитьКутера = 1 Тогда				//--- УМК Сандомирский В.Ю. (24.06.14) кутера
			Если фТипСуммНачОст = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция НачОстКутер = НачОст(_Кутер);";      
			КонецЕсли;
			Если фТипСуммПриход = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция ПриходКутер = Приход(_Кутер);";      
			КонецЕсли;
			Если фТипСуммРасход = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция РасходКутер = Расход(_Кутер);";      
			КонецЕсли;
			Если фТипСуммКонОст = 1 Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|Функция КонОстКутер = КонОст(_Кутер);";      
			КонецЕсли;	
		КонецЕсли;									//... УМК Сандомирский В.Ю. (24.06.14) кутера
		
		// количество
		Если фТипСуммНачОст = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция НачОстКво  	 = НачОст(_Кво);";
		КонецЕсли;
		Если фТипСуммПриход = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция ПриходКво = Приход(_Кво);";      
		КонецЕсли;
	    Если фТипСуммРасход = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция РасходКво = Расход(_Кво);";      
		КонецЕсли;
		Если фТипСуммКонОст = 1 Тогда
		    ТекстЗапроса = ТекстЗапроса + "
			|Функция КонОстКво = КонОст(_Кво);";      
		КонецЕсли;
		
	    ТекстЗапроса = ТекстЗапроса + "
		|";
	КонецЕсли;
	
	Загол="";
	
	НетОш = 1; // нет ошибок при наложении фильтров
	
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма",				ВыбФирма,				"ВыбФирма",				ТекстЗапроса,Загол,Язык);
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ВидДеятельности",	ВыбВидДеятельности,		"ВыбВидДеятельности",	ТекстЗапроса,Загол,Язык);
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Подразделение",		ВыбПодразделение,		"ВыбПодразделение",		ТекстЗапроса,Загол,Язык);
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Продукция",			ВыбПродукция,			"ВыбПродукция",			ТекстЗапроса,Загол,Язык,"КатегорииТоваров");
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Заказ",				ВыбЗаказ,				"ВыбЗаказ",				ТекстЗапроса,Загол,Язык);
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ,"СтатьяКалькуляции",	ВыбСтатьяКалькуляции,	"ВыбСтатьяКалькуляции",	ТекстЗапроса,Загол,Язык);
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Материал",			ВыбМатериал,			"ВыбМатериал",			ТекстЗапроса,Загол,Язык,"КатегорииТоваров");
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ,"ВидЗатрат",			ВыбВидЗатрат,			"ВыбВидЗатрат",			ТекстЗапроса,Загол,Язык);
	Если глГруппыДоступаПродукции.РазмерСписка() > 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (Продукция В глГруппыДоступаПродукции);";
	КонецЕсли;	
	
	Если НетОш = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Периодичность = ПериодСтрока();
	ТаблицаПериодов = СоздатьОбъект("ТаблицаЗначений");
	Если Периодичность<>0 Тогда
	    ТекстЗапросаПоПериодам = ТекстЗапроса+ "Группировка " + Периодичность + ";";
	КонецЕсли;

	ПечЗаголовокСтолбца = "";
	ТекстГруппировок = "";
	
	УстановитьГруппировкиЗапроса(ТекстГруппировок, ПечЗаголовокСтолбца);
	КоличествоГруппировок = СписокГруппировок.РазмерСписка();
	
	Если КоличествоГруппировок > 7 Тогда
		Предупреждение("Нельзя сделать больше 7 группировок!",60);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ТекстГруппировок;
	Если Периодичность<>0 Тогда
 		ТекстЗапросаПоПериодам = ТекстЗапросаПоПериодам + ТекстГруппировок;		
		Если ЗапросСПериодами.Выполнить(ТекстЗапросаПоПериодам)=0 тогда
			Предупреждение("Запрос по периодам не выполнился!!!");
			Возврат;
		КонецЕсли;
 		глПолучитьТаблицуПериодов(ТаблицаПериодов,ЗапросСПериодами,Периодичность);
		ЗапросСПериодами.ВНачалоВыборки();
	КонецЕсли;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;  
	
	глЧислоСтрок = 0;

	Таб.ВывестиСекцию("Кнопки|Наименование");
	Таб.ВывестиСекцию("Заголовок|Наименование");
	Таб.ВывестиСекцию("Шапка|Наименование");	
	
	Расшифровка.Установить("Обновить",0);
	Расшифровка.Установить("ТаблицаМФ", 0);
	
	// выводим шапку для итогов по периодам
	ВывестиШапкуПериода("Шапка",?(Язык="у", "Всього за період", "Всего за период"),1);
	
	Если Периодичность<>0 Тогда
		// выводим шапку для каждого периода
	    ТаблицаПериодов.ВыбратьСтроки();
		Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл
			ВывестиШапкуПериода("Шапка",ПериодСтр(ТаблицаПериодов.НачалоПериода,ТаблицаПериодов.КонецПериода),1);
		КонецЦикла;
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка|Рамка");
	
	Если фВыделятьДавСоставляющую = 1 Тогда
		Таб.ВывестиСекцию("ШапкаД|Наименование");                               
		ВывестиШапкуПериода("ШапкаД",?(Язык="у", "Всього за період", "Всего за период"),0);
		
		Если Периодичность<>0 Тогда
			// выводим шапку для каждого периода
			ТаблицаПериодов.ВыбратьСтроки();
			Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл
				ВывестиШапкуПериода("ШапкаД",ПериодСтр(ТаблицаПериодов.НачалоПериода,ТаблицаПериодов.КонецПериода),0);
			КонецЦикла;
		КонецЕсли;
		Таб.ПрисоединитьСекцию("ШапкаД|Рамка");
	КонецЕсли;
	
	Если фВыводитьКутера = 1 Тогда 	//--- УМК Сандомирский В.Ю. (24.06.14) кутера
		Таб.ВывестиСекцию("ШапкаК|Наименование");                               
		ВывестиШапкуПериода("ШапкаК",?(Язык="у", "Всього за період", "Всего за период"),0);
		
		Если Периодичность<>0 Тогда
			// выводим шапку для каждого периода
			ТаблицаПериодов.ВыбратьСтроки();
			Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл
				ВывестиШапкуПериода("ШапкаК",ПериодСтр(ТаблицаПериодов.НачалоПериода,ТаблицаПериодов.КонецПериода),0);
			КонецЦикла;
		КонецЕсли;
		Таб.ПрисоединитьСекцию("ШапкаК|Рамка");
	КонецЕсли; 									//... УМК Сандомирский В.Ю. (24.06.14) кутера	
	
	глОживить(1);
	
	//--- УМК Сандомирский В.Ю. (24.06.14) кутера
	ВысотаШапкиД = 0;
	Если фВыделятьДавСоставляющую = 1 Тогда
		ВысотаШапкиД = Таб.ВысотаСекции("ШапкаД");	
	КонецЕсли;
	
	ВысотаШапкиК = 0; 
	Если фВыводитьКутера = 1 Тогда
		ВысотаШапкиК = Таб.ВысотаСекции("ШапкаК");	
	КонецЕсли;
	//... УМК Сандомирский В.Ю. (24.06.14) кутера
	
	Таб.Опции(0, 0, Таб.ВысотаСекции("Шапка")+ ВысотаШапкиД + ВысотаШапкиК +Таб.ВысотаСекции("Кнопки")+Таб.ВысотаСекции("Заголовок"), Таб.ШиринаСекции("Наименование"), "ФактическаяСебестоимостьПродукции", "ФактическаяСебестоимостьПродукции"); //--- УМК Сандомирский В.Ю. (24.06.14) кутера
	Таб.Область(5,1,5,Таб.ШиринаТаблицы()).ГоризонтальноеПоложение(1+4);
	Таб.Область(6,1,6,Таб.ШиринаТаблицы()).ГоризонтальноеПоложение(1+4);
	                         
	ВыпускПродукции = 0;
	ВыпускПродукцииЗаПериод = 0;
	
	// ВЫВОД ГРУППИРОВОК ЗАПРОСА
	ВывестиГруппировки();
		
	Если фСебестоимостьЗаЕдиницу = 1 Тогда
		ВыпускПродукции = Запрос.Выпуск;
	КонецЕсли;
	//если фВыделятьДавСоставляющую = 0 то необходимо вывести рамку снизу т.к. секция "ИтогоД" - не выводится
	ПечатьСтроки(0,"Итого",?(Язык="у", "Всього:", "Всего:"),,,0,1-фВыделятьДавСоставляющую);
	Если (Периодичность <> 0) Тогда
		// выведем теперь все периоды, с разворотом вправо
		ТаблицаПериодов.ВыбратьСтроки();
		Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
			глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,0,ТаблицаПериодов.РеалНачалоПериода);
			Если фСебестоимостьЗаЕдиницу = 1 Тогда
				ВыпускПродукцииЗаПериод = ЗапросСПериодами.Выпуск;
			КонецЕсли;
			ПечатьПериода(0,"Итого",0,1-фВыделятьДавСоставляющую);
		КонецЦикла;
	КонецЕсли;
	
	Если фВыделятьДавСоставляющую = 1 Тогда
		ПечатьСтроки(0,"Итого",?(Язык="у", "Всього:", "Всего:"),,,1,0);
		Если (Периодичность <> 0) Тогда
			// выведем теперь все периоды, с разворотом вправо
			ТаблицаПериодов.ВыбратьСтроки();
			Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
				глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,0,ТаблицаПериодов.РеалНачалоПериода);
				Если фСебестоимостьЗаЕдиницу = 1 Тогда
					ВыпускПродукцииЗаПериод = ЗапросСПериодами.Выпуск;
				КонецЕсли;
				ПечатьПериода(0,"Итого",1,0);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если фВыводитьКутера = 1 Тогда		//--- УМК Сандомирский В.Ю. (24.06.14) кутера
		ПечатьСтроки(0,"Итого",?(Язык="у", "Всього:", "Всего:"),,,2,0);
		Если (Периодичность <> 0) Тогда
			// выведем теперь все периоды, с разворотом вправо
			ТаблицаПериодов.ВыбратьСтроки();
			Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
				глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,0,ТаблицаПериодов.РеалНачалоПериода);
				Если фСебестоимостьЗаЕдиницу = 1 Тогда
					ВыпускПродукцииЗаПериод = ЗапросСПериодами.Выпуск;
				КонецЕсли;
				ПечатьПериода(0,"Итого",1,0);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;							//... УМК Сандомирский В.Ю. (24.06.14) кутера
    
	Таб.ОбластьПечати(2);
	
	// Вывод заполненной формы
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);

	Таб.Показать("Фактическая себестоимость продукции", ""); 
	
	Если (Обновить = 2)ИЛИ(ЗакрытьДиалог=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;                
	глУстПропись(Гривня,"Р");
КонецПроцедуры // Сформировать()


// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриОткрытии(ФлагВосстановленияНастройки)	
	Если ФлагВосстановленияНастройки = 0 Тогда     
		фБезГрупп 	   = 0;
		Дата1      = глВосстановитьЗначение(,"ОсновнаяДатаНачалаОтчета");
		Если ПустоеЗначение(Дата1) = 1 Тогда
			Дата1      = НачМесяца(Дата2);
		КонецЕсли;
	КонецЕсли;
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		Дата1 		= глРасшифровка.Получить("Дата1");
		Дата2		= глРасшифровка.Получить("Дата2");
		ВыбФирма	= глРасшифровка.Получить("ВыбФирма");
		ТипСумм		= глРасшифровка.Получить("ТипСумм");
		
		ВыбВидДеятельности = глРасшифровка.Получить("ВыбВидДеятельности");
		ВыбПодразделение = глРасшифровка.Получить("ВыбПодразделение");
		ВыбПродукция = глРасшифровка.Получить("ВыбПродукция");
		ВыбЗаказ = глРасшифровка.Получить("ВыбЗаказ");
		ВыбСтатьяКалькуляции = глРасшифровка.Получить("ВыбСтатьяКалькуляции");
		ВыбМатериал = глРасшифровка.Получить("ВыбМатериал");
		ВыбВидЗатрат = глРасшифровка.Получить("ВыбВидЗатрат");
		
		фСебестоимостьЗаЕдиницу	= глРасшифровка.Получить("фСебестоимостьЗаЕдиницу");
		фВыделятьДавСоставляющую	= глРасшифровка.Получить("фВыделятьДавСоставляющую");
		
		фВыводитьКутера 			= глРасшифровка.Получить("фВыводитьКутера"); //--- УМК Сандомирский В.Ю. (24.06.14) кутера
		
		фТипСуммНачОст = глРасшифровка.Получить("фТипСуммНачОст");
		фТипСуммПриход = глРасшифровка.Получить("фТипСуммПриход");
		фТипСуммРасход = глРасшифровка.Получить("фТипСуммРасход");
		фТипСуммКонОст = глРасшифровка.Получить("фТипСуммКонОст");
		фТолькоКво	   = глРасшифровка.Получить("фТолькоКво");
	    		
		глРасшифровка.Получить("Группировки").Выгрузить(Группировки);
		
		фБезГрупп		= глРасшифровка.Получить("фБезГрупп");
		
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;
		
		СписокПериодов.ТекущаяСтрока(глРасшифровка.Получить("СписокПериодов"));
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;            
	
	ПерерисовкаНазванийЗакладок();

	ТаблицаМФ.ВидимостьКолонки("Тип",0);
	ТаблицаМФ.ВидимостьКолонки("Вид",0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",0);
	
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");

	УправлениеДиалогом();

	Если НазваниеНабораПрав() = "СнабжениеТабель" Тогда	// --- УМК Сандомирский В.Ю. (15.06.15)		
		ФормаРасш = СоздатьОбъект("РасширениеФормы");
		ФормаРасш.УстановитьФорму(Форма);
		Для Х = 0 По ФормаРасш.КоличествоАтрибутов() - 1 Цикл				
			Если    (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кнОК")
				ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кнСформировать") 
				ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "кнЗакрыть") 
				ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "Дата1")
				ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "Дата2") 
				ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "ПериодС") 
				ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "ПериодПо")
				ИЛИ (ФормаРасш.ПолучитьАтрибут(Х).Идентификатор = "ВыбПериода")
				
				Тогда	
					
				//--- не закрываем
				ФормаРасш.ПолучитьАтрибут(Х).Доступность = 1;		
			Иначе
				//--- закрываем
				ФормаРасш.ПолучитьАтрибут(Х).Доступность = 0;	
			КонецЕсли;			
		КонецЦикла;
		
		фБезГрупп				= 1;
		фТолькоКво				= 1;
		фТипСуммПриход 			= 1;
		
		фТипСуммНачОст 			= 0;
		фВыводитьКутера			= 0;
		фСебестоимостьЗаЕдиницу = 0;
		фВыделятьДавСоставляющую= 0;
		фТипСуммРасход			= 0;
		фТипСуммКонОст			= 0;
		
		
		Для Сч=1 По Группировки.РазмерСписка() Цикл
			Если Группировки.ПолучитьЗначение(Сч) = "Материал" Тогда
				Группировки.Пометка(Сч,1);	
			Иначе
				Группировки.Пометка(Сч,0);		
			КонецЕсли;	
			
		КонецЦикла;
		
		ВыбМатериал = Константа.УМК_ГруппаЭтикеток;
		
	КонецЕсли;	// ... УМК Сандомирский В.Ю. (15.06.15)

КонецПроцедуры		// ПриОткрытии()       

// ===============================
Процедура ВводНового()
	
	// эта предопределенная процедура выполняется при восстановлении настройки
	ТекСтрокаВТаблицеМФ="";
	ПерерисовкаНазванийЗакладок();
	УправлениеДиалогом();       
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	
КонецПроцедуры // ВводНового()   

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)	
	// закладки
    Если Номер=1 Тогда
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	КонецЕсли;      
	УправлениеДиалогом();
	ПерерисовкаНазванийЗакладок();
	
КонецПроцедуры	// ПриВыбореЗакладки
                                       
// ===============================
Процедура ОбработкаПодбора(Значение)  
	
	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора

// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

Дата2 = КонМесяца(ПолучитьДатуТА());
Дата1 = НачМесяца(Дата2);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

СписокПериодов.ДобавитьЗначение("Общий","Общие итоги");
СписокПериодов.ДобавитьЗначение("День","День");  
СписокПериодов.ДобавитьЗначение("Неделя","Неделя");  
СписокПериодов.ДобавитьЗначение("Месяц","Месяц");  
СписокПериодов.ДобавитьЗначение("Квартал","Квартал");
СписокПериодов.ДобавитьЗначение("Год","Год");

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");
ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
                                                                                
// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

//                  			тип			вид				переменная  	название
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Фирмы",			"Фирма",			"По фирмам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Подразделения",	"Подразделение",	"По подразделениям");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыДеятельности",	"ВидДеятельности",	"По видам деятельности");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",	"Заказ",			"Заказ",			"По заказам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ТМЦ",				"Продукция",		"По продукции");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",	"Продукция",		"По категориям продукции");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","СтатьиКалькуляции","СтатьяКалькуляции","По статьям калькуляции");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ТМЦ",				"Материал",			"По материалам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",	"Материал",			"По категориям материалов");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыЗатрат",		"ВидЗатрат",		"По видам затрат");

ТекСтрокаВТаблицеМФ="";

Группировки.ДобавитьЗначение("Фирма",			"Фирма");
Группировки.ДобавитьЗначение("Подразделение",	"Подразделение");
Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");           
Группировки.ДобавитьЗначение("Заказ", 			"Заказ");
Группировки.ДобавитьЗначение("Продукция", 		"Продукция");
Группировки.ДобавитьЗначение("СтатьяКалькуляции","Статья калькуляции");
Группировки.ДобавитьЗначение("Материал",		"Материал");
Группировки.ДобавитьЗначение("ВидЗатрат",		"Вид затрат");
Группировки.ДобавитьЗначение("Документ",		"Документ движения");

Группировки.Пометка(5,1);
Группировки.Пометка(6,1);

ГруппировкиПоДвижениям = СоздатьОбъект("СписокЗначений"); // для расшифровки отчета по движениям
ГруппировкиПоДвижениям.ДобавитьЗначение("Документ",		"Документ движения");
ГруппировкиПоДвижениям.Пометка(1,1);

// список украинских названий группировок для построения шапки отчета
УкрГруппировки = СоздатьОбъект("СписокЗначений");
УкрГруппировки.ДобавитьЗначение("Фирма",			"Фірма");
УкрГруппировки.ДобавитьЗначение("Подразделение",	"Підрозділ");
УкрГруппировки.ДобавитьЗначение("ВидДеятельности",	"Вид діяльності");           
УкрГруппировки.ДобавитьЗначение("Заказ", 			"Замовлення");
УкрГруппировки.ДобавитьЗначение("Продукция", 		"Продукція");
УкрГруппировки.ДобавитьЗначение("СтатьяКалькуляции","Стаття калькуляції");
УкрГруппировки.ДобавитьЗначение("Материал",			"Матеріал");
УкрГруппировки.ДобавитьЗначение("ВидЗатрат",		"Вид витрат");
УкрГруппировки.ДобавитьЗначение("Документ",			"Документ рухів");

// расставляем флаги и значения
Если НазваниеНабораПрав() <> "СнабжениеТабель" Тогда	// --- УМК Сандомирский В.Ю. (15.06.15)	

	фБезГрупп  	= 0;
	фТипСуммНачОст		= 1;
	фТипСуммПриход		= 1;
	фТипСуммРасход		= 1;
	фТипСуммКонОст		= 1;

КонецЕсли;