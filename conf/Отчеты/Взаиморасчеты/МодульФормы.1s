// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================
Перем ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
                        
// переменные предназначены для механизма универсальных группировок отчета
Перем СписокГруппировок;
Перем КоличествоГруппировок;
Перем НомерГруппировкиВалюта, НомерГруппировкиКредДокумент;

// переменные предназначены для запроса по периодам
Перем Запрос,ЗапросСПериодами,ТаблицаПериодов,Периодичность;
Перем Язык, УкрГруппировки;
Перем Знак;

Перем ВидОтчетаСтр, ВидОтчетаОбщ, ВидОтчетаПос, ВидОтчетаПосР, ВидОтчетаПок;
Перем Заголовок, ПечЗаголовокСтолбца;

Перем ГруппировкиПоДвижениям;
Перем ДокНачала, ДокКонца;
Перем Д1, Д2;
Перем МаксДнейСверки;

Перем ТекКонтрагент; // --- Сандомирский В.Ю. (11.12.14)

// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
Функция ДнейВОтчете(Значение,Язык)
	Если (Значение%10 = 1) И (Значение%100 <> 11) Тогда
		ТекстДней=?(Язык = "у","день","день");
	ИначеЕсли (Значение%10 = 2) И (Значение%100 <> 12) Тогда
		ТекстДней=?(Язык = "у","дні","дня");
	ИначеЕсли (Значение%10 = 3) И (Значение%100 <> 13) Тогда
		ТекстДней=?(Язык = "у","дні","дня");
	ИначеЕсли (Значение%10 = 4) И (Значение%100 <> 14) Тогда
		ТекстДней=?(Язык = "у","дні","дня");
	Иначе
		ТекстДней=?(Язык = "у","днів","дней");
	КонецЕсли;
	Возврат ""+Значение + " " + ТекстДней;
КонецФункции

// ===============================
Функция ДатаОплатыДок(Док)
	ДатаОплаты=Док.ДатаДок;
	Если глЕстьРеквизитШапки("ДатаОплаты",Док.Вид())=Да Тогда
		Если ПустоеЗначение(Док.ДатаОплаты) = 0 Тогда
			ДатаОплаты=Док.ДатаОплаты;
		КонецЕсли;
	КонецЕсли;	               
	Возврат ДатаОплаты;
КонецФункции

// ===============================
Функция Просрочено(Док)
	Если Док.Выбран()=0 Тогда
	    Возврат 0
	КонецЕсли;

	Если ДатаОплатыДок(Док) + ДнПросроченногоДолга < Дата2 Тогда
	    Возврат 1;
	КонецЕсли;
	Возврат 0;
КонецФункции

// ===============================
Процедура ВыбратьПоФильтру()
	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру

// ===============================
Функция ПерерисовкаНазванийЗакладок()      

	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");
	
КонецФункции // ПерерисовкаНазванийЗакладок	

// ===============================
Процедура УстановитьГруппировкиЗапроса(ТекстЗапроса, ТекстЗагол)
	                       
	СписокГруппировок = СоздатьОбъект("СписокЗначений");
	КвоГруппировок 				= Группировки.РазмерСписка();
	НомерГруппировкиВалюта 		= КвоГруппировок;
	НомерГруппировкиКредДокумент= КвоГруппировок;

	Для Сч=1 По КвоГруппировок Цикл
		
		Если Группировки.Пометка(Сч)=1 Тогда
			ПредставлениеГрупп		=""; 
			УкрПредставлениеГрупп	="";
			ТекстГрупп = Группировки.ПолучитьЗначение(Сч,ПредставлениеГрупп);
			УкрГруппировки.ПолучитьЗначение(УкрГруппировки.НайтиЗначение(ТекстГрупп),УкрПредставлениеГрупп);
			
			ТекстБезУпорядочивания = "";
			ТекстБезГрупп = "";
			Если (ТекстГрупп = "Контрагент")  
				И (фБезГрупп = 2) Тогда
					ТекстБезГрупп = " без групп";
			ИначеЕсли (ТекстГрупп = "Договор") 
				И (глОптимизацияОтчетов = 1) Тогда
				ТекстБезУпорядочивания = " без упорядочивания";
			КонецЕсли;
			ТекстЗапроса= ТекстЗапроса 	+ "Группировка "+ТекстГрупп+ТекстБезУпорядочивания+ТекстБезГрупп+";";
			ТекстЗагол	= ТекстЗагол + " / "+?(Язык="у",УкрПредставлениеГрупп,ПредставлениеГрупп);
			СписокГруппировок.ДобавитьЗначение(ТекстГрупп,ПредставлениеГрупп);
		КонецЕсли;
	КонецЦикла; 

	Если ПустаяСтрока(ТекстЗагол)=0 Тогда // удаляем ведущий разделитель " / "
		ТекстЗагол = Сред(ТекстЗагол,4)
	КонецЕсли;

КонецПроцедуры // УстановитьГруппировкиЗапроса()

// ===============================
Функция ПериодСтрока()
	Зн = СписокПериодов.ПолучитьЗначение(СписокПериодов.ТекущаяСтрока());
    Если Зн = "Общий" Тогда
    	Возврат 0;
	Иначе
		Возврат Зн;
    КонецЕсли;
КонецФункции //

// ===============================
Процедура ПечатьПериода(НазваниеГруппировки,НазваниеСекции,Запрос,ВалютаПечати, ПоПериоду = 0, Значен)
	Если фКЦ = 1 Тогда
		ПечКЦ = ""; 
		Если НазваниеГруппировки = "Контрагент" Тогда
			ПечКЦ = Запрос.Контрагент.КатегорияЦен.Получить(Дата2);			
		ИначеЕсли НазваниеГруппировки = "Документ" Тогда			
			Если глЕстьРеквизитШапки("КатегорияЦен", Запрос.Документ.Вид()) = Да Тогда
				ПечКЦ = Запрос.Документ.КатегорияЦен;
			КонецЕсли;
		КонецЕсли;
	    Таб.ПрисоединитьСекцию(НазваниеСекции+"|КЦ");
	КонецЕсли;
	ПечДатаСверки = "";
	Если НазваниеГруппировки = "Контрагент" Тогда
		ДатаСверки = Запрос.Контрагент.РезультатСверкиДата;
		ПечДатаСверки = ДатаСверки;
	КонецЕсли;

	Если фДатаСверки = 1 Тогда
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|ДатаСверки");
	КонецЕсли;
	Если фСумма = 1 Тогда
	    ПечСуммаСверки = "";
		Если НазваниеГруппировки = "Контрагент" Тогда
			ПечСуммаСверки = Формат(Запрос.Контрагент.РезультатСверкиСумма, "Ч12.2");
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Сумма");
	КонецЕсли;
	Если фСуммаНал = 1 Тогда 
		ПечСуммаНалСверки = "";
		Если НазваниеГруппировки = "Контрагент" Тогда
			ПечСуммаНалСверки = Формат(Запрос.Контрагент.РезультатСверкиСуммаНал, "Ч12.2");
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|СуммаНал");
	КонецЕсли;
	Если фПрим = 1 Тогда 
		Коммент = "";
		Если НазваниеГруппировки = "Контрагент" Тогда
			//Коммент = ?(ПустоеЗначение(Запрос.Контрагент.РезультатСверкиКоммент) = 1, "", "Х");
			Коммент = Запрос.Контрагент.РезультатСверкиКоммент;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Прим");
	КонецЕсли;
	
	Если фГлубинаКредита = 1 Тогда 
		Если НазваниеГруппировки = "Контрагент" Тогда
			Глубина = глФРМ(Запрос.Контрагент.Глубина.Получить(Дата2),Гривня,0);
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Глубина");
	КонецЕсли;
	
	Если фНачОст = 1 Тогда    
		Если НазваниеГруппировки="Документ" Тогда
			ПечНачДолг = "";
		Иначе
			НачДолг	= Запрос.НачДолгОсн;
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				НачДолг	= НачДолг + Запрос.НачДолгПостОсн;
			КонецЕсли;
			ПечНачДолг = глФРМ(Знак*НачДолг,Гривня,1);

			Если ВалютаПечати <> Гривня Тогда
				НачДолг = Запрос.НачДолг;
				Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
					НачДолг = НачДолг + Запрос.НачДолгПост;
				КонецЕсли;
				ПечНачДолг = глФРМ(Знак*НачДолг,ВалютаПечати,1)+РазделительСтрок+ПечНачДолг;
			КонецЕсли;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|НачОст");
	КонецЕсли;
		
	Если фПриход = 1 Тогда    
		Приход = Запрос.ПрихДолгОсн;
		Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
			Приход = Приход + Запрос.ПрихДолгПостОсн;
		КонецЕсли;
		ПечПриход = глФРМ(Приход,Гривня,1);

		Если ВалютаПечати <> Гривня Тогда
			Приход = Запрос.ПрихДолг;
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				Приход = Приход + Запрос.ПрихДолгПост;
			КонецЕсли;
			ПечПриход = глФРМ(Приход,ВалютаПечати,1)+РазделительСтрок+ПечПриход;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Приход");
	КонецЕсли;

	Если фОплата = 1 Тогда    
		Оплата = Запрос.ОплатаДолгОсн;
		Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
			Оплата = Оплата + Запрос.ОплатаДолгПостОсн;
		КонецЕсли;
		ПечОплата = глФРМ(Оплата,Гривня,1);

		Если ВалютаПечати <> Гривня Тогда
			Оплата = Запрос.ОплатаДолг;
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				Оплата = Оплата + Запрос.ОплатаДолгПост;
			КонецЕсли;
			ПечОплата = глФРМ(Оплата,ВалютаПечати,1)+РазделительСтрок+ПечОплата;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Оплата");
	КонецЕсли;
	
	Если фРасход = 1 Тогда    
		Расход = Запрос.РасхДолгОсн;
		Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
			Расход = Расход + Запрос.РасхДолгПостОсн;
		КонецЕсли;
		ПечРасход = глФРМ(Расход,Гривня,1);

		Если ВалютаПечати <> Гривня Тогда
			Расход = Запрос.РасхДолг;
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				Расход = Расход	+ Запрос.РасхДолгПост;
			КонецЕсли;
			ПечРасход = глФРМ(Расход,ВалютаПечати,1)+РазделительСтрок+ПечРасход;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Расход");
		
		Если фТранспорт = 1 Тогда		//--- УМК Сандомирский В.Ю, транспортные расходы (09.06.14)
			Попытка
				Если Запрос.Документ.ТранспортныеРасходы > 0 Тогда
					ПечТранспорт = глФРМ(Запрос.Документ.ТранспортныеРасходы,Гривня,1);
				Иначе
					ПечТранспорт = "";
				КонецЕсли;
			Исключение
				ПечТранспорт = "";
			КонецПопытки;
			Таб.ПрисоединитьСекцию(НазваниеСекции + "|Транспорт");
		КонецЕсли;						//... УМК Сандомирский В.Ю, транспортные расходы (09.06.14)
			
	КонецЕсли;

	Если фВСчетЗП = 1 Тогда    
		
		ВСчетЗП = Запрос.ВСчетЗПДолг;
		ВПремия = Запрос.ВПремия; 			//--- УМК Сандомирский В.Ю. (25.09.14)
		
		Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
			ВСчетЗП = ВСчетЗП + Запрос.ВСчетЗПДолг;
			ВПремия = ВПремия + Запрос.ВПремия;		//--- УМК Сандомирский В.Ю. (25.09.14)
		КонецЕсли;
		
		ПечВСчетЗП = глФРМ(ВСчетЗП+ВПремия,Гривня,1);

		Если ВалютаПечати <> Гривня Тогда
			
			ВСчетЗП = Запрос.ВСчетЗПДолг;
			ВПремия = Запрос.ВПремия; 			//--- УМК Сандомирский В.Ю. (25.09.14)
			
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				ВСчетЗП = ВСчетЗП + Запрос.ВСчетЗПДолг;
				ВПремия = ВПремия + Запрос.ВПремия;		//--- УМК Сандомирский В.Ю. (25.09.14)
			КонецЕсли;
			
			ПечВСчетЗП = глФРМ(ВСчетЗП + ВПремия,ВалютаПечати,1)+РазделительСтрок+ВСчетЗП; 		//--- УМК Сандомирский В.Ю. (25.09.14)
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|ВСчетЗП");
	КонецЕсли;
	
	Если фВзаимозачет = 1 Тогда    //--- УМК Сандомирский В.Ю. (24.11.14) взаимозачет
			
		ТекВзаимозачетПриход = Запрос.ТекВзаимПриход;
		ТекВзаимозачетРасход = Запрос.ТекВзаимРасход;
				
		Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
			ТекВзаимозачетПриход = ТекВзаимозачетПриход  + Запрос.ТекВзаимПосПриход;
			ТекВзаимозачетРасход = ТекВзаимозачетРасход  + Запрос.ТекВзаимПосРасход;
		КонецЕсли;
		
		ПечВзаимозачетПриход= глФРМ(ТекВзаимозачетПриход,Гривня,1);
		ПечВзаимозачетРасход= глФРМ(ТекВзаимозачетРасход,Гривня,1);

		Если ВалютаПечати <> Гривня Тогда
			
			
			ТекВзаимозачетПриход = Запрос.ТекВзаимозачетПриход;
			ТекВзаимозачетРасход = Запрос.ТекВзаимозачетРасход;
			
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				ТекВзаимозачетПриход = ТекВзаимозачетПриход + Запрос.ТекВзаимозачетПриход;
				ТекВзаимозачетРасход = ТекВзаимозачетРасход + Запрос.ТекВзаимозачетРасход;	
			КонецЕсли;
			
			ПечВзаимозачетПриход = глФРМ(ТекВзаимозачетПриход,ВалютаПечати,1)+РазделительСтрок+ТекВзаимозачетПриход; 		
			ПечВзаимозачетРасход = глФРМ(ТекВзаимозачетРасход,ВалютаПечати,1)+РазделительСтрок+ТекВзаимозачетРасход; 
			
			
		КонецЕсли;
		
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Взаимозачет");
		
	КонецЕсли; //... УМК Сандомирский В.Ю. (24.11.14) взаимозачет
	
	Если фКонОст = 1 Тогда    
		Если НазваниеГруппировки="Документ" Тогда
			ПечДолгКонтрагента = "";
			ПечНашДолг		   = "";
		Иначе
			КонДолг = Запрос.КонДолгОсн;
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				КонДолг = КонДолг + Запрос.КонДолгПостОсн;
			КонецЕсли;
			ПечДолгКонтрагента 	= глФРМ(Макс(0, КонДолг),Гривня,1);
			ПечНашДолг			= глФРМ(Макс(0,-КонДолг),Гривня,1);

			Если ВалютаПечати <> Гривня Тогда
				КонДолг = Запрос.КонДолг;
				Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
					КонДолг = КонДолг + Запрос.КонДолгПост;
				КонецЕсли;
				ПечДолгКонтрагента 	= глФРМ(Макс(0, КонДолг),ВалютаПечати,1)+РазделительСтрок+ПечДолгКонтрагента;
				ПечНашДолг			= глФРМ(Макс(0,-КонДолг),ВалютаПечати,1)+РазделительСтрок+ПечНашДолг;
			КонецЕсли;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|КонОст");
	КонецЕсли;

	Если (фВыделятьПросроченныйДолг = 1) И (ПоПериоду = 0) Тогда    
		ПросроченныйДолг = Запрос.ПросроченныйДолгОсн;
		Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
			ПросроченныйДолг = ПросроченныйДолг + Запрос.ПросроченныйДолгПостОсн;
		КонецЕсли;
		ПечПросроченныйДолг = глФРМ(Знак*ПросроченныйДолг,Гривня,1);

		Если ВалютаПечати <> Гривня Тогда
			ПросроченныйДолг = Запрос.ПросроченныйДолг;
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				ПросроченныйДолг = ПросроченныйДолг + Запрос.ПросроченныйДолгПост;
			КонецЕсли;
			ПечПросроченныйДолг = глФРМ(Знак*ПросроченныйДолг,ВалютаПечати,1)+РазделительСтрок+ПечПросроченныйДолг;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Просрочено");
	КонецЕсли;


	//--- Постобработка (раскрашиваем)
	
	Если НазваниеГруппировки = "Контрагент" Тогда
		Попытка
			Если ((ДатаСверки <> Дата(0)) ИЛИ ((ДатаСверки = Дата(0)) И (Запрос.Контрагент.ВыделятьПоЛюбому = 1))) 
					И ((КонДолг <> 0) ИЛИ ( Приход <> 0 ) ИЛИ ( Расход <> 0 ) ) Тогда									//--- УМК Сандомирский В.Ю. (05.02.2015) красим когда были обороты или долг не равными нулю
				Если Дата2 - ДатаСверки > МаксДнейСверки Тогда
					Таб.Область(Таб.ВысотаТаблицы(), 1, Таб.ВысотаТаблицы(), Таб.ШиринаТаблицы()).ЦветФона(128, 255, 255);
				КонецЕсли;
			КонецЕсли;			
		Исключение
		КонецПопытки;
	КонецЕсли;	
КонецПроцедуры //ПечатьПериода()

// ===============================
Процедура ПечатьСтроки(Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка = "",ЭтоГруппа=0,ПримечаниеДоговор = "") //--- УМК Сандомирский В.Ю. (03.09.14) ПримечаниеДоговор = ""
Перем Секция;
	
	Если (фБезГрупп = 3) И (ЭтоГруппа = 0) Тогда
		Возврат;
	КонецЕсли;
	
	Наим = ПечТекстСтроки + ПримечаниеДоговор; //--- УМК Сандомирский В.Ю. (03.09.14) ПримечаниеДоговор
	
	Если (НазваниеГруппировки = "Контрагент") ИЛИ (НазваниеГруппировки = "Договор") Тогда
		Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);	
	Иначе
		Значение = ТекРасшифровка;
	КонецЕсли;	
	
	Если  ТипЗначенияСтр(ТекРасшифровка) = "Документ" Тогда				//--- УМК Сандомирский В.Ю. (16.09.14) 
		Если  ТекРасшифровка.Вид() = "УМК_ДооценкаПартии" Тогда 
			Наим = ПечТекстСтроки + " " + глДокументВОтчете(ТекРасшифровка.ПриходнаяНакладная,1,1,) ;
		КонецЕсли;
	КонецЕсли;
	Если ТипЗначенияСтр(Значение) = "Документ" Тогда
		Если Значение.Вид() = "Договор" Тогда
			Наим = Наим + ". Продавец: " + Значение.Продавец;
		КонецЕсли;
	КонецЕсли;
	
	Значен = ТекРасшифровка;
	
	Секция = Таб.ПолучитьСекцию(НазваниеСекции+"|Наименование");
	Область = Секция.Область("R1C1:R1C8");
	Область.Подчеркнутый(ЭтоГруппа);
	Таб.ВывестиСекцию(Секция);
	
	ВалютаПечати=Гривня;
	
    ПечатьПериода(НазваниеГруппировки, НазваниеСекции, Запрос, ВалютаПечати, , Значен);

	Если (Периодичность <> 0) Тогда
		// выведем теперь все периоды, с разворотом вправо
		ТаблицаПериодов.ВыбратьСтроки();
		Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл
			глПозиционироватьЗапросПоПериодам(Запрос,ЗапросСПериодами,СписокГруппировок,КоличествоГруппировок,Ном,ТаблицаПериодов.РеалНачалоПериода);
			ПечатьПериода(НазваниеГруппировки, НазваниеСекции, ЗапросСПериодами,ВалютаПечати, 1, Значен);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры //ПечатьСтроки()

// ===============================
Функция СуммаДокументаСтр(Док,НомерСтроки)

	Если (ПустоеЗначение(Док) = 1) Или (глОптимизацияОтчетов = 1) Тогда
		Возврат "";
	КонецЕсли;

	ВидДок=Док.Вид();

	ВалютаДокумента = Гривня;
	Если глЕстьРеквизитШапки("Валюта",ВидДок) = Да Тогда
		ВалютаДокумента = Док.Валюта;
	ИначеЕсли глЕстьРеквизитМнЧ("Валюта",ВидДок) = Да Тогда
		Если Док.ПолучитьСтрокуПоНомеру(НомерСтроки) = 1 Тогда	
			ВалютаДокумента = Док.Валюта;
		КонецЕсли;	
	КонецЕсли;	    
	
	Если ВидДок = "ПереоценкаРозницы" Тогда
		СуммаДок = Док.Итог("НоваяСумма") - Док.Итог("СуммаСНДС")
	ИначеЕсли глЕстьРеквизитШапки("СуммаСНДС",ВидДок) = Да Тогда
		СуммаДок=Док.СуммаСНДС;
	ИначеЕсли глЕстьРеквизитШапки("СуммаБезНДС",ВидДок) = Да Тогда
		СуммаДок=Док.СуммаБезНДС;			
	ИначеЕсли глЕстьРеквизитМнЧ("СуммаБезНДСВал",ВидДок) = Да Тогда
		СуммаДок=Док.Итог("СуммаБезНДСВал");		
	ИначеЕсли глЕстьРеквизитМнЧ("СуммаСНДС",ВидДок) = Да Тогда
		Если Док.ПолучитьСтрокуПоНомеру(НомерСтроки) = 1 Тогда	
			СуммаДок=Док.СуммаСНДС;		
		Иначе
			СуммаДок=Док.Итог("СуммаСНДС");		
		КонецЕслИ;				
	ИначеЕсли глЕстьРеквизитМнЧ("СуммаБезНДС",ВидДок) = Да Тогда
		СуммаДок=Док.Итог("СуммаБезНДС");
	Иначе	                             
		СуммаДок = 0;			
	КонецЕсли;			

	Возврат глФРМ(СуммаДок,ВалютаДокумента,1);

КонецФункции

// ===============================
Процедура ДанныеДляДосье(Знач Ном,ТекущийДолг,СрочныйДолг,ПросроченныйДолг,Просрочено,ВидОтчета);
	
	Ном = Ном+1;
	ЗнакДолга = ?((ВидОтчета = ВидОтчетаПос) или (ВидОтчета = ВидОтчетаПосР),-1,1);
	Если СписокГруппировок.ПолучитьЗначение(Ном) <> "КредДокумент" Тогда
		Пока Запрос.Группировка(Ном) = 1 Цикл
			ДанныеДляДосье(Ном,ТекущийДолг,СрочныйДолг,ПросроченныйДолг,Просрочено,ВидОтчета);
		КонецЦикла;
	Иначе
	
		Пока Запрос.Группировка("КредДокумент") = 1 Цикл
			
			Док=Запрос.КредДокумент;
			Если ПустоеЗначение(Док)=1 Тогда // пропускаем
				Продолжить;
			КонецЕсли;
			
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				Долг = ?((ВидОтчета = ВидОтчетаПос) или (ВидОтчета = ВидОтчетаПосР),Запрос.КонДолгПостОсн,Запрос.КонДолгОсн);
			Иначе
				Долг = Запрос.КонДолгОсн;
			КонецЕсли;
	
			Если Долг=0 Тогда // пропускаем погашенные документы
				Продолжить;
			КонецЕсли;
			
			ТекущийДолг=ТекущийДолг+Долг;
	
			ДатаОплаты=ДатаОплатыДок(Док);
			Если ЗнакДолга*Долг>0 Тогда // есть долг
				Просрочено=Макс(Просрочено,РабочаяДата()-ДатаОплаты);
			КонецЕсли;
			
			Если ДатаОплаты + ДнПросроченногоДолга < Дата2 Тогда
				ПросроченныйДолг=ПросроченныйДолг+Долг;
			Иначе
				Если ДатаОплаты < Дата2  Тогда
					СрочныйДолг=СрочныйДолг+Долг;
				КонецЕсли;                                                 
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры	//  ДанныеДляДосье

// ===============================
Функция СформироватьДосье(Ном, НазваниеГруппировки, Значение, ВидОтчета)

	Если НазваниеГруппировки = "Контрагент" Тогда
		Контрагент = Значение;
		Контрагент.ИспользоватьДату(Дата2,1);
		Если (ВидОтчета = ВидОтчетаПос) ИЛИ (ВидОтчета = ВидОтчетаПосР) Тогда		// поставщики
			ВалютаПечати=Контрагент.ВалютаКредитаПоставщика;
			Глубина		=Число(Контрагент.ГлубинаКредитаПоставщика);
			СуммаКрд	=Число(Контрагент.СуммаКредитаПоставщика);
		Иначе // покупатели
			ВалютаПечати=Контрагент.ВалютаКредита;
			Глубина		=Число(Контрагент.Глубина);
			СуммаКрд	=Число(Контрагент.СуммаКредита);
		КонецЕсли;
	Иначе
		// в валюте отчета
		Если (фБазоваяВалюта=0) И (Ном>=НомерГруппировкиВалюта) Тогда
			ВалютаПечати = Запрос.Валюта;
		Иначе
			ВалютаПечати = Гривня;
		КонецЕсли;
	КонецЕсли;
		
	// будем вычислять досье
	ТекущийДолг 	= 0;
	СрочныйДолг 	= 0;
	ПросроченныйДолг= 0;
	Просрочено 		= 0;
	ДанныеДляДосье(Ном,ТекущийДолг,СрочныйДолг,ПросроченныйДолг,Просрочено,ВидОтчета);
	
	ЗнакДолга	= ?((ВидОтчета = ВидОтчетаПос) или (ВидОтчета = ВидОтчетаПосР),-1,1);
	ТекстДосье  = "";
	
	Если НазваниеГруппировки = "Контрагент" Тогда // по контрагенту
		ТекущийДолг 	= глПересчет(ТекущийДолг,		Гривня,ВалютаПечати,Дата2);
		СрочныйДолг 	= глПересчет(СрочныйДолг,		Гривня,ВалютаПечати,Дата2);
		ПросроченныйДолг= глПересчет(ПросроченныйДолг,	Гривня,ВалютаПечати,Дата2);

		Если ПустоеЗначение(СуммаКрд) = 0 Тогда
			Если Язык = "у" Тогда
				Текст1 = ?((ВидОтчета <> ВидОтчетаПос) и (ВидОтчета <> ВидОтчетаПосР),"Кредит клієнту = ","Кредит клієнта = ");
			Иначе
				Текст1 = ?((ВидОтчета <> ВидОтчетаПос) и (ВидОтчета <> ВидОтчетаПосР),"Кредит клиенту = ","Кредит клиента = ");
			КонецЕсли;
			ТекстДосье = ТекстДосье+Текст1+глФРМ(СуммаКрд,ВалютаПечати,1)+", на "+ДнейВОтчете(Глубина,Язык) + ". ";
		КонецЕсли;	
	КонецЕсли;

	Если ЗнакДолга*ТекущийДолг > 0 Тогда	
		Если Язык = "у" Тогда                                                                     
			Текст1 = ?((ВидОтчета <> ВидОтчетаПос) и (ВидОтчета <> ВидОтчетаПосР),"Пот. борг клієнта = ","Наш пот. борг клієнту = ");
		Иначе
			Текст1 = ?((ВидОтчета <> ВидОтчетаПос) и (ВидОтчета <> ВидОтчетаПосР),"Тек. долг клиента = ","Наш тек. долг клиенту = ");
		КонецЕсли;
		ТекстДосье = ТекстДосье+Текст1+глФРМ(ЗнакДолга*ТекущийДолг,ВалютаПечати,1)+". ";
	КонецЕсли;

	Если НазваниеГруппировки = "Контрагент" Тогда // по контрагенту
		Если ПустоеЗначение(СуммаКрд) = 0 Тогда
			Если ЗнакДолга*ТекущийДолг > СуммаКрд Тогда
				ТекстДосье = ТекстДосье+?(Язык = "у","КРЕДИТ ВИЧЕРПАНО! ","КРЕДИТ ИСЧЕРПАН! ");
			Иначе
				ТекстДосье = ТекстДосье+?(Язык = "у","Залишок кредиту = ","Остаток кредита = ")+глФРМ(СуммаКрд-ЗнакДолга*ТекущийДолг,ВалютаПечати,1)+". ";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если ЗнакДолга*ПросроченныйДолг > 0 Тогда
		Текст1 = ?(Язык = "у","ПРОСТРОЧЕНА оплата ","ПРОСРОЧЕНА оплата ");
		ТекстДосье = ТекстДосье+Текст1;
		ТекстДосье = ТекстДосье+глФРМ(ЗнакДолга*ПросроченныйДолг,ВалютаПечати,1)+" на "+ДнейВОтчете(Просрочено,Язык) + ". ";
	Иначе	
		Если ПустоеЗначение(ТекстДосье) = 0 Тогда
			ТекстДосье = ТекстДосье+?(Язык = "у","Не прострочено. ","Не просрочено. ");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗнакДолга*СрочныйДолг > 0 Тогда
		ТекстДосье = ТекстДосье+?(Язык = "у","Терміновий борг = ","Срочный долг = ")+глФРМ(Знак*СрочныйДолг,ВалютаПечати,1) + ". ";
	КонецЕсли;
	
	Возврат ТекстДосье;

КонецФункции //СформироватьДосье

//======================================================================
Функция АтрЗапроса(ИмяАтр, ПроверятьПост = 1, ВалютаПечати)
	Хвост = ?(ПроверятьПост = 1, "Осн", "");
	НачДолг	= Запрос.ПолучитьАтрибут(ИмяАтр + Хвост);
	Если (ВидОтчетаСтр = ВидОтчетаОбщ) И (ПроверятьПост = 1) Тогда
		НачДолг	= НачДолг + Запрос.ПолучитьАтрибут(ИмяАтр + "ПостОсн");
	КонецЕсли;
	
	Если ПроверятьПост = 1 Тогда		
		Если ВалютаПечати <> Гривня Тогда
			НачДолг = Запрос.ПолучитьАтрибут(ИмяАтр);
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				НачДолг = НачДолг + Запрос.ПолучитьАтрибут(ИмяАтр + "Пост");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НачДолг;
КонецФункции // АтрЗапроса(ИмяАтр)

//======================================================================
Функция ПроверитьНеЗначимые(НазваниеГруппировки, Ном, НомерГруппировкиВалюта)
	Если (фБазоваяВалюта=0) И (Ном>=НомерГруппировкиВалюта) Тогда
		ВалютаПечати=Запрос.Валюта;
	Иначе
		ВалютаПечати=Гривня;
	КонецЕсли;
	
	Если фНачОст = 1 Тогда    
		Если НазваниеГруппировки <> "Документ" Тогда
			Если АтрЗапроса("НачДолг", 1, ВалютаПечати) <> 0 Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
	Если фПриход = 1 Тогда    
		Если АтрЗапроса("ПрихДолг", 1, ВалютаПечати) <> 0 Тогда
			Возврат 0;
		КонецЕсли;		
	КонецЕсли;

	Если фОплата = 1 Тогда    
		Если АтрЗапроса("ОплатаДолг", 1, ВалютаПечати) <> 0 Тогда
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Если фРасход = 1 Тогда    
		Если АтрЗапроса("РасхДолг", 1, ВалютаПечати) <> 0 Тогда
			Возврат 0;
		КонецЕсли;
	КонецЕсли;

	Если фВСчетЗП = 1 Тогда    
		Если АтрЗапроса("ВСчетЗПДолг", 0, ВалютаПечати) <> 0 Тогда
			Возврат 0;
		КонецЕсли;		
		Если АтрЗапроса("ВПремия", 0, ВалютаПечати) <> 0 Тогда
			Возврат 0;
		КонецЕсли;		
	КонецЕсли;
	
	Если фВзаимозачет = 1 Тогда    //--- УМК Сандомирский В.Ю. (24.11.14) взаимозачет
		ТекВзаимозачетПриход = Запрос.ТекВзаимПриход;
		ТекВзаимозачетРасход = Запрос.ТекВзаимРасход;
				
		Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
			ТекВзаимозачетПриход = ТекВзаимозачетПриход  + Запрос.ТекВзаимПосПриход;
			ТекВзаимозачетРасход = ТекВзаимозачетРасход  + Запрос.ТекВзаимПосРасход;
		КонецЕсли;
		
		Если ВалютаПечати <> Гривня Тогда			
			ТекВзаимозачетПриход = Запрос.ТекВзаимозачетПриход;
			ТекВзаимозачетРасход = Запрос.ТекВзаимозачетРасход;
			
			Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
				ТекВзаимозачетПриход = ТекВзаимозачетПриход + Запрос.ТекВзаимозачетПриход;
				ТекВзаимозачетРасход = ТекВзаимозачетРасход + Запрос.ТекВзаимозачетРасход;	
			КонецЕсли;			
		КонецЕсли;
		
		Если (ТекВзаимозачетПриход <> 0) ИЛИ (ТекВзаимозачетРасход <> 0) Тогда
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Если фКонОст = 1 Тогда    
		Если НазваниеГруппировки <> "Документ" Тогда
			Если АтрЗапроса("КонДолг", 1, ВалютаПечати) <> 0 Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 1;
КонецФункции // ПроверитьНеЗначимые()

//======================================================================
// ===============================
Процедура ВывестиГруппировки(Знач Ном=1)

	Если Ном > КоличествоГруппировок Тогда                           
		Возврат;
	КонецЕсли;

	НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(Ном);
	Пока Запрос.Группировка(Ном) = 1 Цикл
		Если (фНеВыводитьНеЗначимые = 1) Тогда
			Если ПроверитьНеЗначимые(НазваниеГруппировки, Ном, НомерГруппировкиВалюта) = 1 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		НазваниеСекции="Группировка"+Ном;
		Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);		
		
		Если Найти("Контрагент,Валюта,СтавкаНДС",НазваниеГруппировки) > 0 Тогда
			ПечТекстСтроки = глСмещениеГруппы(Значение,фБезГрупп-1) + Значение;
			Если (фДосье = 1) И (НазваниеГруппировки="Контрагент") И (Запрос.ЭтоГруппа(НазваниеГруппировки)=0) 
					И (Ном < НомерГруппировкиКредДокумент) Тогда
				Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
					ТекстДосье = СформироватьДосье(Ном,НазваниеГруппировки,Значение,ВидОтчетаПос) + РазделительСтрок;
	                ТекстДосье = СокрЛ(ТекстДосье) + СформироватьДосье(Ном,НазваниеГруппировки,Значение,ВидОтчетаПок);
				Иначе
					ТекстДосье = СформироватьДосье(Ном,НазваниеГруппировки,Значение,ВидОтчетаСтр);
				КонецЕсли; 
				ПечТекстСтроки = ПечТекстСтроки + "." + РазделительСтрок + ТекстДосье;
			КонецЕсли;
		Иначе // Договор,Счет,КредДокумент,Документ
			Если ПустоеЗначение(Значение)=0 Тогда
				ПечТекстСтроки = ""+глДокументВОтчете(Значение,"с номером","с датой",Язык);
				Если НазваниеГруппировки="Договор" Тогда
					Если (фДосье = 1) И (Ном < НомерГруппировкиКредДокумент) Тогда
						Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
							ТекстДосье = СформироватьДосье(Ном,НазваниеГруппировки,Значение,ВидОтчетаПос) + РазделительСтрок;
			                ТекстДосье = СокрЛ(ТекстДосье) + СформироватьДосье(Ном,НазваниеГруппировки,Значение,ВидОтчетаПок);
						Иначе
							ТекстДосье = СформироватьДосье(Ном,НазваниеГруппировки,Значение,ВидОтчетаСтр);
						КонецЕсли; 
						ПечТекстСтроки = ПечТекстСтроки + "." + РазделительСтрок + ТекстДосье;
					КонецЕсли;
    			ИначеЕсли глОптимизацияОтчетов <> 1 Тогда
					ПечТекстСтроки = ПечТекстСтроки+?(Язык="у"," на суму= "," на сумму= ");
					ПечТекстСтроки = ПечТекстСтроки+СуммаДокументаСтр(Значение,Запрос.НомерСтроки);
				КонецЕсли;
			Иначе
				ПечТекстСтроки = "";
			КонецЕсли;
		КонецЕсли;
		ПечТекстСтроки = ?(ПустоеЗначение(ПечТекстСтроки)=1,глПредставлениеПустогоЗначения(НазваниеГруппировки,Язык),ПечТекстСтроки);

		ЗначениеРасшифровки = 0;
		//Если ((фПриход = 0) И (фРасход = 0)) Или (НазваниеГруппировки = "Документ") ИЛИ (НазваниеГруппировки = "Контрагент") Тогда
		Если ((фПриход = 0) И (фРасход = 0)) Или (НазваниеГруппировки = "Документ") Тогда
		    // остатки расшифровать до движений нельзя
			ЗначениеРасшифровки = Значение;
		Иначе
			// расшифровываем до движений, отбираем только текущие значения
			Расшифровка.Установить("Выб"+НазваниеГруппировки, Значение);
			Расшифровка.Установить("Группировки", ГруппировкиПоДвижениям);
			ЗначениеРасшифровки = Расшифровка;
		КонецЕсли;

		Если (НазваниеГруппировки="Договор") И (фПримДоговор = 1) Тогда //--- УМК Сандомирский В.Ю. (03.09.14) ПримечаниеДоговор
			ПечатьСтроки(Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,ЗначениеРасшифровки,Запрос.ЭтоГруппа(НазваниеГруппировки), " " + СокрЛП(Значение.Примечание) );
		Иначе
			ПечатьСтроки(Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,ЗначениеРасшифровки,Запрос.ЭтоГруппа(НазваниеГруппировки));
		КонецЕсли;
		
		// --- Сандомирский В.Ю. (11.12.14) (расшифровка кассовой ведомости если несколько строк по одному контрагенту)
		Если фКассовыеВедомости = 1 Тогда		
			Если НазваниеГруппировки="Контрагент" Тогда //--- в группировке контрагент запоминаем контрагента
				ТекКонтрагент = Значение;			
			КонецЕсли;			
			
			Если (Значение.Вид() = "УМК_КассоваяВедомость") ИЛИ (Значение.Вид() = "УМК_КассоваяВедомостьРасходная") Тогда						
				ТекВедомость = Значение;
				
				//--- Первый цикл считает количество строк с текущим контрагентом
				КвоВхождений = 0;
				ТекВедомость.ВыбратьСтроки();
				Пока ТекВедомость.ПолучитьСтроку() = 1 Цикл
					Если ТекВедомость.Контрагент = ТекКонтрагент Тогда		
						КвоВхождений = КвоВхождений + 1;				
					КонецЕсли;		
				КонецЦикла;
					
				//--- Второй цикл выводит расшифровку если количество вхождений более 1	
				Если КвоВхождений > 1 Тогда
					ТекВедомость.ВыбратьСтроки();
					Пока ТекВедомость.ПолучитьСтроку() = 1 Цикл
						Если ТекВедомость.Контрагент = ТекКонтрагент Тогда		
							ТекСтрока 	= ТекВедомость.НомерСТроки;
							
							Если (Значение.Вид() = "УМК_КассоваяВедомость") Тогда
								ПечОплата   = глФРМ(ТекВедомость.Сумма,Гривня,1);
								ПечРасход   = глФРМ(ТекВедомость.Сумма,Гривня,1);	
								ПечПриход   = "";		
							ИначеЕсли (Значение.Вид() = "УМК_КассоваяВедомостьРасходная") Тогда	
								ПечОплата   = "";
								ПечРасход   = "";	
								ПечПриход   = глФРМ(ТекВедомость.Сумма,Гривня,1);				
							КонецЕсли;
											
							Таб.ВывестиСекцию("СтрокаВедомость|Наименование");
							
							Если фНачОст = 1 Тогда  
								Таб.ПрисоединитьСекцию("СтрокаВедомость|НачОст");
							КонецЕсли;
							Если фПриход = 1 Тогда  
								Таб.ПрисоединитьСекцию("СтрокаВедомость|Приход");
							КонецЕсли;							
							
							Если фОплата = 1 Тогда 
								//Таб.ПрисоединитьСекцию("СтрокаВедомость|НачОст");
								Таб.ПрисоединитьСекцию("СтрокаВедомость|Оплата");
							КонецЕсли;	
							
							Если фРасход = 1 Тогда   
								Таб.ПрисоединитьСекцию("СтрокаВедомость|Расход");
							КонецЕсли;								
						КонецЕсли;	
					КонецЦикла;
				КонецЕсли;									
			КонецЕсли;			
		КонецЕсли;	
		// ... Сандомирский В.Ю. (расшифровка кассовой ведомости если несколько строк по одному контрагенту)			
		глОживить(1);

		ВывестиГруппировки(Ном+1);
	КонецЦикла;
	// очищаем отборы по расшифровке до движений
	Если Не( ((фПриход = 0) И (фРасход = 0)) Или (НазваниеГруппировки = "Документ") ) Тогда
		Расшифровка.Установить("Выб"+НазваниеГруппировки);
		Расшифровка.Установить("Группировки");
	КонецЕсли;

КонецПроцедуры // ВывестиГруппировки()

// ===============================
Процедура ВывестиШапкуПериода(НазваниеСекции,Период="",ПоПериоду = 0)
	
	Если НазваниеСекции="ШапкаПериод" Тогда
		Если фКЦ = 1 Тогда
		    Таб.ПрисоединитьСекцию(НазваниеСекции+"|НачОст");
		КонецЕсли;
		
		Если фНачОст = 1 Тогда    
			Если фКЦ = 0 Тогда
			    Таб.ПрисоединитьСекцию(НазваниеСекции+"|КЦ");
			Иначе
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|НачОст");
			КонецЕсли;			
		КонецЕсли;
			
		Если фПриход = 1 Тогда    
			Если фКЦ + фНачОст = 0 Тогда
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|КЦ");
			Иначе
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|Приход");
			КонецЕсли;
		КонецЕсли;
	
		Если фОплата = 1 Тогда    
			Если фКЦ + фНачОст + фПриход = 0 Тогда
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|КЦ");
			Иначе
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|Оплата");
			КонецЕсли;
		КонецЕсли;

		Если фВСчетЗП = 1 Тогда    
			Если фКЦ + фНачОст + фПриход + фОплата = 0 Тогда
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|КЦ");
			Иначе
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|ВСчетЗП");
			КонецЕсли;
		КонецЕсли;
		
		

		Если фРасход = 1 Тогда    
			Если фКЦ + фНачОст + фПриход + фОплата + фВСчетЗП = 0 Тогда
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|КЦ");
			Иначе
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|Расход");
				
				Если фТранспорт = 1 Тогда //--- УМК Сандомирский В.Ю, Транспорт (10.06.14)
					Таб.ПрисоединитьСекцию(НазваниеСекции+"|Транспорт");
				КонецЕсли;
								
			КонецЕсли;
		КонецЕсли;
		
		Если фВзаимозачет = 1 Тогда  //--- УМК Сандомирский В.Ю. (24.11.2014)  
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Взаимозачет");
		КонецЕсли;
		
		Если фКонОст = 1 Тогда    
			Если фКЦ + фНачОст + фПриход + фРасход + фОплата + фВСчетЗП + фВзаимозачет = 0 Тогда
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|КонОст_Шапка");
			Иначе
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|КонОст");
			КонецЕсли;
		КонецЕсли;

		Если (фВыделятьПросроченныйДолг = 1) И (ПоПериоду = 0) Тогда    
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Просрочено");
		КонецЕсли;
		Если фДатаСверки = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|ДатаСверки");
		КонецЕсли;
		Если фСумма = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Сумма");
		КонецЕсли;
		Если фСуммаНал = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|СуммаНал");
		КонецЕсли;
		Если фПрим = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Прим");
		КонецЕсли;
		Если фГлубинаКредита = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Глубина");
		КонецЕсли;
	Иначе
		Если фКЦ = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|КЦ");
		КонецЕсли;
		Если фДатаСверки = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|ДатаСверки");
		КонецЕсли;
		Если фСумма = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Сумма");
		КонецЕсли;
		Если фСуммаНал = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|СуммаНал");
		КонецЕсли;
		Если фПрим = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Прим");
		КонецЕсли;
		Если фГлубинаКредита = 1 Тогда
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Глубина");
		КонецЕсли;
		Если фНачОст = 1 Тогда    
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|НачОст");
		КонецЕсли;
			
		Если фПриход = 1 Тогда    
			Если (ВидОтчета = ВидОтчетаПос) или (ВидОтчета = ВидОтчетаПосР) Тогда
				ПечЗаголовокПриход = ?(Язык="у", "Зменшення боргу", "Уменьшение долга");
			Иначе
				ПечЗаголовокПриход = ?(Язык="у", "Збільшення боргу", "Увеличение долга");
			КонецЕсли;
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Приход");
		КонецЕсли;
	
		Если фОплата = 1 Тогда    
			ПечЗаголовокОплата = "Оплата";
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Оплата");
		КонецЕсли;
	
		Если фРасход = 1 Тогда    
			Если (ВидОтчета = ВидОтчетаПос) или (ВидОтчета = ВидОтчетаПосР) Тогда
				ПечЗаголовокРасход = ?(Язык="у", "Збільшення боргу", "Увеличение долга");
			Иначе
				ПечЗаголовокРасход = ?(Язык="у", "Зменшення боргу", "Уменьшение долга");
			КонецЕсли;
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Расход");
			
			Если фТранспорт = 1 Тогда //--- УМК Сандомирский В.Ю, Транспорт (10.06.14)
				Таб.ПрисоединитьСекцию(НазваниеСекции+"|Транспорт");
			КонецЕсли;
			
		КонецЕсли;
		
		Если фВСчетЗП = 1 Тогда    
			ПечЗаголовокВСчетЗП = "в т.ч. Повернення";
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|ВСчетЗП");
		КонецЕсли;
		
		Если фВзаимозачет = 1 Тогда  //--- УМК Сандомирский В.Ю. (24.11.2014) взаимозачет 
			ПечЗаголовокВзаимозачет = "Взаимозачет";
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Взаимозачет");
		КонецЕсли;
	
		Если фКонОст = 1 Тогда    
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|КонОст");
		КонецЕсли;

		Если (фВыделятьПросроченныйДолг = 1) И (ПоПериоду = 0) Тогда    
			Таб.ПрисоединитьСекцию(НазваниеСекции+"|Просрочено");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры 

// ===============================
Процедура ВывестиШапку()

	Если Периодичность<>0 Тогда 
		Таб.ВывестиСекцию("ШапкаПериод|Наименование");
		ВывестиШапкуПериода("ШапкаПериод",?(Язык="у", "Всього за період", "Всего за период"));
	    ТаблицаПериодов.ВыбратьСтроки(); // выводим шапку для каждого периода
		Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл
			ВывестиШапкуПериода("ШапкаПериод",ПериодСтр(ТаблицаПериодов.НачалоПериода,ТаблицаПериодов.КонецПериода),1);
		КонецЦикла;
		Таб.ПрисоединитьСекцию("ШапкаПериод|Рамка");
		глОживить(1);
	КонецЕсли;

	Таб.ВывестиСекцию("Шапка|Наименование");
	ВывестиШапкуПериода("Шапка");
	Если Периодичность<>0 Тогда 
	    ТаблицаПериодов.ВыбратьСтроки(); // выводим шапку для каждого периода
		Пока ТаблицаПериодов.ПолучитьСтроку()=1 Цикл
			ВывестиШапкуПериода("Шапка",,1);
		КонецЦикла;
	КонецЕсли;
	глОживить(1);
	Таб.Область(2, 8, 2, Таб.ШиринаТаблицы()).ГоризонтальноеПоложение(3+4);

КонецПроцедуры 

// ===============================
Процедура ПостроитьДиаграмму(Диаграмма,Запрос)
	
	Диаграмма.Обновление(0);
	Серия1 = ?(Язык = "у", "заборгованість", "задолженность");
	Диаграмма.УстановитьИмяСерии(1,Серия1); 

	ТаблицаЗапроса=СоздатьОбъект("ТаблицаЗначений");
	ТаблицаЗапроса.НоваяКолонка("Итог","Число",15,3);
	ТаблицаЗапроса.НоваяКолонка("Наименование");
	
	НомерСтрокиТаблицы=0;
	
	НазваниеГруппировки = СписокГруппировок.ПолучитьЗначение(1);
	Запрос.ВНачалоВыборки();
	Пока Запрос.Группировка(1) = 1 Цикл // по первой группе
		Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);
		Если ПустоеЗначение(Значение) = 1 Тогда
			Продолжить;
		КонецЕсли;

		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если Запрос.ЭтоГруппа(НазваниеГруппировки)=1 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		КонДолг=Запрос.КонДолгОсн;
		Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
			КонДолг = КонДолг + Запрос.КонДолгПостОсн;
		КонецЕсли;

		НомерСтрокиТаблицы=НомерСтрокиТаблицы+1;
		
		ТаблицаЗапроса.НоваяСтрока(НомерСтрокиТаблицы);
        ТаблицаЗапроса.Наименование		= " "+Значение;
        ТаблицаЗапроса.Итог 	= Знак*КонДолг;
	КонецЦикла;
	
	КвоТочекВДиаграмме = ТаблицаЗапроса.КоличествоСтрок();
	Если фОграничитьЧислоТочек=1 Тогда

		ТаблицаЗапроса.Сортировать("Итог-");
		КвоСтрокТабЗн = ТаблицаЗапроса.КоличествоСтрок();
		Если МаксКоличествоТочек < КвоСтрокТабЗн Тогда
			КвоТочекВДиаграмме = МаксКоличествоТочек+1;
			Для Инд=МаксКоличествоТочек+1 По КвоСтрокТабЗн Цикл
			    ТаблицаЗапроса.ПолучитьСтрокуПоНомеру(Инд);
		        ТаблицаЗапроса.Наименование = "<ПРОЧИЕ>";
			КонецЦикла;
			ТаблицаЗапроса.Свернуть("Наименование","Итог");
		Конецесли;
	КонецЕсли;
	ТаблицаЗапроса.Сортировать("Наименование");

	Для Инд=1 По КвоТочекВДиаграмме Цикл
	    ТаблицаЗапроса.ПолучитьСтрокуПоНомеру(Инд);
		Диаграмма.УстановитьИмяТочки(Инд,ТаблицаЗапроса.Наименование);
		Диаграмма.УстановитьЗначение(Инд,1,ТаблицаЗапроса.Итог,ТаблицаЗапроса.Наименование+" "+ТаблицаЗапроса.Итог+" "+Гривня);
		Состояние("Для диаграммы сформировано "+Инд+" значений.");
	КонецЦикла;

	Диаграмма.Обновление(1);              
	
КонецПроцедуры		// ПостроитьДиаграмму

// ===============================
Процедура ПостроитьДиаграммуПоПериодам(Диаграмма,ЗапросСПериодами)

	Диаграмма.Обновление(0);
	Серия1 = ?(Язык = "у", "по періодам", "по периодам");
	Диаграмма.УстановитьИмяСерии(1,Серия1); 

	ЧислоТочек=0;
	ЗапросСПериодами.ВНачалоВыборки();
	Пока ЗапросСПериодами.Группировка(Периодичность) = 1 Цикл // по периоду
		Значение = ЗапросСПериодами.ПолучитьАтрибут(Периодичность);
		КонДолг=ЗапросСПериодами.КонДолгОсн;
		Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда
			КонДолг = КонДолг + ЗапросСПериодами.КонДолгПостОсн;
		КонецЕсли;
        
		ЧислоТочек=ЧислоТочек+1;
		Диаграмма.УстановитьИмяТочки(ЧислоТочек,Значение);
		Диаграмма.УстановитьЗначение(ЧислоТочек,1,Знак*КонДолг,""+Значение+" "+КонДолг+" "+Гривня);
		Состояние("Для диаграммы сформировано "+ЧислоТочек+" значений.");
	КонецЦикла;
	
	Диаграмма.Обновление(1);              
КонецПроцедуры		// ПостроитьДиаграммуПоПериодам

// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
Функция УстановитьДоступность()
	Поз = Группировки.НайтиЗначение("КредДокумент");
	ЕстьПометка = ?(Поз = 0, 0, Группировки.Пометка(Поз));
	Форма.ДнПросроченногоДолга.		Доступность(ЕстьПометка); 
	Форма.тДнПросроченногоДолга.	Доступность(ЕстьПометка); 
	Форма.фДосье.					Доступность(ЕстьПометка); 
	Форма.фВыделятьПросроченныйДолг.Доступность(ЕстьПометка); 
	фДосье 						= Мин(ЕстьПометка,фДосье);
	фВыделятьПросроченныйДолг 	= Мин(ЕстьПометка,фВыделятьПросроченныйДолг);
КонецФункции //УстановитьДоступность

// ===============================
Процедура УстКолонкиОтчета()

	ЭлементДиалога = Форма.АктивныйЭлемент();
	
	Если фНачОст + фПриход + фОплата + фРасход + фКонОст + фВСчетЗП = 0 Тогда // хотя бы одна должна быть выбрана
		Если ЭлементДиалога = "фНачОст" Тогда
			фНачОст = 1;
		ИначеЕсли ЭлементДиалога = "фКЦ" Тогда
			фКЦ = 1;
		ИначеЕсли ЭлементДиалога = "фПриход" Тогда
			фПриход = 1;
		ИначеЕсли ЭлементДиалога = "фОплата" Тогда
			фОплата = 1;
		ИначеЕсли ЭлементДиалога = "фВСчетЗП" Тогда
			фВСчетЗП = 1;
		ИначеЕсли ЭлементДиалога = "фРасход" Тогда
			фРасход = 1;
		ИначеЕсли ЭлементДиалога = "фКонОст" Тогда
			фКонОст = 1;
		КонецЕсли;
	КонецЕсли;

	Позиция = Группировки.НайтиЗначение("Документ");
	Если (фПриход = 0) И (фРасход=0) Тогда // не выводим документы движений
		Если Позиция <> 0 Тогда
			Группировки.УдалитьЗначение(Позиция);
		КонецЕсли;
	Иначе
		Если Позиция=0 Тогда
			Группировки.ДобавитьЗначение("Документ","Документ движения");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// ===============================
Процедура ДоступностьЭлементов(ВсеЭлементы=0)           
	
	ЭлементДиалога = Форма.АктивныйЭлемент();

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбФирма") Или (ЭлементДиалога="кХВыбФирма") Тогда
		Форма.кХВыбФирма.Доступность(ВыбФирма.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбКонтрагент") Или (ЭлементДиалога="кХВыбКонтрагент") Тогда
		Если НазваниеНабораПрав() = "Заказ" Тогда
			Форма.кХВыбКонтрагент.Доступность(0);
		Иначе
			Форма.кХВыбКонтрагент.Доступность(ВыбКонтрагент.Выбран()); 
		КонецЕсли;		
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВыбДоговор") Или (ЭлементДиалога="кХВыбДоговор") Тогда
		Форма.кХВыбДоговор.Доступность(ВыбДоговор.Выбран()); 
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="ВидОтчета") Тогда
		Если ВидОтчета.ТекущаяСтрока() = 1 Тогда	// общие взаиморасчеты
			Форма.фДиаграмма.Доступность(1); 
			Форма.фОграничитьЧислоТочек.Доступность(фДиаграмма);
			фОграничитьЧислоТочек = Мин(фДиаграмма,фОграничитьЧислоТочек);
			Форма.МаксКоличествоТочек.Доступность(фОграничитьЧислоТочек);
		Иначе
			Форма.фДиаграмма.Доступность(0);
			Форма.МаксКоличествоТочек.Доступность(0);
			Форма.фОграничитьЧислоТочек.Доступность(0);
			фДиаграмма=0;
			фОграничитьЧислоТочек = 0;
		КонецЕсли;
	КонецЕсли;
	
	Если ВидОтчета.ТекущаяСтрока() <> 3 Тогда
		фВСчетЗП = 0;
		Форма.фВСчетЗП.Доступность(0);
	Иначе
		Форма.фВСчетЗП.Доступность(1);	
	КонецЕсли;
	
	Если ВидОтчета.ТекущаяСтрока() > 2 Тогда
		фОплата = 0;
		Форма.фОплата.Доступность(0);
	Иначе
		Форма.фОплата.Доступность(1);		
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="фДиаграмма") Тогда
		Форма.фОграничитьЧислоТочек.Доступность(фДиаграмма);
		фОграничитьЧислоТочек = Мин(фДиаграмма,фОграничитьЧислоТочек);
		Форма.МаксКоличествоТочек.Доступность(фОграничитьЧислоТочек);
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="фОграничитьЧислоТочек") Тогда
		Форма.МаксКоличествоТочек.Доступность(фОграничитьЧислоТочек);
	КонецЕсли;

	Если (ВсеЭлементы=1) Или (ЭлементДиалога="СписокПериодов") Тогда
		Если СписокПериодов.ТекущаяСтрока()=1 Тогда // не по периодам
			Форма.фДиаграммаПоПериодам.Доступность(0);
		Иначе
			Форма.фДиаграммаПоПериодам.Доступность(1);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры  	// ДоступностьЭлементов

// ===============================
Процедура ПриВыбореДоговора()	
	Если ВыбДоговор.Выбран()=0 Тогда
		Возврат;
	КонецЕсли;
	Если ВыбКонтрагент.Выбран()=0 Тогда
		ВыбКонтрагент = ВыбДоговор.Контрагент;
	КонецЕсли;	
	Если ВыбФирма.Выбран()=0 Тогда
		ВыбФирма = ВыбДоговор.Фирма;
	КонецЕсли;	
КонецПроцедуры 		// ПриВыбореДоговора

// ===============================
Процедура ПриВыбореКонтрагента()	
	Если (ВыбКонтрагент.Выбран()=0) Или (ВыбДоговор.Выбран()=0) Тогда
		Возврат;
	КонецЕсли;	
	Если ВыбКонтрагент <> ВыбДоговор.Контрагент Тогда
		ВыбДоговор = 0;
	КонецЕсли;	
КонецПроцедуры

Функция УбратьПеременнуюЗапроса(ИмяПеременной, СписокГруппировок, Отбор)
	
	КвоГруппировок 				= СписокГруппировок.РазмерСписка();
	
	Если ПустоеЗначение(Отбор) = 0 Тогда //Отбор
		Возврат 0;
	КонецЕсли;
	
	Для Сч=1 По КвоГруппировок Цикл
		
		Если СписокГруппировок.Пометка(Сч)=1 Тогда //Пометка 
			ТекстГрупп = СписокГруппировок.ПолучитьЗначение(Сч);
			Если ИмяПеременной = ТекстГрупп Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат 1; //Нет отбора и нет пометки
	
КонецФункции

// ===============================
Процедура Сформировать(ЗакрытьДиалог=0)
	Перем ТекстЗапроса;
	
	глПроверкаДаты(Дата1,Дата2);
	МаксДнейСверки = Константа.ДниСверкиДляПроверки;
	
	// Здесь формируется отчет, который использует регистры, критичные к
	// последовательности проведения документов
	// поэтому сравним установленные даты периода формируемого отчета с ГП
	глПроверкаАктуальностиОтчета(Дата1,Дата2,ВыбФирма,0);
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") Или (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;

	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	
	Таб.ИсходнаяТаблица("ТаблицаУ");			//--- УМК Сандомирский В.Ю. (21.11.14)
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "Взаиморасчеты");
		
	Расшифровка.Установить("Дата1", 		Дата1);
    Расшифровка.Установить("Дата2", 		Дата2);
	Расшифровка.Установить("ДокНачала", ДокНачала);
    Расшифровка.Установить("ДокКонца", ДокКонца);
	Расшифровка.Установить("фКЦ", фКЦ);
	Расшифровка.Установить("фДатаСверки", фДатаСверки);
	Расшифровка.Установить("фСумма", фСумма);
	Расшифровка.Установить("фСуммаНал", фСуммаНал);
	Расшифровка.Установить("фПрим", фПрим);
	Расшифровка.Установить("фГлубинаКредита", фГлубинаКредита);
	Расшифровка.Установить("Автомасштаб", Автомасштаб);
	Расшифровка.Установить("Ориентация", Ориентация);	
	Расшифровка.Установить("фПримДоговор",фПримДоговор); //--- УМК Сандомирский В.Ю. (03.09.14)

	Расшифровка.Установить("ВыбФирма",		ВыбФирма);
	Расшифровка.Установить("ВыбКонтрагент",	ВыбКонтрагент);
	Расшифровка.Установить("ВыбДоговор",	ВыбДоговор);
	Расшифровка.Установить("НеВыводитьНеЗначимые", фНеВыводитьНеЗначимые);
	// запомним МФ только если он задан
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
	КонецЕсли;

	Расшифровка.Установить("фБазоваяВалюта", 			фБазоваяВалюта);
	Расшифровка.Установить("фВыделятьПросроченныйДолг", фВыделятьПросроченныйДолг);
	Расшифровка.Установить("фДосье", 					фДосье);
	Расшифровка.Установить("ДнПросроченногоДолга", 		ДнПросроченногоДолга);
	Расшифровка.Установить("ВидОтчета",					ВидОтчета.ТекущаяСтрока());

	Расшифровка.Установить("фДиаграмма", 			фДиаграмма);
	Расшифровка.Установить("фОграничитьЧислоТочек", фОграничитьЧислоТочек);
	Расшифровка.Установить("МаксКоличествоТочек", 	МаксКоличествоТочек);

	Расшифровка.Установить("фДиаграммаПоПериодам", 	фДиаграммаПоПериодам);
	Расшифровка.Установить("СписокПериодов",		СписокПериодов.ТекущаяСтрока());

	Расшифровка.Установить("Группировки",	Группировки);	
	Расшифровка.Установить("фБезГрупп",		фБезГрупп);

	Расшифровка.Установить("фНачОст",	фНачОст);
	Расшифровка.Установить("фКонОст",	фКонОст);
	Расшифровка.Установить("фПриход",	фПриход);
	Расшифровка.Установить("фОплата",	фОплата);
	Расшифровка.Установить("фВСчетЗП",	фВСчетЗП);//--- УМК Сандомирский В.Ю. (05.12.14) 
	Расшифровка.Установить("фРасход",	фРасход);
	
	Расшифровка.Установить("фВзаимозачет",	фВзаимозачет);//--- УМК Сандомирский В.Ю. (05.12.14) 
	Расшифровка.Установить("фРасход",	фРасход);
	
	Расшифровка.Установить("фКассовыеВедомости",фКассовыеВедомости); 	//--- УМК Сандомирский В.Ю. (11.12.14) 
	Расшифровка.Установить("фТранспорт",		фТранспорт); 			//--- УМК Сандомирский В.Ю. (11.12.14) 
	
	ВидОтчетаСтр = ВидОтчета.ПолучитьЗначение(ВидОтчета.ТекущаяСтрока());
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ЗапросСПериодами = СоздатьОбъект("Запрос");
	               
	Если (Дата2 >= ПолучитьДатуТА()) и (ПустоеЗначение(ДокКонца) = 1) Тогда
		ТекстЗапроса = "
			|Период с Д1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Д1 по Д2;";
	КонецЕсли;
		
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, Дата1, Дата2);
	
	Если ВидОтчетаСтр = ВидОтчетаОбщ Тогда

		Заголовок=?(Язык="у","Взаєморозрахунки з клієнтами","Взаиморасчеты с клиентами");
		Знак = 1;
		ТекстЗапроса=ТекстЗапроса+
			"Фирма			= Регистр.ВзаиморасчетыПокупателей.Фирма,			Регистр.ВзаиморасчетыПоставщиков.Фирма;
			|Контрагент		= Регистр.ВзаиморасчетыПокупателей.Контрагент,		Регистр.ВзаиморасчетыПоставщиков.Контрагент;" + 
			?(УбратьПеременнуюЗапроса("Договор",Группировки, ВыбДоговор)=1,"","Договор		= Регистр.ВзаиморасчетыПокупателей.Договор,		Регистр.ВзаиморасчетыПоставщиков.Договор;") + "
		    |НомерСтроки	= Регистр.ВзаиморасчетыПокупателей.НомерСтроки,		Регистр.ВзаиморасчетыПоставщиков.НомерСтроки;

			|Долг			= Регистр.ВзаиморасчетыПокупателей.Долг;
			|ДолгОсн		= Регистр.ВзаиморасчетыПокупателей.ДолгОсн;

			|ДолгПост		= Регистр.ВзаиморасчетыПоставщиков.Долг;
			|ДолгПостОсн	= Регистр.ВзаиморасчетыПоставщиков.ДолгОсн;";

		Если фВСчетЗП = 1 Тогда
			ТекстЗапроса = ТекстЗапроса+ "
				|ТекДок = Регистр.ВзаиморасчетыПокупателей.ТекущийДокумент;
				|Функция ВСчетЗПДолг 	= Расход(Долг) когда ((ТекДок.Вид() = ""НачислениеБонуса"") ИЛИ (ТекДок.Вид() = ""РасходнаяНакладная"") ИЛИ (ТекДок.Вид() = ""ВозвратнаяНакладная""));
				|Функция ВПремия		= Расход(Долг) когда (ТекДок.Вид() = ""УМК_ПремииПоПланамПродажКонтрагенты"");
				|";
		КонецЕсли;
			
		Если фНачОст = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция НачДолг 		= НачОст(Долг);
				|Функция НачДолгОсн 	= НачОст(ДолгОсн);
				|Функция НачДолгПост 	= НачОст(ДолгПост);
				|Функция НачДолгПостОсн = НачОст(ДолгПостОсн);";
		КонецЕсли;

		Если фКонОст = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция КонДолг 		= КонОст(Долг);
				|Функция КонДолгОсн 	= КонОст(ДолгОсн);
				|Функция КонДолгПост 	= КонОст(ДолгПост);
				|Функция КонДолгПостОсн = КонОст(ДолгПостОсн);";
		КонецЕсли;

		Если фПриход = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция ПрихДолг 		= Приход(Долг);
				|Функция ПрихДолгОсн	= Приход(ДолгОсн);
				|Функция ПрихДолгПост 	= Приход(ДолгПост);
				|Функция ПрихДолгПостОсн= Приход(ДолгПостОсн);";
		КонецЕсли;

		Если фОплата = 1 Тогда    
			спКодыОперацийОплаты = СоздатьОбъект("СписокЗначений");
			спКодыОперацийОплаты.ДобавитьЗначение(АвансоваяОплата);
			спКодыОперацийОплаты.ДобавитьЗначение(ВозвратАвансовойОплаты);
			спКодыОперацийОплаты.ДобавитьЗначение(ПостОплата);
			спКодыОперацийОплаты.ДобавитьЗначение(ВозвратПостОплаты);

			ТекстЗапроса = ТекстЗапроса+
				"КодОперации	= Регистр.ВзаиморасчетыПоставщиков.КодОперации, Регистр.ВзаиморасчетыПокупателей.КодОперации;
				|Функция ОплатаДолг 		= Приход(Долг) Когда (КодОперации в спКодыОперацийОплаты);
				|Функция ОплатаДолгОсн		= Приход(ДолгОсн) Когда (КодОперации в спКодыОперацийОплаты);
				|Функция ОплатаДолгПост 	= Приход(ДолгПост) Когда (КодОперации в спКодыОперацийОплаты);
				|Функция ОплатаДолгПостОсн	= Приход(ДолгПостОсн) Когда (КодОперации в спКодыОперацийОплаты);";
		КонецЕсли;

		Если фВзаимозачет = 1 Тогда //--- УМК Сандомирский В.Ю. (24.11.14) взаимозачет
			ТекстЗапроса = ТекстЗапроса+ "
				|КодОперацииПерезачет		= Регистр.ВзаиморасчетыПокупателей.КодОперации;
				|Функция ТекВзаимПриход 	= Приход(Долг) Когда (КодОперацииПерезачет 		= ПерезачетВзаиморасчетов);
				|Функция ТекВзаимРасход 	= Расход(Долг) Когда (КодОперацииПерезачет 		= ПерезачетВзаиморасчетов);
				|Функция ТекВзаимПриходОсн 	= Приход(ДолгОсн) Когда (КодОперацииПерезачет 	= ПерезачетВзаиморасчетов);
				|Функция ТекВзаимРасходОсн 	= Расход(ДолгОсн) Когда (КодОперацииПерезачет 	= ПерезачетВзаиморасчетов);
				|
				|КодОперацииПерезачетПос		= Регистр.ВзаиморасчетыПоставщиков.КодОперации;
				|Функция ТекВзаимПосПриход 		= Приход(ДолгПост) Когда (КодОперацииПерезачетПос = ПерезачетВзаиморасчетов);
				|Функция ТекВзаимПосРасход 		= Расход(ДолгПост) Когда (КодОперацииПерезачетПос = ПерезачетВзаиморасчетов);
				|Функция ТекВзаимПосПриходОсн 	= Приход(ДолгПостОсн) Когда (КодОперацииПерезачетПос = ПерезачетВзаиморасчетов);
				|Функция ТекВзаимПосРасходОсн 	= Расход(ДолгПостОсн) Когда (КодОперацииПерезачетПос = ПерезачетВзаиморасчетов);
				|			
				|";
		КонецЕсли;	
		
		Если фРасход = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция РасхДолг 		= Расход(Долг);
				|Функция РасхДолгОсн 	= Расход(ДолгОсн);
				|Функция РасхДолгПост 	= Расход(ДолгПост);
				|Функция РасхДолгПостОсн= Расход(ДолгПостОсн);";
		КонецЕсли;
			
		Если фВыделятьПросроченныйДолг = 1 Тогда    
			ТекстПросроченно = "
				|Функция ПросроченныйДолг 		= КонОст(Долг)			Когда(Просрочено(КредДокумент)=1);
				|Функция ПросроченныйДолгОсн 	= КонОст(ДолгОсн)		Когда(Просрочено(КредДокумент)=1);
				|Функция ПросроченныйДолгПост 	= КонОст(ДолгПост)		Когда(Просрочено(КредДокумент)=1);
				|Функция ПросроченныйДолгПостОсн= КонОст(ДолгПостОсн)	Когда(Просрочено(КредДокумент)=1);";
		Иначе
			ТекстПросроченно = "";
		КонецЕсли;

	Иначе // по покупателям или поставщикам

		Если (ВидОтчетаСтр = ВидОтчетаПос) или (ВидОтчетаСтр = ВидОтчетаПосР) Тогда
			Р = ?(ВидОтчетаСтр = ВидОтчетаПосР, "Р", "");
			ИмяРег="ВзаиморасчетыПоставщиков" + Р;
			Заголовок=?(Язык="у","Взаєморозрахунки з постачальниками","Взаиморасчеты с поставщиками") + ?(Р = "Р", " без б/н", "");
			Знак = -1;
		Иначе
			ИмяРег="ВзаиморасчетыПокупателей";
			Заголовок=?(Язык="у","Взаєморозрахунки з покупцями","Взаиморасчеты с покупателями");
			Знак = 1;
		КонецЕсли;

		ТекстЗапроса=ТекстЗапроса+"
			|Фирма			= Регистр."+ИмяРег+".Фирма;
			|Контрагент		= Регистр."+ИмяРег+".Контрагент;" + 
			?(УбратьПеременнуюЗапроса("Договор",Группировки, ВыбДоговор)=1,"","Договор		= Регистр."+ИмяРег+".Договор;") + "
			|НомерСтроки	= Регистр."+ИмяРег+".НомерСтроки;

			|Долг			= Регистр."+ИмяРег+".Долг;
			|ДолгОсн		= Регистр."+ИмяРег+".ДолгОсн;";

		Если фВСчетЗП = 1 Тогда
			ТекстЗапроса = ТекстЗапроса+ "
				|ТекДок = Регистр.ВзаиморасчетыПокупателей.ТекущийДокумент;
				|Функция ВСчетЗПДолг 	= Расход(Долг) когда ((ТекДок.Вид() = ""НачислениеБонуса"") ИЛИ (ТекДок.Вид() = ""РасходнаяНакладная"") ИЛИ (ТекДок.Вид() = ""ВозвратнаяНакладная""));
				|Функция ВПремия		= Расход(Долг) когда (ТекДок.Вид() = ""УМК_ПремииПоПланамПродажКонтрагенты"");
				|";
		КонецЕсли;
						
		Если фНачОст = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция НачДолг		= НачОст(Долг);
				|Функция НачДолгОсн 	= НачОст(ДолгОсн);";
		КонецЕсли;

		Если фКонОст = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция КонДолг		= КонОст(Долг);
				|Функция КонДолгОсн		= КонОст(ДолгОсн);";
		КонецЕсли;

		Если фПриход = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция ПрихДолг		= Приход(Долг);
				|Функция ПрихДолгОсн	= Приход(ДолгОсн);";
		КонецЕсли;

		Если фОплата = 1 Тогда    
			спКодыОперацийОплаты = СоздатьОбъект("СписокЗначений");
			спКодыОперацийОплаты.ДобавитьЗначение(АвансоваяОплата);
			спКодыОперацийОплаты.ДобавитьЗначение(ВозвратАвансовойОплаты);
			спКодыОперацийОплаты.ДобавитьЗначение(ПостОплата);
			спКодыОперацийОплаты.ДобавитьЗначение(ВозвратПостОплаты);

			ТекстЗапроса = ТекстЗапроса+
				"КодОперации	= Регистр.ВзаиморасчетыПоставщиков.КодОперации;
				|Функция ОплатаДолг		= Приход(Долг) Когда (КодОперации в спКодыОперацийОплаты);
				|Функция ОплатаДолгОсн	= Приход(ДолгОсн) Когда (КодОперации в спКодыОперацийОплаты);";
		КонецЕсли;

		Если фВзаимозачет = 1 Тогда //--- УМК Сандомирский В.Ю. (24.11.14) взаимозачет
			ТекстЗапроса = ТекстЗапроса+ "
				|КодОперацииПерезачет		= Регистр."+ИмяРег+".КодОперации;
				|Функция ТекВзаимПриход 		= Приход(Долг) Когда (КодОперацииПерезачет = ПерезачетВзаиморасчетов);
				|Функция ТекВзаимРасход 		= Расход(Долг) Когда (КодОперацииПерезачет = ПерезачетВзаиморасчетов);
				|Функция ТекВзаимПриходОсн 		= Приход(ДолгОсн) Когда (КодОперацииПерезачет = ПерезачетВзаиморасчетов);
				|Функция ТекВзаимРасходОсн 		= Расход(ДолгОсн) Когда (КодОперацииПерезачет = ПерезачетВзаиморасчетов);
				|
				|";
		КонецЕсли;			
		
		Если фРасход = 1 Тогда    
			ТекстЗапроса = ТекстЗапроса+
				"Функция РасхДолг		= Расход(Долг);
				|Функция РасхДолгОсн	= Расход(ДолгОсн);";
		КонецЕсли;

		Если фВыделятьПросроченныйДолг = 1 Тогда    
			ТекстПросроченно = "
				|Функция ПросроченныйДолг 		= КонОст(Долг)			Когда(Просрочено(КредДокумент)=1);
				|Функция ПросроченныйДолгОсн 	= КонОст(ДолгОсн)		Когда(Просрочено(КредДокумент)=1);";
		Иначе
			ТекстПросроченно = "";
		КонецЕсли;

	КонецЕсли;
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (Контрагент В (глГруппыДоступаКонтрагенты));";
	КонецЕсли;	
	
	Загол = "";

	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Контрагент", ВыбКонтрагент, "ВыбКонтрагент", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по контрагентам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Договор", ВыбДоговор, "ВыбДоговор", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по договорам. Отчет не сформирован.");
		Возврат;
	КонецЕсли;
	
	ТаблицаПериодов = СоздатьОбъект("ТаблицаЗначений");
	Периодичность = ПериодСтрока();
	Если Периодичность <> 0 Тогда
	    ТекстЗапросаПоПериодам = ТекстЗапроса+ "Группировка " + Периодичность + ";";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + ТекстПросроченно;

	ПечЗаголовокСтолбца = "";
	ТекстГруппировок 	= "";
	
	УстановитьГруппировкиЗапроса(ТекстГруппировок, ПечЗаголовокСтолбца);
	КоличествоГруппировок = СписокГруппировок.РазмерСписка();

	Если КоличествоГруппировок = 0 Тогда
		Предупреждение("Следует выбрать хотя бы одну группировку!");
		Возврат;
	КонецЕсли;
	
	Если КоличествоГруппировок > 7 Тогда
		Предупреждение("Нельзя сделать больше 7 группировок!",60);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ТекстГруппировок;
	Если Периодичность <> 0 Тогда
	    ТекстЗапросаПоПериодам = ТекстЗапросаПоПериодам + ТекстГруппировок;		
		Если ЗапросСПериодами.Выполнить(ТекстЗапросаПоПериодам)=0 Тогда
			Предупреждение("Запрос по периодам не выполнился!!!");
			Возврат;
		КонецЕсли;
		// Таблица с периодами
		глПолучитьТаблицуПериодов(ТаблицаПериодов,ЗапросСПериодами,Периодичность);
		ЗапросСПериодами.ВНачалоВыборки();
	КонецЕсли;
	
	Если Найти(ТекстЗапроса,"Условие (Договор в глУсловие2)") > 0 Тогда //--- УМК Сандомирский В.Ю. (10.10.14) вычисляем фильтр по пустому договору
	
		Если ТипЗначенияСтр(глУсловие2) = "СписокЗначений" Тогда
			
			Если глУсловие2.РазмерСписка() = 1 Тогда
			
				ТекСтр = "";
				глУсловие2.ПолучитьЗначение(1,ТекСтр);
	
				Если ТекСтр = "<...>" Тогда
								
						ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"Условие (Договор в глУсловие2)","Условие (ПустоеЗначение(Договор) = 1)");
								
				КонецЕсли;
					
			КонецЕсли;	
				
		КонецЕсли;		
				
	КонецЕсли;
	
	//// --- Технологически вывести текст запроса //--- УМК Сандомирский В.Ю. (10.10.14)
	//Текст=СоздатьОбъект("Текст");
	//Текст.ДобавитьСтроку(ТекстЗапроса);
	//Текст.Показать("Текст запроса ВЗАИМОРАСЧЕТЫ"); 
	//// ... Технологически вывести текст запроса
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Предупреждение("Запрос по кредиту не выполнился!");
		Возврат;
	КонецЕсли;  

	// обнуляем счетчик числа строк, выведенных в таблицу отчета
	глЧислоСтрок = 0;

	Таб.ВывестиСекцию("Кнопки|Наименование");
	Таб.ВывестиСекцию("Заголовок|Наименование");	
	глОживить(Таб.ВысотаСекции("Заголовок"));
	
	Расшифровка.Установить("Обновить",0);
	Расшифровка.Установить("ТаблицаМФ", 0);
	
	ВывестиШапку();
	                         
	// ВЫВОД ГРУППИРОВОК ЗАПРОСА
	ВывестиГруппировки();
	
	// выводим итоги
	ПечатьСтроки(0,"","Итого",?(Язык="у", "Всього:", "Всего:"));

	Если фДиаграмма=1 Тогда
		Таб.ВывестиСекцию("Диаграмма");
	КонецЕсли;

	Если (Периодичность <> 0) И (фДиаграммаПоПериодам=1) Тогда
		Таб.ВывестиСекцию("ДиаграммаПоПериодам");
	КонецЕсли;
    
	ФиксКвоСтрок = Таб.ВысотаСекции("Кнопки")+Таб.ВысотаСекции("Заголовок")+?(Периодичность <> 0,Таб.ВысотаСекции("ШапкаПериод"),0)+Таб.ВысотаСекции("Шапка");
	ФиксКвоКолон = Таб.ШиринаСекции("Наименование");
	Таб.Опции(0, 0, ФиксКвоСтрок, ФиксКвоКолон, "ПарамПечатиУпрВзаиморасчеты", "РазмОкнаУпрВзаиморасчеты");
	Таб.ОбластьПечати(Таб.ВысотаСекции("Кнопки")+1);
	
	// Вывод заполненной формы
	Таб.ПараметрыСтраницы(Ориентация,,,,,,,,,Автомасштаб);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);

    Если ВидОтчетаСтр=ВидОтчетаОбщ Тогда
    	ТекстЗагол = "Взаиморасчеты с клиентами"
	ИначеЕсли ВидОтчетаСтр=ВидОтчетаПок Тогда
		ТекстЗагол = "Взаиморасчеты с покупателями"
	Иначе
		Если ВидОтчетаСтр = ВидОтчетаПосР Тогда
		    ТекстЗагол = "Взаиморасчеты с поставщиками без б/н"
		Иначе
			ТекстЗагол = "Взаиморасчеты с поставщиками"
		КонецЕсли;		
    КонецЕсли;

	Таб.Показать("ПЕЧАТЬ: "+ТекстЗагол+": ("+ПериодСтр(Дата1, Дата2)+?(ПустоеЗначение(ВыбФирма) = 1, "", ", "+ВыбФирма)+")","");
	
	Если (Обновить = 2) Или (ЗакрытьДиалог=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры // Сформировать()

// ===============================
Процедура ПредопределенныеНастройки()
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("Движения",		"Анализ движений");
	Меню.ДобавитьЗначение("Месяцы",			"По месяцам");
	Значение = "";
	Если Меню.ВыбратьЗначение(Значение, , , , 1) = 0 Тогда
		Возврат;
	КонецЕсли;

	СписокПериодов.ТекущаяСтрока(1);  

	фБезГрупп  	= 2;
	фДиаграмма 	= 0;
	фНачОст		= 1;
	фПриход		= 1;
	фРасход		= 1;
	фКонОст		= 1;
	
	ДнПросроченногоДолга=7;

	Группировки.УдалитьВсе();
	
	Если Значение = "Движения" Тогда

		Группировки.ДобавитьЗначение("Контрагент",		"Контрагент");
		Группировки.ДобавитьЗначение("Договор", 		"Договор");           
		Группировки.ДобавитьЗначение("Документ",		"Документ движения");
		
		Группировки. Пометка(1,1);
		Группировки. Пометка(2,0);
		Группировки. Пометка(3,1);
		
	ИначеЕсли Значение = "Месяцы" Тогда

		Группировки.ДобавитьЗначение("Контрагент",		"Контрагент");
		Группировки.ДобавитьЗначение("Договор", 		"Договор");           
		Группировки.ДобавитьЗначение("Документ", 		"Документ движения");
		
		Группировки. Пометка(1,1);
		Группировки. Пометка(2,0);
		Группировки. Пометка(3,0);
		
		СписокПериодов.ТекущаяСтрока(СписокПериодов.НайтиЗначение("Месяц"));  

	КонецЕсли;

	Группировки.ТекущаяСтрока(1);  
	ДоступностьЭлементов(1);

КонецПроцедуры // КнопкаНастройкиГруппировок

// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение="")	
	// закладки
    Если Номер=1 Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	Иначе     
		Форма.ИспользоватьСлой("Шапка,МФ,Подвал");
	КонецЕсли;      
	ПерерисовкаНазванийЗакладок();
	ДоступностьЭлементов(1);
КонецПроцедуры	// ПриВыбореЗакладки
                                       
// ===============================
Процедура ПриНачалеВыбораЗначения(Элемент,Флаг)	// Предопределенная процедура
	Если Элемент="ВыбДоговор" Тогда	// выбираем договор
		Флаг=0;
		Если НазваниеНабораПрав() <> "УдаленныйДоступ" Тогда
			Фрм = СоздатьОбъект("СписокЗначений");
			Фрм.ДобавитьЗначение("ДоговораКонтрагентов","ГрафаОтбора");
			Фрм.ДобавитьЗначение(ВыбКонтрагент,"Контрагент");
			ОткрытьПодбор("Журнал.ПолныйЖурнал","ДляВыбораДоговоровИСчетов",Фрм,0,ВыбДоговор);			
		Иначе
			Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда
				СписД = СоздатьОбъект("СписокЗначений");
				ДокОт = СоздатьОбъект("Документ");
				ДокОт.ВыбратьПоЗначению(,, "ДоговораКонтрагентов", ВыбКонтрагент);
				Пока ДокОт.ПолучитьДокумент() = 1 Цикл
					Если ДокОт.ПометкаУдаления() = 0 Тогда
						СписД.ДобавитьЗначение(ДокОт.ТекущийДокумент());
					КонецЕсли;
				КонецЦикла;
				СписД.ВыбратьЗначение(ВыбДоговор, ,,,2);
			Иначе
				Предупреждение("Нужно выбрать контрагента");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	           
КонецПроцедуры	// ПриНачалеВыбораЗначения

// ===============================
Процедура ПриОткрытии()	
	
	Если НазваниеНабораПрав() = "Заказ" Тогда
		ВидОтчета.ТекущаяСтрока(3);
		Форма.ВидОтчета.Доступность(0);
		спрК = СоздатьОбъект("Справочник.Контрагенты");
		спрК.НайтиПоНаименованию("Сотрудники");
		ВыбКонтрагент = спрК.ТекущийЭлемент();
		Форма.ВыбКонтрагент.Доступность(0);
		Форма.кХВыбКонтрагент.Доступность(0);
	ИначеЕсли (НазваниеНабораПрав() = "ПрочиеЗаказ") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") Тогда
		ВидОтчета.ТекущаяСтрока(3);
		Форма.ВидОтчета.Доступность(0);		
	Иначе
		Если ВидОтчета.ТекущаяСтрока() = 0 Тогда
		    ВидОтчета.ТекущаяСтрока(1);
		КонецЕсли;
	КонецЕсли;
	
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Форма.фОплата.Видимость(0);
		Форма.фВСчетЗП.Видимость(0);
		Форма.фВзаимозачет.Видимость(0); //--- УМК Сандомирский В.Ю. (24.11.14) взаимозачет
	КонецЕсли;
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		Дата1 		= глРасшифровка.Получить("Дата1");
		Дата2		= глРасшифровка.Получить("Дата2");

		ВыбФирма		= глРасшифровка.Получить("ВыбФирма");
		ВыбКонтрагент	= глРасшифровка.Получить("ВыбКонтрагент");
		ВыбДоговор		= глРасшифровка.Получить("ВыбДоговор");
		ДокНачала			= глРасшифровка.Получить("ДокНачала");
		ДокКонца			= глРасшифровка.Получить("ДокКонца");		
		фКЦ = глРасшифровка.Получить("фКЦ");
		фСумма = глРасшифровка.Получить("фСумма");
		фДатаСверки = глРасшифровка.Получить("фДатаСверки");
		фСуммаНал = глРасшифровка.Получить("фСуммаНал");
		фПрим = глРасшифровка.Получить("фПрим");
		фГлубинаКредита = глРасшифровка.Получить("фГлубинаКредита");
		фНеВыводитьНеЗначимые = глРасшифровка.Получить("НеВыводитьНеЗначимые");
		
		фПримДоговор = глРасшифровка.Получить("фПримДоговор"); //--- УМК Сандомирский В.Ю. (03.09.14) к договору лепить его примечание
		
		фВСчетЗП	 = глРасшифровка.Получить("фВСчетЗП"); 		//--- УМК Сандомирский В.Ю. (05.12.14) 
		фВзаимозачет = глРасшифровка.Получить("фВзаимозачет"); 	//--- УМК Сандомирский В.Ю. (05.12.14) 
		
		фКассовыеВедомости = глРасшифровка.Получить("фКассовыеВедомости"); 	//--- УМК Сандомирский В.Ю. (11.12.14) 
		фТранспорт		   = глРасшифровка.Получить("фТранспорт"); 			//--- УМК Сандомирский В.Ю. (11.12.14) 
		
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;
		
		фБазоваяВалюта 				= глРасшифровка.Получить("фБазоваяВалюта");
		фВыделятьПросроченныйДолг	= глРасшифровка.Получить("фВыделятьПросроченныйДолг");
		ДнПросроченногоДолга 		= глРасшифровка.Получить("ДнПросроченногоДолга");
		фДосье					 	= глРасшифровка.Получить("фДосье");
		ВидОтчета.ТекущаяСтрока(глРасшифровка.Получить("ВидОтчета"));

		фДиаграмма 				= глРасшифровка.Получить("фДиаграмма");
		фОграничитьЧислоТочек 	= глРасшифровка.Получить("фОграничитьЧислоТочек");
		МаксКоличествоТочек 	= глРасшифровка.Получить("МаксКоличествоТочек");

		фДиаграммаПоПериодам	= глРасшифровка.Получить("фДиаграммаПоПериодам");
		СписокПериодов.ТекущаяСтрока(глРасшифровка.Получить("СписокПериодов"));

		фНачОст	= глРасшифровка.Получить("фНачОст");
		фКонОст	= глРасшифровка.Получить("фКонОст");
		фПриход	= глРасшифровка.Получить("фПриход");
		фОплата	= глРасшифровка.Получить("фОплата");
		фВСчетЗП= глРасшифровка.Получить("фВСчетЗП");
		фРасход	= глРасшифровка.Получить("фРасход");
		Ориентация = глРасшифровка.Получить("Ориентация");
		Автомасштаб = глРасшифровка.Получить("Автомасшаб");
		
		фВзаимозачет = глРасшифровка.Получить("фВзаимозачет"); //--- УМК Сандомирский В.Ю. (24.11.14) взаимозачет
		
		фБезГрупп = глРасшифровка.Получить("фБезГрупп");
		Если ТипЗначенияСтр(глРасшифровка.Получить("Группировки"))="СписокЗначений" Тогда
			глРасшифровка.Получить("Группировки").Выгрузить(Группировки);
		КонецЕсли;
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;            
	
	// будем отслеживать только реальные изменения этих реквизитов
	Форма.ВидОтчета.	 ВыполнятьФормулуТолькоПриИзменении(1); 
	Форма.СписокПериодов.ВыполнятьФормулуТолькоПриИзменении(1); 

	УстКолонкиОтчета();

	ТаблицаМФ.ВидимостьКолонки("Тип",				0);
	ТаблицаМФ.ВидимостьКолонки("Вид",				0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",	0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",				0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",		0);
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	                                                                                
	ПриВыбореЗакладки(1);
	Если фБезГрупп = 0 Тогда
		фБезГрупп = 2;
	КонецЕсли;
	
	Форма.фГлубинаКредита.Видимость(глПользователь.фДопНастройкиОтчетов);
	
КонецПроцедуры		// ПриОткрытии()       

// ===============================
Процедура ВводНового()
	// эта предопределенная процедура выполняется при восстановлении настройки
	ТекСтрокаВТаблицеМФ="";
	ПриВыбореЗакладки(1);
КонецПроцедуры // ВводНового()   

// ===============================
Процедура ОбработкаПодбора(Значение)  

	ЭлементДиалога = Форма.АктивныйЭлемент();
	
	Если ЭлементДиалога = "ВыбДоговор" Тогда	// выбираем договор
		Возврат;
	КонецЕсли;

	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;	
КонецПроцедуры  // ОбработкаПодбора

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("Взаиморасчеты_Ориентация", Ориентация);
	СохранитьЗначение("Взаиморасчеты_Автомасштаб", Автомасштаб);
КонецПроцедуры // ПриЗакрытии

// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

Дата2=ПолучитьДатуТА();
Дата1=глВосстановитьЗначение(,"ОсновнаяДатаНачалаОтчета");
Если ПустоеЗначение(Дата1)=0 Тогда
	Дата1=НачМесяца(Дата1);
КонецЕсли;         
                                
// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");

спДоговораЗаказы = СоздатьОбъект("СписокЗначений");
спДоговораЗаказы.ДобавитьЗначение("Договор");
спДоговораЗаказы.ДобавитьЗначение("Заказ");
//                  			тип			вид						переменная  	название
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Контрагенты",			"Контрагент",	"По контрагентам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",	спДоговораЗаказы,		"Договор",		"По договорам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ШкалаСтавок",			"СтавкаНДС",	"По ставкам НДС");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Валюты",				"Валюта",		"По валютам долга");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",		"Контрагент",	"По категориям контрагентов");

ТекСтрокаВТаблицеМФ="";

Группировки.ДобавитьЗначение("Контрагент",		"Контрагент");
Группировки.ДобавитьЗначение("Договор", 		"Договор");           
Группировки.ДобавитьЗначение("Документ",		"Документ движения");
Группировки.ТекущаяСтрока(1);

// отметки по умолчанию
Группировки.Пометка(1,1);
Группировки.Пометка(2,0);
Группировки.Пометка(3,0);

// список украинских названий группировок для построения шапки отчета
УкрГруппировки = СоздатьОбъект("СписокЗначений");
УкрГруппировки.ДобавитьЗначение("Контрагент",	"Контрагент");
УкрГруппировки.ДобавитьЗначение("Договор", 		"Договір");           
УкрГруппировки.ДобавитьЗначение("Документ",	 	"Документ рухів");

// для расшифровки отчета по движениям
ГруппировкиПоДвижениям = СоздатьОбъект("СписокЗначений"); 
ГруппировкиПоДвижениям.ДобавитьЗначение("Документ",		"Документ движения");
ГруппировкиПоДвижениям.Пометка(1,1);

// инициализация списков диалога
СписокПериодов.УдалитьВсе();
СписокПериодов.ДобавитьЗначение("Общий","Общие итоги");
СписокПериодов.ДобавитьЗначение("День","День");
СписокПериодов.ДобавитьЗначение("Неделя","Неделя");
СписокПериодов.ДобавитьЗначение("Месяц","Месяц");  
СписокПериодов.ДобавитьЗначение("Квартал","Квартал");
СписокПериодов.ДобавитьЗначение("Год","Год");
СписокПериодов.ТекущаяСтрока(1);

ВидОтчетаОбщ = "ОбщиеВзаиморасчеты";
ВидОтчетаПос = "Поставщики";
ВидОтчетаПосР = "ПоставщикиР";
ВидОтчетаПок = "Покупатели";

ВидОтчета.УдалитьВсе();
ВидОтчета.ДобавитьЗначение(ВидОтчетаОбщ, "Общие взаиморасчеты"); 
ВидОтчета.ДобавитьЗначение(ВидОтчетаПос, "По поставщикам");
ВидОтчета.ДобавитьЗначение(ВидОтчетаПок, "По покупателям");
ВидОтчета.ДобавитьЗначение(ВидОтчетаПосР, "По поставщикам нал");

// расставляем флаги и значения
фБезГрупп  	= 2;
фДиаграмма 	= 0;
фНачОст		= 1;
фПриход		= 1;
фРасход		= 1;
фКонОст		= 1;
Ориентация = ВосстановитьЗначение("Взаиморасчеты_Ориентация");
Автомасштаб = ВосстановитьЗначение("Взаиморасчеты_Автомасштаб");
Если Ориентация = 0 Тогда
	Ориентация = 2;
КонецЕсли;


ДнПросроченногоДолга=7;
