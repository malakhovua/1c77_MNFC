Перем Расшифровка;
Перем Таб;

//======================================================================
Функция ОписаниеДоговора(Дог)
	Если фНазваниеДог = 1 Тогда
		Если ПустоеЗначение(Дог) = 0 Тогда
			Если СокрЛП(Дог.НазваниеДоговора) <> "" Тогда
				Возврат Дог.НазваниеДоговора;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Строка(Дог);
КонецФункции // ОписаниеДоговора

//======================================================================
Процедура ИзмПараметрыР()
	Если фПараметрыР = 1 Тогда
		Для Инд = 1 По списКонтр.РазмерСписка() Цикл
			К = списКонтр.ПолучитьЗначение(Инд);
			Если К.ЭтоГруппа() = 0 Тогда
				ГлубинаК = ?(фПоставщики = 1, К.ГлубинаКредитаПоставщика.Получить(КонДата), К.Глубина.Получить(КонДата));
				ДниОплаты = К.ДниОплаты;
				Для инд = 1 По 7 Цикл
					Чис = Число(Сред(ДниОплаты, Инд, 1));
					Если Инд = 1 Тогда
					    ф1 = Чис;
					ИначеЕсли Инд = 2 Тогда
					    ф2 = Чис;
					ИначеЕсли Инд = 3 Тогда
					    ф3 = Чис;
					ИначеЕсли Инд = 4 Тогда
					    ф4 = Чис;
					ИначеЕсли Инд = 5 Тогда
					    ф5 = Чис;
					ИначеЕсли Инд = 6 Тогда
					    ф6 = Чис;
					ИначеЕсли Инд = 7 Тогда
					    ф7 = Чис;
					КонецЕсли;
				КонецЦикла;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ИзмПараметрыР()

//======================================================================
Процедура ПолучитьСуммуПросроченногоДолгаКонтрагента(Контр, ДолгКонОст, ТЗДолг = 0, КонДата, фВсе, МаксДнейОтгрузки = 0, ГлубинаПоУмолчанию = -1, Поставщик = 0, Договор) Экспорт
Перем Мас[7];	

	Если ТипЗначенияСтр(ТЗДолг)	<> "ТаблицаЗначений" Тогда
		ТЗДолг = СоздатьОбъект("ТаблицаЗначений");
		ТЗДолг.НоваяКолонка("Док", "Документ");
		ТЗДолг.НоваяКолонка("СуммаП", "Число", 15, 2);
		ТЗДолг.НоваяКолонка("Сумма", "Число", 15, 2);
		ТЗДолг.НоваяКолонка("СуммаДок", "Число", 15, 2);
		ТЗДолг.НоваяКолонка("Глубина", "Число");
		ТЗДолг.НоваяКолонка("МаксДатаОпл", "Дата");		
	КонецЕсли;

	Если ДолгКонОст < 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ГлубинаПоУмолчанию = -1 Тогда
		ГлубинаПоУмолчанию = Константа.ГлубинаПоУмолчанию;
	КонецЕсли;
	Если фПараметрыР = 1 Тогда
		Глубина = ГлубинаК;
		Для Инд = 1 По 7 Цикл
			Мас[Инд] = Число(Шаблон("[ф" + Строка(Инд) + "]"));
		КонецЦикла;				
	Иначе
		Глубина = Контр.ГлубинаКредитаПоставщика.Получить(КонДата);	
		//Если Глубина = 0 Тогда
		//	Глубина = ГлубинаПоУмолчанию;
		//КонецЕсли;
		ДниОплаты = Контр.ДниОплаты;
		Для Инд = 1 По СтрДлина(ДниОплаты) Цикл
			Мас[Инд] = Число(Сред(ДниОплаты, Инд, 1));
		КонецЦикла;		
	КонецЕсли;
	
	
	ТЗДолг.УдалитьСтроки();
	ОстСумма = ДолгКонОст;
	Док = СоздатьОбъект("Документ");
	Док.УстановитьФильтр(1, 0);
	Док.ОбратныйПорядок(1);
	Док.ВыбратьПоЗначению(,КонДата, "ВсеДокументыПрихода", Контр);
	//Рег = СоздатьОбъект("Регистр.Взаиморасчеты" + ?(Поставщик = 0, "Покупателей", "Поставщиков"));
	//Рег.УстановитьЗначениеФильтра("Контрагент", Контр);
	//Рег.ВыбратьДвижения(,, "Контрагент");
	СписДнейОтгрузки = СоздатьОбъект("СписокЗначений");
	МаксДнейОтгрузки = Контр.ДнейОтгрузки;
	НДатаДолга = КонДата - Глубина;

	//Пока (Рег.ПолучитьДвижение() = 1) И (ОстСумма > 0) Цикл
	//	Если (?(Поставщик = 0, Рег.Приход, Рег.Расход) = 1) И (Рег.Долг > 0) Тогда
	//		СуммаДок = Рег.Долг;
	//		Док = Рег.ТекущийДокумент();
	//	Иначе
	//		Продолжить;
	//	КонецЕсли;
	Пока (Док.ПолучитьДокумент() = 1) и (ОстСумма > 0) Цикл
		Если фДоговор = 1 Тогда
			Если (Док.Договор <> Договор) ИЛИ ((ПустоеЗначение(Док.Договор) = 0) И (ПустоеЗначение(Договор) = 1)) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Если Док.Вид() = "ВводОстатковКредита" Тогда
			Если (Док.ВидКонтрагента <> Перечисление.ВидыКлиентов.Поставщик) ИЛИ (Док.ФлагОтгрузки <> 1) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		ТолькоТара = 1;
		Попытка
			Если Док.ВидТары = Перечисление.ВидыТары.Залоговая Тогда
				Док.ВыбратьСтроки();
				Пока Док.ПолучитьСтроку() = 1 Цикл
					Если Док.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара Тогда
						ТолькоТара = 0;						    
					КонецЕсли;
				КонецЦикла;
			Иначе
				ТолькоТара = 0;
			КонецЕсли;			
		Исключение
			ТолькоТара = 0;
		КонецПопытки;
		Если ТолькоТара = 1 Тогда
			Продолжить;
		КонецЕсли;

		СуммаДок = Док.Итог("СуммаСНДС");
		СуммаДолгаДок = Мин(ОстСумма, СуммаДок);
		Если Док.Вид() = "ВозвратПоставщику" Тогда
//			ОстСумма = ОстСумма + СуммаДок;
			СуммаДолгаДок = -СуммаДок;
		КонецЕсли;
		
		МаксДатаОпл = Док.ДатаДок + Глубина;
		ДеньНедели = НомерДняНедели(МаксДатаОпл);
		КвоДнейПлюс = 0;
		ЕстьДень = 0;
		Если СписДнейОтгрузки.НайтиЗначение(Док.ДатаДок) = 0 Тогда
			СписДнейОтгрузки.ДобавитьЗначение(Док.ДатаДок);
		КонецЕсли;
		
		// теперь посмотрим, по каким дня идёт оплата. Вначале едем от дня недели предполагаемой
		// даты оплаты до воскр. Если день оплаты не найден, идём от понедельника до дня недели
		
		Для Инд = ДеньНедели По 7 Цикл
			Если Мас[Инд] = 0 Тогда
				КвоДнейПлюс=КвоДнейПлюс+1;
			Иначе
				ЕстьДень = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьДень = 0 Тогда
			Для Инд = 1 По ДеньНедели - 1 Цикл
				Если Мас[Инд] = 0 Тогда
					КвоДнейПлюс=КвоДнейПлюс+1;
				Иначе
					ЕстьДень = 1;
					Прервать;
				КонецЕсли;						
			КонецЦикла;
		КонецЕсли;
		
		Если ЕстьДень = 1 Тогда
			МаксДатаОпл = МаксДатаОпл + КвоДнейПлюс;
		КонецЕсли;
		
		Если (МаксДатаОпл < КонДата) или (фВсе = 1) ИЛИ ((МаксДнейОтгрузки <> 0) И (СписДнейОтгрузки.РазмерСписка() > МаксДнейОтгрузки)) Тогда
			ТЗДолг.НоваяСтрока();
			ТЗДолг.Док = Док.ТекущийДокумент();
			Если (МаксДатаОпл < КонДата) ИЛИ ((МаксДнейОтгрузки <> 0) И (СписДнейОтгрузки.РазмерСписка() > МаксДнейОтгрузки)) Тогда
				ТЗДолг.СуммаП = СуммаДолгаДок;
			КонецЕсли;
			ТЗДолг.Сумма = СуммаДолгаДок;
			ТЗДолг.Глубина = Глубина;
			ТЗДолг.МаксДатаОпл = МаксДатаОпл;
			ТЗДолг.СуммаДок = СуммаДок * ?(Док.Вид() = "ВозвратПоставщику", -1, 1);
		КонецЕсли;
		
		ОстСумма = ОстСумма - СуммаДолгаДок;
	КонецЦикла;
	
КонецПроцедуры // 

Функция СтрПробелов(Уровень)
	Стр = "";
	Для Инд = 1 По Уровень-1 Цикл
		Стр = Стр + "  ";
	КонецЦикла;
	
	Возврат Стр;
КонецФункции

//======================================================================
Процедура ОбработатьДолг(Запрос, ТЗДолг, ГлубинаПоУмолчанию, СписНВыв, ТЗВыв, ИтСуммаДолга, ИтСуммаДок)
//		Контр = Запрос.Контрагент;
	ДолгКонОст = ?(фПоставщики = 1, -Запрос.ДолгКонОст, Запрос.ДолгКонОст);
	ДниОплаты = "";
	Если фПараметрыР = 1 Тогда
		Для Инд = 1 По 7 Цикл
			ДниОплаты = ДниОплаты + Шаблон("[ф" + Строка(Инд) + "]");
		КонецЦикла;			
	КонецЕсли;
	
	Если ДолгКонОст > 0 Тогда
		Контр = Запрос.Контрагент;
		МаксДнейОтгрузки = 0;
		Если фПоставщики = 1 Тогда
			ПолучитьСуммуПросроченногоДолгаКонтрагента(Контр, ДолгКонОст, ТЗДолг, КонДата, фВсе, МаксДнейОтгрузки, ГлубинаПоУмолчанию, фПоставщики, ?(фДоговор = 1, Запрос.Договор, ""));
		Иначе
			глПолучитьСуммуПросроченногоДолгаКонтрагента(Контр, ДолгКонОст, ТЗДолг, КонДата, фВсе, МаксДнейОтгрузки, ?(фПараметрыР = 1, ГлубинаК, ГлубинаПоУмолчанию), фПоставщики, ?(фДоговор = 1, Запрос.Договор, ""), фДоговор, ДниОплаты);
		КонецЕсли;
		СуммаДолга = ТЗДолг.Итог("СуммаП");
		Если СуммаДолга = 0 Тогда
			Возврат;
		КонецЕсли;
		
		// проверяем, нет ли контрагента среди не выведенных групп
		Инд = 1;
		Пока Инд <= СписНВыв.РазмерСписка() Цикл
			Группа = СписНВыв.ПолучитьЗначение(Инд);
			Если Контр.ПринадлежитГруппе(Группа) = 1 Тогда
				Если фОтступ = 1 Тогда						
					Пробелы = СтрПробелов(Группа.Уровень());
				КонецЕсли;
				Таб.ВывестиСекцию("Группа" + ?(фСуммыДок = 0, "|Основная",""));
				ТЗВыв.НоваяСтрока();
				ТЗВыв.Группа = Группа;
				ТЗВыв.НомерСтр = Таб.ВысотаТаблицы();
				СписНВыв.УдалитьЗначение(Инд);
			Иначе
				Инд=Инд+1;
			КонецЕсли;
		КонецЦикла;
		// теперь изменим сумму у вышестоящих групп
		ТЗВыв.ВыбратьСтроки();
		Пока ТЗВыв.ПолучитьСтроку() = 1 Цикл
			Если Контр.ПринадлежитГруппе(ТЗВыв.Группа) = 1 Тогда
				ТЗВыв.Сумма=ТЗВыв.Сумма+СуммаДолга;
			КонецЕсли;
		КонецЦикла;
		
		Если фОтступ = 1 Тогда
			Пробелы = СтрПробелов(Контр.Уровень());
		КонецЕсли;
		
		Таб.ВывестиСекцию("Контрагент" + ?(фСуммыДок = 0, "|Основная",""));
		ИтСуммаДолга = ИтСуммаДолга + ТЗДолг.Итог("СуммаП");
		ИтСуммаДок = ИтСуммаДок + ТЗДолг.Итог("СуммаДок");
		
		Если фРН = 1 Тогда
			ТЗДолг.ВыбратьСтроки();
			Пока ТЗДолг.ПолучитьСтроку() = 1 Цикл
				Таб.ВывестиСекцию("РН" + ?(фСуммыДок = 0, "|Основная",""));
				Если (фВсе = 1) и (ТЗДолг.СуммаП <> 0) Тогда
					Таб.Область(Таб.ВысотаТаблицы(), 2, Таб.ВысотаТаблицы(), Таб.ШиринаТаблицы()).ЦветФона(255,255,204);
				КонецЕсли;
			КонецЦикла;				
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ОбработатьДолг

//*******************************************
Процедура Сформировать()
	СтрФ = "";
	глФильтры(СтрФ, списКонтр, "Контрагенты", фНЕ, "ПолнНаименование");
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ПросроченныеДолги");
	Расшифровка.Установить("фРН", фРН);
	Расшифровка.Установить("фВсе", фВсе);
	Расшифровка.Установить("КонДата", КонДата);
	Расшифровка.Установить("списКонтр", списКонтр);
	Расшифровка.Установить("фГруппы", фГруппы);
	Расшифровка.Установить("фОтступ", фОтступ);
	Расшифровка.Установить("фНЕ", фНЕ);
	// алгоритм такой. анализируем долги контрагентов
	// откручиваем долги назад, пока сумму долга не покроет расходных накладных.
	// по каждой накладной смотрим, когда она должна была быть оплачена
	// Если дата оплаты накладной в будущем, она не просрочена
	// если в прошлом, то нужно проанализировать когда была накладная. Если она например была в пятница, 
	// и по глубине должна оплачиваться в субботу, то она не будет просроченной, если контрагент привозит деньги по вторникам

	ДатаЗ = Мин(ПолучитьДатуТА(), КонДата);	
	ТекстЗ = "//{{ЗАПРОС(Сформировать)
	|Период с ДатаЗ по ДатаЗ;
	|Контрагент = Регистр.ВзаиморасчетыПокупателей.Контрагент;" + 
	?(фДоговор = 1, "
	|Договор = Регистр.ВзаиморасчетыПокупателей.Договор;", "") + "
	|Долг = Регистр.ВзаиморасчетыПокупателей.Долг;
	|Функция ДолгКонОст = КонОст(Долг);
	|Группировка Контрагент упорядочить по Контрагент.Наименование" + ?(фГруппы = 0, " без групп","") + ";" + 
	?(фДоговор = 1,"
	|Группировка Договор;","") + "
	|Условие " + ?(фНЕ = 1, "(НЕ (Контрагент в списКонтр))", "(Контрагент в списКонтр)") + ";
	|";//}}ЗАПРОС
	Если фПоставщики = 1 Тогда
		ТекстЗ = СтрЗаменить(ТекстЗ, "ВзаиморасчетыПокупателей", "ВзаиморасчетыПоставщиков");
	КонецЕсли;
	
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		ТекстЗ = ТекстЗ + "
		|Условие (Контрагент В (глГруппыДоступаКонтрагенты));";
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") или (глФлагРасшифровки = 0)  Тогда
		Таб = СоздатьОбъект("Таблица");
	КонецЕсли;	
	Таб.ИсходнаяТаблица("Таблица");
	Таб.Очистить();
	Таб.ВывестиСекцию("Шапка" + ?(фСуммыДок = 0, "|Основная",""));
	Таб.Опции(0,0, Таб.ВысотаТаблицы());
	
	ТЗВыв = СоздатьОбъект("ТаблицаЗначений");
	ТЗВыв.НоваяКолонка("Группа", "Справочник.Контрагенты");
	ТЗВыв.НоваяКолонка("НомерСтр", "Число");
	ТЗВыв.НоваяКолонка("Сумма", "Число");
	СписНВыв = СоздатьОбъект("СписокЗначений");
	
	ТЗДолг = СоздатьОбъект("ТаблицаЗначений");
	ТЗДолг.НоваяКолонка("Док", "Документ");
	ТЗДолг.НоваяКолонка("СуммаП", "Число", 12, 2);
	ТЗДолг.НоваяКолонка("Сумма", "Число", 12, 2);
	ТЗДолг.НоваяКолонка("Глубина", "Число");
	ТЗДолг.НоваяКолонка("МаксДатаОпл", "Дата");
	ТЗДолг.НоваяКолонка("СуммаДок", "Число", 15, 2);
	ИтСуммаДолга = 0; ИтСуммаДок = 0;
	ГлубинаПоУмолчанию = Константа.ГлубинаПоУмолчанию;
		
	Пока Запрос.Группировка(1) = 1 Цикл	
		Пробелы = "";
		Если Запрос.ЭтоГруппа("Контрагент") = 1 Тогда
			Стр = 0;
			Если ТЗВыв.НайтиЗначение(Запрос.Контрагент, Стр, "Группа") = 0 Тогда
				СписНВыв.ДобавитьЗначение(Запрос.Контрагент);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		Если фДоговор = 0 Тогда
			ОбработатьДолг(Запрос, ТЗДолг, ГлубинаПоУмолчанию, СписНВыв, ТЗВыв, ИтСуммаДолга, ИтСуммаДок);
		Иначе
			Пока Запрос.Группировка(2) = 1 Цикл
				ОбработатьДолг(Запрос, ТЗДолг, ГлубинаПоУмолчанию, СписНВыв, ТЗВыв, ИтСуммаДолга, ИтСуммаДок);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ТЗВыв.ВыбратьСтроки();
	Пока ТЗВыв.ПолучитьСтроку() = 1 Цикл		
		Таб.Область(ТЗВыв.НомерСтр, 4, ТЗВыв.НомерСтр, 4).Текст = Формат(ТЗВыв.Сумма, "Ч012.2");
	КонецЦикла;
	
	Таб.ВывестиСекцию("Дно" + ?(фСуммыДок = 0, "|Основная",""));
	Таб.ОбластьПечати(2);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Показать("Просроч. долги");
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	КФормы = 0;
	ИмСпис = ИмСп;
	ОткрытьПодбор(НазваниеОбъекта, "ФормаСписка", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

Процедура ДобавитьПозициюВСписок(Элт, Спис, Наим)
	Если Спис.Принадлежит(Элт) = 0 Тогда
	    Спис.ДобавитьЗначение(Элт, Наим);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт, КонтФормы)
	Если Элт.Вид() = "Контрагенты" Тогда
		ДобавитьПозициюВСписок(Элт, списКонтр, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	Если глФлагРасшифровки = 1 Тогда
		Закрыть = 1;
		Обновить = глОбновить;
	   	КонДата = глРасшифровка.Получить("КонДата");
	   	фРН = глРасшифровка.Получить("фРН");
	   	фВсе = глРасшифровка.Получить("фВсе");
	   	глРасшифровка.Получить("списКонтр").Выгрузить(списКонтр);
	   	фОтступ = глРасшифровка.Получить("фОтступ");
	   	фГруппы = глРасшифровка.Получить("фГруппы");
	   	фНЕ = глРасшифровка.Получить("фНЕ");
	   	
	   	Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//-----------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

Процедура ИзмКН(Чис)
	// заглушка для флажков
КонецПроцедуры

КонДата = ТекущаяДата();