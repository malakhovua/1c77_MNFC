Перем Т;		
Перем Обновить;
Перем Расшифровка; 
Перем РегВза;          
Перем ВыбДокумент;
// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Заг;
Перем Запр, печСНДС_НУ, печНДС_НУ, печВыписаноСНДС, печВыписаноНДС, печОсталосьСНДС, печОсталосьНДС;

Перем Зеленый, Красный; // цвета для раскраски секций

// ===============================
Функция ФРМ3(ЧислЗнач)
    Возврат СокрЛ(Формат(ЧислЗнач,"Ч014.2"));
КонецФункции
                               
// ===============================
Функция ПолучитьКлюч(тбИтоги,квоПолей)
	Ключ = "";
	Для Ном = 1 по квоПолей Цикл
		ДобавкаКлюча = ЗначениеВСтроку(тбИтоги.ПолучитьЗначение(тбИтоги.НомерСтроки,Ном));
		Если ПустоеЗначение(ДобавкаКлюча) = 1 Тогда
			Ключ = Ключ + "#";
		Иначе
			Ключ = Ключ + ДобавкаКлюча;
		КонецЕсли;
	КонецЦикла;
	Возврат Ключ;
КонецФункции

// ===============================
Процедура ДобавитьГрупировки(тбВход,КолвоПолейГруппировки)
	Перем СтГруп[10];                      
	Перем тбВрем,тбВыход;
	Перем тбИтоги[9];
	Перем НС;
	
	Если тбВход.КоличествоСтрок()=0 Тогда
	    возврат;
	КонецЕсли;
	
	тбВход.Выгрузить(тбВрем);          
	тбВрем.НоваяКолонка("ЗначениеКлюча","Строка");
	
	КвоКолонок = тбВрем.КоличествоКолонок();
	// получаем список полей, по которым нужны итоги
	СворачиваемыеПоля = "";	
	Для Инд = КолвоПолейГруппировки+1 по КвоКолонок Цикл
		СворачиваемыеПоля = СворачиваемыеПоля + Строка(Инд);
		Если Инд <> КвоКолонок Тогда
		    СворачиваемыеПоля = СворачиваемыеПоля + ",";
		КонецЕсли;
	КонецЦикла;
	
	// формирум итоги по группировкам (в ТбИтоги[Н] - итоги по первым Н полям группировки)
	Для Инд =1 по КолвоПолейГруппировки-1 Цикл
		тбВрем.Выгрузить(тбИтоги[Инд]);
		
		тбИтоги[Инд].ВыбратьСтроки();
		Пока тбИтоги[Инд].ПолучитьСтроку()=1 Цикл
			тбИтоги[Инд].УстановитьЗначение(тбИтоги[Инд].НомерСтроки,"ЗначениеКлюча",ПолучитьКлюч(тбИтоги[Инд],Инд));
		КонецЦикла;

		тбИтоги[Инд].Свернуть("ЗначениеКлюча",СворачиваемыеПоля);
	КонецЦикла;
    
	// Уставливаем флаги группировки
	
	ИмяПоляГруппировки ="Гр";
	
	// Создаем колонки для флагов
	Для Ном = 1 по КолвоПолейГруппировки Цикл 
		тбВход.НоваяКолонка(ИмяПоляГруппировки+Ном,"Число",1,0);
		// Сохранаяем значения полей группировки
		СтГруп[Ном] = тбВход.ПолучитьЗначение(1,Ном);
		// Устанавливаем флаги - в первой строке есть группировки по всем полям
		тбВход.УстановитьЗначение(1,ИмяПоляГруппировки+Ном,1);
	КонецЦикла;

	// копируем структуру колонок в тбВыход
	тбВход.Выгрузить(тбВыход);
	тбВыход.УдалитьСтроки();
	
	КвоСтрок = тбВход.КоличествоСтрок();	
	
	//Расставляем флаги группировки для всех остальных строк таблицы
	Для Инд =2 по КвоСтрок Цикл
		фГруп =0; // 
		// проверяемся не помиляласть ли группировка по сравнению предыдущей строкой
		Для Ном = 1 по КолвоПолейГруппировки Цикл 
			Груп = тбВход.ПолучитьЗначение(Инд,Ном);
			Если ((Груп <> СтГруп[Ном]) и ((ПустоеЗначение(Груп)=0) или (ПустоеЗначение(СтГруп[Ном])=0))) 
				или (фГруп = 1) или (Ном = КолвоПолейГруппировки) Тогда
					 
				// Сохранаяем значение поля группировки
				СтГруп[Ном] = Груп;
				// Устанавливаем флаг группировки
			    тбВход.УстановитьЗначение(Инд,ИмяПоляГруппировки+Ном,1);
				
				фГруп = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;                              
	            
	// копируем строки из тбВход в тбВыход с добавлением итогов по группировкам
	тбВход.ВыбратьСтроки();
	Пока тбВход.ПолучитьСтроку()=1 Цикл
		Для Ном = 1 по КолвоПолейГруппировки Цикл 
			Груп = тбВход.ПолучитьЗначение(тбВход.НомерСтроки,ИмяПоляГруппировки+Ном);
			Если Груп = 1 Тогда
			    // Есть Группировка
				тбВыход.НоваяСтрока();
				// Устанавливаем значения реквизитов группировки
				тбВыход.УстановитьЗначение(тбВыход.НомерСтроки,ИмяПоляГруппировки+Ном,1);
				Для НомГр = 1 по Ном Цикл					
					тбВыход.УстановитьЗначение(тбВыход.НомерСтроки,НомГр,тбВход.ПолучитьЗначение(тбВход.НомерСтроки,НомГр));
				КонецЦикла;
				// Устанавливаем значения итогов
				Если Ном = КолвоПолейГруппировки Тогда
				    тбИтогов = тбВход;
					ИндексС = КолвоПолейГруппировки;
				Иначе
					тбИтогов = тбИтоги[Ном];
					НС = 0;
					Ключ = ПолучитьКлюч(тбВход,Ном);					
					//Если Ключ = "#" Тогда
					//	Ключ = ПолучитьПустоеЗначение(ТипЗначенияСтр(тбИтогов.ПолучитьЗначение(тбИтогов.ТекущаяСтрока(),1)));
					//КонецЕсли;	
					тбИтогов.НайтиЗначение(Ключ,НС,"ЗначениеКлюча"); 
					тбИтогов.ПолучитьСтрокуПоНомеру(НС);
					ИндексС = 0;
				КонецЕсли;
				Для ИндС = 1 по 4 Цикл
					тбВыход.УстановитьЗначение(тбВыход.НомерСтроки,КолвоПолейГруппировки+ИндС,тбИтогов.ПолучитьЗначение(тбИтогов.НомерСтроки,ИндексС+ИндС));
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;                              
	
	тбВыход.Выгрузить(тбВход);
КонецПроцедуры

// ===============================
// Назначение:
//		Формирует простой список налоговых документов в соответствии с переданными параметрами отбора
// 		Используется только для покупателей
// Аргументы:
//		Список расшифровки, переданный из этого же отчета
Процедура СформироватьВыписанныеНалоговые(Знач спРасш)
	Если ТипЗначенияСтр(спРасш) <> "СписокЗначений" Тогда
	    Возврат;
	КонецЕсли;
	
	текФирма				= спРасш.Получить("ВыбФирма");
	текКонтрагент			= спРасш.Получить("ВыбКонтрагент");
	текДоговор 				= спРасш.Получить("Договор");
	текСтавка				= спРасш.Получить("СтавкаНДС");
	текДокументОснование	= спРасш.Получить("ДокументОснование");
	текРодительскийДокумент = спРасш.Получить("РодительскийДокумент");
	текДата1				= спРасш.Получить("Дата1");
	текДата2 				= спРасш.Получить("Дата2");
	
	Если ПустоеЗначение(текРодительскийДокумент) = 1 Тогда
	    Возврат;
	КонецЕсли;
	
	ПечФорма = "ВыписанныеНалоговые";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	Т = СоздатьОбъект("Таблица");
    Т.ИсходнаяТаблица(ПечФорма);
	Т.ВывестиСекцию("Отчет");
	
	ИСуммаСНДС = 0; ИНДС = 0;
	
	Док = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(текДата1,текДата2,текРодительскийДокумент);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если ((Док.Вид() <> "НалоговаяНакладная") и (Док.Вид() <> "Приложение2")) или (Док.Фирма <> текФирма) Тогда
		    Продолжить;
		КонецЕсли;
		Если (Док.РодительскийДокумент <> текРодительскийДокумент) или (Док.ВидНДС <> текСтавка) 
		или (Док.ДокументОснование <> текДокументОснование) или (Док.Договор <> текДоговор) или (Док.Контрагент <> текКонтрагент) Тогда
			// пропускаем
		    Продолжить;
		КонецЕсли;
		
		текСуммаСНДС = 0; текНДС = 0;
		
		Если Док.Вид() = "НалоговаяНакладная" Тогда
		    текСуммаСНДС = Док.БазаНДС+Док.СуммаНДС;
			текНДС = Док.СуммаНДС;
		Иначе
		    текСуммаСНДС = Док.ИзмБазыНДС+Док.ИзмСуммыНДС;
			текНДС = Док.ИзмСуммыНДС;
		КонецЕсли;
		
		печСуммаСНДС = ФРМ3(текСуммаСНДС);
		печНДС = ФРМ3(текНДС);
		
		ИСуммаСНДС = ИСуммаСНДС + текСуммаСНДС;
		ИНДС = ИНДС + текНДС;
		
		Т.ВывестиСекцию("НалоговыйДокумент");
	КонецЦикла;
	
	печИСуммаСНДС = ФРМ3(ИСуммаСНДС);
	печИНДС = ФРМ3(ИНДС);
	
	Т.ВывестиСекцию("Дно");
	Т.Опции(0,0,0,0,ПарСтрОтчДлинн);
	Т.Защита(Константа.ФлагЗащитыТаблиц);
	Т.ТолькоПросмотр(1);
	Т.Показать("Выписанные налоговые документы","");
КонецПроцедуры //СформироватьВыписанныеНалоговые

// ===============================
// Назначение:
//		Формирует отчет о начисленных налоговых обязательствах и выписанных налоговых накладных по покупателям
Процедура СформироватьПоПокупателям()
	ПечФорма = "Покупатели";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	
	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
    Т.ИсходнаяТаблица(ПечФорма);

	                       
	// запрос по регистрам
	ЗапрПоРег = СоздатьОбъект("Запрос");
	ТекстЗапр = 	"//{{ЗАПРОС(Запр)
	|Период с Дата1 по Дата2;
	|Фир = Регистр.ВзаиморасчетыПокупателей.Фирма;
	|Кон = Регистр.ВзаиморасчетыПокупателей.Контрагент;
	|Дог = Регистр.ВзаиморасчетыПокупателей.Договор;
	|Ста = Регистр.ВзаиморасчетыПокупателей.СтавкаНДС;
	|Счет = Регистр.ВзаиморасчетыПокупателей.Счет;";
	Если фДоДокумента = 1 Тогда
	    ТекстЗапр = ТекстЗапр + "
		|ТекДок = Регистр.ВзаиморасчетыПокупателей.ТекущийДокумент;";
	КонецЕсли;
	ТекстЗапр = ТекстЗапр + "
	|Флаг_НУ = Регистр.ВзаиморасчетыПокупателей.Флаг_НУ;
	|СуммаСНДС_НУ = Регистр.ВзаиморасчетыПокупателей.СуммаСНДС_НУ;
	|СуммаНДС_НУ = Регистр.ВзаиморасчетыПокупателей.НДС;
	| // только флаги налогового учета НДС
	|Функция СНДС_НУ = Сумма(СуммаСНДС_НУ)   когда ((Флаг_НУ = НУ_ВозникновениеНОиВДВР) или (Флаг_НУ = НУ_СторноНОиВДВР) 
	|    или (Флаг_НУ = НУ_ВозникновениеНО)      или (Флаг_НУ = НУ_СторноНО));
	|Функция НДС_НУ = Сумма(СуммаНДС_НУ)     когда ((Флаг_НУ = НУ_ВозникновениеНОиВДВР) или (Флаг_НУ = НУ_СторноНОиВДВР) 
	|    или (Флаг_НУ = НУ_ВозникновениеНО)      или (Флаг_НУ = НУ_СторноНО));
	|Группировка Дог;
	|Группировка Ста без групп;
	|Группировка Счет;";
	Если фДоДокумента = 1 Тогда
	    ТекстЗапр = ТекстЗапр + "
		|Группировка ТекДок;";		
	КонецЕсли;
    ТекстЗапр = ТекстЗапр + "
	|Условие(Фир = выбФирма);
	|Условие(Кон = выбКонтрагент);
	|Условие(Дог в выбДоговор);
	|"//}}ЗАПРОС
	;
	
	Если ЗапрПоРег.Выполнить(ТекстЗапр) = 0 Тогда
		глКомментарий("Не выполнился запрос по налоговым обязательствам!",0);
	    Возврат;
	КонецЕсли;   
	
	ТаблЗапрПоРег = СоздатьОбъект("ТаблицаЗначений");
	ЗапрПоРег.Выгрузить(ТаблЗапрПоРег,,0);

	// запрос по документам
	ЗапрПоДок = СоздатьОбъект("Запрос");
	ТекстЗапр = 	"//{{ЗАПРОС(Запр)
	|Период с Дата1 по Дата2;
	|Фир = Документ.НалоговаяНакладная.Фирма, Документ.Приложение2.Фирма;
	|Кон = Документ.НалоговаяНакладная.Контрагент, Документ.Приложение2.Контрагент;
	|Дог = Документ.НалоговаяНакладная.Договор, Документ.Приложение2.Договор;
	|Ста = Документ.НалоговаяНакладная.ВидНДС, Документ.Приложение2.ВидНДС;
	|Счет = Документ.НалоговаяНакладная.ДокументОснование, Документ.Приложение2.ДокументОснование;";
	Если фДоДокумента = 1 Тогда
	    ТекстЗапр = ТекстЗапр + "
		|ТекДок = Документ.НалоговаяНакладная.РодительскийДокумент, Документ.Приложение2.РодительскийДокумент;";
	КонецЕсли;
	ТекстЗапр = ТекстЗапр + "
	|БазаНДС = Документ.НалоговаяНакладная.БазаНДС, Документ.Приложение2.ИзмБазыНДС;
	|НДС = Документ.НалоговаяНакладная.СуммаНДС, Документ.Приложение2.ИзмСуммыНДС;
	| // только флаги налогового учета НДС
	|Функция ВыписаноСНДС = Сумма(БазаНДС+НДС);
	|Функция ВыписаноНДС = Сумма(НДС);
	|Группировка Дог;
	|Группировка Ста без групп;
	|Группировка Счет;";
	Если фДоДокумента = 1 Тогда
	    ТекстЗапр = ТекстЗапр + "
		|Группировка ТекДок;";
	КонецЕсли;
    ТекстЗапр = ТекстЗапр + "
	|Условие(Фир = выбФирма);
	|Условие(Кон = выбКонтрагент);
	|Условие(Дог в выбДоговор);
	|"//}}ЗАПРОС
	;
	
	Если ЗапрПоДок.Выполнить(ТекстЗапр) = 0 Тогда
		глКомментарий("Не выполнился запрос по выписанным налоговым накладным!",0);
	    Возврат;
	КонецЕсли;
        
	ТаблЗапрПоДок = СоздатьОбъект("ТаблицаЗначений");
	ЗапрПоДок.Выгрузить(ТаблЗапрПоДок,,0);

	ТаблЗапрПоРег.НоваяКолонка("ВыписаноСНДС","Число");
	ТаблЗапрПоРег.НоваяКолонка("ВыписаноНДС","Число");  
	

	ТаблЗапрПоДок.ВыбратьСтроки();
	Пока ТаблЗапрПоДок.ПолучитьСтроку() = 1 Цикл
		ТаблЗапрПоРег.НоваяСтрока();
		ТаблЗапрПоРег.Дог = ТаблЗапрПоДок.Дог;
		ТаблЗапрПоРег.Ста = ТаблЗапрПоДок.Ста;
		ТаблЗапрПоРег.Счет = ТаблЗапрПоДок.Счет;
		Если фДоДокумента = 1 Тогда		
			ТаблЗапрПоРег.ТекДок = ТаблЗапрПоДок.ТекДок;
		КонецЕсли;
		ТаблЗапрПоРег.ВыписаноСНДС = ТаблЗапрПоДок.ВыписаноСНДС;
		ТаблЗапрПоРег.ВыписаноНДС = ТаблЗапрПоДок.ВыписаноНДС;
	КонецЦикла;	

	Если фДоДокумента = 1 Тогда
		ТаблЗапрПоРег.Свернуть("Дог,Ста,Счет,ТекДок","СНДС_НУ,НДС_НУ,ВыписаноСНДС,ВыписаноНДС");
		ДобавитьГрупировки(ТаблЗапрПоРег,4);
	Иначе     
		ТаблЗапрПоРег.Свернуть("Дог,Ста,Счет","СНДС_НУ,НДС_НУ,ВыписаноСНДС,ВыписаноНДС");
		ДобавитьГрупировки(ТаблЗапрПоРег,3);
	КонецЕсли;	
	
		
    // поставщики
	// Заг = Заг +" "+ ?(Язык="у","По постачальнику ","По поставщику ")+ВыбКонтрагент+"."; 

	Заг ="";
	Заг = Заг + ?(Язык="у","По фірмі ","По фирме ")+ВыбФирма+".";
	// покупатели
	Заг = Заг +" "+ ?(Язык="у","По покупцю ","По покупателю ")+ВыбКонтрагент+".";
	
	// расшифровка (обновление)
   	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "АнализНДС");
    Расшифровка.Установить("Дата1", Дата1);
    Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("ВыбФирма", ВыбФирма);
	Расшифровка.Установить("ВыбКонтрагент", ВыбКонтрагент);
	Расшифровка.Установить("ВыбДоговор", ВыбДоговор);
	Расшифровка.Установить("ВыбДокумент", ВыбДокумент);	
	Расшифровка.Установить("фДоДокумента", фДоДокумента);	
	Расшифровка.Установить("ВидОтчета", ВидОтчета.ТекущаяСтрока());
	Т.ВывестиСекцию("Кнопки");
	
	Т.ВывестиСекцию("Отчет");
	глОживить(4);             

	ИтогСНДС_НУ = 0;
	ИтогНДС_НУ = 0;
	ИтогВыписаноСНДС = 0;
	ИтогВыписаноНДС = 0;
	
	ДокПодч = СоздатьОбъект("Документ");
	                                          
	ТаблЗапрПоРег.ВыбратьСтроки();
	Пока ТаблЗапрПоРег.ПолучитьСтроку() = 1 Цикл   
		
		Если ТаблЗапрПоРег.Гр1=1 Тогда       
			ОсталосьСНДС = ТаблЗапрПоРег.СНДС_НУ - ТаблЗапрПоРег.ВыписаноСНДС;
			ОсталосьНДС = ТаблЗапрПоРег.НДС_НУ - ТаблЗапрПоРег.ВыписаноНДС;

			// итоги получаем по группировке самого верхнего уровня
			ИтогСНДС_НУ = ИтогСНДС_НУ + ТаблЗапрПоРег.СНДС_НУ;
			ИтогНДС_НУ = ИтогНДС_НУ + ТаблЗапрПоРег.НДС_НУ;
			ИтогВыписаноСНДС = ИтогВыписаноСНДС + ТаблЗапрПоРег.ВыписаноСНДС;
			ИтогВыписаноНДС = ИтогВыписаноНДС + ТаблЗапрПоРег.ВыписаноНДС;
			
			Т.ВывестиСекцию("Договор");
		ИначеЕсли ТаблЗапрПоРег.Гр2=1 Тогда   
			ОсталосьСНДС = ТаблЗапрПоРег.СНДС_НУ - ТаблЗапрПоРег.ВыписаноСНДС;
			ОсталосьНДС = ТаблЗапрПоРег.НДС_НУ - ТаблЗапрПоРег.ВыписаноНДС;
			
			Т.ВывестиСекцию("СтавкаНДС");			
		ИначеЕсли ТаблЗапрПоРег.Гр3=1 Тогда    
			ОсталосьСНДС = ТаблЗапрПоРег.СНДС_НУ - ТаблЗапрПоРег.ВыписаноСНДС;
			ОсталосьНДС = ТаблЗапрПоРег.НДС_НУ - ТаблЗапрПоРег.ВыписаноНДС;

			текСекц = Т.ПолучитьСекцию("Счет");
		    текОбл = текСекц.ОсталосьСчет;
			Если ПустоеЗначение(ТаблЗапрПоРег.Счет) = 1 Тогда
			ИначеЕсли (ОсталосьСНДС < 0) или (ОсталосьНДС < 0) Тогда
				// выписано больше чем требуется - красным
				текОбл.ЦветТекста(Красный);
			ИначеЕсли (ОсталосьСНДС <> 0) или (ОсталосьНДС <> 0) Тогда
			    // выписано меньше - зеленым
				текОбл.ЦветТекста(Зеленый);
			КонецЕсли;
			Т.ВывестиСекцию(текСекц);
			
		ИначеЕсли ТаблЗапрПоРег.Гр4=1 Тогда			
			Если (ТаблЗапрПоРег.СНДС_НУ = 0) и (ТаблЗапрПоРег.НДС_НУ = 0)
			и (ТаблЗапрПоРег.ВыписаноСНДС = 0) и (ТаблЗапрПоРег.ВыписаноНДС = 0) Тогда
			    Продолжить;
			КонецЕсли;
			
			ОсталосьСНДС = ТаблЗапрПоРег.СНДС_НУ - ТаблЗапрПоРег.ВыписаноСНДС;
			ОсталосьНДС = ТаблЗапрПоРег.НДС_НУ - ТаблЗапрПоРег.ВыписаноНДС;
			
			// расшифровка
			спРасшифровкаВыписанных = СоздатьОбъект("СписокЗначений");
			Расшифровка.Выгрузить(спРасшифровкаВыписанных);
			спРасшифровкаВыписанных.Установить("ВыписанныеНалоговые", 1);
			спРасшифровкаВыписанных.Установить("Договор", ТаблЗапрПоРег.Дог);
			спРасшифровкаВыписанных.Установить("СтавкаНДС", ТаблЗапрПоРег.Ста);
			спРасшифровкаВыписанных.Установить("ДокументОснование", ТаблЗапрПоРег.Счет);
			спРасшифровкаВыписанных.Установить("РодительскийДокумент", ТаблЗапрПоРег.ТекДок);
			
			текЦвет = 0;
			печПримечание = "";
			Если ПустоеЗначение(ТаблЗапрПоРег.ТекДок) = 1 Тогда
			ИначеЕсли (ОсталосьСНДС < 0) или (ОсталосьНДС < 0) Тогда
				// выписано больше чем требуется - красным
				печПримечание = ?(Язык="у","Виписано більше, ніж потрібно","Выписано больше, чем требуется");
				текЦвет = Красный;
			Иначе
			    // проверим даты выписанных документов
				РодительскийДокумент = ТаблЗапрПоРег.ТекДок;
				фЕстьНеправильныеДаты = 0;
				ДокПодч.ВыбратьПодчиненныеДокументы(Дата1,Дата2,РодительскийДокумент);
				Пока ДокПодч.ПолучитьДокумент() = 1 Цикл
					Если ((ДокПодч.Вид() <> "НалоговаяНакладная") и (ДокПодч.Вид() <> "Приложение2")) или (ДокПодч.Фирма <> выбФирма) Тогда
					    Продолжить;
					КонецЕсли;
					Если (ДокПодч.РодительскийДокумент <> РодительскийДокумент) или (ДокПодч.ВидНДС <> ТаблЗапрПоРег.Ста) 
					или (ДокПодч.ДокументОснование <> ТаблЗапрПоРег.Счет) или (ДокПодч.Договор <> ТаблЗапрПоРег.Дог) 
					или (ДокПодч.Контрагент <> выбКонтрагент) Тогда
						// пропускаем
					    Продолжить;
					КонецЕсли;
					Если ДокПодч.ДатаДок <> РодительскийДокумент.ДатаДок Тогда
					    фЕстьНеправильныеДаты = 1;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если фЕстьНеправильныеДаты = 1 Тогда
					печПримечание = ?(Язык="у","Неправильна дата податк. документу","Неправильная дата нал. документа");
					текЦвет = Красный;
				Иначе
					текЦвет = Зеленый;
				КонецЕсли;
			КонецЕсли;
			
			текСекц = Т.ПолучитьСекцию("ТекущийДокумент");
		    текОбл = текСекц.ОсталосьТекДок;
			Если текЦвет <> 0 Тогда
			    текОбл.ЦветТекста(текЦвет);
			КонецЕсли;
			
			Т.ВывестиСекцию(текСекц);
		КонецЕсли;
	КонецЦикла;
	                                  
	ОсталосьСНДС = ИтогСНДС_НУ - ИтогВыписаноСНДС;
	ОсталосьНДС = ИтогНДС_НУ - ИтогВыписаноНДС;
	
	Т.ВывестиСекцию("Дно");
	Т.Опции(0,0,7,0,ПарСтрОтчШирок);
	Т.Защита(Константа.ФлагЗащитыТаблиц);
	Т.ТолькоПросмотр(1);
	Т.ОбластьПечати(2);
	Т.Показать("Анализ НДС","");
КонецПроцедуры //СформироватьПоПокупателям

// ===============================
// Назначение:
//		Формирует отчет о начисленном налоговом кредите и зарегистрированных записях
//		книги приобретения по поставщикам
Процедура СформироватьПоПоставщикам()
	ПечФорма = "Поставщики";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	
	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
    Т.ИсходнаяТаблица(ПечФорма);

	Запр = СоздатьОбъект("Запрос");
	ТекстЗапр = 	"//{{ЗАПРОС(Запр)
	|Период с Дата1 по Дата2;
	|ОбрабатыватьДокументы Проведенные;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Фир = Регистр.ВзаиморасчетыПоставщиков.Фирма, Документ.ЗаписьКнигиПриобретения.Фирма;
	|Кон = Регистр.ВзаиморасчетыПоставщиков.Контрагент, Документ.ЗаписьКнигиПриобретения.Контрагент;
	|Дог = Регистр.ВзаиморасчетыПоставщиков.Договор, Документ.ЗаписьКнигиПриобретения.Договор;
	|Ста = Регистр.ВзаиморасчетыПоставщиков.СтавкаНДС, Документ.ЗаписьКнигиПриобретения.ВидНДС;
	|Счет = Регистр.ВзаиморасчетыПоставщиков.Счет, Документ.ЗаписьКнигиПриобретения.ДокументОснование;";
	Если фДоДокумента = 1 Тогда
	    ТекстЗапр = ТекстЗапр + "
		|ТекДок = Регистр.ВзаиморасчетыПоставщиков.ТекущийДокумент, Документ.ЗаписьКнигиПриобретения.ТекущийДокумент;";
	КонецЕсли;
	ТекстЗапр = ТекстЗапр + "
	|Флаг_НУ = Регистр.ВзаиморасчетыПоставщиков.Флаг_НУ;
	|СуммаСНДС_НУ = Регистр.ВзаиморасчетыПоставщиков.СуммаСНДС_НУ;
	|СуммаНДС_НУ = Регистр.ВзаиморасчетыПоставщиков.НДС;
	|СуммаСНДС = Документ.ЗаписьКнигиПриобретения.СуммаСНДС;
	|СуммаНДС = Документ.ЗаписьКнигиПриобретения.НДС;
	| // только флаги налогового учета НДС
	|Функция СНДС_НУ = Сумма(СуммаСНДС_НУ)   когда ((Флаг_НУ = НУ_ВозникновениеНОиВДВР) или (Флаг_НУ = НУ_СторноНОиВДВР) 
	|    или (Флаг_НУ = НУ_ВозникновениеНО)      или (Флаг_НУ = НУ_СторноНО));
	|Функция НДС_НУ = Сумма(СуммаНДС_НУ)     когда ((Флаг_НУ = НУ_ВозникновениеНОиВДВР) или (Флаг_НУ = НУ_СторноНОиВДВР) 
	|    или (Флаг_НУ = НУ_ВозникновениеНО)      или (Флаг_НУ = НУ_СторноНО));
	|Функция ВыписаноСНДС = Сумма(СуммаСНДС);
	|Функция ВыписаноНДС = Сумма(СуммаНДС);
	|Группировка Дог;
	|Группировка Ста без групп;
	|Группировка Счет;";
	Если фДоДокумента = 1 Тогда
	    ТекстЗапр = ТекстЗапр + "
		|Группировка ТекДок;";
	КонецЕсли;
    ТекстЗапр = ТекстЗапр + "
	|Условие(Фир = выбФирма);
	|Условие(Кон = выбКонтрагент);
	|Условие(Дог в выбДоговор);
	|"//}}ЗАПРОС
	;
	
	Если Запр.Выполнить(ТекстЗапр) = 0 Тогда
		глКомментарий("Не выполнился запрос по налоговому кредиту и записям книги приобретения!",0);
	    Возврат;
	КонецЕсли;
	
	Заг ="";
	Заг = Заг + ?(Язык="у","По фірмі ","По фирме ")+ВыбФирма+".";
    // поставщики
	Заг = Заг +" "+ ?(Язык="у","По постачальнику ","По поставщику ")+ВыбКонтрагент+"."; 
	
	// расшифровка (обновление)
   	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "АнализНДС");
    Расшифровка.Установить("Дата1", Дата1);
    Расшифровка.Установить("Дата2", Дата2);
	Расшифровка.Установить("ВыбФирма", ВыбФирма);
	Расшифровка.Установить("ВыбКонтрагент", ВыбКонтрагент);
	Расшифровка.Установить("ВыбДоговор", ВыбДоговор);
	Расшифровка.Установить("ВыбДокумент", ВыбДокумент);	
	Расшифровка.Установить("фДоДокумента", фДоДокумента);	
	Расшифровка.Установить("ВидОтчета", ВидОтчета.ТекущаяСтрока());
	Т.ВывестиСекцию("Кнопки");
	
	Т.ВывестиСекцию("Отчет");
	глОживить(4);             
	
	ДокПодч = СоздатьОбъект("Документ");
	
	Пока Запр.Группировка("Дог") = 1 Цикл
		ОсталосьСНДС = Запр.СНДС_НУ - Запр.ВыписаноСНДС;
		ОсталосьНДС = Запр.НДС_НУ - Запр.ВыписаноНДС;
		
		Т.ВывестиСекцию("Договор");
		Пока Запр.Группировка("Ста") = 1 Цикл
			ОсталосьСНДС = Запр.СНДС_НУ - Запр.ВыписаноСНДС;
			ОсталосьНДС = Запр.НДС_НУ - Запр.ВыписаноНДС;
			
			Т.ВывестиСекцию("СтавкаНДС");
			Пока Запр.Группировка("Счет") = 1 Цикл
				ОсталосьСНДС = Запр.СНДС_НУ - Запр.ВыписаноСНДС;
				ОсталосьНДС = Запр.НДС_НУ - Запр.ВыписаноНДС;

				текСекц = Т.ПолучитьСекцию("Счет");
			    текОбл = текСекц.ОсталосьСчет;
				Если ПустоеЗначение(Запр.Счет) = 1 Тогда
				ИначеЕсли (ОсталосьСНДС < 0) или (ОсталосьНДС < 0) Тогда
					// выписано больше чем требуется - красным
					текОбл.ЦветТекста(Красный);
				ИначеЕсли (ОсталосьСНДС <> 0) или (ОсталосьНДС <> 0) Тогда
				    // выписано меньше - зеленым
					текОбл.ЦветТекста(Зеленый);
				КонецЕсли;
				Т.ВывестиСекцию(текСекц);
				Если фДоДокумента = 1 Тогда
					// детально до каждого родительского документа
					Пока Запр.Группировка("ТекДок") = 1 Цикл
						Если (Запр.СНДС_НУ = 0) и (Запр.НДС_НУ = 0) и (Запр.ВыписаноСНДС = 0) и (Запр.ВыписаноНДС = 0) Тогда
						    Продолжить;
						КонецЕсли;
						
						Т.ВывестиСекцию("ТекущийДокумент");
					КонецЦикла; // текущий документ
				КонецЕсли;
			КонецЦикла; // документ кредита
		КонецЦикла; // ставка НДС
	КонецЦикла; // договор
	ОсталосьСНДС = Запр.СНДС_НУ - Запр.ВыписаноСНДС;
	ОсталосьНДС = Запр.НДС_НУ - Запр.ВыписаноНДС;
	
	Т.ВывестиСекцию("Дно");
	Т.Опции(0,0,7,0,ПарСтрОтчШирок);
	Т.Защита(Константа.ФлагЗащитыТаблиц);
	Т.ТолькоПросмотр(1);
	Т.ОбластьПечати(2);
	Т.Показать("Анализ НДС","");
КонецПроцедуры //СформироватьПоПоставщикам

// ===============================
Процедура Сформировать(ЗакрытьДиалог = 0)
	Если ПустоеЗначение(ВыбФирма)=1 Тогда
	    Предупреждение("Выберите фирму !");
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(ВыбКонтрагент)=1 Тогда
		Предупреждение("Выберите контрагента !");
		Возврат;
	КонецЕсли;
	
   	глПроверкаАктуальностиОтчета(Дата1,Дата2,ВыбФирма,0);
	                                     	
	Если ВидОтчета.ТекущаяСтрока()=1 Тогда
		СформироватьПоПоставщикам();
	Иначе
		СформироватьПоПокупателям();
	КонецЕсли;
	
	Если (Обновить = 2) или(ЗакрытьДиалог = 1) Тогда
	    СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;

КонецПроцедуры //Сформировать

// ===============================
Процедура ПриОткрытии()
	ВидОтчета.ДобавитьЗначение("Поставщики");
	ВидОтчета.ДобавитьЗначение("Покупатели");
	ВидОтчета.ТекущаяСтрока(2);
	ВыбКонтрагент.ВыборГруппы(0);
	
	Зеленый = (128 * 256 + 192) * 256;
	Красный = 255;
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		Дата1 = глРасшифровка.Получить("Дата1");
		Дата2 = глРасшифровка.Получить("Дата2");
		ВыбФирма = глРасшифровка.Получить("ВыбФирма");
		ВыбКонтрагент = глРасшифровка.Получить("ВыбКонтрагент");
		ВыбДоговор = глРасшифровка.Получить("ВыбДоговор");
		
		фДоДокумента = глРасшифровка.Получить("фДоДокумента");
		ВидОтчета.ТекущаяСтрока(глРасшифровка.Получить("ВидОтчета"));		
		
		ВыбДокумент = глРасшифровка.Получить("ВыбДокумент");
		
		Если глРасшифровка.Получить("ВыписанныеНалоговые") = 1 Тогда
		    // нужен только список выписанных налоговых накладных
			СформироватьВыписанныеНалоговые(глРасшифровка);
			СтатусВозврата(0);
		Иначе
			// обычная расшифровка
			Если Обновить <> 0 Тогда
				Т = глТаблица;
			КонецЕсли;           
			
			Если Обновить <> 2 Тогда
				Сформировать();
				СтатусВозврата(0);
				Возврат;       
			КонецЕсли;           
		КонецЕсли;
	Иначе          		
		Обновить = 0;
		Если ВыбФирма.Выбран() = 0 тогда
			ВыбФирма = глВосстановитьЗначение(,"ОсновнаяФирма");
		КонецЕсли;
		Если ВыбКонтрагент.Выбран() = 0 тогда
			ВыбКонтрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");	
		КонецЕсли;	
		Дата2=ПолучитьДатуТА();
		Дата1=глВосстановитьЗначение(,"ОсновнаяДатаНачалаОтчета");
		Если Число(Дата1)=0 Тогда
			Дата1='01.01.1998';
		Конецесли;                 
	КонецЕсли;
КонецПроцедуры //ПриОткрытии

// ===============================
Процедура ПриНачалеВыбораЗначения(Элемент,Флаг)
	Если Элемент="ВыбДоговор" Тогда	// выбираем договор
		Фрм = СоздатьОбъект("СписокЗначений");
		Фрм.ДобавитьЗначение("ДоговораКонтрагентов","ГрафаОтбора");
		Если (ВыбКонтрагент.Выбран()>0)И(ВыбКонтрагент.ЭтоГруппа()=0) Тогда
			Фрм.Установить("Контрагент",ВыбКонтрагент);
		КонецЕсли;
		ОткрытьПодбор("Журнал.ПолныйЖурнал","ДляВыбораДоговоровИСчетов",Фрм,0,ВыбДоговор);
		Флаг=0;
	КонецЕсли;	
КонецПроцедуры //ПриНачалеВыбораЗначения
