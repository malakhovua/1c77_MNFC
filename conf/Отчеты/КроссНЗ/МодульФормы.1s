Перем ТЗ, ТПрод, СпрТМЦ, Расш, Полуфабрикат, Продукция, ОПЗ, СтрФ;

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
Перем ТЗЦС;
Перем ТЗУЦ;
Перем ИтСуммаПоПрайсу, ИтСуммаПоЦенамКг; //--- УМК Сандомирский В.Ю. (14.07.14)

Процедура ПолучитьЦену(ТИтоги)
	Если ПустоеЗначение(ТЗ.Мат.ТМЦДляСписания.Получить(КонДата)) = 0 Тогда
		ТМЦДляПоиска = ТЗ.Мат.ТМЦДляСписания.Получить(КонДата);
	Иначе
		ТМЦДляПоиска = ТЗ.Мат;
	КонецЕсли;
	Если ПустоеЗначение(ВыбУЦ) = 0 Тогда
		Стр = 0;
		Если ТЗУЦ.НайтиЗначение(ТМЦДляПоиска, Стр, "ТМЦ") = 1 Тогда
		    ТЗ.Цена = ТЗУЦ.ПолучитьЗначение(Стр, "Цена");
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	
	Стр = 0;
	Если ТИтоги.НайтиЗначение(ТМЦДляПоиска, Стр, "ТМЦ") = 1 Тогда
		Кво = ТИтоги.ПолучитьЗначение(Стр, "ОстатокТовара");
		Если Кво > 0 Тогда
		    ТЗ.Цена = ТИтоги.ПолучитьЗначение(Стр,"Стоимость") / Кво;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТЗ.Цена = глВернутьЦену(ТМЦДляПоиска, Константа.ЗакупЦена, КонДата, Гривня);
	//Если ТМЦДляПоиска.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат Тогда
	//	ТЗ.Цена = ТЗ.Цена + ТЗ.Цена * ТМЦДляПоиска.СтавкаНДС.Ставка.Получить(КонДата);
	//КонецЕсли;
КонецПроцедуры

Функция ПолучитьСумму(СумС, Материал, КоличествоПриход)
	Если ПустоеЗначение(ВыбУЦ) = 1 Тогда
		Возврат СумС;
	Иначе
		Стр = 0;
		Попытка
			Мат = ?(ПустоеЗначение(Материал.ТМЦДляСписания.Получить(КонДата)) = 1, Материал, Материал.ТМЦДляСписания.Получить(КонДата));
		Исключение
			Мат = Материал;
		КонецПопытки;
		Если ТЗЦС.НайтиЗначение(Мат, Стр, "ТМЦ") = 1 Тогда
		    Возврат ТЗЦС.ПолучитьЗначение(Стр, "Цена") * КоличествоПриход;
		Иначе
			Возврат СумС;
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ПорядокВЗаказе(Заказ, Продукция, ТекДок)
	Если ПустоеЗначение(Заказ) = 1 Тогда
		Если (Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) и (Продукция.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат) Тогда
			Попытка 
				ДатаДок = ТекДок.ДатаДок 
			Исключение
				Возврат 0;
			КонецПопытки;
			
			Если (ДатаДок >= НачДата) и (ДатаДок <= КонДата) Тогда
			    Возврат 1;
			Иначе
				Возврат 0;
			КонецЕсли;
			
		КонецЕсли;
	    Возврат 0;
	КонецЕсли;

	Если ТипЗначенияСтр(Заказ) = "Документ" Тогда
		Если (Заказ.ДатаДок <= КонДата) и (Заказ.ДатаДок >= НачДата) Тогда
		    Возврат 1;
		Иначе
			Возврат 0;
		КонецЕсли;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

Функция СоздатьСписокПоВР()
	СписТМЦПоВР = СоздатьОбъект("СписокЗначений");
	Если списВР.РазмерСписка() = 0 Тогда
		Возврат СписТМЦПоВР;
	КонецЕсли;
	
	СпрТМЦ.ИспользоватьРодителя(ГП);
	СпрТМЦ.ВыбратьЭлементы();
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если СпрТМЦ.ЭтоГруппа() = 0 Тогда
		    Схема = СпрТМЦ.СхемаРасчетаЗП.Получить(КонДата);
			Если ПустоеЗначение(Схема) = 0 Тогда
			    Схема.ВыбратьСтроки();
				Пока Схема.ПолучитьСтроку() = 1 Цикл
					Если списВР.Принадлежит(Схема.ВидРабот) = 1 Тогда
					    СписТМЦПоВР.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СпрТМЦ.ИспользоватьРодителя();
	СпрТМЦ.ВыбратьЭлементыПоРеквизиту("ВидТМЦ", Перечисление.ВидыТМЦ.Полуфабрикат, 0, 0);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если СпрТМЦ.ЭтоГруппа() = 0 Тогда
		    Схема = СпрТМЦ.СхемаРасчетаЗП.Получить(КонДата);
			Если ПустоеЗначение(Схема) = 0 Тогда
			    Схема.ВыбратьСтроки();
				Пока Схема.ПолучитьСтроку() = 1 Цикл
					Если списВР.Принадлежит(Схема.ВидРабот) = 1 Тогда
					    СписТМЦПоВР.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписТМЦПоВР;
КонецФункции

Процедура ВывестиСекции(Имя);
	Таб.ВывестиСекцию(Имя + "|Основная");
	ВТаб = Таб.ВысотаТаблицы();
	ТекКол = 9;
	ИтСуммаПоЦенамКг= 0; //--- УМК Сандомирский В.Ю. (14.07.14)
	ТПрод.ВыбратьСтроки();
	Пока ТПрод.ПолучитьСтроку() = 1 Цикл
		Красный = 0;
		Если Имя = "Итого" Тогда
			Если ТПрод.КвоПродукцииП <> 0 Тогда
				ССКГ = Окр((ТПрод.ССФарша+ТПрод.ССФаршаПФ) / ТПрод.КвоПродукцииП, 2);				
			Иначе
				Сообщить("Для продукции: " + Строка(ТПрод.Прод) + " итоговое количество = 0");
				ССКГ = ТПрод.ССФарша+ТПрод.ССФаршаПФ;
			КонецЕсли;
			
			ЦенаУпаковки = -1;
			ТекРасшифровка = "";
			СтУпак = глПолучитьСтУпак(ТПрод.Прод, ТекРасшифровка, КонДата, ЦенаУпаковки);
			ОПЗ = ТПрод.Прод.ОПР.Получить(КонДата);// + umk
			ПечСуммаПоЦенамКг = ТПрод.КвоПродукцииП * (ССКГ + ОПЗ);
			Если ТПрод.ЦенаП <> 0 Тогда
				ИтСуммаПоЦенамКг = ИтСуммаПоЦенамКг + ПечСуммаПоЦенамКг;		//--- УМК Сандомирский В.Ю. (14.07.14) 
			КонецЕсли;			
			
			Попытка
				Рентаб = Окр(((ТПрод.ЦенаП - СтУпак) / (ССКГ+ОПЗ))*100, 0);
			Исключение
				Рентаб = 0;
			КонецПопытки;// + umk
			
			РентПрод = ТПрод.Прод.НормаРент.Получить(КонДата);
			Если Рентаб < РентПрод Тогда
			    Красный = 1;
			ИначеЕсли Рентаб > РентПрод * 1.1 Тогда
				Красный = 2;
			КонецЕсли;			
		КонецЕсли;
		Таб.ПрисоединитьСекцию(Имя + "|Прод");
		ТекКол=ТекКол+1;
		Если Красный = 1 Тогда
			Таб.Область(ВТаб, ТекКол).ЦветТекста(255);
		ИначеЕсли Красный = 2 Тогда
			Таб.Область(ВТаб, ТекКол).ЦветТекста(0,0,255);
		КонецЕсли;		
	КонецЦикла;
	Таб.ПрисоединитьСекцию(Имя + "|ИтМат");
КонецПроцедуры

Процедура УстановитьРодителей(Атр, Атр1, Кво, Сумма, Род);
	Если ПустоеЗначение(Род) = 1 Тогда
	    Возврат;
	КонецЕсли;
	Стр = 0;
	Если ТЗ.НайтиЗначение(Род, Стр, "Мат") = 1 Тогда
	    ТЗ.УстановитьЗначение(Стр, Атр, ТЗ.ПолучитьЗначение(Стр, Атр) + Кво);
		Если Атр1 <> "" Тогда
		    ТЗ.УстановитьЗначение(Стр, Атр1, ТЗ.ПолучитьЗначение(Стр, Атр1) + Сумма);
		КонецЕсли;		                                                 
		УстановитьРодителей(Атр, Атр1, Кво, Сумма, Род.Родитель);
	Иначе
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьТаблицу()
	КонДата = Мин(КонДата, ПолучитьДатуТА());
	НачДата = Мин(НачДата, КонДата);
	ТЗУЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыбУЦ.ВыгрузитьТабличнуюЧасть(ТЗУЦ);
	
	// рассчитаем остатки
	РегП = СоздатьОбъект("Регистр.Партии");
	СписМ = СоздатьОбъект("СписокЗначений");
	СписМ.ДобавитьЗначение(Материал);
	СписМ.ДобавитьЗначение(Материал1);
	РегП.УстановитьЗначениеФильтра("ТМЦ", СписМ, 2);

	Если КонДата < ПолучитьДатуТА() Тогда
	    РегП.ВременныйРасчет(1);
		РассчитатьРегистрыПо(КонДата);
	КонецЕсли;
	
	ТИтоги = СоздатьОбъект("ТаблицаЗначений");
	РегП.ВыгрузитьИтоги(ТИтоги);
	
	СпрТМЦ.ИспользоватьРодителя(Материал);
	СпрТМЦ.ВыбратьЭлементы(1);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		ТЗ.НоваяСтрока();
		ТЗ.Мат = СпрТМЦ.ТекущийЭлемент();
		ТЗ.УчФарш = 1-СпрТМЦ.НеУчитыватьВОбщемВесе;
		ТЗ.ЭтоГруппа = СпрТМЦ.ЭтоГруппа();
		Стр = 0;
		ПолучитьЦену(ТИтоги);
	КонецЦикла;

	ТЗ.НоваяСтрока();
	ТЗ.Мат = Материал1;
	ТЗ.УчФарш = 0;
	ТЗ.ЭтоГруппа = 1;	 
	СпрТМЦ.ИспользоватьРодителя(Материал1);
	СпрТМЦ.ВыбратьЭлементы(1);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		ТЗ.НоваяСтрока();
		ТЗ.Мат = СпрТМЦ.ТекущийЭлемент();
		ТЗ.УчФарш = 1-СпрТМЦ.НеУчитыватьВОбщемВесе;
		ТЗ.ЭтоГруппа = СпрТМЦ.ЭтоГруппа();
		ПолучитьЦену(ТИтоги);
	КонецЦикла;
КонецПроцедуры 

Процедура ЗаполнитьСписание()
	ДокНЗ = СоздатьОбъект("Документ.НормыЗатрат");
	
	ТПрод.ВыбратьСтроки();
	Пока ТПрод.ПолучитьСтроку() = 1 Цикл
		ТекПрод = ТПрод.Прод;
		НЗ = ТПрод.НЗ;
		ИмКол = "Т"+ТПрод.ИД;
		
		НЗ.ВыбратьСтроки();
		Пока НЗ.ПолучитьСтроку() = 1 Цикл
			Ст = 0;
			Если ТЗ.НайтиЗначение(НЗ.Элемент, Ст, "Мат") = 1 Тогда
				ТЗ.ПолучитьСтрокуПоНомеру(Ст);
			    ТЗ.УстановитьЗначение(Ст, ИмКол, НЗ.Кво);
				Сум = НЗ.Кво * ТЗ.ПолучитьЗначение(Ст, "Цена");

				Атр = "ИтСписано";
				Если (ТекПрод.ВидТМЦ <> Продукция) или (ПустоеЗначение(ТекПрод) = 1) Тогда
				    Атр = Атр + "ПФ";
					ТПрод.ССФаршаПФ = ТПрод.ССФаршаПФ + Сум;
				Иначе
					ТПрод.ССФарша = ТПрод.ССФарша + Сум;
				КонецЕсли;
				
				ТЗ.УстановитьЗначение(Ст, Атр, ТЗ.ПолучитьЗначение(Ст, Атр) + НЗ.Кво);
				ТЗ.УстановитьЗначение(Ст, Атр+"С", ТЗ.ПолучитьЗначение(Ст, Атр+"С") + Сум);
				УстановитьРодителей(Атр, "", НЗ.Кво, Сум, НЗ.Элемент.Родитель);					
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

//*******************************************
Процедура Сформировать(НоваяТаблица = 0)
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Объект", "КроссТаблицаНЗ");
	//ОПЗ = Константа.ОПЗ.Получить(ТекущаяДата()); // + umk уберем
    
	Расшифровка.Установить("Дата1", НачДата);
    Расшифровка.Установить("Дата2", КонДата);
	Расшифровка.Установить("фУдалять", фУдалять);
	Расшифровка.Установить("списТовар", списТовар);
	Расшифровка.Установить("ГП", ГП);
	Расшифровка.Установить("Материал", Материал);	
	
	Если ВыбУЦ.Выбран() = 1 Тогда
	    ТЗЦС = СоздатьОбъект("ТаблицаЗначений");
		ВыбУЦ.ВыгрузитьТабличнуюЧасть(ТЗЦС);
	КонецЕсли;
	
    // вначале создаем ТЗ
	//ОПЗ = Константа.ОПЗ.Получить(КонДата); // + umk уберем
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Мат", "Справочник.ТМЦ");
	ТЗ.НоваяКолонка("ИзПер", "Число", 12, 2);
	ТЗ.НоваяКолонка("УчФарш", "Число");
	ТЗ.НоваяКолонка("ЭтоГруппа", "Число", 1);	
	ТЗ.НоваяКолонка("Цена", "Число", 12, 2);	
	ТЗ.НоваяКолонка("ИтСписано", "Число", 15, 3);
	ТЗ.НоваяКолонка("ИтСписаноС", "Число", 15, 3);
	ТЗ.НоваяКолонка("ИтСписаноПФ", "Число", 15, 3);
	ТЗ.НоваяКолонка("ИтСписаноПФС", "Число", 15, 3);
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	ТПрод = СоздатьОбъект("ТаблицаЗначений");
	ТПрод.НоваяКолонка("Прод", "Справочник.ТМЦ");
	ТПрод.НоваяКолонка("НЗ", "Документ.НормыЗатрат");
	ТПрод.НоваяКолонка("ГП", "Число");
	ТПрод.НоваяКолонка("Сырье", "Число");
	ТПрод.НоваяКолонка("Род", "Справочник.ТМЦ");
	ТПрод.НоваяКолонка("ИД", "Число");
	ТПрод.НоваяКолонка("КвоФарша", "Число", 15, 3);
	ТПрод.НоваяКолонка("КвоПродукцииП", "Число", 15, 3);
	ТПрод.НоваяКолонка("ПроцПотерь", "Число", 15, 3);
	ТПрод.НоваяКолонка("КвоКутеров", "Число", 15, 3);
	ТПрод.НоваяКолонка("КвоВып", "Число", 15, 3);
	ТПрод.НоваяКолонка("ССФарша", "Число", 15, 3);
	ТПрод.НоваяКолонка("ССФаршаПФ", "Число", 15, 3);
	ТПрод.НоваяКолонка("ССФаршаВ", "Число", 15, 3);
	ТПрод.НоваяКолонка("ССФаршаВПФ", "Число", 15, 3);
	ТПрод.НоваяКолонка("ЦенаП", "Число", 15, 2);
	ТПрод.НоваяКолонка("СуммаПоПрайсу", "Число", 15, 2);
	ТПрод.НоваяКолонка("СуммаВыпИзТЗ", "Число", 15, 2);

	// заполняем ТЗ материалов. Для этого нужно выполнить два запроса: по партиям и по списанию на ГП
	Состояние("Заполнение таблицы материалов");
	ЗаполнитьТаблицу();
	
	СписТМЦПоВР = СоздатьСписокПоВР();
	
	КатЦенПрайс = Константа.ОсновнаяКатегорияЦен;
	
	ДокНЗ = СоздатьОбъект("Документ");
	СпрТМЦ.ИспользоватьРодителя(ГП);
	СпрТМЦ.ВыбратьЭлементы();
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если (СпрТМЦ.ЭтоГруппа() = 0) И (СпрТМЦ.ПометкаУдаления() = 0) Тогда
			Если глПроверитьДоступКНормам(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
				Продолжить;
			КонецЕсли;			
			Если списТовар.РазмерСписка() > 0 Тогда
			    Если списТовар.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
					Продолжить;
			    КонецЕсли;
			КонецЕсли;		    
			Если СписТМЦПоВР.РазмерСписка() > 0 Тогда
			    Если СписТМЦПоВР.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
					Продолжить;
			    КонецЕсли;
			КонецЕсли;
			
			ЦПрод = глВернутьЦену(СпрТМЦ.ТекущийЭлемент(), КатЦенПрайс, КонДата, Гривня);
			ДокНЗ.ВыбратьПоЗначению(,,"Продукция", СпрТМЦ.ТекущийЭлемент());
			Пока ДокНЗ.ПолучитьДокумент() = 1 Цикл
				Если ДокНЗ.Вид() = "НормыЗатрат" Тогда
					Если ДокНЗ.Действует = 1 Тогда
						ТПрод.НоваяСтрока();
						ТПрод.Прод = СпрТМЦ.ТекущийЭлемент();
						ТПрод.НЗ = ДокНЗ.ТекущийДокумент();
						ТПрод.КвоФарша = ТПрод.НЗ.КвоПродукции;
						ТПрод.Род = СпрТМЦ.Родитель;
						ТПрод.ИД = ТПрод.КоличествоСтрок();
						ТПрод.ЦенаП = ЦПрод;
						ТПрод.ПроцПотерь = СпрТМЦ.ПроцПотерь.Получить(КонДата);//ДокНЗ.ПроцПотерь;
						ТПрод.КвоПродукцииП = ТПрод.КвоФарша - ТПрод.КвоФарша * (ТПрод.ПроцПотерь/100);
						ТПрод.ЦенаП = ЦПрод;
						ТПрод.СуммаПоПрайсу = ТПрод.ЦенаП * ТПрод.КвоПродукцииП;
						ТЗ.НоваяКолонка("Т"+ТПрод.ИД, "Число", 15, 3);
						СтрСв = СтрСв + ",Т"+ТПрод.ИД;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;			
		КонецЕсли;
	КонецЦикла;
	
	// теперь добавим то, что получали из переработки
	Состояние("Заполнение таблицы продукции");
	СтрСв = "";
	
	СпрТМЦ.ИспользоватьРодителя();
	СпрТМЦ.ВыбратьЭлементыПоРеквизиту("ВидТМЦ", Перечисление.ВидыТМЦ.Полуфабрикат, 0, 0);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если глПроверитьДоступКНормам(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
			Продолжить;
		КонецЕсли;		
		Если списТовар.РазмерСписка() > 0 Тогда
		    Если списТовар.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
				Продолжить;
		    КонецЕсли;
		КонецЕсли;		    
		Если СписТМЦПоВР.РазмерСписка() > 0 Тогда
		    Если СписТМЦПоВР.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
				Продолжить;
		    КонецЕсли;
		КонецЕсли;		    
		
		ДокНЗ.ВыбратьПоЗначению(,,"Продукция", СпрТМЦ.ТекущийЭлемент());
		Пока ДокНЗ.ПолучитьДокумент() = 1 Цикл
			Если ДокНЗ.Вид() = "НормыЗатрат" Тогда
				Если ДокНЗ.Действует = 1 Тогда
					ТПрод.НоваяСтрока();
					ТПрод.Прод = СпрТМЦ.ТекущийЭлемент();
					ТПрод.Род = СпрТМЦ.Родитель;
					ТПрод.ИД = ТПрод.КоличествоСтрок();
					ТПрод.ПроцПотерь = ДокНЗ.ПроцПотерь;
					ТПрод.НЗ = ДокНЗ.ТекущийДокумент();
					ТПрод.ГП = 1;
					ТЗ.НоваяКолонка("Т"+ТПрод.ИД, "Число", 15, 3);
					СтрСв = СтрСв + ",Т"+ТПрод.ИД;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ТПрод.Сортировать("ГП,Род,Прод,НЗ");
	
	Состояние("Заполнение списания");
	ЗаполнитьСписание();
	
	Состояние("Печать");
	Если (ТипЗначенияСтр(Таб) = "Таблица") и (НоваяТаблица = 0) Тогда
	    Таб.Очистить();
	Иначе
		Таб = СоздатьОбъект("Таблица");
	КонецЕсли;
	Таб.ИсходнаяТаблица("Таблица");	
	Таб.ВывестиСекцию("Кнопки|Основная");
	
	//ТЗ.Сортировать("Мат");
	СтрФ = "";
	глФильтры(СтрФ, списТовар, "Продукция");
	глФильтры(СтрФ, списВР, "Виды работ");
	ВывестиСекции("Шапка");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 3);
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если (ТЗ.ИтСписано+ТЗ.ИтСписаноПФ = 0)  и (фУдалять = 1) Тогда
		    Продолжить;
		КонецЕсли;
		Если ТЗ.ЭтоГруппа = 1 Тогда
		    Таб.ВывестиСекцию("Группа|Основная");
		Иначе
			ВывестиСекции("Строка");
		КонецЕсли;
		
	КонецЦикла;
	
	ТЗ.Свернуть("ЭтоГруппа", "ИтСписано,ИтСписаноС,ИтСписаноПФ,ИтСписаноПФС" + СтрСв);
	Стр = 0;
	Если ТЗ.НайтиЗначение(0, Стр, "ЭтоГруппа") = 1 Тогда
	    ТЗ.ПолучитьСтрокуПоНомеру(Стр);
	КонецЕсли;
	ВывестиСекции("Итого");
	
	Таб.ОбластьПечати(2);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	
	Таб.Показать("Выпуск");
	
	Расшифровка.Установить("Обновить",0);	
	Если (Обновить = 2) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;	
КонецПроцедуры

Процедура ПриОткрытии()
	Если глФлагРасшифровки = 1 Тогда 
		глФлагРасшифровки = 0;
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		НачДата = глРасшифровка.Получить("Дата1");
		КонДата = глРасшифровка.Получить("Дата2");

		Материал = глРасшифровка.Получить("Материал");
		ГП = глРасшифровка.Получить("ГП");
		фУдалять = глРасшифровка.Получить("ВыбСчет");
		фУдалять	= глРасшифровка.Получить("фУдалять");
		глРасшифровка.Получить("списТовар").Выгрузить(списТовар);
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;
	Иначе
		Обновить = 0;
	КонецЕсли; 
	Материал = ВосстановитьЗначение("Материалы");
	Материал1 = ВосстановитьЗначение("Материалы1");
	ГП = ВосстановитьЗначение("ГП");
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьЗначение("Материалы", Материал);
	СохранитьЗначение("Материалы1", Материал1);
	СохранитьЗначение("ГП", ГП);
КонецПроцедуры

Процедура ДобавитьВСписок(Элт, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	Если Элт.Вид() = "ТМЦ" Тогда
		ДобавитьвСписок(Элт, списТовар);
	ИначеЕсли Элт.Вид() = "ВидыРабот" Тогда
		ДобавитьвСписок(Элт, списВР);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

ГП.ВыборГруппы(1);
Материал.ВыборГруппы(1);
фУдалять = 1;
Полуфабрикат = Перечисление.ВидыТМЦ.Полуфабрикат;
Продукция = Перечисление.ВидыТМЦ.Продукция;