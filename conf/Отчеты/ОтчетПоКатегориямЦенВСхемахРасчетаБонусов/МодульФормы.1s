Перем Расшифровка;
Перем Обновить;
Перем Таб;
Перем ПодборВБазу;

Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

//*******************************************
Процедура Сформировать()
	Перем Результат; //:ТаблицаЗначений
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	Расшифровка = СоздатьОбъект("СписокЗначений");
	
	рс = СоздатьОбъект("ODBCRecordset");
	ТекстЗапроса = "
	|SELECT Контрагенты.ID [Контрагент $Справочник.Контрагенты]
	|	, $ПоследнееЗначение.Контрагенты.КатегорияЦен(Контрагенты.ID, :Период) [КатегорияЦенКонтрагента $Справочник.КатегорииЦен]
	|	, $ПоследнееЗначение.Контрагенты.СхемаРасчетаБонуса(Контрагенты.ID, :Период) [СхемаРасчетаБонуса $Документ.СхемаРасчетаБонуса]
	|	, $СхемаРасчетаБонусаСтроки.КатЦен [КатегорияЦенВСхеме $Справочник.КатегорииЦен]
	|	, $СхемаРасчетаБонусаСтроки.Объект [ПолучательБонуса $Справочник]
	|	, Сотрудники.ID [СотрудникПолучатель $Справочник.Сотрудники]
	|	, Контрагенты1.ID [КонтрагентПолучатель $Справочник.Контрагенты]
	|FROM $Справочник.Контрагенты AS Контрагенты
	|	LEFT OUTER JOIN $ДокументСтроки.СхемаРасчетаБонуса AS СхемаРасчетаБонусаСтроки ON $ПоследнееЗначение.Контрагенты.СхемаРасчетаБонуса(Контрагенты.ID, :Период) = СхемаРасчетаБонусаСтроки.IDDOC
	|	LEFT OUTER JOIN $Справочник.Сотрудники AS Сотрудники ON $СхемаРасчетаБонусаСтроки.Объект = $ВидСправочника36.Сотрудники + Сотрудники.ID
	|	LEFT OUTER JOIN $Справочник.Контрагенты AS Контрагенты1 ON $СхемаРасчетаБонусаСтроки.Объект = $ВидСправочника36.Контрагенты + Контрагенты1.ID
	|where 1 = 1"   
	+ ?(списКонтрагентов.РазмерСписка()>0,"  and Контрагенты.ID IN (SELECT Val FROM #списКонтрагентовБаза)", "")
	+ ?(списСотрудников.РазмерСписка()>0 ,"  and Сотрудники.ID IN (SELECT Val FROM #списСотрудников)", "")
	+ ?(списКонтрагентов1.РазмерСписка()>0," and Контрагенты1.ID IN (SELECT Val FROM #списКонтрагентов)", "")
	+ " ORDER BY Контрагенты.ID ";
	
	рс.УстановитьТекстовыйПараметр("Период", Период);
	
	
	Если списКонтрагентов.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(списКонтрагентов, "#списКонтрагентовБаза","Контрагенты");
	КонецЕсли;
	
	Если списСотрудников.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(списСотрудников, "#списСотрудников", "Сотрудники");
	КонецЕсли;
	
	Если списКонтрагентов.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(списКонтрагентов1, "#списКонтрагентов","Контрагенты");
	КонецЕсли;
	
	Результат = рс.ВыполнитьИнструкцию(ТекстЗапроса);
	
	Расшифровка.Установить("Период", Период);
	Расшифровка.Установить("Отличия", Отличия);
	Расшифровка.Установить("списКонтрагентов",списКонтрагентов);
	Расшифровка.Установить("списСотрудников",списСотрудников);
	Расшифровка.Установить("списКонтрагентов1",списКонтрагентов1);
	Расшифровка.Установить("Отчет", "ОтчетПоКатегориямЦенВСхемахРасчетаБонусов");
	
	Расшифровка.Установить("Обновить");
	
	// Подготовка к заполнению выходных форм данными запроса
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить=0) Тогда
		Таб = СоздатьОбъект("Таблица");
	Иначе
		Таб.Очистить();
	КонецЕсли;
	
	Таб.ИсходнаяТаблица("Отчет");
	
	//Кнопки
	Таб.ВывестиСекцию("Кнопки");
	
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	Состояние("Заполнение выходной таблицы...");
	
	//Заполнение полей "Строки"
	Результат.ВыбратьСтроки();
	
	Пока Результат.ПолучитьСтроку() = 1 Цикл
		
		Контрагент = Результат.Контрагент;
		КатегорияЦенКонтрагента = Результат.КатегорияЦенКонтрагента;
		СхемаРасчетаБонуса = Результат.СхемаРасчетаБонуса;
		КатегорияЦенВСхеме = Результат.КатегорияЦенВСхеме;
		ПолучательБонуса = Результат.ПолучательБонуса;
		
		Если (ПустоеЗначение(КатегорияЦенВСхеме)=1) И (ПустоеЗначение(КатегорияЦенКонтрагента) = 1) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Отличия = 1 Тогда
			Если КатегорияЦенКонтрагента<>КатегорияЦенВСхеме Тогда
				Таб.ВывестиСекцию("Строка");
			КонецЕсли;
		Иначе
			Если КатегорияЦенКонтрагента<>КатегорияЦенВСхеме Тогда
				Таб.ВывестиСекцию("Строка_1");
			Иначе
				Таб.ВывестиСекцию("Строка");
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла;
	
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет по категориям цен в схемах расчета бонусов", "");
	
КонецПроцедуры

///////////////////////////////Предопределенные процедуры//////////////////////////////////////////////// 
Процедура ПриОткрытии()
	
	Если глФлагРасшифровки = 1 Тогда 
		
		Обновить = глОбновить;
		
		Период = глРасшифровка.Получить("Период");
		Отличия = глРасшифровка.Получить("Отличия");
		глРасшифровка.Получить("списКонтрагентов").Выгрузить(списКонтрагентов);
		глРасшифровка.Получить("списКонтрагентов1").Выгрузить(списКонтрагентов1);
		глРасшифровка.Получить("списСотрудников").Выгрузить(списСотрудников);
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;
	
	Форма.КнопкаПоУмолчанию("Сформировать");
	
КонецПроцедуры

///////////////////////////////////Работа со списками отбора и подбором///////////////////////////////////////
Процедура ДобавитьВСписок(Элт, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	
	списКонтрагентовДобав = ?(ПодборВБазу = 1, списКонтрагентов, списКонтрагентов1);
	
	Если Элт.Вид() = "Контрагенты" Тогда
		ДобавитьвСписок(Элт, списКонтрагентовДобав);
	ИначеЕсли Элт.Вид() = "Сотрудники" Тогда
		ДобавитьвСписок(Элт, списСотрудников);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры
