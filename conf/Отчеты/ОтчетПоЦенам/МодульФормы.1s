Перем спПодбора;
Перем Обновить; 
Перем Расшифровка; 
Перем Т, ТЗ,ТЗ_Групп;
Перем СписВЗ, СтрВССписаний;
Перем СтрокаДоступ;

Перем ТекЗакладка;

Перем СписокПодбора,СправочникПодбора;

//======================================================================
Процедура Сформировать()
	
	Если ПустоеЗначение(ВыбДата) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	//--- Технологические 
	СпрЦены 	= СоздатьОбъект("Справочник.Цены");
	Расшифровка = СоздатьОбъект("СписокЗначений");
	
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ОтчетПоЦенам");
	Расшифровка.Установить("ВыбДата", ВыбДата);
	Расшифровка.Установить("ВыбБазоваяКатегорияЦен", ВыбБазоваяКатегорияЦен);
	Расшифровка.Установить("фКроме", фКроме);
	Расшифровка.Установить("ПоГруппам", ПоГруппам);
	Расшифровка.Установить("фТолькоСхемы", фТолькоСхемы);
	Расшифровка.Установить("СписокВыбТМЦ",СписокВыбТМЦ);
	
	
	//--- Типы цен
	Тз_КатегорииЦен = СоздатьОбъект("ТаблицаЗначений");
	Тз_КатегорииЦен.НоваяКолонка("Категория","Справочник.КатегорииЦен");
	Тз_КатегорииЦен.НоваяКолонка("НаименованиеКатегории");
	СпрКатегорииЦен = СоздатьОбъект("Справочник.КатегорииЦен");
	СпрКатегорииЦен.ВыбратьЭлементы();
	Пока СпрКатегорииЦен.ПолучитьЭлемент() = 1 Цикл
		Если (фВыводитьПомеченныеНаУдалениеКатегорииЦен = 0) И (СпрКатегорииЦен.ПометкаУдаления() = 1) Тогда
			Продолжить;
		КонецЕсли;
		Тз_КатегорииЦен.НоваяСтрока();
		Тз_КатегорииЦен.Категория 				= СпрКатегорииЦен.ТекущийЭлемент();
		Тз_КатегорииЦен.НаименованиеКатегории 	= СпрКатегорииЦен.Наименование;
	КонецЦикла;
	
	Тз_КатегорииЦен.Сортировать("НаименованиеКатегории +");
	//Тз_КатегорииЦен.ВыбратьСтроку();
	
	 
	//...
	
	ПечФорма = "Таблица";
	
	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить = 0) Тогда
		Т = СоздатьОбъект("Таблица");
	Иначе
		Т.Очистить();
	КонецЕсли;
	Т.ИсходнаяТаблица(ПечФорма);	
	
	Запрос = СоздатьОбъект("Запрос");

	ТекстЗапроса = 
	"//{{ЗАПРОС(ДвижениеТМЦ)
	|Период с ВыбДата;
	|Товар = Справочник.ТМЦ.ТекущийЭлемент;";
	Если ПоГруппам = 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар без групп;";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Группировка Товар;";	
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|Условие(" + ?(фКроме = 1, "НЕ","") + "(Товар в СписокВыбТМЦ));
	|"//}}ЗАПРОС
	;

	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗтовары = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗтовары);
	Если ТЗтовары.КоличествоСтрок() = 0 Тогда
		Возврат;		
	КонецЕсли;
	
	Т.ВывестиСекцию("Кнопки");	
	Т.ВывестиСекцию("Заголовок");
	
	Запрос.вНачалоВыборки();
	
	Пока Запрос.Группировка(1) = 1 Цикл
			
		Если  Запрос.Товар.ЭтоГруппа() = 1 Тогда
			ПечГруппа = Запрос.Товар;
			Т.ВывестиСекцию("ГруппаТовар");			
		Иначе
			
			РасчетняЦена = "";
			
			ПечТовар 		= Запрос.Товар;
			
			Если ПустоеЗначение(ВыбБазоваяКатегорияЦен) = 0 Тогда
				ПечБазоваяЦена  = ВыбБазоваяКатегорияЦен;
			Иначе
				ПечБазоваяЦена  = Запрос.Товар.БазоваяКатегорияЦены;			
			КонецЕсли;
			
			БазЦенаНаДату 		= глВернутьЦену(Запрос.Товар,ПечБазоваяЦена,ВыбДата,Гривня);
			Т.ВывестиСекцию("Товар");	
			СпрЦены.ИспользоватьВладельца(Запрос.Товар);
			
			
			Тз_КатегорииЦен.ВыбратьСтроки();
			Пока Тз_КатегорииЦен.ПолучитьСтроку() = 1 Цикл
				
				Если МФКатЦены.РазмерСписка() > 0 Тогда		//--- множественній фильтр по категория цен							
					Если МФКатЦены.НайтиЗначение(Тз_КатегорииЦен.Категория) = 0 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
							
				ЦенаНаДату 		= "";
				РасчетняЦена 	= "";
				Разница		 	= "";
				
				Если СпрЦены.НайтиПоРеквизиту("КатегорияЦены",Тз_КатегорииЦен.Категория,0) = 0 Тогда
					
					ОбластьПечати = "ПустойТипЦены";
					
					ПечКатегорияЦены = " (не заполнена) " + СокрЛП(Тз_КатегорииЦен.Категория.Наименование);
					
				Иначе
					
					Если СпрЦены.ПометкаУдаления() = 1 Тогда
						ОбластьПечати = "ПустойТипЦены";
						ПечКатегорияЦены = " (не заполнена) " + СокрЛП(Тз_КатегорииЦен.Категория.Наименование);
					Иначе
						
						ОбластьПечати = "ТипЦен";
						
						СпрЦены.ИспользоватьДату(ВыбДата,1);
						
						ПечКатегорияЦены 	= СокрЛП(Тз_КатегорииЦен.Категория.Наименование);
						ЦенаНаДату 	 		= глВернутьЦену(Запрос.Товар,СпрЦены.КатегорияЦены,ВыбДата,Гривня);	
						
						Если (ПустоеЗначение(СпрЦены.СхемаЦенообразования)=1) И (фТолькоСхемы = 1) Тогда
							Продолжить;
						ИначеЕсли (ПустоеЗначение(СпрЦены.СхемаЦенообразования)=1) И (фТолькоСхемы = 0) Тогда 
							ПечФормула = " не заполнена ";
						ИначеЕсли ПустоеЗначение(СпрЦены.СхемаЦенообразования)=0 Тогда
							ПечФормула = СпрЦены.СхемаЦенообразования.Наименование;	
						КонецЕсли;	
						
						Если (ПустоеЗначение(СпрЦены.СхемаЦенообразования)= 0) И (БазЦенаНаДату <> 0) Тогда
							
							Если СпрЦены.СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена <> 2  Тогда
								РасчетняЦена		= ?(СпрЦены.СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена = 3, СпрЦены.Владелец.Цена_Прод.Получить(ВыбДата), глАвтоПересчетЦены(СпрЦены,БазЦенаНаДату)); 
								Разница				= Окр(ЦенаНаДату,2) - Окр(РасчетняЦена,2);
							КонецЕсли;
								
						КонецЕсли;
											
					КонецЕсли; 
									
				КонецЕсли;
					
				Т.ВывестиСекцию(ОбластьПечати);	
					
			КонецЦикла;
					
			// Учитываем что в учетной цене хранится значение без НДС
			//РасчетняЦена  = РасчетняЦена * (100 + глПроцентНДС (Запрос.Товар.СтавкаНДС))/100;
											
		КонецЕсли;
				
	КонецЦикла;	
		
	Т.ОбластьПечати(2);
	Т.ПараметрыСтраницы(2,,,,,,,,,1);
	Т.ТолькоПросмотр(1);
	Т.Опции(0,0,4);
	Т.Показать("Сформировать", "");
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ОбработкаПодбора(Значение) 	
	Перем ПредставлениеЗначения;
	
	Если (ВРег(Значение.Вид())=СправочникПодбора) И (СписокПодбора.НайтиЗначение(Значение)=0) Тогда
		ПредставлениеЗначения = Строка(Значение);
		Если СписокПодбора.НайтиЗначение(Значение) <> 1 Тогда
			СписокПодбора.ДобавитьЗначение(Значение,ПредставлениеЗначения);
		КонецЕсли;
		СписокПодбора.ТекущаяСтрока(СписокПодбора.РазмерСписка());
	КонецЕсли;
	
КонецПроцедуры

// ===============================

// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение="")	
	// закладки
    Если Номер=1 Тогда
		Форма.ИспользоватьСлой("Общий,Основной");
		ТекЗакладка = "Основной";
	Иначе   
		Форма.ИспользоватьСлой("Общий,Обработка");
		ТекЗакладка = "Обработка";
	КонецЕсли;      

	
КонецПроцедуры	// ПриВыбореЗакладки  

//======================================================================
Процедура ПриОткрытии()  
	
	ТекЗакладка = "Основной";
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		ВыбДата = глРасшифровка.Получить("ВыбДата");
		ВыбБазоваяКатегорияЦен = глРасшифровка.Получить("ВыбБазоваяКатегорияЦен");
		фКроме = глРасшифровка.Получить("фКроме");
		ПоГруппам = глРасшифровка.Получить("ПоГруппам");
		фТолькоСхемы = глРасшифровка.Получить("фТолькоСхемы");
		
		глРасшифровка.Получить("СписокВыбТМЦ").Выгрузить(СписокВыбТМЦ); 
		
		фССКоэф = глРасшифровка.Получить("фССКоэф");
		
		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
		РесурсСумма = 1;
	КонецЕсли;
КонецПроцедуры	

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("ВыбБазоваяКатегорияЦен", ВыбБазоваяКатегорияЦен);
	СохранитьЗначение("фТолькоСхемы", фТолькоСхемы);
	СохранитьЗначение("фКроме", фКроме);
	СохранитьЗначение("ПоГруппам", ПоГруппам);
	
КонецПроцедуры

// ===============================

// ПРОЦЕДУРЫ РАБОТЫ С ФОРМОЙ

// ===============================

// ===============================
// Название: РаботаСоСписком
// Параметры:
// 	Режим - строка, принимающая 4 значения:
//		"Добавить"
//		"ДобавитьНесколько"
// 		"Удалить"
// 		"УдалитьВсе"
//	Список - список значений, в котором задается множественный фильтр
//	ТипСправочника - строка, содержащая идентификатор справочнника, по
//						которому осуществляется мноджественный фильтр
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//   кнопок работы с множественными фильтрами ("...",".....","X","XX")
// Наименование,.
// Описание:
// процедура предназначена для добавления и удаления элементов
// из множественных фильтров
Процедура РаботаСоСписком(Режим,Список,ТипСправочника)
	
	Перем ТекПоз;
	Перем ТекЭлемент;
	Перем Фрм;
                                     
	Если ТипСправочника = "Категории" Тогда
		ТипСправочника = "ВидыКатегорий";
	КонецЕсли;	
	
	ТекПоз = Список.ТекущаяСтрока();
	Если ТекПоз>0 Тогда
		ТекЭлемент=Список.ПолучитьЗначение(ТекПоз);
	КонецЕсли;

	Если Режим="Добавить" Тогда		// добавляем в список один элемент
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,0,ТекЭлемент);
		Фрм.ВыборГруппы(1);

	ИначеЕсли Режим="ДобавитьНесколько" Тогда  // добавляем в список несколько элементов
		СписокПодбора = Список;
		СправочникПодбора = ВРег(ТипСправочника);
		// открываем окно подбора
		ОткрытьПодбор("Справочник."+ТипСправочника,,Фрм,1,ТекЭлемент);
		Фрм.ВыборГруппы(1);

 	ИначеЕсли Режим="УдалитьВсе" Тогда	// удаляем все элементы из списка
		Список.УдалитьВсе();

	ИначеЕсли Режим="Удалить" Тогда	// удаляем из списка один элемент
		Если ТекПоз>0 Тогда
			Список.УдалитьЗначение(ТекПоз);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры		// работа со списком

//====================================================================== 
Процедура ОчиститьПомеченныеКатегорииЦен()
	НомерСтроки =  МФКатЦены.РазмерСписка(); 

	Пока НомерСтроки <> 0 Цикл
		стр = "";
		ТекЗначение = МФКатЦены.ПолучитьЗначение(НомерСтроки, стр);
		Если ТекЗначение.ПометкаУдаления() = 1 Тогда
			МФКатЦены.УдалитьЗначение(НомерСтроки);
		КонецЕсли;	
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла; 
	
КонецПроцедуры // ОчиститьПомеченныеКатегорииЦен

//====================================================================== 
Процедура ЗаполнитьОтборТоварамиСБазовойЦеной()
	Если ПустоеЗначение(ВыбБазоваяКатегорияЦен) = 0 Тогда
		
		РаботаСоСписком("УдалитьВсе",СписокВыбТМЦ,"ТМЦ");
		
		СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
		СпрТМЦ.ВыбратьЭлементы();
		Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
				
			Если СпрТМЦ.ЭтоГруппа() = 1 Тогда
				Продолжить;				
			КонецЕсли;	
			
			Если СпрТМЦ.БазоваяКатегорияЦены.Получить(ВыбДата) = ВыбБазоваяКатегорияЦен Тогда
				СписокВыбТМЦ.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент(),СпрТМЦ.Наименование)
			КонецЕсли;
				
		КонецЦикла;
		
	Иначе
		Сообщить("Заполните базовую цену .");
		
	КонецЕсли;
	
	
	
	
КонецПроцедуры // ЗаполнитьОтборТоварамиСБазовойЦеной

//======================================================================

//======================================================================

ВыбБазоваяКатегорияЦен 	= ВосстановитьЗначение("ВыбБазоваяКатегорияЦен");
фТолькоСхемы 			= ВосстановитьЗначение("фТолькоСхемы");
фКроме 					= ВосстановитьЗначение("фКроме");
ПоГруппам			 	= ВосстановитьЗначение("ПоГруппам");

ВыбДата = ТекущаяДата(); 

МФКатЦены.УдалитьВсе(); 
ВсеЦены = СоздатьОбъект("Справочник.КатегорииЦен");
ВсеЦены.ВыбратьЭлементы();
Пока ВсеЦены.ПолучитьЭлемент()>0 Цикл
	МФКатЦены.ДобавитьЗначение(ВсеЦены.ТекущийЭлемент());      
КонецЦикла;	