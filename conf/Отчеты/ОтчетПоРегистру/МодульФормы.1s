Перем гПред, гУровеньРекурсии, гЗапрос, гТаб, гРегМД, гДлина, гВидыФункций;
Перем гТекЗакладка,гСписокПометок;
Перем гКоличествоСтрок;
//Переменные условий
Перем гУсл1,гУсл2,гУсл3,гУсл4,гУсл5,гУсл6,гУсл7,гУсл8,гУсл9,гУсл10;
Перем гУсл11,гУсл12,гУсл13,гУсл14,гУсл15,гУсл16,гУсл17,гУсл18,гУсл19,гУсл20;
//Переменные секций
Перем гСекцияСтрИзмерение,гСекцияФункции;
//список для сохранения установок формы
Перем гПараметрыУстановки;
Перем гСпВариантов,гТекДокумент,гПозДок;

Процедура ОбработкаДатаКон()
	Если ПустоеЗначение(ФормДатаКон) = 1 Тогда
		Попытка
			ФормДатаКон = ПолучитьДатуТА();
		Исключение
		    ФормДатаКон=РабочаяДата();
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура УстВариант (Вариант, Список, ВозмСписок,Реж)
	//Возвращает контекст работы со списками. Двигать 3 арг -> 2 арг.
	Поз = Найти(Вариант, ",");
	Что = СокрЛП(Лев(Вариант, Поз - 1));
	Куда = СокрЛП(Прав(Вариант, СтрДлина(Вариант) - Поз));
	Реж="";
    Если СтрЧислоВхождений(Куда,",")>0 Тогда
		Поз = Найти(Куда, ",");
		Реж = СокрЛП(Прав(Куда, СтрДлина(Куда) - Поз));
		Куда= СокрЛП(Лев(Куда, Поз - 1));
	КонецЕсли;
	Если Что = "Группы" Тогда
		Список = ФормГруппы;
		ВозмСписок = ФормВозмГруппы;
	Иначе
		Список = ФормФункции;
		ВозмСписок = ФормВозмФункции;
	КонецЕсли;

	Если Куда = "Вправо" Тогда
		ВремСписок = Список;
		Список = ВозмСписок;
		ВозмСписок = ВремСписок;
	КонецЕсли;
КонецПроцедуры

Процедура КнДвигать (Вариант)
	Перем Список, ВозмСписок, Пред,Реж;

	УстВариант(Вариант, Список, ВозмСписок,Реж);

	Если ВозмСписок.ТекущаяСтрока() = 0 Тогда
		Возврат;
	КонецЕсли;
	Зн = ВозмСписок.ПолучитьЗначение(ВозмСписок.ТекущаяСтрока(), Пред);
	Список.ДобавитьЗначение(Зн, Пред);
	ВозмСписок.УдалитьЗначение(ВозмСписок.ТекущаяСтрока());
КонецПроцедуры

Процедура КнДвигатьВсе (Вариант)
	Перем Список, ВозмСписок, Пред,Реж;

	УстВариант(Вариант, Список, ВозмСписок,Реж);

	Для Инд = 1 По ВозмСписок.РазмерСписка() Цикл
		зн = ВозмСписок.ПолучитьЗначение(ВозмСписок.РазмерСписка()-Инд+1, Пред);
		Если Реж="измерения" Тогда
			Если гПред.Принадлежит(зн) = 1 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Список.ВставитьЗначение(1,Зн, Пред);
	КонецЦикла;
    Если Реж="измерения" Тогда
		КолСтрок=ВозмСписок.РазмерСписка();
		Инд=1;
		Пока Инд<=КолСтрок Цикл
			зн = ВозмСписок.ПолучитьЗначение(Инд);
			Если гПред.Принадлежит(зн) = 0 Тогда
			    ВозмСписок.УдалитьЗначение(Инд);
				КолСтрок=КолСтрок-1;
			Иначе
				Инд=Инд+1;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	ВозмСписок.УдалитьВсе();
КонецПроцедуры

Процедура КнПорядок(Вариант)
	Перем Список, ВозмСписок,Реж;

	УстВариант(Вариант, Список, ВозмСписок,Реж);

	Поз = Список.ТекущаяСтрока();
	ПозЗапятой = Найти(Вариант, ",");
	Куда = СокрЛП(Прав(Вариант, СтрДлина(Вариант) - ПозЗапятой));

	Если (Куда = "Вверх") И (Поз > 1) Тогда
		Список.СдвинутьЗначение(-1, Поз);
	КонецЕсли;

	Если (Куда = "Вниз") И (Поз < Список.РазмерСписка()) И (Поз > 0) Тогда
		Список.СдвинутьЗначение(1, Поз);
	КонецЕсли;
КонецПроцедуры

Процедура ИницВозможные() Далее
Процедура ПриВыбореЗакладки(Ном,Значен) Далее

Функция ИницРегистр ()
	//инициализирует ФормРегистр списком регистров конфигурации
    ТабУсловия.УдалитьСтроки();
	ФормРегистр.УдалитьВсе();

	Для Инд = 1 По Метаданные.Регистр() Цикл
		ФормРегистр.ДобавитьЗначение(Метаданные.Регистр(Инд).Идентификатор, Метаданные.Регистр(Инд).Представление());
	КонецЦикла;

	Если ФормРегистр.РазмерСписка() > 0 Тогда
		ФормРегистр.ТекущаяСтрока(1);
		ИницВозможные();
	Иначе
		Предупреждение("Внимание!В текущей конфигурации нет регистров!");
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

Процедура ПриВыбМД()
	ТабУсловия.УдалитьСтроки();
КонецПроцедуры

Процедура ИницВозможные ()
	Перем СтрПредставление;
	//Заполняет варианты выбора функций и группировок для выб. регистра
	ФормВозмФункции.УдалитьВсе();
	ФормВозмГруппы.УдалитьВсе();
	ФормФункции.УдалитьВсе();
	ФормГруппы.УдалитьВсе();
	гДлина.УдалитьВсе();
	ТабУсловия.УдалитьСтроки();
	ФормАтрибДвижений.УдалитьВсе();
	гРегМД = Метаданные.Регистр(ФормРегистр.ТекущаяСтрока());
    Если ПустоеЗначение(гРегМД)=1 Тогда
       Возврат;
    КонецЕсли;
	Если гРегМД.ТипРегистра = "Остатки" Тогда
 		ФлНачОст=1;
		ФлПриход=1;
		ФлРасход=1;
		ФлКонОст=1;
        ФлОборот=0;
	Иначе
		// Регистр оборотов...
		ФлОборот=1;
 		ФлНачОст=0;
		ФлПриход=0;
		ФлРасход=0;
		ФлКонОст=0;
	КонецЕсли;

	Для Инд = 1 По гРегМД.Измерение() Цикл
		ФормВозмГруппы.ДобавитьЗначение(гРегМД.Измерение(Инд).Идентификатор,
			гРегМД.Измерение(Инд).Представление());
		гДлина.ДобавитьЗначение(гРегМД.Измерение(Инд).ДлинаПредставленияЗначения(6, 40, 20),
			гРегМД.Измерение(Инд).Идентификатор);
		ФормАтрибДвижений.ДобавитьЗначение(гРегМД.Измерение(Инд).Идентификатор,
			гРегМД.Измерение(Инд).Представление());
		ФормАтрибДвижений.Пометка(ФормАтрибДвижений.РазмерСписка(), 1);
	КонецЦикла;

	Для Инд = 1 По гРегМД.Ресурс() Цикл
		ФормФункции.ДобавитьЗначение(гРегМД.Ресурс(Инд).Идентификатор,
			гРегМД.Ресурс(Инд).Представление());
		гДлина.ДобавитьЗначение(гРегМД.Ресурс(Инд).ДлинаПредставленияЗначения(6, 40, 20),
			гРегМД.Ресурс(Инд).Идентификатор);
		ФормАтрибДвижений.ДобавитьЗначение(гРегМД.Ресурс(Инд).Идентификатор,
			гРегМД.Ресурс(Инд).Представление());
		ФормАтрибДвижений.Пометка(ФормАтрибДвижений.РазмерСписка(), 1);
	КонецЦикла;

	Для Инд = 1 По гРегМД.Реквизит() Цикл
		ФормВозмГруппы.ДобавитьЗначение(гРегМД.Реквизит(Инд).Идентификатор,
			гРегМД.Реквизит(Инд).Представление());
		гДлина.ДобавитьЗначение(гРегМД.Реквизит(Инд).ДлинаПредставленияЗначения(6, 40, 20),
			гРегМД.Реквизит(Инд).Идентификатор);
		ФормАтрибДвижений.ДобавитьЗначение(гРегМД.Реквизит(Инд).Идентификатор,
			гРегМД.Реквизит(Инд).Представление());
		ФормАтрибДвижений.Пометка(ФормАтрибДвижений.РазмерСписка(), 1);
	КонецЦикла;

	Для Инд = 1 По гПред.РазмерСписка() Цикл
		СтрИдент = гПред.ПолучитьЗначение(Инд,СтрПредставление);
		ФормВозмГруппы.ДобавитьЗначение(СтрИдент,СтрПредставление);
	КонецЦикла;
	ПриВыбореЗакладки(1,гТекЗакладка);
    ПриВыбМД();
КонецПроцедуры

Процедура ЗаполнитьСписокФункций()
	гВидыФункций.УдалитьВсе();
	Если ФлНачОст=1 Тогда
		гВидыФункций.ДобавитьЗначение("НачОст", "Нач. Ост.");
	КонецЕсли;
	Если ФлПриход=1 Тогда
		гВидыФункций.ДобавитьЗначение("Приход", "Приход");
	КонецЕсли;
	Если ФлРасход=1 Тогда
		гВидыФункций.ДобавитьЗначение("Расход", "Расход");
	КонецЕсли;
	Если ФлКонОст=1 Тогда
		гВидыФункций.ДобавитьЗначение("КонОст", "Кон. Ост.");
	КонецЕсли;
	Если ФлОборот=1 Тогда
		гВидыФункций.ДобавитьЗначение("Сумма", "Сумма");
	КонецЕсли;
КонецПроцедуры

//добавление переменных для условий
Функция ПеремУсловия(ТекРег,СписИзмерений)
	Текст="";
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку()>0 Цикл
		ТекЗнач = ТабУсловия.КолИдентификатор;
		Если (ПустоеЗначение(ТекЗнач)=1)ИЛИ(ТабУсловия.ФлВкл="") Тогда
			Продолжить;
		КонецЕсли;
		Если ТекЗнач<>"Текущий документ" Тогда
			Если СписИзмерений.Принадлежит(ТекЗнач) = 0 Тогда
				Текст = Текст + "
					|" + ТекЗнач + " = Регистр." + ТекРег + "." + ТекЗнач + ";";
			КонецЕсли;
		Иначе
			Текст = Текст + "
				|Док = Регистр." + ТекРег + ".ТекущийДокумент;";
		КонецЕсли;
	КонецЦикла;
	Возврат Текст;
КонецФункции

//присваивание перем. условия запроса
Функция ПрисвоитьУсловие(Ном,Значен)
	Если Ном=1 Тогда
		гУсл1=Значен;
	ИначеЕсли Ном=2 Тогда
		гУсл2=Значен;
	ИначеЕсли Ном=3 Тогда
		гУсл3=Значен;
	ИначеЕсли Ном=4 Тогда
		гУсл4=Значен;
	ИначеЕсли Ном=5 Тогда
		гУсл5=Значен;
	ИначеЕсли Ном=6 Тогда
		гУсл6=Значен;
	ИначеЕсли Ном=7 Тогда
		гУсл7=Значен;
	ИначеЕсли Ном=8 Тогда
		гУсл8=Значен;
	ИначеЕсли Ном=9 Тогда
		гУсл9=Значен;
	ИначеЕсли Ном=10 Тогда
		гУсл10=Значен;
	ИначеЕсли Ном=11 Тогда
		гУсл11=Значен;
	ИначеЕсли Ном=12 Тогда
		гУсл12=Значен;
	ИначеЕсли Ном=13 Тогда
		гУсл13=Значен;
	ИначеЕсли Ном=14 Тогда
		гУсл14=Значен;
	ИначеЕсли Ном=15 Тогда
		гУсл15=Значен;
	ИначеЕсли Ном=16 Тогда
		гУсл16=Значен;
	ИначеЕсли Ном=16 Тогда
		гУсл17=Значен;
	ИначеЕсли Ном=18 Тогда
		гУсл18=Значен;
	ИначеЕсли Ном=19 Тогда
		гУсл19=Значен;
	ИначеЕсли Ном=20 Тогда
		гУсл20=Значен;
	Иначе
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

//формирование условий
Функция ПолучитьУсловие(НачПоз)
	СтрРезультат="";
	НомСтр=НачПоз;
	СтрРазд="";
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку()>0 Цикл
		Если (ПустоеЗначение(ТабУсловия.КолИдентификатор)=1)ИЛИ
			(СокрЛП(ТабУсловия.ФлВкл)="")
			ИЛИ(ТабУсловия.КолПредставление="Текущий документ") Тогда
			Продолжить;
		КонецЕсли;
		НомСтр=НомСтр+1;
		Если ПрисвоитьУсловие(НомСтр,ТабУсловия.КолЗначение)=0 Тогда
		     Предупреждение("Внимание!Допустимо использовать не более "+НомСтр+" условий!");
			 Возврат СтрРезультат;
		КонецЕсли;
		СтрРезультат= СтрРезультат+СтрРазд+"Условие ("+Строка(ТабУсловия.КолИдентификатор)+" "+Строка(ТабУсловия.КолУсловие)+"гУсл"+Строка(НомСтр)+");";
		СтрРазд="
			|";
	КонецЦикла;
	Возврат СтрРезультат;
КонецФункции

Функция ПостроитьЗапрос()
	Текст = "";
	ТабУсловия.ВыбратьСтроки();
	ФлНачПоз=0;
	гТекДокумент=ПолучитьПустоеЗначение();
	Пока ТабУсловия.ПолучитьСтроку()>0 Цикл
		Если (ПустоеЗначение(ТабУсловия.КолИдентификатор)=0)И
			(СокрЛП(ТабУсловия.ФлВкл)<>"")
			И(ТабУсловия.КолПредставление="Текущий документ") Тогда
				ПрисвоитьУсловие(1,ТабУсловия.КолЗначение);
				гПозДок=гУсл1.ПолучитьПозицию();
				Текст = "С гПозДок по гПозДок;";
				ФлНачПоз=1;
				гТекДокумент=ТабУсловия.КолЗначение;
		КонецЕсли;
	КонецЦикла;
	Если Текст = "" Тогда
		Текст = "Период с ФормДатаНач по ФормДатаКон;";
	КонецЕсли;
	ТекРег = ФормРегистр.ПолучитьЗначение(ФормРегистр.ТекущаяСтрока());

	// Переменные запроса для измерений...
	Для Инд = 1 По ФормГруппы.РазмерСписка() Цикл
		ТекЗнач = ФормГруппы.ПолучитьЗначение(Инд);
		Если гПред.Принадлежит(ТекЗнач) = 0 Тогда
			Текст = Текст + "
			|" + ТекЗнач + " = Регистр." + ТекРег + "." + ТекЗнач + ";";
		КонецЕсли;
	КонецЦикла;

	// Переменные запроса для функций...
	Для Инд = 1 По ФормФункции.РазмерСписка() Цикл
		ТекЗнач = ФормФункции.ПолучитьЗначение(Инд);
		Текст = Текст + "
		|пз" + ТекЗнач + " = Регистр." + ТекРег + "." + ТекЗнач + ";";
	КонецЦикла;
    //Переменные запроса для условий
	Если ТабУсловия.КоличествоСтрок()>0 Тогда
		Текст=Текст+ПеремУсловия(ТекРег,ФормГруппы);
	КонецЕсли;
	// Группировки...
	Для Инд = 1 По ФормГруппы.РазмерСписка() Цикл
		ТекЗнач = ФормГруппы.ПолучитьЗначение(Инд);
		Текст = Текст + "
		|Группировка " + ТекЗнач + ";";
	КонецЦикла;

	// Функции...
	ЗаполнитьСписокФункций();
 	Для Инд = 1 По ФормФункции.РазмерСписка() Цикл
		ТекЗнач = ФормФункции.ПолучитьЗначение(Инд);
		Для Инд2 = 1 По гВидыФункций.РазмерСписка() Цикл
				Текст = Текст + "
				|Функция " + гВидыФункций.ПолучитьЗначение(Инд2) + ТекЗнач +
				" = " + гВидыФункций.ПолучитьЗначение(Инд2)+ "(пз" + ТекЗнач + ");";
		КонецЦикла;
	КонецЦикла;
    //Условия
	Если ТабУсловия.КоличествоСтрок()>0 Тогда
		Текст=Текст+ПолучитьУсловие(ФлНачПоз);
	КонецЕсли;
	Возврат Текст;
КонецФункции

Процедура ВывестиИзмерения()
	гТаб.ВывестиСекцию("Строка|гНачало");
	Таб = гСекцияСтрИзмерение;
	Для Инд = 1 По ФормГруппы.РазмерСписка() Цикл
		НаимГруппы=ФормГруппы.ПолучитьЗначение(Инд);
 		Значение = гЗапрос.ПолучитьАтрибут(НаимГруппы);
		Если Инд <= гУровеньРекурсии Тогда
 			Если ТипЗначенияСтр(Значение) = "Справочник" Тогда
				Таб.Область(1,1).Расшифровка(Значение);
				Значение=гЗапрос.ЗначениеУпорядочивания(Инд);
			ИначеЕсли ТипЗначенияСтр(Значение) = "Документ" Тогда
				Таб.Область(1,1).Расшифровка(Значение);
				Значение=Значение.ПредставлениеВида()+" "+Значение.НомерДок;
			Иначе
				Таб.Область(1,1).Расшифровка("",2);
			КонецЕсли;
			Таб.Имя.Текст = СокрЛП(Значение);
			Если гЗапрос.ЭтоГруппа(Инд) = 1 Тогда
				Таб.Имя.Полужирный(1);
			Иначе
				Таб.Имя.Полужирный(0);
			КонецЕсли;
		Иначе
			СтрТекст=Таб.Имя.Текст;
			Если ФлОднаКолГруппы=0 Тогда
				Таб.Имя.Текст = "(все)";
				Таб.Область(1,1).Расшифровка("",2);
 			Иначе
				Таб.Имя.Текст =СокрЛП(СтрТекст);
			КонецЕсли;
			Таб.Имя.Полужирный(1);
		КонецЕсли;
		Если (ФлОднаКолГруппы=1)И(Инд < ФормГруппы.РазмерСписка()) Тогда
  			Продолжить;
		КонецЕсли;
  		гТаб.ПрисоединитьСекцию(Таб);
 	КонецЦикла;
	Если  ФормГруппы.РазмерСписка()=0 Тогда
		Таб = гСекцияСтрИзмерение;
		Таб.Имя.Текст = "(все)";
		Таб.Имя.Полужирный(1);
		гТаб.ПрисоединитьСекцию(Таб);
		Таб.Область(1,1).Расшифровка("",2);
	ИначеЕсли ФлОднаКолГруппы=1 Тогда
		Таб.Имя.Текст = "(все)";
    КонецЕсли;

КонецПроцедуры

Процедура ВывестиФункции()
	Таб = гСекцияФункции;
	НачЗначение = 1 + ФормГруппы.РазмерСписка();
	Для Инд2 = 1 По гВидыФункций.РазмерСписка() Цикл
		Для Инд = 1 По ФормФункции.РазмерСписка() Цикл
			Таб.Знач.Текст  = Формат(гЗапрос.ПолучитьАтрибут
				(гВидыФункций.ПолучитьЗначение(Инд2)+ФормФункции.ПолучитьЗначение(Инд)), "Ч012.2");
			гТаб.ПрисоединитьСекцию(Таб);
		КонецЦикла;
		НачЗначение = НачЗначение + ФормФункции.РазмерСписка();
	КонецЦикла;
	гТаб.ПрисоединитьСекцию("Строка|гКонец");
КонецПроцедуры

Процедура ОбработкаРезультатов()
	гУровеньРекурсии = гУровеньРекурсии + 1;
    Если ФормГруппы.РазмерСписка()< гУровеньРекурсии Тогда
		Возврат;
	КонецЕсли;
	Пока гЗапрос.Группировка(ФормГруппы.ПолучитьЗначение(гУровеньРекурсии))=1 Цикл
		ВывестиИзмерения();
		ВывестиФункции();
 		гКоличествоСтрок=гКоличествоСтрок+1;
		КолСтрПечать=Цел(гКоличествоСтрок/50);
		Если КолСтрПечать>0 Тогда
			Состояние(" Обработка строк "+КолСтрПечать*50);
		КонецЕсли;

		Если гУровеньРекурсии < ФормГруппы.РазмерСписка() Тогда
			ОбработкаРезультатов();
		КонецЕсли;
	КонецЦикла;
	гУровеньРекурсии = гУровеньРекурсии - 1;
КонецПроцедуры

Функция ПечатьУсловия(СтрУсловия,СтрРасшифровки)
	СтрУсловия="";
	СтрРасшифровки="";
	ТабУсловия.ВыбратьСтроки();
	Рез=0;
	Пока ТабУсловия.ПолучитьСтроку()=1  Цикл
		Если СокрЛП(ТабУсловия.ФлВкл)<>"+" Тогда
			Продолжить;
		КонецЕсли;
		Рез=Рез+1;
		Если ТабУсловия.ТекущаяСтрока()<=3 Тогда
	  		СтрУсловия=СтрУсловия+ТабУсловия.КолПредставление+" "+ТабУсловия.КолУсловие+" "+ТабУсловия.КолЗначение+РазделительСтрок;
	  	КонецЕсли;
	  	СтрРасшифровки=СтрРасшифровки+ТабУсловия.КолПредставление+" "+ТабУсловия.КолУсловие+" "+ТабУсловия.КолЗначение+РазделительСтрок;
	КонецЦикла;
	Возврат Рез;
КонецФункции

Процедура СформироватьИтоги()
	Перем Час,Минута,Сек,СтрПредставление;
	Перем СтрУсловие,СтрРасшифровка;
	Если ФормДатаКон>ПолучитьДатуТА() Тогда
	    Если Вопрос("Конечная дата не может быть позже Точки актуальности.Изменить конечную дату отчета?",4)=7 Тогда
			Возврат;
		Иначе
			ФормДатаКон=ПолучитьДатуТА();
		КонецЕсли;
	КонецЕсли;
	Если (ФормДатаНач>ФормДатаКон)И(ФормДатаКон<>Дата(0)) Тогда
		Предупреждение("Внимание!Дата начала выбора превышает дату конца.Запрос не выполнен!");
		Возврат;
	КонецЕсли;
	ДатаКон=ФормДатаКон;
	Если РежТА=1 Тогда
		ДатаКон=Строка(ПолучитьДатуТА())+" "+ПолучитьВремяТА(Час,Минута,Сек);
	КонецЕсли;
	ТекстЗапроса = ПостроитьЗапрос();
	гЗапрос = СоздатьОбъект("Запрос");
	Попытка
	    гЗапрос.выполнить(ТекстЗапроса);
	Исключение
	    Предупреждение(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	гТаб = СоздатьОбъект("Таблица");
	гТаб.ИсходнаяТаблица("Сформировать");
	гТаб.Опции(0,0,гТаб.ВысотаТаблицы(),0);
    гСекцияСтрИзмерение = гТаб.ПолучитьСекцию("Строка|Измерение");
	гСекцияФункции=гТаб.ПолучитьСекцию("Строка|Функ");

	// Нарисуем шапку...
	гТаб.ВывестиСекцию("Заголовок|гНачало");
	Если ПустоеЗначение(гТекДокумент)=1 Тогда
		ПеродВывода="За период с "+ФормДатаНач+" по "+ДатаКон;
	Иначе
		ПеродВывода="по документу "+гТекДокумент;
	КонецЕсли;
	ПечатьУсловия(СтрУсловие,СтрРасшифровка);
	гТаб.ПрисоединитьСекцию("Заголовок|Измерение");
	гТаб.ВывестиСекцию("Шапка|гНачало");

	Таб = гТаб.ПолучитьСекцию("Шапка|Измерение");
	Если ФлОднаКолГруппы=0 Тогда
		//колонки группировок
		Для Инд = 1 По ФормГруппы.РазмерСписка() Цикл
			ФормГруппы.ПолучитьЗначение(Инд,СтрПредставление);
			Таб.Измерение.Текст = СтрПредставление;
			гТаб.ПрисоединитьСекцию(Таб);
		КонецЦикла;
	Иначе
		//одна колонка группировки
		СтрКолГруппы="";
		Для Инд = 1 По ФормГруппы.РазмерСписка() Цикл
			ФормГруппы.ПолучитьЗначение(Инд,СтрПредставление);
			Если Инд<ФормГруппы.РазмерСписка() Тогда
				СтрКолГруппы = СтрКолГруппы+СтрПредставление+"/ ";
			Иначе
				СтрКолГруппы = СтрКолГруппы+СтрПредставление;
			КонецЕсли;
		КонецЦикла;
		Если ФормГруппы.РазмерСписка()>0 Тогда
			Таб.Измерение.Текст = СтрКолГруппы;
			Таб.Измерение.Расшифровка(СтрКолГруппы);
			гТаб.ПрисоединитьСекцию(Таб);
		КонецЕсли;
	КонецЕсли;
    Если (ФормГруппы.РазмерСписка()=0) Тогда
		Таб.Измерение.Текст = "";
		гТаб.ПрисоединитьСекцию(Таб);
	КонецЕсли;

	КолВидовФунк = 0;
	Для Инд1 = 1 По гВидыФункций.РазмерСписка() Цикл
		КолВидовФунк = КолВидовФунк + 1;
	КонецЦикла;

	Если (ФлОднаКолГруппы=0)ИЛИ(ФормГруппы.РазмерСписка()=0)  Тогда
		КолГрупп=ФормГруппы.РазмерСписка();
	Иначе
		КолГрупп=1;
	КонецЕсли;
	НачПозиция = 2 + КолГрупп ;
	Если ФормГруппы.РазмерСписка()=0 Тогда
		НачПозиция=НачПозиция+1;
	КонецЕсли;
	Таб = гТаб.ПолучитьСекцию("Шапка|Функ");
	Для Инд1 = 1 По гВидыФункций.РазмерСписка() Цикл
			Для Инд = 1 По ФормФункции.РазмерСписка() Цикл
				Таб.Функ.Текст = ФормФункции.ПолучитьЗначение(Инд);
				гТаб.ПрисоединитьСекцию(Таб);
			КонецЦикла;
			СтрПред="";
			гВидыФункций.ПолучитьЗначение(Инд1,СтрПред);
			гТаб.Область(4, НачПозиция).Текст = СтрПред;
			Обл = гТаб.Область(4,НачПозиция, 4, ФормФункции.РазмерСписка() + НачПозиция - 1);
			Обл.Объединить();
			Обл.РамкаСлева(3);
			Обл.РамкаСправа(3);
 			НачПозиция = ФормФункции.РазмерСписка() + НачПозиция;
	КонецЦикла;
	гТаб.ПрисоединитьСекцию("Шапка|гКонец");

	гУровеньРекурсии = 0;
	гКоличествоСтрок=0;
	ОбработкаРезультатов();
	гЗапрос.вНачалоВыборки();
    ВывестиИзмерения();
	ВывестиФункции();
	гТаб.Область(4,2,гТаб.ВысотаТаблицы(), гТаб.ШиринаТаблицы()-1).РамкаОбвести(4,4,4,4);

	// Установим ширину...
	Для Инд = 1 По ФормГруппы.РазмерСписка() Цикл
		Ширина = гДлина.Получить(ФормГруппы.ПолучитьЗначение(Инд,СтрПредставление));
		Если ПустоеЗначение(Ширина) = 1 Тогда
			Ширина = 16;
		КонецЕсли;
		Если Ширина<СтрДлина(СтрПредставление)+1 Тогда
			Ширина=СтрДлина(СтрПредставление)+1;
		КонецЕсли;
		Если ФлОднаКолГруппы=0 Тогда
			гТаб.Область(,Инд+1,, Инд+1).ШиринаСтолбца(Ширина);
		ИначеЕсли гТаб.Область(,2,, 2).ШиринаСтолбца()<Ширина*8 Тогда
			гТаб.Область(,2,, 2).ШиринаСтолбца(Ширина);
		КонецЕсли;
	КонецЦикла;
	НачЗначение=1;
    Если ФлОднаКолГруппы=0 Тогда
		НачЗначение = 1 + ФормГруппы.РазмерСписка();
    Иначе
		Если ФормГруппы.РазмерСписка()>0 Тогда
			НачЗначение = 2;
		КонецЕсли;
    КонецЕсли;
	Если ФормГруппы.РазмерСписка()=0 Тогда
		НачЗначение=НачЗначение+1;
	КонецЕсли;
	Для Инд2 = 1 По гВидыФункций.РазмерСписка() Цикл
		Для Инд = 1 По ФормФункции.РазмерСписка() Цикл
			Ширина = гДлина.Получить(ФормФункции.ПолучитьЗначение(Инд,СтрПредставление));
			Если ПустоеЗначение(Ширина) = 1 Тогда
				Ширина = 16;
			КонецЕсли;
			Если Ширина<СтрДлина(СтрПредставление)+1 Тогда
				Ширина=СтрДлина(СтрПредставление)+1;
			КонецЕсли;
			гТаб.Область(, Инд + НачЗначение,, Инд + НачЗначение).ШиринаСтолбца(Ширина);
		КонецЦикла;
		НачЗначение = НачЗначение + ФормФункции.РазмерСписка();
	КонецЦикла;

	гТаб.Опции(0,0,5,0);
	гТаб.ТолькоПросмотр(1);
	гТаб.Показать("Регистр " + гРегМД.Представление());
КонецПроцедуры

Процедура ДобавитьКол(Таб,Рек,Стр,Кол)
	Кол=Кол+1;
	Обл=Таб.Область(Стр,Кол);
	Обл.Текст=Рек.Представление();
	Шир=Рек.ДлинаПредставленияЗначения(6, 40, 20);
	Если Шир<СтрДлина(Обл.Текст)+1 Тогда
		Шир=СтрДлина(Обл.Текст)+1;
	КонецЕсли;
	Таб.Область(,Кол,,Кол).ГоризонтальноеПоложение(1);
    Обл.ШиринаСтолбца(Шир);
 	Таб.Область(,Кол,,Кол).Контроль(4);
КонецПроцедуры

Функция ВыводитьАтрибДвиж(Значен)
	Рез=0;
	НомСтр=ФормАтрибДвижений.НайтиЗначение(Значен);
	Если НомСтр>0 Тогда
		Рез= ФормАтрибДвижений.Пометка(НомСтр);
	КонецЕсли;
	Возврат Рез;
КонецФункции

Функция СравнитьЗначЗапроса(СтрЗнак,Знач1,Знач2)
	Рез=1;
	Если ТипЗначенияСтр(Знач1)<>ТипЗначенияСтр(Знач2) Тогда
		Возврат 0;
	КонецЕсли;
	Если (СтрЗнак="<>") Тогда
		Рез=?(Знач1<>Знач2,1,0);
	ИначеЕсли (СтрЗнак="<=") Тогда
		Рез=?(Знач1<=Знач2,1,0);
	ИначеЕсли (СтрЗнак=">=") Тогда
		Рез=?(Знач1>=Знач2,1,0);
	ИначеЕсли (СтрЗнак=">") Тогда
		Рез=?(Знач1>Знач2,1,0);
	ИначеЕсли (СтрЗнак="<") Тогда
		Рез=?(Знач1<Знач2,1,0);
	ИначеЕсли (СтрЗнак="=") Тогда
		Рез=?(Знач1=Знач2,1,0);
	ИначеЕсли (СтрЗнак="В") Тогда
		Рез=Знач1.ПринадлежитГруппе(Знач2);
	КонецЕсли;
	Возврат Рез;
КонецФункции

Процедура ВыбратьДвиженияРегистра(Рег,ТабЗначений,ФиксКол,ТабАтрибутов,ТекДок)
	ТабЗначений=СоздатьОбъект("ТаблицаЗначений");
	ТабРезГруппировка=СоздатьОбъект("ТаблицаЗначений");
	ТабРезГруппировка.НоваяКолонка("Наименование");
	ТабРезГруппировка.НоваяКолонка("Значение");

	Для НомКол =1  По ФиксКол  Цикл
	   ТабЗначений.НоваяКолонка();
	КонецЦикла;
    Кол=ФиксКол;
	ТабАтрибутов.ВыбратьСтроки();
	Пока ТабАтрибутов.ПолучитьСтроку()>0   Цикл
		ТабЗначений.НоваяКолонка(ТабАтрибутов.Имя);
	КонецЦикла;

    Состояние(" Выбор движений регистров...");
	Если ПустоеЗначение(ТекДок)=1 Тогда
		Рег.ВыбратьДвижения(ФормДатаНач,ФормДатаКон);
	Иначе
		Рег.ВыбратьДвиженияДокумента(ТекДок);
	КонецЕсли;
	//вывод значений
	Стр=0;
	Пока Рег.ПолучитьДвижение()=1 Цикл
		Док=Рег.ТекущийДокумент();
		ТабУсловия.ВыбратьСтроки();
		ВклВУсловие=1;
		Пока ТабУсловия.ПолучитьСтроку()>0 Цикл
			Знач2=ТабУсловия.КолЗначение;
			Если (ПустоеЗначение(ТабУсловия.КолИдентификатор)=1)ИЛИ(СокрЛП(ТабУсловия.ФлВкл)="")
				ИЛИ((СокрЛП(ТабУсловия.КолУсловие) = "=")И(ПустоеЗначение(ТекДок)=1))
				ИЛИ((СокрЛП(ТабУсловия.КолУсловие) = "В")И(ПустоеЗначение(ТекДок)=1))
				ИЛИ (СокрЛП(ТабУсловия.КолИдентификатор)="Текущий документ") Тогда
				Продолжить;
			КонецЕсли;
			Знач1= Рег.ПолучитьАтрибут(ТабУсловия.КолИдентификатор);
			Если СравнитьЗначЗапроса(СокрЛП(ТабУсловия.КолУсловие),Знач1,Знач2)=0 Тогда
				ВклВУсловие=0;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ВклВУсловие=0 Тогда
			Продолжить;
		КонецЕсли;

		Стр=Стр+1;
		ТабЗначений.НоваяСтрока();
		ТабЗначений.УстановитьЗначение(Стр,1,);
		Если Рег.Приход=1 Тогда
			ЗнакДвижения="+";
		Иначе
        	ЗнакДвижения="-";
		КонецЕсли;
		ДатаДок=Док.ДатаДок;
		ТабЗначений.УстановитьЗначение(Стр,1,ЗнакДвижения);
		ТабЗначений.УстановитьЗначение(Стр,2,ДатаДок);
		ТабЗначений.УстановитьЗначение(Стр,3,Док);
		Состояние(" Обработка документов за: "+ДатаДок);
		Кол=ФиксКол;

		ТабАтрибутов.ВыбратьСтроки();
		Пока ТабАтрибутов.ПолучитьСтроку()>0   Цикл
			ТабЗначений.УстановитьЗначение(Стр,ТабАтрибутов.Имя,Рег.ПолучитьАтрибут(ТабАтрибутов.Имя));
		КонецЦикла;

	КонецЦикла;
КонецПроцедуры


//печать движения регистров
Процедура СформироватьДвижения()
	Перем ТабЗначений,СтрУсловие,СтрРасшифровка;
	Перем Час,Минута,Сек;
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	Рег=СоздатьОбъект("Регистр."+ФормРегистр.ПолучитьЗначение(ФормРегистр.ТекущаяСтрока()));
	МД=Метаданные.Регистр(Рег.Вид());
	ТабАтрибуты=СоздатьОбъект("ТаблицаЗначений");
	ТабАтрибуты.НоваяКолонка("Имя");
	ТабАтрибуты.НоваяКолонка("ТипАтрибута");
	ТабАтрибуты.НоваяКолонка("Тип");

	ФиксКол=4;
 	Таб.Область(1,2).Текст="Отчет по регистру "+МД.Представление();
	Таб.Область(1,2).РазмерШрифта(12);
	Таб.Область(1,2).Полужирный(1);
	Если РежТА=0 Тогда
 		Таб.Область(2,2).Текст="За период с "+ФормДатаНач+" по "+ФормДатаКон;
 	Иначе
 		Таб.Область(2,2).Текст="За период с "+ФормДатаНач+" по "+Строка(ПолучитьДатуТА())+" "+ПолучитьВремяТА(Час,Минута,Сек);
 	КонецЕсли;
	Таб.Область(2,2).РазмерШрифта(10);
	Таб.Область(2,2).Полужирный(1);
	Стр=3;
	ПечатьУсловия(СтрУсловие,СтрРасшифровка);
	Таб.Область(Стр,2).Текст= СтрУсловие;
	Таб.Область(Стр,2).Расшифровка(СтрРасшифровка);
	Таб.Область(Стр,2).Полужирный(1);
	Стр=Стр+1;
	Таб.Область(Стр,2).Текст="Дв.";
	Таб.Область(Стр,2).ШиринаСтолбца(4);
	Таб.Область(,2,,2).Полужирный(1);
	Таб.Область(Стр,2,Стр,2).РазмерШрифта(8);
	Таб.Область(Стр,3).Текст="Дата";
	Таб.Область(Стр,3).ШиринаСтолбца(10);
	Таб.Область(Стр,4).Текст="Текущий документ";
	Таб.Область(Стр,4).ШиринаСтолбца(20);
	Таб.Область(Стр,1,Стр,4).ГоризонтальноеПоложение(1);
	Таб.Область(Стр,2,Стр,4).ВысотаСтроки(22.5);

	Кол=ФиксКол;
    КолКолонок=ФиксКол;
	Для Инд=1 По МД.Измерение() Цикл
		ЗаголовокКол=МД.Измерение(Инд);
		Если ВыводитьАтрибДвиж(ЗаголовокКол.Идентификатор)=1  Тогда
			ДобавитьКол(Таб,МД.Измерение(Инд),Стр,Кол);
			КолКолонок=КолКолонок+1;
			ТабАтрибуты.НоваяСтрока();
			ТабАтрибуты.Имя=МД.Измерение(Инд).Идентификатор;
            ТабАтрибуты.ТипАтрибута="Измерение";
			ТабАтрибуты.Тип=МД.Измерение(Инд).Тип;
		КонецЕсли;
	КонецЦикла;

	Для Инд=1 По МД.Ресурс() Цикл
		ЗаголовокКол=МД.Ресурс(Инд);
		Если ВыводитьАтрибДвиж(ЗаголовокКол.Идентификатор)=1  Тогда
			ДобавитьКол(Таб,МД.Ресурс(Инд),Стр,Кол);
			КолКолонок=КолКолонок+1;
			ТабАтрибуты.НоваяСтрока();
			ТабАтрибуты.Имя=МД.Ресурс(Инд).Идентификатор;
            ТабАтрибуты.ТипАтрибута="Ресурс";
			ТабАтрибуты.Тип=МД.Ресурс(Инд).Тип;
		КонецЕсли;
	КонецЦикла;

	Для Инд=1 По МД.Реквизит() Цикл
		ЗаголовокКол=МД.Реквизит(Инд);
		Если ВыводитьАтрибДвиж(ЗаголовокКол.Идентификатор)=1  Тогда
			ДобавитьКол(Таб,МД.Реквизит(Инд),Стр,Кол);
			КолКолонок=КолКолонок+1;
			ТабАтрибуты.НоваяСтрока();
			ТабАтрибуты.Имя=МД.Реквизит(Инд).Идентификатор;
            ТабАтрибуты.ТипАтрибута="Измерение";
			ТабАтрибуты.Тип=МД.Реквизит(Инд).Тип;
		КонецЕсли;
	КонецЦикла;
	Шапка=Таб.Область(Стр,2,Стр,КолКолонок);
	Шапка.РазмерШрифта(10);
	Шапка.Полужирный(1);
	Шапка.РамкаОбвести(4,4,4,4);
	Шапка.Контроль(2);
	Шапка.ЦветФона(14745568);
	Док=0;

	//фильтр
	Рег.УстановитьФильтр();
	ТабУсловия.ВыбратьСтроки();
	ТекДок=ПолучитьПустоеЗначение();
	Пока ТабУсловия.ПолучитьСтроку()>0 Цикл
		Если СокрЛП(ТабУсловия.ФлВкл)="+" Тогда
			Фл=0;
			Если СокрЛП(ТабУсловия.КолУсловие) = "=" Тогда
				Фл=1;
			ИначеЕсли СокрЛП(ТабУсловия.КолУсловие) = "В" Тогда
				Фл=2;
			КонецЕсли;
			Если ТабУсловия.КолИдентификатор="Текущий документ" Тогда
                ТекДок=ТабУсловия.КолЗначение;
			Иначе
		    	Рег.УстановитьЗначениеФильтра(ТабУсловия.КолИдентификатор,ТабУсловия.КолЗначение,Фл);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ВыбратьДвиженияРегистра(Рег,ТабЗначений,ФиксКол-1,ТабАтрибуты,ТекДок);
	ТабЗначений.ВыбратьСтроки();
	//вывод значений
	НомСтрТабЗначений=0;
	Если ТабЗначений.КоличествоСтрок()>0 Тогда
		ПредыдДок=ТабЗначений.ПолучитьЗначение(1,3);
	КонецЕсли;
	Пока ТабЗначений.ПолучитьСтроку()=1 Цикл
		Стр=Стр+1;
		НомСтрТабЗначений=НомСтрТабЗначений+1;
		Док=ТабЗначений.ПолучитьЗначение(НомСтрТабЗначений,3);
		ЗнакДвижения=ТабЗначений.ПолучитьЗначение(НомСтрТабЗначений,1);
		ДатаДок=ТабЗначений.ПолучитьЗначение(НомСтрТабЗначений,2);
		Если ЗнакДвижения="+" Тогда
    		Таб.Область(Стр,2).ЦветТекста(32768);
		Иначе
			Таб.Область(Стр,2).ЦветТекста(255,,);
		КонецЕсли;
		Таб.Область(Стр,2).Текст=СокрЛП(ЗнакДвижения);
		Таб.Область(Стр,2).ЦветТекста(,,200);
		Таб.Область(Стр,2).Полужирный(1);
		Таб.Область(Стр,2).РазмерШрифта(11);
		Таб.Область(Стр,2).ГоризонтальноеПоложение(3);
		Таб.Область(Стр,3).Текст=СокрЛП(Док.ДатаДок);
		Таб.Область(Стр,4).Текст=СокрЛП(Док.ПредставлениеВида())+" "+СокрЛП(Док.НомерДок);
		Таб.Область(Стр,4).Расшифровка(Док,1);
		Таб.Область(Стр,4).ГоризонтальноеПоложение(1) ;

		Кол=ФиксКол;
		ТабАтрибуты.ВыбратьСтроки();
		Пока ТабАтрибуты.Получитьстроку()=1 Цикл
			Кол=Кол+1;
			Таб.Область(Стр,Кол).Текст=СокрЛП(ТабЗначений.ПолучитьЗначение(НомСтрТабЗначений,ТабАтрибуты.Имя));
			Если ТабАтрибуты.Тип="Число" Тогда
				Таб.Область(Стр,Кол).ГоризонтальноеПоложение(2);
			Иначе
				Таб.Область(Стр,Кол).ГоризонтальноеПоложение(1);
			КонецЕсли;
		КонецЦикла;
		ОблСтр=Таб.Область(Стр,2,Стр,КолКолонок);
		Если ПредыдДок<>Док Тогда
			ОблСтр.РамкаСверху(4);
			ПредыдДок=Док;
		Иначе
			ОблСтр.РамкаСверху(1);
		КонецЕсли;
	КонецЦикла;
	Таб.Область(4,2,Стр,2).РамкаСлева(4);
	Таб.Область(4,3,Стр,КолКолонок).РамкаСлева(3);

	Таб.Область(4,Инд+ФиксКол,Стр,Инд+ФиксКол).РамкаСлева(3);

	Таб.Область(4,КолКолонок,Стр,КолКолонок).РамкаСправа(4);
	Таб.Область(Стр,2,Стр,КолКолонок).РамкаСнизу(4);
	Таб.Область(5,3,Стр,КолКолонок).Контроль(4);
	Таб.Область(5,2,Стр,КолКолонок).ВертикальноеПоложение(2);
    Таб.Область(3,2,3,КолКолонок).ВертикальноеПоложение(3);
	Таб.Область(,1,,1).ШиринаСтолбца(3);
	Таб.Опции(0,0,4,ФиксКол);
	Таб.ТолькоПросмотр(1);
	Таб.Показать(""+МД);
КонецПроцедуры


Процедура Сформировать(Реж)
	Если ФормРегистр.ТекущаяСтрока()=0 Тогда
		Предупреждение("Внимание!Не выбран регистр!");
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(ФормРегистр.ПолучитьЗначение(ФормРегистр.ТекущаяСтрока()))=1 Тогда
		Предупреждение("Внимание!Не выбран регистр!");
		Возврат;
	КонецЕсли;
	Если Реж="запрос" Тогда
		СформироватьИтоги();
	ИначеЕсли Реж="движения" Тогда
		СформироватьДвижения();
	КонецЕсли;
КонецПроцедуры

Процедура УправлениеЗакладками()
	Форма.Закладки.ДобавитьЗначение("Итоги","Итоги");
	Форма.Закладки.ДобавитьЗначение("Движения","Движения");
	Форма.Закладки.ДобавитьЗначение("Условия","Условия");
	Форма.Закладки.ДобавитьЗначение("Настройки","Настройки");
	Форма.ИспользоватьСлой("Основной,Итоги",2);
КонецПроцедуры

Процедура УдалУсловие()
	Если ТабУсловия.ТекущаяСтрока()>0 Тогда
		ТабУсловия.УдалитьСтроку(ТабУсловия.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Процедура ВыбратьУсловие(НомТекСтр) Далее

Процедура ИзмУсловие()
	Если ТабУсловия.ТекущаяСтрока()>0 Тогда
		ВыбратьУсловие(ТабУсловия.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Процедура РежимТА()
	Если РежТА=1 Тогда
		ФормДатаКон=Дата(0);
		Форма.ФормДатаКон.Доступность(0);
		Форма.КнВыбПериод.Доступность(0);
	Иначе
		Форма.ФормДатаКон.Доступность(1);
		Форма.КнВыбПериод.Доступность(1);
	КонецЕсли;
КонецПроцедуры

Процедура ВыбратьУсловие(НомТекСтр)
	
	Если НомТекСтр>ТабУсловия.КоличествоСтрок() Тогда
		НомТекСтр=0;
	КонецЕсли;

	Если (НомТекСтр>0)И(ТабУсловия.ТекущаяКолонка()="ФлВкл") Тогда
		Если  СокрЛП(ТабУсловия.ФлВкл)="" Тогда
			ТабУсловия.ФлВкл="+";
		Иначе
			ТабУсловия.ФлВкл="";
		КонецЕсли;
		Возврат;
	КонецЕсли;

	СписокПарам=СоздатьОбъект("СписокЗначений");
	
	//вызов диалога выбора
	СписокПарам.ДобавитьЗначение("Регистр","Режим");
	СписокПарам.ДобавитьЗначение(Метаданные.Регистр(ФормРегистр.ТекущаяСтрока()),"Объект");
	Если НомТекСтр>0 Тогда
		Если СокрЛП(ТабУсловия.ПолучитьЗначение(НомТекСтр,"ФлВкл"))="+" Тогда
			Вкл=1;
		Иначе
			Вкл=0;
		КонецЕсли;
		СписокПарам.ДобавитьЗначение(Вкл,"ВклУсловие");
		СписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолИдентификатор"),"Атрибут");
		СписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолУсловие"),"Условие");
		СписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолЗначение"),"Значение");
	КонецЕсли;
	ПеремКонт=СписокПарам;
    ОткрытьФормуМодально("Отчет.DlgQuery",ПеремКонт) ;
	Если ПустоеЗначение(ПеремКонт)=1 Тогда
		Возврат;
	КонецЕсли;
	Если ПеремКонт.РазмерСписка()=0 Тогда
		Возврат;
	КонецЕсли;
	//проверка значений перед вставкой новой
	ВыбАтриб=ПеремКонт.Получить("Атрибут");
	Если НомТекСтр=0 Тогда
		ТабУсловия.ВыбратьСтроки();
		Пока ТабУсловия.ПолучитьСтроку()=1  Цикл
	        Если ВыбАтриб=ТабУсловия.КолИдентификатор Тогда
				Предупреждение("Внимание,условие для "+Строка(ВыбАтриб)+" уже определено!");
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если НомТекСтр<=0 Тогда
		ТабУсловия.НоваяСтрока();
		НомТекСтр=ТабУсловия.НомерСтроки;
		ТабУсловия.ТекущаяСтрока(НомТекСтр);
	КонецЕсли;
	СтрФл="";
	Если ПеремКонт.Получить("ВклУсловие")=1 Тогда
		СтрФл="+";
	КонецЕсли;
	ТабУсловия.УстановитьЗначение(НомТекСтр,"ФлВкл",СтрФл);
	ТабУсловия.УстановитьЗначение(НомТекСтр,"КолИдентификатор",ВыбАтриб);
	ТабУсловия.УстановитьЗначение(НомТекСтр,"КолУсловие",ПеремКонт.Получить("Условие"));
	ТабУсловия.УстановитьЗначение(НомТекСтр,"КолПредставление",ПеремКонт.Получить("Представление"));
	ТабУсловия.УстановитьЗначение(НомТекСтр,"КолЗначение",ПеремКонт.Получить("Значение"));
КонецПроцедуры


Процедура ВклАтрибуты(Фл)
	Для Инд =1  По ФормАтрибДвижений.РазмерСписка()  Цикл
	   ФормАтрибДвижений.Пометка(Инд,Фл)
	КонецЦикла;
КонецПроцедуры

//сохранение параметров формы
Процедура СохранитьПараметрыФормы()
	Перем Путь,ИмяФайла;
	Перем СтрПредст;
	РасположениеФайла(Путь,ИмяФайла);

	ПараметрыУстановки=СоздатьОбъект("СписокЗначений");
	СписВар=СоздатьОбъект("СписокЗначений");
	СохрТекст=СоздатьОбъект("Текст");
	ПараметрыУстановки.УдалитьВсе();
	//элементы настройки
	гСпВариантов.Выгрузить(СписВар);
	ПараметрыУстановки.ДобавитьЗначение(СписВар,"СпВариантов");

	СохрТекст.ДобавитьСтроку(ЗначениеВСтрокуВнутр(ПараметрыУстановки));
	ИмяФайла=СокрЛП(Лев(ИмяФайла,СтрДлина(ИмяФайла)-4))+".prm";
	СохрТекст.Записать(СокрЛП(КаталогПользователя())+ИмяФайла);
КонецПроцедуры

//восстановление параметров формы
Функция ВосстановитьПараметрыФормы()
	Перем Путь,ИмяФайла;
	ФАЙЛ= СоздатьОбъект("ФС");
    РасположениеФайла(Путь,ИмяФайла);
	ИмяФайла=СокрЛП(Лев(ИмяФайла,СтрДлина(ИмяФайла)-4))+".prm";
	Если ФАЙЛ.СуществуетФайл(КаталогПользователя()+ИмяФайла)=0 Тогда
	    Возврат 0;
	КонецЕсли;
	ПараметрыУстановки=СоздатьОбъект("СписокЗначений");
	СохрТекст=СоздатьОбъект("Текст");
	СохрТекст.Открыть(КаталогПользователя()+ИмяФайла);
	Стр="";
	Для Инд =1  По СохрТекст.КоличествоСтрок()  Цикл
	   Стр=Стр+СохрТекст.ПолучитьСтроку(Инд);
	КонецЦикла;
	ПараметрыУстановки=ЗначениеИзСтрокиВнутр(Стр);

	ПараметрыУстановки.Получить("СпВариантов").Выгрузить(гСпВариантов);
	Форма.Обновить(1);
	Возврат гСпВариантов.РазмерСписка();
КонецФункции

// Настройки формы
Процедура СоздатьВариант(ПараметрыУстановки)
	ПараметрыУстановки.УдалитьВсе();
	СписФормГруппы=СоздатьОбъект("СписокЗначений");
	СписФормВозмГруппы=СоздатьОбъект("СписокЗначений");
	СписФормФункции=СоздатьОбъект("СписокЗначений");
	СписФормВозмФункции=СоздатьОбъект("СписокЗначений");
	СписФормАтрибДвижений=СоздатьОбъект("СписокЗначений");
	СписУсловий=СоздатьОбъект("ТаблицаЗначений");
	//сохранение нового варианта в список
	ПараметрыУстановки.ДобавитьЗначение(ФормРегистр.ПолучитьЗначение(ФормРегистр.ТекущаяСтрока()),"Регистр");
	//условия
	ФормГруппы.Выгрузить(СписФормГруппы);
	ПараметрыУстановки.ДобавитьЗначение(СписФормГруппы,"ФормГруппы");
	ФормВозмГруппы.Выгрузить(СписФормВозмГруппы);
	ПараметрыУстановки.ДобавитьЗначение(СписФормВозмГруппы,"ФормВозмГруппы");
	//функции
	ФормФункции.Выгрузить(СписФормФункции);
	ПараметрыУстановки.ДобавитьЗначение(СписФормФункции,"ФормФункции");
	ФормВозмФункции.Выгрузить(СписФормВозмФункции);
	ПараметрыУстановки.ДобавитьЗначение(СписФормВозмФункции,"ФормВозмФункции");

	ПараметрыУстановки.ДобавитьЗначение(ФлНачОст,"ФлНачОст");
	ПараметрыУстановки.ДобавитьЗначение(ФлПриход,"ФлПриход");
	ПараметрыУстановки.ДобавитьЗначение(ФлРасход,"ФлРасход");
	ПараметрыУстановки.ДобавитьЗначение(ФлКонОст,"ФлКонОст");
	ПараметрыУстановки.ДобавитьЗначение(ФлОборот,"ФлОборот");
	ТабУсловия.Выгрузить(СписУсловий);
	ПараметрыУстановки.ДобавитьЗначение(СписУсловий,"ТабУсловия");
	ФормАтрибДвижений.Выгрузить(СписФормАтрибДвижений);
	ПараметрыУстановки.ДобавитьЗначение(СписФормАтрибДвижений,"ФормАтрибДвижений");
	ПараметрыУстановки.ДобавитьЗначение(ФлОднаКолГруппы,"ФлОднаКолГруппы");
КонецПроцедуры

Процедура ВосстановитьВариант(НаимВарианта)
	Перем Стр;
	//установка элементов формы из варианта
	СпПарам=гСпВариантов.Получить(НаимВарианта);
	Если ПустоеЗначение(СпПарам)=1 Тогда
	   Возврат;
	КонецЕсли;
	ТекРег=СпПарам.Получить("Регистр");
	Ном=ФормРегистр.НайтиЗначение(ТекРег);
	Если Ном>0 Тогда
	    ФормРегистр.ТекущаяСтрока(Ном);
		Форма.Обновить(0);
		ИницВозможные();
	Иначе
		Возврат ;
	КонецЕсли;

	СпПарам.Получить("ФормГруппы").Выгрузить(ФормГруппы);
	СпПарам.Получить("ФормВозмГруппы").Выгрузить(ФормВозмГруппы);
	СпПарам.Получить("ФормФункции").Выгрузить(ФормФункции);
	СпПарам.Получить("ФормВозмФункции").Выгрузить(ФормВозмФункции);
	ФлНачОст=СпПарам.Получить("ФлНачОст");
	ФлПриход=СпПарам.Получить("ФлПриход");
	ФлРасход=СпПарам.Получить("ФлРасход");
	ФлКонОст=СпПарам.Получить("ФлКонОст");
	ФлОборот= СпПарам.Получить("ФлОборот");
	ФлОднаКолГруппы=СпПарам.Получить("ФлОднаКолГруппы");
	СпПарам.Получить("ТабУсловия").Выгрузить(ТабУсловия);
	ТабУсловия.ВидимостьКолонки("КолИдентификатор",0);
	СпПарам.Получить("ФормАтрибДвижений").Выгрузить(ФормАтрибДвижений);
КонецПроцедуры

Процедура ЗаписьВарианта()
	Если СокрЛП(ВыбВариант)="" Тогда
	    Предупреждение("Внимание!Не введено наименование настройки!");
		Возврат;
	КонецЕсли;
	СпПарам=гСпВариантов.Получить(СокрЛП(ВыбВариант));
	Если ПустоеЗначение(СпПарам)=1 Тогда
		//создадим новый вариант
	   СпПарам=СоздатьОбъект("СписокЗначений");
	   СоздатьВариант(СпПарам);
	   гСпВариантов.ДобавитьЗначение(СпПарам,СокрЛП(ВыбВариант));
	Иначе
	   СоздатьВариант(СпПарам);
	   гСпВариантов.Установить(СокрЛП(ВыбВариант),СпПарам);
	КонецЕсли;
    гСпВариантов.ТекущаяСтрока(гСпВариантов.НайтиЗначение(СпПарам));
	СохранитьПараметрыФормы();
КонецПроцедуры

Процедура УдалитьВариант()
	ТекСпис=гСпВариантов.Получить(СокрЛП(ВыбВариант));
	Ном=гСпВариантов.НайтиЗначение(ТекСпис);
	ВыбВариант="";
	Если Ном>0 Тогда
		гСпВариантов.УдалитьЗначение(Ном);
		СохранитьПараметрыФормы();
	КонецЕсли;
КонецПроцедуры

// Предопределенные процедуры...
Процедура ПриВыбореЗакладки(Ном,Значен)
	Если Значен="Итоги" Тогда
		гРегМД = Метаданные.Регистр(ФормРегистр.ТекущаяСтрока());
		Если гРегМД.Выбран()=1 Тогда
			Если гРегМД.ТипРегистра = "Остатки" Тогда
				Форма.ИспользоватьСлой("Основной,Итоги, ВыбФункцииОстатки",2);
			Иначе
				Форма.ИспользоватьСлой("Основной,Итоги, ВыбФункцииОборот",2);
			КонецЕсли;
		Иначе
			Форма.ИспользоватьСлой("Основной",2);
		КонецЕсли;
	ИначеЕсли Значен="Движения" Тогда
		Форма.ИспользоватьСлой("Основной, Движения",2);
	ИначеЕсли Значен="Условия" Тогда
		Форма.ИспользоватьСлой("Основной,Условия",2);
	ИначеЕсли Значен="Настройки" Тогда
		Форма.ИспользоватьСлой("Основной,Настройки",2);
	КонецЕсли;
	гТекЗакладка=Значен;
КонецПроцедуры

Процедура ПриОткрытии ()
	Если ИницРегистр()=0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	УправлениеЗакладками();
	ИницВозможные();
	Если ВосстановитьПараметрыФормы()=0 Тогда
		ВыбВариант="Основной";
	КонецЕсли;
	ПриВыбореЗакладки(1,"Итоги");
	Если ПустоеЗначение(ФормДатаНач) = 1 Тогда
		ФормДатаКон = ПолучитьДатуТА();
		ФормДатаНач = НачКвартала(ФормДатаКон);
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьПараметрыФормы();
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ЭлемДиалога,ФлагСтандОбр)
	Перем ВыбПоз,СтрПредст;
	Если ЭлемДиалога="ВыбВариант" Тогда
		ФлагСтандОбр=0;
		ВыбЗн="";
		ТекСпис=гСпВариантов.Получить(СокрЛП(ВыбВариант));
		Ном=гСпВариантов.НайтиЗначение(ТекСпис);
		Если Ном>0 Тогда
			гСпВариантов.ТекущаяСтрока(Ном);
		КонецЕсли;
		Если гСпВариантов.РазмерСписка()=0 Тогда
			Возврат;
		КонецЕсли;
		ВыбПоз=0;
		гСпВариантов.ВыбратьЗначение(ВыбЗн,,ВыбПоз,,2);
		Если (ВыбПоз>0) И(ВыбПоз<=гСпВариантов.РазмерСписка()) Тогда
			гСпВариантов.ПолучитьЗначение(ВыбПоз,СтрПредст);
			ВыбВариант=СтрПредст;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриАтрибДвижений()
	ТекСтр=ФормАтрибДвижений.ТекущаяСтрока();
	Если ТекСтр>0 Тогда
		Фл=1;
		Если ФормАтрибДвижений.Пометка(ТекСтр)=1 Тогда
			Фл=0;
		КонецЕсли;
		ФормАтрибДвижений.Пометка(ТекСтр,Фл)
	КонецЕсли;
КонецПроцедуры


гДлина = СоздатьОбъект("СписокЗначений");
гПред = СоздатьОбъект("СписокЗначений");
гСпВариантов=СоздатьОбъект("СписокЗначений");

гПред.ДобавитьЗначение("Документ","Документ");
гПред.ДобавитьЗначение("СтрокаДокумента","СтрокаДокумента");
гПред.ДобавитьЗначение("День","День");
гПред.ДобавитьЗначение("Неделя","Неделя");
гПред.ДобавитьЗначение("Месяц","Месяц");
гПред.ДобавитьЗначение("Год","Год");

гВидыФункций = СоздатьОбъект("СписокЗначений");
ФлНачОст=1;
ФлПриход=1;
ФлРасход=1;
ФлКонОст=1;
ФлОборот=0;
ФлТипРеквизит=1;
ФлОднаКолГруппы=1;
Форма.ИспользоватьЗакладки(1);

ТабУсловия.НоваяКолонка("ФлВкл","Строка",3,,"+");
ТабУсловия.НоваяКолонка("КолПредставление",,,,"Данные");
ТабУсловия.НоваяКолонка("КолУсловие","Строка",4,,"Условие");
ТабУсловия.НоваяКолонка("КолЗначение",,,,"Значение");
ТабУсловия.НоваяКолонка("КолИдентификатор");
ТабУсловия.ВидимостьКолонки("КолИдентификатор",0);