Перем ТабДокументы;
Перем Расшифровка;
Перем Обновить;
Перем Таб;
Перем ИмяРегистра;
Перем Группировка;
Перем пНачДата;
Перем пКондата;

Функция УсловияЗапроса(пВыбФирма, пСписКонтрагентов) Далее
Процедура  ВывестиСекции(Таб, ТабГруппировки, ИмяСекции, РасшифровкаПоДокументам = 0) Далее
Процедура  Сформировать(СтруктРасшифровка = "") Далее

///////////////////////////////////Предопределенные процедуры/////////////////////////////////////////////// 

Процедура ПриОткрытии()
	
	Если глФлагРасшифровки = 1 Тогда 
		
		Обновить = глОбновить;
		
		НачДата = глРасшифровка.Получить("НачДата");
		КонДата = глРасшифровка.Получить("КонДата");
		ВыбФирма = глРасшифровка.Получить("ВыбФирма");
		ВыводитьДокументы = глРасшифровка.Получить("ВыводитьДокументы");
		глРасшифровка.Получить("СписКонтрагентов").Выгрузить(списКонтрагентов);
		Группировка = глРасшифровка.Получить("Группировка");
		ВидОтчета.ТекущаяСтрока(глРасшифровка.Получить("ВидОтчета"));
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;

	Форма.КнопкаПоУмолчанию("Сформировать");
	
КонецПроцедуры

///////////////////////////////////Расшифровка//////////////////////////////////////////////////////////////

Функция РасшифровкаОбновить(Обновить)
	
	Расшифровка.Установить("Обновить", Обновить);
	
	Возврат Расшифровка;
	
КонецФункции

Процедура ОбработкаЯчейкиТаблицы(ТекЗначение,ТекФлагСтандОбраб,ТекТаблица,ТекАдрес)
	
	Если ТипЗначения(ТекЗначение) = 2 Тогда
		
		спрФирма = СоздатьОбъект("Справочник.Фирмы");
		СпрКонтрагенты = СоздатьОбъект("Справочник.Контрагенты");
		
		СписРасшифровка = СоздатьОбъект("СписокЗначений");
		глПарсить(ТекЗначение,СписРасшифровка,"#");
		//Найдем по коду справочники
		спрФирма.НайтиПоКоду(СписРасшифровка.Получить(1));
		СпрКонтрагенты.НайтиПоКоду(СписРасшифровка.Получить(2));
		
		СтруктРасшифровка = СоздатьОбъект("Структура");
		СтруктРасшифровка.Вставить("Фирма",спрФирма.ТекущийЭлемент());
		СтруктРасшифровка.Вставить("Контрагент",СпрКонтрагенты.ТекущийЭлемент());
		СтруктРасшифровка.Вставить("ВидОтчета",СписРасшифровка.Получить(3));
		СтруктРасшифровка.Вставить("НачДата",Дата(СписРасшифровка.Получить(4)));
		СтруктРасшифровка.Вставить("КонДата",Дата(СписРасшифровка.Получить(5)));
			
		Сформировать(СтруктРасшифровка);
		
	Иначе
		 глОбработкаЯчейкиТаблицы(ТекЗначение,ТекФлагСтандОбраб,ТекТаблица,ТекАдрес)
	КонецЕсли;

КонецПроцедуры

/////////////////////////////////Обработка команды//////////////////////////////////////////////////////////
Процедура Сформировать(СтруктРасшифровка = "")
	
	Перем пВыбФирма, пСписКонтрагентов, тз; //:ТаблицаЗначений
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
	//Инициализация переменных
	
	РасшифровкаДвижений = ПустоеЗначение(СтруктРасшифровка) + 1;
	
	пНачДата = НачДата;
	пКонДата = КонДата;
	РасшифровкаПоДокументам = ВыводитьДокументы;
	
	Если РасшифровкаДвижений= 1 Тогда //берем значения из структуры расшифровки
		//Фирма
		СтруктРасшифровка.Свойство("Фирма",пВыбФирма);
		//Контрагент
		пКонтрагент = "";
		пСписКонтрагентов = СоздатьОбъект("СписокЗначений");
		СтруктРасшифровка.Свойство("Контрагент",пКонтрагент);
		пСписКонтрагентов.ДобавитьЗначение(пКонтрагент);
		//Вид отчета
		пВидОтчета = 1;
		СтруктРасшифровка.Свойство("ВидОтчета",пВидОтчета);
		ВидОтчета.ТекущаяСтрока(пВидОтчета);
		//Период
		СтруктРасшифровка.Свойство("НачДата",пНачДата);
		СтруктРасшифровка.Свойство("КонДата",пКонДата);
		//Расшифровка по документам
		РасшифровкаПоДокументам = 1;	
	Иначе
		пВыбФирма = ВыбФирма;
		пСписКонтрагентов = списКонтрагентов;	
	КонецЕсли;
	
	УсловияЗапроса = УсловияЗапроса(пВыбФирма,пСписКонтрагентов);
	НачальныйОстатокИтог = 0;
	ПриходИтог = 0;
	РасходИтог = 0;
	КонечныйОстатокИтог = 0;
	ИмяРегистра = ВидОтчета.ПолучитьЗначение(ВидОтчета.ТекущаяСтрока());
	ИмяОтчета = ?(ВидОтчета.ТекущаяСтрока() = 1,"Покупатели","Поставщики");
	
	ТабГруппировки = СоздатьОбъект("ИндексированнаяТаблица");
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	
	//Расшифровка
	Расшифровка.Установить("НачДата", пНачДата);
	Расшифровка.Установить("КонДата", пКонДата);
	
	Расшифровка.Установить("ВыбФирма", пВыбФирма);
	Расшифровка.Установить("СписКонтрагентов", пСписКонтрагентов);
	Расшифровка.Установить("ВыводитьДокументы", РасшифровкаПоДокументам);
	Расшифровка.Установить("Группировка", Группировка);
	Расшифровка.Установить("ВидОтчета", ВидОтчета.ТекущаяСтрока());
		
	Расшифровка.Установить("Отчет", "Отчет_ВедомостьВзаиморасчетовСКонтрагентами");
	Расшифровка.Установить("Обновить");
	
	// Подготовка к заполнению выходных форм данными запроса
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить=0) ИЛИ (РасшифровкаДвижений = 1) Тогда
		Таб = СоздатьОбъект("Таблица");
	Иначе
		Таб.Очистить();
	КонецЕсли;
	
    Таб.ИсходнаяТаблица("Отчет");
	
	ТекстЗапроса = "
	|SELECT  Взаиморасчеты.Фирма [Фирма $Справочник.Фирмы]
	|   , Взаиморасчеты.Контрагент [Контрагент $Справочник.Контрагенты]
	|	, Взаиморасчеты.ДолгНачальныйОстаток
	|	, Взаиморасчеты.ДолгПриход
	|	, Взаиморасчеты.ДолгРасход
	|	, Взаиморасчеты.ДолгКонечныйОстаток
	|	, Взаиморасчеты.ДолгОснНачальныйОстаток
	|	, Взаиморасчеты.ДолгОснПриход
	|	, Взаиморасчеты.ДолгОснРасход
	|	, Взаиморасчеты.ДолгОснКонечныйОстаток
	|FROM $РегистрОстаткиОбороты.Взаиморасчеты" + ИмяРегистра +"(:НачДата,
	|		:КонДата~,
	|		,
	|		ДвиженияИГраницыПериода,,,
	|		(Фирма,Контрагент),) AS Взаиморасчеты
	|	LEFT OUTER JOIN $Справочник.Контрагенты AS Контрагенты ON Взаиморасчеты.Контрагент = Контрагенты.ID
	|WHERE 1=1 " + УсловияЗапроса + "	
	|ORDER BY Контрагенты.DESCR";
	
	рс = СоздатьОбъект("ODBCRecordset");
	рс.УстановитьТекстовыйПараметр("НачДата", пНачДата);
	рс.УстановитьТекстовыйПараметр("КонДата", пКонДата);
	рс.УстановитьТекстовыйПараметр("Фирма",   пВыбФирма);
	
	Если пСписКонтрагентов.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(пСписКонтрагентов, "#списКонтрагентов","Контрагенты");
	КонецЕсли;
	
	рс.ВыполнитьИнструкцию(ТекстЗапроса, ТабГруппировки,1);
	
	ТабГруппировки.ДобавитьИндекс("Ключ_индекс","Фирма, Контрагент");
	
	////////////////////////////////////////////////////////////////////////////////////////
	//Запрос по документам
	
	Если РасшифровкаПоДокументам = 1 Тогда
		
		ТабДокументы = СоздатьОбъект("ИндексированнаяТаблица");
		
		ТекстЗапросаДок = "
		|SELECT  Взаиморасчеты.Фирма [Фирма $Справочник.Фирмы]
		|   , Взаиморасчеты.Контрагент [Контрагент $Справочник.Контрагенты]
		|	, Взаиморасчеты.ВидДокумента Док_вид
		|	, RIGHT(Взаиморасчеты.ПозицияДокумента,9) [Док $Документ] 
		|   , CAST(LEFT(Взаиморасчеты.ПозицияДокумента, 8) as DateTime) ДатаДок
		|	, Взаиморасчеты.ДолгНачальныйОстаток
		|	, Взаиморасчеты.ДолгПриход
		|	, Взаиморасчеты.ДолгРасход
		|	, Взаиморасчеты.ДолгКонечныйОстаток
		|	, Взаиморасчеты.ДолгОснНачальныйОстаток
		|	, Взаиморасчеты.ДолгОснПриход
		|	, Взаиморасчеты.ДолгОснРасход
		|	, Взаиморасчеты.ДолгОснКонечныйОстаток
		|FROM $РегистрОстаткиОбороты.Взаиморасчеты" + ИмяРегистра +"(:НачДата,
		|		:КонДата~,
		|		Документ,
		|		ДвиженияИГраницыПериода,,,
		|		(Фирма,Контрагент),) AS Взаиморасчеты
		|	LEFT OUTER JOIN $Справочник.Контрагенты AS Контрагенты ON Взаиморасчеты.Контрагент = Контрагенты.ID
		|WHERE 1=1 " + УсловияЗапроса + "	
		|ORDER BY Взаиморасчеты.ПозицияДокумента";
		
		рс = СоздатьОбъект("ODBCRecordset");
		рс.УстановитьТекстовыйПараметр("НачДата", пНачДата);
		рс.УстановитьТекстовыйПараметр("КонДата", пКонДата);
		рс.УстановитьТекстовыйПараметр("Фирма",   пВыбФирма);
		
		Если пСписКонтрагентов.РазмерСписка() > 0 Тогда
			рс.УложитьСписокОбъектов(пСписКонтрагентов, "#списКонтрагентов","Контрагенты");
		КонецЕсли;
		
		рс.ВыполнитьИнструкцию(ТекстЗапросаДок, ТабДокументы,1);
		ТабДокументы.ДобавитьИндекс("Ключ_индекс","Фирма,Контрагент");
		
	КонецЕсли;
	
    /////////////////////////////////////////////////////////////////////////////////////////////
	
	Состояние("Заполнение выходной таблицы...");
	//Кнопки
	Таб.ВывестиСекцию("Кнопки");
	
	Таб.ВывестиСекцию("Заголовки");
	
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	
	ТабГруппировки.ВыбратьСтроки();
	
	//Обход по складам фирмам
	Пока ТабГруппировки.ПолучитьСтроку() = 1  Цикл
		
		НачальныйОстатокИтог = НачальныйОстатокИтог + ТабГруппировки.ДолгОснНачальныйОстаток;
		ПриходИтог = ПриходИтог + ТабГруппировки.ДолгОснПриход;
		РасходИтог = РасходИтог + ТабГруппировки.ДолгРасход;
		КонечныйОстатокИтог = КонечныйОстатокИтог +ТабГруппировки.ДолгОснКонечныйОстаток;
		
		ВывестиСекции(Таб, ТабГруппировки, "group_2");
		
		Если РасшифровкаПоДокументам = 1 Тогда //Выводим документы
				
				//Находим строки с ключем в табл. Документы
				//Таблица для отбора
				ТабГруппировкиФильтр = СоздатьОбъект("ИндексированнаяТаблица");
				
				//Отключаем фильтр прошлой итерации
				ТабДокументы.ВыключитьФильтр("Ключ_индекс"); 
				
				//Список-фильтр
				Фильтр = СоздатьОбъект("СписокЗначений");
				Фильтр.ДобавитьЗначение(ТабГруппировки.Фирма);
				Фильтр.ДобавитьЗначение(ТабГруппировки.Контрагент);
				
				ТабДокументы.УстановитьФильтр(Фильтр,Фильтр, "Ключ_индекс",0);
				ТабДокументы.ВыбратьСтроки("Ключ_индекс");
				
				Пока ТабДокументы.ПолучитьСтроку("Ключ_индекс") = 1 Цикл
					Если ПустоеЗначение(ТабДокументы.Док) = 0 Тогда
						ВывестиСекции(Таб, ТабДокументы, "document",1); //Вывод Документов
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли; //Условие выводы документа
	
	КонецЦикла;
	
	Таб.ВывестиСекцию("Итоги");
	
	ЗаголовокОтчета = "Отчет по взаиморасчетам с контрагентами ("  + ИмяОтчета + ") за период " +ПериодСтр(пНачДата,пКонДата);
	
	Таб.ТолькоПросмотр(1);
	Таб.Показать(ЗаголовокОтчета, "");
	
КонецПроцедуры

Процедура ВывестиСекции(Таб, ТабГруппировки, ИмяСекции, РасшифровкаПоДокументам = 0)
	
	СтрРасшифровка = "1=" + ТабГруппировки.Фирма.Код + "#2="+ТабГруппировки.Контрагент.Код + "#3=" 
	+ ВидОтчета.ТекущаяСтрока()+ "#4=" + пНачДата +"#5=" + пКонДата + "#";
	
	Контрагент = ТабГруппировки.Контрагент;
	Контрагент_Наименование = ТабГруппировки.Контрагент.Наименование;
	НачальныйОстаток = ТабГруппировки.ДолгОснНачальныйОстаток;
	Приход = ТабГруппировки.ДолгОснПриход;
	Расход = ТабГруппировки.ДолгРасход;
	КонечныйОстаток = ТабГруппировки.ДолгОснКонечныйОстаток;
	
	Если РасшифровкаПоДокументам = 1 Тогда
		Документ = ТабГруппировки.Док;
	КонецЕсли;
	
	Таб.ВывестиСекцию(ИмяСекции);	
	
КонецПроцедуры

///////////////////////////////////Работа со списками отбора и подбором///////////////////////////////////////

Процедура ДобавитьВСписок(Элт, Спис)
	
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	
	Если Элт.Вид() = "Контрагенты" Тогда
		ДобавитьвСписок(Элт, списКонтрагентов);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
	
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
	
КонецПроцедуры

Функция УсловияЗапроса(пВыбФирма,пСписКонтрагентов)
	Условия = "";
	
	Условия = ?(ПустоеЗначение(пВыбФирма) = 0,
	" AND Взаиморасчеты.Фирма = :Фирма","") +  
	?(пСписКонтрагентов.РазмерСписка()>0," AND Взаиморасчеты.Контрагент IN (SELECT Val FROM #списКонтрагентов)", "");
	
	Возврат Условия
	
КонецФункции

ВидОтчетаПос = "Поставщиков";
ВидОтчетаПок = "Покупателей";

Группировка = 1;

ВидОтчета.УдалитьВсе();
ВидОтчета.ДобавитьЗначение(ВидОтчетаПок, "По покупателям");
ВидОтчета.ДобавитьЗначение(ВидОтчетаПос, "По поставщикам");
