Перем ТабДокументы;
Перем Расшифровка;
Перем Обновить;
Перем Таб;
Перем Суффикс;

Функция УсловияЗапроса(пВыбФирма,пВыбМестоХранения,пСписТМЦ) Далее
Функция УсловиеРесурса() Далее
Функция ОбойтиГруппировку(Таб, ТабГруппировки, РасшифровкаПоДокументам) Далее
Процедура  Сформировать(СтруктРасшифровка = "") Далее
Процедура  ВывестиСекции(Таб, ТабГруппировки, ИмяСекции, РасшифровкаПоДокументам, Уровень = 0, НеВыводитьТМЦ = 0) Далее
Процедура ЗначГруппировкиИзменение() Далее

///////////////////////////////////Предопределенные процедуры/////////////////////////////////////////////// 

Процедура ПриОткрытии()
	
	Если глФлагРасшифровки = 1 Тогда 
		
		Обновить = глОбновить;
		
		НачДата = глРасшифровка.Получить("НачДата");
		КонДата = глРасшифровка.Получить("КонДата");
		ВыбФирма = глРасшифровка.Получить("ВыбФирма");
		ВыбСчет = глРасшифровка.Получить("ВыбСчет");
		ВыбМестоХранения = глРасшифровка.Получить("ВыбМестоХранения");
		ВыводитьДокументы = глРасшифровка.Получить("ВыводитьДокументы");
		глРасшифровка.Получить("списТМЦ").Выгрузить(списТМЦ);
		ЗначГруппировки.ТекущаяСтрока(глРасшифровка.Получить("ЗначГруппировки"));
		ВыбАттр.ТекущаяСтрока(глРасшифровка.Получить("ВыбАттр"));
		ВыбУсловие.ТекущаяСтрока(глРасшифровка.Получить("ВыбУсловие"));
		ЗначениеУcловия = глРасшифровка.Получить("ЗначениеУcловия");
		ВыводитьДокументы = глРасшифровка.Получить("ВыводитьДокументы");
		ТолькоКоличество = глРасшифровка.Получить("ТолькоКоличество");
		ТолькоСумма = глРасшифровка.Получить("ТолькоСумма");
		Группировка = глРасшифровка.Получить("Группировка");
		ЗначГруппировкиИзменение();
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;

	Форма.КнопкаПоУмолчанию("Сформировать");
	
КонецПроцедуры

///////////////////////////////////Обработчики элементов формы//////////////////////////////////////////////

Процедура ЗначГруппировкиИзменение()
	
	ТекУсловиеЗначГруппировки = ЗначГруппировки.ПолучитьЗначение(ЗначГруппировки.ТекущаяСтрока());
	
	Видимость = ?(ТекУсловиеЗначГруппировки = "НЕТ",0,1);
	
	Форма.ВыбАттр.Видимость(Видимость);
	Форма.ВыбУсловие.Видимость(Видимость);
	форма.ЗначениеУcловия.Видимость(Видимость);
	
КонецПроцедуры

///////////////////////////////////Расшифровка//////////////////////////////////////////////////////////////

Функция РасшифровкаОбновить(Обновить)
	
	Расшифровка.Установить("Обновить", Обновить);
	
	Возврат Расшифровка;
	
КонецФункции

Процедура ОбработкаЯчейкиТаблицы(ТекЗначение,ТекФлагСтандОбраб,ТекТаблица,ТекАдрес)
	Перем пМестоХранения;
	
	Если ТипЗначения(ТекЗначение) = 2 Тогда
		
		спрФирма = СоздатьОбъект("Справочник.Фирмы");
		
		СпрМестаХранения = СоздатьОбъект("Справочник.МестаХранения");
		СпрСотрудники = СоздатьОбъект("Справочник.Сотрудники");
		СпрКонтрагенты = СоздатьОбъект("Справочник.Контрагенты");
		
		спрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
		
		СписРасшифровка = СоздатьОбъект("СписокЗначений");
		глПарсить(ТекЗначение,СписРасшифровка,"#");
		//Найдем по коду справочники
		спрФирма.НайтиПоКоду(СписРасшифровка.Получить(1));
		//Места хранения
		СпрМестаХранения.НайтиПоКоду(СписРасшифровка.Получить(2));
		СпрСотрудники.НайтиПоКоду(СписРасшифровка.Получить(2));
		СпрКонтрагенты.НайтиПоКоду(СписРасшифровка.Получить(2));
		
		Если ПустоеЗначение(СпрМестаХранения.ТекущийЭлемент())=0 Тогда
			пМестоХранения = СпрМестаХранения.ТекущийЭлемент()
		ИначеЕсли ПустоеЗначение(СпрСотрудники.ТекущийЭлемент())=0 Тогда
			пМестоХранения = СпрСотрудники.ТекущийЭлемент();
		ИначеЕсли ПустоеЗначение(СпрКонтрагенты.ТекущийЭлемент()) = 0 Тогда
			пМестоХранения = СпрКонтрагенты.ТекущийЭлемент();
		КонецЕсли;
		
		спрТМЦ.НайтиПоКоду(СписРасшифровка.Получить(3));
		
		СтруктРасшифровка = СоздатьОбъект("Структура");
		СтруктРасшифровка.Вставить("Фирма",спрФирма.ТекущийЭлемент());
		СтруктРасшифровка.Вставить("МестоХранения",пМестоХранения);
		СтруктРасшифровка.Вставить("ТМЦ",спрТМЦ.ТекущийЭлемент());
		
		Сформировать(СтруктРасшифровка);
	Иначе
		 глОбработкаЯчейкиТаблицы(ТекЗначение,ТекФлагСтандОбраб,ТекТаблица,ТекАдрес)
	КонецЕсли;

КонецПроцедуры

/////////////////////////////////Формирование отчета//////////////////////////////////////////////////////////

Процедура Сформировать(СтруктРасшифровка = "")
	
	Перем пВыбФирма, пВыбМестоХранения, пТМЦ, пСписТМЦ;
	
	ТекУсловиеЗначГруппировки = ЗначГруппировки.ПолучитьЗначение(ЗначГруппировки.ТекущаяСтрока());
	
	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
	РасшифровкаДвижений = ПустоеЗначение(СтруктРасшифровка) + 1;
	
	//Инициализация переменных (параметров) запросов
	пНачДата =  НачДата;
	пКонДата  = КонДата;
	пВыбСчет  = ВыбСчет;
	
	
	Если РасшифровкаДвижений= 1 Тогда //берем значения из структуры расшифровки
		СтруктРасшифровка.Свойство("Фирма",пВыбФирма);
		СтруктРасшифровка.Свойство("МестоХранения",пВыбМестоХранения);
		пТМЦ = "";
		пСписТМЦ = СоздатьОбъект("СписокЗначений");
		СтруктРасшифровка.Свойство("ТМЦ",пТМЦ);
		пСписТМЦ.ДобавитьЗначение(пТМЦ);
		РасшифровкаПоДокументам = 1;
	Иначе
		пВыбФирма = ВыбФирма;
		пВыбМестоХранения  = ВыбМестоХранения;
		пСписТМЦ = списТМЦ;
		РасшифровкаПоДокументам = ВыводитьДокументы;
	КонецЕсли;
	
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	
	//Расшифровка
	Расшифровка.Установить("НачДата", НачДата);
	Расшифровка.Установить("КонДата", КонДата);
	
	Расшифровка.Установить("ВыбФирма", пВыбФирма);
	Расшифровка.Установить("ВыбМестоХранения",пВыбМестоХранения);
	Расшифровка.Установить("списТМЦ", пСписТМЦ);
	
	Расшифровка.Установить("ПарамКатегорияЦены", ВыбСчет);
	Расшифровка.Установить("списКатегорийЦен", РасшифровкаПоДокументам);
	Расшифровка.Установить("ЗначГруппировки", ЗначГруппировки.ТекущаяСтрока());
	
	Расшифровка.Установить("ВыбАттр", ВыбАттр.ТекущаяСтрока());
	Расшифровка.Установить("ВыбУсловие", ВыбУсловие.ТекущаяСтрока());
	Расшифровка.Установить("ЗначениеУcловия", ЗначениеУcловия);
	Расшифровка.Установить("ВыводитьДокументы", ВыводитьДокументы);
	Расшифровка.Установить("ТолькоСумма", ТолькоСумма);
	Расшифровка.Установить("ТолькоКоличество", ТолькоКоличество);
	Расшифровка.Установить("Группировка", Группировка);
		
	Расшифровка.Установить("Отчет", "Отчет_ОстаткиИДвижнияТМЦСебестоимость");
	Расшифровка.Установить("Обновить");
	
	// Подготовка к заполнению выходных форм данными запроса
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить=0) ИЛИ (РасшифровкаДвижений = 1) Тогда
		Таб = СоздатьОбъект("Таблица");
	Иначе
		Таб.Очистить();
	КонецЕсли;
	
	Таб.ИсходнаяТаблица("Отчет");
	
	//Кнопки
	Таб.ВывестиСекцию("Кнопки");
	
	//Инициализация переменных
	УсловияЗапроса = УсловияЗапроса(пВыбФирма,пВыбМестоХранения,пСписТМЦ);
	
	КоличествоНачалоИтог = 0;
	СуммаНачалоИтог = 0;
	КоличествоПриходИтог = 0;
	СуммаПриходИтог = 0;
	КоличествоРасходИтог = 0;
	СуммаРасходИтог= 0;
	КоличествоОстатокИтог = 0;
	СуммаОстатокИтог = 0;
	
	//Запрос по групповым записям Фирма, Склад
	рс = СоздатьОбъект("ODBCRecordset");
	ТексТабГруппировкиапроса = "
	| SELECT
	|     Партии.Фирма [Фирма $Справочник.Фирмы]
	|   , Партии.МестоХранения [МестоХранения $Справочник]
	|   , GROUPING (Партии.Фирма) as ит_group_1_ID 
	|   , GROUPING (Партии.МестоХранения) as ит_group_2_ID 
	|	, SUM(Партии.ОстатокТовараНачальныйОстаток) as КоличествоНачало
	|	, SUM(Партии.СтоимостьНачальныйОстаток) as СуммаНачало
	|	, SUM(Партии.ОстатокТовараПриход) as КоличествоПриход
	|	, SUM(Партии.СтоимостьПриход) as СуммаПриход
	|	, SUM(Партии.ОстатокТовараРасход) as КоличествоРасход
	|	, SUM(Партии.СтоимостьРасход) as СуммаРасход
	|	, SUM(Партии.ОстатокТовараКонечныйОстаток) as КоличествоОстаток
	|	, SUM(Партии.СтоимостьКонечныйОстаток) as СуммаОстаток
	|FROM $РегистрОстаткиОбороты.Партии(:НачДата,
	|		:КонДата~,
	|		Период,
	|		ДвиженияИграницыПериода,,,
	|		(Фирма, Счет, МестоХранения, ТМЦ),
	|		(ОстатокТовара, Стоимость)) AS Партии 
	|WHERE 1=1 " + УсловияЗапроса + "	
	|GROUP BY 
	|   Партии.Фирма
	|  ,Партии.МестоХранения
	|   WITH ROLLUP
	|ORDER BY 
	|   Партии.Фирма
	|  ,Партии.МестоХранения";
	
	рс.УстановитьТекстовыйПараметр("Фирма",     пВыбФирма);
	рс.УстановитьТекстовыйПараметр("МестоХранения", пВыбМестоХранения);
	рс.УстановитьТекстовыйПараметр("Счет",     пВыбСчет);
	Если списТМЦ.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(пСписТМЦ, "#списТМЦ","ТМЦ");
	КонецЕсли;
	рс.УстановитьТекстовыйПараметр("НачДата", пНачДата);
	рс.УстановитьТекстовыйПараметр("КонДата", пКонДата);
		
	
	СкладыФирмы = рс.ВыполнитьИнструкцию(ТексТабГруппировкиапроса);
	
	////////////////////////////////////////////////////////////////////////////
	ТабГруппировки = СоздатьОбъект("ИндексированнаяТаблица");
	
	//Запрос по ТМЦ
	рс = СоздатьОбъект("ODBCRecordset");
	ТексТабГруппировкиапроса = "
	| SELECT
	|     Партии.Фирма [Фирма $Справочник.Фирмы]
	|   , Партии.МестоХранения [МестоХранения $Справочник]
	|	, Партии.ТМЦ [ТМЦ $Справочник.ТМЦ]
	|	, Партии.ОстатокТовараНачальныйОстаток as КоличествоНачало
	|	, Партии.СтоимостьНачальныйОстаток as СуммаНачало
	|	, Партии.ОстатокТовараПриход as КоличествоПриход
	|	, Партии.СтоимостьПриход as СуммаПриход
	|	, Партии.ОстатокТовараРасход as КоличествоРасход
	|	, Партии.СтоимостьРасход as СуммаРасход
	|	, Партии.ОстатокТовараКонечныйОстаток as КоличествоОстаток
	|	, Партии.СтоимостьКонечныйОстаток as СуммаОстаток
	|FROM $РегистрОстаткиОбороты.Партии(:НачДата,
	|		:КонДата~,
	|		Период,
	|		ДвиженияИграницыПериода,,,
	|		(Фирма, Счет, МестоХранения, ТМЦ),
	|		(ОстатокТовара, Стоимость)) AS Партии 
	|WHERE 1=1 " + УсловияЗапроса +?(ТекУсловиеЗначГруппировки = "ТМЦ",УсловиеРесурса(),"") + "	
	|ORDER BY Партии.ТМЦ";
	
	рс.УстановитьТекстовыйПараметр("Фирма",     пВыбФирма);
	рс.УстановитьТекстовыйПараметр("МестоХранения", пВыбМестоХранения);
	рс.УстановитьТекстовыйПараметр("Счет",     пВыбСчет);
	Если списТМЦ.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(пСписТМЦ, "#списТМЦ","ТМЦ");
	КонецЕсли;
	рс.УстановитьТекстовыйПараметр("НачДата", пНачДата);
	рс.УстановитьТекстовыйПараметр("КонДата", пКонДата);
	
	рс.ВыполнитьИнструкцию(ТексТабГруппировкиапроса, ТабГруппировки,1);
	
	ТабГруппировки.ДобавитьИндекс("Ключ_индекс","Фирма,МестоХранения");
	
	///////////////////////////////////////////////////////////////////////////////
	//Запрос по документам
	Если РасшифровкаПоДокументам = 1 Тогда
		
		ТабДокументы = СоздатьОбъект("ИндексированнаяТаблица");
		
		//Запрос по документам 
		рс = СоздатьОбъект("ODBCRecordset");
		ТексТабГруппировкиапроса = "
		| SELECT
		|    Партии.Фирма [Фирма $Справочник.Фирмы]
		|   , Партии.МестоХранения [МестоХранения $Справочник]
		|	, Партии.ТМЦ [ТМЦ $Справочник.ТМЦ]
		|	, RIGHT(Партии.ПозицияДокумента,9) [Док $Документ] 
		|   , CAST(LEFT(Партии.ПозицияДокумента, 8) as DateTime) ДатаДок
		|	, Партии.ВидДокумента Док_вид
		|	, Партии.ОстатокТовараНачальныйОстаток as КоличествоНачало
		|	, Партии.СтоимостьНачальныйОстаток as СуммаНачало
		|	, Партии.ОстатокТовараПриход as КоличествоПриход
		|	, Партии.СтоимостьПриход as СуммаПриход
		|	, Партии.ОстатокТовараРасход as КоличествоРасход
		|	, Партии.СтоимостьРасход as СуммаРасход
		|	, Партии.ОстатокТовараКонечныйОстаток as КоличествоОстаток
		|	, Партии.СтоимостьКонечныйОстаток as СуммаОстаток
		|FROM $РегистрОстаткиОбороты.Партии(:НачДата,
		|		:КонДата~,
		|		Документ,
		|		ДвиженияИграницыПериода,,,
		|		(Фирма, Счет, МестоХранения, ТМЦ),
		|		(ОстатокТовара, Стоимость)) AS Партии
		|WHERE  1=1 " + УсловияЗапроса + ?(ТекУсловиеЗначГруппировки = "Документ",УсловиеРесурса(),"") +"
		|ORDER BY Партии.ТМЦ";
		
		рс.УстановитьТекстовыйПараметр("Фирма",     пВыбФирма);
		рс.УстановитьТекстовыйПараметр("МестоХранения", пВыбМестоХранения);
		рс.УстановитьТекстовыйПараметр("Счет",     пВыбСчет);
		Если списТМЦ.РазмерСписка() > 0 Тогда
			рс.УложитьСписокОбъектов(пСписТМЦ, "#списТМЦ","ТМЦ");
		КонецЕсли;
		рс.УстановитьТекстовыйПараметр("НачДата", пНачДата);
		рс.УстановитьТекстовыйПараметр("КонДата", пКонДата);
		
		рс.ВыполнитьИнструкцию(ТексТабГруппировкиапроса, ТабДокументы,1);
		
		ТабДокументы.ДобавитьИндекс("Ключ_индекс","Фирма,МестоХранения,ТМЦ");
		
	КонецЕсли;
	
	///////////////////////////////////////////////////////////////////////////////
	
	Состояние("Заполнение выходной таблицы...");
	
	Суффикс = "";
	Суффикс = ?(ТолькоКоличество = 1,"_qty",Суффикс);
	Суффикс = ?(ТолькоСумма = 1,"_sum",Суффикс);
	
	ИмяСекции = "Заголовки";
	Таб.ВывестиСекцию(ИмяСекции + Суффикс);
	
	Если РасшифровкаПоДокументам = 1 Тогда
		Таб.ВывестиСекцию("Заголовки_документ");
	КонецЕсли;
	
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	
	СкладыФирмы.ВыбратьСтроки();
	
	//Обход по складам фирмам
	Пока СкладыФирмы.ПолучитьСтроку() = 1  Цикл
		
		Уровень = 2 - (СкладыФирмы.ит_group_1_ID + СкладыФирмы.ит_group_2_ID);
		
		Если Уровень = 0 Тогда //Итоги по отчету
			КоличествоНачалоИтог = СкладыФирмы.КоличествоНачало;
			СуммаНачалоИтог = СкладыФирмы.СуммаНачало;
			КоличествоПриходИтог = СкладыФирмы.КоличествоПриход;
			СуммаПриходИтог = СкладыФирмы.СуммаПриход;
			КоличествоРасходИтог = СкладыФирмы.КоличествоРасход;
			СуммаРасходИтог= СкладыФирмы.СуммаРасход;
			КоличествоОстатокИтог = СкладыФирмы.КоличествоОстаток;
			СуммаОстатокИтог = СкладыФирмы.СуммаОстаток;
			Продолжить;
		КонецЕсли;
		
		//Итог по Фирме
		Если Уровень = 1 Тогда
			ВывестиСекции(Таб,СкладыФирмы,"group_1",0,0,1); // Вывод итогов по Фирме
			Продолжить;
		КонецЕсли;
		
		Если Уровень = 2  Тогда 
			
			ВывестиСекции(Таб,СкладыФирмы,"group_2",0,0,1); // Вывод итогов по Складу
			
			//Таблица для отбора
			ТабГруппировкиФильтр = СоздатьОбъект("ИндексированнаяТаблица");
			
			//Отключаем фильтр прошлой итерации
			ТабГруппировки.ВыключитьФильтр("Ключ_индекс"); 
			
			//Список-фильтр
			Фильтр = СоздатьОбъект("СписокЗначений");
			Фильтр.ДобавитьЗначение(СкладыФирмы.Фирма);
			Фильтр.ДобавитьЗначение(СкладыФирмы.МестоХранения);
			
			ТабГруппировки.УстановитьФильтр(Фильтр,Фильтр, "Ключ_индекс",0);
			
		    ТабГруппировкиФильтр.Загрузить(ТабГруппировки, "Ключ_индекс");
				
			//Группируем по иерархии справочника ТМЦ
			Если Группировка<>2 Тогда
				ТабГруппировкиФильтр.Группировать("*Фирма, *МестоХранения, ТМЦ:&*ТМЦ",
				"КоличествоНачало,СуммаНачало,КоличествоПриход,СуммаПриход,КоличествоРасход,СуммаРасход,КоличествоОстаток,СуммаОстаток");
			КонецЕсли;
			
			Если Группировка = 2 Тогда //Добавим недостающие колонки
				ТабГруппировкиФильтр.НоваяКолонка("тзПотомки");
				ТабГруппировкиФильтр.НоваяКолонка("__Уровень__");
			КонецЕсли;
	
			ТабГруппировкиФильтр.ВыбратьСтроки();
			
			Пока ТабГруппировкиФильтр.ПолучитьСтроку() = 1 Цикл
				ОбойтиГруппировку(Таб, ТабГруппировкиФильтр, РасшифровкаПоДокументам); //Обход ТМЦ с группами
			КонецЦикла;
			
		КонецЕсли; // По Складам
		
	КонецЦикла; // ПО складам фирмам
	
	ИмяСекции = "Итоги";
	Таб.ВывестиСекцию(ИмяСекции+Суффикс);
	
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	ЗаголовокОтчета = "Отчет по движениям и остаткам ТМЦ с себестоимостью " + ПериодСтр(НачДата,КонДата);
	
	Таб.Показать(ЗаголовокОтчета, "");
	
КонецПроцедуры

Функция УсловияЗапроса(пВыбФирма,пВыбМестоХранения,пСписТМЦ)
	Условия = "";
	
	Условия = ?(ПустоеЗначение(пВыбФирма) = 0,
	" AND Партии.Фирма = :Фирма","") + 
	?(ПустоеЗначение(пВыбМестоХранения) = 0,
	" AND Партии.МестоХранения = :МестоХранения~","") + 
	?(ПустоеЗначение(ВыбСчет) = 0,
	" AND Партии.Счет = :Счет","") + 
	?(пСписТМЦ.РазмерСписка()>0," AND Партии.ТМЦ IN (SELECT Val FROM #списТМЦ)", "");
	
	Возврат Условия
	
КонецФункции

Функция УсловиеРесурса()
	
	УсловиеРесурса = "";
	
	ТекСтрВыбУсловие = ВыбУсловие.ТекущаяСтрока();
	ТекСтрВыбАттр = ВыбАттр.ТекущаяСтрока();
	ТекУсловиеВыбУсловие ="";
	ТекУсловиеВыбАттр = "";
	
	Если (ТекСтрВыбУсловие <> 0) И (ТекСтрВыбАттр <> 0) Тогда
		ТекУсловиеВыбУсловие = ВыбУсловие.ПолучитьЗначение(ТекСтрВыбУсловие);
		ТекУсловиеВыбАттр = ВыбАттр.ПолучитьЗначение(ТекСтрВыбАттр);
	КонецЕсли;
	
	Если (ПустоеЗначение(ТекУсловиеВыбУсловие)=0) И (ПустоеЗначение(ТекУсловиеВыбАттр)=0) Тогда
		УсловиеРесурса = " AND " + ТекУсловиеВыбАттр + ТекУсловиеВыбУсловие + Строка(ЗначениеУcловия);
	КонецЕсли;
	
	Возврат УсловиеРесурса
	
КонецФункции
	
Функция ОбойтиГруппировку(Таб, ТабГруппировки, РасшифровкаПоДокументам)
	
	Если ПустоеЗначение(ТабГруппировки.тзПотомки) = 1 Тогда
		Если Группировка <>  3 Тогда
			ВывестиСекции(Таб, ТабГруппировки, "group_4",0); // вывод ТМЦ
			
			Если РасшифровкаПоДокументам = 1 Тогда //Выводим документы
				
				//Находим строки с ключем в табл. Документы
				//Таблица для отбора
				ТабГруппировкиФильтр = СоздатьОбъект("ИндексированнаяТаблица");
				
				//Отключаем фильтр прошлой итерации
				ТабДокументы.ВыключитьФильтр("Ключ_индекс"); 
				
				//Список-фильтр
				Фильтр = СоздатьОбъект("СписокЗначений");
				Фильтр.ДобавитьЗначение(ТабГруппировки.Фирма);
				Фильтр.ДобавитьЗначение(ТабГруппировки.МестоХранения);
				Фильтр.ДобавитьЗначение(ТабГруппировки.ТМЦ);
				
				ТабДокументы.УстановитьФильтр(Фильтр,Фильтр, "Ключ_индекс",0);
				
				ТабДокументы.ВыбратьСтроки("Ключ_индекс");
				
				Пока ТабДокументы.ПОлучитьСтроку("Ключ_индекс") = 1 Цикл
					Если ПустоеЗначение(ТабДокументы.Док) = 0 Тогда
						ВывестиСекции(Таб, ТабДокументы, "document",1,0,1); //Вывод Документов
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли; //Условие выводы документа
		КонецЕсли; //Условие вывода ТМЦ (не группы)
	Иначе
		ВывестиСекции(Таб, ТабГруппировки, "group_3",0,ТабГруппировки.__Уровень__ ); //Вывод родителя
		тзПотомки = СоздатьОбъект("ИндексированнаяТаблица");
		ТабГруппировки.тзПотомки.Выгрузить(тзПотомки);
		тзПотомки.ВыбратьСтроки();
		
		Пока тзПотомки.ПолучитьСтроку() = 1 Цикл
			ОбойтиГруппировку(Таб, тзПотомки, РасшифровкаПоДокументам); //Вывод ТМЦ
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТабГруппировки;
	
КонецФункции

Процедура  ВывестиСекции(Таб, ТабГруппировки, ИмяСекции, РасшифровкаПоДокументам, Уровень = 0, НеВыводитьТМЦ = 0)
	
	ИмяСекции = ИмяСекции + Суффикс;
	
	Фирма = ТабГруппировки.Фирма;
	МестоХранения = ТабГруппировки.МестоХранения;
	Если НеВыводитьТМЦ = 0 Тогда
		ТМЦ = ТабГруппировки.ТМЦ;
		ТМЦ_Наименование =  глДополнитьСтроку("", "    ",ТабГруппировки.__Уровень__ ) + ТабГруппировки.ТМЦ.Наименование;
		СтрРасшифровка = "1=" + Фирма.Код + "#2=" + ?(ПустоеЗначение(МестоХранения) = 0, МестоХранения.Код," ") +"#3="+ТабГруппировки.ТМЦ.Код + "#";
	КонецЕсли;
	Если РасшифровкаПоДокументам = 1 Тогда
		Документ = ТабГруппировки.Док;
	КонецЕсли;
	КоличествоНачало = ТабГруппировки.КоличествоНачало;
	СуммаНачало = ТабГруппировки.СуммаНачало;
	КоличествоПриход = ТабГруппировки.КоличествоПриход;
	СуммаПриход = ТабГруппировки.СуммаПриход;
	КоличествоРасход = ТабГруппировки.КоличествоРасход;
	СуммаРасход = ТабГруппировки.СуммаРасход;
	КоличествоОстаток = ТабГруппировки.КоличествоОстаток;
	СуммаОстаток = ТабГруппировки.СуммаОстаток;
	Таб.ВывестиСекцию(ИмяСекции);	
	
КонецПроцедуры

///////////////////////////////////Работа со списками отбора и подбором///////////////////////////////////////

Процедура ДобавитьВСписок(Элт, Спис)
	
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	
	Если Элт.Вид() = "ТМЦ" Тогда
		ДобавитьвСписок(Элт, списТМЦ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
	
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
	
КонецПроцедуры

Группировка = 1;
ЗначГруппировки.ДобавитьЗначение("НЕТ", "НЕТ");
ЗначГруппировки.ДобавитьЗначение("ТМЦ", "ТМЦ");
ЗначГруппировки.ДобавитьЗначение("Документ", "Документ");

ВыбАттр.УдалитьВсе();
ВыбУсловие.УдалитьВсе();

ВыбАттр.ДобавитьЗначение("Партии.ОстатокТовараНачальныйОстаток", "Количество нач. остаток");
ВыбАттр.ДобавитьЗначение("Партии.СтоимостьНачальныйОстаток", "Сумма нач. остаток");

ВыбАттр.ДобавитьЗначение("Партии.ОстатокТовараПриход", "Количество приход");	
ВыбАттр.ДобавитьЗначение("Партии.СтоимостьПриход", "Сумма приход");

ВыбАттр.ДобавитьЗначение("Партии.ОстатокТовараРасход", "Количество расход");	
ВыбАттр.ДобавитьЗначение("Партии.СтоимостьРасход", "Сумма расход");

ВыбАттр.ДобавитьЗначение("Партии.ОстатокТовараКонечныйОстаток", "Количество кон. остаток");	
ВыбАттр.ДобавитьЗначение("Партии.СтоимостьКонечныйОстаток", "Сумма кон. остаток");	

ВыбУсловие.ДобавитьЗначение("=", "=");
ВыбУсловие.ДобавитьЗначение(">", ">");
ВыбУсловие.ДобавитьЗначение(">=", ">=");
ВыбУсловие.ДобавитьЗначение("<", "<");
ВыбУсловие.ДобавитьЗначение("<=", "<=");

Форма.ВыбАттр.Видимость(0);
Форма.ВыбУсловие.Видимость(0);
форма.ЗначениеУcловия.Видимость(0);
	