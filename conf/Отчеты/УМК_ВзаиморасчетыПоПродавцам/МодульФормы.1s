//--- УМК Сандомирский В.Ю. (02.09.14) в эксплуатации  --- на основе упрощенного отчета - взаиморасчеты 
//--------------------------------------------------------- главное отличие это группировка по реквизиту : ПРОДАВЕЦ



// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;
Перем Обновить;
Перем Расшифровка;
Перем КоличествоГруппировок;
Перем Язык, УкрГруппировки;
Перем Группировки;				//--- Список группировок
Перем Запрос;
Перем ДокНачала, ДокКонца;
Перем Д1, Д2;
Перем ГруппировкиПоДвижениям;
Перем Знак;

Перем Заголовок, ПечЗаголовокСтолбца;

// ===============================
Процедура УстановитьГруппировкиЗапроса(ТекстЗапроса, ТекстЗагол)
	                       
	СписокГруппировок = СоздатьОбъект("СписокЗначений");
	КвоГруппировок 				= Группировки.РазмерСписка();
	НомерГруппировкиВалюта 		= КвоГруппировок;
	НомерГруппировкиКредДокумент= КвоГруппировок;

	Для Сч=1 По КвоГруппировок Цикл
		
		Если Группировки.Пометка(Сч)=1 Тогда
			ПредставлениеГрупп		=""; 
			УкрПредставлениеГрупп	="";
			ТекстГрупп = Группировки.ПолучитьЗначение(Сч,ПредставлениеГрупп);
			УкрГруппировки.ПолучитьЗначение(УкрГруппировки.НайтиЗначение(ТекстГрупп),УкрПредставлениеГрупп);
			
			ТекстБезУпорядочивания = "";
			ТекстБезГрупп = "";
			//Если ( (ТекстГрупп = "Контрагент") Или (ТекстГрупп = "СтавкаНДС") Или (ТекстГрупп = "Валюта") ) 
			//	И (фБезГрупп = 2) Тогда
			//		ТекстБезГрупп = " без групп";
			//ИначеЕсли ( (ТекстГрупп = "Договор") Или (ТекстГрупп = "Счет") Или (ТекстГрупп = "КредДокумент") )
			//	И (глОптимизацияОтчетов = 1) Тогда
			//	ТекстБезУпорядочивания = " без упорядочивания";
			//КонецЕсли;
			ТекстЗапроса= ТекстЗапроса 	+ "Группировка "+ТекстГрупп+ТекстБезУпорядочивания+ТекстБезГрупп+";";
			ТекстЗагол	= ТекстЗагол + " / "+?(Язык="у",УкрПредставлениеГрупп,ПредставлениеГрупп);
			СписокГруппировок.ДобавитьЗначение(ТекстГрупп,ПредставлениеГрупп);
			Если ТекстГрупп = "Валюта" Тогда
			    НомерГруппировкиВалюта = СписокГруппировок.РазмерСписка();
			ИначеЕсли ТекстГрупп = "КредДокумент" Тогда
				НомерГруппировкиКредДокумент = СписокГруппировок.РазмерСписка();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 

	Если ПустаяСтрока(ТекстЗагол)=0 Тогда // удаляем ведущий разделитель " / "
		ТекстЗагол = Сред(ТекстЗагол,4)
	КонецЕсли;

КонецПроцедуры // УстановитьГруппировкиЗапроса()


//======================================================================
Процедура ПечатьПериода(НазваниеГруппировки,НазваниеСекции,Запрос,ВалютаПечати, ПоПериоду = 0, Значен)
	
	Знак = 1;
	
	ПечДатаСверки = "";
	Если НазваниеГруппировки = "Контрагент" Тогда
		ДатаСверки = Запрос.Контрагент.РезультатСверкиДата;
		ПечДатаСверки = ДатаСверки;
	КонецЕсли;
	
	Если фНачОст = 1 Тогда    
		Если НазваниеГруппировки="Документ" Тогда
			ПечНачДолг = "";
		Иначе
			НачДолг	= Запрос.НачДолгОсн;
			ПечНачДолг = глФРМ(Знак*НачДолг,Гривня,1);

			Если ВалютаПечати <> Гривня Тогда
				НачДолг = Запрос.НачДолг;
				ПечНачДолг = глФРМ(Знак*НачДолг,ВалютаПечати,1)+РазделительСтрок+ПечНачДолг;
			КонецЕсли;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|НачОст");
	КонецЕсли;
		
	Если фПриход = 1 Тогда    
		Приход = Запрос.ПрихДолгОсн;
		Признак = "";
		Если НазваниеГруппировки = "Документ" Тогда
			Если (Запрос.Документ.Вид() = "ВозвратнаяНакладная") ИЛИ (Запрос.Документ.Вид() = "ПереоценкаРозницы") Тогда
				Если Запрос.Документ.СпецВозврат = 1 Тогда
					Признак = "+";
				КонецЕсли;				
			КонецЕсли;
		КонецЕсли;
		ПечПриход = глФРМ(Приход,Гривня,1);

		Если ВалютаПечати <> Гривня Тогда
			Приход = Запрос.ПрихДолг;
			ПечПриход = глФРМ(Приход,ВалютаПечати,1)+РазделительСтрок+ПечПриход;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Приход");
	КонецЕсли;

	Если фРасход = 1 Тогда    
		Расход = Запрос.РасхДолгОсн;
		ПечРасход = глФРМ(Расход,Гривня,1);
		Если ВалютаПечати <> Гривня Тогда
			Расход = Запрос.РасхДолг;
			ПечРасход = глФРМ(Расход,ВалютаПечати,1)+РазделительСтрок+ПечРасход;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|Расход");
	КонецЕсли;

	Если фКонОст = 1 Тогда    
		Если НазваниеГруппировки="Документ" Тогда
			ПечДолгКонтрагента = "";
			ПечНашДолг		   = "";
		Иначе
			КонДолг = Запрос.КонДолгОсн;
			ПечДолгКонтрагента 	= глФРМ(Макс(0, КонДолг),Гривня,1);
			ПечНашДолг			= глФРМ(Макс(0,-КонДолг),Гривня,1);

			Если ВалютаПечати <> Гривня Тогда
				КонДолг = Запрос.КонДолг;
				ПечДолгКонтрагента 	= глФРМ(Макс(0, КонДолг),ВалютаПечати,1)+РазделительСтрок+ПечДолгКонтрагента;
				ПечНашДолг			= глФРМ(Макс(0,-КонДолг),ВалютаПечати,1)+РазделительСтрок+ПечНашДолг;
			КонецЕсли;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(НазваниеСекции+"|КонОст");
	КонецЕсли;
	
КонецПроцедуры //ПечатьПериода()

//======================================================================
Процедура ПечатьСтроки(Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка = "",ЭтоГруппа=0)
Перем Секция;
	
	Наим = ПечТекстСтроки;
	
	Если (НазваниеГруппировки = "Контрагент") ИЛИ (НазваниеГруппировки = "Договор")  Тогда //--- УМК Сандомирский В.Ю. (03.09.14) по расшифровке открывать договор на редактирование
		Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);
		Если (НазваниеГруппировки = "Договор") И (фПримДоговор = 1) Тогда
			Наим = Наим + " " + СокрЛП(Запрос.ПолучитьАтрибут(НазваниеГруппировки).Примечание);
		КонецЕсли;
	Иначе
		Значение = ТекРасшифровка;
	КонецЕсли;	
	ПечКод = "";
	Если НазваниеГруппировки = "Контрагент" Тогда
		ПечКод = Запрос.Контрагент.Код;
	КонецЕсли;
	
	Значен = ТекРасшифровка;
	Секция = Таб.ПолучитьСекцию(НазваниеСекции+"|Наименование");
	
	Таб.ВывестиСекцию(Секция);
	
	ВалютаПечати=Гривня;	

    ПечатьПериода(НазваниеГруппировки, НазваниеСекции, Запрос, ВалютаПечати, , Значен);
	
КонецПроцедуры //ПечатьСтроки()

//======================================================================
Процедура ВывестиГруппировки(Знач Ном=1)

	Если Ном > КоличествоГруппировок Тогда                           
		Возврат;
	КонецЕсли;
	
	НазваниеГруппировки = Группировки.ПолучитьЗначение(Ном);
	Пока Запрос.Группировка(Ном) = 1 Цикл

		НазваниеСекции="Группировка"+Ном ; //+ ?((Ном = 1) И (КоличествоГруппировок > 1), "Ц", "");
		Значение = Запрос.ПолучитьАтрибут(НазваниеГруппировки);
		
		Если Найти("Контрагент,Продавец",НазваниеГруппировки) > 0 Тогда
			ПечТекстСтроки = глСмещениеГруппы(Значение,0) + Значение;
		//ИначеЕсли Найти("Продавец",НазваниеГруппировки) > 0 Тогда
		//	ПечТекстСтроки = глСмещениеГруппы(Значение,фБезГрупп-1) + Значение;
		Иначе
			// Договор,Счет,КредДокумент,Документ
			Если ПустоеЗначение(Значение)=0 Тогда
				ПечТекстСтроки = ""+глДокументВОтчете(Значение,"с номером","с датой",Язык);
			Иначе
				ПечТекстСтроки = "";
			КонецЕсли;
		КонецЕсли;
		
		ПечТекстСтроки = ?(ПустоеЗначение(ПечТекстСтроки)=1,глПредставлениеПустогоЗначения(НазваниеГруппировки,Язык),ПечТекстСтроки);

		ЗначениеРасшифровки = 0;
		//Если ((фПриход = 0) И (фРасход = 0)) Или (НазваниеГруппировки = "Документ") ИЛИ (НазваниеГруппировки = "Контрагент") Тогда
		Если ((фПриход = 0) И (фРасход = 0)) Или (НазваниеГруппировки = "Документ") Тогда
		    // остатки расшифровать до движений нельзя
			ЗначениеРасшифровки = Значение;
		Иначе
			// расшифровываем до движений, отбираем только текущие значения
			Расшифровка.Установить("Выб"+НазваниеГруппировки, Значение);
			Расшифровка.Установить("Группировки", ГруппировкиПоДвижениям);
			ЗначениеРасшифровки = Расшифровка;
		КонецЕсли;

		ПечатьСтроки(Ном,НазваниеГруппировки,НазваниеСекции,ПечТекстСтроки,ЗначениеРасшифровки,Запрос.ЭтоГруппа(НазваниеГруппировки));
			
		
		// --- Сандомирский В.Ю. (расшифровка кассовой ведомости если несколько строк по одному контрагенту)
		
		Если НазваниеГруппировки="Контрагент" Тогда //--- в группировке контрагент запоминаем контрагента
			ТекКонтрагент = Значение;			
		КонецЕсли;
		
		Если Значение.Вид()  = "УМК_КассоваяВедомость" Тогда
					
			ТекВедомость = Значение;
			
			//--- Первый цикл считает количество строк с текущим контрагентом
			КвоВхождений = 0;
			ТекВедомость.ВыбратьСтроки();
			Пока ТекВедомость.ПолучитьСтроку() = 1 Цикл
				Если ТекВедомость.Контрагент = ТекКонтрагент Тогда		
					КвоВхождений = КвоВхождений + 1;				
				КонецЕсли;		
			КонецЦикла;
				
			//--- Второй цикл выводит расшифровку если количество вхождений более 1	
			Если КвоВхождений > 1 Тогда
				ТекВедомость.ВыбратьСтроки();
				Пока ТекВедомость.ПолучитьСтроку() = 1 Цикл
					Если ТекВедомость.Контрагент = ТекКонтрагент Тогда		
						ТекСтрока 	= ТекВедомость.НомерСТроки;
						ПечОплата   = глФРМ(ТекВедомость.Сумма,Гривня,1);
						Таб.ВывестиСекцию("СтрокаВедомость|Наименование");
						
						Если фНачОст = 1 Тогда  
							Таб.ПрисоединитьСекцию("СтрокаВедомость|НачОст");
						КонецЕсли;
						Если фПриход = 1 Тогда  
							Таб.ПрисоединитьСекцию("СтрокаВедомость|Приход");
						КонецЕсли;
						//Если фОплата = 1 Тогда 
						//	Таб.ПрисоединитьСекцию("СтрокаВедомость|НачОст");
						//КонецЕсли;	
						
						//Таб.ПрисоединитьСекцию("СтрокаВедомость|Оплата");
						
						
					//	Таб.ПрисоединитьСекцию("СтрокаВедомость|КонСальдо");		
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;
				
			// ... Сандомирский В.Ю. (расшифровка кассовой ведомости если несколько строк по одному контрагенту)	
					
		КонецЕсли;
		
		глОживить(1);

		ВывестиГруппировки(Ном+1);
	КонецЦикла;
	// очищаем отборы по расшифровке до движений
	Если Не( ((фПриход = 0) И (фРасход = 0)) Или (НазваниеГруппировки = "Документ") ) Тогда
		Расшифровка.Установить("Выб"+НазваниеГруппировки);
		Расшифровка.Установить("Группировки");
	КонецЕсли;

КонецПроцедуры // ВывестиГруппировки()

// ===============================
Процедура ВывестиШапку()

	Таб.ВывестиСекцию("Шапка|Наименование");
	Если фНачОст = 1 Тогда    
		Таб.ПрисоединитьСекцию("Шапка|НачОст");	
	КонецЕсли;
		
	Если фПриход = 1 Тогда    
		Таб.ПрисоединитьСекцию("Шапка|Приход");
	КонецЕсли;

	Если фРасход = 1 Тогда    
		Таб.ПрисоединитьСекцию("Шапка|Расход");
	КонецЕсли;

	Если фКонОст = 1 Тогда    
		Таб.ПрисоединитьСекцию("Шапка|КонОст");
	КонецЕсли;
	
	глОживить(1);
	Таб.Область(2, 8, 2, Таб.ШиринаТаблицы()).ГоризонтальноеПоложение(3+4);

КонецПроцедуры 

//======================================================================
Процедура Сформировать(ЗакрытьДиалог=0)
	
	Перем ТекстЗапроса;
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "УМК_ВзаиморасчетыПоПродавцам");		
	Расшифровка.Установить("Дата1", 		Дата1);
    Расшифровка.Установить("Дата2", 		Дата2);
	Расшифровка.Установить("ДокНачала", ДокНачала);
    Расшифровка.Установить("ДокКонца", ДокКонца);
	Расшифровка.Установить("ВыбФирма",		ВыбФирма);
	Расшифровка.Установить("ВыбКонтрагент",	ВыбКонтрагент);
	Расшифровка.Установить("ВыбДоговор",	ВыбДоговор);
	Расшифровка.Установить("списКонтрагенты",	списКонтрагенты);
	
	Расшифровка.Установить("фНачОст",	фНачОст);
	Расшифровка.Установить("фКонОст",	фКонОст);
	Расшифровка.Установить("фПриход",	фПриход);
	Расшифровка.Установить("фРасход",	фРасход);
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") Или (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;
	
	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 
	глУстПропись(Гривня,Язык);
	Заголовок=?(Язык="у","Взаєморозрахунки по продавцях","Взаиморасчеты по продавцам");
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	
	Если (Дата2 >= ПолучитьДатуТА()) и (ПустоеЗначение(ДокКонца) = 1) Тогда
		ТекстЗапроса = "
			|Период с Д1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Д1 по Д2;";
	КонецЕсли;
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, Дата1, Дата2);
	ТекстЗапроса = ТекстЗапроса+ "
	|
	|Фирма			= Регистр.ВзаиморасчетыПокупателей.Фирма;		
	|Контрагент		= Регистр.ВзаиморасчетыПокупателей.Контрагент;		
	|Договор		= Регистр.ВзаиморасчетыПокупателей.Договор;			
	|Продавец		= Регистр.ВзаиморасчетыПокупателей.Договор.Продавец;
	|фДоговорЗакрыт	= Регистр.ВзаиморасчетыПокупателей.Договор.фДоговорЗакрыт;
	|Счет			= Регистр.ВзаиморасчетыПокупателей.Счет;			
	|КредДокумент	= Регистр.ВзаиморасчетыПокупателей.КредДокумент;
	|СтавкаНДС		= Регистр.ВзаиморасчетыПокупателей.СтавкаНДС;
	|Валюта			= Регистр.ВзаиморасчетыПокупателей.Валюта;
	|НомерСтроки	= Регистр.ВзаиморасчетыПокупателей.НомерСтроки;
	|Долг			= Регистр.ВзаиморасчетыПокупателей.Долг;
	|ДолгОсн		= Регистр.ВзаиморасчетыПокупателей.ДолгОсн;
	|
	|Функция НачДолг 		= НачОст(Долг);
	|Функция НачДолгОсн 	= НачОст(ДолгОсн);
	|
	|Функция КонДолг 		= КонОст(Долг);
	|Функция КонДолгОсн 	= КонОст(ДолгОсн);
	|
	|Функция ПрихДолг 		= Приход(Долг);
	|Функция ПрихДолгОсн	= Приход(ДолгОсн);
	|
	|Функция РасхДолг 		= Расход(Долг);
	|Функция РасхДолгОсн 	= Расход(ДолгОсн);
	|";
	
	Если ПустоеЗначение(ВыбФирма) <> 1 Тогда
		ТекстЗапроса = ТекстЗапроса+ "
		|Условие (Фирма в ВыбФирма);";	
	КонецЕсли;
	
	Если списКонтрагенты.РазмерСписка() > 0 Тогда
		ТекстЗапроса = ТекстЗапроса+ "
		|Условие (Контрагент в списКонтрагенты);";
	ИначеЕсли ПустоеЗначение(ВыбКонтрагент) <> 1 Тогда
		ТекстЗапроса = ТекстЗапроса+ "
		|Условие (Контрагент в ВыбКонтрагент);";	
	КонецЕсли;
	
	Если списПродавцы.РазмерСписка() > 0 Тогда
		ТекстЗапроса = ТекстЗапроса+ "
		|Условие (Продавец в списПродавцы);";
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбДоговор) <> 1 Тогда //--- не учитывать закрытые договора
		ТекстЗапроса = ТекстЗапроса+ "
		|Условие (Договор = ВыбДоговор);
		|";	
	КонецЕсли;
	
	Если фФильтрЗакрытые = 1 Тогда //--- не учитывать закрытые договора
		ТекстЗапроса = ТекстЗапроса+ "
		|Условие (фДоговорЗакрыт = 0);
		|";	
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса+ "
	|Группировка Продавец без групп;
	|Группировка Контрагент без групп;
	|Группировка Договор;";
	
	Если фВыводитьДокументы = 1 Тогда 
		ТекстЗапроса = ТекстЗапроса+ "
		|Группировка Документ;";
	КонецЕсли;	
		
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Предупреждение("Запрос по кредиту не выполнился!");
		Возврат;
	КонецЕсли;  
	
	Загол = "";

	//Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", ВыбФирма, "ВыбФирма", ТекстЗапроса, Загол, Язык)=0 Тогда
	//	Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
	//	Возврат;
	//ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Контрагент", ВыбКонтрагент, "ВыбКонтрагент", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
	//	Предупреждение("Возникли ошибки при наложении фильтра по контрагентам. Отчет не сформирован.");
	//	Возврат;
	//ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Договор", ВыбДоговор, "ВыбДоговор", ТекстЗапроса, Загол, Язык)=0 Тогда
	//	Предупреждение("Возникли ошибки при наложении фильтра по договорам. Отчет не сформирован.");
	//	Возврат;
	//ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"СтавкаНДС", ВыбСтавкаНДС, "ВыбСтавкаНДС", ТекстЗапроса, Загол, Язык)=0 Тогда
	//	Предупреждение("Возникли ошибки при наложении фильтра по НДС. Отчет не сформирован.");
	//	Возврат;
	//ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Валюта", ВыбВалюта, "ВыбВалюта", ТекстЗапроса, Загол, Язык)=0 Тогда
	//	Предупреждение("Возникли ошибки при наложении фильтра по валютам. Отчет не сформирован.");
	//	Возврат;
	//КонецЕсли;
	//
	ПечЗаголовокСтолбца = "";
	ТекстГруппировок 	= "";
	
	УстановитьГруппировкиЗапроса(ТекстГруппировок, ПечЗаголовокСтолбца);

	КоличествоГруппировок = Группировки.РазмерСписка();
		
	
	Таб.ВывестиСекцию("Кнопки|Наименование");
	Таб.ВывестиСекцию("Заголовок|Наименование");	
	глОживить(Таб.ВысотаСекции("Заголовок"));
	Расшифровка.Установить("Обновить",0);
	ВывестиШапку();
	ВывестиГруппировки();
	
	// Вывод заполненной формы
	Таб.ПараметрыСтраницы(2);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	ТекстЗагол = "Взаиморасчеты с покупателями по продавцам";
	Таб.Показать("ПЕЧАТЬ: "+ТекстЗагол+": ("+ПериодСтр(Дата1, Дата2)+?(ПустоеЗначение(ВыбФирма) = 1, "", ", "+ВыбФирма)+")","");
	Если (Обновить = 2) Или (ЗакрытьДиалог=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Функция УстановитьДоступность()
	
КонецФункции //УстановитьДоступность

//======================================================================
Процедура ДобавитьВСписок(Элт, Наим, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Наим);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ОбработкаПодбора(Элт)
	Если Элт.Вид() = "УМК_Продавцы" Тогда
		ДобавитьвСписок(Элт, Строка(Элт), списПродавцы);
	ИначеЕсли Элт.Вид() = "Контрагенты" Тогда
		ДобавитьвСписок(Элт, Строка(Элт), списКонтрагенты);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	Если Лев(НазваниеОбъекта, 1) = "С" Тогда
	    КФормы.ВыборГруппы(1);
	КонецЕсли;	
КонецПроцедуры

//======================================================================
Процедура УдалитьЗначениеСписка(Спис)
	
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()	
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		Дата1 			= глРасшифровка.Получить("Дата1");
		Дата2			= глРасшифровка.Получить("Дата2");
		ВыбФирма		= глРасшифровка.Получить("ВыбФирма");
		ВыбКонтрагент	= глРасшифровка.Получить("ВыбКонтрагент");
		ВыбДоговор		= глРасшифровка.Получить("ВыбДоговор");
		фНачОст			= глРасшифровка.Получить("фНачОст");
		фКонОст			= глРасшифровка.Получить("фКонОст");
		фПриход			= глРасшифровка.Получить("фПриход");
		фРасход			= глРасшифровка.Получить("фРасход");	
		фБезГрупп 		= глРасшифровка.Получить("фБезГрупп");
		
		Если ТипЗначенияСтр(глРасшифровка.Получить("списКонтрагенты"))="СписокЗначений" Тогда
			глРасшифровка.Получить("списКонтрагенты").Выгрузить(списКонтрагенты);
		КонецЕсли;
		
		Если ТипЗначенияСтр(глРасшифровка.Получить("списПродавцы"))="СписокЗначений" Тогда
			глРасшифровка.Получить("списПродавцы").Выгрузить(списПродавцы);
		КонецЕсли;
	
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			фВыводитьДокументы = 1;
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;            
	
КонецПроцедуры // ПриОткрытии()

//======================================================================
//======================================================================
//======================================================================

Группировки = СоздатьОбъект("СписокЗначений");
Группировки.ДобавитьЗначение("Продавец",	 	"Продавец"); 
Группировки.ДобавитьЗначение("Контрагент",		"Контрагент");
Группировки.ДобавитьЗначение("Договор", 		"Договор");  
Группировки.ДобавитьЗначение("Документ",		"Документ движения");
Группировки.ТекущаяСтрока(1);

// для расшифровки отчета по движениям
ГруппировкиПоДвижениям = СоздатьОбъект("СписокЗначений"); 
ГруппировкиПоДвижениям.ДобавитьЗначение("Документ",		"Документ движения");
ГруппировкиПоДвижениям.Пометка(1,1);

ВидОтчетаОбщ = "ОбщиеВзаиморасчеты";