//-----------------------------------------------
Перем Т;
Перем Обновить;
Перем Расшифровка;
Перем Закрыть;
Перем ПредставлениеРУ;
Перем ВидСубконто[3], Субконто[3], ОтборСубконто[3], ПоГруппам[3], Номер[3], ВыбСубконто[3];
Перем СписокСубконто, ДобавитьСубконто, ОтборСубк;

Процедура ПроверитьСоответствиеСписка(Спис, Номер, ВыбВидСубконто)
	Если Спис.РазмерСписка() = 0 Тогда
		Возврат;
	КонецЕсли;
	Тип = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор()).Тип;
	Вид = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор()).Вид;
	Зн = Спис.ПолучитьЗначение(1);
	Если (ТипЗначенияСтр(Зн) <> Тип) Тогда		
		Спис.УдалитьВсе();
	ИначеЕсли (Вид <> "") Тогда
		Если Зн.Вид() <> Вид Тогда
			Спис.УдалитьВсе();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьДоступностьКнопокСписков()
	Для Инд = 1 По 3 Цикл
		Если Счет.КоличествоСубконто() >= Инд Тогда
			ДоступноСписок = 1;
		Иначе
			ДоступноСписок = 0;
		КонецЕсли;
		
		Форма.ПолучитьАтрибут("ВыбратьСубконто"+Инд).Доступность(ДоступноСписок);
		Форма.ПолучитьАтрибут("ДобавитьСубконто"+Инд).Доступность(ДоступноСписок);
		Форма.ПолучитьАтрибут("УдалитьСубконто"+Инд).Доступность(ДоступноСписок);
		Форма.ПолучитьАтрибут("УдалитьВсеСубконто"+Инд).Доступность(ДоступноСписок);
		
		Если ДоступноСписок = 0 Тогда
			Если Инд = 1 Тогда
				ВыбСубконто1.УдалитьВсе();
			ИначеЕсли Инд = 2 Тогда
				ВыбСубконто2.УдалитьВсе();
			Иначе
				ВыбСубконто3.УдалитьВсе();
			КонецЕсли;
		Иначе			
			Если Инд = 1 Тогда
				ПроверитьСоответствиеСписка(ВыбСубконто1, 1, ВыбВидСубконто1);
			ИначеЕсли Инд = 2 Тогда
				ПроверитьСоответствиеСписка(ВыбСубконто2, 2, ВыбВидСубконто2);
			Иначе
				ПроверитьСоответствиеСписка(ВыбСубконто3, 3, ВыбВидСубконто3);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СубконтоГруппа(Зн);
	Если ТипЗначенияСтр(Зн) = "Справочник" Тогда
		Если Зн.ЭтоГруппа() = 1 Тогда
			Возврат "Г";
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
КонецФункции

//-----------------------------------------------
Процедура ПоменятьЗначения(А1, А2)
	А = А1;
	А1 = А2;
	А2 = А;
КонецПроцедуры

//-----------------------------------------------
Процедура Поменять(Поз1, Поз2)
	ПоменятьЗначения(ВидСубконто[Поз1], ВидСубконто[Поз2]);
	ПоменятьЗначения(Субконто[Поз1], Субконто[Поз2]);
	ПоменятьЗначения(ОтборСубконто[Поз1], ОтборСубконто[Поз2]);
	ПоменятьЗначения(ПоГруппам[Поз1], ПоГруппам[Поз2]);
	ПоменятьЗначения(Номер[Поз1], Номер[Поз2]);
КонецПроцедуры

//-----------------------------------------------
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции

//-----------------------------------------------
Процедура ПоСубконто(Ит, Т, ФлВал)
	Если ОтборСубконто[1] = 1 Тогда // разворачивать
	    Ит.ВыбратьСубконто();
	    Пока Ит.ПолучитьСубконто() = 1 Цикл
			Расшифровка.Установить("ОтборСубконто"+Номер[1], 2);
		   	Расшифровка.Установить("Субконто"+Номер[1], Ит.Субконто());
	        Т.ВывестиСекцию("Секция_2" + СубконтоГруппа(Ит.Субконто(1)));

	        Если Ит.Счет.Количественный = 1 Тогда
	            Т.ВывестиСекцию("Секция_3");
	        КонецЕсли;
	        Если ФлВал = 1 Тогда
	            Ит.ВыбратьВалюты();
	            Пока Ит.ПолучитьВалюту()=1 Цикл
				   	Расшифровка.Установить("Валюта",Ит.Валюта);
				   	Расшифровка.Установить("ПоВалюте",1);
		            Т.ВывестиСекцию("Секция_4");
	            КонецЦикла;
			   	Расшифровка.Установить("Валюта");
				Расшифровка.Установить("ПоВалюте");
			КонецЕсли;

			Если ОтборСубконто[2] = 1 Тогда // разворачивать
			    Ит.ВыбратьСубконто(2);
			    Пока Ит.ПолучитьСубконто(2) = 1 Цикл
					Расшифровка.Установить("ОтборСубконто"+Номер[2], 2);
				   	Расшифровка.Установить("Субконто"+Номер[2], Ит.Субконто(2));
		    	    Т.ВывестиСекцию("Секция_5" + СубконтоГруппа(Ит.Субконто(2)));
		        	Если Ит.Счет.Количественный = 1 Тогда
		            	Т.ВывестиСекцию("Секция_6");
		        	КонецЕсли;
		        	Если ФлВал = 1 Тогда
		        		Ит.ВыбратьВалюты(,,1);
		        		Пока Ит.ПолучитьВалюту(1)=1 Цикл
						   	Расшифровка.Установить("Валюта",Ит.Валюта);
						   	Расшифровка.Установить("ПоВалюте",1);
		        			Т.ВывестиСекцию("Секция_7");
		        		КонецЦикла;
					   	Расшифровка.Установить("Валюта");
						Расшифровка.Установить("ПоВалюте");
					КонецЕсли;

					Если ОтборСубконто[3] = 1 Тогда // разворачивать
					    Ит.ВыбратьСубконто(3);
					    Пока Ит.ПолучитьСубконто(3) = 1 Цикл
							Расшифровка.Установить("ОтборСубконто"+Номер[3], 2);
						   	Расшифровка.Установить("Субконто"+Номер[3], Ит.Субконто(3));
				    	    Т.ВывестиСекцию("Секция_9" + СубконтоГруппа(Ит.Субконто(3)));
				        	Если Ит.Счет.Количественный = 1 Тогда
				            	Т.ВывестиСекцию("Секция_10");
				        	КонецЕсли;
				        	Если ФлВал = 1 Тогда
				        		Ит.ВыбратьВалюты(,,2);
				        		Пока Ит.ПолучитьВалюту(2)=1 Цикл
								   	Расшифровка.Установить("Валюта",Ит.Валюта);
								   	Расшифровка.Установить("ПоВалюте",1);
				        			Т.ВывестиСекцию("Секция_11");
				        		КонецЦикла;
							   	Расшифровка.Установить("Валюта");
								Расшифровка.Установить("ПоВалюте");
				        	КонецЕсли;
				        КонецЦикла;
					   	Расшифровка.Установить("Субконто"+Номер[3]);
					   	Расшифровка.Установить("ОтборСубконто"+Номер[3]);
					КонецЕсли;
		        КонецЦикла;
			   	Расшифровка.Установить("Субконто"+Номер[2]);
			   	Расшифровка.Установить("ОтборСубконто"+Номер[2]);
			КонецЕсли;
		КонецЦикла;
	   	Расшифровка.Установить("Субконто"+Номер[1]);
	   	Расшифровка.Установить("ОтборСубконто"+Номер[1]);
	ИначеЕсли (ОтборСубконто[1] = 3) И (Счет.КоличествоСубконто() = 0)
	И (Счет.Количественный = 1) Тогда
	   	// для синтетических неаналитических счетов (ОС.2, ОС.3) выведем количество
	   	Т.ВывестиСекцию("Секция_3");
	КонецЕсли;
КонецПроцедуры	

//-----------------------------------------------
Процедура Сформировать(Ручн=0)
	Если Счет.Выбран() = 0 Тогда
		Предупреждение("Не указан счет!");
		Возврат;
	КонецЕсли;

	Если глПроверкаИнтервалаОтчета(Дата1,Дата2) = 0 Тогда
		Возврат;
	КонецЕсли;

	НФ = РазделительУчета;

	Если Ручн=1 Тогда
	    СохранитьЗначение("ОтчРабСчет",Счет);
	КонецЕсли;

	ВидСубконто[1] = ВыбВидСубконто1; Субконто[1] = ?(ПустоеЗначение(Субконто1) = 1, ВыбСубконто1, Субконто1); ОтборСубконто[1] = ?(ВидСубконто[1].Выбран()=1, ОтборСубконто1.ТекущаяСтрока(), 3); ПоГруппам[1] = ПоГруппам1; Номер[1] = 1; ВыбСубконто[1] = ВыбСубконто1;
	ВидСубконто[2] = ВыбВидСубконто2; Субконто[2] = ?(ПустоеЗначение(Субконто2) = 1, ВыбСубконто2, Субконто2); ОтборСубконто[2] = ?(ВидСубконто[2].Выбран()=1, ОтборСубконто2.ТекущаяСтрока(), 3); ПоГруппам[2] = ПоГруппам2; Номер[2] = 2; ВыбСубконто[2] = ВыбСубконто2;
	ВидСубконто[3] = ВыбВидСубконто3; Субконто[3] = ?(ПустоеЗначение(Субконто3) = 1, ВыбСубконто3, Субконто3); ОтборСубконто[3] = ?(ВидСубконто[3].Выбран()=1, ОтборСубконто3.ТекущаяСтрока(), 3); ПоГруппам[3] = ПоГруппам3; Номер[3] = 3; ВыбСубконто[3] = ВыбСубконто3;
	Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
		Поменять(1, 2);
	КонецЕсли;
	Если ОтборСубконто[2] > ОтборСубконто[3] Тогда
		Поменять(2, 3);
		Если ОтборСубконто[1] > ОтборСубконто[2] Тогда
			Поменять(1, 2);
		КонецЕсли;
	КонецЕсли;

	ФлВал=Счет.Валютный;

   	Расшифровка = СоздатьОбъект("СписокЗначений");
    Ит = СоздатьОбъект("БухгалтерскиеИтоги");

    Ит.ИспользоватьРазделительУчета(РазделительУчета);
	КолПоСчету = 0;
    Заголовок1 = "";
    Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
		    Ит.ИспользоватьСубконто(ВидСубконто[А], Субконто[А], ОтборСубконто[А], ПоГруппам[А]);
		    Если А <> 1 Тогда
		    	Заголовок1 = Заголовок1+"; ";
		    КонецЕсли;
		    Заголовок1 = Заголовок1+глУкр(ВидСубконто[А]);
		    Если ОтборСубконто[А] = 2 Тогда
		    	Заголовок1 = Заголовок1+":"+Субконто[А];
				КолПоСчету = 1;
		    КонецЕсли;
		КонецЕсли;
	КонецЦикла;
                          
	Ит.ВключатьСубсчета(ДанныеПоСубсчетам);
	Если Ит.ВыполнитьЗапрос(Дата1, Дата2, Счет) = 0 Тогда
		Возврат;
	КонецЕсли;

	Если (ТипЗначенияСтр(Т) <> "Таблица") Или (Обновить = 0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
	 
	глУстПропись(Гривня);
	Если Константа.ФормыНаУкраинском = Да Тогда
		Т.ИсходнаяТаблица("Таблица_Укр");
	Иначе
		Т.ИсходнаяТаблица("Таблица");
	КонецЕсли;

	Расшифровка.Установить("Отчет", "ОборотноСальдоваяВедомостьПоСчету");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
   	Расшифровка.Установить("Дата1", Дата1);
   	Расшифровка.Установить("Дата2", Дата2);
   	Расшифровка.Установить("Счет", Счет);
   	Расшифровка.Установить("ДанныеПоСубсчетам", ДанныеПоСубсчетам);
    Для А=1 По 3 Цикл
   		Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);   		
   		Расшифровка.Установить("ВыбСубконто"+Номер[А], ВыбСубконто[А]);   		
   		Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
   		Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
   		Расшифровка.Установить("ПоГруппам"+Номер[А], ПоГруппам[А]);
	КонецЦикла;
    Т.ВывестиСекцию("Секция_12");
    Т.ВывестиСекцию("Секция_1");

    Расшифровка.УдалитьВсе();
   	Расшифровка.Установить("Отчет", "КарточкаСчета");
    Расшифровка.Установить("РазделительУчета", РазделительУчета);
   	Расшифровка.Установить("Дата1", Дата1);
   	Расшифровка.Установить("Дата2", Дата2);
   	Расшифровка.Установить("Счет", Счет);

    Для А=1 По 3 Цикл
		Если ОтборСубконто[А] <> 3 Тогда
			Расшифровка.Установить("ВидСубконто"+Номер[А], ВидСубконто[А]);
			Если ОтборСубконто[А] = 2 Тогда
				Расшифровка.Установить("ОтборСубконто"+Номер[А], ОтборСубконто[А]);
				Расшифровка.Установить("Субконто"+Номер[А], Субконто[А]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеПоСубсчетам = 1 Тогда
		Ит.ВыбратьСчета();
		Ит.ПолучитьСчет();
		Пока Ит.ПолучитьСчет() = 1 Цикл
		   	Расшифровка.Установить("Счет", Ит.Счет);
			Т.ВывестиСекцию("Секция_14");
			Если КолПоСчету = 1 Тогда
				Т.ВывестиСекцию("Секция_15");
			КонецЕсли;
	        Если ФлВал = 1 Тогда
	            Ит.ВыбратьВалюты();
	            Пока Ит.ПолучитьВалюту()=1 Цикл
				   	Расшифровка.Установить("Валюта",Ит.Валюта);
				   	Расшифровка.Установить("ПоВалюте",1);
		            Т.ВывестиСекцию("Секция_16");
	            КонецЦикла;
			   	Расшифровка.Установить("Валюта");
				Расшифровка.Установить("ПоВалюте");
			КонецЕсли;
			ПоСубконто(Ит, Т, ФлВал);
		   	Расшифровка.Установить("Отчет", "КарточкаСчета");
		КонецЦикла;
	Иначе
		ПоСубконто(Ит, Т, ФлВал);
	КонецЕсли;

	Если КолПоСчету = 0 Тогда
		Если ОтборСубконто[1] <> 3 Тогда
			Т.ВывестиСекцию("Секция_8");
		Иначе
	    	Т.ВывестиСекцию("Секция_17");
		КонецЕсли;
	Иначе
		Если ОтборСубконто[1] <> 3 Тогда
			Т.ВывестиСекцию("Секция_13");
		Иначе
			Т.ВывестиСекцию("Секция_18");
		КонецЕсли;
	КонецЕсли;
    Ит = 0;
    Т.ТолькоПросмотр(1);
    Т.Опции(0, 0, 7, 1, "ОпцииПечатиОСВПоСчету", "ОСВПоСчету");
	Т.ОбластьПечати(2);
    Т.Показать("Оборотно-сальдовая ведомость по счету: "+Счет+" ("+ПериодСтр(Дата1, Дата2)+?(ТипЗначения(РазделительУчета)=0, "", " "+РазделительУчета)+")", "");
    Если Закрыть = 1 Тогда
    	СтрокаДействийФормы = "#Закрыть";
    КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСчета()
	Если Счет.КоличествоСубконто() > 0 Тогда
		НазначитьСчет(ВыбВидСубконто1, Счет, 1);
		Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
		Доступность = 1;
	Иначе
		ВыбВидСубконто1 = "";
		Субконто1 = "";
		Доступность = 0;
	КонецЕсли;
	ОтборСубконто1.ТекущаяСтрока(1);
	Форма.Субконто1.Доступность(Доступность);
	Форма.ОтборСубконто1.Доступность(Доступность);
	Форма.ВыбВидСубконто1.Доступность(Доступность);
	Форма.ПоГруппам1.Доступность(Доступность);
	Форма.ОчиститьСубконто1.Доступность(Доступность);
		//-----
	Если Счет.КоличествоСубконто() > 1 Тогда
		НазначитьСчет(ВыбВидСубконто2, Счет, 2);
		Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
		ОтборСубконто2.ТекущаяСтрока(1);
		Доступность = 1;
	Иначе
		ВыбВидСубконто2 = "";
		Субконто2 = "";
		ОтборСубконто2.ТекущаяСтрока(3);
		Доступность = 0;
	КонецЕсли;
	Форма.Субконто2.Доступность(Доступность);
	Форма.ОтборСубконто2.Доступность(Доступность);
	Форма.ВыбВидСубконто2.Доступность(Доступность);
	Форма.ПоГруппам2.Доступность(Доступность);
	Форма.ОчиститьСубконто2.Доступность(Доступность);
		//-----
	Если Счет.КоличествоСубконто() > 2 Тогда
		НазначитьСчет(ВыбВидСубконто3, Счет, 3);
		Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
		ОтборСубконто3.ТекущаяСтрока(1);
		Доступность = 1;
	Иначе
		ВыбВидСубконто3 = "";
		Субконто3 = "";
		ОтборСубконто3.ТекущаяСтрока(3);
		Доступность = 0;
	КонецЕсли;
	Форма.Субконто3.Доступность(Доступность);
	Форма.ОтборСубконто3.Доступность(Доступность);
	Форма.ВыбВидСубконто3.Доступность(Доступность);
	Форма.ПоГруппам3.Доступность(Доступность);
	Форма.ОчиститьСубконто3.Доступность(Доступность);
	Если Счет.ЭтоГруппа() = 0 Тогда
		ДанныеПоСубсчетам = 0;
		Форма.ДанныеПоСубсчетам.Доступность(0);
	Иначе
		Форма.ДанныеПоСубсчетам.Доступность(1);
	КонецЕсли;
	УстановитьДоступностьКнопокСписков();
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто1()
	Если ПустоеЗначение(Субконто1) = 0 Тогда
	    Если ТипЗначения(Субконто1) = 11 Тогда //Справочник
	    	Если Субконто1.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто1.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто1.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто1.ТекущаяСтрока(2);
		КонецЕсли;
	Иначе
		ОтборСубконто1.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто2()
	Если ПустоеЗначение(Субконто2) = 0 Тогда
	    Если ТипЗначения(Субконто2) = 11 Тогда //Справочник
	    	Если Субконто2.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто2.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто2.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто2.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто2.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто3()
	Если ПустоеЗначение(Субконто3) = 0 Тогда
	    Если ТипЗначения(Субконто3) = 11 Тогда //Справочник
	    	Если Субконто3.ЭтоГруппа() = 1 Тогда
    			ОтборСубконто3.ТекущаяСтрока(1);
    		Иначе
    			ОтборСубконто3.ТекущаяСтрока(2);
    		КонецЕсли;
	    Иначе
			ОтборСубконто3.ТекущаяСтрока(2);
	    КонецЕсли;
	Иначе
		ОтборСубконто3.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто1()
	ОтборСубконто1.ТекущаяСтрока(1);
	Субконто1 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто2()
	ОтборСубконто2.ТекущаяСтрока(1);
	Субконто2 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОчиститьСубконто3()
	ОтборСубконто3.ТекущаяСтрока(1);
	Субконто3 = "";
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореПоВсемРУ()
	Если ПоВсемРУ = 1 Тогда
		Форма.РазделительУчета.НазначитьТип("");
	Иначе
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриОткрытии()
	Если Метаданные.РазделительУчета.Выбран() = 1 Тогда
		ПредставлениеРУ = Метаданные.РазделительУчета.Представление();
		Форма.РазделительУчета.НазначитьТип(Метаданные.РазделительУчета);
		Форма.Текст.Видимость(0);
	Иначе
		Форма.РазделительУчета.Видимость(0);
		Форма.ТекстРУ.Видимость(0);
		Форма.ПоВсемРУ.Видимость(0);
	КонецЕсли;

	ОтборСубконто1.УдалитьВсе();
	ОтборСубконто1.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто1.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто1.ДобавитьЗначение(3, "Не учитывать");

	ОтборСубконто2.УдалитьВсе();
	ОтборСубконто2.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто2.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто2.ДобавитьЗначение(3, "Не учитывать");

	ОтборСубконто3.УдалитьВсе();
	ОтборСубконто3.ДобавитьЗначение(1, "Разворачивать");
	ОтборСубконто3.ДобавитьЗначение(2, "Отбирать");
	ОтборСубконто3.ДобавитьЗначение(3, "Не учитывать");

	Если глФлагРасшифровки = 1 Тогда
		Закрыть = 1;
		Обновить = глОбновить;
		РУ = глРасшифровка.Получить("РазделительУчета");
		Если ТипЗначенияСтр(РУ) <> "" Тогда
			РазделительУчета = РУ;
			ПоВсемРУ = 0;
		Иначе
			Форма.РазделительУчета.НазначитьТип("");
			ПоВсемРУ = 1;
		КонецЕсли;
	   	Дата1 = глРасшифровка.Получить("Дата1");
	   	Дата2 = глРасшифровка.Получить("Дата2");
	   	Счет = глРасшифровка.Получить("Счет");
	   	ДанныеПоСубсчетам = глРасшифровка.Получить("ДанныеПоСубсчетам");
	   	ПриВыбореСчета();
		Если Обновить <> 0 Тогда
		   	ВыбВидСубконто1 = глРасшифровка.Получить("ВидСубконто1");
			Форма.Субконто1.НазначитьТип(ВыбВидСубконто1);
			Субконто1 = глРасшифровка.Получить("Субконто1");
			ОтборСубконто1.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто1"));
			глРасшифровка.Получить("ВыбСубконто1").Выгрузить(ВыбСубконто1);
			ПоГруппам1 = глРасшифровка.Получить("ПоГруппам1");
		   	ВыбВидСубконто2 = глРасшифровка.Получить("ВидСубконто2");
			Форма.Субконто2.НазначитьТип(ВыбВидСубконто2);
			Субконто2 = глРасшифровка.Получить("Субконто2");
			ОтборСубконто2.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто2"));
			глРасшифровка.Получить("ВыбСубконто2").Выгрузить(ВыбСубконто2);
			ПоГруппам2 = глРасшифровка.Получить("ПоГруппам2");
		   	ВыбВидСубконто3 = глРасшифровка.Получить("ВидСубконто3");
			Форма.Субконто3.НазначитьТип(ВыбВидСубконто3);
			Субконто3 = глРасшифровка.Получить("Субконто3");
			ОтборСубконто3.ТекущаяСтрока(глРасшифровка.Получить("ОтборСубконто3"));
			глРасшифровка.Получить("ВыбСубконто3").Выгрузить(ВыбСубконто3);
			ПоГруппам3 = глРасшифровка.Получить("ПоГруппам3");
			Т = глТаблица;
		КонецЕсли;

		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	Иначе
		Закрыть = 0;
		Обновить = 0;
		ВыбРазделительУчета = 1;
		Дата1 = НачалоПериодаБИ();
		Дата2 = КонецПериодаБИ();
		РазделительУчета = глВосстановитьЗначение(,"БазФирма");
		ПоВсемРУ = 0;
		Если Счет.Выбран()=0 Тогда
		    ВосстановитьЗначение("ОтчРабСчет",Счет);
		КонецЕсли;
		Если НазваниеНабораПрав() = "Производство" Тогда
		    //Счет = СчетПоКоду("ЗП");
			//Форма.Счет.Доступность(0);
		КонецЕсли;
		ПриВыбореСчета();
	КонецЕсли;
	Форма.КнопкаПоУмолчанию("Сформировать");
КонецПроцедуры

//-----------------------------------------------
Процедура ВводНового()
	Дата1 = НачалоПериодаБИ();
	Дата2 = КонецПериодаБИ();
	ПриВыбореСчета();
КонецПроцедуры

//-----------------------------------------------
Процедура ОбработкаПодбора(ВыбранноеЗначение)
	РазмерСписка = СписокСубконто.РазмерСписка();
	Если (ДобавитьСубконто = 1) Или (СписокСубконто.РазмерСписка() = 0) Тогда
		СписокСубконто.ДобавитьЗначение(ВыбранноеЗначение);
		СписокСубконто.ТекущаяСтрока(СписокСубконто.РазмерСписка());
	Иначе
		Позиция = СписокСубконто.ТекущаяСтрока();
		СписокСубконто.УстановитьЗначение(Позиция, ВыбранноеЗначение);
		СписокСубконто.ТекущаяСтрока(Позиция);
	КонецЕсли;
	//Если ДобавитьСубконто = 1 Тогда
	//    Если (РазмерСписка = 0) И (СписокСубконто.РазмерСписка() = 1) И (ОтборСубк.ТекущаяСтрока() = 1) Тогда
	//		ОтборСубк.ТекущаяСтрока(3);
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ВводСубконто(ВыбВидСубконто, ВыбСубконто, РежимПодбора, ДобСубконто, ОтборСубконто)
	Перем Субк, Форма;
	Если (ВыбСубконто.РазмерСписка() > 0) И (ВыбСубконто.ТекущаяСтрока() > 0)  Тогда
		Субк = ВыбСубконто.ПолучитьЗначение(ВыбСубконто.ТекущаяСтрока());
	КонецЕсли;

	СписокСубконто = ВыбСубконто;
	ДобавитьСубконто = ДобСубконто;
	ОтборСубк = ОтборСубконто;

	МД = Метаданные.ВидСубконто(ВыбВидСубконто.Идентификатор());
	Тип = МД.Тип;
	Если (Тип = "Справочник") Или (Тип = "Счет") Тогда
		ТипВид = Тип;
		Если МД.Вид <> "" Тогда
			ТипВид = ТипВид+"."+МД.Вид;
		КонецЕсли;
		ОткрытьПодбор(ТипВид,,Форма, РежимПодбора, Субк);
		Если (Тип = "Справочник") Или (Тип = "Счет") Тогда
			Форма.ВыборГруппы(1);
		КонецЕсли;
	ИначеЕсли Тип = "Документ" Тогда
		ТипВид = Тип;
		Если МД.Вид <> "" Тогда
			ТипВид = ТипВид+"."+МД.Вид;
			ОткрытьПодбор(ТипВид,,Форма, РежимПодбора, Субк);
		Иначе
			Заказ = СоздатьОбъект("Документ");
			ВидыЗаказов = "Договор,Заказ,Счет,РасходнаяНакладная,СчетВходящий,ПриходнаяНакладнаяГТД,ПриходнаяНакладнаяЗапасы,ВозвратнаяНакладная,ВводОстатковКредита,ВозвратПоставщику,ЛиквидацияНеоборАктивов,ОказаниеУслуг,УслугиСтороннихОрганизаций,УслугиСтороннихОрганизацийПроизводственногоХарактера";
		    Заказ.ВидыДляВыбора(ВидыЗаказов);
			Если Заказ.Выбрать("Список заказов") = 1 Тогда
			    ВыбСубконто.ДобавитьЗначение(Заказ.ТекущийДокумент());
			КонецЕсли;
			Заказ = 0;			
		КонецЕсли;		
	ИначеЕсли Тип = "Перечисление" Тогда
		СписокЗначений = СоздатьОбъект("СписокЗначений");
		П = Перечисление.ПолучитьАтрибут(МД.Вид);
		Для А=1 По П.КоличествоЗначений() Цикл
			СписокЗначений.ДобавитьЗначение(П.ЗначениеПоНомеру(А));
			Если РежимПодбора = 1 Тогда
				Если ВыбСубконто.НайтиЗначение(П.ЗначениеПоНомеру(А)) <> 0 Тогда
				    СписокЗначений.Пометка(А, 1);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если РежимПодбора = 1 Тогда
			Если СписокЗначений.ОтметитьЗначения(, "Выберите "+МД.Синоним) = 1 Тогда
				РазмерСписка = ВыбСубконто.РазмерСписка();
				ВыбСубконто.УдалитьВсе();
				Для А=1 По СписокЗначений.РазмерСписка() Цикл
					Если СписокЗначений.Пометка(А) = 1 Тогда
						ВыбСубконто.ДобавитьЗначение(СписокЗначений.ПолучитьЗначение(А));
					КонецЕсли;
				КонецЦикла;
				Если ДобавитьСубконто = 1 Тогда
				    Если (РазмерСписка = 0) И (ВыбСубконто.РазмерСписка() = 1) И (ОтборСубк.ТекущаяСтрока() = 1) Тогда
						ОтборСубк.ТекущаяСтрока(3);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли
		Иначе
			Если СписокЗначений.ВыбратьЗначение(Субк, "Выберите "+МД.Синоним) = 1 Тогда
				ОбработкаПодбора(Субк);
			КонецЕсли
		КонецЕсли;
	Иначе
		ВвестиЗначение(Субк, "Введите "+Тип, Тип, МД.Длина, МД.Точность);
		ОбработкаПодбора(Субк);
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриРедактированииСубконто(ВыбВидСубконто, ВыбСубконто)
	ВводСубконто(ВыбВидСубконто, ВыбСубконто, 0, 0, "");
КонецПроцедуры

//-----------------------------------------------
Процедура ПриВыбореСубконто(ВыбВидСубконто, ВыбСубконто, ОтборСубконто)
	ВводСубконто(ВыбВидСубконто, ВыбСубконто, 0, 1, ОтборСубконто);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриДобавленииСубконто(ВыбВидСубконто, ВыбСубконто, ОтборСубконто)
	ВводСубконто(ВыбВидСубконто, ВыбСубконто, 1, 1, ОтборСубконто);
КонецПроцедуры

//-----------------------------------------------
Процедура ПриУдаленииСубконто(ВыбСубконто, ОтборСубконто)
	Если (ВыбСубконто.РазмерСписка() > 0) И
		 (ВыбСубконто.ТекущаяСтрока() > 0) Тогда
		ВыбСубконто.УдалитьЗначение(ВыбСубконто.ТекущаяСтрока());
		Если (ВыбСубконто.РазмерСписка() = 0) И (ОтборСубконто.ТекущаяСтрока() = 3) Тогда
			ОтборСубконто.ТекущаяСтрока(1);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------
Процедура ПриУдаленииВсехСубконто(ВыбСубконто, ОтборСубконто)
	ВыбСубконто.УдалитьВсе();
	Если ОтборСубконто.ТекущаяСтрока() = 3 Тогда
		ОтборСубконто.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

Процедура ИзмВидСубконто(Номер, ВыбранноеСубконто)
	Форма.ПолучитьАтрибут("Субконто"+Номер).НазначитьТип(ВыбранноеСубконто);
	УстановитьДоступностьКнопокСписков();
КонецПроцедуры