// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем Таб;
Перем Обновить;
Перем Расшифровка;
Перем ПредставлениеРУ;
Перем СчетКурсовыхРазниц; 
Перем ТЗ, НомерЛиста, ДатаЛиста, ДатаПоследнегоПечЛиста, ВыведенПодвал, ТД, ТекДатаИтогов, Ит;
Перем Остаток, КоличествоПриходныхДокументов, КоличествоРасходныхДокументов, ЛистовЗаГод, ЛистовЗаМесяц;


// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
Процедура ЗаполнитьТЗ(Начало)
	ТЗ.УдалитьСтроки();

	Ит.ВыбратьВалюты();
	Пока Ит.ПолучитьВалюту() = 1 Цикл
		Если Ит.Валюта.Выбран() = 1 Тогда
			ТЗ.НоваяСтрока();
			ТЗ.Валюта = Ит.Валюта;
			Если Начало=1 Тогда
				ТЗ.Остаток = Ит.СНД("С");
				ТЗ.ВалОстаток = Ит.СНД("В");
			Иначе	
				ТЗ.Остаток = Ит.СКД("С");
				ТЗ.ВалОстаток = Ит.СКД("В");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ТЗ.НоваяСтрока();
	ТЗ.Валюта = ПолучитьПустоеЗначение("Справочник.Валюты");
	Если Начало=1 Тогда
		ТЗ.Остаток = Ит.СНД("С")-ТЗ.Итог("Остаток");
		ТЗ.ВалОстаток = Ит.СНД("В")-ТЗ.Итог("ВалОстаток");
	Иначе
		ТЗ.Остаток = Ит.СКД("С")-ТЗ.Итог("Остаток");
		ТЗ.ВалОстаток = Ит.СКД("В")-ТЗ.Итог("ВалОстаток");
	КонецЕсли;
	ТЗ.Сортировать("Валюта");
КонецПроцедуры //ЗаписатьТЗ

// ===============================
Процедура ДобавитьОбороты(ТЗ, ТекВалюта, ВалПриход, Приход, ВалРасход, Расход)
	Перем Стр;
	ТЗ.НайтиЗначение(ТекВалюта, Стр, "Валюта");
	Если Стр = 0 Тогда
		ТЗ.НоваяСтрока();
		ТЗ.Валюта = ТекВалюта;
		ТЗ.ВалОстаток = 0;
		ТЗ.Остаток = 0;
		ТЗ.ВалПриход = ВалПриход; 
		ТЗ.Приход = Приход;
		ТЗ.ВалРасход = ВалРасход;
		ТЗ.Расход = Расход;
		ТЗ.ПриходКР = 0;
		ТЗ.РасходКР = 0;
	Иначе
		ТЗ.ПолучитьСтрокуПоНомеру(Стр);
		ТЗ.ВалПриход = ТЗ.ВалПриход+ВалПриход; 
		ТЗ.Приход = ТЗ.Приход+Приход;
		ТЗ.ВалРасход = ТЗ.ВалРасход+ВалРасход;
		ТЗ.Расход = ТЗ.Расход+Расход;
	КонецЕсли;    
КонецПроцедуры

// ===============================
// Название: ЕстьКурсоваяРазница
// Параметры:           
//		ДатаПроверки
// Возвращаемое значение:
//		1 - есть курсовая разница, 0 - нет её
//
// Описание:
//		Перебирает ТЗ, пока не обнаружит, что есть курсовая разница
//
Функция ЕстьКурсоваяРазница(ДатаПроверки,ЗаДень="")
	ВалютыЗаДень = СоздатьОбъект("СписокЗначений");
	Если ПустаяСтрока(ЗаДень)=0 Тогда // Лист за день
		ТД.ВыбратьСтроки();
		Пока ТД.ПолучитьСтроку() = 1 Цикл
			Если ТД.Валюта <> Гривня Тогда
				глДобавитьЗначениеБезПовторения(ВалютыЗаДень, ТД.Валюта);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если ТЗ.Валюта.Выбран() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Курс = ТЗ.Валюта.Курс.Получить(ДатаПроверки);
		Кратность = ТЗ.Валюта.Кратность.Получить(ДатаПроверки);
		Кратность = ?(Кратность=0, 1, Кратность);
		КурсоваяРазница = Окр(ТЗ.ВалОстаток*Курс/Кратность-ТЗ.Остаток, 2, 1);
		Если КурсоваяРазница <> 0 Тогда
			Если (ПустаяСтрока(ЗаДень)=1) Или (ВалютыЗаДень.НайтиЗначение(ТЗ.Валюта) = 1) Тогда
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат 0;
КонецФункции //ЕстьКурсоваяРазница

// ===============================
// Название: ПоВалютам
// Параметры:           
//		Вид: 
//			"Ос" - остатки
//			"Об" - обороты
// Возвращаемое значение:
//      1 - нужно, 0 - нет
// Описание:
//		Проверяет, нужно ли раскрывать по валютам
//
Функция ПоВалютам(Вид)
	ТЗ.ВыбратьСтроки();
	Если Вид="Ос" Тогда
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл    
			Если ((ТЗ.Остаток <> 0) Или (ТЗ.ВалОстаток <> 0)) 
				И (ТЗ.Валюта.Выбран() = 1) Тогда
					Возврат 1;      
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Вид="Об" Тогда
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл    
			Если ((ТЗ.ВалПриход <> 0) Или (ТЗ.Приход <> 0) Или (ТЗ.ВалРасход <> 0) Или (ТЗ.Расход <> 0)) 
				И (ТЗ.Валюта.Выбран() = 1) Тогда
					Возврат 1;
			КонецЕсли;
		КонецЦикла;
	Иначе // "Ос+Об"
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл    
			Если ((ТЗ.Остаток+ТЗ.Приход-ТЗ.Расход <> 0) Или (ТЗ.ВалОстаток+ТЗ.ВалПриход-ТЗ.ВалРасход <> 0)) 
				И (ТЗ.Валюта.Выбран() = 1) Тогда
					Возврат 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат 0;
КонецФункции //ПоВалютам

// ===============================
// Название: ВыводСекции
// Параметры:           
//		Секция
//
// Описание:
//		Выводит заданную секцию
//
Процедура ВыводСекции(Секция)

	Если Секция="Шапка" Тогда
		Если Касса.Выбран() = 1 Тогда
			Если Валюта = Гривня Тогда
				НомерЛистаСтр = "Каса "+Касса+". Лист "+ НомерЛиста;
			Иначе
				НомерЛистаСтр = "Каса "+Касса;
			КонецЕсли;
		ИначеЕсли Валюта = Гривня Тогда
			НомерЛистаСтр = "По всіх гривневих касах";
		ИначеЕсли Валюта.Выбран() = 1 Тогда
			НомерЛистаСтр = "По валюті "+ Валюта;
		Иначе
			НомерЛистаСтр = "По всіх касах";
		КонецЕсли;
		Таб.ВывестиСекцию("Шапка");

	ИначеЕсли Секция="НачОстатки" Тогда
		Если ПоВалютам("Ос") = 1 Тогда
			Если Валюта.Выбран() = 0 Тогда
				Таб.ВывестиСекцию("ВТомЧисле");
			КонецЕсли;	
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл    
				ТекВалюта = ТЗ.Валюта;
				ГрнОстаток = ТЗ.Остаток;
				ВалОстаток = ТЗ.ВалОстаток;
				Если ТекВалюта.Выбран() = 0 Тогда
					Если Валюта.Выбран() = 0 Тогда
					    Таб.ВывестиСекцию("Остаток");
					КонецЕсли;
				Иначе
					Если (ГрнОстаток <> 0) Или (ВалОстаток <> 0) Тогда
						Таб.ВывестиСекцию("ВалОстаток");
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

	ИначеЕсли Секция="КонОстатки" Тогда
		Если ПоВалютам("Ос+Об") = 1 Тогда
			Если Валюта.Выбран() = 0 Тогда
				Таб.ВывестиСекцию("ВТомЧисле");
			КонецЕсли;
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл    
				ТекВалюта = ТЗ.Валюта;
				ГрнОстаток = ТЗ.Остаток+ТЗ.Приход-ТЗ.Расход+ТЗ.ПриходКР-ТЗ.РасходКР;
				ВалОстаток = ТЗ.ВалОстаток+ТЗ.ВалПриход-ТЗ.ВалРасход;
				Если ТекВалюта.Выбран() = 0 Тогда
					Если Валюта.Выбран() = 0 Тогда
					    Таб.ВывестиСекцию("Остаток");
					КонецЕсли;
				Иначе
					Если (ГрнОстаток <> 0) Или (ВалОстаток <> 0) Тогда
						Таб.ВывестиСекцию("ВалОстаток");
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

	ИначеЕсли Секция="ОборотыВал" Тогда
		Если ПоВалютам("Об") = 1 Тогда
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				ТекВалюта = ТЗ.Валюта;
				ВалПриходЗаДень = ТЗ.ВалПриход;
				ГрнПриходЗаДень = ТЗ.Приход;
				ВалРасходЗаДень = ТЗ.ВалРасход;
				ГрнРасходЗаДень = ТЗ.Расход;
				Если ТекВалюта.Выбран() = 0 Тогда
					Если Валюта.Выбран() = 0 Тогда
					    Таб.ВывестиСекцию("ОборотГрн");
					КонецЕсли;
				Иначе           
					Если (ВалПриходЗаДень <> 0) Или (ГрнПриходЗаДень <> 0) Или (ВалРасходЗаДень <> 0) Или (ГрнРасходЗаДень <> 0) Тогда
						Таб.ВывестиСекцию("ОборотВал");
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

	ИначеЕсли Секция="КурсоваяРазница" Тогда
		ПерваяСтрока = 1;
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ТекВалюта = ТЗ.Валюта;
			ПриходЗаДень = ТЗ.ПриходКР;
			РасходЗаДень = ТЗ.РасходКР;
			Если (ТекВалюта.Выбран() = 1) И ((ПриходЗаДень <> 0) Или (РасходЗаДень <> 0)) Тогда
				Если ПерваяСтрока = 1 Тогда
					Таб.ВывестиСекцию("КурсоваяРазница");
					ПерваяСтрока = 0;
				КонецЕсли;
				Таб.ВывестиСекцию("КурсоваяРазницаПоВалюте");
			КонецЕсли;
		КонецЦикла;              
	
	ИначеЕсли Секция="КурсовыеРазницы" Тогда

		ВалютыЗаДень = СоздатьОбъект("СписокЗначений");
		Если (ДатаЛиста <> КонМесяца(ДатаЛиста)) И (ДатаЛиста = ТекДатаИтогов) Тогда
			ТД.ВыбратьСтроки();
			Пока ТД.ПолучитьСтроку() = 1 Цикл
				Если ТД.Валюта <> Гривня Тогда
					глДобавитьЗначениеБезПовторения(ВалютыЗаДень, ТД.Валюта);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
			
		ПерваяСтрока = 1;
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ТекВалюта = ТЗ.Валюта;
			Если ТекВалюта.Выбран() = 0 Тогда
				Продолжить;
			КонецЕсли;
			Если (ВалютыЗаДень.НайтиЗначение(ТекВалюта) = 1) Или (ДатаЛиста = КонМесяца(ДатаЛиста)) Тогда
				Курс = ТекВалюта.Курс.Получить(ДатаЛиста);
				Кратность = ТекВалюта.Кратность.Получить(ДатаЛиста);
				Кратность = ?(Кратность=0, 1, Кратность);
				КурсоваяРазница = Окр(ТЗ.ВалОстаток*Курс/Кратность-ТЗ.Остаток, 2, 1);
				Если КурсоваяРазница <> 0 Тогда
					Если ПерваяСтрока = 1 Тогда
						Таб.ВывестиСекцию("КурсовыеРазницы");
						ПерваяСтрока = 0;
					КонецЕсли;
					Приход = Макс( КурсоваяРазница,0);
					Расход = Макс(-КурсоваяРазница,0);
					КоррСчет = СчетКурсовыхРазниц;
					ТЗ.ПриходКР = Приход;
					ТЗ.РасходКР = Расход;
					Таб.ВывестиСекцию("КурсовыеРазницыПоВалюте");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

	ИначеЕсли Секция="Строки" Тогда
		КоличествоПриходныхДокументов = 0;
		КоличествоРасходныхДокументов = 0;
		ТД.ВыбратьСтроки();
		Пока ТД.ПолучитьСтроку() = 1 Цикл
			Док = ТД.Документ;
			Если ТД.Валюта <> Гривня Тогда
				ТекВалюта = ТД.Валюта;
				Курс = ТекВалюта.Курс.Получить(Док.ДатаДок);
				Кратность = ТекВалюта.Кратность.Получить(Док.ДатаДок);
				Кратность = ?(Кратность=0,1,Кратность);
			Иначе
				ТекВалюта = ПолучитьПустоеЗначение("Справочник.Валюты");
				Курс = 1;
				Кратность = 1;
			КонецЕсли;
			
			Если Док.Вид() = "РасходныйКассовый" Тогда
	    	    НомерДок = "ВКО № "+Док.НомерРО;
				Представление = "Видано " + СокрЛП(Док.Субконто1) + " " + СокрЛП(Док.Основание) + " " + СокрЛП(Док.Субконто2) + " " + СокрЛП(Док.Субконто3);
				Если (Касса.Выбран() = 1) И (Док.РСчет <> Касса) Тогда
					// ордер по другой кассе
					Представление = "Прийнято від " + СокрЛП(Док.РСчет) + " " + СокрЛП(Док.Основание);
				ИначеЕсли (Касса.Выбран() = 0) И (Док.Счет.ВидСубконто(1) = ВидыСубконто.НашиДенежныеСчета) Тогда
					Представление = "Переміщення коштів між " + СокрЛП(Док.РСчет) + " та " + СокрЛП(Док.Субконто1);
				КонецЕсли;
						
				Если Док.Валюта <> Гривня Тогда //--- УМК Сандомирский В.Ю, (16.09.14) выводим по курсу документа
					Курс 		= Док.Курс;
					Кратность 	= Док.Кратность;
				КонецЕсли;
						
			ИначеЕсли Док.Вид() = "ПриходныйКассовый" Тогда
				НомПО = Док.НомерПО;
				НомерДок = "ПКО № " + НомПО;
				Если Док.РСчет = Касса Тогда
					Если ПустоеЗначение(НомерС) = 0 Тогда
					    Если Число(НомПО) < НомерС Тогда
					    	Продолжить;    
					    КонецЕсли;
					КонецЕсли;				
					Если ПустоеЗначение(НомерПО) = 0 Тогда
					    Если Число(НомПО) > НомерПо Тогда
					    	Продолжить;    
					    КонецЕсли;
					КонецЕсли;				    
				КонецЕсли;
				Представление = "Прийнято від " + СокрЛП(Док.ПринятоОт) + " " + СокрЛП(Док.Основание);
				Если (Касса.Выбран() = 1) И (Док.РСчет <> Касса) Тогда
					// ордер по другой кассе
					Представление = "Видано " + СокрЛП(Док.РСчет) + " " + СокрЛП(Док.Основание);
				ИначеЕсли (Касса.Выбран() = 0) И (Док.Счет.ВидСубконто(1) = ВидыСубконто.НашиДенежныеСчета) Тогда
					Представление = "Переміщення коштів між " + СокрЛП(Док.РСчет) + " та " + СокрЛП(Док.Субконто1);
				КонецЕсли;
			ИначеЕсли Док.Вид() = "УМК_КассоваяВедомость" Тогда	 //--- УМК Сандомирский В.Ю, (Для Кассовой ведомости) 14.07.14
				
				НомерДок = "Ведомость № " + Док.НомерДок;
				
				
				Представление = "Ведомость на сумму: " + Док.СуммаДокумента + " " + глПравильныйСимволПереноса 
								+ "Контрагент : " + ТД.Плательщик + " " + СокрЛП(Док.Примечание);	
				
			Иначе
				Если Константа.ПроводкиПоКассеТолькоОрдерами = Да Тогда
				    глКомментарий("Для документа " + Док + " нет ссылки на кассовый ордер!",0,,"!");
				КонецЕсли;
				НомерДок = Док.НомерДок;
				Представление = Док;
			КонецЕсли;   

			ВалРасход = ТД.Расход;
			Расход = Окр(ВалРасход*Курс/Кратность,2,1);
			КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + ?(ВалРасход=0,0,1);
			ВалПриход = ТД.Приход;
			Приход = Окр(ВалПриход*Курс/Кратность,2,1);
			КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + ?(ВалПриход=0,0,1);
			КоррСчет = ТД.КоррСчет;
			
			Если (ТД.Документ.Вид() = "РасходныйКассовый") Тогда //--- УМК Сандомирский В.Ю. (01.10.14)
				Если ТД.Документ.Валюта <> Гривня Тогда
					Расход = ТД.Документ.СуммаГрнПост;
				КонецЕсли;		
			КонецЕсли;
			
			Если (ТД.Документ.Вид() = "ПриходныйКассовый") Тогда //--- УМК Сандомирский В.Ю. (01.10.14)
				Если ТД.Документ.Валюта <> Гривня Тогда
					Приход = ТД.Документ.СуммаГрнПост;
				КонецЕсли;	
			КонецЕсли;
			
			Если ТД.Валюта <> Гривня Тогда
				Таб.ВывестиСекцию("СтрокаВал");
			Иначе

				Таб.ВывестиСекцию("Строка");
							
			КонецЕсли;
		             
			ДобавитьОбороты(ТЗ, ТекВалюта, ВалПриход, Приход, ВалРасход, Расход);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры //ВыводСекции

// ===============================
// Название: ПроверитьНомерЛистаКниги
// Параметры:           
//		Касса, Дата, Номер
//
// Описание:
//		Если номер листа кассовой книги за ДатаПр отличается от Номер, 
//		то процедура исправляет эту оплошность
//
Процедура ПроверитьНомерЛистаКниги(Касса, ДатаПр, Номер)
	Если Касса.НомерЛистаКассовойКниги.Получить(ДатаПр) <> Номер Тогда
		спрСчета = СоздатьОбъект("Справочник.НашиДенежныеСчета");
		спрСчета.НайтиЭлемент(Касса);
		Если спрСчета.Выбран() = 1 Тогда
			спрСчета.НомерЛистаКассовойКниги.Установить(ДатаПр,Номер);
			спрСчета.Записать();
			Касса = спрСчета.ТекущийЭлемент();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //ПроверитьНомерЛистаКниги

// ===============================
Процедура ВыводЛиста()  
	
	Если ВыведенПодвал = 1 Тогда
		Если Валюта = Гривня Тогда
			Если ДатаПоследнегоПечЛиста < НачМесяца(ДатаЛиста) Тогда
				Таб.ВывестиСекцию("ЛистовЗаМесяц");
				ЛистовЗаМесяц = 0;
			КонецЕсли;
			Если ДатаПоследнегоПечЛиста < НачГода(ДатаЛиста) Тогда
				Таб.ВывестиСекцию("ЛистовЗаГод");
				ЛистовЗаГод = 0;
			КонецЕсли;
		КонецЕсли;
		Таб.НоваяСтраница();
		ВыведенПодвал=0;				
	КонецЕсли;         
	
	Если Валюта = Гривня Тогда
		ЛистовЗаГод = ЛистовЗаГод+1;
		ЛистовЗаМесяц = ЛистовЗаМесяц+1;
		НомерЛиста = ЛистовЗаГод;
		ПроверитьНомерЛистаКниги(Касса, ДатаЛиста, ЛистовЗаГод);
	КонецЕсли;
	
	Остаток = ТЗ.Итог("Остаток");
	ВыводСекции("Шапка");

	ВыводСекции("НачОстатки");
	
	ВыводСекции("КурсовыеРазницы");            

	Если ДатаЛиста = ТекДатаИтогов Тогда
		ВыводСекции("Строки");
	КонецЕсли;
	
	ПриходЗаДень = ТЗ.Итог("Приход")+ТЗ.Итог("ПриходКР");
	РасходЗаДень = ТЗ.Итог("Расход")+ТЗ.Итог("РасходКР");
	Остаток = Остаток+ПриходЗаДень-РасходЗаДень;

	Таб.ВывестиСекцию("Оборот");
	ВыводСекции("ОборотыВал");			
	ВыводСекции("КурсоваяРазница");

	Таб.ВывестиСекцию("КонечныйОстаток");
	ВыводСекции("КонОстатки");

	Таб.ВывестиСекцию("Подвал");
	ВыведенПодвал = 1;
	ДатаПоследнегоПечЛиста = ДатаЛиста;
КонецПроцедуры //ВыводЛиста

// ===============================
Процедура ДобавитьДокументы(ТД, НачДата, КонДата, Счет30, Валюта)
	ТД.УдалитьСтроки();
	Опер = СоздатьОбъект("Операция");
	Если Касса.Выбран() = 1 Тогда
		Опер.ИспользоватьСубконто(ВидыСубконто.НашиДенежныеСчета,Касса);
	КонецЕсли;
	Опер.ВыбратьОперацииСПроводками(НачДата,КонДата,Счет30,,ВыбранныйПланСчетов(),Фирма);
	Пока Опер.ПолучитьПроводку() = 1 Цикл
		Если (Опер.СложнаяПроводка() = 1) И (Опер.НомерКорреспонденции() = 1) Тогда
			// в сложной проводке опускаем главную корреспонденцию
			Продолжить;
		КонецЕсли;
		Док = Опер.Документ;
		ТД.НоваяСтрока();
		ТД.Документ = Док;
		Если Опер.Валюта.Выбран() = 0 Тогда
			ТД.Валюта = Гривня;
			Если Сред(Опер.Дебет.Счет,1,2) = "30" Тогда
				Если (Касса.Выбран() = 0) Или (Опер.Дебет.НашиДенежныеСчета = Касса) Тогда
					
					//--- УМК Сандомирский В.Ю. (14.07.14) для Приходных ведомостей
					Если Док.Вид() = "УМК_КассоваяВедомость" Тогда
						ТД.Плательщик = Опер.Кредит.Контрагенты;
					КонецЕсли;					
					//... УМК Сандомирский В.Ю. (14.07.14)
					
					
					ТД.Приход = Опер.Сумма;
					ТД.КоррСчет = Опер.Кредит.Счет;
				КонецЕсли;
			КонецЕсли;
			Если Сред(Опер.Кредит.Счет,1,2) = "30" Тогда
				Если (Касса.Выбран() = 0) Или (Опер.Кредит.НашиДенежныеСчета = Касса) Тогда
				   	ТД.Расход = Опер.Сумма;
					ТД.КоррСчет = Опер.Дебет.Счет;
					
					//--- УМК Сандомирский В.Ю. (14.07.14) для Приходных ведомостей
					Если Док.Вид() = "УМК_КассоваяВедомость" Тогда
						ТД.Плательщик = Опер.Дебет.Контрагенты;
					КонецЕсли;					
					//... УМК Сандомирский В.Ю. (14.07.14)
					
					Если Док.Вид() = "РасходныйКассовый" Тогда
						Если ПустоеЗначение(Док.ДокументОснование) = 0 Тогда
							Если Док.ДокументОснование.Вид() = "НачислениеБонуса" Тогда
								ТД.Приход = -ТД.Расход;
								ТД.Расход = 0;								
							КонецЕсли;
						КонецЕсли;					    
					КонецЕсли;					
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если Опер.ВалСумма = 0 Тогда
				// проводки по переоценке пропускаем
				СчетКурсовыхРазниц = ?(Сред(Опер.Дебет.Счет,1,2) = "30", Опер.Кредит.Счет, Опер.Дебет.Счет);
				ТД.УдалитьСтроку();
				Продолжить;
			КонецЕсли;
			ТД.Валюта = Опер.Валюта;
			Если Сред(Опер.Дебет.Счет,1,2) = "30" Тогда
				Если (Касса.Выбран() = 0) Или (Опер.Дебет.НашиДенежныеСчета = Касса) Тогда
				    ТД.Приход = Опер.ВалСумма;
					ТД.КоррСчет = Опер.Кредит.Счет;
				КонецЕсли;
			КонецЕсли;
			Если Сред(Опер.Кредит.Счет,1,2) = "30" Тогда
				Если (Касса.Выбран() = 0) Или (Опер.Кредит.НашиДенежныеСчета = Касса) Тогда
					ТД.Расход = Опер.ВалСумма;
					ТД.КоррСчет = Опер.Дебет.Счет;
					Если Док.Вид() = "РасходныйКассовый" Тогда
						Если ПустоеЗначение(Док.ДокументОснование) = 0 Тогда
							Если Док.ДокументОснование.Вид() = "НачислениеБонуса" Тогда
								ТД.Приход = -ТД.Расход;
								ТД.Расход = 0;								
							КонецЕсли;
						КонецЕсли;					    
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
Функция УстДоступность()
	фНаЗарплату = ?(НачДата = КонДата, 1, 0);
	Если фНаЗарплату = 0 Тогда
		НаЗарплату = 0;
	КонецЕсли;
	Форма.тНаЗарплату.Доступность(фНаЗарплату);
	Форма.НаЗарплату.Доступность(фНаЗарплату);
	
	Если (Валюта = Гривня) и (ПустоеЗначение(Касса) = 0) Тогда
		фЛисты = 1;
	Иначе
		фЛисты = 0;
		ПоследнийЛист = 1;
	КонецЕсли;
	
	Форма.ПересчитатьНомера.Видимость(фЛисты);
	Форма.ПоследнийЛист.Доступность(фЛисты);
	Форма.ПоследнийВМесяце.Доступность(фЛисты);
	Форма.ПоследнийВГоду.Доступность(фЛисты);
	Возврат "";
КонецФункции
              
// ======================================
Процедура ИзмВалюта()
	Если ПустоеЗначение(Касса)=1 Тогда
	    Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Касса = 0;
		Возврат
	КонецЕсли;
	Если Касса.Валюта <> Валюта Тогда
		Касса = глПолучитьКассу(Фирма,Валюта);
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ИзмКасса()
	Если ПустоеЗначение(Касса) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Если Касса.ДоступЗаказ = 0 Тогда
			Предупреждение("По этой кассе вы не можете выписывать документы");
			Касса = "";
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	//Если (НазваниеНабораПрав() = "ПроизводствоКасса") ИЛИ (НазваниеНабораПрав() = "ПроизводствоСбыт") Тогда //--- УМК Сандомирский В.Ю. (24.07.14) доступ к кассе "ПроизводствоКасса"
	Если (НазваниеНабораПрав() = "ПроизводствоСбыт") Тогда // + umk
	
		Если Касса.ДоступПроизводствоКасса = 0 Тогда
			Предупреждение("По этой кассе вы не можете выписывать документы");
			Касса = "";
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Если Касса.Владелец <> Фирма Тогда
		глКомментарий("Выбранная касса принадлежит другой фирме",0,,"!");
		Касса = 0;
		Возврат;
	КонецЕсли;
	Валюта = Касса.Валюта;
КонецПроцедуры

// ======================================
Процедура ИзмФирма()
	Если ПустоеЗначение(Фирма) = 1 Тогда
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Валюта) = 0 Тогда
		Касса = глПолучитьКассу(Фирма,Валюта);
		ИзмКасса();
	КонецЕсли;
КонецПроцедуры 

// ===============================
Процедура Сформировать()
    
	Если глПроверкаИнтервалаОтчета(НачДата,КонДата,1) = 0 Тогда
	    Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Фирма) = 1 Тогда
		Предупреждение("Не заполнен реквизит Фирма. Отчет не сформирован.");
		Возврат;
	КонецЕсли;
	глУстПропись(Гривня,"У");
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") Или (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;
    Таб.ИсходнаяТаблица("Таблица"); 
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "КассоваяКнига");
	Расшифровка.Установить("Фирма", Фирма);
	Расшифровка.Установить("НачДата", НачДата);
	Расшифровка.Установить("КонДата", КонДата);
	Расшифровка.Установить("Валюта", Валюта);
	Расшифровка.Установить("Касса", Касса);
	Расшифровка.Установить("ПересчитатьНомера", ПересчитатьНомера);
	Расшифровка.Установить("ПоследнийЛист", ПоследнийЛист);
	Таб.ВывестиСекцию("Обновить");

	НачалоГода = НачГода(НачДата);        
	
	Если (ПустоеЗначение(Касса) = 0) и (Валюта = Гривня) Тогда
		// рассчет номера начального листа
		// осуществляется по проводкам так как не все операции по кассе
		// могут оформляться приходными/расходными ордерами
		ЛистовЗаГод = 0;
		ЛистовЗаМесяц = 0;
		П = СоздатьОбъект("Периодический");
		П.ИспользоватьОбъект("НомерЛистаКассовойКниги",Касса);
		Если НачДата = НачалоГода Тогда
			Если П.НайтиЗначение(НачалоГода, 0) = 1 Тогда
				Если П.Значение > 1 Тогда
					ЛистовЗаГод = П.Значение-1;
					ЛистовЗаМесяц = П.Значение-1;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если ПересчитатьНомера = 1 Тогда
				Ит = СоздатьОбъект("БухгалтерскиеИтоги");
				Ит.ИспользоватьРазделительУчета(Фирма);
				Ит.ВыполнитьЗапрос(НачалоГода, НачДата-1, "30",,, 1, "День");
				Ит.ВыбратьПериоды();
				Пока Ит.ПолучитьПериод() = 1 Цикл
					ЛистовЗаГод = ЛистовЗаГод+1;
					Если НачМесяца(НачДата) <= Ит.НачДата Тогда
						ЛистовЗаМесяц = ЛистовЗаМесяц+1;
					КонецЕсли;                   

					ПроверитьНомерЛистаКниги(Касса, НачДата, ЛистовЗаГод);
				КонецЦикла;  
			Иначе
				Если П.НайтиЗначение(НачДата-1, -1) = 1 Тогда
					Если П.ДатаЗнач >= НачалоГода Тогда
						ЛистовЗаГод = П.Значение;
					КонецЕсли;     
					ПослЛистПрошлМесяца=0;
					Если П.НайтиЗначение(НачМесяца(НачДата)-1, -1) = 1 Тогда
						Если П.ДатаЗнач >= НачалоГода Тогда
							ПослЛистПрошлМесяца = П.Значение;
						КонецЕсли;
					КонецЕсли;
					ЛистовЗаМесяц = ЛистовЗаГод - ПослЛистПрошлМесяца;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ВключатьСубсчета(-1);
	Если Касса.Выбран() = 1 Тогда
		// по конкретной кассе
		Ит.ИспользоватьСубконто(ВидыСубконто.НашиДенежныеСчета, Касса);
		Если Валюта = Гривня Тогда
			Счет30 = СчетПоКоду("30.1");
		    Ит.ВыполнитьЗапрос(НачДата, КонДата, Счет30,,, 3, "День", "С");
		Иначе
			Счет30 = СчетПоКоду("30.2");
		    Ит.ВыполнитьЗапрос(НачДата, КонДата, Счет30,,Валюта, 3, "День", "СВ");
		КонецЕсли;
	ИначеЕсли Валюта.Выбран() = 0 Тогда
		// по всем кассам
		Счет30 = СчетПоКоду("30");
	    Ит.ВыполнитьЗапрос(НачДата, КонДата, Счет30,,, 3, "День", "СВ");
	ИначеЕсли Валюта = Гривня Тогда
		// по всем гривневым кассам
		Счет30 = СчетПоКоду("30.1");
		Ит.ВыполнитьЗапрос(НачДата, КонДата, Счет30,,, 3, "День", "С");
	Иначе
		// по всем валютным кассам с выбранной валютой
		Счет30 = СчетПоКоду("30.2");
		Ит.ВыполнитьЗапрос(НачДата, КонДата, Счет30,,Валюта, 3, "День", "СВ");
	КонецЕсли;
    
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Валюта", "Справочник.Валюты");
	ТЗ.НоваяКолонка("ВалОстаток", "Число", 15, 2);
	ТЗ.НоваяКолонка("Остаток", "Число", 15, 2);
	ТЗ.НоваяКолонка("ВалПриход", "Число", 15, 2);
	ТЗ.НоваяКолонка("Приход", "Число", 15, 2);
	ТЗ.НоваяКолонка("ВалРасход", "Число", 15, 2);
	ТЗ.НоваяКолонка("Расход", "Число", 15, 2);
	ТЗ.НоваяКолонка("ПриходКР", "Число", 15, 2);
	ТЗ.НоваяКолонка("РасходКР", "Число", 15, 2);
	
	// заполняем ТЗ начальными остатками
	ЗаполнитьТЗ(1);

	ТД = СоздатьОбъект("ТаблицаЗначений");
	ТД.НоваяКолонка("Документ","Документ");
	ТД.НоваяКолонка("КоррСчет","Счет");
	ТД.НоваяКолонка("Валюта");
	ТД.НоваяКолонка("Приход","Число",12,2);
	ТД.НоваяКолонка("Расход","Число",12,2);
	ТД.НоваяКолонка("Плательщик","Справочник.Контрагенты"); 	//--- УМК Сандомирский В.Ю. (14.07.14) аналитика по ведомости
	
	СчетКурсовыхРазниц = СчетПоКоду("84");
	
	ВыведенПодвал = 0;
	ДатаЛиста = НачМесяца(НачДата)-1; 
	ДатаПоследнегоПечЛиста = НачДата-1;

	Ит.ВыбратьПериоды();
	Пока Ит.ПолучитьПериод() <> 0 Цикл
		ДобавитьДокументы(ТД,Ит.НачДата,Ит.КонДата,Счет30,Валюта);
		ТекДатаИтогов = Ит.НачДата;
		Пока ДатаЛиста < НачМесяца(ТекДатаИтогов)-1 Цикл
			ДатаЛиста = КонМесяца(ДатаЛиста+1);
			Если ЕстьКурсоваяРазница(ДатаЛиста)=1 Тогда
				ВыводЛиста();
			КонецЕсли;
		КонецЦикла;            
	    ДатаЛиста=ТекДатаИтогов;
		ВыводЛиста();
		// заполняем ТЗ конечными остатками
		ЗаполнитьТЗ(0);
	КонецЦикла;

	Пока ДатаЛиста < НачМесяца(КонДата) Цикл
		ДатаЛиста = КонМесяца(ДатаЛиста+1);                              
		Если ЕстьКурсоваяРазница(ДатаЛиста)=1 Тогда
			ВыводЛиста();
		КонецЕсли;
	КонецЦикла;

	Если (Валюта = Гривня) И (ВыведенПодвал = 1) Тогда
		Если (ДатаПоследнегоПечЛиста < НачМесяца(КонДата+1)) Или (ПоследнийЛист <> 1) Тогда
			Таб.ВывестиСекцию("ЛистовЗаМесяц");
		КонецЕсли;
		Если (ДатаПоследнегоПечЛиста < НачГода(КонДата+1)) Или (ПоследнийЛист = 3)	Тогда
			Таб.ВывестиСекцию("ЛистовЗаГод");
		КонецЕсли;
	КонецЕсли;         

	Таб.ТолькоПросмотр(1);
	Таб.Опции(0, 0, 1, 0,"ПарамПечатиУпрКассоваяКнига","РазмОкнаУпрКассоваяКнига");
	Таб.ОбластьПечати(2);
	Таб.Показать("ПЕЧАТЬ: Касса ("+ПериодСтр(НачДата,КонДата)+", "+Фирма+")", "");

	Если Обновить = 2 Тогда
	    СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;

КонецПроцедуры


// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриОткрытии()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	Фирма = глВосстановитьЗначение(,"БазФирма");
	
	Если глФлагРасшифровки = 1 Тогда
		Обновить = глОбновить;
		РУ = глРасшифровка.Получить("Фирма");
		Если ПустоеЗначение(РУ) = 0 Тогда
			Фирма = РУ;
		КонецЕсли;
		Если Обновить <> 0 Тогда
			НачДата = глРасшифровка.Получить("НачДата");
			КонДата = глРасшифровка.Получить("КонДата");
			Валюта = глРасшифровка.Получить("Валюта");
			Касса = глРасшифровка.Получить("Касса");
			ПересчитатьНомера = глРасшифровка.Получить("ПересчитатьНомера");
			ПоследнийЛист = глРасшифровка.Получить("ПоследнийЛист");
			Таб = глТаблица;
		КонецЕсли;
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	Иначе
		Обновить = 0;
		НачДата = РабочаяДата();
		КонДата = РабочаяДата();
		Валюта = Гривня;
		Касса = глПолучитьКассу(Фирма,Валюта);
		ПоследнийЛист = 1;
	КонецЕсли;
	Если Метаданные.РазделительУчета.Выбран() = 0 Тогда
		Форма.Фирма.Видимость(0);
		Форма.тФирма.Видимость(0);
	Иначе
		Форма.Фирма.ВыполнятьФормулуТолькоПриИзменении(1);
	КонецЕсли;
	Форма.Касса.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Касса.ВыборГруппы(0);
КонецПроцедуры

