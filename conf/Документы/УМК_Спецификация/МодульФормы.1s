Перем СтараяДата;              
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем НачальнаяДатаДокумента;
Перем СпВидыУпаковкиГлобальный; 							//--- УМК Сандомирский В.Ю. (06.11.14)
Перем СпВидыУпаковкиЛокальный;  							//--- УМК Сандомирский В.Ю. (06.11.14)
Перем СпрТМЦ, СпрРазрешенныеУпаковкиТМЦ, СпрВидУпаковки;  	//--- УМК Сандомирский В.Ю. (17.11.14)
Процедура ДобавитьВСписок(Элт, Спис) Далее
Процедура ИзмТМЦ() Далее
Процедура ПересчетСтроки(НоваяЦена=0) Далее

// ===============================
Функция УстДоступность() 
	Если Кво > 0 Тогда
		Форма.Кво.Доступность(1);
		Форма.КвоШт.Доступность(0);
	ИначеЕсли КвоШт > 0 Тогда
		Форма.Кво.Доступность(0);
		Форма.КвоШт.Доступность(1);
	Иначе	
		Форма.Кво.Доступность(1);
		Форма.КвоШт.Доступность(1);
	КонецЕсли;
	Форма.ЦенаБезСкидки.Видимость(1 - ПустоеЗначение(УстановкаСкидокТМЦ));
	Форма.Разница.Видимость(1 - ПустоеЗначение(УстановкаСкидокТМЦ));

	Возврат "";
КонецФункции

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
КонецПроцедуры
                                
// =============================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда	
		Если ПустоеЗначение(Контрагент.КатегорияЦен.Получить(ДатаДок)) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
		Иначе	
			КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		КонецЕсли;      						
	КонецЕсли;
	
КонецПроцедуры

//================================Расчет Цен============================

Процедура РассчитатьЦеныСогласноСхеме()
	
	СпрЦены = СоздатьОбъект("Справочник.Цены");
	СпрЦены.ИспользоватьДату(ДатаДок);
	
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку() = 1 Цикл
		СпрЦены.ИспользоватьВладельца(ТМЦ);
		Если СпрЦены.НайтиПоРеквизиту("КатегорияЦены", ТМЦ.БазоваяКатегорияЦены.Получить(ДатаДок), 0) = 1 Тогда
			ТекБазЦена = СпрЦены.Цена;	
			Цена =  Окр(глАвтоПересчетЦены(СпрЦены,ТекБазЦена,,СхемаРЦ),2);
		Иначе
			Цена = 0;
		КонецЕсли;
		ПересчетСтроки(Цена);
	КонецЦикла;
	
	Сообщить("Перерасчет цен по схемам завершен.");	
	
КонецПроцедуры // ПерерасчитатьЦеныСогласноСхем


//======================================================================
Процедура ЗаполнитьШК()
	Если Вопрос("Заполнить штрихкоды?", "Да+Нет") = "Да" Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			КШК = "0";
			Если (ПустоеЗначение(ВидУпаковки) = 0) И (ВидУпаковки <> НетУп) Тогда				
				РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВидУпаковки);
				Если ПустоеЗначение(РВУ) = 0 Тогда
					КШК = Формат(РВУ.КодPLU, "Ч1");
				КонецЕсли;
			КонецЕсли;
			КШК = КШК + Формат(Число(ТМЦ.КодЭ), "Ч(0)3");
			
			КодДляШК = КШК;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ЗаполнитьШК

//======================================================================// + umk
Процедура ЗаполнитьСрокиГодности()

	Если Вопрос("Заполнить сроки годности?", "Да+Нет") = "Да" Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			глПолучитьСрокГодности(Контекст);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура Заполнить()	
	
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	Если ВсеКроме = 1 Тогда
		ТекстУсл = "Условие (НЕ(ТМЦ в списТовар));";
	Иначе
		ТекстУсл = "Условие (ТМЦ в списТовар);";
	КонецЕсли;		
	
	ТекстЗ = 
	"//{{ЗАПРОС(Сформировать)
	|ТМЦ = Справочник.ТМЦ.ТекущийЭлемент;
	|Функция Счётчик = Счётчик();
	|Группировка ТМЦ упорядочить по ТМЦ.Наименование;" + 	 
	ТекстУсл + "
	|"//}}ЗАПРОС
	;
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		
		Если Запрос.ТМЦ.ЭтоГруппа() = 1 Тогда  
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока();
		ТМЦ = Запрос.ТМЦ;
		ИзмТМЦ();	
		
	КонецЦикла;		
	
КонецПроцедуры

// =============================== УМК Сандомирский В.Ю. (04.11.14)
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбораЗаказ");  		//--- УМК Сандомирский В.Ю. (14.11.14)
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора");
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//=================================== // + umk
Процедура ЗаполнитьДанные() 
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&По отбору");
	Варианы.ДобавитьЗначение("&ШК");
	Варианы.ДобавитьЗначение("&Сроки годности");
	Варианы.ДобавитьЗначение("&Расчет цен по схеме РЦ");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			Заполнить();
		ИначеЕсли Результат = 2 Тогда
			ЗаполнитьШК();
		ИначеЕсли Результат = 3 Тогда
			ЗаполнитьСрокиГодности();
		ИначеЕсли Результат = 4 Тогда
			Если ПустоеЗначение(СхемаРЦ) = 1 Тогда
				Сообщить("Не заполнена схема ценообразования.");
				Возврат;
			КонецЕсли;
			РассчитатьЦеныСогласноСхеме();
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// =============================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ИзмКво()	
	Если (ПустоеЗначение(ВидУпаковки) = 1) ИЛИ (ВидУпаковки = НетУп)  Тогда //--- УМК Сандомирский В.Ю. (02.07.15)
		КвоПересчет = Кво + 	КвоШт * ТМЦ.Вес;
	Иначе	
		РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТМЦ,ВидУпаковки);
		Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
			КвоПересчет = Кво + 	КвоШт * РазрешенныйВидУпаковкиТМЦ.ВесУпаковки.Получить(ДатаДок);	
		КонецЕсли;		
	КонецЕсли;
	
	глВыч_Суммы_Накл(Контекст);
КонецПроцедуры

// =============================== УМК Сандомирский В.Ю. (25.11.14)
Процедура ИзмКвоШт()	
	Если (ПустоеЗначение(ВидУпаковки) = 1) ИЛИ (ВидУпаковки = НетУп)  Тогда //--- УМК Сандомирский В.Ю. (02.07.15)
		КвоПересчет = Кво + 	КвоШт * ТМЦ.Вес;
	Иначе	
		РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТМЦ,ВидУпаковки);
		Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
			КвоПересчет = Кво + 	КвоШт * РазрешенныйВидУпаковкиТМЦ.ВесУпаковки.Получить(ДатаДок);	
		КонецЕсли;		
	КонецЕсли;
	
	глВыч_Суммы_Накл(Контекст);
КонецПроцедуры

// =============================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	Перем ТипЗнач;
	
	ТипЗнач=ТипЗначенияСтр(Выб);
	
	Если ТипЗнач="Справочник" Тогда
		ДобавитьвСписок(Выб, списТовар);
	Иначе
		глПриОбработкеПодбораЗаказа(Выб,Контекст);
	КонецЕсли;

КонецПроцедуры //Обработка подбора

// =============================== УМК Сандомирский В.Ю. (04.11.14)
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = ТМЦ.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;  
	
КонецПроцедуры //ПересчетСтроки

// =============================== УМК Сандомирский В.Ю. (04.11.14) (13.02.15) пересчет цен при изменении какого либо реквизита шапкки (ДатаДок, Контрагент, ТипЦен)
// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
Процедура ИзмРеквизитШапки(Реквизит, ИмяРекв = "")           	
	Если (Реквизит = "Контрагент") ИЛИ (Реквизит = "ДатаДок") Тогда //--- УМК Сандомирский В.Ю. (13.02.15) 
		ИзмКонтрагент();
		//УстановкаСкидокТМЦ = глПолучитьДокументУстановкиСкидок(ДатаДок, Контрагент);
	КонецЕсли;
	
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	
	//текОтвет = Вопрос("В документе изменен реквизит """+?(ИмяРекв = "", Реквизит, ИмяРекв)+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глПриИзмененииТовара(Контекст, 1);
	КонецЦикла;
	
КонецПроцедуры 
          
//====================================================================== УМК Сандомирский В.Ю. (18.11.14)
Процедура СортироватьТабличнуюЧасть()	
	Тз_Сортировка = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(Тз_Сортировка);
	Тз_Сортировка.НоваяКолонка("ГруппаТМЦ");
	Тз_Сортировка.НоваяКолонка("ТМЦНаименование");
	Тз_Сортировка.ВыбратьСтроки();
	Пока Тз_Сортировка.ПолучитьСтроку() = 1 Цикл
		Тз_Сортировка.ГруппаТМЦ 		= Тз_Сортировка.ТМЦ.Родитель.Наименование;
		Тз_Сортировка.ТМЦНаименование 	= Тз_Сортировка.ТМЦ.Наименование;
		Если ПустоеЗначение(Тз_Сортировка.ВидУпаковки) = 1 Тогда
			Тз_Сортировка.ВидУпаковки = НетУп;
		КонецЕсли;
	КонецЦикла;
	
	Тз_Сортировка.Сортировать("ГруппаТМЦ+,ТМЦ+,ВидУпаковки-");  //--- УМК Сандомирский В.Ю. (08.11.14)	
	УдалитьСтроки();	
	ЗагрузитьТабличнуюЧасть(Тз_Сортировка);	
КонецПроцедуры // СортироватьТабличнуюЧасть

// ===============================
Процедура Печать(БыстраяПечать=0, Акция) 
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Спецификация" + Акция);
	Таб.ВывестиСекцию("Шапка");
	СпрКО = СоздатьОбъект("Справочник.ВидыКатегорий");
	СпрКО.НайтиПоНаименованию("Нормативная документация");
	СпрК = СоздатьОбъект("Справочник.КатегорииТоваров");
	НомерДоговора = "";
	ДатаДоговора = "";
	Если (ПустоеЗначение(Договор) = 0) И (Договор.Вид() = "Договор") Тогда
		НомерДоговора = Договор.НомерДоговора;
		ДатаДоговора = Строка(Договор.ДатаНачала);
	КонецЕсли;
	
	СпрВВ = СоздатьОбъект("Справочник.ВидыВесов");
	СпрВВ.НайтиПоНаименованию("Дибал");
	
	СпрЭ = СоздатьОбъект("Справочник.Этикетки");	
	
	Ном = 1;	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл	
		КлассификаторУКТВЭД = ТМЦ.КлассификаторУКТВЭД.Получить(ДатаДок);
		Стандарт = "";
		Если Акция = "Ун" Тогда
			СпрЭ.ИспользоватьВладельца(ТМЦ);
			СпрЭ.ВыбратьЭлементыПоРеквизиту("ВидВесов", СпрВВ.ТекущийЭлемент(), 1, 0);
			Пока СпрЭ.ПолучитьЭлемент() = 1 Цикл
				Если СпрЭ.ПометкаУдаления() = 0 Тогда
					Текст = СоздатьОбъект("Текст");
					Текст.ДобавитьСтроку(СпрЭ.УсловияХранения);
					Стандарт = Текст.ПолучитьСтроку(1);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВУ = глПолучитьВУ(ТМЦ,ВидУпаковки, ДатаДок);
		РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ,ВидУпаковки);
		Если ПустоеЗначение(РВУ) = 0 Тогда
			Ширина = РВУ.Ширина;
			Высота = РВУ.Высота;
			Глубина = РВУ.Глубина;
			ВесУпаковки = РВУ.ВесУпаковки.Получить(ДатаДок);
			ВесУпаковкиНетто = РВУ.ВесУпаковкиНетто.Получить(ДатаДок);
		КонецЕсли;
		НаименованиеТМЦ = СокрЛП(ТМЦ.Наименование) + ВУ;
		НаимФ1 = ТМЦ.НаименованиеФ1.Получить(ДатаДок);
		НаименованиеТМЦПолное = СокрЛП(?(ПустоеЗначение(НаимФ1) = 0, НаименованиеФ1, ТМЦ.ПолнНаименование)) + ВУ;
		ТорговаяМарка = ?(ПустоеЗначение(ТМЦ.ТорговаяМарка)=1,"УМК",ТМЦ.ТорговаяМарка);
		//Если Акция = "Ун" Тогда
		//	СпрК.ИспользоватьВладельца(ТМЦ);
		//	СпрК.ВыбратьЭлементы();
		//	Пока СпрК.ПолучитьЭлемент() = 1 Цикл
		//		Если СпрК.ПометкаУдаления() = 0 Тогда
		//			Если СпрК.Категория.ПринадлежитГруппе(СпрКО.ТекущийЭлемент()) = 1 Тогда
		//				Стандарт = Строка(СпрК.Категория);
		//			КонецЕсли;
		//		КонецЕсли;
		//	КонецЦикла;
		//КонецЕсли;
		Таб.ВывестиСекцию("Строка");
		Ном = Ном + 1;
	КонецЦикла;
	
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Спецификация");
КонецПроцедуры

// ===============================
Процедура ПриОткрытии() 
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);

//	Форма.ДатаДок.ВыполнятьФормулуТолькоПриИзменении(1);
	
	СтараяДата 		 = ДатаДок;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	
	//--- Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (06.11.14)
	СпВидыУпаковкиГлобальный = глПолучитьСписокУпаковкиГлобальный();
	//... Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (06.11.14)	
	
	СписФ = СоздатьОбъект("СписокЗначений");
    СписФ.ИзСтрокиСРазделителями(СокрЛП(СтрФильтр));
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	
	Для Инд = 1 По СписФ.РазмерСписка() Цикл
		Если СпрТМЦ.НайтиПоКоду(СписФ.ПолучитьЗначение(Инд), 0) = 1 Тогда
		    списТовар.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
		КонецЕсли;		
	КонецЦикла;	
	
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ);
	
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	Автор = глПользователь;
	
	СортироватьТабличнуюЧасть();
	ЕстьУСН = 1 + ПустоеЗначение(УстановкаСкидокТМЦ);
	
	//Список отбор
	СписФ = СоздатьОбъект("СписокЗначений");
	
	Для Инд = 1 По списТовар.РазмерСписка() Цикл
		СписФ.ДобавитьЗначение(списТовар.ПолучитьЗначение(Инд).Код);
	КонецЦикла;	

	СтрФильтр = СписФ.ВСтрокуСРазделителями();	
	
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если (Рекв = "ВидУпаковки") Тогда //--- УМК Сандомирский В.Ю, (06.11.14) 	
		глВыбратьВидУпаковки(Контекст, ФлагСтандОбр, СпВидыУпаковкиГлобальный, 1);
	КонецЕсли;	
КонецПроцедуры

//=========================Работа со списком отбора=====================
Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ТекСпис = "списТовар";
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВСписок(Элт, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (03.11.14)
Процедура ИзмТМЦ()
	глПриИзмененииТовара(Контекст, 1);
	
	Если ТМЦ.НетБезУпаковки = 1 Тогда // --- УМК Сандомирский В.Ю. (11.06.15)
		ВидУпаковки = ТМЦ.ВидУпаковкиПоУмолчанию;
	КонецЕсли;
	глПолучитьСрокГодности(Контекст);	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (25.11.14)
Процедура ИзмВидУпаковки()
	глПриИзмененииТовара(Контекст, 1);	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (03.11.14)
Функция ИтКол()	
	Возврат "Итог кг :" + (Итог("КвоПересчет")) + "    Итог сумма:" + Итог("СуммаБезНДС") + "   Итог С НДС : " + Итог("СуммаСНДС");	
КонецФункции // ИтКол()

//====================================================================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ЗаполнитьПоУмолчанию()	
	глУстановитьФирму(Контекст);
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад",Константа.ОсновнойСклад);  
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
	Ф1 = 1;
	ИзмКонтрагент();	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ВводНового(ПризнакКопирования)
	Распечатана = 0;
	ЗаголВыводитьКомпенсация = 2;
	Если ПризнакКопирования = 1 Тогда  
		фРаспечатан = 0; //--- УМК Сандомирский В.Ю. (28.12.14)
		Распечатана = 0; //--- УМК Сандомирский В.Ю. (28.12.14)
		глУстановитьНомер(Контекст);	
		//Обновим сроки годности
		ЗаполнитьСрокиГодности();
		Возврат;
	КонецЕсли;
	ЗаполнитьПоУмолчанию();	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (17.11.14) 
Процедура СоздатьНовуюСтроку(ТекТМЦ,ТекКоментСтроки="",ТекКг,ТекШт,ТекУпаковка = "") //--- ТекТМЦ = Код ТМЦ, ТекУпаковка = Код ВидУпаковки 
КонецПроцедуры // СоздатьНовуюСтроку()

//====================================================================== //--- УМК Сандомирский В.Ю. (17.11.14)
Функция ПолучитьДробноеЧисло(ТекСтрока) //--- преобразует точки лили запятые к нормальному формату
	ТекСтрока = Число(СокрЛП(СтрЗаменить(ТекСтрока,",",".")));
	Возврат ТекСтрока;
КонецФункции // 

//====================================================================== //--- УМК Сандомирский В.Ю. (17.11.14)
Функция ПроверкаНеЦифр(ТекСтрока,ТекФормат)
	
	ВсеНеХорошо = 0;
	
//	Если ТекФормат = "Основной" Тогда //--- Если вдруг дата
//		
//	ИначеЕсли ТекФормат = "@" Тогда
//
//	Иначе		
//		ВсеНеХорошо = 1;
//		Возврат ВсеНеХорошо;	
//	КонецЕсли;
	
	ТекСтрока = СокрЛП(СтрЗаменить(ТекСтрока,",","."));  //--- УМК Сандомирский В.Ю. (15.11.14)
	Если СтрДлина(ТекСтрока) > 0 Тогда
		Если Число(ТекСтрока) = 0 Тогда
			ВсеНеХорошо = 1;
		КонецЕсли;	
	КонецЕсли;
	
	Возврат ВсеНеХорошо;
	
КонецФункции // ПроверкаНеЦифр(Килограммы)ПроверкаНеЦифр(Килограммы)

//====================================================================== УМК Сандомирский В.Ю. (10.11.14)
Функция ПолучитьЦвет(Красный = 0,Зеленый = 0,Синий = 0)
    Возврат Макс(0,Синий)*65536+Макс(0,Зеленый)*256+Макс(0,Красный);
КонецФункции

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

//======================================================================//--- УМК Сандомирский В.Ю. (09.04.15)
Процедура ПриВводеСтроки()	
	Если (НазваниеНабораПрав() = "Технолог") Тогда 
		СтатусВозврата(0);
		Возврат;	
	КонецЕсли;	
КонецПроцедуры

//======================================================================//--- УМК Сандомирский В.Ю. (09.04.15)
Процедура ПриУдаленииСтроки()
	Если (НазваниеНабораПрав() = "Технолог") Тогда 
		СтатусВозврата(0);
		Возврат;	
	КонецЕсли;	
КонецПроцедуры

Процедура ДобавитьТовар(Тов, ВидУп, КвоТовара);
	НоваяСтрока();
	ТМЦ = Тов;
	ВидУпаковки = ВидУп;
	Количество = КвоТовара;
	ИзмВидУпаковки();
КонецПроцедуры

Процедура ЗаполнитьПоФильтру()	
	НеВыгружатьВЗаказник = 1;
	Варианты = СоздатьОбъект("СписокЗначений");
	Варианты.ДобавитьЗначение(1,"&Без флага ""Не Выгружать в заказник"" ");
	Варианты.ДобавитьЗначение(0,"Все");
	
	Если Варианты.ВыбратьЗначение(НеВыгружатьВЗаказник,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;
	
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТекИмяФильтра = "выбрать";
	ОткрытьФормуМодально("Обработка.УМК_НастройкаФильтраТоваровДляЗаказа", ТекИмяФильтра);
	фСорт = 0;
	СписокВыбТМЦ = глПрочитатьФильтр("" + КаталогИБ() + "filter_set" + ТекИмяФильтра + "1.txt", фСорт);	
	СписокВыбТМЦИсключение = глПрочитатьФильтр("" + КаталогИБ() + "filter_set" + ТекИмяФильтра + "2.txt");
	
	СпрУМК_РазрешенныеВидыУпаковкиТМЦ = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
    
	ТекстЗапроса = "";
	Запрос = глПолучитьЗапросПоТоварамДляЗаказа(СписокВыбТМЦ, СписокВыбТМЦИсключение, ТекстЗапроса);
    ДатаЗаказа = ДатаДок;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		Если Запрос.ЭтоГруппа("Товар") = 0 Тогда
			Если Запрос.Товар.НеВыгружатьВЗаказник + НеВыгружатьВЗаказник = 2 Тогда
				Продолжить;
			КонецЕсли;
			Если Запрос.Товар.НетБезУпаковки = 0 Тогда
				ДобавитьТовар(Запрос.Товар, НетУп, 1);
			КонецЕсли;
			СпрУМК_РазрешенныеВидыУпаковкиТМЦ.ИспользоватьВладельца(Запрос.Товар.ТекущийЭлемент());
			СпрУМК_РазрешенныеВидыУпаковкиТМЦ.ВыбратьЭлементы();
			Пока СпрУМК_РазрешенныеВидыУпаковкиТМЦ.ПолучитьЭлемент() = 1 Цикл				
				Если (СпрУМК_РазрешенныеВидыУпаковкиТМЦ.ПометкаУдаления() = 1) ИЛИ ((СпрУМК_РазрешенныеВидыУпаковкиТМЦ.НеВыгружатьВЗаказник = 1) И (НеВыгружатьВЗаказник = 1)) Тогда // --- УМК Сандомирский В.Ю, (06.04.15) 
					Продолжить;
				КонецЕсли;
				
				ДобавитьТовар(Запрос.Товар, СпрУМК_РазрешенныеВидыУпаковкиТМЦ.ВидУпаковки, 1);
			КонецЦикла;			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//======================================================================
Процедура ОткрытьОбработкуЗаказов()
	Если Модифицированность() = 1 Тогда
		Предупреждение("Сохраните документ вначале");
		Возврат;		
	КонецЕсли;
	
	ОткрытьФорму("Обработка.УМК_ЗаказыКлиентов", ТекущийДокумент());
КонецПроцедуры 

// ===============================
Процедура ИзмФ1()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глВыч_Суммы_Накл(Контекст,1);
	КонецЦикла;
КонецПроцедуры

//======================================================================
Функция Разница()
	Возврат ЦенаБезСкидки - ЦенаСНДС;
КонецФункции // Разница

// =============================== // --- УМК Сандомирский В.Ю, (25.03.15)
Процедура Экспор()	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Экспорт");
	
	ПечВидДок = "СП-";
	 
	Таб.ВывестиСекцию("Шапка");
	
	ЕстьОшибки = 0;
	
	ТекстПисьма = ""; //--- УМК Сандомирский В.Ю. (02.03.15)  текст письма
	
	БылиОшибкиНоВыгрузилиВсеравно = 0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ПечДляПечати = глПолучитьДляПечатиУпаковки(ТМЦ,ВидУпаковки, ДатаДок);
		Род = глВернутьВерхнегоРодителя(ВидУпаковки);
		Если (ПустоеЗначение(ВидУпаковки) = 1) ИЛИ (ВидУпаковки = НетУп) Тогда
			КодPLU = 0;
			СрокГодности = ТМЦ.СрокГодности;
			ЕдиницаИзмерения = ТМЦ.ЕдиницаИзмерения.Идентификатор();
		Иначе
			РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВидУпаковки);
			Если ПустоеЗначение(РВУ) = 0 Тогда
				КодPLU = РВУ.КодPLU;
				СрокГодности = РВУ.СрокГодности;
			Иначе
				КодPLU = "";
				СрокГодности = "";
				Сообщить("Не удалось получить разрешенный вид упаковки для вида упаковки: " + Строка(ВидУпаковки) + " для ТМЦ: "  + Строка(ТМЦ) + " в строке: " + НомерСтроки);					
			КонецЕсли;
		КонецЕсли;
		Таб.ВывестиСекцию("Строка");			
	КонецЦикла;
	
	ИмяКонтрагента = СтрЗаменить(Строка(Контрагент), ",", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, ".", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, """", "");
	
	ИмяФайла = СокрЛП(Константа.ПутьЭкспортаРН) + ПечВидДок + СокрЛП(НомерДок) + "_" + 
		СтрЗаменить(Строка(ДатаДок), ".", "") + "_" + ИмяКонтрагента + ".mxl";
	Таб.Записать(ИмяФайла);
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
		Сообщить("Экспорт выполнен успешно");		
		
		Выгружена = 1;        
	Иначе
		Сообщить("Экспорт не удался");
		Выгружена = 0;
		Возврат;				//--- УМК Сандомирский В.Ю. (02.03.15) лишний раз ничего не делаем потому что экспорт неудался
	КонецЕсли;	
КонецПроцедуры // 

//======================================================================
Функция НаименованиеФ1()
	Если ПустоеЗначение(ТМЦ) = 0 Тогда
		Возврат ТМЦ.НаименованиеФ1.Получить(ДатаДок);
	КонецЕсли;
КонецФункции // НаименованиеФ1()

// =============================== УМК Сандомирский В.Ю. (04.11.14)
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");