Перем ВидТМЦ, СчетДоходов;

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;  
	глПроверкаДатыДок(Контекст,"Проведение");	
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(МестоХранения,"Место хранения");		
	глВыбранЛи(Валюта,"Валюта");
	глВыбранЛи(ЭККА,"ЭККА");
	глВыбранЛи(Касса,"Касса");  
	глВыбранЛи(ВидНДС,"Вид НДС");
    глВыбранЛи(СубконтоВалДох,"Субконто валовых доходов");
  	глВсеВыбрано = ?(глВсеВыбрано = 0, 0, глПроверкаДублейСтрок(Контекст));
	Возврат глВсеВыбрано;
КонецФункции
                  
// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
	глВыбранЛи(Ед,"Единица",НомерСтроки);
	Если МестоХранения.СуммовойУчет <> 1 Тогда
		глВыбранЛи(Кво,"Количество",НомерСтроки);
	КонецЕсли;	
	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
	ЕстьКалькулируемыеУслуги = 0;
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		Если глПолучитьНормы(ТМЦ,,1,ДатаДок,,,1)=1 Тогда // калькулируемая услуга
			ЕстьКалькулируемыеУслуги = 1;
		    глВыбранЛи(ТМЦ.ВидДеятельности,"Вид деятельности в карточке ТМЦ",НомерСтроки);  
			Если глВсеВыбрано = 1 Тогда
				Если ТМЦ.ВидДеятельности.ПозаказноеПроизводство = Да Тогда                                        
					глКомментарий("В строке "+НомерСтроки+" выбрана услуга в карточке которой указан вид деятельности с позаказным производством!",0,,"!");
					глВсеВыбрано = 0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ЕстьКалькулируемыеУслуги = 1 Тогда
		глВыбранЛи(ПодразделениеПроизв,"Подразделение производства");
		глПроверитьТипПодразделения(ПодразделениеПроизв,"подразделения производства");
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции

// Формирует проводки на основании движений по регистру Партии и Обороты.
// Используются не суммы из движений, а те же суммы которые используются 
// для формирования движений по регистрам.
// ОстатокТовара - количество ТМЦ, которое надо списать
// Стоимость - себестоимость ТМЦ, которую надо списать
// ПродСтоимость - розничная наценка на ТМЦ, которую надо списать
// Донаценка - разница между себестоимостью+розничной наценкой и ценой продажи
// НДС - НДС ТМЦ
// СписываемаяПартия - партия, которую надо списать
// СчетУчета - счет учета ТМЦ
// СчетНаценки - счет учета розничной наценки
// ===============================
Процедура ПроводкиТовар(ОстатокТовара, Стоимость, ПродСтоимость,Донаценка,СписываемаяПартия,СчетУчета,СчетНаценки)
	Если ПустоеЗначение(СчетНаценки) = 0 Тогда
		// спишем наценку
		глПроводка(Контекст,СчетНаценки,СчетУчета,ПродСтоимость-Стоимость+Донаценка,"Розн.продажа: Наценка+НДС",,
		МестоХранения,ТМЦ,СписываемаяПартия,МестоХранения,ТМЦ,СписываемаяПартия,,,"РЗ",1,0);
		// дооценим
		глПроводка(Контекст,СчетУчета,СчетНаценки,Донаценка,"Розн.продажа: Донаценка",,
		МестоХранения,ТМЦ,СписываемаяПартия,МестоХранения,ТМЦ,СписываемаяПартия,,,"РЗ",1,0);
	КонецЕсли;
	СчРеал = глСчетРеализации(ТМЦ,1);
	// для склада с суммовым учетом реализацию покажет док. ОпределениеТорговойНаценки
	Если МестоХранения.СуммовойУчет <> 1 Тогда
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			// услуг
			глПроводка(Контекст,СчРеал,СчетУчета,Стоимость,"Роз.продажа: себестоимость услуги",ОстатокТовара, ТМЦ.ВидДеятельности,ПодразделениеПроизв,,
			ТМЦ.ВидДеятельности,ПодразделениеПроизв,, ,,"РЗ",1,0);  
		Иначе	    
			// обычных ТМЦ
			глПроводка(Контекст,СчРеал,СчетУчета,Стоимость,"Роз.продажа: себестоимость",ОстатокТовара, ТМЦ.ВидДеятельности,Подразделение,,
			МестоХранения,ТМЦ,СписываемаяПартия, ,,"РЗ",1,0);  
		КонецЕсли;	
	КонецЕсли;	
	Если Константа.ПроводкиПоКассеТолькоОрдерами <> Да Тогда
		// первая часть сложной проводки по доходам
		глПроводка(Контекст,"301",СчетДоходов,ПродСтоимость+Донаценка,"Реализация: "+ВидТМЦ,, Касса,,,
		ТМЦ.ВидДеятельности,Подразделение,МестоХранения, ,,"РЗ",1,0);
	КонецЕсли;	
КонецПроцедуры

// Наименование: СформироватьДвиженияПартии
// Назначение: рассчитать необходимеы параметры и сформировать движения по регистрам 
// Партии и Обороты. Сформировать проводки.
//		В процессе обработки в процедуре изменятся следующие пареметры:
//															ОсталосьСписать											
//															ОсталосьСуммаСНДСПоСтроке											
//															ОсталосьСуммаБезНДСПоСтроке											
// Параметры: 
// 			тбОстатки - таблица остатков, при списании кол-ва большего, чем есть на складе, этот параметр пустой
//			тбПартии - таблица партий, при списании кол-ва большего, чем есть на складе, этот параметр пустой
//			ОсталосьСписать - количество ТМЦ, которое необходимо списать
// 			ВсегоСписатьПоСтроке - количество ТМЦ, указанное в строке документа в базовых единица
//			ВсегоСуммаСНДСПоСтроке - сумма с НДС указанная в строке документа, пересчитанная по курсу документа в гривни
//			ВсегоСуммаБезНДСПоСтроке - сумма без НДС указанная в строке документа, пересчитанная по курсу документа в гривни
// 			ОсталосьСуммаСНДСПоСтроке - сумма с НДС, которую необходимо списать
//			ОсталосьСуммаБезНДСПоСтроке - сумма без НДС, которую необходимо списать
//			ПоставщикП - поставщик, для проведения по регистрам
//			ПоставкаП - документ поставки, для проведения по регистрам
//			ПрихДокументП - приходный документ, для проведения по регситрам
// ===============================
Процедура СформироватьДвиженияПартии(тбОстатки,тбПартии,ОсталосьСписать,ВсегоСписатьПоСтроке,ВсегоСуммаСНДСПоСтроке,
	ВсегоСуммаБезНДСПоСтроке,ОсталосьСуммаСНДСПоСтроке,ОсталосьСуммаБезНДСПоСтроке,ПоставщикП,ПоставкаП,ПрихДокументП)
	
	Если ПустоеЗначение(тбОстатки) = 1 Тогда
		ОстатокТовараПоПартии = 0;
		// если надо списать больше чем есть на складе
		СписываемыйОстатокТовара = ОсталосьСписать;	
		СписываемаяСтоимость = ВсегоСуммаБезНДСПоСтроке;
		СписываемаяПродСтоимость = 0;
		СписываемыйНДС = ОсталосьСуммаСНДСПоСтроке - ОсталосьСуммаБезНДСПоСтроке;
		// определим сумму реализации текущей списываемой партии
		СуммаРеализацииБезНДС = ОсталосьСуммаБезНДСПоСтроке;
		СуммаРеализацииСНДС = СуммаРеализацииБезНДС + СписываемыйНДС;
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
			СчетП = ГлПолучитьСчетУчетаТМЦ("ТараВозвратная",ТМЦ);
		Иначе
			Если МестоХранения.ВидСклада <> Перечисление.ВидыСкладов.Розничный Тогда
				СчетП = ТМЦ.Счет;
			ИначеЕсли ((ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) 
			ИЛИ (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)) Тогда 
				СчетП = СчетПоКоду("2822");
			Иначе
				СчетП = СчетПоКоду("2821");
			КонецЕсли;	
		КонецЕсли;
	Иначе	                     
		ОстатокТовараПоПартии = тбОстатки.ОстатокТовара;
		// нормальное списание
		СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовараПоПартии);
		Если МестоХранения.СуммовойУчет = 1 Тогда
			// для склада с суммовым учетом списывем все что указано в документе
			СписываемаяПродСтоимость = ОсталосьСуммаСНДСПоСтроке;
		Иначе
			КоэфСписания = СписываемыйОстатокТовара / ОстатокТовараПоПартии;
			КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписатьПоСтроке;
			// определим себестоимость текущей списываемой партии
			СписываемаяСтоимость = Окр(тбОстатки.Стоимость * КоэфСписания, 2);
			СписываемаяПродСтоимость = Окр(тбОстатки.ПродСтоимость * КоэфСписания, 2);
		КонецЕсли;
		Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
			// определим сумму реализации текущей списываемой партии
			// если списывается вся сумма указаная в строке документа
			СуммаРеализацииСНДС = ОсталосьСуммаСНДСПоСтроке;
			СуммаРеализацииБезНДС = ОсталосьСуммаБезНДСПоСтроке;
		Иначе                                                
			// определим сумму реализации текущей списываемой партии
			// если списывется часть суммы указаной в строке документа 
			СуммаРеализацииСНДС = Окр(ВсегоСуммаСНДСПоСтроке * КоэфРеализации,2);
			СуммаРеализацииБезНДС = Окр(ВсегоСуммаБезНДСПоСтроке * КоэфРеализации,2);
		КонецЕсли;
		СчетП = тбПартии.Счет;
	КонецЕсли;
	// доход от продажи 
	Доход = СуммаРеализацииБезНДС - СписываемаяСтоимость;
	// осталось списать по суммам
	ОсталосьСуммаБезНДСПоСтроке = ОсталосьСуммаБезНДСПоСтроке - СуммаРеализацииБезНДС;
	ОсталосьСуммаСНДСПоСтроке = ОсталосьСуммаСНДСПоСтроке - СуммаРеализацииСНДС;
	КодОперации = ?(МестоХранения.ВидСклада=Перечисление.ВидыСкладов.Розничный,РозничнаяПродажа,Продажа);
	МестоХраненияП = ?(глПартионныйУчетПоСкладам = Да,МестоХранения,0);
	глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП,
		ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
		КодОперации, 1, СуммаРеализацииБезНДС, Доход);
		
	Если МестоХранения.СуммовойУчет = 1 Тогда
		ПроводкиТовар(СписываемыйОстатокТовара, , СуммаРеализацииСНДС,,ПоставкаП,СчетП,);
	ИначеЕсли МестоХранения.ВидСклада <> Перечисление.ВидыСкладов.Розничный Тогда
		ПроводкиТовар(СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,СуммаРеализацииСНДС-СписываемаяПродСтоимость,ПоставкаП,СчетП,"");
	ИначеЕсли ((ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) 
	ИЛИ (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)) Тогда 
		ПроводкиТовар(СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,СуммаРеализацииСНДС-СписываемаяПродСтоимость,ПоставкаП,СчетП,СчетПоКоду("28.5.2"));
	Иначе
		ПроводкиТовар(СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,СуммаРеализацииСНДС-СписываемаяПродСтоимость,ПоставкаП,СчетП,СчетПоКоду("28.5.1"));
	КонецЕсли;
	Если ПустоеЗначение(тбПартии) = 0 Тогда
		глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость);
	КонецЕсли;
	ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
КонецПроцедуры

// ===============================
Процедура ДвижениеНормативныеЗатраты(СтатьяКалькуляции, Материал, СписываемоеКво, СписываемаяСумма)
	Регистр.НормативныеЗатраты.ПривязыватьСтроку(НомерСтроки);
	Регистр.НормативныеЗатраты.Фирма = Фирма;
	Регистр.НормативныеЗатраты.ВидДеятельности = ТМЦ.ВидДеятельности;
	Регистр.НормативныеЗатраты.Подразделение = ПодразделениеПроизв;
	Регистр.НормативныеЗатраты.Продукция = ТМЦ;
	Регистр.НормативныеЗатраты.СтатьяКалькуляции = СтатьяКалькуляции;
	Регистр.НормативныеЗатраты.Заказ = ПолучитьПустоеЗначение("Документ");
	Регистр.НормативныеЗатраты.Материал = Материал;
	Регистр.НормативныеЗатраты.ТипЗатрат = НормыНаВыпуск;
	Регистр.НормативныеЗатраты.Количество = СписываемоеКво;
	Регистр.НормативныеЗатраты.Сумма = СписываемаяСумма; 
	Регистр.НормативныеЗатраты.ДвижениеВыполнить();
КонецПроцедуры

// ===============================
Процедура ДвижениеВыпускПродукции(КвоПродукции,КвоБрака,СуммаПродукции,СуммаДавПродукции,Партия) 
	Регистр.ВыпускПродукции.ПривязыватьСтроку(НомерСтроки);
	Регистр.ВыпускПродукции.Фирма = Фирма;
	Регистр.ВыпускПродукции.ВидДеятельности = ТМЦ.ВидДеятельности;
	Регистр.ВыпускПродукции.Подразделение = ПодразделениеПроизв;
	Регистр.ВыпускПродукции.Заказ = ПолучитьПустоеЗначение("Документ");
	Регистр.ВыпускПродукции.Продукция = ТМЦ;
	Регистр.ВыпускПродукции.Партия = Партия; 
	Регистр.ВыпускПродукции.Количество = КвоПродукции;  
	Регистр.ВыпускПродукции.КоличествоБрака = КвоБрака;  
	Регистр.ВыпускПродукции.Сумма = СуммаПродукции; 
	Регистр.ВыпускПродукции.СуммаДав = СуммаДавПродукции; 
	Регистр.ВыпускПродукции.ДвижениеВыполнить();
КонецПроцедуры      

// ===============================
Процедура ДвиженияСтрокаПроизводство(тбНормы,СебестоимостьПродукции)

	СебестоимостьПродукции = 0;

	Если Константа.МетодРасчетаСебестоимостиПроизводственныхЗапасов.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		Партия = ПолучитьПустоеЗначение("Документ");
	Иначе
		Партия = ТекущийДокумент();
	КонецЕсли;

	СуммаМатЗатратПоПродукции = 0;	//Сумма материальных затрат по нормам на продукцию
	СуммаНеМатЗатратПоПродукции = 0;//Сумма нематериальных затрат по нормам на продукцию
	СуммаВозврОтходовПоПродукции = 0;//Сумма возвратных отходов по нормам на продукцию
	
	тбНормы.ВыбратьСтроки();
	Пока тбНормы.ПолучитьСтроку() = 1 Цикл
		// показываем нормативные затраты
		ДвижениеНормативныеЗатраты(тбНормы.СтатьяКалькуляции,тбНормы.Материал,тбНормы.Кво * ?(тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.ВозвратныйОтход,-1,1),тбНормы.Сумма);
		
		Если тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.ВозвратныйОтход Тогда
			СуммаВозврОтходовПоПродукции = СуммаВозврОтходовПоПродукции + тбНормы.Сумма;
		ИначеЕсли (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Материал)
				или (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат) Тогда
			СуммаМатЗатратПоПродукции = СуммаМатЗатратПоПродукции + тбНормы.Сумма;
		ИначеЕсли (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.СтатьяКалькуляции) Тогда
			СуммаНеМатЗатратПоПродукции = СуммаНеМатЗатратПоПродукции + тбНормы.Сумма;
		КонецЕсли;
	КонецЦикла;

	// Определяем себестоимость заданного количества продукции
	Если Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоПлановойСебестоимости  Тогда
		//Плановую себестоимость берем из справочинка ТМЦ, УчетнаяЦена
		СебестоимостьПродукции = ТМЦ.УчетнаяЦена.Получить(ДатаДок) * Кво;
	ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоНормативнойСебестоимости  Тогда
		//Считаем себестоимость как общую сумму затрат по нормативам
		СебестоимостьПродукции = СуммаМатЗатратПоПродукции + СуммаНеМатЗатратПоПродукции - СуммаВозврОтходовПоПродукции;
	ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоСебестоимостиФактическогоСостава  Тогда
		//Считаем себестоимость как фактические материальные затраты + плановые прочие затраты по нормативам
		СебестоимостьПродукции = СуммаНеМатЗатратПоПродукции - СуммаВозврОтходовПоПродукции;
	ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.БезСебестоимости Тогда
		СебестоимостьПродукции = 0;
	КонецЕсли;
	//Движения по ВЫПУСКУ ПРОДУКЦИИ
	ДвижениеВыпускПродукции(Кво,0,СебестоимостьПродукции,0,Партия);
КонецПроцедуры //ДвиженияСтрокаПроизводство

// ===============================
Функция ДвиженияПартии() 
Перем фОшибка;	// возвращаемое значение
Перем ИтогСуммаСНДС, ИтогНДС;	// базы распределения сумм

	фОшибка = 1;              
	
	глКомментарий("Выполняются движения партий ТМЦ",2);
	
	ФлагПрихода = 0;
	ФлагВозврата = 0;
	спОтбор = СоздатьОбъект("СписокЗначений");                                                                    
	ФлагВозврата = 0;	
	// сформируем список счетов для отбора	
	спСчета = СоздатьОбъект("СписокЗначений");   
	Если МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
		спСчета.ДобавитьЗначение(СчетПоКоду("28.2.1"));
		спСчета.ДобавитьЗначение(СчетПоКоду("28.2.2"));
	Иначе     
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если спСчета.НайтиЗначение(ТМЦ.Счет) = 0 Тогда
				спСчета.ДобавитьЗначение(ТМЦ.Счет);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
	спОтбор.Установить("Счет",спСчета);
	ВремРегПартии = СоздатьОбъект("Регистры");
	глРассчитатьОстаткиИРезервы(Контекст, ВремРегПартии, спОтбор,1,1,1);	
	Если (МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) или (глПартионныйУчетПоСкладам = Да) Тогда
		спОтбор.Установить("МестоХранения", МестоХранения);
	КонецЕсли;
	глРассчитатьОстаткиПартий(Контекст, ВремРегПартии, Фирма, спОтбор);
	Предпочтение = 0;
	тбПартии = 0;
	тбОстатки = 0;
	ИнвСтратегияПредпочтения = ФлагВозврата;
	ИнвСтратегияПродажи = ФлагВозврата;
	глСформироватьТаблицуПартий(Контекст, ВремРегПартии,Фирма, спОтбор, Предпочтение, 
		тбПартии, тбОстатки, ИнвСтратегияПредпочтения, ИнвСтратегияПродажи);

	// инициализация алгоритмов корректого распределения
	глОчиститьКлючОкр("НДС");

	// расчитаем базы распределения 
	глОпределитьБазыРаспределения(Контекст, ИтогСуммаСНДС, ИтогНДС);
	ИтогСуммаСНДС		= глПересчет(ИтогСуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
	ИтогНДС 			= глПересчет(ИтогНДС      ,Валюта,ДатаДок,Гривня,ДатаДок);
	
	ВремРегПартии.Актуальность(1);	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		МетодРасчетаСебестоимости = глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок);
		ПроцНДС = глПроцентНДС(ТМЦ.СтавкаНДС,ДатаДок);
		КоэфБезНДС = 100 / (100 + ПроцНДС);
		ВсегоСписать = Кво * Коэффициент;
		// движения по регистру Остатки                                                                          
		глПровестиОстатки(Контекст, ВремРегПартии, Фирма, МестоХранения, ТМЦ,, ВсегоСписать, ФлагПрихода, ФлагВозврата,,, 1);
		ОсталосьСписать = ВсегоСписать;
		
		НДС = СуммаСНДС * (1 - КоэфБезНДС);

		// Сумму по строке пересчитываем по курсу документа с учетом аванса в гривни 
		ПострСуммаСНДС	    = глПересчет(СуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
		ПострНДС		    = глПересчет(НДС      ,Валюта,ДатаДок,Гривня,ДатаДок);
		ПострНДС		    = глОкрКорр("НДС", ПострНДС,2);
		ПострСуммаБезНДС 	= ПострСуммаСНДС - ПострНДС;
		ОсталосьСуммаСНДС	= ПострСуммаСНДС;
		ОсталосьСуммаБезНДС	= ПострСуммаБезНДС;

		Если (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция) Или (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) Тогда
			ВидТМЦ = "продукция"; 
			СчетДоходов = "701"; 
		ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			ВидТМЦ = "услуги"; 
			СчетДоходов = "703"; 
		Иначе
			ВидТМЦ = "товары"; 
			СчетДоходов = "702"; 
		КонецЕсли;
		
		глПроводка(Контекст,СчетДоходов,"6415",ПострНДС,"НДС: оплата наличными: "+ВидТМЦ,, ТМЦ.ВидДеятельности,Подразделение,МестоХранения,
		ВидНДС,,, ,,"РЗ",1,0);
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		//Если СубконтоВалДох <> Константа.НиДоходНиРасход Тогда
		//	глПроводка(Контекст,"ВД","ВД",ПострСуммаБезНДС,"Валовые доходы",, Константа.БазЧастноеЛицо,ПолучитьПустоеЗначение("Документ"),СубконтоВалДох,
		//	Константа.БазЧастноеЛицо,ПолучитьПустоеЗначение("Документ"),СубконтоВалДох, ,,"РЗ",1,0);
		//КонецЕсли;
		// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		ОсталосьСуммаСНДС = ПострСуммаСНДС;                   
		//Учтем разницу округления при формировании движений по регистру
		ОсталосьСуммаБезНДС = ПострСуммаБезНДС;         
		// проводки и движения по услугам отдельно
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			тбНормы = 0; СуммаУчБезНДС = 0;
			// получаем нормы
			Если глПолучитьНормы(ТМЦ,Ед,Кво,ДатаДок,,тбНормы) = 1 Тогда 
				// калькулируемая услуга
				ДвиженияСтрокаПроизводство(тбНормы,СуммаУчБезНДС);
				Доход = ОсталосьСуммаБезНДС - СуммаУчБезНДС;
				СчетУч = СчетПоКоду("231");
			Иначе
				Доход = 0;
				СчетУч = ТМЦ.Счет;
			КонецЕсли;
			ПроводкиТовар(ОсталосьСписать, СуммаУчБезНДС, 0,ОсталосьСуммаСНДС,ТекущийДокумент(),СчетУч,"");
			глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетУч,
				0,0, ТекущийДокумент(), ТекущийДокумент(), ОсталосьСписать, ОсталосьСуммаБезНДС, 
				0, ПродажаУслуги, 1, ОсталосьСуммаБезНДС,Доход);
			Продолжить;
		КонецЕсли;
		НС=0;
		// находим в тбПартии первую партию, соответсв. текущей строке документа
		Если тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента")=1 Тогда
			тбПартии.ПолучитьСтрокуПоНомеру(НС);
		Иначе                                                                     
			// если такой строки нет, переходим на первую строку таблицы
			тбПартии.ВыбратьСтроки();
			тбПартии.ПолучитьСтроку();
		КонецЕсли;
		// обрабатываем все строки тбПартии с соответсв. номером строки документа
		Пока тбПартии.НомерСтрокиДокумента = НомерСтроки Цикл
			// берем необходимые параметры партии из тбПартии
			Если (тбПартии.ТМЦ.Счет = тбПартии.Счет)
			Или  (МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный)
			Тогда
				МестоХраненияП = тбПартии.МестоХранения;
				ПоставщикП = тбПартии.Поставщик;
				ПоставкаП = тбПартии.Поставка;
				ПрихДокументП = тбПартии.ПрихДокумент;
				СчетП = тбПартии.Счет;                                           
				// можем списывать только партии, выпущенные не по заказу
				текЗаказ = ПолучитьПустоеЗначение();
				Если глПартияСоответствуетЗаказу(ПоставкаП,текЗаказ,1)=0 Тогда
					Если тбПартии.ПолучитьСтроку()=0 Тогда
						Прервать;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				НС =0;
				// находим остаток текущей партии в тбОстатки по ключу
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,ТМЦ.Код,СчетП),НС,"Ключ")=1 Тогда
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					ОстатокТовара = тбОстатки.ОстатокТовара;
					// если остаток 0, то с текущей партии не списываем
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					// сформируем движения по регистрам и проводки
					СформироватьДвиженияПартии(тбОстатки,тбПартии,ОсталосьСписать,ВсегоСписать,ПострСуммаСНДС,
					ПострСуммаБезНДС,ОсталосьСуммаСНДС,ОсталосьСуммаБезНДС,ПоставщикП,ПоставкаП,ПрихДокументП);
				КонецЕсли;
			КонецЕсли;
			Если ОсталосьСписать = 0 Тогда
				Прервать;
			КонецЕсли;   
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла; 
		Если ОсталосьСписать > 0 Тогда
			глСообщитьОбОтсутствииПартии(ФлагВозврата, Фирма, ТМЦ, НомерСтроки);
			Если Константа.РазрешитьОтрицОстатки = Нет Тогда
				фОшибка = 0;
			Иначе
				ПрихДокументП = ?(МетодРасчетаСебестоимости<>Перечисление.МетодыРасчетаСебестоимости.ПоСреднему
				,ТекущийДокумент(),0);
				// сформируем движения по регистрам и проводки
				глСообщитьОСозданииПартии(ТМЦ, ОсталосьСписать);
				СформироватьДвиженияПартии(,,ОсталосьСписать,ВсегоСписать,ПострСуммаСНДС,
				ПострСуммаБезНДС,ОсталосьСуммаСНДС,ОсталосьСуммаБезНДС,,,ПрихДокументП);
			КонецЕсли;
		КонецЕсли; // ОсталосьСписать > 0
	КонецЦикла; // строки документа
	ВремРегПартии.Актуальность(0);		
	Возврат фОшибка;
КонецФункции

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;                         
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
	КонецЦикла;	
	Если ДвиженияПартии() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;	          
	РежимПроведения=0;
	
	глЗаписатьПроводкиВОперацию(Контекст);
	
	Операция.СуммаОперации = Итог("СуммаСНДС");
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

// ===============================
Процедура ОбработкаУдаленияПроведения()	
	РежимПроведения=0;
КонецПроцедуры