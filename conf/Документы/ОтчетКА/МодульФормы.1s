// ===============================
// Описание переменных 
Перем СписокДействий;
Перем КатегорияЦен;
Перем СтараяДата;
Перем НачальнаяДатаДокумента; // Для контроля даты документа

// ===============================
// "служебные" функции и процедуры 

// ===============================
Функция УстДоступность()
    Форма.Заголовок(глЗаголовок(Контекст,"Отчет КА"));

	Если ПустоеЗначение(МестоХранения) = 0 Тогда
		Если (МестоХранения.ВидСклада = Розничный) И (МестоХранения.СуммовойУчет=1) Тогда
			Форма.Кво.Видимость(0);
		Иначе
			Форма.Кво.Видимость(1);
		КонецЕсли;
	Иначе
		Форма.Кво.Видимость(1);
	КонецЕсли;	
	
    Возврат "";
КонецФункции

// ===============================
Функция БазыИСуммыТекстом(Ставка,База,НДС)
	Текст = ""+Ставка+". База: "+Формат(База,"Ч12.2")+". Сумма НДС: "+Формат(НДС,"Ч12.2")+".";
	Возврат Текст;
КонецФункции

// ===============================
Процедура УстДоступностьКнопок()
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);    
		Форма.кДействия.Доступность(0);
		Форма.кПодбор.Доступность(0);
		
		Форма.кОтчетКА.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.кВалюта.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
КонецПроцедуры
                   
// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
		Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ОтчетЭККА()
	
    Если Проведен()=1 Тогда
    	Предупреждение("Загрузка невозможна для проведенных документов. Сделайте документ непроведенным");
    	Возврат;
	КонецЕсли;  
	
	Если ПустоеЗначение(ЭККА) = 0 тогда	
		ИмяОбр = "ОбслуживаниеЭККА_"+СокрЛП(Строка(ЭККА.Тип));
		Расшифровка = СоздатьОбъект("СписокЗначений"); 
		
		Расшифровка.ДобавитьЗначение("Отчет","Парам");
		Расшифровка.ДобавитьЗначение(Контекст,"Документ");
		
		глРасшифровка = Расшифровка;
		ОткрытьФорму("Обработка."+ИмяОбр+"#");
		глРасшифровка = 0;
	КонецЕсли;                                                         
	
КонецПроцедуры

// ===============================
Процедура ИзмДата()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
КонецПроцедуры

// ===============================
Процедура ИзмТМЦ()
	Если (ТМЦ.Выбран() = 1) И (МестоХранения.ВидСклада = Розничный) И (МестоХранения.СуммовойУчет=1) Тогда
		Если ТМЦ <> Константа.ТоварыВАссортименте Тогда
			глКомментарий("ТМЦ "+ТМЦ+" нельзя продавать с розничного склада с признаком ведения суммового учета.",0);
			ТМЦ = 0;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	глПриИзмененииТовара(Контекст);
КонецПроцедуры	

// ===============================
Процедура ОбработкаПодбора(Выб)
	Если (ТМЦ.Выбран() = 1) И (МестоХранения.ВидСклада = Розничный) И (МестоХранения.СуммовойУчет=1) Тогда
		Если ТМЦ <> Константа.ТоварыВАссортименте Тогда
			глКомментарий("ТМЦ "+ТМЦ+" нельзя продавать с розничного склада с признаком ведения суммового учета.",0);
			ТМЦ = 0;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в докумнете
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
КонецПроцедуры	                  
                    
// ===============================
Процедура ВыборКассы()
	спКассы = глЗаполнитьСпКассы(Фирма,Валюта);
	спКассы.ВыбратьЗначение(Касса,,,,2);
КонецПроцедуры

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета=СоздатьОбъект("СписокЗначений");
	Если МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Оптовый Тогда
		спСчета.ДобавитьЗначение(ТМЦ.Счет);
		Если глПартионныйУчетПоСкладам = Да Тогда
		    спОтбор.Установить("МестоХранения",МестоХранения);
		КонецЕсли;
	Иначе
		спСчета.ДобавитьЗначение(СчетПоКоду("28.2.1"));
		спСчета.ДобавитьЗначение(СчетПоКоду("28.2.2"));
		спОтбор.Установить("МестоХранения",МестоХранения);
	КонецЕсли;
	спОтбор.Установить("Счет",спСчета);
	спОтбор.Установить("Контекст",Контекст);  
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры

// ===============================
// Предопределенные процедуры

Процедура ПриВыбореЗакладки(Номер,Значение)
	Форма.ИспользоватьСлой("Совместный,"+Значение,2);
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;             
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
	ИначеЕсли Рекв="Предпочтение" Тогда
	    ВыборПредпочтения(); 
	ИначеЕсли Рекв="Касса" Тогда
		ВыборКассы();
	ИначеЕсли Рекв="ЭККА" Тогда
		глВыбратьЭККА(Контекст,"Отчет",1);
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры                    
             
// ===============================
Процедура ПриНачалеРедактированияСтроки()
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
	Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
КонецПроцедуры

// ===============================
Процедура ВводНового(Скопирован)	
	Если Скопирован=1 Тогда	//копирование документа
		ЧекПробит=0;
		Возврат;
	КонецЕсли;
	
	глЗаполнитьШапку(Контекст);
	
	ДатаДок=РабочаяДата();
	Валюта=Гривня;
	Дата_Курса=ДатаДок;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);

	глВыбратьЭККА(Контекст,"Отчет",0);
	Если ЭККА.Выбран()=1 Тогда
		Если (ЭККА.РежимРаботы = Перечисление.РежимыРаботыЭККА.Регистрация) или
			(ЭККА.РежимРаботы = Перечисление.РежимыРаботыЭККА.Автономный) Тогда
			МестоХранения = ЭККА.Магазин;    
		КонецЕсли;
	КонецЕсли;               
	
	Если ПустоеЗначение(МестоХранения)=1 Тогда
		МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойМагазин");
	КонецЕсли;
                                         
	Касса = глПолучитьКассу(Фирма,Валюта);
	
	ЧекПробит=0;	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	глПроверкаДатыДок(Контекст,"Открытие");
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	
	НачальнаяДатаДокумента = ДатаДок;
	УстДоступностьКнопок();
	КатегорияЦен = Константа.РозничнаяКатегорияЦен;
	СтараяДата = ДатаДок;  

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительно","Дополнительно");
	Форма.ИспользоватьСлой("Основной, Совместный",2); 
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()         
	глПроверкаДатыДок(Контекст,"Записть");
	Автор = глПользователь;
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;       
	// заполним реквизиты БазаНДС1,БазаНДС2,БазаНДС3,НДС1,НДС2,НДС3
	БазаНДС1 = 0;
	БазаНДС2 = 0;
	БазаНДС3 = 0;
	НДС1 = 0;
	НДС3 = 0;
	НДС2 = 0;
	ПроцБезНДС			  = глПроцентНДС(БезНДС,ДатаДок);
	ПроцЛьготнаяСтавкаНДС = глПроцентНДС(ЛьготнаяСтавкаНДС,ДатаДок);
	ПроцОсновнаяСтавкаНДС = глПроцентНДС(ОсновнаяСтавкаНДС,ДатаДок);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ТМЦ.СтавкаНДС = БезНДС Тогда
			БазаНДС1 = БазаНДС1 + СуммаСНДС; 							
		ИначеЕсли ТМЦ.СтавкаНДС = ЛьготнаяСтавкаНДС Тогда
			БазаНДС2 = БазаНДС2 + СуммаСНДС; 							
		ИначеЕсли ТМЦ.СтавкаНДС = ОсновнаяСтавкаНДС Тогда
			БазаНДС3 = БазаНДС3 + СуммаСНДС; 							
	    КонецЕсли;
	КонецЦикла;	
	НДС1 = БазаНДС1*ПроцБезНДС/(100+ПроцБезНДС);
	НДС2 = БазаНДС2*ПроцЛьготнаяСтавкаНДС/(100+ПроцЛьготнаяСтавкаНДС);
	НДС3 = БазаНДС3*ПроцОсновнаяСтавкаНДС/(100+ПроцОсновнаяСтавкаНДС);
КонецПроцедуры

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");