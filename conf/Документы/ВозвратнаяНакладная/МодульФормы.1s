Перем Валюта_Прежн, Курс_Прежн;
Перем СтараяДата;      
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем НачальнаяДатаДокумента;
Перем СтруктИзменений;
Перем СписокДействий;

Перем СпВидыУпаковкиГлобальный; //--- УМК Сандомирский В.Ю. (31.08.14)
Перем СпВидыУпаковкиЛокальный;  //--- УМК Сандомирский В.Ю. (31.08.14)

//====================================================================== //--- УМК Сандомирский В.Ю. (29.01.15)
Процедура НайтиРН() Далее
//======================================================================
Процедура ИзмУстановкаСкидок() Далее
Процедура РассчитатьЦенуВСтроке() Далее

Функция ПолучитьИтогоВес()
	ЕдВеса = Константа.ЕдиницаВеса;
	ИтКво = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл		
		Если Ед.Единица = ЕдВеса Тогда
			ИтКво = ИтКво + Кво * Коэффициент;
		Иначе
			ИтКво = ИтКво + Кво * ТМЦ.Вес;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Окр(ИтКво, 3);
КонецФункции

// ===============================
Функция УстДоступность()
//	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки); //--- УМК Сандомирский В.Ю. (08.01.15)
	Форма.Заголовок(глЗаголовок(Контекст,"Возвратная накладная"));
	Форма.Фирма.Видимость(0);
	// доступность в зависимости от слоя
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		ДостКасса = 1;
	Иначе
		ДостКасса = 0;
	КонецЕсли;
	Если Закл = "Основной" Тогда
		Форма.тКасса.Доступность(ДостКасса);
		Форма.Касса.Доступность(ДостКасса);
	КонецЕсли;  
	
	Если ДокПродажи.Выбран() = 1 Тогда
		Форма.ЦенаУчБезНДС.Доступность(0);
		Форма.СуммаУчБезНДС.Доступность(0);
	Иначе
		Форма.ЦенаУчБезНДС.Доступность(1);
		Форма.СуммаУчБезНДС.Доступность(1);
	КонецЕсли;
	Форма.ДопКво.Доступность(ТМЦ.УчетДопКво);
	
	Если (глПользователь.фПривелегииДатаЗапрета = 1) И  (Выбран() = 1) Тогда  //--- УМК Сандомирский В.Ю. (13.08.14)  возможно менять договор привелегированым
		Форма.кОсн.Доступность(1);
		Форма.кОК.Доступность(1);
	КонецЕсли;
	
	Возврат "";
КонецФункции

// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	//Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
	//	Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
	//		// определим ставку НДС
	//		Если ВидНДС = ОсновнаяСтавкаНДС Тогда
	//			СтавкаНДС = ТМЦ.СтавкаНДС;
	//		Иначе
	//			СтавкаНДС = ВидНДС;
	//		КонецЕсли;
	//		// устанавливаем цену без НДС
	//		ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
	//	КонецЕсли;
	//	глВыч_Суммы_Накл(Контекст,-1);
	//Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	//КонецЕсли;
КонецПроцедуры //ПересчетСтроки

// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
Процедура ИзмРеквизитШапки(Реквизит)
	// пересчитаем суммы НДС в строках табличной части
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	текОтвет = Вопрос("В документе изменен реквизит """+Реквизит+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текОтвет = "Да" Тогда
			// изменим цены
			ЦенаТовара = глВернутьЦену(ТМЦ, КатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
				// получим параметры цены
				ЦенаТовара.ИспользоватьДату(ДатаДок);
				ЦенаЦены   = ЦенаТовара.Цена;
				ВалютаЦены = ЦенаТовара.Валюта;
				ЕдЦены	   = ЦенаТовара.Единица;
				ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
				ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
				ПересчетСтроки(ЦенаЦены);                                                   
			Иначе
				ПересчетСтроки();
			КонецЕсли;
		ИначеЕсли Реквизит = "ВидНДС" Тогда
			ПересчетСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура ИзмВидТары()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("В документе изменен вид тары! Пересчитать суммы ?","Да+Нет") = "Да" Тогда
			текОсновнаяЦена = Константа.ОсновнаяЦена;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл    
				Если ПустоеЗначение(ТМЦ) = 1 Тогда
					Продолжить;
				ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					ПересчетСтроки();
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура УстСчетКонтрагента()
	СчетКонтрагента = СчетПоКоду(?(Валюта = Гривня, "36.1", "36.2"));	
КонецПроцедуры
                      
// ===============================
Процедура ИзмСчетКонтрагента()
	Если ПустоеЗначение(СчетКонтрагента) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбранный счет не является счетом учета взаиморасчетов!",1,,"!");
		СчетКонтрагента = 0;
	ИначеЕсли (Валюта = Гривня)
	И (СчетКонтрагента.Валютный = 1) Тогда
		глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
		СчетКонтрагента = 0;       
	ИначеЕсли (Валюта <> Гривня)
	И (СчетКонтрагента.Валютный = 0) Тогда
		глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
		СчетКонтрагента = 0;
	КонецЕсли;	
КонецПроцедуры
           
// ===============================
Процедура ВыборКассы()
	спКассы = глЗаполнитьСпКассы(Фирма,Валюта);
	спКассы.ВыбратьЗначение(Касса,,,,2);
КонецПроцедуры

// ===============================
Процедура ИзмКасса()
	Если Касса.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	Если Валюта <> Касса.Валюта Тогда
		Предупреждение("Выбранная Вами касса должна соответствовать валюте документа!");
		Касса = глПолучитьКассу(Фирма,Валюта);
	КонецЕсли;
	Если Касса.Безнал = 1 Тогда
		глКомментарий("Выбран безналичный счет!",1,,"!");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	УстСчетКонтрагента();
	ИзмКасса();
КонецПроцедуры	

// ===============================
Процедура ИзмВидТорговли()
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Если (Касса.Выбран() = 0) ИЛИ (Касса.Валюта <> Валюта) Тогда
		    Касса = глПолучитьКассу(Фирма,Валюта);
		КонецЕсли;
	Иначе
		Касса = 0;
	КонецЕсли;
КонецПроцедуры	
  
// ===============================
Процедура ИзмДатаДок()	
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	УстановкаСкидокТМЦ = глПолучитьДокументУстановкиСкидок(ДатаДок, Контрагент);
	ИзмУстановкаСкидок();	
КонецПроцедуры

// ===============================
Процедура ИзмДоговор()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			УстСчетКонтрагента();
			Если Валюта <> Валюта_Прежн Тогда
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
				КонецЕсли;
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;				
			ВидНДС = Договор.ВидНДС;			
			ИзмРеквизитШапки("ВидНДС");
			Если Договор.Склад.Выбран() = 1 Тогда
				НужноПоменятьСклад = 0;
				Если МестоХранения <> Договор.Склад Тогда
					НужноПоменятьСклад = 1;
				Иначе
					ВыбратьСтроки();
					Пока ПолучитьСтроку() = 1 Цикл
						Если (ПустоеЗначение(Склад) = 0) И (Склад <> Договор.Склад) Тогда
							НужноПоменятьСклад = 1;
							Прервать;
						КонецЕсли;
					КонецЦикла;					
				КонецЕсли;
				Если НужноПоменятьСклад = 1 Тогда
					Если Вопрос("Изменить склад?", "Да+Нет") = "Да" Тогда
						МестоХранения = Договор.Склад;
						ВыбратьСтроки();
						Пока ПолучитьСтроку() = 1 Цикл
							Если ПустоеЗначение(Склад) = 0 Тогда
								Склад = Договор.Склад;
							КонецЕсли;
						КонецЦикла;						
					КонецЕсли;					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;    
	ИзмВидТорговли();
КонецПроцедуры 
                            
// ===============================
Процедура РассчитатьУчЦенуИСумму()
	ЦенаУчБезНДС = 0;
	СуммаУчБезНДС = 0;
	фНашли = 0;
	
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		// получаем нормы
		Если глПолучитьНормы(ТМЦ,,1,ДатаДок,глПолучитьЗаказ(Договор),,1)=0 Тогда
			// некалькулируемая услуга
		    Возврат;
		КонецЕсли;
		Рег = СоздатьОбъект("Регистр.Обороты");
		Рег.ВыбратьДвиженияДокумента(ДокПродажи);
		Пока Рег.ПолучитьДвижение()=1 Цикл
			Если Рег.ТМЦ <> ТМЦ Тогда
				Продолжить;
			КонецЕсли;          
			фНашли = 1;
			ПродКво 	= Рег.РасходКво;
			ПродСумма 	= Рег.РасходСум - Рег.Доход;
			Прервать;
		КонецЦикла;
	Иначе // товар или продукция		
		Если ПустоеЗначение(ДокПродажи) <> 1 Тогда		//--- УМК Сандомирский В.Ю. (29.01.15)
			Опер = ДокПродажи.Операция;
			Опер.ВыбратьПроводки();
			Пока Опер.ПолучитьПроводку()=1 Цикл
				Если Опер.Кредит.Субконто(2)<>ТМЦ Тогда
				    // не тот ТМЦ
				    Продолжить;
				КонецЕсли;
				Если Опер.Кредит.Счет = ТМЦ.Счет Тогда
				    // Дх К28.1
					фНашли = 1;
					ПродКво 	= Опер.Количество;
					ПродСумма 	= Опер.Сумма;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
			
	КонецЕсли;
	Если фНашли = 0 Тогда
	    глКомментарий("ТМЦ "+ТМЦ+" не списывался в расходной накладной номер "+ДокПродажи.НомерДок+" от "+ДокПродажи.ДатаДок+" !",1,,"!!");
		Возврат;
	КонецЕсли;
	Если ПродКво = 0 Тогда
	    Возврат;
	КонецЕсли;
	ЦенаУчБезНДС = Коэффициент*ПродСумма/ПродКво;
	// цена округлена до 2 знаков, сумму рассчитаем точнее
	СуммаУчБезНДС = Кво*Коэффициент*ПродСумма/ПродКво;
	Если Контрагент.БратьЦенуВозвратаИзЦен = 1 Тогда
		РассчитатьЦенуВСтроке();
	Иначе
		ДокПродажи.ВыбратьСтроки();
		Пока ДокПродажи.ПолучитьСтроку() = 1 Цикл
			Если ДокПродажи.ТМЦ = ТМЦ Тогда
				Если (ПустоеЗначение(ДокПродажи.ВидУпаковки) = 1) ИЛИ (ДокПродажи.ВидУпаковки = НетУп) Тогда
					ТекВидУпаковкиРН = НетУп;
				Иначе
					ТекВидУпаковкиРН = ДокПродажи.ВидУпаковки;
				КонецЕсли;
				
				Если (ПустоеЗначение(ВУП) = 1) ИЛИ (ВУП = НетУп) Тогда
					ТекВидУпаковки = НетУп;
				Иначе
					ТекВидУпаковки = ВУП;
				КонецЕсли;
				
				// + umk Уберем проверку на равенство упаковок. Проблема с расчетом возврата Бонусов.
				
				//Если (ТекВидУпаковкиРН = ТекВидУпаковки) И (ВыбиратьУпаковку = 1) Тогда // с учетом упаковки // +umk
				//	ЦенаБезСкидки = ДокПродажи.ЦенаБезСкидки;
				//ИначеЕсли (ТекВидУпаковки = НетУп) И (ВыбиратьУпаковку = 0) Тогда
					ЦенаБезСкидки = ДокПродажи.ЦенаБезСкидки; // без учета упаковки +umk
				//КонецЕсли;
				
				Если (СпецВозврат = 1) ИЛИ (ВыбиратьУпаковку = 1) Тогда //--- УМК Сандомирский В.Ю. (29.01.15) если спецвозврат  (стоит  галочка возврат непроданной)
					Если ТекВидУпаковкиРН <> ТекВидУпаковки Тогда
				        Продолжить;
					КонецЕсли;	
				
					ЦенаБезНДС = ДокПродажи.ЦенаБезНДС;
					ЦенаСНДС = ДокПродажи.ЦенаСНДС;
				
					Если Кво = 0 Тогда
					    Кво = ДокПродажи.Кво;
					КонецЕсли;
					глВыч_Суммы_Накл(Контекст,-1);			
				Иначе //--- Вычисляем цену без упаковки (цена из накладной - минус цена упаковки)				
					ЦенаСНДС = ДокПродажи.ЦенаСНДС 
								- глПолучитьЦенуВУП(ДокПродажи, ДокПродажи.КатегорияЦен, ДокПродажи.ДатаДок,  ДокПродажи.Валюта, ДокПродажи.ДатаДок, ДокПродажи.ТМЦ);//---(Вычитаем цену упаковки на день РН)
				
					Если Кво = 0 Тогда
					    Кво = ДокПродажи.Кво;
					КонецЕсли;
					
					глВыч_Суммы_Накл(Контекст,1);
				КонецЕсли;			
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ИзмЦенаУчБезНДС()
	Если (ДокПродажи.Выбран() = 1) и (ДокПродажи.Проведен() = 1) и (МестоХранения.СуммовойУчет <> 1) Тогда
		РассчитатьУчЦенуИСумму();
	Иначе
		СуммаУчБезНДС = ЦенаУчБезНДС*Кво;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ИзмДокПродажи()
Перем фНашли;
	Если ДокПродажи.Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	Если ДокПродажи.Проведен()=0 Тогда
	    Возврат;
	КонецЕсли;
	РассчитатьУчЦенуИСумму();
КонецПроцедуры

//======================================================================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда
		Если Договор.Выбран()=1 Тогда
			Если Контрагент <> Договор.Контрагент Тогда
			    Договор = 0;
			КонецЕсли;
		КонецЕсли;
		// подставляем БазДоговор в зависимоти от константы
		Если (Константа.ПодставлятьОсновнойДоговор = Да) 
		И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
		И (ПустоеЗначение(Договор)=1) Тогда
			Если Фирма = Контрагент.БазДоговор.Фирма Тогда
				Договор = Контрагент.БазДоговор;
				ИзмДоговор();
			КонецЕсли;
		КонецЕсли;
		Если ПустоеЗначение(Контрагент.КатегорияЦен.Получить(ДатаДок)) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
		Иначе	
			КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		КонецЕсли;
		Если ПустоеЗначение(СтарКатегорияЦен) = 1 Тогда
		    СтарКатегорияЦен = КатегорияЦен;
		КонецЕсли;
		Если Договор.Выбран() = 1 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
				Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
					ВидТорговли = Договор.ВидТорговли;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	                      		
		Если (ПустоеЗначение(Контрагент.ВидТорговли) = 0)
		И (ПустоеЗначение(ВидТорговли) = 1) Тогда   
			Если Контрагент.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
			    ВидТорговли = Контрагент.ВидТорговли;      
			Иначе	
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
			ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;    
		Если ПустоеЗначение(ДокументОснование) = 0 Тогда
			Если ДокументОснование.Контрагент <> Контрагент Тогда
				ДокументОснование = 0;
			КонецЕсли;	
		КонецЕсли;	
		УстановкаСкидокТМЦ = глПолучитьДокументУстановкиСкидок(ДатаДок, Контрагент);
		ИзмУстановкаСкидок();
	Иначе
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		Договор = 0;
		ДокументОснование = 0;
	КонецЕсли;                                   
	ИзмВидТорговли();
КонецПроцедуры

//======================================================================
Процедура ОчиститьЗаказ()
	Если Договор.Выбран() = 1 Тогда
		Договор = 0;
	КонецЕсли;
КонецПроцедуры 

//======================================================================
Процедура ЗаполнитьПоУмолчанию()
	СубконтоВалДох = глВосстановитьЗначение(Контекст,"СубконтоВалДох",Константа.БазВаловыйДоход);
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
		Дата_Курса=ДатаДок;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	КонецЕсли;
	Отпустил = глВосстановитьЗначение(,"БазОтпустил");
	МестоХранения = Фирма.СкладВозврат;//глВосстановитьЗначение(Контекст,"ОсновнойСклад",Константа.ОсновнойСклад);  
	Подразделение = глВосстановитьЗначение(,"БазПодразделениеПродажи");
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	УстСчетКонтрагента();
	ВидТары = Перечисление.ВидыТары.Залоговая;
КонецПроцедуры

//======================================================================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		
		глУстановитьНомер(Контекст);
		
		ИзмКонтрагент();				//--- УМК Сандомирский В.Ю. (23.03.15) для обновления типа цен и т.п.
		
		Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
	ИзмКонтрагент();
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	ЗаполнитьПоУмолчанию();
КонецПроцедуры

//======================================================================
Процедура ПриВводеНаОсновании(Док)
	РодительскийДокумент = Док;
	ВидДок = Док.Вид();
	Фирма  = Док.Фирма;	
	глУстановитьНомер(Контекст);
	ЗаполнитьПоУмолчанию();	
	
	// --- УМК Сандомирский В.Ю. (09.01.15)
	ТекДокументОснование = "";
	Если Док.Вид() = "РасходнаяНакладная" Тогда 
		ТекДокументОснование = Док;
	КонецЕсли;
	
	глЗаполнитьШапкуНаОсн(Контекст,Док); // --- УМК Сандомирский В.Ю. (09.01.15) --- тут расходка может поменяться на заказ
	
	Если ПустоеЗначение(ТекДокументОснование) <> 1 Тогда // --- УМК Сандомирский В.Ю. (08.01.15) поєтому тут принудительно меняем заказ на расходну
		ДокументОснование = ТекДокументОснование;
	КонецЕсли;
	// ... УМК Сандомирский В.Ю. (09.01.15)
	
	Контрагент = Док.Контрагент;
	ИзмКонтрагент();
	Если глЕстьРеквизитШапки("Валюта",ВидДок) = Да Тогда
		Валюта = Док.Валюта;
		Если Док.Вид() = "Договор" Тогда
			Дата_Курса=ДатаДок;
			Курс = глКурсДляВалюты(Валюта,ДатаДок);
		Иначе
			Курс = Док.Курс;	
			Если глЕстьРеквизитШапки("Дата_Курса",ВидДок) = Да Тогда
				Дата_Курса=Док.Дата_Курса;
			Иначе
				Дата_Курса=Док.ДатаДок;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если глЕстьРеквизитШапки("КатегорияЦен",ВидДок) = Да Тогда
		КатегорияЦен = Док.КатегорияЦен;
	КонецЕсли;
	Если глЕстьРеквизитШапки("Подразделение",ВидДок) = Да Тогда
		Подразделение = Док.Подразделение;
	КонецЕсли;
	Если глЕстьРеквизитШапки("ПодразделениеПроизв",ВидДок) = Да Тогда
		ПодразделениеПроизв = Док.ПодразделениеПроизв;
	КонецЕсли;
	Если глЕстьРеквизитШапки("Отпустил",ВидДок) = Да Тогда
		Отпустил = Док.Отпустил;
	КонецЕсли;
	УстСчетКонтрагента();
	ИзмВидТорговли();	
	глСкопироватьТовСостав(Контекст,Док);
	Попытка
		ВидТорговли = Договор.ВидТорговли;
	Исключение КонецПопытки;	
	ИзмВидТорговли();
	Если Найти("Договор,Заказ",Договор.Вид()) = 0 Тогда
		// заказом может быть только договор или заказ
	    Договор = 0;
	КонецЕсли;
	Если ПустоеЗначение(Док) = 0 Тогда
		// установим Док.продажи во всех строках
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл       
			ДокПродажи = Док;	
			ИзмДокПродажи();
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры                      

//======================================================================
Функция ПроверкаОснования(Док)	
	Если Док.Вид()="Счет" Тогда
		Если Док.ЧтоПродаем = Перечисление.ЧтоПродаем.НеоборотныеАктивы Тогда
			Предупреждение("Для реализации основных средств используйте документ ЛиквидацияНеоборАктивов");
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	Возврат 1;
КонецФункции

//======================================================================
// основание - счет, договор, остатки взаиморасчетов
Процедура ВводНаОсновании(Док)        
	Если ПустоеЗначение(Док) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	   
	
	Если ПроверкаОснования(Док) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	 

	ПриВводеНаОсновании(Док);	
КонецПроцедуры
           
//======================================================================
Процедура ВыборОснования()  
	// Процедура по кнопке редактирования основания в докумнете
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ПроверкаОснования(ДокументОснование) = 0 Тогда 
			ДокументОснование = СтарОснование;              		
		КонецЕсли;	
		Если (ДокументОснование <> СтарОснование)
		И (ДокументОснование.Вид() <> "РасходыНаПриобретение") Тогда
			ПриВводеНаОсновании(ДокументОснование);	
		КонецЕсли;	
	КонецЕсли;	          
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	

//======================================================================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры
                          
//======================================================================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры //Обработка подбора

//======================================================================
Процедура ПриВыбореЗакладки(Номер,Значение)
	ОтображаемыеСлои = "Общий," + Значение;           
	Форма.ИспользоватьСлой(ОтображаемыеСлои,2);	
	
	Форма.тСхемаРБ.Видимость(0);
	Форма.СхемаРБ.Видимость(0);
	Если (Значение = "Дополнительный") И (НазваниеНабораПрав() = "Администратор") Тогда
		Форма.тСхемаРБ.Видимость(1);
		Форма.СхемаРБ.Видимость(1);
	КонецЕсли;	
КонецПроцедуры

//======================================================================
Процедура Печать(СКомментарием = 0)
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Если (Модифицированность() = 1) ИЛИ (ТекущийДокумент().Выбран() = 0) Тогда
			Предупреждение("Нельзя печатать не сохранённые ВН");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");
	
	Таб.ИсходнаяТаблица("Накладная"+СуффиксТаблицы);
    
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,ВУП,Кво,Ед,Коэффициент,ЦенаБезНДС,ЦенаСНДС,СуммаБезНДС,СуммаСНДС,НДС,ЦенаУчБезНДС,СуммаУчБезНДС" + ?(СКомментарием = 1, ",КомментСтр", ""));
	
	ПечФорма = "Накладная";
	Язык = глЯзык(ПечФорма); 	
	глУстПропись(Валюта);
	Хвост = ?(СКомментарием = 0, "|Основная", "");
	ПечОснование=глСтрокаОснование(Контекст,Договор,ДокументОснование);	
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = 1; //?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);  //--- УМК Сандомирский В.Ю, (29.07.14) всегда цены и суммы с НДС
	Адрес = глАдресСтрокой(?(Договор.Выбран() = 1, Договор.Адрес, Контрагент.ФизическийАдрес));
	Если СКомментарием = 1 Тогда		
		Таб.ВывестиСекцию("Шапка");
	Иначе
		Таб.ВывестиСекцию("Шапка<|Основная");
		Таб.ВывестиСекцию("Шапка>|Основная");
	КонецЕсли;
	Ном = 1;
	ВСоставе = 0;
	фЕстьТара =0;
	ТаблТМЦ.ВыбратьСтроки();
	Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
		Если (ВидТары <> Перечисление.ВидыТары.Покупная) и (ТаблТМЦ.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
			фЕстьТара = 1;
		    Продолжить;
		КонецЕсли;
		Таб.ВывестиСекцию("Строка" + Хвост);
		Ном = Ном+1;
	КонецЦикла;
	// печать тары
	Если фЕстьТара = 1 Тогда
		Если ВидТары = Перечисление.ВидыТары.Возвратная Тогда
			ЗагТара = ?(Язык="у","Тара зворотна","Тара возвратная");
		ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			ЗагТара = ?(Язык="у","Тара заставна","Тара залоговая");
		КонецЕсли;
		Таб.ВывестиСекцию("ШапкаТара" + Хвост);
	    Ном = 0;
		ТаблТМЦ.ВыбратьСтроки();
		Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
			Если (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			    Продолжить;
			КонецЕсли;
			ИтСуммаТары = ИтСуммаТары + ?(ОтЦеныСНДС=1,ТаблТМЦ.СуммаСНДС,ТаблТМЦ.СуммаБезНДС);
			Ном = Ном + 1;
			Таб.ВывестиСекцию("СтрокаТара" + Хвост);
		КонецЦикла;
		ИтСуммаТары = Окр(ИтСуммаТары,2);
		ПечИтСумма = глФРМТ(ИтСуммаТары,Валюта,0);
		Таб.ВывестиСекцию("ИтогоТара" + Хвост);
	КонецЕсли;
	
	//Если ОтЦеныСНДС = 1 Тогда					//--- УМК Сандомирский В.Ю, (29.07.14)
	//	Таб.ВывестиСекцию("ИтогоСНДС");
	//	Таб.ВывестиСекцию("ИтогоНДС");
	//	Таб.ВывестиСекцию("ИтогоБезНДС");
	//Иначе
		Таб.ВывестиСекцию("ИтогоБезНДС" + Хвост);
		Таб.ВывестиСекцию("ИтогоНДС" + Хвост);
		Таб.ВывестиСекцию("ИтогоСНДС" + Хвост);
	//КонецЕсли;								//... УМК Сандомирский В.Ю, (29.07.14)
	Таб.ВывестиСекцию("Дно" + Хвост);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Накладная","");
	глУстПропись(Гривня); 
КонецПроцедуры

Процедура ИзмВозвратНеПроданной()
	Если СпецВозврат = 1 Тогда
	//	МестоХранения = Фирма.ОсновнойСклад;
	//Иначе
		МестоХранения = Фирма.СкладВозврат;
	КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
		    Склад = Константа.ОснСкладГП;
		Иначе
			Склад = МестоХранения;
		КонецЕсли;

		Если (СпецВозврат = 0) И (ВыбиратьУпаковку = 0) Тогда //--- УМК Сандомирский В.Ю. (29.01.15) если спецфозврат  (стоит  галочка возврат непроданной)
			ВУП = ""; //--- принудительно зачищаем 
			НайтиРН();
		КонецЕсли;		
		
		РассчитатьУчЦенуИСумму(); //--- УМК Сандомирский В.Ю. (29.01.15) при изменении галочки возврат непроданной пересчитываем цены с (или без) учета упаковки
	КонецЦикла;
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()     
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		Если глГруппыДоступаКонтрагенты.Принадлежит(Контрагент) = 0 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	Форма.ДатаДок.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ВидТары.ВыполнятьФормулуТолькоПриИзменении(1);	
	Форма.ВидТорговли.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ТМЦ.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ДокПродажи.ВыполнятьФормулуТолькоПриИзменении(1);
	Если Форма.ТолькоПросмотр()=1 Тогда
		// Если открыли только на просмотр, то надо кнопки сделать недоступными
		Форма.кФирма.Доступность(0);
		Форма.кВалюта.Доступность(0);
		//Форма.кОсн.Доступность(0);
		//Форма.кОК.Доступность(0);
//		Форма.кДействия.Доступность(0);
		СписокДействий = глПолучитьСписокДействий("
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");	    

		Форма.кПодбор.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Общий,Основной",2);
	
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;

	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс; 
	СтараяДата = ДатаДок;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	глУстВидимостьЦен(Контекст);
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ТМЦ = Форма.Параметр Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если (ТекущийДокумент().Выбран() = 0) И (Склад <> Фирма.СкладВозврат) Тогда
		ИзмВозвратНеПроданной();
	КонецЕсли;	
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений);	
	
	
	//--- Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (27.10.14)
	ТекВидУпаковки = СоздатьОбъект("Справочник.ВидыУпаковки");
	СпВидыУпаковкиГлобальный = СоздатьОбъект("СписокЗначений");
	ТекВидУпаковки.ВыбратьЭлементы();
	Пока ТекВидУпаковки.ПолучитьЭлемент() = 1 Цикл
		Если ТекВидУпаковки.ПометкаУдаления() = 1 Тогда //--- пропускаем помеченные на удаление
			Продолжить;
		КонецЕсли;
		
		Если ТекВидУпаковки.Активна <> Перечисление.ДаНет.Да Тогда //--- пропускаем не активные
			Продолжить;
		КонецЕсли;
	
		Если ТекВидУпаковки.ЭтоГруппа() = 1 Тогда //--- пропускаем группы
			Продолжить;
		КонецЕсли;
		СпВидыУпаковкиГлобальный.ДобавитьЗначение(ТекВидУпаковки.ТекущийЭлемент());		
	КонецЦикла;
	//... Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (27.10.14)
	
	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "Розница") Тогда
		Форма.Проверено.Доступность(0);
	КонецЕсли;;
	
КонецПроцедуры
                
//======================================================================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

//======================================================================
Процедура ПриЗаписи()
	Если ТекущийДокумент().Выбран() = 0 Тогда
		глПроверкаДатыДок(Контекст,"Запись");
	КонецЕсли;
	Попытка
		АвтоВремяОтключить();
		Если МестоХранения = Фирма.СкладВозврат Тогда
			ДолжноБытьВремя = 30 * 60;
			ДБВСТР = "00:30:00";			
			УстановитьВремя(0,30,0);	
		Иначе			
			ДолжноБытьВремя = 13 * 3600;
			ДБВСТР = "13:00:00";			
			УстановитьВремя(13,0,0);
		КонецЕсли;
	Исключение 
		Ч = 0; М = 0; С = 0;
		Время = ПолучитьВремя(Ч, М, С);
		ЕстьВремя = Ч * 3600 + М * 60;
		
		Если ЕстьВремя <> ДолжноБытьВремя Тогда
			Сообщить("Данный документ должен проводиться временем: " + ДБВСТР + " фактическое время: " + Время);
		КонецЕсли;
	КонецПопытки;
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	СтрокаРеквизитовШапки = "";															//--- УМК Сандомирский В.Ю, (12.12.14) (Добавил непроверяемые поля) 	
	глРеквизитыШапкиДокумента(Контекст, СтрокаРеквизитовШапки);							//--- УМК Сандомирский В.Ю, (12.12.14) (Добавил непроверяемые поля) 
	Если глЕстьИзменения(Контекст, СтруктИзменений, СтрокаРеквизитовШапки) = 1 Тогда	//--- УМК Сандомирский В.Ю, (12.12.14) (Добавил непроверяемые поля) 	
		Автор = глПользователь;
	КонецЕсли;

	ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	глСохранитьЗначение(Контекст,"СубконтоВалДох",СубконтоВалДох);
КонецПроцедуры

//======================================================================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
		ИзмРеквизитШапки("ВидНДС");
		ФлагСтандОбр = 0;
	ИначеЕсли Рекв="Отпустил" Тогда
		КонтФирмы = Фирма;
		ФлагСтандОбр = 0;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);
	ИначеЕсли Рекв="ДокПродажи" Тогда
		ФлагСтандОбр = 0;
		Спис = СоздатьОбъект("СписокЗначений");
		Спис.Установить("Контрагент", Контрагент);
		Спис.Установить("Договор", Договор);
		Спис.Установить("ДокВозврата", ТекущийДокумент());
		Спис.Установить("ТМЦ", ТМЦ);
		
		Если (СпецВозврат = 1) ИЛИ (ВыбиратьУпаковку = 1) Тогда //--- УМК Сандомирский В.Ю, (29.01.15) если возврат непроданного не стоит то нужно отображать ваще все накладные продажи
			Спис.Установить("ВУП", ВУП);	
		КонецЕсли;

		ОткрытьФормуМодально("Обработка.ВыборРНВВозврате",Спис);
		Если ТипЗначенияСтр(Спис) = "СписокЗначений" Тогда
			РН = Спис.Получить("РН");
			Если ПустоеЗначение(РН) = 0 Тогда
				ДокПродажи = РН;
				ВУП = Спис.Получить("ВУП");
				ИзмДокПродажи();
			КонецЕсли;			
		КонецЕсли;
	ИначеЕсли Рекв="Касса" Тогда
		ВыборКассы();		
		ФлагСтандОбр = 0;			
	ИначеЕсли (Рекв = "ВУП") Тогда //--- УМК Сандомирский В.Ю, (27.10.14) 			
		ФлагСтандОбр = 0;		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаГрупУпаковок) <> 1) 
				И (Константа.УМК_ДатаНачалаГрупУпаковок <= ДатаДок)  Тогда 						
			// --- Строю локальный , разрешенный список для конкретного элемента
			СпВидыУпаковкиЛокальный = СоздатьОбъект("СписокЗначений");
			
			Если (СпецВозврат = 1) ИЛИ (Контрагент.Родитель.Код = "2041") ИЛИ (ВыбиратьУпаковку = 1) Тогда  //--- УМК Сандомирский В.Ю. (29.01.14) (23.03.15) выбор упаковок доступен только если возврат непроданного или контрагент-волк
				СпВидыУпаковкиЛокальный = глПолучитьСписокВидовУпаковкиДляТМЦ(ТМЦ,0,,,ВыбиратьПомеченные, 1);
			КонецЕсли;
				
			//СпВидыУпаковкиЛокальный.ДобавитьЗначение(НетУп);			
			СтрВидУпаковки = "";
			Если СпВидыУпаковкиЛокальный.ВыбратьЗначение(СтрВидУпаковки,,,,2) = 1 Тогда
			    ВУП = СтрВидУпаковки;
			КонецЕсли;			
		Иначе 				
			СтрВидУпаковки = "";
			Если СпВидыУпаковкиГлобальный.ВыбратьЗначение(СтрВидУпаковки,,,,2) = 1 Тогда
			    ВУП = СтрВидУпаковки;
			КонецЕсли;			
		КонецЕсли;	
	КонецЕсли;  //... УМК Сандомирский В.Ю, (27.10.14)	
КонецПроцедуры

//======================================================================
Процедура ПриОкончанииРедактированияСтроки()
	//Если (ДокПродажи.Выбран() = 0) И (ПустоеЗначение(Склад) = 1) Тогда
	//	Склад = Константа.НетДокументаОснования;
	//ИначеЕсли (ДокПродажи.Выбран() = 1) И (Склад = Константа.НетДокументаОснования) Тогда
	//	Склад = "";
	//КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ИзмТМЦ()
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
	    Склад = Константа.ОснСкладГП;
	КонецЕсли;
	глПриИзмененииТовара(Контекст);
	ИзмЦенаУчБезНДС();
КонецПроцедуры

//======================================================================
Процедура ЭкспортФилиалы()
	Если СокрЛП(Контрагент.ПутьДляЭкспортаРН) = "" Тогда
		Предупреждение("У контрагента не задан путь для экспорта РН");
		Возврат;
	КонецЕсли;
	
	Если Модифицированность() = 1 Тогда
	    Если Вопрос("Документ необходимо сохранить. Сохранить сейчас?", "Да+Нет") = "Нет" Тогда
			Возврат;
		Иначе
			ПриЗаписи();
			Записать();
	    КонецЕсли;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Экспорт");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Таб.ВывестиСекцию("ЭкспортФ");
	КонецЦикла;

	ИмяФайла = СокрЛП(Контрагент.ПутьДляЭкспортаРН) + "ВН_" + СокрЛП(НомерДок) + "_" + 
		СтрЗаменить(Строка(ДатаДок), ".", "") + ".mxl";
	Таб.Записать(ИмяФайла);
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
	    Сообщить("Экспорт выполнен успешно");
	Иначе
		Сообщить("Экспорт не удался");
	КонецЕсли;
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (08.01.15)
Процедура СкопироватьТоварныйСоставИзОснования()
	
	Если ПустоеЗначение(ДокументОснование) <> 1 Тогда
		Если ДокументОснование.Вид() = "РасходнаяНакладная" Тогда
			УдалитьСтроки();
			глСкопироватьТовСостав(Контекст,ДокументОснование);	
			ИзмВозвратНеПроданной();
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				РассчитатьУчЦенуИСумму();
			КонецЦикла;
		Иначе
			Предупреждение("Документ основание не РН !");	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // СкопироватьТоварныйСоставИзОснования()


//====================================================================== //--- УМК Сандомирский В.Ю, (26.05.14) при выборе схемы руками оставляем пометку 
Процедура ИзмСхемаРБ()
	ФлРучногоИзмСхемыРБ = 1;
КонецПроцедуры // ИзмСхемаРБ

//====================================================================== //--- УМК Сандомирский В.Ю, (25.08.14) при изменении Товара или Вуп ищем РН
Процедура НайтиРН()
	Если (ПустоеЗначение(ТМЦ) = 0) И (ПустоеЗначение(Контрагент) = 0) Тогда	
		//--- сформируем ТЗ из товаров РН накладных 
		ДатаНач = ДобавитьМесяц(ДатаДок,-2);  //---(расходки за два месяца назад)
		
		Если СпецВозврат = 1 Тогда
			ДатаКон = ДатаДок;
		Иначе
			ДатаКон = ДатаДок-1;
		КонецЕсли;
		
		ДокПродажи = "";
		
		ВыбТМЦ 			= ТМЦ;		
		ВыбКонтрагент 	= Контрагент;
		Если ПустоеЗначение(Договор) = 1 Тогда
			Дог = СоздатьОбъект("СписокЗначений");
			Дог.ДобавитьЗначение(ПолучитьПустоеЗначение("Документ"));
			Дог.ДобавитьЗначение(ПолучитьПустоеЗначение("Документ.Договор"));
		Иначе
			Дог = Договор;
		КонецЕсли;
		
		
		ЗапросПоДок = СоздатьОбъект("Запрос");
		ТекстЗапросаПоДок = "
		|Период с ДатаНач по ДатаКон;
		|Обрабатывать НеПомеченныеНаУдаление; 
		|ОбрабатыватьДокументы Проведенные;
		|ТекДок 		= Документ.РасходнаяНакладная.ТекущийДокумент;
		|ТекДог			= Документ.РасходнаяНакладная.Договор;
		|ТекКонтрагент 	= Документ.РасходнаяНакладная.Контрагент;
		|ТекТМЦ 		= Документ.РасходнаяНакладная.ТМЦ;
		|ТекВидУпаковки = Документ.РасходнаяНакладная.ВидУпаковки;
		|Группировка ТекДок упорядочить по ТекДок.ДатаДок;
		|Условие(ТекТМЦ = ВыбТМЦ);
		|Условие(ТекДог В (Дог));
		|Условие(ТекКонтрагент = ВыбКонтрагент);";
		
		Если (СпецВозврат = 1) ИЛИ (ВыбиратьУпаковку = 1) Тогда //--- УМК Сандомирский В.Ю. (29.01.15) при галочке возврат непроданной , иначе не фильтровать по упаковке		
			Если (ПустоеЗначение(ВУП) = 1) ИЛИ (ВУП = НетУп) Тогда
				ВыбВидУпаковки = НетУп;
				ТекстЗапросаПоДок = ТекстЗапросаПоДок + "
				|			
				|Условие((ТекВидУпаковки = ВыбВидУпаковки) ИЛИ (ПустоеЗначение(ТекВидУпаковки) = 1) ) ;";
			Иначе
				ВыбВидУпаковки = ВУП;
				ТекстЗапросаПоДок = ТекстЗапросаПоДок + "
				|			
				|Условие(ТекВидУпаковки = ВыбВидУпаковки);";
			КонецЕсли;		
		КонецЕсли;
		
		Если ЗапросПоДок.Выполнить(ТекстЗапросаПоДок)=1 Тогда	
			Пока ЗапросПоДок.Группировка(1,-1) = 1 Цикл //--- обратный обход
				ДокПродажи = ЗапросПоДок.ТекДок;
				ИзмДокПродажи();
				Прервать;
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры // НайтиРН


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

//======================================================================
Функция ПолучитьПланРаскраски()
	
	Если ПустоеЗначение(ДокПродажи)=0 Тогда
		Если ((ДатаДок - ДокПродажи.ДатаДок) >= 60) Тогда
			Возврат  "(BRUSH["+глПолучитьЦвет(250, 220, 223)+"])()()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат  глРаскраска();
	
КонецФункции // 

// =============================== 
Процедура Экспор()
	Если (Ф1 = 0) И (Контрагент.РазрешитьЭкспортФ2 = 0) Тогда
		Предупреждение("Экспорт возможен только для ВН по Ф1 либо для отдельных контрагентов");
		Возврат;
	КонецЕсли;
	Если Выгружена = 1 Тогда
		Предупреждение("Накладная уже выгружена");
		Возврат;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
	    Если Вопрос("Документ необходимо сохранить. Сохранить сейчас?", "Да+Нет") = "Нет" Тогда
			Возврат;
		Иначе
			ПриЗаписи();
			Записать();
	    КонецЕсли;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Экспорт");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ПечДляПечати = глПолучитьДляПечатиУпаковки(ТМЦ,ВУП, ?(ПустоеЗначение(ДокПродажи.ДатаДок) = 0, ДокПродажи.ДатаДок, ДатаДок));
		Род = глВернутьВерхнегоРодителя(ВУП);
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;

	ИмяКонтрагента = СтрЗаменить(Строка(Контрагент), ",", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, ".", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, """", "");
	
	ИмяФайла = СокрЛП(Константа.ПутьЭкспортаВН) + СокрЛП(НомерДок) + "_" + 
		СтрЗаменить(Строка(ДатаДок), ".", "") + "_" + ИмяКонтрагента + ".mxl";
	Таб.Записать(ИмяФайла);
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
	    Сообщить("Экспорт выполнен успешно");
		Выгружена = 1;        
	Иначе
		Сообщить("Экспорт не удался");
		Выгружена = 0;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура Обороты()
	Если ПустоеЗначение(ТМЦ) = 0 Тогда
		Расшифровка = СоздатьОбъект("СписокЗначений");
	    Расшифровка.Установить("Отчет", "Обороты");
			
		Расшифровка.Установить("Дата1", 		ДобавитьМесяц(ДатаДок, -1));
	    Расшифровка.Установить("Дата2", 		ДатаДок);
	
		Расшифровка.Установить("ВыбФирма",			Фирма);
		Расшифровка.Установить("фТолькоКво",		0);
		Расшифровка.Установить("ВыбНоменклатура",	ТМЦ);
		Расшифровка.Установить("ВыбПокупатель",		Контрагент);
		Расшифровка.Установить("ргВозвр",			3);
		Расшифровка.Установить("ргВП",				1);

		Группировки = СоздатьОбъект("СписокЗначений");
		Группировки.ДобавитьЗначение("Покупатель", 		"Покупатель");
		Группировки.ДобавитьЗначение("Номенклатура",   	"Номенклатура");
		Группировки.ДобавитьЗначение("ВидУпаковки",   	"Вид упаковки");
		Группировки.ДобавитьЗначение("ФормаУпаковки",   "Форма упаковки");
		Группировки.ДобавитьЗначение("КатегорияЦен",   	"Категория цены");
		Группировки.ДобавитьЗначение("ЧерезКого", 	    "Через кого");
		Группировки.ДобавитьЗначение("Договор", 	    "Договор");
		Группировки.ДобавитьЗначение("Поставщик", 	    "Поставщик");           
		Группировки.ДобавитьЗначение("Счет", 	        "Счет учета");
		Группировки.ДобавитьЗначение("РегионПоставщика","Регион поставщика");
		Группировки.ДобавитьЗначение("РегионПокупателя","Регион покупателя");
		Группировки.ДобавитьЗначение("ВидДеятельности", "Вид деятельности");
		Группировки.ДобавитьЗначение("Партия",			"Партия");
		Группировки.ДобавитьЗначение("Документ", 	    "Документ движения");
		Группировки.Пометка(Группировки.РазмерСписка(), 1);
		
		Расшифровка.Установить("Группировки",	Группировки);
		Расшифровка.Установить("фБезГрупп",		1);	
		Расшифровка.Установить("СписокПериодов", 1);	
		Расшифровка.Установить("фЗакупка",	0);
		Расшифровка.Установить("фПродажа",	1);
		Расшифровка.Установить("фДоход",	0);
		Расшифровка.Установить("фСуммаУп",0);
		Расшифровка.Установить("фСуммаВЦенах",0);
	
		глФлагРасшифровки = 1;
		глОбновить = 2;
		глРасшифровка = Расшифровка;
		
		ОткрытьФорму("Отчет.Обороты");
	КонецЕсли;
КонецПроцедуры // Обороты

//======================================================================
Функция СуммаБезСкидки()
	Возврат Окр(ЦенаБезСкидки * Кво, 2);
КонецФункции // гл

//======================================================================
Процедура РассчитатьЦенуВСтроке()	
	ЦенаСНДС = глВернутьЦену(ТМЦ, КатегорияЦен, ДатаДок, Гривня,, 1) + глПолучитьЦенуВУП(Контекст, КатегорияЦен, ДатаДок, Гривня, ДатаДок, ТМЦ);
	Если ПустоеЗначение(УстановкаСкидокТМЦ) = 0 Тогда
		ЕстьАкция = 0;
		глУстановитьСкидкуПоАкции(Контекст, ЦенаСНДС, ТМЦ, ЕстьАкция, КатегорияЦен);
	КонецЕсли;
	
	глВыч_Суммы_Накл(Контекст,1);	
КонецПроцедуры // 

//======================================================================
Процедура ИзмУстановкаСкидок()
	Если Контрагент.БратьЦенуВозвратаИзЦен = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			РассчитатьЦенуВСтроке();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ИзмУстановкаСкидок

Функция УбратьЛишнее(Стр)
	Возврат СтрЗаменить(СтрЗаменить(Стр, " ", ""), ",", ".");
КонецФункции

//-------------------------------  //---УМК Сандомирский В.Ю, (20.11.14)
Процедура Импорт(ИмФл = "")	
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;

	НачатьТранзакцию();
	Таб = СоздатьОбъект("Таблица");
	СтНДС = ВидНДС.Ставка.Получить(ДатаДок);
	ИмКатал = СокрЛП(Константа.ПутьИмпортаФилиалы);
	
	Если ИмФл = "" Тогда
		Если ФС.ВыбратьФайл(0,ИмФл, ИмКатал, "Выберите файл импорта", "Файлы mxl (ВП_*.mxl)|ВП_*.mxl") = 0 Тогда
			Возврат;
		КонецЕсли;
		ИмФл = ИмКатал + ИмФл;
	КонецЕсли;
	Таб.Открыть(ИмФл);	

	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");	
	СпрВУП = СоздатьОбъект("Справочник.ВидыУпаковки");
	
	ДатаДок 				= Дата(Таб.Область(1, 6).Текст);
	Примечание				= СокрЛП(Таб.Область(1, 10).Текст);		//--- Сандомирский В.Ю. (импорт примечания) 07.04.14 

	Инд = 2;		
	ЕстьОшибки = 0;
	Пока СокрЛП(Таб.Область(Инд, 1).Текст) <> "" Цикл
		НоваяСтрока();
		Код = СокрЛП(Таб.Область(Инд, 2).Текст);
		Если СпрТМЦ.НайтиПоКоду(Код, 0) = 0 Тогда
			Сообщить("В строке: " + Инд + " не удалось импортировать товар");
			ЕстьОшибки = 1;
		Иначе
			ТМЦ = СпрТМЦ.ТекущийЭлемент();
			ИзмТМЦ();			
		КонецЕсли;
		
		Кво = Число(УбратьЛишнее(Таб.Область(Инд, 3).Текст));

		КодВУП 	= Число(СокрЛП(Таб.Область(Инд, 10).Текст));		
		Если (КодВУП <> 0) И (ПустоеЗначение(ТМЦ) = 0) Тогда
			Если СпрВУП.НайтиПоКоду(КодВУП, 0) = 0 Тогда			
				Сообщить("В строке: " + Инд + " не удалось импортировать вид упаковки");
				ЕстьОшибки = 1;
			Иначе
				ВУП = СпрВУП.ТекущийЭлемент();
				РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВУП);
				Если ПустоеЗначение(РВУ) = 1 Тогда
					Сообщить("В строке: " + Инд + " не удалось найти разрешенный вид упаковки");
				КонецЕсли;
			КонецЕсли;			
		КонецЕсли;
		
		ЦенаБезНДС = Число(УбратьЛишнее(Таб.Область(Инд, 4).Текст));
		ЦенаСНДС = Число(УбратьЛишнее(Таб.Область(Инд, 5).Текст));
		СуммаБезНДС = Число(УбратьЛишнее(Таб.Область(Инд, 6).Текст));
		НДС = Число(УбратьЛишнее(Таб.Область(Инд, 7).Текст));
		СуммаСНДС = Число(УбратьЛишнее(Таб.Область(Инд, 8).Текст));
		НайтиРН();
		
		Инд = Инд + 1;
	КонецЦикла;
	
	Если ЕстьОшибки = 1 Тогда
		Предупреждение("При импорте были ошибки");
	КонецЕсли;
	
	Отв = Вопрос("Импорт завершён. Удалить файл?", "Да+Нет");
	Если Отв = "Да" Тогда
		ФС.УдалитьФайл(ИмФл);
	КонецЕсли;
КонецПроцедуры

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|ОбновлениеЦен,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");
