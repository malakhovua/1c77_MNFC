Перем ПересчКво, ПервыйДок, ПоЗаказу;
Перем Товар;
Перем СчетНДС,СубконтоНДС1,СубконтоНДС2; // для бартера
Перем ВремРег;       
Перем спОтбор;               
Перем НДСПервоеСобытие, НДСВтороеСобытие, ВзаиморасчетыГрн; // для исправления ошибок при округлениях
Перем ТБДоступно;

Перем СписыватьМатериалУпаковки; // + umk
Перем КассовыйМетодБонусы; // + umk

//======================================================================
Процедура ПроверкаДублейСтрок()
	Если (Константа.ПроверятьДублиСтрок = Да) ИЛИ (Контрагент.КонтролироватьВозврат = 1) Тогда
		СписУжеБыло = СоздатьОбъект("СписокЗначений");
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Стр = ЗначениеВСтрокуВнутр(ТМЦ) + "\" + ЗначениеВСтрокуВнутр(?(ПустоеЗначение(ВУП) = 1, НетУп, ВУП)) + "\" + ЗначениеВСтрокуВнутр(ДокПродажи);

			Поз = СписУжеБыло.НайтиЗначение(Стр); 			
			Если Поз <> 0 Тогда
				Сообщить("В строке: " + Строка(НомерСтроки) + " обнарежена продукция / документ продажи, которые уже есть в строке: " + Строка(Поз));
				глВсеВыбрано = 0;
			КонецЕсли;
			
			СписУжеБыло.ДобавитьЗначение(Стр);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // гл

// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
//	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Фирма,"Фирма");
    глВыбранЛи(Контрагент,"Контрагент");
    глВыбранЛи(МестоХранения,"Место хранения");
    глВыбранЛи(Валюта,"Валюта");
    глВыбранЛи(ВидТорговли,"Вид торговли");
    глВыбранЛи(СубконтоВалДох,"Субконто валовых доходов");
    глВыбранЛи(Подразделение,"Подразделение");
    глВыбранЛи(СчетКонтрагента,"Счет контрагента");
	Если глВсеВыбрано = 1 Тогда
		Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
			глКомментарий("Счет контрагента ("+СчетКонтрагента+") не является счетом учета взаиморасчетов!",1,,"!");
		    глВсеВыбрано = 0;
		ИначеЕсли (Валюта = Гривня)
		И (СчетКонтрагента.Валютный = 1) Тогда
			глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
			глВсеВыбрано = 0;       
		ИначеЕсли (Валюта <> Гривня)
		И (СчетКонтрагента.Валютный = 0) Тогда
			глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;	
	КонецЕсли;	
  	ПроверкаДублейСтрок();
    Если МестоХранения.ВидСклада = Розничный Тогда
        глКомментарий("Накладная предназначена для отгрузки ТМЦ с ОПТОВОГО склада, а не РОЗНИЧНОГО (магазина)!",0,,"!");
        глКомментарий("Проверьте параметры склада!",2);
        глВсеВыбрано = 0;
	КонецЕсли;
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		глВыбранЛи(Касса,"Касса");
	КонецЕсли;          
	глВыбранЛи(ВидНДС,"Вид НДС");
	Если Валюта <> Гривня Тогда
	    Если ВидТорговли <> Перечисление.ВидыТорговли.Предоплата Тогда
			глКомментарий("Продавать за валюту можно только на условиях предоплаты!",0,,"!");
    		глВсеВыбрано = 0;
		КонецЕсли;           
		Если ВидНДС = ОсновнаяСтавкаНДС Тогда
			// это явная ошибка, запрещаем проведение 
        	глКомментарий("При продаже за валюту нельзя указывать НДС!",0,,"!");
    		глВсеВыбрано = 0;
		ИначеЕсли ВидНДС <> ЛьготнаяСтавкаНДС Тогда
			// просто предупредим, но жестко не запрещаем
		    глКомментарий("Отгрузка за валюту вероятно должна проходить по ставке НДС """+ЛьготнаяСтавкаНДС+"""!",2)
		КонецЕсли;	
    КонецЕсли;    
	глПроверкаНДСВДокументе(Контекст, Итог("СуммаБезНДС"), Итог("СуммаСНДС"), Итог("НДС"));
    Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
    глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
    глВыбранЛи(ТМЦ.ВидДеятельности,"Вид деятельности в ТМЦ",НомерСтроки);  
	Если ПустоеЗначение(ДокПродажи) = 1 Тогда
		Сообщить("Не выбран документ продажи в строке: " + НомерСтроки);
		Если НазваниеНабораПрав() = "Заказ" Тогда
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(ДокПродажи) = 0 Тогда
		Если ДокПродажи.Контрагент <> Контрагент Тогда
			Сообщить("В строке: " + Строка(НомерСтроки) + " указана расходная накладная другого контрагента");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	
	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
	ЕстьКалькулируемыеУслуги = 0;
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		Если глПолучитьНормы(ТМЦ,,1,ДатаДок,ПоЗаказу,,1)=1 Тогда // калькулируемая услуга
			ЕстьКалькулируемыеУслуги = 1;
			Если глВсеВыбрано = 1 Тогда
				Если (ТМЦ.ВидДеятельности.ПозаказноеПроизводство = Да) И (ПустоеЗначение(ПоЗаказу) = 1) Тогда
					глКомментарий("В строке "+НомерСтроки+" выбрана услуга, в карточке которой указан вид деятельности с позаказным производством!",0,,"!");
					глВсеВыбрано = 0;                         
				ИначеЕсли (ТМЦ.ВидДеятельности.ПозаказноеПроизводство = Нет) И (ПустоеЗначение(ПоЗаказу) = 0) Тогда
					глКомментарий("В строке "+НомерСтроки+" выбрана услуга, в карточке которой указан вид деятельности с непозаказным производством!",0,,"!");
					глВсеВыбрано = 0;                         
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ЕстьКалькулируемыеУслуги = 1 Тогда
		глВыбранЛи(ПодразделениеПроизв,"Подразделение производства");
		глПроверитьТипПодразделения(ПодразделениеПроизв,"подразделения производства");
	КонецЕсли;
	
	Если Контрагент.КонтролироватьВозврат = 1 Тогда	
		Если ПустоеЗначение(ДокПродажи) = 0 Тогда
			КвоДоступно = 0;
			Стр = 0;
			Если ТБДоступно.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
				ТБДоступно.ПолучитьСтрокуПоНомеру(Стр);
				Пока ТБДоступно.ТМЦ = ТМЦ Цикл
					Если (ТБДоступно.ВУП = ?(ПустоеЗначение(ВУП) = 1, НетУп, ВУП)) И (ТБДоступно.РН = ДокПродажи) Тогда
						КвоДоступно = ТБДоступно.Кво;
						Прервать;
					КонецЕсли;
					Стр = Стр + 1;
					Если Стр > ТБДоступно.КоличествоСтрок() Тогда
						Прервать;
					Иначе
						ТБДоступно.ПолучитьСтрокуПоНомеру(Стр);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если КвоДоступно < Кво Тогда
				Сообщить("В строке: " + Строка(НомерСтроки) + " указано количество: " + Строка(Кво) + " больше, чем разрешённое для этой накладной: " + Строка(КвоДоступно));
				Если (НазваниеНабораПрав() <> "Администратор") И (НазваниеНабораПрав() <> "ПрочиеВыписка") Тогда
					глВсеВыбрано = 0;
				КонецЕсли;
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
	
    Возврат глВсеВыбрано;
КонецФункции
                       
// ===============================
Процедура РассчитатьШапку()
	// определяем заказ в документе для проводок по услугам
	ПоЗаказу = глПолучитьЗаказ(Договор);

	//ПервыйДок = ?(ПустоеЗначение(Договор)=1,ПолучитьПустоеЗначение("Документ"),Договор);
	ПервыйДок = ?(Контрагент.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,Договор, Контрагент.БазДоговор); //  + umk
	
	
	СчетНДС = СчетПоКоду("64.1.5");
	СубконтоНДС1 = ВидНДС;
	СубконтоНДС2 = 0;
	// налоговый кредит
	Если Константа.НДСпоВходящимНН = Да Тогда
		// проводку по налоговому кредиту сделаем в 
		// документе ЗаписьКнигиПриобретения
		СчетНДС = СчетПоКоду("64.4.2");
		СубконтоНДС1 = Контрагент;
		СубконтоНДС2 = ПервыйДок;
	КонецЕсли;
	ИтСуммаБезНДС = Итог("СуммаБезНДС");
	
	// расчет итогов по взаиморасчетам
	ФлагОтгрузки = 1;	
	ЗнакОплаты = +1; 
	
	ВремРег = СоздатьОбъект("Регистры");
	// взаиморасчеты с поставщиком        
	глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,ЗнакОплаты,Контрагент, ПервыйДок, Валюта);
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда    
		глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,-ЗнакОплаты,Контрагент, ПервыйДок, Валюта);
	КонецЕсли;	
	
	Если Контрагент.КонтролироватьВозврат = 1 Тогда
		ТБДоступно = СоздатьОбъект("ТаблицаЗначений");
		ТБДоступно.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
		ТБДоступно.НоваяКолонка("ВУП", "Справочник.ВидыУпаковки");
		ТБДоступно.НоваяКолонка("РН", "Документ");
		ТБДоступно.НоваяКолонка("Кво", "Число");
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ТБДоступно.НоваяСтрока();
			ТБДоступно.ТМЦ = ТМЦ;
			ТБДоступно.ВУП = ?(ПустоеЗначение(ВУП) = 1, НетУп, ВУП);
			ТБДоступно.РН = ДокПродажи;
			Если ПустоеЗначение(ДокПродажи) = 0 Тогда
				ДокПродажи.ВыбратьСтроки();
				Пока ДокПродажи.ПолучитьСтроку() = 1 Цикл
					Если (ДокПродажи.ТМЦ = ТМЦ) И (?(ПустоеЗначение(ДокПродажи.ВидУпаковки) = 1, НетУп, ДокПродажи.ВидУпаковки) = ТБДоступно.ВУП) Тогда
						ТБДоступно.Кво = ТБДоступно.Кво + ДокПродажи.Кво;
						ДокВН = СоздатьОбъект("Документ");
						ДокВН.УстановитьФильтр(1, 0);
						ДокВН.ВыбратьПодчиненныеДокументы(,, ДокПродажи);
						Пока ДокВН.ПолучитьДокумент() = 1 Цикл
							Если (ДокВН.Вид() = "ВозвратнаяНакладная") И (ДокВН.ТекущийДокумент() <> ТекущийДокумент()) Тогда
								ДокВН.ВыбратьСтроки();
								Пока ДокВН.ПолучитьСтроку() = 1 Цикл
									Если (ДокВН.ТМЦ = ТМЦ) И (?(ПустоеЗначение(ДокВН.ВУП) = 1, НетУп, ДокВН.ВУП) = ТБДоступно.ВУП) И (ДокВН.ДокПродажи = ДокПродажи) Тогда
										ТБДоступно.Кво = ТБДоступно.Кво - ДокВН.Кво;
										Прервать;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЦикла;						
						Прервать;
					КонецЕсли;
				КонецЦикла;
			Иначе
				ТБДоступно.Кво = Кво;
			КонецЕсли;			
		КонецЦикла;		
		ТБДоступно.Сортировать("ТМЦ,ВУП,РН");
	КонецЕсли;		
КонецПроцедуры

// формирует проводки по списанию ТМЦ
// ===============================
Процедура ПроводкиТовар(СписываемыйТМЦ,СчетП,СчетПТары,СписываемыйОстаток,СписываемаяСтоимость,ПоставкаП)
	Если (ВидТары = Перечисление.ВидыТары.Залоговая)
	И (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
		СубконтоДебетТары1 = ?(СчетП=СчетПоКоду("2843"),Контрагент,МестоХранения);
		СубконтоКредитТары1 = ?(СчетПТары=СчетПоКоду("2843"),Контрагент,МестоХранения);
		// проводки для тары
		глПроводка(Контекст,СчетП,СчетПТары,-СписываемаяСтоимость,"Себестоимость",-СписываемыйОстаток, СубконтоДебетТары1,СписываемыйТМЦ,ПоставкаП,
		СубконтоКредитТары1,СписываемыйТМЦ,ПоставкаП, ,,"НК",1,0);
	Иначе	
	// проводки для обычного ТМЦ
		СчРеал = глСчетРеализации(СписываемыйТМЦ);
		// проводки по реализации ...
		Если СписываемыйТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			// услуг
			глПроводка(Контекст,СчРеал,СчетП,СписываемаяСтоимость,"Реализация: услуги",СписываемыйОстаток,ТМЦ.ВидДеятельности,ПодразделениеПроизв,ТМЦ.ВидЗатрат,
			ТМЦ.ВидДеятельности,ПодразделениеПроизв,ТМЦ.ВидЗатрат,,,"ОУ",1,0);
		Иначе	    
			// обычных ТМЦ 
			Если (СписываемыйТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция) Или (СписываемыйТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Товар) 
					Или (ИспользоватьСчетаРасходов = Класс9) Тогда
				глПроводка(Контекст,СчРеал,СчетП,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток,СписываемыйТМЦ.ВидДеятельности,Подразделение,,
				?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),СписываемыйТМЦ,ПоставкаП, ,,"НК",1,0);
			Иначе
				глПроводкаПоЗатратам(Контекст,СчРеал,СчетП,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток, СписываемыйТМЦ.ВидДеятельности,Подразделение,Константа.ВидЗатратСебестРеалПроизвЗапасов,
				?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),СписываемыйТМЦ,ПоставкаП, ,, "НК",1,0);
			КонецЕсли;
			// для возвратной тары сделаем проводку по забалансовому счету
			Если (ВидТары = Перечисление.ВидыТары.Возвратная)
			И (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
				глПроводка(Контекст,СчетПТары,,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток, Контрагент,СписываемыйТМЦ,,
				,,, ,,"НК",1,0);
			КонецЕсли;	
		КонецЕсли;	      
	Конецесли;

КонецПроцедуры

// ===============================
Процедура ДвиженияПартии() 
Перем ИтогСуммаСНДС, ИтогНДС;	// базы распределения сумм

	глКомментарий("Выполняются движения партий ТМЦ",2);
	ФлагПрихода = 1;

	// инициализация алгоритмов корректого распределения
	глОчиститьКлючОкр("Взаим");
	глОчиститьКлючОкр("НДС");
	глОчиститьКлючОкр("НДСперв");

	// расчитаем базы распределения 
	глОпределитьБазыРаспределения(Контекст, ИтогСуммаСНДС, ИтогНДС);
	ИтогСуммаСНДС		= глПересчет(ИтогСуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
	ИтогНДС 			= глПересчет(ИтогНДС      ,Валюта,ДатаДок,Гривня,ДатаДок);
	НДСпоВзаиморасчетам	= НДСПервоеСобытие + НДСВтороеСобытие;
	ФирмаПрихода = Контрагент.ФирмаПрихода.Получить(ДатаДок);
	СкладПрихода = Контрагент.МестоХранения.Получить(ДатаДок);

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ССЦенаУпаковки = 0;
		Если (ПустоеЗначение(ВУП) = 0) И (ВУП <> НетУп) Тогда
			РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВУП);
			Если ПустоеЗначение(РВУ) = 0 Тогда
				ССЦенаУпаковки = РВУ.Себестоимость.Получить(ДатаДок);
			КонецЕсли;
		КонецЕсли;
		
//		Признак = ?(СпецВозврат = 1, "О", "");
		Признак = ?(ПустоеЗначение(ВУП) = 1, НетУп, ВУП);

		ПриходОстатокТовара = Кво * Ед.Коэффициент;                      

		// Приходуем не проверяя:
		МестоХраненияП = ?(глПартионныйУчетПоСкладам = Да,?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),0);

		// движения по регистру Остатки                                                                          
		глПровестиОстатки(Контекст, ВремРег, Фирма, ?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад), ТМЦ, ВУП ,ПриходОстатокТовара, ФлагПрихода, 1,,,,,,,,,,,
			ФирмаПрихода,СкладПрихода);

		МетодРасчетаСебестоимости = глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок);				
		Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
			ПоставщикП = 0;
			ПоставкаП = 0;
			ПрихДокументП = 0;
		Иначе
			ПоставщикП = Контрагент;
			ПоставкаП = ТекущийДокумент();
			ПрихДокументП = ТекущийДокумент();
		КонецЕсли;

		// СуммаУчБезНДС - в гривнях
		ПриходСтоимость = СуммаУчБезНДС;
		ПриходПродСтоимость = 0;

		// Сумму по строке пересчитываем по курсу документа в гривни 
		ПострСуммаСНДС	= глПересчет(СуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
		ПострНДС		= глПересчет(НДС      ,Валюта,ДатаДок,Гривня,ДатаДок);
		Если (ВидТары <> Перечисление.ВидыТары.Залоговая) Или (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			// не залоговая тара, округляем с учетом накопленных погрешностей округления
			ПострСуммаСНДС	= глОкрКорр("Взаим", ?(ИтогСуммаСНДС = 0, 0, -ВзаиморасчетыГрн * ПострСуммаСНДС / ИтогСуммаСНДС),2);
			ПострНДС		= глОкрКорр("НДС", ?(ИтогНДС = 0, 0, -НДСпоВзаиморасчетам * ПострНДС / ИтогНДС),2);
			ПострНДСПерв	= глОкрКорр("НДСперв", ?(НДСпоВзаиморасчетам = 0, 0, НДСПервоеСобытие * ПострНДС / НДСпоВзаиморасчетам),2);
		Иначе
			ПострНДСПерв	= 0;
		КонецЕсли;
		ПострСуммаБезНДС 	= ПострСуммаСНДС - ПострНДС;
		ОсталосьСуммаСНДС	= ПострСуммаСНДС;
		ОсталосьСуммаБезНДС	= ПострСуммаБезНДС;

		СчетТМЦ = ТМЦ.Счет;
		Доход = ОсталосьСуммаСНДС - ПриходСтоимость; // сторнируем доход
		
		// сразу сделаем проводки по доходам, при формировании они сами свернуться
		Если (ВидТары <> Перечисление.ВидыТары.Залоговая) Или (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			// залоговая тара не проходит по взаиморасчетам
			глПроводка(Контекст,"70.4",,ПострСуммаСНДС,"Возврат от покупателя",, ТМЦ.ВидДеятельности,Подразделение,?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),
			,,, ,,"НК",1,"Реализация");					
		КонецЕсли;
		Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
			// одновременно и отгрузка и оплата, налоговые обязательства показываем на всю сумму
		    глПроводка(Контекст,"70.4",,-ПострНДС,"НДС: оплата наличными: сторно",, ТМЦ.ВидДеятельности,Подразделение,?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),
			,,, ,,"НК",1,"НДС первого события");
		Иначе
			// в случае бартера и предоплаты НДС состоит из части по первому событию и остального, 			
			// проводка для первого события
			глПроводка(Контекст,"70.4",,-ПострНДСПерв,"НДС: сторно : первое событие",, ТМЦ.ВидДеятельности,Подразделение,?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),
				,,, ,,"НК",1,"НДС первого события");                  
			// проводка для второго события
			глПроводка(Контекст,"70.4",,-(ПострНДС-ПострНДСПерв),"НДС: сторно : второе событие",, ТМЦ.ВидДеятельности,Подразделение,?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),
			,,, ,,"НК",1,"НДС второго события");
		Конецесли;		
		// проводки и движения по услугам отдельно
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			// получаем нормы
			Если глПолучитьНормы(ТМЦ,,1,ДатаДок,ПоЗаказу,,1)=1 Тогда
				// калькулируемая услуга
				СчетУч = ТМЦ.Счет;
				СчетУч = ?((ПустоеЗначение(СчетУч)=1) Или (СчетУч = СчетПоКоду("231")),СчетПоКоду("24"),СчетУч);
			Иначе
				Если СуммаУчБезНДС <> 0 Тогда
					глКомментарий(Шаблон("Строка [НомерСтроки]. Для некалькулируемой услуги [ТМЦ] указана ненулевая учетная стоимость. Будут созданы сторнирующие проводки."),0);
				КонецЕсли;
				Доход = 0;
				СчетУч = ТМЦ.Счет;
			КонецЕсли;
			
			
			ПроводкиТовар(ТМЦ,СчетУч,0,-ПриходОстатокТовара,-ПриходСтоимость,ПоставкаП);
			глПровестиПартию(Контекст, 1, 1, Фирма, ТМЦ, СчетУч, МестоХраненияП, 0,
				ПоставкаП, ПоставкаП, ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость, 
				СторноПродажаУслуги, 1, ПострСуммаСНДС, Доход,,Признак,,ЧерезКого,ДопКво,,ФирмаПрихода, СкладПрихода,, ССЦенаУпаковки * ПриходОстатокТовара);
			Продолжить;
		КонецЕсли;
		// определим код операции
		Если (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара)
		и (ВидТары <> Перечисление.ВидыТары.Покупная) Тогда
			// залоговая или возвратная тара
			Если ВидТары = Перечисление.ВидыТары.Залоговая Тогда
				// залоговая тара
				КодОперации = ВозвратТарыЗалоговойОтПокупателя;
			Иначе
				// возвратная тара
				КодОперации = ВозвратТарыВозвратнойОтПокупателя;
			КонецЕсли;
		Иначе
			// ТМЦ или покупная тара
			// с покупной тарой работаем, как с ТМЦ
			КодОперации = ВозвратОтПокупателя;
		КонецЕсли;

		
		//--- УМК Сандомирский В.Ю. (30.09.14) в остатки тмц в партии ТМЦ для приходования
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 			
			ТМПЦПрих = ?(ПустоеЗначение(ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляПрихода.Получить(ДатаДок), ТМЦ);
			ТМЦПартии = ТМПЦПрих; 			
		Иначе		
			ТМЦПартии = ТМЦ;	
		КонецЕсли;	
		
		СуммаУпаковки = 0;
		Если СпецВозврат = 1 Тогда //--- УМК Сандомирский В.Ю. (10.02.15) 
			Если ПустоеЗначение(ДокПродажи) <> 1 Тогда
				ЦенаУпаковки = глПолучитьЦенуУпаковки(ТМЦПартии,ВУП,ДокПродажи.ДатаДок);
				СуммаУпаковки = ЦенаУпаковки * ПриходОстатокТовара;
			КонецЕсли;	
		КонецЕсли;
		
		глПровестиПартию(Контекст, 1, 1, Фирма, ТМЦПартии, СчетТМЦ, МестоХраненияП, ПоставщикП,    //--- УМК Сандомирский В.Ю. (30.09.14) ТМЦПартии в остатки тмц в партии ТМЦ для приходования
			ПоставкаП, ПрихДокументП, ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость, 
			КодОперации, 1, ПострСуммаСНДС, Доход,,Признак,,ЧерезКого, ДопКво,СуммаУпаковки,ФирмаПрихода, СкладПрихода,, ССЦенаУпаковки * ПриходОстатокТовара); //--- УМК Сандомирский В.Ю. (10.02.15) 
	
		Если (ВидТары <> Перечисление.ВидыТары.Покупная)
		и (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
			Если ВидТары = Перечисление.ВидыТары.Залоговая Тогда
				СчетПТары = ГлПолучитьСчетУчетаТМЦ("ТараЗалоговая",ТМЦ);
			Иначе
				СчетПТары = СчетПоКоду("ТВ");
				ПриходНДС = 0;
			КонецЕсли;                       
			// Параметры проведения для возвратной тары
			МестоХраненияП = Контрагент;
			ПрихДокументП = ТекущийДокумент();
			ПриходПродСтоимость = СуммаСНДС;
			глПровестиПартию(Контекст, 0, 1, Фирма, ТМЦ, СчетПТары, МестоХраненияП, ПоставщикП, 
				ПоставкаП, ПрихДокументП,ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость,
				КодОперации,0 ,0, 0,,Признак,,ЧерезКого,,,ФирмаПрихода, СкладПрихода,, ССЦенаУпаковки * ПриходОстатокТовара);
		КонецЕсли;	
			
		ПроводкиТовар(ТМЦПартии,СчетТМЦ,СчетПТары,-ПриходОстатокТовара,-ПриходСтоимость,ПоставкаП);//--- УМК Сандомирский В.Ю. (30.09.14) ТМЦПартии в остатки тмц в партии ТМЦ для приходования		
	КонецЦикла;
КонецПроцедуры

// ===============================
// Назначение:
//		Отражает движения документа в регистрах
// ===============================
Процедура ДвиженияВзаиморасчеты()
	
	// + umk
	КонтрагентРасчетов = Контрагент;// + umk
	
	// + umk
	//Если КассовыйМетодБонусы = 1 Тогда	
	//	ОсновнойПартнер = глОсновнойКонтрагентИерархии(Контрагент.Родитель,Контрагент);
	//	Если ПустоеЗначение(ОсновнойПартнер) = 0 Тогда
	//		КонтрагентРасчетов = ОсновнойПартнер;
	//	КонецЕсли;
	//КонецЕсли;
	// - umk
	
	
	// взаиморасчеты
	ФлагОтгрузки = 1;
	ЗнакОплаты = -1; 
	тбСуммыПогашения = глПолучитьСуммыДляПогашения(Контекст, Фирма, Валюта);
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРег, Фирма, ЗнакОплаты, КонтрагентРасчетов, ПервыйДок, Валюта);
	
	Если (тбСуммыПогашения.Итог("СуммаСНДС") = 0) И (Итог("СуммаСНДС") = 0) Тогда
		//Если тбДолги.КоличествоСтрок() <> 0 Тогда
		//	тбДолги.ПолучитьСтрокуПоНомеру(1);
		//	Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, Контрагент, Договор, ВидНДС, тбДолги.Счет, тбДолги.КредДокумент, Валюта, 0.01, 0.01, ВозвратПостОтгрузки, 0, 0, 1);
		//	Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, Контрагент, Договор, ВидНДС, тбДолги.Счет, тбДолги.КредДокумент, Валюта, -0.01, -0.01, ВозвратПостОтгрузки, 0, 0, 1);
		//Иначе			
			Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, КонтрагентРасчетов, Договор, ВидНДС, ТекущийДокумент(), ТекущийДокумент(), Валюта, 0.01, 0.01, ВозвратАвансовойОплаты, 0, 0, 1);
			Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, КонтрагентРасчетов, Договор, ВидНДС, ТекущийДокумент(), ТекущийДокумент(), Валюта, -0.01, -0.01, ВозвратАвансовойОплаты, 0, 0, 1);
		//КонецЕсли;		
	Иначе
		глПровестиПоВзаиморасчетам(Контекст, ФлагОтгрузки, ЗнакОплаты, 1, Фирма, тбДолги, тбСуммыПогашения, Валюта,КонтрагентРасчетов, ПервыйДок, ВидТорговли, ДокументОснование);
	КонецЕсли;
	
	НДСПервоеСобытие = 0;
	НДСВтороеСобытие = 0;
	ВзаиморасчетыГрн = 0;
	РегПоставщики=ВремРег.ВзаиморасчетыПоставщиков;	
	РегПокупатели=ВремРег.ВзаиморасчетыПокупателей;	
	РегПокупатели.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегПокупатели.ПолучитьДвижение() = 1 Цикл
		Если (Константа.ПроводкиПоКассеТолькоОрдерами = Нет)
		И (ВидТорговли = Перечисление.ВидыТорговли.Нал) 
		И (РегПокупатели.Расход = 1) Тогда
			// При оплате наличными формируются 2 движения, надо взять только одно. Ввозьмем приход.
			Продолжить;
		КонецЕсли;
		Если (Найти(АвансоваяОтгрузка+ВозвратАвансовойОтгрузки+ПостОтгрузка+ВозвратПостОтгрузки+ПостОплата
		+ВозвратВтороеСобытиеБартерПриход+ВозвратПервоеСобытиеБартерПриход,РегПокупатели.КодОперации) = 0) Тогда
			// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
			Продолжить;	
		КонецЕсли;      
		// проводки по взаиморасчетам
		Если Валюта = Гривня Тогда
			глПроводка(Контекст,,СчетКонтрагента,-РегПокупатели.Долг,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,"Бартер: ","")+"Возврат от покупателя",, ,,,
			КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,"Реализация",1);					
		Иначе	
			глПроводка(Контекст,,СчетКонтрагента,-РегПокупатели.ДолгОсн,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,"Бартер: ","")+"Возврат от покупателя",, ,,,
			КонтрагентРасчетов,ПервыйДок,, РегПокупатели.Валюта,-РегПокупатели.Долг,"НК",1,"Реализация",1);					
		КонецЕсли;	  
		ВзаиморасчетыГрн = ВзаиморасчетыГрн + РегПокупатели.ДолгОсн;
		// погасим аванс
		Если (глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1)
		И (РегПокупатели.КодОперации = ВозвратАвансовойОтгрузки) Тогда
			Если Валюта=Гривня Тогда
				глПроводка(Контекст,"6811",СчетКонтрагента,РегПокупатели.Долг,"Возврат от покупателя, сторно: авансовый платеж",, КонтрагентРасчетов,ПервыйДок,,
				КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,0);
			Иначе
				глПроводка(Контекст,"6812",СчетКонтрагента,РегПокупатели.ДолгОсн,"Возврат от покупателя за валюту, сторно: авансовый платеж",, КонтрагентРасчетов,ПервыйДок,,
				КонтрагентРасчетов,ПервыйДок,, РегПокупатели.Валюта,РегПокупатели.Долг,"НК",1,0);
			КонецЕсли;
		КонецЕсли;
		// сформируем проводки по НДС
		Если глДелатьПроводкиПоНалогам(РегПокупатели,"НДС") = 1 Тогда
			
			Если (РегПокупатели.КодОперации = АвансоваяОтгрузка) 
			ИЛИ (РегПокупатели.КодОперации = ВозвратПостОтгрузки)
			ИЛИ (РегПокупатели.КодОперации = ВозвратВтороеСобытиеБартерПриход) Тогда
				// для первого события
				глПроводка(Контекст,,"6415",РегПокупатели.НДС,"НДС: первое событие",, ,,,
				ВидНДС,,, ,,"НК",1,"НДС первого события",1);                                                     
				НДСПервоеСобытие = НДСПервоеСобытие + РегПокупатели.НДС;
			ИначеЕсли РегПокупатели.КодОперации = ВозвратПервоеСобытиеБартерПриход Тогда     					
				// для второго события
				глПроводка(Контекст,,"6415",РегПокупатели.НДС,"НДС: второе событие",, ,,,
				ВидНДС,,, ,,"НК",1,"НДС второго события",1);
				// посчитаем НДС предварительной оплаты
				НДСВтороеСобытие = НДСВтороеСобытие + РегПокупатели.НДС;
			ИначеЕсли (РегПокупатели.КодОперации = ПостОтгрузка)
			ИЛИ (РегПокупатели.КодОперации = ВозвратАвансовойОтгрузки) Тогда     					
				// для второго события
				глПроводка(Контекст,,"643",РегПокупатели.НДС,"НДС: второе событие",, ,,,
				КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,"НДС второго события",1);
				// посчитаем НДС предварительной оплаты
				НДСВтороеСобытие = НДСВтороеСобытие + РегПокупатели.НДС;
			КонецЕсли;
		КонецЕсли;		
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		//// сформируем проводки по ВД/ВР
		//Если глДелатьПроводкиПоНалогам(РегПокупатели,"ВД/ВР") = 1 Тогда
		//	Если СубконтоВалДох <> Константа.НиДоходНиРасход Тогда
		//		глПроводка(Контекст,"ВД","ВД",РегПокупатели.СуммаСНДС_НУ-РегПокупатели.НДС,"Валовые доходы",, Контрагент,ПервыйДок,СубконтоВалДох,
		//		Контрагент,ПервыйДок,СубконтоВалДох, ,,"НК",1,0);
		//	КонецЕсли;
		//КонецЕсли;
		//// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		// дополнительные проводки для отдельных видов торговли
		Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
			// сформируме проводки по кассе, если они нужны
			Если Константа.ПроводкиПоКассеТолькоОрдерами = Нет Тогда
				глПроводка(Контекст,Касса.СчетУчета,СчетКонтрагента,РегПокупатели.Долг,"Оплата наличными",, Касса,,,
				КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,0);
			КонецЕсли;
		ИначеЕсли ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
			Если РегПокупатели.КодОперации = ВозвратВтороеСобытиеБартерПриход Тогда     					
				// первое событие по бартеру показываем как аванс в счет встречной поставки
				Если глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1 Тогда
					Сч = ?(Валюта=Гривня, "3711", "3712");
				Иначе
					Сч = ?(Валюта=Гривня, "631", "632");
				КонецЕсли;        
				глПроводка(Контекст,Сч,СчетКонтрагента,РегПокупатели.Долг,"Бартер: первое событие",, КонтрагентРасчетов,ПервыйДок,,
				КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,0);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// для бартера просмотрим другой регистр		
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
		РегПоставщики.ВыбратьДвиженияДокумента(ТекущийДокумент());
		Пока РегПоставщики.ПолучитьДвижение() = 1 Цикл
			Если Найти(ВозвратВтороеСобытиеБартерПриход+ВозвратПервоеСобытиеБартерПриход,РегПоставщики.КодОперации) = 0 Тогда
				// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
				Продолжить;	
			КонецЕсли;      
			// первая часть сложной проводки по доходам
			Если Валюта = Гривня Тогда
				глПроводка(Контекст,,СчетКонтрагента,-РегПоставщики.Долг,"Бартер: Возврат от покупателя",, ,,,
				КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,"Реализация",1);					
			Иначе	
				глПроводка(Контекст,,СчетКонтрагента,-РегПоставщики.ДолгОсн,"Бартер: Возврат от покупателя",, ,,,
				КонтрагентРасчетов,ПервыйДок,, РегПоставщики.Валюта,-РегПоставщики.Долг,"НК",1,"Возврат от покупателя",1);					
			КонецЕсли;	 
			ВзаиморасчетыГрн = ВзаиморасчетыГрн + РегПоставщики.ДолгОсн;
			Если РегПоставщики.КодОперации = ВозвратВтороеСобытиеБартерПриход Тогда     					
			ИначеЕсли РегПоставщики.КодОперации = ВозвратПервоеСобытиеБартерПриход Тогда			                    
				// сформируем проводки по НДС
				Если глДелатьПроводкиПоНалогам(РегПоставщики,"НДС") = 1 Тогда
					глПроводка(Контекст,СчетНДС,"64.4.1",РегПоставщики.НДС,"Бартер: НДС второе событие",, СубконтоНДС1,СубконтоНДС2,,
					КонтрагентРасчетов,ПервыйДок,, ,,"НК");
					// для второго события
					глПроводка(Контекст,,"64.3",РегПоставщики.НДС,"Бартер: НДС второе событие",, ,,,
					КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,"НДС второго события",1);
					// посчитаем НДС предварительной оплаты, учитывая, что по регситру прошли стрнирующие движения
					НДСВтороеСобытие = НДСВтороеСобытие + РегПоставщики.НДС;
				КонецЕсли;	       
				// закрываем долг по бартеру
				Если глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1 Тогда
					Сч = ?(глВыделятьЛиАвансыПоСчету(СчетКонтрагента)=1,"681","36");
					глПроводка(Контекст,?(Валюта=Гривня, Сч+"1", Сч+"2"),СчетКонтрагента,РегПоставщики.Долг,"Бартер: первое событие",, КонтрагентРасчетов,ПервыйДок,,
					КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,0);
				КонецЕсли;
				
				// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				// сформируем проводки по ВД/ВР для бартера, если суммы не относятся только к НДС
				//Если глДелатьПроводкиПоНалогам(РегПоставщики,"ВД/ВР") = 1 Тогда			
					//Если Константа.БартерВалРасх <> Константа.НиДоходНиРасход Тогда
					//	глПроводка(Контекст,"ВР","ВР",РегПоставщики.СуммаСНДС_НУ-РегПоставщики.НДС,"Бартер: валовые издержки",, Контрагент,ПервыйДок,Константа.БартерВалРасх,
					//	Контрагент,ПервыйДок,Константа.БартерВалРасх, ,,"НК",1,0);
					//Конецесли;			
				//Конецесли;	
				// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				
			КонецЕсли;	                
		КонецЦикла;
	КонецЕсли;
	НДСВсего = НДСПервоеСобытие + НДСВтороеСобытие;
	// этот коэффициент используется в проводка по доходам для каждого ТМЦ	
	КПерв = ?(НДСВсего=0,0,НДСПервоеСобытие/НДСВсего);
КонецПроцедуры //ДвиженияВзаиморасчеты

//======================================================================
Процедура НачислитьБонусыПоАкциям()
	Если НеКорректироватьАкции = 0 Тогда
		СписРН = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(СписРН, "ДокПродажи,Кво");
		СписРН.Свернуть("ДокПродажи", "Количество");	
		СписРН.ВыбратьСтроки();
		Пока СписРН.ПолучитьСтроку() = 1 Цикл
			глНачислитьБонусыПоТМЦ(Контекст, СписРН.ДокПродажи);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // НачислитьБонусыПоАкциям

//Цена из последней приходной накладной
//
Функция СтоимостьПоступленияТовара(Номенклатура,ДатаРасчета)
	Перем Запрос, ТекстЗапроса;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(СтоимостьПоступленияТовара)
	|Обрабатывать НеПомеченныеНаУдаление;
	|ТМЦ = Документ.ПриходнаяНакладнаяЗапасы.ТМЦ;
	|ЦенаСНДС = Документ.ПриходнаяНакладнаяЗапасы.ЦенаСНДС;
	|ТекущийДокумент = Документ.ПриходнаяНакладнаяЗапасы.ТекущийДокумент;
	|Группировка ТекущийДокумент упорядочить по ТекущийДокумент.ДатаДок;
	|Условие(ТМЦ = Номенклатура);
	|Условие(ТекущийДокумент.ДатаДок <= ДатаРасчета);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;

	Пока Запрос.Группировка(1,-1) = 1 Цикл
		Возврат Запрос.ЦенаСНДС;
	КонецЦикла;
	
КонецФункции

//=============================== + umk Товары в рознице передача
//
Процедура  ДвижениеТоварыВРознице()
	
	Если КатегорияЦен.Розница = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если (ДатаДок < Константа.ДатаНачалаВеденияУчетаВРознице) ИЛИ (ПустоеЗначение(Константа.ДатаНачалаВеденияУчетаВРознице) = 1) Тогда
		Возврат;
	КонецЕсли;
	
	СтоимостьПродажи = 0;
	Себестоимость = 0;
	
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку() = 1 Цикл
		
		ДатаРасчета = ?(ПустоеЗначение(ДокПродажи) =1,ДатаДок, ДокПродажи.ДатаДок);
		
		Регистр.ТоварыВРознице.ПривязыватьСтроку(НомерСтроки);
		Регистр.ТоварыВРознице.Организация = Контрагент.ФирмаПрихода.Получить(ДатаДок);
		Регистр.ТоварыВРознице.МестоХранения =  Контрагент.МестоХранения.Получить(ДатаДок);
		Регистр.ТоварыВРознице.Номенклатура =  ТМЦ;
		Регистр.ТоварыВРознице.Кол =  -Кво*Ед.Коэффициент;
		Регистр.ТоварыВРознице.СтоимостьПродажи = -СуммаСНДС;
		Регистр.ТоварыВРознице.Себестоимость =  -?(ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция, 
		глЦенаНоменклатурыСУпаковкой(ТМЦ, ВУП, Ед, Константа.ОсновнаяКатегорияЦен, ДатаРасчета), //Если продукция, то по основной цене (вид - прайс) с упаковкой
		СтоимостьПоступленияТовара(ТМЦ,ДатаРасчета))*Кво*Ед.Коэффициент;//Иначе по цене списанной партии;
	    Регистр.ТоварыВРознице.ДвижениеПриходВыполнить();
		
	КонецЦикла;
	
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	Если ПроверкаШапки()=0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	// Вначале заполним СС в строках. Возьмём из РН
	ТЗРН = СоздатьОбъект("ТаблицаЗначений");
	ТЗСС = СоздатьОбъект("ТаблицаЗначений");
	ТЗСС.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗСС.НоваяКолонка("РН", "Документ");
	ТЗСС.НоваяКолонка("Ключ", "Строка");
	ТЗСС.НоваяКолонка("Кво", "Число");
	ТЗСС.НоваяКолонка("Сумма", "Число");
	
	ВыгрузитьТабличнуюЧасть(ТЗРН,"ДокПродажи,Кво");
	ТЗРН.Свернуть("ДокПродажи", "Кво");
	ТЗРН.ВыбратьСтроки();
	РегП = СоздатьОбъект("Регистр.Партии");
	Пока ТЗРН.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗРН.ДокПродажи) = 0 Тогда
			Если ТЗРН.ДокПродажи.Проведен() = 1 Тогда
			    РегП.ВыбратьДвиженияДокумента(ТЗРН.ДокПродажи);
				Пока РегП.ПолучитьДвижение() = 1 Цикл
					Если РегП.Фирма <> Фирма Тогда //+ umk Фильтр необходим в контексте остатка по фирме, т.к. в рознице искажаются данные.
						Продолжить;
					КонецЕсли;
					ТЗСС.НоваяСтрока();
					ТЗСС.ТМЦ = РегП.ТМЦ;
					ТЗСС.РН = ТЗРН.ДокПродажи;
					ТЗСС.Кво = РегП.ОстатокТовара;
					ТЗСС.Сумма = РегП.Стоимость;
					ТЗСС.Ключ = ТЗСС.ТМЦ.Код + "**" + ТЗСС.РН.НомерДок + "**" + Строка(ТЗСС.РН.ДатаДок) + "**" + ТЗСС.РН.Вид();
				КонецЦикла;
			КонецЕсли;		    
		КонецЕсли;
	КонецЦикла;
	ТЗСС.Свернуть("ТМЦ,ДокПродажи,Ключ", "Кво,Сумма");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ДокПродажи) = 0 Тогда
		    Ключ = ТМЦ.Код + "**" + ДокПродажи.НомерДок + "**" + Строка(ДокПродажи.ДатаДок) + "**" + ДокПродажи.Вид();
			Стр = 0;
			Если ТЗСС.НайтиЗначение(Ключ, Стр, "Ключ") = 1 Тогда
			    ТЗСС.ПолучитьСтрокуПоНомеру(Стр);
				ЦенаУчБезНДС = ТЗСС.Сумма / ?(ТЗСС.Кво = 0, 1, ТЗСС.Кво);
				СуммаУчБезНДС = ЦенаУчБезНДС * Кво * Коэффициент;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;

	
	РассчитатьШапку();
	ДвиженияВзаиморасчеты();
	ВремРег.Актуальность(1);
	ДвиженияПартии();
	ВремРег.Актуальность(0);	

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки()=0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	КонецЦикла;	   
	
	//глНачислитьБонусы(Контекст, Контрагент, Договор, -1);
	
	глСнятьБонусыПоВозвратуТовара(Контекст);
	
	НачислитьБонусыПоАкциям();
	глЗаписатьПроводкиВОперацию(Контекст);
	
	ДвижениеТоварыВРознице(); // + umk
	
	Операция.СуммаОперации = Итог("СуммаСНДС");
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры