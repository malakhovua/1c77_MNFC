// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Фирма,"Фирма");
    глВыбранЛи(ВидПереоценкиТМЦ,"Вид переоценки ТМЦ");
	глВыбранЛи(МестоХранения,"Место хранения");
	Если ВидПереоценкиТМЦ = Перечисление.ВидыПереоценкиТМЦ.ИзменениеУчетнойСтоимости Тогда
		глВыбранЛи(СчетЗатрат,"Счет затрат");
		Если глВсеВыбрано = 1 Тогда
			Если глПроверитьСчетЗатрат(СчетЗатрат,2,0)=0 Тогда
			    глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
		глВыбранЛи(ВидЗатрат,"Вид затрат");
		глВыбранЛи(ВидДеятельности,"Вид деятельности");
		глВыбранЛи(Подразделение,"Подразделение");
		Если МестоХранения.ВидСклада = Розничный Тогда
		    глКомментарий("Изменять учетную стоимость можно только для ТМЦ, хранящихся на оптовом складе!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	Иначе
		Если МестоХранения.ВидСклада = Оптовый Тогда
		    глКомментарий("Изменять торговую наценку можно только для ТМЦ, хранящихся в магазине!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
		Если (МестоХранения.СуммовойУчет = 1) Тогда
			глКомментарий("Нельзя проводить переоценку на розничном складе (магазине) с суммовым учетом!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	Если глВсеВыбрано = 1 Тогда
		глВсеВыбрано = глПроверкаДублейСтрок(Контекст,1);
		Если глВсеВыбрано = 0 Тогда
			глКомментарий("При переоценке ТМЦ нельзя в разных строках указывать одинаковые ТМЦ (или одну и ту же партию ТМЦ)!",0,,"!");
		КонецЕсли;
	КонецЕсли;
    Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
    глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
	МетодРасчетаСебестоимости=глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок);
	Если МетодРасчетаСебестоимости <> Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		глВыбранЛи(Предпочтение,"Предпочтение партий",НомерСтроки);
	КонецЕсли;	
	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
    Возврат глВсеВыбрано;
КонецФункции

// ===============================
// Назначение: проверяет наличие превышение суммы донаценки над суммой 
//	предыдущей уценки
// Аргументы:	тбСуммаУценок - таблица сумм наценок
//				Разница - сумма донаценки
// ======================================
Процедура ПроверитьСуммуНаценки(тбСуммаУценок, Знач Разница)
	текНомерСтроки = 0;
	текКлюч = Строка(ТМЦ)+Строка(СчетУчета)+Строка(Предпочтение);
	Если тбСуммаУценок.НайтиЗначение(текКлюч,текНомерСтроки,"Ключ") = 0 Тогда
		СуммаУценки	  = 0;
		СуммаДооценки = 0;
	Иначе	
		тбСуммаУценок.ПолучитьСтрокуПоНомеру(текНомерСтроки);
		СуммаУценки	  = ?(ПустоеЗначение(тбСуммаУценок.СуммаУценки)=1,0,тбСуммаУценок.СуммаУценки);
		СуммаДооценки = ?(ПустоеЗначение(тбСуммаУценок.СуммаДооценки)=1,0,тбСуммаУценок.СуммаДооценки)
	КонецЕсли;

	СуммаУценки = СуммаУценки - СуммаДооценки;

	Если Разница > СуммаУценки Тогда
		Если СуммаУценки >= 0 Тогда
		    глКомментарий("В строке "+НомерСтроки+" сумма дооценки превышает сумму ранее сделанных уценок на "+(Разница - СуммаУценки)+" грн.",1,,"!");
		Иначе
			глКомментарий("В строке "+НомерСтроки+" сумма ранее сделанных дооценок превысила сумму уценок на "+(Разница - СуммаУценки)+" грн. Проверьте все переоценки этой партии ТМЦ!",1,,"!");
		КонецЕсли;
	    глКомментарий("Цена ТМЦ не должна превышать "+Окр(СтараяЦена+СуммаУценки/?(Кво=0,1,Кво),2,0)+" грн.",2);
	КонецЕсли;
КонецПроцедуры 

// ===============================
// Назначение: формирует таблицу сумм уценок
// Аргументы:	спТМЦ	  - список товаров документа
//		     	спПартии  - список предпочтений документа
//		     	спСчета	  - список счетов учета ТМЦ 
// Возвращает: результат запроса по регистру ПартииТоваров
//		
// ===============================
Функция ПолучитьСуммыУценок(спТМЦ, спПартии, спСчета)
	ВремРегистры = СоздатьОбъект("Регистры");
	регПартииТоваров = ВремРегистры.Партии;

	// установим фильтры для регистра	
	регПартииТоваров.УстановитьЗначениеФильтра("Фирма", Фирма,	  1);
	регПартииТоваров.УстановитьЗначениеФильтра("ТМЦ", спТМЦ, 2);
	Если ((ВидПереоценкиТМЦ = Перечисление.ВидыПереоценкиТМЦ.ИзменениеТорговойНаценки)
	ИЛИ (глПартионныйУчетПоСкладам = Да)) Тогда
		регПартииТоваров.УстановитьЗначениеФильтра("МестоХранения",МестоХранения,1);
	КонецЕсли;	
	регПартииТоваров.УстановитьЗначениеФильтра("ПрихДокумент",спПартии,2);
	спКодыОпераций = СоздатьОбъект("СписокЗначений");
	спКодыОпераций.ДобавитьЗначение(ПереоценкаНаСкладеУценка);
	спКодыОпераций.ДобавитьЗначение(ПереоценкаНаСкладеДооценка);
	регПартииТоваров.УстановитьЗначениеФильтра("Счет",спСчета,2);
	регПартииТоваров.УстановитьЗначениеФильтра("КодОперации",спКодыОпераций,2);
	
	Если ИтогиАктуальны()=0 Тогда
		регПартииТоваров.ВременныйРасчет();
		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;

	тбСуммаУценок = СоздатьОбъект("ТаблицаЗначений");
	тбСуммаУценок.НоваяКолонка("ТМЦ");
	тбСуммаУценок.НоваяКолонка("Счет");
	тбСуммаУценок.НоваяКолонка("Предпочтение");
	тбСуммаУценок.НоваяКолонка("Ключ");
	тбСуммаУценок.НоваяКолонка("СуммаУценки", "Число", 15,2);
	тбСуммаУценок.НоваяКолонка("СуммаДооценки", "Число", 15,2);
	
	// сформируем таблицу сумм уценок по товарам,партиям и статусам
	регПартииТоваров.ВыбратьДвижения(,ПолучитьПозицию());
	Пока регПартииТоваров.ПолучитьДвижение() = 1 Цикл
		Если ПустоеЗначение(регПартииТоваров.Стоимость) = 1 Тогда
			Продолжить;
		КонецЕсли;
		тбСуммаУценок.НоваяСтрока();
		тбСуммаУценок.ТМЦ	 		= регПартииТоваров.ТМЦ;
		тбСуммаУценок.Счет			= регПартииТоваров.Счет;
		тбСуммаУценок.Предпочтение  = регПартииТоваров.ПрихДокумент;
		тбСуммаУценок.Ключ			= Строка(регПартииТоваров.ТМЦ)
			+Строка(регПартииТоваров.Счет)+Строка(регПартииТоваров.ПрихДокумент);
		Если регПартииТоваров.КодОперации = ПереоценкаНаСкладеДооценка Тогда
			тбСуммаУценок.СуммаДооценки	= регПартииТоваров.Стоимость;
		Иначе
			тбСуммаУценок.СуммаУценки	=-регПартииТоваров.Стоимость;
		КонецЕсли;	
	КонецЦикла;       
	тбСуммаУценок.Свернуть("ТМЦ,Счет,Предпочтение,Ключ","СуммаУценки,СуммаДооценки");
	Возврат тбСуммаУценок;
КонецФункции

// ===============================
Процедура ДвиженияПартии()
	
	глКомментарий("Выполняются движения партий ТМЦ",2);
	
	Если ВидПереоценкиТМЦ = Перечисление.ВидыПереоценкиТМЦ.ИзменениеТорговойНаценки Тогда
		КодОперации = ПереоценкаВРознице;
	КонецЕсли;
	спТМЦ = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(спТМЦ,"ТМЦ");
	спПартии = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(спПартии,"Предпочтение");
	Для Номер = 1 По спПартии.РазмерСписка() Цикл
		Если ПустоеЗначение(спПартии.ПолучитьЗначение(Номер)) = 1 Тогда
		    спПартии.УстановитьЗначение(Номер,ПолучитьПустоеЗначение("Документ"));
		КонецЕсли;
	КонецЦикла;	
	спСчета = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(спСчета,"СчетУчета");
	тбСуммаУценок = ПолучитьСуммыУценок(спТМЦ, спПартии, спСчета);
	
	ЗапросПоПартиям = СоздатьОбъект("Запрос");
	Если Выбран()=1 Тогда // документ существует
		Если СравнитьТА()<0 Тогда // и находится до ТА
			ПозицияИтогов = СформироватьПозициюДокумента(ТекущийДокумент(),-1); 
		КонецЕсли;
	КонецЕсли;      
	ТекстЗапроса = ?(ПустоеЗначение(ПозицияИтогов)=1,"","Период с ПозицияИтогов по ПозицияИтогов;");

	ТекстЗапроса = ТекстЗапроса +"
	|Обрабатывать НеПомеченныеНаУдаление;
	|_Фирма			= Регистр.Партии.Фирма;
	|_Счет			= Регистр.Партии.Счет;
	|_МестоХранения	= Регистр.Партии.МестоХранения;
	|_ТМЦ			= Регистр.Партии.ТМЦ;
	|_Поставка		= Регистр.Партии.Поставка;
	|_Поставщик		= Регистр.Партии.Поставщик;
	|_ПрихДокумент	= Регистр.Партии.ПрихДокумент;
	|_ОстатокТовара	= Регистр.Партии.ОстатокТовара;
	|_Стоимость 	= Регистр.Партии.Стоимость;
	|_ПродСтоимость = Регистр.Партии.ПродСтоимость;
	|Функция ОстатокТовара = КонОст(_ОстатокТовара);
	|Функция Стоимость 	   = КонОст(_Стоимость);
	|Функция ПродСтоимость = КонОст(_ПродСтоимость);
	|Группировка _ТМЦ;
	|Группировка _Счет;
	|Группировка _ПрихДокумент;
	|Группировка _Поставка;
	|Условие(_Фирма = Фирма);
	|Условие(_ТМЦ в спТМЦ);
	|Условие(_Счет в спСчета);
	|Условие(_ПрихДокумент в спПартии);
	|";
                                  
	Если ((ВидПереоценкиТМЦ = Перечисление.ВидыПереоценкиТМЦ.ИзменениеТорговойНаценки)
	ИЛИ (глПартионныйУчетПоСкладам = Да)) Тогда
		ТекстЗапроса = ТекстЗапроса +"Условие(_МестоХранения = МестоХранения);";
	КонецЕсли;
	
	Если ЗапросПоПартиям.Выполнить(ТекстЗапроса) = 0 Тогда
		Предупреждение("Не выполнился запрос по регистру Партии!");
		Возврат;
	КонецЕсли;                    
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ЗапросПоПартиям.вНачалоВыборки();
		// ищем партию
		Если ЗапросПоПартиям.Получить(ТМЦ,СчетУчета,?(ПустоеЗначение(Предпочтение)=0,Предпочтение,ПолучитьПустоеЗначение("Документ")),) = 1 Тогда			
			// обновим суммы в табличной части
			Если ВидПереоценкиТМЦ = Перечисление.ВидыПереоценкиТМЦ.ИзменениеУчетнойСтоимости Тогда
				СтараяСумма = ЗапросПоПартиям.Стоимость;
			Иначе
				СтараяСумма = ЗапросПоПартиям.ПродСтоимость;
			КонецЕсли;                              
			Если ЗапросПоПартиям.ОстатокТовара<>Кво Тогда
				// количество, указанное в строке документа, не актуально, 
				// необходимо пересчитать суммы с учетом нового количества
				Кво		   = ЗапросПоПартиям.ОстатокТовара;			   // обновим количество

				НоваяСумма = НоваяЦена*?(ПустоеЗначение(Кво)=1,1,Кво); // обновим новую сумму
			КонецЕсли;
			СтараяЦена	 = ?(Кво=0,0,СтараяСумма/Кво); // обновим старую цену
			ВсегоРазница = (НоваяСумма-СтараяСумма);
			ПереоцененоКво = 0;
			Пока ЗапросПоПартиям.Группировка("_Поставка") = 1 Цикл
				ПереоцененоКво = ПереоцененоКво + ЗапросПоПартиям.ОстатокТовара;
				Если ПереоцененоКво = Кво Тогда
				    // это последняя поставка
					текРазница = ВсегоРазница;
				Иначе                                       
					текРазница = ВсегоРазница*?(ПустоеЗначение(Кво)=1,1,ЗапросПоПартиям.ОстатокТовара/Кво);
					ВсегоРазница = ВсегоРазница - текРазница;
				КонецЕсли;
				// проверим сумму наценки

				Если ВидПереоценкиТМЦ = Перечисление.ВидыПереоценкиТМЦ.ИзменениеУчетнойСтоимости Тогда
					ПроверитьСуммуНаценки(тбСуммаУценок, текРазница);
				КонецЕсли;
				Если текРазница<>0 Тогда
					Если ВидПереоценкиТМЦ = Перечисление.ВидыПереоценкиТМЦ.ИзменениеУчетнойСтоимости Тогда
						Если текРазница > 0 Тогда
							КодОперации = ПереоценкаНаСкладеДооценка;
						Иначе
							КодОперации = ПереоценкаНаСкладеУценка;
						КонецЕсли;
					КонецЕсли;                                                 
					МестоХраненияП = ЗапросПоПартиям._МестоХранения;
					ПоставщикП	   = ЗапросПоПартиям._Поставщик;
					ПоставкаП      = ЗапросПоПартиям._Поставка;
					Если КодОперации = ПереоценкаВРознице Тогда
						глПровестиПартию(Контекст, 1,0, Фирма, ТМЦ, СчетУчета, МестоХраненияП, ПоставщикП,
						ПоставкаП, Предпочтение,0,0,текРазница, КодОперации,0,0,0);
						Если ((ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) 
						ИЛИ (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)) Тогда 
						    текСчетУчета = СчетПоКоду("28.2.2");
						    текСчетНаценки = СчетПоКоду("28.5.2");
						Иначе	
						    текСчетУчета = СчетПоКоду("28.2.1");
						    текСчетНаценки = СчетПоКоду("28.5.1");
						КонецЕсли;
						Если текРазница > 0 Тогда
							глПроводка(Контекст,текСчетУчета,текСчетНаценки,текРазница,"Переоценка в рознице",, МестоХраненияП,ТМЦ,ПоставкаП,
							МестоХранения,ТМЦ,ПоставкаП, ,,"ПЕ",1,0);
						Иначе
							глПроводка(Контекст,текСчетНаценки,текСчетУчета,-текРазница,"Переоценка в рознице",, МестоХранения,ТМЦ,ПоставкаП,
							МестоХранения,ТМЦ,ПоставкаП, ,,"ПЕ",1,0);
						КонецЕсли;
					Иначе
						глПровестиПартию(Контекст, 1,0, Фирма, ТМЦ, СчетУчета,  МестоХраненияП, ПоставщикП,
						ПоставкаП, Предпочтение,0,текРазница,0, КодОперации,0,0,0);

						глПроводкаПоЗатратам(Контекст,СчетЗатрат,СчетУчета,-текРазница,?(текРазница < 0,"Уценка (расход)","Дооценка (расход сторно)"),, ВидДеятельности,Подразделение,ВидЗатрат,
						МестоХраненияП,ТМЦ,ПоставкаП, ,,"ПЕ",1,0);
					КонецЕсли;                                 
				КонецЕсли;		
			КонецЦикла; // ЗапросПоПартиям._Поставка
		Иначе	
			глНеПроводить(Контекст," Не найдена партия, указанная в строке " + НомерСтроки);
			Возврат;
		КонецЕсли;
	КонецЦикла; // ПолучитьСтроку()
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	КонецЦикла;
	ДвиженияПартии();
	
	глЗаписатьПроводкиВОперацию(Контекст);
	
	Операция.СуммаОперации = 0;
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры