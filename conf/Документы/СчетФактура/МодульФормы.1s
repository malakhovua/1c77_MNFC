Перем Валюта_Прежн, Курс_Прежн;
Перем СтараяДата;              
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем ФлагБыстраяПродажа;
Перем НачальнаяДатаДокумента;
Перем РегО;
Перем СтруктИзменений;
Перем СписокДействий;    
Перем ТЗКонтроля;
Перем МаксПроцОткл;


Перем СпВидыУпаковкиГлобальный; //--- УМК Сандомирский В.Ю. (31.08.14)
Перем СпВидыУпаковкиЛокальный;  //--- УМК Сандомирский В.Ю. (31.08.14)
Перем СпФирмыДляПечати; //--- УМК Сандомирский В.Ю. (09.01.15)
//====================================================================== УМК Сандомирский В.Ю, (04.11.14)
Процедура ИзмКол() Далее
Процедура ИзмТМЦ() Далее
Процедура ИзмВидУпаковки() Далее    
Процедура ИзмКонтрагент() Далее     //--- УМК Сандомирский В.Ю, (13.02.15)

Функция ПолучитьКодИзСпецификации(Спец, ТекТМЦ, ТекВидУпаковки, ШтрихКод)	
	Если Спец.КоличествоСтрок() > 0 Тогда
		ТМЦУпаковка = ЗначениеВСтрокуВнутр(ТекТМЦ) + "//" + ЗначениеВСтрокуВнутр(?(ТекВидУпаковки = НетУп, ПолучитьПустоеЗначение("Справочник.ВидыУпаковки"), ТекВидУпаковки));
		Стр = 0;			
		Если Спец.НайтиЗначение(ТМЦУпаковка, Стр, "ТМЦУпаковка") = 1 Тогда
			ШтрихКод = Спец.ПолучитьЗначение(Стр, "КодДляШК");
			Возврат Спец.ПолучитьЗначение(Стр, "КодКлиента");
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
КонецФункции

//======================================================================
Процедура ПриВыбореОснования()
	ТЗКонтроля = СоздатьОбъект("ТаблицаЗначений");
	Если (ДокументОснование.Выбран() = 1) И (ДокументОснование.Вид() = "УМК_ЗаказКлиента") Тогда
		ДокументОснование.ВыгрузитьТабличнуюЧасть(ТЗКонтроля);
		ТЗКонтроля.Сортировать("ТМЦ,ВидУпаковки");
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Процедура КонтрольЗаказа()
	Если (ТЗКонтроля.КоличествоСтрок() > 0) И (Кол > 0) Тогда
		КвоВЗаказе = 0;
		Стр = 0;
		Если ТЗКонтроля.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
			ТЗКонтроля.ПолучитьСтрокуПоНомеру(Стр);
			Пока ТЗКонтроля.ТМЦ = ТМЦ Цикл
				Если ТЗКонтроля.ВидУпаковки = ВидУпаковки Тогда
					КвоВЗаказе = КвоВЗаказе + ТЗКонтроля.КвоПересчет;
				КонецЕсли;
				Стр = Стр + 1;
				Если Стр > ТЗКонтроля.КоличествоСтрок() Тогда
					Прервать;
				Иначе
					ТЗКонтроля.ПолучитьСтрокуПоНомеру(Стр);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Разница = Кол - КвоВЗаказе;
		Разница = ?(Разница < 0, -Разница, Разница);
		ПроцентРазницы = Окр(Разница / Кол * 100, 2);
		Если ПроцентРазницы > МаксПроцОткл Тогда
			Предупреждение("Уточните количество данного товара в заказе. В заказе: " + Строка(КвоВЗаказе));
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры // КонтрольЗаказа


Процедура ЗаполнитьСписокФирмПечати() //--- УМК Сандомирский В.Ю. (09.01.15)
	Если ПустоеЗначение(Контрагент) <> 1 Тогда
		
		СпФирмыДляПечати = СоздатьОбъект("СписокЗначений");
		
		НашлиКонтрагентаДляПечати = 0;
		Если ПустоеЗначение(Контрагент.ФирмаДляРН) <> 1 Тогда //--- Вариант когда фирма выбрана
			СпФирмыДляПечати.ДобавитьЗначение(Фирма);			
			СпФирмыДляПечати.ДобавитьЗначение(ФирмаПечати);			
			НашлиКонтрагентаДляПечати = 1;	
		КонецЕсли;
		//--- Если не нашли тогда смотрим в подчиненном справочнике
		Если НашлиКонтрагентаДляПечати = 0 Тогда
			
			СпрФирмыДляПечати = СоздатьОбъект("Справочник.УМК_ФирмыПечатиКонтрагента");
			СпрФирмыДляПечати.ИспользоватьВладельца(Контрагент);
			СпрФирмыДляПечати.ВыбратьЭлементы();
			Пока СпрФирмыДляПечати.ПолучитьЭлемент() = 1 Цикл
				Если СпрФирмыДляПечати.ПометкаУдаления() = 1 Тогда
					Продолжить;
				КонецЕсли;
				СпФирмыДляПечати.ДобавитьЗначение(СпрФирмыДляПечати.ТекущийЭлемент().Фирма);	// --- из подчиненного справочника	
				НашлиКонтрагентаДляПечати = 1;	
			КонецЦикла;
		КонецЕсли;
			
		//--- Если нету ничего заполняем обычной фирмой	
		Если НашлиКонтрагентаДляПечати = 0 Тогда
			СпФирмыДляПечати.ДобавитьЗначение(Фирма);	// --- из подчиненного справочника	
		КонецЕсли;
				
	КонецЕсли;
КонецПроцедуры	


Процедура ЗаполнитьФирмуПечати() //--- УМК Сандомирский В.Ю. (09.01.15)
	
	Если ПустоеЗначение(Контрагент) <> 1 Тогда
		
		СпФирмыДляПечати = СоздатьОбъект("СписокЗначений");
		
		НашлиКонтрагентаДляПечати = 0;
		Если ПустоеЗначение(Контрагент.ФирмаДляРН) <> 1 Тогда //--- Вариант когда фирма выбрана
			ФирмаПечати = Контрагент.ФирмаДляРН;
			СпФирмыДляПечати.ДобавитьЗначение(Фирма);			
			СпФирмыДляПечати.ДобавитьЗначение(ФирмаПечати);			
			НашлиКонтрагентаДляПечати = 1;	
		КонецЕсли;
	
		//--- Если не нашли тогда смотрим в подчиненном справочнике
		Если НашлиКонтрагентаДляПечати = 0 Тогда
			
			СпрФирмыДляПечати = СоздатьОбъект("Справочник.УМК_ФирмыПечатиКонтрагента");
			СпрФирмыДляПечати.ИспользоватьВладельца(Контрагент);
			СпрФирмыДляПечати.ВыбратьЭлементы();
			Пока СпрФирмыДляПечати.ПолучитьЭлемент() = 1 Цикл
				Если СпрФирмыДляПечати.ПометкаУдаления() = 1 Тогда
					Продолжить;
				КонецЕсли;
				СпФирмыДляПечати.ДобавитьЗначение(СпрФирмыДляПечати.ТекущийЭлемент().Фирма);	// --- из подчиненного справочника	
				НашлиКонтрагентаДляПечати = 1;	 
				
				ФирмаПечати = "";
				
			КонецЦикла;
		КонецЕсли;
			
		//--- Если нету ничего заполняем обычной фирмой	
		Если НашлиКонтрагентаДляПечати = 0 Тогда
			ФирмаПечати = Фирма;
			СпФирмыДляПечати.ДобавитьЗначение(Фирма);	// --- из подчиненного справочника	
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

Функция ВыполнитьПроверкуПечати(ТаблТМЦ, НеПроверятьИсключения = 0)

	Возврат 1;
КонецФункции

// ===============================
Функция УстДоступность() 

	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	Форма.Заголовок(глЗаголовок(Контекст,"Счет-фактура"));
	// доступность в зависимости от слоя                                    
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		ДостКасса = 1;
	Иначе
		ДостКасса = 0;
	КонецЕсли;
	Если Закл = "Основной" Тогда
		Форма.тКасса.Доступность(ДостКасса);
		Форма.Касса.Доступность(ДостКасса);
		фВидимостьКредит = ?(ВидТорговли = Перечисление.ВидыТорговли.Кредит,1,0);
		Форма.тДатаОплаты.Видимость(фВидимостьКредит);
		Форма.тГлубина.Видимость(фВидимостьКредит);
		Форма.Глубина.Видимость(фВидимостьКредит);
	КонецЕсли;  
	Если Форма.ТолькоПросмотр()=1 Тогда
		// Если открыли только на просмотр, то надо кнопки сделать недоступными
		Форма.кФирма.Доступность(0);
		Форма.кВалюта.Доступность(0);
		Форма.кОсн.Доступность(0);
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
//		Форма.кДействия.Доступность(0);

		Форма.кДатьСкидку.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кПредварительно.Доступность(0);
		Форма.кБыстраяПродажа.Видимость(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе	
		Если ФлагБыстраяПродажа = Да Тогда
			Форма.кПредварительно.Видимость(0);
			Форма.кПровести.Видимость(0);
			Форма.кПечать.Видимость(0);
			Форма.кЗакрыть.Видимость(0);
			Форма.кОК.Видимость(0);
			Форма.кБыстраяПродажа.Видимость(1);
			Форма.КнопкаПоУмолчанию("кБыстраяПродажа");
		Иначе
			Форма.кПровести.Видимость(1);
			Форма.кПечать.Видимость(1);
			Форма.кЗакрыть.Видимость(1);
			Форма.кОК.Видимость(1);
			Форма.кБыстраяПродажа.Видимость(0);
		 	Форма.КнопкаПоУмолчанию("кОК");
		КонецЕсли;
	КонецЕсли;
	Форма.ДопКво.Доступность(ТМЦ.УчетДопКво);
	
	//--- УМК Сандомирский В.Ю, (17.06.14) новый реквизит Авто 
	фОтображатьТранспорт = ?(ДатаДок >= Константа.УМК_ДатаНачалаРаботыАвтотранспорта, 1, 0);   
	Форма.Автомобиль.Видимость(1-фОтображатьТранспорт);
	Форма.УМК_Автомобиль.Видимость(фОтображатьТранспорт);
	Форма.кнУдалитьАвто.Видимость(фОтображатьТранспорт);		
	//... УМК Сандомирский В.Ю, (17.06.14) новый реквизит Авто 
	
	Возврат "";
КонецФункции	//... УстДоступность

//===========================

// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;
	Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
		ДатаОплаты=ДатаДок + Глубина;	
	Иначе	
		ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстГлубина()
	// Формирует и показывает дату оплаты
	Если (ВидТорговли = Перечисление.ВидыТорговли.Кредит) И (Контрагент.Выбран() = 1) Тогда
		Если Контрагент.Глубина.Получить(ДатаДок) <> 0 тогда    
			Если ПустоеЗначение(Глубина)=1 тогда
				Глубина=Контрагент.Глубина.Получить(ДатаДок);
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		Глубина=0;
	КонецЕсли;	
	ИзмГлубина();
КонецПроцедуры	

Процедура ИзмДокументУстановкаСкидок()
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Изменился документ для скидок. Пересчитать цены?", "Да+Нет") = "Да" Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				глПриИзмененииТовара(Контекст, 1);
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура УстановитьДокСкидок()
	СтарД = УстановкаСкидокТМЦ;
	УстановкаСкидокТМЦ = глПолучитьДокументУстановкиСкидок(ДатаДок, Контрагент);
	Если СтарД <> УстановкаСкидокТМЦ Тогда
		ИзмДокументУстановкаСкидок();
	КонецЕсли;	
КонецПроцедуры // 

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	УстановитьДокСкидок();
	УстГлубина();	
КонецПроцедуры
         
// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = ТМЦ.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;  
	
КонецПроцедуры //ПересчетСтроки

// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
Процедура ИзмРеквизитШапки(Реквизит, ИмяРекв = "")           
	
	// пересчитаем суммы НДС в строках табличной части                                                      
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	текОтвет = Вопрос("В документе изменен реквизит """+?(ИмяРекв = "", Реквизит, ИмяРекв)+""". Перезаполнить цены заново?","Да+Нет");
	Если (Реквизит = "Контрагент") ИЛИ (Реквизит = "ДатаДок") Тогда //--- УМК Сандомирский В.Ю. (13.02.15) 
		УстановкаСкидокТМЦ = глПолучитьДокументУстановкиСкидок(ДатаДок, Контрагент);
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текОтвет = "Да" Тогда
			// изменим цены
			//ЦенаТовара = глВернутьЦену(ТМЦ, КатегорияЦен);
			//Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
			//	// получим параметры цены
			//	ЦенаТовара.ИспользоватьДату(ДатаДок);
			//	ЦенаЦены   = ЦенаТовара.Цена;
			//	ВалютаЦены = ЦенаТовара.Валюта;
			//	ЕдЦены	   = ЦенаТовара.Единица;
			//	ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
			//	ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
			//	ПересчетСтроки(ЦенаЦены);                                                   
			//Иначе
			//	ПересчетСтроки();
			//КонецЕсли;
			глПриИзмененииТовара(Контекст, 1);
		ИначеЕсли Реквизит = "ВидНДС" Тогда
			ПересчетСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 
                
// ===============================
Процедура ИзмВидТары()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("В документе изменен вид тары! Пересчитать суммы ?","Да+Нет") = "Да" Тогда
			текОсновнаяЦена = Константа.ОсновнаяЦена;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл    
				Если ПустоеЗначение(ТМЦ) = 1 Тогда
					Продолжить;
				ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					ПересчетСтроки();
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Печать(БыстраяПечать=0, Экспорт_xls = 0) Далее

// ===============================
Процедура БыстраяПродажа() // Процедура быстрой продажи
	
	Если Фирма.РС.Выбран()=0 Тогда
		Предупреждение("У фирмы """+СокрЛП(Фирма)+""" не выбран счет по умолчанию. Оформить быструю продажу нельзя.");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	глПроверкаДатыДок(Контекст,"Проведение");
	Если СтатусВозврата()=0 Тогда
	    Возврат;
	КонецЕсли;
	
	АвтоВремяТекущее();
	Записать();          
	
	Попытка

		НачатьТранзакцию();
		
		// счет
		Если глВосстановитьЗначение(,"ПечКолЭкзСчетаПриБыстройПродаже")>=0 Тогда
			Счет = СоздатьОбъект("Документ.Счет");
			Счет.Новый();
			Счет.ДатаДок = ДатаДок;
			Счет.АвтоВремяТекущее();
			
			Счет.Фирма = Фирма;
			Счет.Автор = Автор; 
			
			Счет.Контрагент 		= Контрагент;
			Счет.Договор 			= Договор;
			Счет.Валюта				= Валюта;
			Счет.Курс				= Курс;
			Счет.Дата_курса			= Дата_курса;
			Счет.СрокРезервирования = 1;
			Счет.РСчет 				= Фирма.РС;
			Счет.ВидТорговли 		= ВидТорговли;
			Счет.ВидТары 			= ВидТары;
			Счет.КатегорияЦен 		= КатегорияЦен;
			Счет.ВидНДС 			= ВидНДС;
			Счет.ЧтоПродаем			= Перечисление.ЧтоПродаем.ТМЦ;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()>0 Цикл
				Счет.НоваяСтрока();
				НазначитьВид(Счет.ТМЦ,"ТМЦ");
				Счет.ТМЦ 			= ТМЦ; 
				Счет.Кво 			= Кво;
				Счет.Ед 			= Ед;
				Счет.ЦенаБезНДС 	= ЦенаБезНДС;
				Счет.ЦенаСНДС 		= ЦенаСНДС;
				Счет.Коэффициент 	= Коэффициент;
				Счет.СуммаБезСкидки = СуммаБезСкидки;
				Счет.Скидка 		= Скидка;
				Счет.СуммаБезНДС 	= СуммаБезНДС;
				Счет.СуммаСНДС 		= СуммаСНДС;
				Счет.НДС 			= НДС;
			КонецЦикла;	
			
			глУстановитьНомер(Счет);	// меняем номер
			Счет.Записать();
			Счет.Провести(1);
			
			Если Счет.Проведен()<=0 Тогда
				ОтменитьТранзакцию();
				СтатусВозврата(0);                        
				Возврат;
			КонецЕсли;
			
			ДокументОснование = Счет.ТекущийДокумент();
			Основание		  = СокрЛП(Счет.ПредставлениеВида())+" №"+СокрЛП(Счет.НомерДок)+" от "+Шаблон("[Счет.ДатаДок]");
		КонецЕсли;                                     
		
        Записать();  // записываем
		Провести(1); // проводим
		Если Проведен()<=0 Тогда 
			ДокументОснование = 0;
			Основание = "";
			ОтменитьТранзакцию();
			СтатусВозврата(0);                        
			Возврат;
		КонецЕсли;
		
		// налоговая накладная
		Если глВосстановитьЗначение(,"ПечКолЭкзННПриБыстройПродаже")>=0 Тогда
			Параметр = СоздатьОбъект("СписокЗначений");
			Параметр.ДобавитьЗначение(ТекущийДокумент(),"ДокументОснование");
			ОткрытьФормуМодально("Обработка.ФормированиеНалоговыхДокументов#",Параметр);
			спНалоговые	  = СоздатьОбъект("СписокЗначений");
			фВсеПроведены = 1;
			Док = СоздатьОбъект("Документ");
			Док.ВыбратьПодчиненныеДокументы(ДатаДок,ДатаДок,ТекущийДокумент());
			Пока Док.ПолучитьДокумент()=1 Цикл
				Если Док.Вид() = "НалоговаяНакладная" Тогда
					Если Док.РодительскийДокумент = ТекущийДокумент() Тогда
						Если Док.Провести() = 0 Тогда
							фВсеПроведены=0
						КонецЕсли;
						спНалоговые.ДобавитьЗначение(Док.ТекущийДокумент());
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если фВсеПроведены=0 Тогда
				СделатьНеПроведенным();	// отменяем проведение накладной
				ОтменитьТранзакцию();
				СтатусВозврата(0);                        
				Возврат;
			КонецЕсли;
		КонецЕсли;

		// Приходный ордер
		Если (глВосстановитьЗначение(,"ПечКолЭкзПрихОрдераПриБыстройПродаже")>=0)
		И (ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
			ПКО = СоздатьОбъект("Документ.ПриходныйКассовый");
			ПКО.Новый();
			ПКО.ДатаДок = ДатаДок;
			ПКО.АвтоВремяТекущее();
			
			ПКО.Фирма = Фирма;
			ПКО.Автор = Автор; 

			ПКО.Счет 			= СчетПоКоду(?(Валюта = Гривня, "36.1", "36.2"));
			ПКО.НазначитьТип("Субконто1",ТипЗначенияСтр(Контрагент));
			ПКО.Субконто1 		= Контрагент;
			ПКО.ДокументДоговор = Договор;         
			ПКО.НазначитьТип("Субконто2",ТипЗначенияСтр(Договор));
			ПКО.Субконто2 		= Договор;					
			ПКО.ПринятоОт 		= ?(ПустоеЗначение(Контрагент.ПолнНаименование)=0,Контрагент.ПолнНаименование,Контрагент.Наименование);
			ПКО.ВидОплаты 		= Перечисление.ВидыОплаты.Оплата;
			ПКО.РСчет 			= глПолучитьКассу(Фирма,Валюта);
			ПКО.ВидНДС 			= ВидНДС;
			ПКО.СуммаВал		= Итог("СуммаСНДС");
			ПКО.НДС				= Итог("НДС");
			
			ПКО.ДокументОснование = ТекущийДокумент();
			ПКО.Основание 		  = СокрЛП(ПредставлениеВида())+" №"+СокрЛП(НомерДок)+" от "+Шаблон("[ДатаДок]");
			
			глУстановитьНомер(ПКО);	// меняем номер
			Если Константа.ПроводкиПоКассеТолькоОрдерами = Нет Тогда
				ПКО.НеПроводить = 1;
			КонецЕсли;	            
			ПКО.Записать();
			
			ПКО.Провести(1);
			Если ПКО.Проведен()<=0 Тогда 
				ДокументОснование = 0;
				Основание = "";
				СделатьНеПроведенным();	// отменяем проведение накладной
				ОтменитьТранзакцию();
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
        
		// печатаем счет
		Если глВосстановитьЗначение(,"ПечКолЭкзСчетаПриБыстройПродаже")>0 Тогда
			ОткрытьФорму(Счет.ТекущийДокумент(),"БыстраяПечать");
		КонецЕсли;
		
		// печатаем накладную
		Если глВосстановитьЗначение(,"ПечКолЭкзНакладнойПриБыстройПродаже")>0 Тогда
			Печать(1);
		КонецЕсли;
		
		// печатаем налоговую накладную
		Если глВосстановитьЗначение(,"ПечКолЭкзННПриБыстройПродаже")>0 Тогда
			// Печатаем все налоговые
			Для Инд = 1 по спНалоговые.РазмерСписка() Цикл
				НН = спНалоговые.ПолучитьЗначение(Инд);
				ОткрытьФорму(НН,"БыстраяПечать");
			КонецЦикла;
		КонецЕсли;                     
		
		// печатаем ПКО
		Если (глВосстановитьЗначение(,"ПечКолЭкзПрихОрдераПриБыстройПродаже")>=0)
		И (ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
			ОткрытьФорму(ПКО.ТекущийДокумент(),"БыстраяПечать");
		КонецЕсли;                     
		// фиксируем все изменения
		ЗафиксироватьТранзакцию();
		Форма.Закрыть(0);
	Исключение
		// при возникновении ошибки отменяем все изменения
		// здесь можно выдать сообщение об ошибке
		ОтменитьТранзакцию();
		// сообщение используется для отладки
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
    
КонецПроцедуры	    // БыстраяПродажа    

// ===============================
Процедура ЧастичноПровести()
	фМожноПроводить = 1;
	Если Проведен()=1 Тогда
		Если РежимПроведения=0 Тогда
			фМожноПроводить = 0;
			Предупреждение("Документ "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
			               " полностью проведен. Предварительное проведение невозможно.");
		КонецЕсли;
	ИначеЕсли ДатаДок<ПолучитьДатуТА() Тогда
		фМожноПроводить = 0;
		Предупреждение("Предварительное проведение задним числом невозможно.");
	ИначеЕсли ДатаДок<>РабочаяДата() Тогда
		фМожноПроводить = 0;
		Предупреждение("Дата документа "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
		               " отличается от рабочей даты ("+Формат(РабочаяДата(),"ДДММГГГГ")+"). Предварительное проведение невозможно.");
	КонецЕсли;
				
	Если фМожноПроводить = 1 Тогда
		Провести(3,1);
		Если Проведен() = 1 Тогда
			УстДоступность();
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры
    
// ===============================
Процедура УстСчетКонтрагента()
	Если (((СчетКонтрагента.Валютный=1) И (Валюта=Гривня))
	ИЛИ ((СчетКонтрагента.Валютный<>1) И (Валюта<>Гривня))
	ИЛИ (ПустоеЗначение(СчетКонтрагента)=1)) Тогда
		СчетКонтрагента = СчетПоКоду(?(Валюта = Гривня, "36.1", "36.2"));	
	КонецЕсли;
КонецПроцедуры
                       
// ===============================
Процедура ИзмСчетКонтрагента()
	Если ПустоеЗначение(СчетКонтрагента) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбранный счет не является счетом учета взаиморасчетов!",1,,"!");
		СчетКонтрагента = 0;             
	ИначеЕсли (Валюта = Гривня)
	И (СчетКонтрагента.Валютный = 1) Тогда
		глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
		СчетКонтрагента = 0;       
	ИначеЕсли (Валюта <> Гривня)
	И (СчетКонтрагента.Валютный = 0) Тогда
		глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
		СчетКонтрагента = 0;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ВыборКассы()
	спКассы = глЗаполнитьСпКассы(Фирма,Валюта);
	спКассы.ВыбратьЗначение(Касса,,,,2);
КонецПроцедуры

// ===============================
Процедура ИзмКасса()
	Если Касса.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	Если Валюта <> Касса.Валюта Тогда
		Предупреждение("Выбранная Вами касса должна соответствовать валюте документа!");
		Касса = глПолучитьКассу(Фирма,Валюта);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	УстСчетКонтрагента();
	ИзмКасса();
КонецПроцедуры	
                    
// ===============================
Процедура ИзмВидТорговли()
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Если (Касса.Выбран() = 0) ИЛИ (Касса.Валюта <> Валюта) Тогда
		    Касса = глПолучитьКассу(Фирма,Валюта);
		КонецЕсли;
	Иначе
		Касса = 0;
	КонецЕсли;
	УстГлубина();		
КонецПроцедуры	

// ===============================
Процедура ИзмДоговор()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			Если Валюта <> Валюта_Прежн Тогда
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
					УстСчетКонтрагента();
				КонецЕсли;
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;
			ВидНДС = Договор.ВидНДС;
			ИзмРеквизитШапки("ВидНДС");
		Иначе
			Дата_Курса=ДатаДок;
			Курс_Прежн = Курс;
			Курс = глКурсДляВалюты(Валюта,ДатаДок);
			Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
				// что-то изменилось, надо пересчитать цены
				глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;    
	ИзмВидТорговли();
КонецПроцедуры 

// ===============================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда
		Если Договор.Выбран()=1 Тогда
			Если Контрагент <> Договор.Контрагент Тогда
			    Договор = 0;
			КонецЕсли;
		КонецЕсли;	
		// подставляем БазДоговор в зависимоти от константы
		Если (Константа.ПодставлятьОсновнойДоговор = Да) 
		И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
		И (ПустоеЗначение(Договор)=1) Тогда
			Если Фирма = Контрагент.БазДоговор.Фирма Тогда
				Договор = Контрагент.БазДоговор;
				ИзмДоговор();
			КонецЕсли;
		КонецЕсли;
		Если ПустоеЗначение(Контрагент.КатегорияЦен.Получить(ДатаДок)) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
		Иначе	
			КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		КонецЕсли;      						
		Если Договор.Выбран() = 1 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
				Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
					ВидТорговли = Договор.ВидТорговли;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	                      		
		Если (ПустоеЗначение(Контрагент.ВидТорговли) = 0)
		И (ПустоеЗначение(ВидТорговли) = 1) Тогда   
			Если Контрагент.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
			    ВидТорговли = Контрагент.ВидТорговли;      
			Иначе	
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
			ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;
		УстановитьДокСкидок();
		УстГлубина();		
		Если ПустоеЗначение(ДокументОснование) = 0 Тогда
			Если ДокументОснование.Контрагент <> Контрагент Тогда
				//ДокументОснование = 0;   		//--- УМК Сандомирский В.Ю, (27.08.14) не обнуляем основание
			КонецЕсли;	
		КонецЕсли;		
		ДатаЦ = Контрагент.ДатаЦ.Получить(ДатаДок);
		Если ПустоеЗначение(ДатаЦ) = 1 Тогда
			ДатаЦ = ДатаДок;
		КонецЕсли;
	Иначе
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		Договор = 0;
		ДокументОснование = 0;
	КонецЕсли;                                        
	ИзмВидТорговли();    
	
	ЗаполнитьФирмуПечати(); //--- УМК Сандомирский В.Ю. (09.01.15)

КонецПроцедуры
                     
// ===============================
Процедура ОчиститьЗаказ()
	Если Договор.Выбран() = 1 Тогда
		Договор = 0;
	КонецЕсли;
КонецПроцедуры 

// ===============================
Процедура ЗаполнитьПоУмолчанию()
	СубконтоВалДох = глВосстановитьЗначение(Контекст,"СубконтоВалДох",Константа.БазВаловыйДоход);
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
		Дата_Курса=ДатаДок;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	КонецЕсли;
	Отпустил = глВосстановитьЗначение(,"БазОтпустил");
	// проверим реквизит Отпустил на принадлежность к выбранной фирме
	Если ПустоеЗначение(Отпустил) = 0 Тогда
		Если Отпустил.Фирма <> Фирма Тогда
			Отпустил = 0;
		КонецЕсли;	
	КонецЕсли;	
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад",Константа.ОсновнойСклад);  
	Подразделение = глВосстановитьЗначение(,"БазПодразделениеПродажи");
	// проверим реквизит Подразделение на принадлежность к выбранной фирме
	Если ПустоеЗначение(Подразделение) = 0 Тогда
		Если Подразделение.Владелец <> Фирма Тогда
			Подразделение = 0;
		КонецЕсли;	
	КонецЕсли;	
	Если ПустоеЗначение(Отпустил) = 0 Тогда
		Если Отпустил.Фирма <> Фирма Тогда
			Отпустил = 0;
		КонецЕсли;	
	КонецЕсли;	
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	УстСчетКонтрагента();
	ВидТары = Перечисление.ВидыТары.Залоговая;
	УстГлубина();       
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	
	Если ПустоеЗначение(Константа.ДатаДокументовПринудительная) <> 1 Тогда //--- УМК Сандомирский В.Ю, принудительная дата создания документов (13.06.14)
		ДатаДок = Константа.ДатаДокументовПринудительная;
	КонецЕсли;
	
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		Возврат;
	//ИначеЕсли НазваниеНабораПрав() <> "Администратор" Тогда
	//	Предупреждение("Непосредственный ввод запрещён");
	//	СтатусВозврата(0);  
	//	Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
	ИзмКонтрагент();
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	ЗаполнитьПоУмолчанию();
КонецПроцедуры

// ===============================
Процедура ПриВводеНаОсновании(Док)
	
	Если ПустоеЗначение(Константа.ДатаДокументовПринудительная) <> 1 Тогда //--- УМК Сандомирский В.Ю, принудительная дата создания документов (13.06.14)
		ДатаДок = Константа.ДатаДокументовПринудительная;
	КонецЕсли;
	
	Фирма = Док.Фирма;
	глУстановитьНомер(Контекст);
	ЗаполнитьПоУмолчанию();     
	Если глЕстьРеквизитШапки("Контрагент",Док.Вид()) = Да Тогда
		Контрагент = Док.Контрагент;
		ИзмКонтрагент();
	КонецЕсли;	
	глЗаполнитьШапкуНаОсн(Контекст,Док);
	Если Найти("Договор,Заказ",Договор.Вид()) = 0 Тогда
		// заказом может быть только договор или заказ
	    Договор = 0;
	КонецЕсли;
	Если глЕстьРеквизитШапки("Валюта",Док.Вид()) = Да Тогда
		Валюта = Док.Валюта;
		Если Док.Вид() = "Договор" Тогда
			Дата_Курса = ДатаДок;
			Курс	   = глКурсДляВалюты(Валюта,ДатаДок);
		Иначе
			Курс = Док.Курс;	
			Если глЕстьРеквизитШапки("Дата_Курса",Док.Вид()) = Да Тогда
				Дата_Курса=Док.Дата_Курса;
			Иначе
				Дата_Курса=Док.ДатаДок;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
	УстСчетКонтрагента();
	ИзмВидТорговли();
	Если (Док.Вид()="Счет") или  (Док.Вид()="ЗаказКлиента") или (Док.Вид() = "ВозвратнаяНакладная") или (Док.Вид() = "ПриходнаяНакладнаяЗапасы") Тогда
	    // табл. часть
	    Док.ВыбратьСтроки();                                         
		Пока Док.ПолучитьСтроку()=1 Цикл
			НоваяСтрока();
			ТМЦ 			= Док.ТМЦ;
			Ед 				= Док.Ед;
			Коэффициент 	= Док.Коэффициент;
			ЦенаБезНДС 		= Док.ЦенаБезНДС;
			ЦенаСНДС 		= Док.ЦенаСНДС;
			Кво 			= Окр(Док.Кво, 2+КвоЗнаков);
			Попытка
				ДопКво		= Док.ДопКво;
			Исключение
			КонецПопытки;
			Если (Док.Вид() = "ВозвратнаяНакладная") или (Док.Вид() = "ПриходнаяНакладнаяЗапасы") Тогда
				СуммаБезНДС		= Док.СуммаБезНДС;
				НДС				= Док.НДС;
				СуммаСНДС		= Док.СуммаСНДС;
				СуммаБезСкидки  = Док.СуммаБезНДС;
				Скидка          = 0;				
			Иначе
				глВыч_Суммы_Накл(Контекст,1);
				Набор			= Док.Набор;
				СуммаБезСкидки	= Док.СуммаБезСкидки;
				Скидка          = Док.Скидка;
				глВыч_Суммы_Накл(Контекст,2);
			КонецЕсли;
			
			Если Док.Вид()="ЗаказКлиента" тогда
				свес = Док.свес;
				кол = Док.кол;
				ВидУпаковки = Док.ВУП;
			Иначе
				Кол = Кво;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Док.Вид() = "Заказ" Тогда
		Если (ПустоеЗначение(Док.Контрагент)=1) Тогда
			глКомментарий("Расходную накладную можно вводить только на основании заказа от контрагента!",0,,"!!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;	
		Если Док.ПереработкаДавальческогоСырья=1 Тогда
			глКомментарий("Для отгрузки давальческой продукции используется документ ""Оказание услуг""!",0,,"!!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		// шапка
		Договор = Док;
	    // табл. часть
	    Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			Если Док.Продукция.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
				Продолжить;
			КонецЕсли;
			Если ПустоеЗначение(Док.Кво) = 1 Тогда
				Продолжить;
			КонецЕсли;
			глДобавитьТоварВДокумент(Контекст,Док.Продукция,Док.Кво,);
			Ед 			= Док.Ед;
			глИзмЕдин(Контекст);
		КонецЦикла;
	ИначеЕсли Док.Вид() = "ВыпускПродукции" Тогда
		// заполним реквизиты шапки, которые еще не заполнены          
		ДокументОснование = ПолучитьПустоеЗначение("Документ");
		Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
		ИзмКонтрагент();
		КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		// заполним табличную часть
		тбВыпускПродукции = СоздатьОбъект("ТаблицаЗначений");
		Док.ВыгрузитьТабличнуюЧасть(тбВыпускПродукции);
		// попробуем определить Договор/Заказ
	    тбВыпускПродукции.ВыбратьСтроки();
		Пока тбВыпускПродукции.ПолучитьСтроку() = 1 Цикл
			Если Договор <> тбВыпускПродукции.Заказ Тогда
				Если тбВыпускПродукции.НомерСтроки <> 1 Тогда
					// в табличной части несколько заказов, договор не заполняем
					Договор = ПолучитьПустоеЗначение("Документ");
					Прервать;
				Иначе
					Договор = тбВыпускПродукции.Заказ;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;		
		Если ПустоеЗначение(Договор) = 0 Тогда
			// можно определить контрагента
			Контрагент = Договор.Контрагент;
			ИзмКонтрагент();
		КонецЕсли;
		тбВыпускПродукции.Свернуть("Продукция,Ед,Коэффициент","Кво");
		// заполним табличную часть
	    тбВыпускПродукции.ВыбратьСтроки();
		Пока тбВыпускПродукции.ПолучитьСтроку() = 1 Цикл
			глДобавитьТоварВДокумент(Контекст,тбВыпускПродукции.Продукция,тбВыпускПродукции.Кво,);
			Ед 			= тбВыпускПродукции.Ед;
			глИзмЕдин(Контекст);
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры                      

// ===============================
Функция ПроверкаОснования(Док)	
	Если Док.Вид()="Счет" Тогда
		Если Док.ЧтоПродаем = Перечисление.ЧтоПродаем.НеоборотныеАктивы Тогда
			Предупреждение("Для реализации основных средств используйте документ ЛиквидацияНеоборАктивов");
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	Возврат 1;
КонецФункции

// ===============================
// основание - счет, договор, остатки взаиморасчетов
Процедура ВводНаОсновании(Док)        
	Если ПустоеЗначение(Док) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	   
	
	Если ПроверкаОснования(Док) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	 
	
	Если ПустоеЗначение(Константа.ДатаДокументовПринудительная) <> 1 Тогда //--- УМК Сандомирский В.Ю, принудительная дата создания документов (13.06.14)
		ДатаДок = Константа.ДатаДокументовПринудительная;
	КонецЕсли;

	Если Док.Вид()="УМК_ЗаказКлиента" Тогда //--- УМК Сандомирский В.Ю, (04.11.14) --- ввод на основании заказа клиента Тогда	
		ЗаполнитьПоУмолчанию();     
		Если глЕстьРеквизитШапки("Контрагент",Док.Вид()) = Да Тогда
			Контрагент = Док.Контрагент;
			ИзмКонтрагент();
		КонецЕсли;	
		глЗаполнитьШапкуНаОсн(Контекст,Док);
		Если Найти("Договор,Заказ",Договор.Вид()) = 0 Тогда
			// заказом может быть только договор или заказ
		    Договор = 0;
		КонецЕсли;
		Если глЕстьРеквизитШапки("Валюта",Док.Вид()) = Да Тогда
			Валюта = Док.Валюта;
			Если Док.Вид() = "Договор" Тогда
				Дата_Курса = ДатаДок;
				Курс	   = глКурсДляВалюты(Валюта,ДатаДок);
			Иначе
				Курс = Док.Курс;	
				Если глЕстьРеквизитШапки("Дата_Курса",Док.Вид()) = Да Тогда
					Дата_Курса=Док.Дата_Курса;
				Иначе
					Дата_Курса=Док.ДатаДок;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Валюта_Прежн = Валюта;
		Курс_Прежн = Курс;
		УстСчетКонтрагента();
		ИзмВидТорговли();		
		
		КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
		ДатаДок = Док.ДатаДок;		
		ДатаЦ = Док.ДатаЦ;
		Если ПустоеЗначение(Константа.ДатаДокументовПринудительная) <> 1 Тогда //--- УМК Сандомирский В.Ю, принудительная дата создания документов (19.02.15)
			ДатаДок = Константа.ДатаДокументовПринудительная;
		КонецЕсли;		
		ДокументОснование = Док;

		ИтКвоФакт = Док.Итог("КвоФакт");
		// табл. часть
	    Док.ВыбратьСтроки();                                         
		Пока Док.ПолучитьСтроку()=1 Цикл			
			Если (Док.КвоФакт = 0) И (ИтКвоФакт <> 0) И (Док.СтрокаВзвешена = Да) Тогда
				Сообщить("Для ТМЦ: " + Строка(Док.ТМЦ) + " в строке: " + Строка(Док.НомерСтроки) + " взвешенное количество = 0. Строка пропущена.");
			Иначе
				НоваяСтрока();
				ТМЦ 			= Док.ТМЦ;
				ИзмТМЦ();
				Ед 				= Док.Ед;
				Коэффициент 	= Док.Коэффициент;	
				ВидУпаковки 	= ?(ПустоеЗначение(Док.ВидУпаковкиН) = 1, Док.ВидУпаковки, Док.ВидУпаковкиН);
				ИзмВидУпаковки();
				СоздатьПеремещение = Док.СоздатьПеремещение;
				Если Док.КвоФакт <> 0 Тогда
					Кол = Док.КвоФакт;
					ИзмКол();
				Иначе
					Кол = 0;
					Кво = 0;
				КонецЕсли;				
				ДопКво 	= 0;				
			КонецЕсли;	
			
			Если (Док.фБылНапечатан = 0) И (Док.Итог("фБылНапечатан") > 0) Тогда
				фДозаказ = 1;
			КонецЕсли;			
		КонецЦикла;		
	Иначе
		//--- копируем общие реквзиты
		Для Инд = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл
			Рекв = Метаданные.ОбщийРеквизитДокумента(Инд).Идентификатор;
			УстановитьАтрибут(Рекв, Док.ПолучитьАтрибут(Рекв));
		КонецЦикла;
	
		//--- копируем реквизиты шапки
		Для Инд = 1 По Метаданные.Документ("СчетФактура").РеквизитШапки() Цикл
			Рекв = Метаданные.Документ("СчетФактура").РеквизитШапки(Инд).Идентификатор;
			Попытка
				УстановитьАтрибут(Рекв, Док.ПолучитьАтрибут(Рекв));
			Исключение КонецПопытки;
		КонецЦикла;
		
		
		//--- УМК Сандомирский В.Ю, (05.03.15)
		
		//--- вычисляем что уже введено на основании этой РН и заполняем отаток
		ТЗ_ТМЦ = СоздатьОбъект("ТаблицаЗначений");
		Док.ВыгрузитьТабличнуюЧасть(ТЗ_ТМЦ);
			
		Дк = СоздатьОбъект("Документ");
		Дк.ВыбратьПодчиненныеДокументы(,,Док.ТекущийДокумент());
		Пока Дк.ПолучитьДокумент() = 1 Цикл	
			
			Если Дк.ПометкаУдаления() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Если Дк.Вид() <> "СчетФактура" Тогда //--- Отчекасем все другие подчиненные не счета фактуры
				Продолжить;
			КонецЕсли;
			
			Дк.ВыбратьСтроки();
			Пока Дк.ПолучитьСтроку() = 1 Цикл
				//--- Проверяем перебором и вычитам если нужно
				ТЗ_ТМЦ.ВыбратьСтроки();
				Пока ТЗ_ТМЦ.ПолучитьСтроку() = 1 Цикл
					Если (Дк.ТМЦ = ТЗ_ТМЦ.ТМЦ) И (Дк.ВидУпаковки = ТЗ_ТМЦ.ВидУпаковки) Тогда
					
						ТЗ_ТМЦ.Кво 				= ТЗ_ТМЦ.Кво 			- Дк.Кво;
						ТЗ_ТМЦ.СуммаБезСкидки	= ТЗ_ТМЦ.СуммаБезСкидки - Дк.СуммаБезСкидки;
						ТЗ_ТМЦ.Скидка			= ТЗ_ТМЦ.Скидка 		- Дк.Скидка;
						ТЗ_ТМЦ.СуммаБезНДС		= ТЗ_ТМЦ.СуммаБезНДС	- Дк.СуммаБезНДС;
						ТЗ_ТМЦ.СуммаСНДС		= ТЗ_ТМЦ.СуммаСНДС		- Дк.СуммаСНДС;
						ТЗ_ТМЦ.НДС				= ТЗ_ТМЦ.НДС			- Дк.НДС;
						ТЗ_ТМЦ.свес				= ТЗ_ТМЦ.свес			- Дк.свес;
						ТЗ_ТМЦ.кол				= ТЗ_ТМЦ.кол			- Дк.кол;
						ТЗ_ТМЦ.ДопКво			= ТЗ_ТМЦ.ДопКво			- Дк.ДопКво;
						ТЗ_ТМЦ.СуммаУпаковки	= ТЗ_ТМЦ.СуммаУпаковки	- Дк.СуммаУпаковки;
						
					КонецЕсли;
				КонецЦикла;	
			КонецЦикла;			
		КонецЦикла;	
		
		//--- Заполняем то что осталось
		ТЗ_ТМЦ.ВыбратьСтроки();
		Пока ТЗ_ТМЦ.ПолучитьСтроку() = 1 Цикл
			Если ТЗ_ТМЦ.Кво > 0 Тогда
				НоваяСтрока();
				ТМЦ				= ТЗ_ТМЦ.ТМЦ;
				Предпочтение	= ТЗ_ТМЦ.Предпочтение;
				Кво				= ТЗ_ТМЦ.Кво;	
				Коэффициент		= ТЗ_ТМЦ.Коэффициент;
				Ед				= ТЗ_ТМЦ.Ед;
				ЦенаБезНДС		= ТЗ_ТМЦ.ЦенаБезНДС;
				ЦенаСНДС		= ТЗ_ТМЦ.ЦенаСНДС;
				СуммаБезСкидки	= ТЗ_ТМЦ.СуммаБезСкидки;
				Скидка			= ТЗ_ТМЦ.Скидка;
				СуммаБезНДС		= ТЗ_ТМЦ.СуммаБезНДС;
				СуммаСНДС		= ТЗ_ТМЦ.СуммаСНДС;
				НДС				= ТЗ_ТМЦ.НДС;
				Набор			= ТЗ_ТМЦ.Набор;
				свес			= ТЗ_ТМЦ.свес;
				кол				= ТЗ_ТМЦ.кол;
				ВУПТ			= ТЗ_ТМЦ.ВУПТ;
				ВесУп			= ТЗ_ТМЦ.ВесУп;
				ДопКво			= ТЗ_ТМЦ.ДопКво;
				ВидУпаковки		= ТЗ_ТМЦ.ВидУпаковки;;
				ЦенаУпаковки	= ТЗ_ТМЦ.ЦенаУпаковки;
				СуммаУпаковки	= ТЗ_ТМЦ.СуммаУпаковки;
				фДозаказ		= ТЗ_ТМЦ.фДозаказ;			
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
	ДокументОснование = Док;
	глУстановитьНомер(Контекст);
		
	ЗаполнитьФирмуПечати(); //--- УМК Сандомирский В.Ю. (09.01.15)	
КонецПроцедуры
           
// ===============================
Процедура ВыборОснования()  
	// Процедура по кнопке редактирования основания в докумнете
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ПроверкаОснования(ДокументОснование) = 0 Тогда 
			ДокументОснование = СтарОснование;              		
		КонецЕсли;	
		Если (ДокументОснование <> СтарОснование)
		И (ДокументОснование.Вид() <> "РасходыНаПриобретение") Тогда
			ПриВводеНаОсновании(ДокументОснование);	
		КонецЕсли;	
	КонецЕсли;	          
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
	ПриВыбореОснования();	
КонецПроцедуры	

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры

// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзмКво()
	Кол = Кво / (1-свес*0.01);
	ВесУп = глПолучитьВесУп(ТМЦ,Кол, ВидУпаковки,ДатаДок); //--- УМК Сандомирский В.Ю. (06.11.14) 

	глВыч_Суммы_Накл(Контекст);
КонецПроцедуры

Процедура ИзмКол()
	ВесУп = глПолучитьВесУп(ТМЦ,Кол, ВидУпаковки,ДатаДок); //--- УМК Сандомирский В.Ю. (06.11.14) 

	Если Кол = 0 Тогда
		Кол = Кво / (1-свес*0.01);
		Возврат;
	КонецЕсли;
	
	ВычитатьВес = ?((СоздатьПеремещение <> Да) ИЛИ (Контроль = Да), 1, 0);
	Если ТМЦ.ВычитатьВесУпаковки.Получить(ДатаДок) = 1 Тогда
		ВычитатьВес = 1;
	КонецЕсли;
		
	КолДляРасчета = Кол - ВесУп * ВычитатьВес;
	Кво	=	Окр(КолДляРасчета - (КолДляРасчета * (свес*0.01)), КвоЗнаков+2);
	глВыч_Суммы_Накл(Контекст);

	КонтрольЗаказа();	
КонецПроцедуры

Процедура УстСкидкаВес()
	Если ТМЦ.Выбран()=1 Тогда
		Если НеИспользоватьСВес = 1 Тогда
			свес = 0;
		Иначе
			//Если (ВУП = Перечисление.ВидыУпаковки.Вак) ИЛИ (ВУП = Перечисление.ВидыУпаковки.Газ) ИЛИ (ВУП = Перечисление.ВидыУпаковки.ГазО) Тогда
			свес = глПолучитьСкидкуНаВес(ВидУпаковки, ТМЦ, ДатаДок); //--- УМК Сандомирский В.Ю. (06.11.14) 
			Если (свес <> 0) И (Контрагент.СкидкаНаВес <> 0) Тогда
				свес = Контрагент.СкидкаНаВес;	
			КонецЕсли;
		КонецЕсли;
		ИзмКол();
	КонецЕсли;		
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
	//ВыбратьСтроки();
	//Пока ПолучитьСтроку() = 1 Цикл
	//	Кол = Кво;
	//	УстСкидкаВес();
	//КонецЦикла;
КонецПроцедуры //Обработка подбора

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	ОтображаемыеСлои = "Общий," + Значение;           
	Если Значение = "Основной" Тогда
		ОтображаемыеСлои = ОтображаемыеСлои + ",ОсновнойТорг";
	КонецЕсли;	
	Форма.ИспользоватьСлой(ОтображаемыеСлои,2);	
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Форма.кДатьСкидку.Видимость(0);
	КонецЕсли;	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (03.03.15) скопировал эту процедуру из РН
Функция ИтКол(ВернутьТолькоКво = 0)	
	
	ЕдВеса = Константа.ЕдиницаВеса;
	ИтКво = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ВычитатьВес = 1 - ТМЦ.ВычитатьВесУпаковки.Получить(ДатаДок);
		
		Если Ед.Единица = ЕдВеса Тогда
			ИтКво = ИтКво + Кол + ВесУп * ВычитатьВес;
		Иначе
			ИтКво = ИтКво + Кол * ТМЦ.Вес + ВесУп * ВычитатьВес;
		КонецЕсли;
	КонецЦикла;
	
	Если ВернутьТолькоКво = 1 Тогда
		Возврат ИтКво;
	Иначе
		Возврат "Ит. вес: " + Строка(ИтКво);
	КонецЕсли;
	
КонецФункции

// ===============================
Процедура Печать(БыстраяПечать=0, Экспорт_xls = 0) 
	
	Если ПустоеЗначение(ФирмаПечати) = 1 Тогда		//--- УМК Сандомирский В.Ю, (09.01.15) 
		Предупреждение("Заполните фирму печати");
		Возврат;
	КонецЕсли;
	
	ИмяФайла = "Рахунок_" + СокрЛП(НомерДок) + "_" + Строка(ДатаДок);
	
	Если ПустоеЗначение(Константа.ДатаПечатиПринудительная) = 1 Тогда //--- УМК Сандомирский В.Ю, (11.06.14) 
		ПечДатаДок = ДатаДок;	
	Иначе
		ПечДатаДок = Константа.ДатаПечатиПринудительная;
	КонецЕсли; //... УМК Сандомирский В.Ю, (11.06.14) 
	
	Если Константа.УМК_ДатаНачалаРаботыАвтотранспорта <= ДатаДок Тогда //--- УМК Сандомирский В.Ю. (17.06.2014)  автомобиль оп новому 
		ПечАвтомобиль = УМК_Автомобиль;
	Иначе
		ПечАвтомобиль = Автомобиль;
	КонецЕсли; //--- УМК Сандомирский В.Ю. (17.06.2014) 
	
	Если Фирма <> ФирмаПечати Тогда //--- УМК Сандомирский В.Ю. (17.06.2014)  срочно Нина (09.01.14) измененено ФирмаПечати
		Фир = ФирмаПечати;
		СБНДС = 1;
		ИмяСекцииНазвания = "НазваниеАльт";
	Иначе
		Фир = Фирма;
		СБНДС = 0;
		ИмяСекцииНазвания = "Название";
	КонецЕсли; //... УМК Сандомирский В.Ю. (17.06.2014)  срочно Нина 
	
	
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Если (Модифицированность() = 1) ИЛИ (ТекущийДокумент().Выбран() = 0) Тогда
			Предупреждение("Нельзя печатать не сохранённые РН");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");
	
	Таб.ИсходнаяТаблица("Накладная"+СуффиксТаблицы);
    
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,ВидУпаковки,Набор,Кво,Ед,Коэффициент,ЦенаБезНДС,ЦенаСНДС,СуммаБезСкидки,Скидка,СуммаБезНДС,НДС,СуммаСНДС,ВесУп,Кол");
	Адрес = глАдресСтрокой(?(Договор.Выбран() = 1, Договор.Адрес, Контрагент.ФизическийАдрес));
	
	ПечФорма = "Накладная";
	Язык = глЯзык(ПечФорма); 	
	глУстПропись(Валюта,Язык);
	ПечОснование="";
	//ПечОснование=глСтрокаОснование(Контекст,Договор,ДокументОснование);
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = ?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);
	
	МаксКвоЭкз = 3;
	Если ВвестиЧисло(МаксКвоЭкз, "Количество экземпляров", 1,0) = 0 Тогда
	    Возврат;
	КонецЕсли;
	Если НазваниеНабораПрав() = "Заказ" Тогда
	    МаксКвоЭкз = Макс(МаксКвоЭкз, 2);
	КонецЕсли;
	ВсеТара = 0;
	ВыводитьСК = Контрагент.ВыводитьСК;

	ЕдВеса = Константа.ЕдиницаВеса;
	Если ВыполнитьПроверкуПечати(ТаблТМЦ) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Инд = 1 По МаксКвоЭкз+ВыводитьСК Цикл
		Если Инд <> 1 Тогда
		    Таб.НоваяСтраница();
		КонецЕсли;
		Если (ВыводитьСК = 1) И (Инд = МаксКвоЭкз + ВыводитьСК) Тогда
			Если ВсеТара = 1 Тогда
				Продолжить;
			КонецЕсли;
		    Таб.ИсходнаяТаблица("Складская");			
		КонецЕсли;
		
		Таб.ВывестиСекцию(?(Инд >= МаксКвоЭкз, "РН", "Счет"));
		Ном = 1;     
		ВСоставе = 0;
		фЕстьТара = 0;
		ИтВес = 0; ИтСуммаТары = 0; ИтНДСТары = 0; ИтСуммаТарыБН = 0;
		ТаблТМЦ.ВыбратьСтроки();
		Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
			Если ТаблТМЦ.Набор.Выбран()=1 Тогда
				Если (ПустоеЗначение(ВСоставе)=1) или (ВСоставе<>ТаблТМЦ.Набор) Тогда
					Таб.ВывестиСекцию("ВСоставе");
					ВСоставе=ТаблТМЦ.Набор;
				КонецЕсли;
			Иначе
				Если ПустоеЗначение(ВСоставе)=0 Тогда
					ВСоставе=0;
				КонецЕсли;
			КонецЕсли;
			Если (ВидТары <> Перечисление.ВидыТары.Покупная) и (ТаблТМЦ.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
				ИтСуммаТары = ИтСуммаТары + ТаблТМЦ.СуммаБезСкидки;
				ИтНДСТары = ИтНДСТары + ТаблТМЦ.НДС;
				ИтСуммаТарыБН = ИтСуммаТарыБН + ТаблТМЦ.СуммаБезНДС;
				фЕстьТара = 1;
			    Продолжить;
			ИначеЕсли (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) и (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга) Тогда
			    ИтВес = ИтВес + ТаблТМЦ.Кво * ?(ТаблТМЦ.Ед.Единица = ЕдВеса, 1, ТаблТМЦ.ТМЦ.Вес);
			КонецЕсли;
			Если ТаблТМЦ.Ед.Единица = ЕдВеса Тогда
				КолвоПечати = ТаблТМЦ.Кол + ТаблТМЦ.ВесУп;
			Иначе
				КолвоПечати = ТаблТМЦ.Кол * ТаблТМЦ.ТМЦ.Вес + ТаблТМЦ.ВесУп;
			КонецЕсли;
			
			
			//--- УМК Сандомирский В.Ю. (06.10.14) печать бурды для Бернадской 
			ПечЦенаБезНДС 	= Формат(ТаблТМЦ.ЦенаБезНДС*ТаблТМЦ.Коэффициент-(ТаблТМЦ.Скидка/ТаблТМЦ.Кво),"Ч12.2"); 
			ПечСуммаБезНДС 	= Формат(ТаблТМЦ.СуммаБезНДС,"Ч12.2");
			
			
			Если ФирмаПечати.фПечатьСчетаФактурыСНДС = 1 Тогда	      //--- УМК Сандомирский В.Ю. (09.01.14)
				ПечЦенаБезНДС 	= Формат(ТаблТМЦ.ЦенаСНДС,"Ч12.2");
				ПечСуммаБезНДС 	= Формат(ТаблТМЦ.СуммаСНДС,"Ч12.2");
			КонецЕсли;		
		
			//... УМК Сандомирский В.Ю. (06.10.14) печать бурды для Бернадской 
			
			Таб.ВывестиСекцию("Строка");
			Ном = Ном+1;
		КонецЦикла;
		Если Ном = 1 Тогда
		    ВсеТара = 1;
		КонецЕсли;
		
		ИтВесБСК = глИтКол(Контекст, 1);
		
		
		//--- УМК Сандомирский В.Ю. (06.10.14) печать бурды для Бернадской 
		ПечИтогСуммаБезНДС = Формат(Итог("СуммаБезНДС")-ИтСуммаТарыБН,"Ч12.2");
		ПечИтогСуммаНДС    = Формат(Итог("НДС")-ИтНДСТары,"Ч12.2");
		
		Если ФирмаПечати.фПечатьСчетаФактурыСНДС = 1 Тогда	      //--- УМК Сандомирский В.Ю. (09.01.14)
			ПечИтогСуммаБезНДС = Формат(Итог("СуммаСНДС")-ИтСуммаТары,"Ч12.2");
			ПечИтогСуммаНДС    = 0;	
		КонецЕсли;		
		
		//... УМК Сандомирский В.Ю. (06.10.14) печать бурды для Бернадской 
		
		Если ОтЦеныСНДС = 1 Тогда
			Если (ВыводитьСК = 1) И (Инд = МаксКвоЭкз + ВыводитьСК) Тогда
			Иначе				
			    Таб.ВывестиСекцию("ИтогоБезНДС");
				Таб.ВывестиСекцию("ИтогоСНДС");
				Таб.ВывестиСекцию("ИтогоНДС");
			КонецЕсли;			
		Иначе
			Если (ВыводитьСК = 1) И (Инд = МаксКвоЭкз + ВыводитьСК) Тогда
			Иначе				
			    Таб.ВывестиСекцию("ИтогоБезНДС");
				Таб.ВывестиСекцию("ИтогоНДС");
				Таб.ВывестиСекцию("ИтогоСНДС");
			КонецЕсли;			
		КонецЕсли;
	
		// печать тары
		ИтНДСТары = 0;
		ИтСуммаТарыБН = 0;
		Если фЕстьТара = 1 Тогда
			Если ВидТары = Перечисление.ВидыТары.Возвратная Тогда
				ЗагТара = ?(Язык="у","Тара зворотна","Тара возвратная");
			ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
				ЗагТара = ?(Язык="у","Тара заставна","Тара залоговая");
			КонецЕсли;
			Таб.ВывестиСекцию("ШапкаТара");
		    Ном = 0;
			ТаблТМЦ.ВыбратьСтроки();
			Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
				Если (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
				    Продолжить;
				КонецЕсли;
				Ном = Ном + 1;
				Таб.ВывестиСекцию("СтрокаТара");
			КонецЦикла;
			ИтСуммаТары = Окр(ИтСуммаТары,2);
			ПечИтСумма = глФРМТ(ИтСуммаТары,Валюта,0);
			Таб.ВывестиСекцию("ИтогоТара");
		КонецЕсли;
		
	//	Если (ЕстьСкидка = 1) И (Итог("Скидка") <> 0) Тогда
	//		Таб.ВывестиСекцию("ИтогоСкидка");
	//	КонецЕсли;
	//	Таб.ВывестиСекцию("Пробел");
		Таб.ВывестиСекцию("Дно"+?(Инд >= МаксКвоЭкз, "", "С"));
	КонецЦикла;
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Если БыстраяПечать = 1 Тогда
		Таб.КоличествоЭкземпляров(глВосстановитьЗначение(,"ПечКолЭкзНакладнойПриБыстройПродаже"));
		Таб.Напечатать(0);
	Иначе	
		Таб.ТолькоПросмотр(1);
		Таб.Опции(0,0,,);
		Если Экспорт_xls = 1 Тогда
			глЭкспорт_xls(Таб, Контрагент, ИмяФайла, Фирма);
		Иначе
			Таб.Показать("ПЕЧАТЬ: Накладная","");
		КонецЕсли;
		глУстПропись(Гривня); 
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ДатьСкидку()
	Перем ВыбЗначение, ВыбПроцент, ВыбСумма;
	ВариантыСкидок = СоздатьОбъект("СписокЗначений");
	ВариантыСкидок.ДобавитьЗначение(1,"Процентом по накладной");
	ВариантыСкидок.ДобавитьЗначение(2,"Суммой по накладной");
	ВариантыСкидок.ДобавитьЗначение(3,"Процентом по строке");
	ВариантыСкидок.ДобавитьЗначение(4,"Суммой по строке");

	Если ВариантыСкидок.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;

	Если (ВыбЗначение = 1) или (ВыбЗначение = 3) Тогда
		Если ВвестиЧисло(ВыбПроцент,"Введите процент:",6,2) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	ИначеЕсли (ВыбЗначение = 2) или (ВыбЗначение = 4) Тогда
		Если ВвестиЧисло(ВыбСумма,"Введите сумму:",12,2) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;

	Если ВыбЗначение = 1 Тогда
	    // процентом по накладной
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Скидка = Окр(СуммаБезСкидки * ВыбПроцент / 100,2);
			глВыч_Суммы_Накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли ВыбЗначение = 2 Тогда
		// суммой по накладной
		ОсталосьРаспределить = ВыбСумма;

		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если НомерСтроки = КоличествоСтрок() Тогда
			    // в последнюю строку - то что осталось
				Скидка = ОсталосьРаспределить;
			Иначе
				// пропорционально
				Коэф = ?(Итог("СуммаБезСкидки") = 0,0,СуммаБезСкидки/Итог("СуммаБезСкидки"));
				Скидка = Окр(ВыбСумма * Коэф,2);
				ОсталосьРаспределить = ОсталосьРаспределить - Скидка;
			КонецЕсли;
			глВыч_Суммы_Накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли ВыбЗначение = 3 Тогда
		// процентом по строке
		Скидка = Окр(СуммаБезСкидки * ВыбПроцент / 100,2);
		глВыч_Суммы_Накл(Контекст,2);
	ИначеЕсли ВыбЗначение = 4 Тогда
		// суммой по строке
		Скидка = ВыбСумма;
		глВыч_Суммы_Накл(Контекст,2);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета=СоздатьОбъект("СписокЗначений");
	спСчета.ДобавитьЗначение(ТМЦ.Счет);
	спОтбор.Установить("Счет",спСчета);
	Если глПартионныйУчетПоСкладам = Да Тогда
	    спОтбор.Установить("МестоХранения",МестоХранения);
	КонецЕсли;
	спОтбор.Установить("Контекст",Контекст);      
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры
                      
// ===============================
Процедура ПриНачалеРедактированияСтроки()
	//Если ПустоеЗначение(Предпочтение)=1 Тогда  // --- УМК Сандомирский В.Ю. (26.11.14) убрал с формы предпочтение
	//	Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
	//	Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	//КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	//Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты"); // --- УМК Сандомирский В.Ю. (26.11.14) убрал с формы предпочтение
	//Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
КонецПроцедуры

Процедура ИзмфОстаткиНаДокумент()
	Если фОстаткиНаДокумент = 1 Тогда
		РегО = СоздатьОбъект("Регистр.Остатки");
		Если ТекущийДокумент().Выбран() = 1 Тогда
			Если СравнитьТА() = -1 Тогда
				РегО.ВременныйРасчет(1);
			    РассчитатьРегистрыНа(ТекущийДокумент());
			КонецЕсли;		    
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии() 
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	Если Форма.ТолькоПросмотр() = 1 Тогда
		// ===============================
		// Инициализируем список действий по кнопке "Действия"
		СписокДействий = глПолучитьСписокДействий("
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");	    
	КонецЕсли;
	ПриЗаписиПерепроводить(1);
	Форма.ДатаДок.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ВидТары.ВыполнятьФормулуТолькоПриИзменении(1);	
	Форма.ВидТорговли.ВыполнятьФормулуТолькоПриИзменении(1);	
                        
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="Строка" Тогда
			Если ВРег(Форма.Параметр)="БЫСТРАЯ ПРОДАЖА" Тогда
				ФлагБыстраяПродажа = Да;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	Если Константа.ИспользоватьСкидку <> Да Тогда
		Форма.СуммаБезСкидки.Видимость(0);
		Форма.Скидка.Видимость(0);
		Форма.кДатьСкидку.Доступность(0);
	КонецЕсли;
	МаксПроцОткл = Константа.МаксПроцОтклоненияЗаказа;

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Общий,Основной,ОсновнойТорг",2);
	
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;

	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;  
	СтараяДата = ДатаДок;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	глУстВидимостьЦен(Контекст);
	Если ПустоеЗначение(ВидТары) = 1 Тогда
	    ВидТары=Перечисление.ВидыТары.Залоговая;
	КонецЕсли;
	
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Форма.кДатьСкидку.Видимость(0);
	КонецЕсли;
	
	фОстаткиНаДокумент = ВосстановитьЗначение("ОстаткиНаДокумент");
	ИзмфОстаткиНаДокумент();
//	ДоступностьЗаказ();  
// ==== alexa
  
// ===== alexa - end	
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ТМЦ = Форма.Параметр Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений);
	
	//--- Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (27.10.14)
	ТекВидУпаковки = СоздатьОбъект("Справочник.ВидыУпаковки");
	СпВидыУпаковкиГлобальный = СоздатьОбъект("СписокЗначений");
	ТекВидУпаковки.ВыбратьЭлементы();
	Пока ТекВидУпаковки.ПолучитьЭлемент() = 1 Цикл
		Если ТекВидУпаковки.ПометкаУдаления() = 1 Тогда //--- пропускаем помеченные на удаление
			Продолжить;
		КонецЕсли;
		
		Если ТекВидУпаковки.Активна <> Перечисление.ДаНет.Да Тогда //--- пропускаем не активные
			Продолжить;
		КонецЕсли;
	
		Если ТекВидУпаковки.ЭтоГруппа() = 1 Тогда //--- пропускаем группы
			Продолжить;
		КонецЕсли;
		СпВидыУпаковкиГлобальный.ДобавитьЗначение(ТекВидУпаковки.ТекущийЭлемент());		
	КонецЦикла;
	//... Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (27.10.14)
	
	//Если НазваниеНабораПрав() <> "Администратор" Тогда
	//	Форма.ДатаЦ.Доступность(0);
	//КонецЕсли;	
	ЗаполнитьСписокФирмПечати(); //--- Строю Список фирм для печати //--- УМК Сандомирский В.Ю. (09.01.15)
	ПриВыбореОснования();
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	
	Если ПустоеЗначение(ФирмаПечати) = 1 Тогда		//--- УМК Сандомирский В.Ю, (09.01.15) 
		Предупреждение("Заполните фирму печати");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ);
	
	Если ВыполнитьПроверкуПечати(ТаблТМЦ, 1) = 0 Тогда
	    СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	ВыбратьСтроки();
	ИтогоВес = 0;
	ЕдВеса = Константа.ЕдиницаВеса;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Ед.Единица = ЕдВеса Тогда
			ИтогоВес = ИтогоВес + Кол + ВесУп;
		Иначе
			ИтогоВес = ИтогоВес + Кол * ТМЦ.Вес + ВесУп;
		КонецЕсли;
	КонецЦикла;
	
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Если глЕстьИзменения(Контекст, СтруктИзменений, "") = 1 Тогда		
		Автор = глПользователь;
	КонецЕсли;
	
	ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	глСохранитьЗначение(Контекст,"СубконтоВалДох",СубконтоВалДох);
	Если (ДатаДок > ТекущаяДата()) и (ТекущийДокумент().Выбран() = 0) Тогда
	    Попытка
			АвтоВремяОтключить();
			УстановитьВремя(0,1,0);
		Исключение КонецПопытки;
	ИначеЕсли (ДатаДок = ТекущаяДата()) и (ТекущийДокумент().Выбран() = 0) Тогда
		Ч = 0; М = 0; С = 0;
		ТекущееВремя(Ч,М,С);
		ТекВр = Ч*3600+М*60+С;
		//ТекВр = 18*3600 + 1;
		Если (ТекВр >= 10*3600) и (ТекВр <= 18*3600) Тогда
		    УстановитьВремя(18,0,0);
		Иначе
			УстановитьВремя(Ч,М,С);
		КонецЕсли;

		// найдём началом дня
		//НужноеВр = 18*3600;
		//Ч = 0; М = 0; С = 0;
		//ТекущееВремя(Ч,М,С);
		//ТекВр = Ч*3600+М*60+С;
		//ВремяНД = 0;
		//Если ТекВр <= НужноеВр Тогда
		//	ДокНД = СоздатьОбъект("Документ.НачДня");
		//	ДокНД.УстановитьФильтр(1,0);
		//	ДокНД.ВыбратьДокументы(ДатаДок, ДатаДок);
		//	Пока ДокНД.ПолучитьДокумент() = 1 Цикл
		//		Ч = 0; М = 0; С = 0;
		//		ДокНД.ПолучитьВремя(Ч,М,С);
		//		ВремяНД = Ч*3600+М*60+С;
		//	КонецЦикла;
		//	
		//	Если ТекВр >= ВремяНД Тогда
		//		Попытка
		//			АвтоВремяОтключить();
		//			УстановитьВремя(17,59,59);
		//		Исключение КонецПопытки;					
		//	КонецЕсли;
		//КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
		ИзмРеквизитШапки("ВидНДС");
		ФлагСтандОбр = 0;
	ИначеЕсли Рекв="Отпустил" Тогда
		КонтФирмы = Фирма;
		ФлагСтандОбр = 0;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);
	//ИначеЕсли Рекв = "Предпочтение" Тогда   // --- УМК Сандомирский В.Ю. (26.11.14) убрал с формы предпочтение
	//	Если ((глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.FIFO) 
	//	ИЛИ ((глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.LIFO))) Тогда
	//		ВыборПредПочтения();
	//	КонецЕсли;	
	//	ФлагСтандОбр = 0;
	ИначеЕсли Рекв="Касса" Тогда
		ВыборКассы();		
		ФлагСтандОбр = 0;
	ИначеЕсли Рекв="Автомобиль" Тогда
		ФлагСтандОбр = 0;
		СпрНА = СоздатьОбъект("Справочник.НеоборотныеАктивы");
		Если СпрНА.НайтиПоКоду("00000000001") = 1 Тогда
			Спис = СоздатьОбъект("СписокЗначений");
			СпрНА.ИспользоватьРодителя(СпрНА.ТекущийЭлемент());
			СпрНА.ВыбратьЭлементы();
			Пока СпрНА.ПолучитьЭлемент() = 1 Цикл
				Если СпрНА.ЭтоГруппа() = 0 Тогда
				    Спис.ДобавитьЗначение(СпрНА.ТекущийЭлемент());
				КонецЕсли;				
			КонецЦикла;
			
			СтрАвто = "";
			Если Спис.ВыбратьЗначение(СтрАвто,,,,2) = 1 Тогда
			    Автомобиль = СтрАвто.ПолнНаименование;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли (Рекв="Водитель") или (Рекв = "Экспедитор") Тогда
		ФлагСтандОбр = 0;
		СпрНА = СоздатьОбъект("Справочник.Экспедитор");
		Если СпрНа.Выбрать("Выберите " + ?(Рекв = "Водитель", "водителя", "экспедитора"), "ФормаСписка") = 1 Тогда
			УстановитьАтрибут(Рекв, Строка(СпрНА.ТекущийЭлемент()));
		КонецЕсли;
		
	ИначеЕсли Рекв = "ВидУпаковки" Тогда //--- УМК Сандомирский В.Ю, (27.10.14) 	
		
		ФлагСтандОбр = 0;
		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаГрупУпаковок) <> 1) 
				И (Константа.УМК_ДатаНачалаГрупУпаковок <= ДатаДок)  Тогда //--- УМК Сандомирский В.Ю. (27.10.14)
					
			// --- Строю локальный , разрешенный список для конкретного элемента
			ТекРазрешенныеВидыУпаковки = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
			СпВидыУпаковкиЛокальный = СоздатьОбъект("СписокЗначений");
			ТекРазрешенныеВидыУпаковки.ИспользоватьВладельца(ТМЦ.ТекущийЭлемент());
			ТекРазрешенныеВидыУпаковки.ВыбратьЭлементы();
			Пока ТекРазрешенныеВидыУпаковки.ПолучитьЭлемент() = 1 Цикл
				Если ТекРазрешенныеВидыУпаковки.ПометкаУдаления() = 1 Тогда
					Продолжить;
				КонецЕсли;
				СпВидыУпаковкиЛокальный.ДобавитьЗначение(ТекРазрешенныеВидыУпаковки.ТекущийЭлемент().ВидУпаковки);	// --- из подчиненного справочника	 
			КонецЦикла;
			СпВидыУпаковкиЛокальный.ДобавитьЗначение(НетУп);
			
			СтрВидУпаковки = "";
			Если СпВидыУпаковкиЛокальный.ВыбратьЗначение(СтрВидУпаковки,,,,2) = 1 Тогда
			    ВидУпаковки = СтрВидУпаковки;
			КонецЕсли;			
				
		Иначе 
			
			СтрВидУпаковки = "";
			Если СпВидыУпаковкиГлобальный.ВыбратьЗначение(СтрВидУпаковки,,,,2) = 1 Тогда
			    ВидУпаковки = СтрВидУпаковки;
			КонецЕсли;
			
		КонецЕсли;	
		
	ИначеЕсли Рекв = "ФирмаПечати" Тогда //--- УМК Сандомирский В.Ю, (09.01.15) 		
		
		ФлагСтандОбр = 0;
			
		СтрФирмаДляПечати = "";
		Если СпФирмыДляПечати.ВыбратьЗначение(СтрФирмаДляПечати,,,,2) = 1 Тогда
		    ФирмаПечати = СтрФирмаДляПечати;
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры
                      
Процедура ИзмТМЦ()
	глПриИзмененииТовара(Контекст);
	УстСкидкаВес();
КонецПроцедуры

// ===============================
Процедура ИзмВидУпаковки()
	УстСкидкаВес();
	глПриИзмененииТовара(Контекст, 1)	
КонецПроцедуры

Процедура ИзмНеИспользоватьСВес()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("Пересчитать скидку на вес в документе?", "Да+Нет") = "Да" Тогда
		    ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				УстСкидкаВес();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ИзмТриЗнака()
	Если КвоЗнаков = 0 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Кво = Окр(Кво, 2);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура Экспор_после()
	Если (Ф1 = 0) И (Контрагент.РазрешитьЭкспортФ2 = 0) Тогда
		Предупреждение("Экспорт возможен только для РН по Ф1 либо для отдельных контрагентов");
		Возврат;
	КонецЕсли;
	Если Выгружена = 1 Тогда
		Предупреждение("Накладная уже выгружена");
		Возврат;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
	    Если Вопрос("Документ необходимо сохранить. Сохранить сейчас?", "Да+Нет") = "Нет" Тогда
			Возврат;
		Иначе
			ПриЗаписи();
			Записать();
	    КонецЕсли;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Экспорт");
	
	ПечВидДок = "РН-";
	 
	Таб.ВывестиСекцию("Шапка");
	
	ЕстьОшибки = 0;
	
	ТекстПисьма = ""; //--- УМК Сандомирский В.Ю. (02.03.15)  текст письма
	
	ТЗ_Оставляем 	= СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ_Оставляем);
	ТЗ_Оставляем.УдалитьСтроки();
	
	ТЗ_Новая 		= СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ_Новая);
	ТЗ_Новая.УдалитьСтроки();
	Спец = глПолучитьКодыИзСпецификации(Контрагент, ДатаДок, 0);

	Фл_ушла = 0;
	БылиОшибкиНоВыгрузилиВсеравно = 0;
	НеКонтролироватьДекл = Константа.НеКонтролироватьДекл.Получить(ДатаДок);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ТМЦ.ЕстьКодС.Получить(ДатаДок) = 1 Тогда  //--- УМК Сандомирский В.Ю. (27.02.15) 			
			Фл_ушла = 1;			
			//РасчетнаяДекларируемаяЦена = ТМЦ.Цена_Прод.Получить(ДатаДок) + ?(ПустоеЗначение(ВидУпаковки)=1,0,Константа.УМК_ЦенаВУП_Ф1);
			РасчетнаяДекларируемаяЦена = ?(ПустоеЗначение(ВидУпаковки)=1, ТМЦ.Цена_Прод.Получить(ДатаДок), ТМЦ.Цена_ПродУп.Получить(ДатаДок));	
			Если (ЦенаСНДС > РасчетнаяДекларируемаяЦена) И (ТМЦ.ПечататьВДекларацию.Получить(ДатаДок) = 1) Тогда				
				ПечУпаковка = ""; //--- УМК Сандомирский В.Ю. (22.05.15) 
				Если (ПустоеЗначение(ВидУпаковки) <> 1) И (ВидУпаковки <> НетУп) Тогда
					ПечУпаковка = "Упаковка: " + СокрЛП(Строка(ВидУпаковки));
				КонецЕсли;	//... УМК Сандомирский В.Ю. (22.05.15) 				
				Если (Контрагент.фРазрешитьПревышениеДеклЦен = 1) ИЛИ (НеКонтролироватьДекл = Да) Тогда
					//--- норм					
					БылиОшибкиНоВыгрузилиВсеравно = 1;					
					ТекстПисьма =   ТекстПисьма + "" +  глПравильныйСимволПереноса
										+  глПравильныйСимволПереноса + " ТМЦ - " + ТМЦ + ПечУпаковка +  " Цена с НДС " + ЦенаСНДС + " больше декларируемой цены " + РасчетнаяДекларируемаяЦена + "Выгружена т.к. у контрагента разрешено превышение";	//--- УМК Сандомирский В.Ю. (02.03.15) 					
					Сообщить("В строке " + НомерСтроки +  " ТМЦ - " + ТМЦ +  " Цена с НДС " + ЦенаСНДС + " больше декларируемой цены " + РасчетнаяДекларируемаяЦена);					
				Иначе					
					Фл_ушла = 0;					
					ТекстПисьма =   ТекстПисьма + "" +  глПравильныйСимволПереноса
										+  глПравильныйСимволПереноса + " ТМЦ - " + ТМЦ + ПечУпаковка +  " Цена с НДС " + ЦенаСНДС + " больше декларируемой цены " + РасчетнаяДекларируемаяЦена;	//--- УМК Сандомирский В.Ю. (02.03.15) 								
					Сообщить("В строке " + НомерСтроки +  " ТМЦ - " + ТМЦ +  " Цена с НДС " + ЦенаСНДС + " больше декларируемой цены " + РасчетнаяДекларируемаяЦена);				
				КонецЕсли;	
			Иначе				
				//--- норм				
			КонецЕсли;			
		Иначе			
			Фл_ушла = 0;
			Сообщить("В строке " + НомерСтроки + " ТМЦ - " + ТМЦ + " не стоит признак ""есть код синхронизации"" ");				
		КонецЕсли;
	
		СтрБлок = ТМЦ.БлокироватьВыписку.Получить(ДатаДок);
		Если Сред(СтрБлок, НомерДняНедели(ДатаДок), 1) = "1" Тогда
			Сообщить("По ТМЦ: " + Строка(ТМЦ) + " в строке: " + Строка(НомерСтроки) + " выписка блокирована по дню недели");			
			Фл_ушла = 0;
		КонецЕсли;			
		//---
		Если Фл_ушла = 1 Тогда			
			ПечДляПечати = глПолучитьДляПечатиУпаковки(ТМЦ,ВидУпаковки, ДатаДок);
			Род = глВернутьВерхнегоРодителя(ВидУпаковки);
			Если (ПустоеЗначение(ВидУпаковки) = 1) ИЛИ (ВидУпаковки = НетУп) Тогда
				КодPLU = 0;
				СрокГодности = ТМЦ.СрокГодности;
				ЕдиницаИзмерения = ТМЦ.ЕдиницаИзмерения.Идентификатор();
			Иначе
				РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВидУпаковки);
				Если ПустоеЗначение(РВУ) = 0 Тогда
					КодPLU = РВУ.КодPLU;
					СрокГодности = РВУ.СрокГодности;
					ЕдиницаИзмерения = РВУ.ЕдиницаИзмерения.Идентификатор();
				Иначе
					КодPLU = "";
					СрокГодности = "";
					ЕдиницаИзмерения = "";
					Сообщить("Не удалось получить разрешенный вид упаковки для вида упаковки: " + Строка(ВидУпаковки) + " для ТМЦ: "  + Строка(ТМЦ) + " в строке: " + НомерСтроки);					
				КонецЕсли;
			КонецЕсли;
			ШтрихКод = "";
			КодКлиента = ПолучитьКодИзСпецификации(Спец, ТМЦ, ВидУпаковки, ШтрихКод);			

			Таб.ВывестиСекцию("Строка");
			ТЗ_Оставляем.НоваяСтрока();
			ТЗ_Оставляем.ТМЦ 			= ТМЦ;
			ТЗ_Оставляем.Предпочтение 	= Предпочтение;
			ТЗ_Оставляем.Кво			= Кво;
			ТЗ_Оставляем.Коэффициент	= Коэффициент;
			ТЗ_Оставляем.Ед				= Ед;
			ТЗ_Оставляем.ЦенаБезНДС		= ЦенаБезНДС;
			ТЗ_Оставляем.ЦенаСНДС		= ЦенаСНДС;
			ТЗ_Оставляем.СуммаБезСкидки	= СуммаБезСкидки;
			ТЗ_Оставляем.Скидка			= Скидка;
			ТЗ_Оставляем.СуммаБезНДС	= СуммаБезНДС;
			ТЗ_Оставляем.СуммаСНДС		= СуммаСНДС;
			ТЗ_Оставляем.НДС			= НДС;
			ТЗ_Оставляем.Набор			= Набор;
			ТЗ_Оставляем.свес			= свес;
			ТЗ_Оставляем.кол			= кол;
			ТЗ_Оставляем.ВУПТ			= ВУПТ;
			ТЗ_Оставляем.ВесУп			= ВесУп;
			ТЗ_Оставляем.ДопКво			= ДопКво;
			ТЗ_Оставляем.ВидУпаковки	= ВидУпаковки;
			ТЗ_Оставляем.ЦенаУпаковки	= ЦенаУпаковки;
			ТЗ_Оставляем.СуммаУпаковки	= СуммаУпаковки;
			ТЗ_Оставляем.фДозаказ		= фДозаказ;			
		Иначе			
			ТЗ_Новая.НоваяСтрока();
			ТЗ_Новая.ТМЦ 			= ТМЦ;
			ТЗ_Новая.Предпочтение 	= Предпочтение;
			ТЗ_Новая.Кво			= Кво;
			ТЗ_Новая.Коэффициент	= Коэффициент;
			ТЗ_Новая.Ед				= Ед;
			ТЗ_Новая.ЦенаБезНДС		= ЦенаБезНДС;
			ТЗ_Новая.ЦенаСНДС		= ЦенаСНДС;
			ТЗ_Новая.СуммаБезСкидки	= СуммаБезСкидки;
			ТЗ_Новая.Скидка			= Скидка;
			ТЗ_Новая.СуммаБезНДС	= СуммаБезНДС;
			ТЗ_Новая.СуммаСНДС		= СуммаСНДС;
			ТЗ_Новая.НДС			= НДС;
			ТЗ_Новая.Набор			= Набор;
			ТЗ_Новая.свес			= свес;
			ТЗ_Новая.кол			= кол;
			ТЗ_Новая.ВУПТ			= ВУПТ;
			ТЗ_Новая.ВесУп			= ВесУп;
			ТЗ_Новая.ДопКво			= ДопКво;
			ТЗ_Новая.ВидУпаковки	= ВидУпаковки;
			ТЗ_Новая.ЦенаУпаковки	= ЦенаУпаковки;
			ТЗ_Новая.СуммаУпаковки	= СуммаУпаковки;
			ТЗ_Новая.фДозаказ		= фДозаказ;
		КонецЕсли;		
	КонецЦикла;
	
	Если ТЗ_Новая.КоличествоСтрок() = КоличествоСтрок() Тогда //--- УМК Сандомирский В.Ю. (26.03.15) ничего не выгрузилось --- сообщаем
		Предупреждение("Ничего не выгрузилось",10);
	КонецЕсли;
	
	ИмяКонтрагента = СтрЗаменить(Строка(Контрагент), ",", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, ".", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, """", "");
	
	ИмяФайла = СокрЛП(Константа.ПутьЭкспортаРН) + СокрЛП(НомерДок) + "_" + 
		СтрЗаменить(Строка(ДатаДок), ".", "") + "_" + ИмяКонтрагента + ".mxl";
	Таб.Записать(ИмяФайла);
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
		
		Если ТЗ_Новая.КоличествоСтрок() = КоличествоСтрок() Тогда
			Сообщить("Экспорт выполнен , но ничего не выгрузилось","!");
		Иначе
			Сообщить("Экспорт выполнен успешно");		
		КонецЕсли;
		
		Выгружена = 1;        
	Иначе
		Сообщить("Экспорт не удался");
		Выгружена = 0;
		Возврат;				//--- УМК Сандомирский В.Ю. (02.03.15) лишний раз ничего не делаем потому что экспорт неудался
	КонецЕсли;
	
	
	Если ТекстПисьма <> "" Тогда	//--- УМК Сандомирский В.Ю. (02.03.15) 
				
		ТекстПисьмаОкончательный = "" + глПравильныйСимволПереноса + глПравильныйСимволПереноса 
					+ " Счет-фактура : " 		+ СокрЛП(Строка(ТекущийДокумент()))  + глПравильныйСимволПереноса + глПравильныйСимволПереноса	
					+ " Дата документа : " 				+ ДатаДок + глПравильныйСимволПереноса
					+ " Родитель контрагента : " 		+ Контрагент.Родитель + глПравильныйСимволПереноса  //--- УМК Сандомирский В.Ю. (22.05.15) 
					+ " Контрагент : " 					+ Контрагент  + глПравильныйСимволПереноса
					+ " Тип цен накладной : " 			+ КатегорияЦен + глПравильныйСимволПереноса			//--- УМК Сандомирский В.Ю. (22.05.15) 
					+ " Сумма накладной : " 			+ Формат(Итог("СуммаСНДС"),"Ч15.2") + глПравильныйСимволПереноса + глПравильныйСимволПереноса					
					+ " Пользователь :" 				+ Строка(глПользователь);
						
		ТекстПисьмаОкончательный = ТекстПисьмаОкончательный + глПравильныйСимволПереноса + глПравильныйСимволПереноса + ТекстПисьма;
		
		Если БылиОшибкиНоВыгрузилиВсеравно = 1 Тогда
			ТемаПисьма = "Уведомление (Выгружена): не совпадение деклариуемой цены и цены в накладной при ЭКСПОРТЕ в ф1 ";	
		Иначе	
			ТемаПисьма = "Уведомление : не совпадение деклариуемой цены и цены в накладной при ЭКСПОРТЕ в ф1 ";	
		КонецЕсли;
		
		глОтправитьУведомлениеЭП("ДекларированныеЭкспорт", ТемаПисьма , ТекстПисьмаОкончательный);
			
	КонецЕсли;
			
	Если ТЗ_Новая.КоличествоСтрок() > 0   Тогда
			
		Если ТЗ_Новая.КоличествоСтрок() < КоличествоСтрок() Тогда
		
			ДокНоваяРН = СоздатьОбъект("Документ.СчетФактура");
			ДокНоваяРН.Новый();
			
			//--- копируем общие реквзиты
			Для Инд = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл
				Рекв = Метаданные.ОбщийРеквизитДокумента(Инд).Идентификатор;
				ДокНоваяРН.УстановитьАтрибут(Рекв, ТекущийДокумент().ПолучитьАтрибут(Рекв));
			КонецЦикла;
		
			//--- копируем реквизиты шапки
			Для Инд = 1 По Метаданные.Документ("СчетФактура").РеквизитШапки() Цикл
				Рекв = Метаданные.Документ("СчетФактура").РеквизитШапки(Инд).Идентификатор;
				ДокНоваяРН.УстановитьАтрибут(Рекв,ТекущийДокумент().ПолучитьАтрибут(Рекв));
			КонецЦикла;
			
			ДокНоваяРН.ЗагрузитьТабличнуюЧасть(ТЗ_Новая);
			ДокНоваяРН.Ф1 = 0;
			
			
			ДокНоваяРН.ИтогоВес 	= 0; //--- Обнуляем вес
			ДокНоваяРН.ИтогоВесК 	= 0; //--- Обнуляем перевес
			
			ТекСекунды 	= 0;
			ТекМинуты  	= 0;
			ТекЧасы	 	= 0;
			
			ДокНоваяРН.ДатаДок = ДатаДок;
			ПолучитьВремя(ТекЧасы,ТекМинуты,ТекСекунды);	
			
			ДокНоваяРН.АвтоВремяОтключить();
			ДокНоваяРН.УстановитьВремя(ТекЧасы,ТекМинуты,ТекСекунды);	
			
			ДокНоваяРН.УМК_РН_Родитель = ТекущийДокумент();
			ДокНоваяРН.Записать();
			
			ОткрытьФорму(ДокНоваяРН.ТекущийДокумент(), 10);
			
			//--- заполняем тек док оставшимися и доченюю лепим
			ЗагрузитьТабличнуюЧасть(ТЗ_Оставляем);
			УМК_РН_Дочерняя = ДокНоваяРН.ТекущийДокумент();
			Записать();			
		КонецЕсли;			
	КонецЕсли;		
КонецПроцедуры

// =============================== 
Процедура Экспор_до()
	Если (Ф1 = 0) И (Контрагент.РазрешитьЭкспортФ2 = 0) Тогда
		Предупреждение("Экспорт возможен только для РН по Ф1 либо для отдельных контрагентов");
		Возврат;
	КонецЕсли;
	Если Выгружена = 1 Тогда
		Предупреждение("Накладная уже выгружена");
		Возврат;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
	    Если Вопрос("Документ необходимо сохранить. Сохранить сейчас?", "Да+Нет") = "Нет" Тогда
			Возврат;
		Иначе
			ПриЗаписи();
			Записать();
	    КонецЕсли;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
		Возврат;
	КонецЕсли;

	Спец = глПолучитьКодыИзСпецификации(Контрагент, ДатаДок, 0);	
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Экспорт");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ПечДляПечати = глПолучитьДляПечатиУпаковки(ТМЦ,ВидУпаковки, ДатаДок);
		Род = глВернутьВерхнегоРодителя(ВидУпаковки);
		ШтрихКод = "";
		КодКлиента = ПолучитьКодИзСпецификации(Спец, ТМЦ, ВидУпаковки, ШтрихКод);
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;

	ИмяКонтрагента = СтрЗаменить(Строка(Контрагент), ",", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, ".", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, """", "");
	
	ИмяФайла = СокрЛП(Константа.ПутьЭкспортаРН) + СокрЛП(НомерДок) + "_" + 
		СтрЗаменить(Строка(ДатаДок), ".", "") + "_" + ИмяКонтрагента + ".mxl";
	Таб.Записать(ИмяФайла);
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
	    Сообщить("Экспорт выполнен успешно");
		Выгружена = 1;        
	Иначе
		Сообщить("Экспорт не удался");
		Выгружена = 0;
	КонецЕсли;
КонецПроцедуры

Процедура Экспор()
	Если Константа.УМК_АвтоРазбиватьРН = Да Тогда
		Экспор_после();
	Иначе
		Экспор_до();
	КонецЕсли;	
КонецПроцедуры

Процедура ИзмФ1()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глВыч_Суммы_Накл(Контекст,1);
	КонецЦикла;
КонецПроцедуры

// ===============================

//email - отправка печатной фоомы документа
//
Процедура ПечатьНаEmail()
	
	Варианты= СоздатьОбъект("СписокЗначений");
	Варианты.ДобавитьЗначение("&Печать");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
		Если Результат = 1 Тогда
			Печать(,1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

//======================================================================
Функция СуммаБезСкидки()
	Возврат Окр(ЦенаБезСкидки * Кво, 2);
КонецФункции // СуммаБезСкидки

//======================================================================
Функция Разница()
	Возврат Окр(ЦенаСНДС * Кво, 2) - Окр(ЦенаБезСкидки * Кво, 2);
КонецФункции // СуммаБезСкидки

//======================================================================
Функция ВывестиИтогоБезСкидки()
	СуммаБезСкд = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		СуммаБезСкд = СуммаБезСкд + ?(ЦенаБезСкидки = ЦенаСНДС, СуммаСНДС, ЦенаБезСкидки * Кво);
	КонецЦикла;
	
	Разница = Окр(СуммаБезСкд - Итог("СуммаСНДС"), 3);
	Возврат "Без скидки: "+ Формат(СуммаБезСкд, "Ч12.2") + ", разн.: " +  Формат(Разница, "Ч12.2")
КонецФункции // 


// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|ОбновлениеЦен,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");

ТЗКонтроля = СоздатьОбъект("ТаблицаЗначений");