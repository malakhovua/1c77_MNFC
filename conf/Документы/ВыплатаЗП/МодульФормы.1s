Перем СписокДействий;        
Перем ПериодВед, Ит;   
Перем НачальнаяДатаДокумента;
Перем Сч661;
Перем ИтПоСальдо;
Перем Пересчитано;
Перем ИтБух;
Перем ИтБух661; //--- УМК Сандомирский В.Ю, (24.06.14) для вычисления уже начисленного по нарядам

Перем ТЗ_АвансыСотрудников, ТЗ_ВыплаченыеАвансы, ТЗ_Примечания, ТекБухИтоги; //--- УМК Сандомирский В.Ю, (05.12.14)


Процедура Пересчитать(НеЗаполнять = 0) Далее

//====================================================================== //--- УМК Сандомирский В.Ю, (10.06.14)
Процедура РасчитатьЗаработал()
	//Если (Сотрудник.Выбран() = 1) и (ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс) Тогда
	//	//--- УМК Сандомирский В.Ю, заработано на момент выплаты аванса по данным табелей (10.06.14)
	//	Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс Тогда
	//		
	//		ДокНачисление = СоздатьОбъект("Документ.НачислениеЗП");	
	//		ЕстьНачисление = 0;
	//		СреднечасоваяЗП = 0;
	//		СреднедневнаяЗП = 0;
	//		ДокНачисление.УстановитьФильтр(1,0,1);
	//		ДокНачисление.ВыбратьДокументы(НачМесяца(ДобавитьМесяц(ДатаДок,-1)), КонМесяца(ДобавитьМесяц(ДатаДок,-1)));		
	//		Пока ДокНачисление.ПолучитьДокумент() = 1 Цикл	
	//			ДокНачисление.ВыбратьСтроки();
	//			Пока ДокНачисление.ПолучитьСтроку() = 1 Цикл
	//				Если ДокНачисление.Сотрудник = Сотрудник Тогда
	//					ЕстьНачисление = 1;	
	//					
	//					Попытка
	//						СреднечасоваяЗП = ДокНачисление.Начислено / ДокНачисление.ОтработаноЧасов;	
	//					Исключение
	//						//Сообщить("Начисление :" + ДокНачисление + " Сотрудник " + ДокНачисление.Сотрудник + "???" );
	//					КонецПопытки;
	//					Попытка
	//						СреднедневнаяЗП = ДокНачисление.Начислено / ДокНачисление.ОтработаноДней;	
	//					Исключение
	//						//Сообщить("Начисление :" + ДокНачисление + " Сотрудник " + ДокНачисление.Сотрудник + "???" );
	//					КонецПопытки;
	//						
	//				КонецЕсли;	
	//			КонецЦикла;
	//		КонецЦикла;	
	//		
	//		Если ЕстьНачисление = 0 Тогда
	//			//Сообщить("Сотрудник: " + Строка(Сотрудник) + " не указан ни в одном расчете заработной платы"); //--- закоментил УМК Сандомирский В.Ю. (05.12.14)
	//		КонецЕсли;	
	//				
	//		ДокТабель = СоздатьОбъект("Документ.УМК_Табель");	
	//		
	//		ЕстьТабель = 0;
	//		ДокТабель.УстановитьФильтр(1,0,1);
	//		ДокТабель.ВыбратьДокументы(НачМесяца(ДатаДок),КонМесяца(ДатаДок));
	//		Пока ДокТабель.ПолучитьДокумент() = 1 Цикл
	//			ДокТабель.ВыбратьСтроки();
	//			Пока ДокТабель.ПолучитьСтроку() = 1 Цикл
	//				Если ДокТабель.Сотрудник = Сотрудник Тогда
	//					ЕстьТабель = 1;		
	//					
	//					//---- ТУТ НУЖНО РАСЧИТАТЬ КОЛИЧЕСТВО отработаных дней надату документа  (на дату выплаты)
	//					
	//					Для Инд = 1 По ДатаМесяц(ДатаДок) Цикл		
	//						
	//						Атр = ДокТабель.ПолучитьАтрибут("Ч"+Инд);
	//						Часов = Число(Атр);
	//						ЧасовН = Число(ДокТабель.ПолучитьАтрибут("ЧН"+Инд));
	//						ЧасовД = Число(ДокТабель.ПолучитьАтрибут("ЧД"+Инд));
	//												
	//						СменВсего		= СменВсего 	+ Мин(Часов,1);
	//						СменНочных		= СменНочных 	+ Мин(ЧасовН,1);
	//						
	//						Если Врег(СокрЛП(ДокТабель.ПолучитьАтрибут("ЧД"+Инд))) = "О" Тогда
	//							СменДневных 	= СменДневных	+ 1;
	//						Иначе
	//							СменДневных 	= СменДневных	+ Мин(ЧасовД,1);
	//						КонецЕсли;
	//						
	//						ЧасовВсего 		= ЧасовВсего 	+ Часов;
	//						ЧасовНочных 	= ЧасовНочных 	+ ЧасовН;
	//						ЧасовДневных 	= ЧасовДневных 	+ ЧасовД;
	//					
	//					КонецЦикла;
	//								
	//				//	ОтработаноЧасовНаМоментВыплаты 	= ЧасовНочных + ЧасовДневных;
	//				//	ОтработаноДнейНаМоментВыплаты 	= СменНочных  + СменДневных;
	//					
	//					Если Сотрудник.Оклад.Получить(ДатаДок) > 0 Тогда // --- УМК Сандомирский В.Ю. (24.04.14)
	//						ЗаработаноНаМоментВыплаты = СреднедневнаяЗП * ОтработаноДнейНаМоментВыплаты;
	//					Иначе
	//						ЗаработаноНаМоментВыплаты = СреднечасоваяЗП * ОтработаноЧасовНаМоментВыплаты;
	//					КонецЕсли;
	//					
	//					//Если СреднечасоваяЗП <> 0 Тогда
	//					//	ЗаработаноНаМоментВыплаты = СреднечасоваяЗП * ОтработаноЧасовНаМоментВыплаты;	
	//					//ИначеЕсли СреднедневнаяЗП <> 0 Тогда
	//					//	ЗаработаноНаМоментВыплаты = СреднедневнаяЗП * ОтработаноДнейНаМоментВыплаты;
	//					//КонецЕсли;		
	//					
	//				КонецЕсли;	
	//			КонецЦикла;
	//		КонецЦикла;
	//				
	//		Если ЕстьТабель = 0 Тогда
	//			
	//			//Сообщить("Сотрудник: " + Строка(Сотрудник) + " не указан ни в одном табеле");
	//			//--- Пробуем посмотреть по сальдо Кт на конец дня документа.              //--- УМК Сандомирский В.Ю, (24.06.14) для вычисления уже начисленного по нарядам
	//			Если ИтБух661.ПолучитьСубконто(1,1, Сотрудник) = 1 Тогда
	//			    ЗаработаноНаМоментВыплаты = ИтБух661.СНК();
	//			КонецЕсли;
	//					
	//		КонецЕсли;		
	//		
	//	КонецЕсли; //... УМК Сандомирский В.Ю,
	//
	//КонецЕсли;
	
КонецПроцедуры // гл

//====================================================================== //--- УМК Сандомирский В.Ю, (21.07.14)
Процедура РасчитатьДолгПоЗайму()
	
	ЗадолженностьЗайм = 0;
	
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ИспользоватьСубконто(ВидыСубконто.Сотрудники,Сотрудник, 1);
	Ит.ИспользоватьСубконто(ВидыСубконто.УМК_ДоговорЗайма,, 1);
	Ит.ИспользоватьСубконто(ВидыСубконто.УМК_МесяцПогашенияЗайма,, 1);
	Если Выбран() = 1 Тогда
		ДатаЗапроса = ТекущийДокумент();
	Иначе
		ДатаЗапроса = ДатаДок;
	КонецЕсли;
	
	Ит.ВыполнитьЗапрос(,ДатаЗапроса, СчетПоКоду("3721"));
	Ит.ВыбратьСубконто(1);
	Пока Ит.ПолучитьСубконто(1) = 1 Цикл
		Ит.ВыбратьСубконто(2);
		Пока Ит.ПолучитьСубконто(2) = 1 Цикл
			Ит.ВыбратьСубконто(3);
			Пока Ит.ПолучитьСубконто(3) = 1 Цикл
				Если КонМесяца(Ит.Субконто(3)) <= КонМесяца(ДатаДок) Тогда
					ЗадолженностьЗайм = ЗадолженностьЗайм + Ит.СНД();
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры // РасчитатьДолгПоЗайму()

//====================================================================== //--- УМК Сандомирский В.Ю, (16.12.14)
Функция РасчитатьВыплатуАванса(ТекСотрудник)
	
	ЗадолженностьЗайм = 0;
	
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ИспользоватьСубконто(ВидыСубконто.Сотрудники,ТекСотрудник, 1);
	Ит.ИспользоватьСубконто(ВидыСубконто.МесяцНачисленияЗП,МесяцНачисленияЗП, 1);
	Ит.ВыполнитьЗапрос(НачМесяца(МесяцНачисленияЗП),КонМесяца(МесяцНачисленияЗП), СчетПоКоду("АВ"));
	Ит.ВыбратьСубконто(1);
	Пока Ит.ПолучитьСубконто(1) = 1 Цикл
		Ит.ВыбратьСубконто(2);
		Пока Ит.ПолучитьСубконто(2) = 1 Цикл
			Возврат Ит.КО();		
		КонецЦикла;
	КонецЦикла;
	
КонецФункции // РасчитатьВыплатуАванса()

// ===============================
Функция УстДоступность()
	Осн = ?(ВидНачисления = ОсновнаяЗП, 1, 0);
	ВыпКред = ?(ВидНачисления = ПогашениеЗайма, 1, 0);
	Форма.кЗаполнитьОсн.Видимость(Осн);
	Форма.кЗаполнитьПроч.Видимость(1-Осн);
	Форма.ДоговорЗайма.Видимость(ВыпКред);				//--- УМК Сандомирский В.Ю, (17.07.14)
	Форма.МесяцПогашения.Видимость(ВыпКред);			//--- УМК Сандомирский В.Ю, (17.07.14)
	Форма.ДатаУвольнения.Видимость(1-ВыпКред);			//--- УМК Сандомирский В.Ю, (17.07.14)
	//Форма.Депонировано.Видимость(1-ВыпКред);			//--- УМК Сандомирский В.Ю, (17.07.14)  (16.12.14)
	Форма.Фирма.Видимость(0);
	Форма.Заголовок(глЗаголовок(Контекст,"Выплата з/п"));
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кЗаполнитьОсн.Доступность(0);
		Форма.кЗаполнитьПроч.Доступность(0);
//		Форма.кДействия.Доступность(0);          
		Форма.кФирма.Доступность(0);               		
	КонецЕсли; 
	
	//--- УМК Сандомирский В.Ю, заработано на момент выплаты аванса (10.06.14)
	//Форма.ОтработаноДнейНаМоментВыплаты.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	//Форма.ОтработаноЧасовНаМоментВыплаты.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
//	Форма.ЗаработаноНаМоментВыплаты.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	Форма.ЗадолженностьЗайм.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	//... УМК Сандомирский В.Ю, заработано на момент выплаты аванса (10.06.14)
	
	Форма.Депонировано.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.ОсновнаяЗП,1,0)); 			//--- УМК Сандомирский В.Ю, (16.12.14)
	
	Форма.ПримечаниеАванс.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0)); 			//--- УМК Сандомирский В.Ю, (15.12.14)
	Форма.колРучноеИзменениеАванса.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0)); 	//--- УМК Сандомирский В.Ю, (15.12.14)
	Форма.НачисленоАванса.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0)); 			//--- УМК Сандомирский В.Ю, (16.12.14)
	Форма.ВыплаченоАванса.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0)); 			//--- УМК Сандомирский В.Ю, (16.12.14)
	Форма.колНесколькоАвансов.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0)); 		//--- УМК Сандомирский В.Ю, (22.12.14)
	
	Форма.колонкаФлагОснованиеРасчетаАванса.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	Форма.фФлагКраснаяГалочка.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	Форма.тФлагКраснаяГалочка.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	Форма.фФлагСиняяГалочка.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	Форма.тФлагСиняяГалочка.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	Форма.фФлагКрасныйПлюсик.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	Форма.тФлагКрасныйПлюсик.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	Форма.фФлагСинийПлюсик.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	Форма.тФлагСинийПлюсик.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	Форма.фФлагКрасныйМинусик.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));		//--- УМК Сандомирский В.Ю, (23.12.14)
	Форма.тФлагКрасныйМинусик.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));		//--- УМК Сандомирский В.Ю, (23.12.14)
	Форма.грРучноеИзменениеАванса.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));	//--- УМК Сандомирский В.Ю, (23.12.14)
	
	Форма.кРасчитать.Видимость(?(ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс,1,0));
	
	Возврат "";
КонецФункции //УстДоступность

// ===============================
Процедура ИзмКасса()
	Если Касса.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли; 
	Если Касса.Владелец <> Фирма Тогда
		Касса = глПолучитьКассу(Фирма, Гривня);
		Предупреждение("Выбранная касса принадлежит другой фирме!");
		Возврат;
	КонецЕсли;
	Если Касса.Валюта <> Гривня Тогда
	    Предупреждение("Выплачивать зарплату можно только в национальной валюте!");
		Касса = глПолучитьКассу(Фирма, Гривня);
	КонецЕсли; 
	//Если Касса.Безнал = 1 Тогда
	//    Предупреждение("Нельзя выбирать безналичные расчетные счета!");
	//	Касса = глПолучитьКассу(Фирма, Гривня);
	//КонецЕсли; 
КонецПроцедуры

// ==============================
Процедура ИзмСотрудник()
	
	Если (Сотрудник.Выбран() = 1) и ((ВидНачисления = ОсновнаяЗП) ИЛИ (ВидНачисления = Перечисление.ВидыНачисленияЗП.Бонусы)) Тогда 
		Сумма = 0;
		Если ИтБух.ПолучитьСубконто(1,1, Сотрудник) = 1 Тогда
		    Сумма = (ИтБух.КО() * Процент / 100 + ИтБух.СНК()) - ИтБух.ДО();
		КонецЕсли;
	КонецЕсли;

	Если (Сотрудник.Выбран() = 1) и (ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс) Тогда //--- УМК Сандомирский В.Ю, (21.07.14)
		//РасчитатьЗаработал();  //--- УМК Сандомирский В.Ю, (16.12.14)
		РасчитатьДолгПоЗайму();		
	КонецЕсли;
	
КонецПроцедуры

// ======================================
Процедура ИзмФирма()
	Ит.ИспользоватьРазделительУчета(Фирма);
	Если Касса.Выбран() = 1 Тогда
		Если Касса.Владелец <> Фирма Тогда
			Касса = глПолучитьКассу(Фирма, Гривня);
		КонецЕсли;
	Иначе
		Касса = глПолучитьКассу(Фирма, Гривня);
	КонецЕсли;
КонецПроцедуры 

// ==============================
Процедура УстМесяцНачисленияЗП()
	ПериодВед = ПериодСтр(МесяцНачисленияЗП, КонМесяца(МесяцНачисленияЗП));
	глСохранитьЗначение(Контекст,"МесяцНачисленияЗП",МесяцНачисленияЗП);
КонецПроцедуры

Процедура Пересчитать(НеЗаполнять = 0)
    ИтБух = СоздатьОбъект("БухгалтерскиеИтоги");
	ИтБух.ИспользоватьСубконто(ВидыСубконто.Сотрудники, , 1);
	ИтБух.ИспользоватьСубконто(ВидыСубконто.МесяцНачисленияЗП, МесяцНачисленияЗП, 2);
	ИтБух.ВыполнитьЗапрос(МесяцНачисленияЗП, Макс(МесяцНачисленияЗП, КонМесяца(ДатаДок)), Сч661);

	Если НеЗаполнять = 0 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Сумма = 0;
			Если ИтБух.ПолучитьСубконто(1, 1, Сотрудник) = 1 Тогда
				Сумма = Макс(0, (ИтБух.КО() * Процент / 100 + ИтБух.СНК()) - ИтБух.ДО());
			КонецЕсли;
		КонецЦикла;		    
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю, (25.06.14) для вычисления уже начисленного по нарядам
	Если Выбран() = 1 Тогда
		ТекПериод = ТекущийДокумент();
	Иначе
		ТекПериод = ДатаДок;
	КонецЕсли;
	ИтБух661 = СоздатьОбъект("БухгалтерскиеИтоги");
	ИтБух661.ИспользоватьСубконто(ВидыСубконто.Сотрудники, , 1);
	ИтБух661.ИспользоватьСубконто(ВидыСубконто.МесяцНачисленияЗП, МесяцНачисленияЗП, 2);
	ИтБух661.ВыполнитьЗапрос(, ТекПериод, Сч661); 				//--- УМК Сандомирский В.Ю. (31.07.14) для оптимизаци убрал начало периода т.к. будут одни остатки
	//... УМК Сандомирский В.Ю, (25.06.14) для вычисления уже начисленного по нарядам
	
КонецПроцедуры

// ==============================
Процедура ИзмМесяцНачисленияЗП()
	Мес = глВосстановитьЗначение(Контекст,"МесяцНачисленияЗП");
	МесяцНачисленияЗП = НачМесяца(МесяцНачисленияЗП);
	УстМесяцНачисленияЗП();
	Если (КоличествоСтрок() > 0) и (Мес <> МесяцНачисленияЗП) Тогда
	    Если Вопрос("Пересчитать суммы?","Да+Нет") = "Да" Тогда
			Пересчитать();
		Иначе
			Пересчитать(1);			
		КонецЕсли;
	ИначеЕсли (Мес <> МесяцНачисленияЗП) Тогда
		Пересчитать(1);
	КонецЕсли;
КонецПроцедуры

// ================================
Процедура ИзмПроцент()
	Если (Проведен() = 1) и (ВидНачисления = ОсновнаяЗП) Тогда
	    Предупреждение("Сначала сделайте документ не проведенным");
	    Процент = глВосстановитьЗначение(Контекст,"Процент");
	КонецЕсли;
	Процент = ?(Процент > 100, 100, Процент);
	Процент = ?(Процент < 1, 1, Процент);
	Пересчитать();
	глСохранитьЗначение(Контекст,"Процент",Процент);
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (18.07.14) погашение займа
Процедура ЗаполнитьДляПогашения()
	
	УдалитьСтроки();
	
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ИспользоватьСубконто(ВидыСубконто.Сотрудники,ГруппаСотр, 1);
	Ит.ИспользоватьСубконто(ВидыСубконто.УМК_ДоговорЗайма,, 1);
	Ит.ИспользоватьСубконто(ВидыСубконто.УМК_МесяцПогашенияЗайма,, 1);
	Если Выбран() = 1 Тогда
		ДатаЗапроса = ТекущийДокумент();
	Иначе
		ДатаЗапроса = ДатаДок;
	КонецЕсли;
	
	Ит.ВыполнитьЗапрос(ДатаЗапроса,, СчетПоКоду("3721"));
	Ит.ВыбратьСубконто(1);
	Пока Ит.ПолучитьСубконто(1) = 1 Цикл
		Ит.ВыбратьСубконто(2);
		Пока Ит.ПолучитьСубконто(2) = 1 Цикл
			Ит.ВыбратьСубконто(3);
			Пока Ит.ПолучитьСубконто(3) = 1 Цикл
				Если КонМесяца(Ит.Субконто(3)) <= КонМесяца(МесяцНачисленияЗП) Тогда
					НоваяСтрока();
					Сотрудник 		= Ит.Субконто(1);
					ДоговорЗайма 	= Ит.Субконто(2);
					МесяцПогашения 	= Ит.Субконто(3);
					Сумма			= Ит.СНД();
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДляПогашения

//====================================================================== //--- УМК Сандомирский В.Ю, (*) (22.12.14)
Процедура Заполнить()
	Перем ТипЗаполнения;
	Перем ДокРасчетАванса;
	Перем ТЗ_АвансыСотрудников;
	
	Если КоличествоСтрок() > 0 Тогда
	    Рез = Вопрос("Удалить существующие строки?","Да+Нет+Отмена");
		Если Рез = "Отмена" Тогда
			Возврат;
		КонецЕсли;
		Если Рез = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	Если (ВидНачисления = ОсновнаяЗП) ИЛИ (ВидНачисления = Перечисление.ВидыНачисленияЗП.Бонусы) Тогда
		ТипЗаполнения = 0;
		Шаг = -1;
	
	ИначеЕсли ВидНачисления = ПогашениеЗайма Тогда //--- УМК Сандомирский В.Ю, (18.07.14) погашение займа 
		
		ЗаполнитьДляПогашения();
		Возврат;
		
	Иначе
			
		Если ВидНачисления = АвансоваяВыплата Тогда //--- УМК Сандомирский В.Ю, (04.12.14) 
			
			//--- определим, были ли выплаты аванса другими документами 
			ТЗ_ВыплаченыеАвансы = СоздатьОбъект("ТаблицаЗначений");
			ТЗ_ВыплаченыеАвансы.НоваяКолонка("Сотрудник","Справочник.Сотрудники");
			ТЗ_ВыплаченыеАвансы.НоваяКолонка("СуммаАванса");
			
			СчетАВ = СчетПоКоду("АВ");
			Запрос = СоздатьОбъект("Запрос");
			
			
			НачалоПериода   = НачМесяца(МесяцНачисленияЗП);
			КонецПериода	= КонМесяца(МесяцНачисленияЗП);
			
		    ТекстЗапроса = 
		    "//{{ЗАПРОС(Запрос по операциям)
		    |Период с НачалоПериода по КонецПериода;
		    |Дебет 				= Операция.Дебет.Счет;
		    |Кредит 			= Операция.Кредит.Счет;
		    |Счет 				= Операция.Счет;
		    |КорСчет 			= Операция.КорСчет.Код;
		    |Сумма 				= Операция.Сумма;
		    |Количество 		= Операция.Количество;
		    |Сотрудник			= Операция.Субконто.Сотрудники;
			|МесяцНачисления    = Операция.Субконто.МесяцНачисленияЗП;
			|ТекДок		        = Операция.ТекущийДокумент;
			|
		    |Функция СуммаКО 	= КО(Сумма) когда(Кредит=Счет);
			|
		    |Группировка Сотрудник без Групп;
			|
		    |Условие (Счет = СчетАВ);
			|Условие (Сотрудник в ГруппаСотр);
			|Условие (МесяцНачисления = МесяцНачисленияЗП);
			|";
			
			Если Выбран()>0  Тогда
				ЭтотДокумент = ТекущийДокумент();
				ТекстЗапроса = ТекстЗапроса + "
				|Условие(ТекДок <> ЭтотДокумент);
				|
			    |"//}}ЗАПРОС
			КонецЕсли;
			
		    // Если ошибка в запросе, то выход из процедуры
		    Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		        Возврат;
		    КонецЕсли;
		                                                   
		    Пока Запрос.Группировка(1)=1 Цикл
				ТЗ_ВыплаченыеАвансы.НоваяСтрока();
				ТЗ_ВыплаченыеАвансы.Сотрудник = Запрос.Сотрудник;
				ТЗ_ВыплаченыеАвансы.СуммаАванса = Запрос.СуммаКО;	
			КонецЦикла;
			
			//ТЗ_ВыплаченыеАвансы.ВыбратьСтроку();
			
			ТЗ_АвансыСотрудников = СоздатьОбъект("ТаблицаЗначений");
			ТЗ_АвансыСотрудников.НоваяКолонка("Сотрудник","Справочник.Сотрудники");
			ТЗ_АвансыСотрудников.НоваяКолонка("СуммаАванса");
			ТЗ_АвансыСотрудников.НоваяКолонка("Примечание");
			ТЗ_АвансыСотрудников.НоваяКолонка("РучнаяКорректировка");
			ТЗ_АвансыСотрудников.НоваяКолонка("Кво","Число",10,0);
						
			ДокРасчетАванса = СоздатьОбъект("Документ.УМК_РасчетАванса");
			ДокРасчетАванса.ВыбратьДокументы(НачМесяца(ДатаДок),КонМесяца(ДатаДок));
			Пока ДокРасчетАванса.ПолучитьДокумент() = 1 Цикл		
				
				Если ДокРасчетАванса.ПометкаУдаления() = 1 Тогда
					Продолжить;
				КонецЕсли;	
				
				Если ДокРасчетАванса.ПерАвансПредварительноОкончательно <> 2 Тогда //--- УМК Сандомирский В.Ю. (15.12.14) только окончательные авансы
					Продолжить;
				КонецЕсли;	
				
				ДокРасчетАванса.ВыбратьСтроки();
				Пока ДокРасчетАванса.ПолучитьСтроку() = 1 Цикл
					
					//Сообщить(ДокРасчетАванса.Сотрудник);
					
					Если ДокРасчетАванса.Окончательно > 0 Тогда		
						ТЗ_АвансыСотрудников.НоваяСтрока();
						ТЗ_АвансыСотрудников.Сотрудник 				= ДокРасчетАванса.Сотрудник;
						ТЗ_АвансыСотрудников.СуммаАванса 			= ДокРасчетАванса.Окончательно;	
						ТЗ_АвансыСотрудников.Примечание     		= ДокРасчетАванса.ПримечаниеСтроки; 			//--- УМК Сандомрский В.Ю. (15.12.14)
						ТЗ_АвансыСотрудников.РучнаяКорректировка    = ДокРасчетАванса.РучнаяКорректировка; 			//--- УМК Сандомрский В.Ю. (15.12.14)
						
						Если (ДокРасчетАванса.Предварительно - ДокРасчетАванса.Окончательно) < 0 Тогда
							ТЗ_АвансыСотрудников.РучнаяКорректировка    = 2; //--- Ручная корректировка с превышением расчетной //--- УМК Сандомирский В.Ю. (23.12.14)
						КонецЕсли;
						
						ТЗ_АвансыСотрудников.Кво 					= 1;
					КонецЕсли;
				КонецЦикла;	
			КонецЦикла;	
			
			ТЗ_Примечания = СоздатьОбъект("ТаблицаЗначений");
			ТЗ_АвансыСотрудников.Выгрузить(ТЗ_Примечания);
			ТЗ_АвансыСотрудников.Свернуть("Сотрудник","СуммаАванса,Кво");
			
		КонецЕсли;	
		
		//ТЗ_АвансыСотрудников.ВыбратьСтроку();
			
		спТипыЗаполнения = СоздатьОбъект("СписокЗначений");
		СписокВед = СоздатьОбъект("СписокЗначений");
		Вед = СоздатьОбъект("Документ.НачислениеЗП");
		Вед.ВыбратьДокументы(МесяцНачисленияЗП,КонМесяца(МесяцНачисленияЗП));
		Шаг = 0;
		Пока Вед.ПолучитьДокумент() = 1 Цикл
			Если (Вед.ПометкаУдаления() = 1) Или (Вед.ВидНачисления <> ВидНачисления) Тогда
			    Продолжить;
			КонецЕсли;
			Шаг = Шаг + 1;
			Если Шаг < 3 Тогда
				// первые две ведомости начисления зарплаты
			    спТипыЗаполнения.ДобавитьЗначение(Шаг+1,"По ведомости № "+
				Строка(Вед.ТекущийДокумент().НомерДок)+ " от " + Строка(Вед.ТекущийДокумент().ДатаДок));
				СписокВед.ДобавитьЗначение(Вед.ТекущийДокумент());
			Иначе
				// больше двух ведомостей за месяц начисления
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Шаг = 3 Тогда
			// больше двух ведомостей за месяц
			спТипыЗаполнения.ДобавитьЗначение(Шаг+1,"По другой ведомости ...");
		КонецЕсли;
		Если (ВидНачисления = Перечисление.ВидыНачисленияЗП.Остатки) и (Шаг > 0) Тогда
		    спТипыЗаполнения.ДобавитьЗначение(1,"Бухгалтерскими остатками");
			спТипыЗаполнения.Сортировать();
		КонецЕсли;
		
		Если спТипыЗаполнения.РазмерСписка() > 0 Тогда
			спТипыЗаполнения.ВыбратьЗначение(ТипЗаполнения,"Выберите тип заполнения",2,0,1);
			Если ПустоеЗначение(ТипЗаполнения) = 1 Тогда
				Возврат;
			КонецЕсли;
		Иначе
			ТипЗаполнения = 5;
		КонецЕсли;
		
		Если (ВидНачисления = Перечисление.ВидыНачисленияЗП.Остатки) и (Шаг = 0) Тогда
			ТипЗаполнения = 1;
		КонецЕсли;
	КонецЕсли;	
	
    ИтБух = СоздатьОбъект("БухгалтерскиеИтоги");
	Если ГруппаСотр.Выбран() = 1 Тогда
	    ИтБух.ИспользоватьСубконто(ВидыСубконто.Сотрудники,ГруппаСотр,1);
	Иначе
		ИтБух.ИспользоватьСубконто(ВидыСубконто.Сотрудники,,1);
	КонецЕсли;
	
	Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс Тогда
		ИтБух.ИспользоватьСубконто(ВидыСубконто.МесяцНачисленияЗП, ДобавитьМесяц(МесяцНачисленияЗП, -1), 2);
		ИтБух.ВыполнитьЗапрос(ДобавитьМесяц(МесяцНачисленияЗП, -1), ДатаДок, Сч661);
	Иначе
		ИтБух.ИспользоватьСубконто(ВидыСубконто.МесяцНачисленияЗП, МесяцНачисленияЗП, 2);
		ИтБух.ВыполнитьЗапрос(МесяцНачисленияЗП, ДатаДок, Сч661);
	КонецЕсли;

	Если (ТипЗаполнения <= 1) Или (Шаг = 0) Тогда
		// по бухгалтерским остаткам или по сотрудникам
		Сотр = СоздатьОбъект("Справочник.Сотрудники");
		Если ГруппаСотр.Выбран() = 1 Тогда
		    Сотр.ИспользоватьРодителя(ГруппаСотр);
		КонецЕсли;
		Сотр.ПорядокКодов();
		Сотр.ВыбратьЭлементы();
		Пока Сотр.ПолучитьЭлемент() = 1 Цикл
			Если (Сотр.ЭтоГруппа() = 1) Или (Сотр.ПометкаУдаления() = 1) 
			Или (Сотр.Фирма <> Фирма) Тогда
			    Продолжить;
			КонецЕсли;
			Если Сотр.ДатаУвольнения <> Дата(0) Тогда
				Если Сотр.ДатаУвольнения <= НачМесяца(МесяцНачисленияЗП) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Если ПустоеЗначение(ГруппаСотр) = 1 Тогда
				Если (Подразделение.Выбран() = 1) и (Сотр.Подразделение <> Подразделение) Тогда
				    Продолжить;
				КонецЕсли;
			КонецЕсли;
			Ост = 0;
			ТекКво = 0;//--- УМК Сандомирский В.Ю. (22.12.14)
			ТекФлагИсточникаРасчетаАванса = 0;
			ТекПримечаниеАванс = "";		//--- УМК Сандомирский В.Ю. (15.12.14)
			ТекРучнаяКорректировка = 0;		//--- УМК Сандомирский В.Ю. (15.12.14)
			Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс Тогда
					
				//--- Проверить на дату увольнения 
				Если НачМесяца(Сотр.ДатаУвольнения) = НачМесяца(ДатаДок) Тогда //--- УМК Сандомирский В.Ю. (21.07.14) пропускаем в авансе уволенных
					Продолжить;				
				КонецЕсли;
						
				//--- УМК Сандомирский В.Ю. (04.12.14) вычисляем по расчетам Авансов
				ТекСтрока = "";
				ТекКолонка = "";
				Если ТЗ_АвансыСотрудников.НайтиЗначение(Сотр.ТекущийЭлемент(),ТекСтрока,ТекКолонка) = 1 Тогда
					ТЗ_АвансыСотрудников.ПолучитьСтрокуПоНомеру(ТекСтрока);
					Ост = ТЗ_АвансыСотрудников.СуммаАванса;	
					ТекКво = ТЗ_АвансыСотрудников.Кво;	 
					Если Ост = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					ТекСтрока2 = "";
					ТекКолонка2 = "";
					ТЗ_Примечания.НайтиЗначение(Сотр.ТекущийЭлемент(),ТекСтрока2,ТекКолонка2); 			//--- УМК Сандомирский В.Ю. (15.12.14) 
					ТЗ_Примечания.ПолучитьСтрокуПоНомеру(ТекСтрока2);									//--- УМК Сандомирский В.Ю. (15.12.14) 
					ТекПримечаниеАванс 		= ТЗ_Примечания.Примечание;									//--- УМК Сандомирский В.Ю. (15.12.14) 
					ТекРучнаяКорректировка 	= ТЗ_Примечания.РучнаяКорректировка;						//--- УМК Сандомирский В.Ю. (15.12.14)
							
					ТекФлагИсточникаРасчетаАванса = 1;
				Иначе   //--- Если не нашли сотрудника в документах Расчета Авансов то по старому
								
					Если ИтБух.ПолучитьСубконто(1, 1, Сотр.ТекущийЭлемент()) = 1 Тогда
					    Ост = ИтБух.КО() * Процент/100;
						ТекФлагИсточникаРасчетаАванса = 2;
					КонецЕсли;
							
				КонецЕсли;	
											
			Иначе
				//Если ИтБух.ПолучитьСубконто(1, 1, Сотр.ТекущийЭлемент()) = 1 Тогда
				//	Ост = ИтБух.СКК() * Процент / 100;
				//КонецЕсли;
				Если ИтБух.ПолучитьСубконто(1, 1, Сотр.ТекущийЭлемент()) = 1 Тогда
					Ост = (ИтБух.КО() * Процент / 100 + ИтБух.СНК()) - ИтБух.ДО();
				КонецЕсли;				
			КонецЕсли;
			
			Если (ТипЗаполнения <= 1) и (Ост = 0) Тогда
			    Продолжить;
			КонецЕсли;
			НоваяСтрока();
			
			Если ТекФлагИсточникаРасчетаАванса = 1 Тогда
				ФлагИсточникаРасчетаАванса = 1;
			ИначеЕсли ТекФлагИсточникаРасчетаАванса = 2 Тогда
				ФлагИсточникаРасчетаАванса = 2;
			КонецЕсли;
			
			Сотрудник = Сотр.ТекущийЭлемент();
			Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс Тогда	
				
				НачисленоАванса = Ост;
				
				ВыплаченоАванса = 0;
				ТекСтрока = 0;
				ТекКолонка = 0;
				Если ТЗ_ВыплаченыеАвансы.НайтиЗначение(Сотрудник,ТекСтрока,ТекКолонка) = 1 Тогда
					ТЗ_ВыплаченыеАвансы.ПолучитьСтрокуПоНомеру(ТекСтрока);
					ВыплаченоАванса = ТЗ_ВыплаченыеАвансы.СуммаАванса;
				КонецЕсли;
				
				Сумма = НачисленоАванса - ВыплаченоАванса;
				КвоАвансов = ТекКво;
				//РасчитатьЗаработал(); 	//--- УМК Сандомирский В.Ю, (10.06.14) //--- УМК Сандомирский В.Ю, (16.12.14)
				РасчитатьДолгПоЗайму();	//--- УМК Сандомирский В.Ю, (21.07.14)
				
			Иначе
				Сумма = ?(ТипЗаполнения <= 1, Ост, 0);
			КонецЕсли;
			
			ПримечаниеАванс = ТекПримечаниеАванс; 				//--- УМК Сандомирский В.Ю. (15.12.14)
			РучнаяКорректировкаАванса = ТекРучнаяКорректировка; //--- УМК Сандомирский В.Ю. (15.12.14)
		КонецЦикла;
	Иначе
		Если (ТипЗаполнения = 2) Или (ТипЗаполнения = 3) Тогда
			// по указанным ведомостям
			ВедНачисления = СписокВед.ПолучитьЗначение(ТипЗаполнения-1);
		ИначеЕсли ТипЗаполнения = 4 Тогда
			// из списка ведомостей
			Если Вед.Выбрать("Выберите ведомость начисления") = 1 Тогда
				ВедНачисления = Вед.ТекущийДокумент();
			Иначе
				Возврат;
			КонецЕсли;
		КонецЕсли;	
		ВедНачисления.ВыбратьСтроки();
		Пока ВедНачисления.ПолучитьСтроку() = 1 Цикл
			Если (Подразделение.Выбран() = 1) 
			и (ВедНачисления.Сотрудник.Подразделение <> Подразделение) Тогда
			    Продолжить;
			КонецЕсли;
			НоваяСтрока();
			Сотрудник = ВедНачисления.Сотрудник;
			Если ВедНачисления.ВидНачисления <> Перечисление.ВидыНачисленияЗП.Остатки Тогда
				Сумма = ВедНачисления.КВыплате * Процент / 100;
			Иначе
				Сумма = ВедНачисления.ОсталосьВыплатить * Процент / 100;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс Тогда //--- УМК Сандомирский В.Ю. (26.12.14)
		
		СписокСотрудников = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(СписокСотрудников,"Сотрудник");	
		ТЗ_ТабеляСВремСотрами = СоздатьОбъект("ТаблицаЗначений"); 
		ТЗ_ТабеляСВремСотрами.НоваяКолонка("Сотрудник","Справочник.Сотрудники");
		ТЗ_ТабеляСВремСотрами.НоваяКолонка("ТекТабель","Документ.УМК_Табель");
		НачПериода = НачМесяца(ДатаДок);
		КонПериода = КонМесяца(ДатаДок);
		
		 ТекстЗапроса = 
		"//{{ЗАПРОС(Запрос по операциям)
		|Период с НачПериода по КонПериода;
		|Сотрудник  				= Документ.УМК_Табель.Сотрудник;
		|фЕстьВременныеСотрудники 	= Документ.УМК_Табель.фЕстьВременныеСотрудники;
		|Группировка Документ;
		|Условие(фЕстьВременныеСотрудники = 1);
		|Условие(Сотрудник в СписокСотрудников);
		|
		|";
				
		// Если ошибка в запросе, то выход из процедуры
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		    Возврат;
		КонецЕсли;     
		ТекстПредупреждения = "";
	    Пока Запрос.Группировка(1)=1 Цикл
			ТекстПредупреждения = ТекстПредупреждения + глПравильныйСимволПереноса 
								+ СокрЛП(Запрос.Документ) + " ответсвенный-" + СокрЛП(Запрос.Документ.Ответсвенный);		
			ТекТабель = Запрос.Документ;											
			ТекТабель.ВыбратьСтроки();
			Пока ТекТабель.ПолучитьСтроку()  = 1 Цикл
				Если (ПустоеЗначение(ТекТабель.Сотрудник) = 1) И (ПустоеЗначение(ТекТабель.ПримечаниеСтрока) = 0) Тогда
					ТекстПредупреждения = ТекстПредупреждения + глПравильныйСимволПереноса 
								+ " Временный сотрудник -" + СокрЛП(ТекТабель.ПримечаниеСтрока);
				КонецЕсли;		
			КонецЦикла;								
		КонецЦикла;
		Если ТекстПредупреждения <> "" Тогда
		Предупреждение("!!! Внимание !!!" + глПравильныйСимволПереноса + "В табелях имеются временные сотрудники !!!" 
							+ ТекстПредупреждения
							+ глПравильныйСимволПереноса + "!!! Напомнить ответсвенному о регистрации их в 1С !!!"
							+ глПравильныйСимволПереноса + "!!! с последующим начислением им аванса !!!");
		КонецЕсли;
		
	КонецЕсли; //... УМК Сандомирский В.Ю. (26.12.14)
	
	
КонецПроцедуры //... Заполнить()

// ==============================
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да,"_Укр","");
	Таб.ИсходнаяТаблица("ПлатВед"+СуффиксТаблицы);
	глУстПропись(Гривня);
	ДатаВед = ПериодСтр(МесяцНачисленияЗП, КонМесяца(МесяцНачисленияЗП));
	
	Директор = глФИО(Фирма.Руководитель.Получить(ДатаДок),1);
	ГлавБух = глФИО(Фирма.ГлавныйБухгалтер.Получить(ДатаДок),1);
	
	Пк1 = Сред(Фирма.ЕДРПОУ,1,1); Пк2 = Сред(Фирма.ЕДРПОУ,2,1);
	Пк3 = Сред(Фирма.ЕДРПОУ,3,1); Пк4 = Сред(Фирма.ЕДРПОУ,4,1);
	Пк5 = Сред(Фирма.ЕДРПОУ,5,1); Пк6 = Сред(Фирма.ЕДРПОУ,6,1);
	Пк7 = Сред(Фирма.ЕДРПОУ,7,1); Пк8 = Сред(Фирма.ЕДРПОУ,8,1);
	Укр = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");
	Таб.ПовторятьПриПечатиСтроки(23,23);
	
	Таб.ВывестиСекцию("Шапка");
	
	ВыбратьСтроки();
	Ном = 1;
	Пока ПолучитьСтроку() = 1 Цикл
		
		ПечПримечание = "";
		Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс Тогда	
		
			//Если Сумма > ЗаработаноНаМоментВыплаты Тогда		//--- УМК Сандомирский В.Ю. (16.12.14)
			//	 ПечПримечание = ПечПримечание + " нет заработка ";
			//КонецЕсли;	
	
			Если ЗадолженностьЗайм > 0 Тогда
				 ПечПримечание = ПечПримечание + " займ ";
			КонецЕсли;	

		КонецЕсли;
		
		Таб.ВывестиСекцию("Сотрудник");
		Ном = Ном + 1;
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
	
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("Платежная ведомость","");
	глУстПропись(Гривня,"р");
КонецПроцедуры

Процедура ИзмВыплатаД()
	Сч661 = ?(ВыплатаД = 1,СчетПоКоду("662"),СчетПоКоду("661")); 
	//+ umk меняем счет и пересчитываем итоги
	Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Бонусы Тогда 
		Сч661 = СчетПоКоду("662");
	КонецЕсли;  
	//+ umk
КонецПроцедуры

Процедура РассчитатьСальдоДрМ();
	ИтПоСальдо = СоздатьОбъект("БухгалтерскиеИтоги");
	ИтПоСальдо.ИспользоватьСубконто(ВидыСубконто.Сотрудники,,1);
	ИтПоСальдо.ИспользоватьСубконто(ВидыСубконто.МесяцНачисленияЗП,,1);
	ИтПоСальдо.ВыполнитьЗапрос(,КонМесяца(ДатаДок), "66");	
КонецПроцедуры

Процедура ИзмДатаДок()
	РассчитатьСальдоДрМ();
КонецПроцедуры

// ===============================
Процедура ПриОткрытии() 
	
	//+ umk меняем счет и пересчитываем итоги
	Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Бонусы Тогда 
		Сч661 = СчетПоКоду("662");
	КонецЕсли;  
	//+ umk

	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кЗаполнитьОсн.Доступность(0);
//		Форма.кДействия.Доступность(0);
		Форма.кОчиститьПодразделение.Доступность(0);
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;	

	УстМесяцНачисленияЗП();
	Ит.ИспользоватьРазделительУчета(Фирма);
	ИзмВыплатаД();
	

	РассчитатьСальдоДрМ();
	Пересчитать(1);
	
КонецПроцедуры

// ==============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;
	Фирма = глВосстановитьЗначение(,"БазФирма");
	глУстановитьНомер(Контекст);
	ВидНачисления = ОсновнаяЗП;
	МесяцНачисленияЗП = НачМесяца(ДатаДок);
	Процент = 100;
	Касса = глПолучитьКассу(Фирма,Гривня);
КонецПроцедуры

// ==============================
Процедура ПриЗаписи()
	Автор = глПользователь;
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Если (ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс) и (Процент <> 100) Тогда
		СохранитьЗначение("ПроцАванса", Процент);
	КонецЕсли;	
	
КонецПроцедуры

// ======================================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "Сотрудник" Тогда
		ФлагСтандОбр = 0;
		КонтФирмы = Фирма;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора", КонтФирмы);
	ИначеЕсли Рекв = "МесяцНачисленияЗП" Тогда
		ФлагСтандОбр = 0;
		спДат = СоздатьОбъект("СписокЗначений");
		Дата1 = ДобавитьМесяц(МесяцНачисленияЗП,-3);
		Дата2 = ДобавитьМесяц(МесяцНачисленияЗП, 3);
		Пока Дата1 <= Дата2 Цикл
			спДат.ДобавитьЗначение(Дата1,ПериодСтр(Дата1,КонМесяца(Дата1)));
			Дата1 = ДобавитьМесяц(Дата1,1);
		КонецЦикла;
		спДат.ДобавитьЗначение("Другой период...");
		
		КвоДат = спДат.РазмерСписка();
		ВыбДата = МесяцНачисленияЗП;
		ПозДаты = 0;
		спДат.ВыбратьЗначение(ВыбДата,,ПозДаты,,2);
		Если ПозДаты = КвоДат Тогда
			ВыбДата = МесяцНачисленияЗП;
			Если ВвестиДату(ВыбДата,"Введите дату периода") = 1 Тогда
				МесяцНачисленияЗП = НачМесяца(ВыбДата);
			КонецЕсли;
		Иначе
			МесяцНачисленияЗП = ВыбДата;
		КонецЕсли;
		Если ПустоеЗначение(МесяцНачисленияЗП) = 1 Тогда
			МесяцНачисленияЗП = глВосстановитьЗначение(Контекст,"МесяцНачисленияЗП");
		КонецЕсли;
		спДат = 0;
		ИзмМесяцНачисленияЗП();
	КонецЕсли;
КонецПроцедуры 

Процедура ИзмВидНачисления()
	Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс Тогда
		Процент = ВосстановитьЗначение("ПроцАванса");    
	Иначе
		Процент = 100;
	КонецЕсли;
	
	//+ umk меняем счет и пересчитываем итоги
	Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Бонусы Тогда 
		Сч661 = СчетПоКоду("662");
		Пересчитать();
	КонецЕсли;   
	
КонецПроцедуры

Процедура Импорт()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	Таб = СоздатьОбъект("Таблица");
	ИмФл = ""; ИмКатал = СокрЛП(Константа.ПутьДляОбменаПВ);
	Если ФС.ВыбратьФайл(0,ИмФл, ИмКатал, "Выберите файл импорта", "Файлы mxl (ПВ*.mxl)|ПВ*.mxl") = 1 Тогда
		Таб.Открыть(ИмКатал + ИмФл);
		СпрСотр = СоздатьОбъект("Справочник.Сотрудники");
		ДатаДок = Дата(Таб.Область(1, 1).Текст);
		Инд = 3;
		Пока СокрЛП(Таб.Область(Инд, 1).Текст) <> "" Цикл
			Код = СокрЛП(Таб.Область(Инд, 1).Текст);
			Если Код <> "" Тогда
				НоваяСтрока();
				Если СпрСотр.НайтиПоРеквизиту("ИНН", Код,1) = 0 Тогда
					Сообщить("В справочнике не обнаружен Сотрудник: " + Таб.Область(Инд,2).Текст + " с ИНН: " + Код);
				Иначе
					Сотрудник = СпрСотр.ТекущийЭлемент();
				КонецЕсли;
				Сумма = Число(Таб.Область(Инд, 3).Текст);
			Иначе
				Сообщить("В строке таблицы:: " + Строка(НомерСтроки) + " не указан ИНН");				
			КонецЕсли;
			Инд=Инд+1;
		КонецЦикла;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Вопрос("Импорт завершён. Удалить файл?", "Да+Нет") = "Да" Тогда
		ФС.УдалитьФайл(ИмКатал + ИмФл);
	КонецЕсли;
КонецПроцедуры

Процедура ПечатьТаб()
	КодП = Подразделение.КодП;
	КвоФишек = 12;
	МаксСтр = 4;
	МаксКол = 3;
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	ТЗ.Сортировать("Сотрудник");
	КвоЛистов = ТЗ.КоличествоСтрок() / КвоФишек;
	Если Цел(КвоЛистов) <> КвоЛистов Тогда
		КвоЛистов = Цел(КвоЛистов) + 1;
	КонецЕсли;
	Таб = СоздатьОбъект("Таблица");
	ТЗ.НоваяКолонка("Выведено", "Число", 1);
	Таб.ИсходнаяТаблица("Вед");
	
	ИндСтр = 1;
	ИндКол = 1;
	НомерЛиста = 1;
	ПерваяСтраница = 1;
	Пока ТЗ.Итог("Выведено") <> ТЗ.КоличествоСтрок() Цикл
		Если ПерваяСтраница = 1 Тогда
		    ПерваяСтраница = 0;
		Иначе
			Таб.НоваяСтраница();
			НомерЛиста = НомерЛиста + 1;
		КонецЕсли;
		
		ПСтр = НомерЛиста;
		Для ИндСтр = 1 По МаксСтр Цикл
			ПКол = ПСтр;
			Для ИндКол = 1 По МаксКол Цикл
				Попытка
					ТЗ.ПолучитьСтрокуПоНомеру(ПКол);
					ТЗ.Выведено = 1;
					Секц = "Гор";
				Исключение
					Секц = "Пустая";
				КонецПопытки;
				Если ИндКол = МаксКол Тогда
				    Таб.ПрисоединитьСекцию(Секц + "|ВертО");
				ИначеЕсли ИндКол = 1 Тогда
				    Таб.ВывестиСекцию(Секц + "|Верт");
				Иначе
					Таб.ПрисоединитьСекцию(Секц + "|Верт");
				КонецЕсли;
				ПКол = ПКол + КвоЛистов;
			КонецЦикла;
			ПСтр = ПСтр + КвоЛистов * 3;
		КонецЦикла;
	КонецЦикла;
	
	Таб.ПараметрыСтраницы(1,,,0,0,0,0);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Ведомость");	
КонецПроцедуры

Функция СальдоДрП()
	СДО = 0;
	Если ИтПоСальдо.ПолучитьСубконто(1,1, Сотрудник) = 1 Тогда
		ИтПоСальдо.ВыбратьСубконто(2);
		Пока ИтПоСальдо.ПолучитьСубконто(2) = 1 Цикл
			Если ИтПоСальдо.Субконто(2) <> МесяцНачисленияЗП Тогда
				СДО = СДО + ИтПоСальдо.СКК();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СДО;
КонецФункции

Функция Раскраска()
	Раскрасюлька = "";
	Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс Тогда
		//Если Сумма > ЗаработаноНаМоментВыплаты Тогда 
		//	Раскрасюлька = "(BRUSH["+глПолучитьЦвет(233,163,144)+"])"; 
		//КонецЕсли;
		
		Если ЗадолженностьЗайм >  0 Тогда
			Раскрасюлька = "(BRUSH["+глПолучитьЦвет(214,179,253)+"])"; 
		КонецЕсли;
		
	КонецЕсли;
	Возврат  Раскрасюлька + "(BRUSH_S[" + Строка(100*255*100) + "])";
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю. (21.07.14)
Процедура НайтиСотрудникаВТабеле()
	
	СписТабеля = СоздатьОбъект("СписокЗначений");
	
	ДокТабель = СоздатьОбъект("Документ.УМК_Табель");		
	ЕстьТабель = 0;
	ДокТабель.УстановитьФильтр(1,0,1);
	ДокТабель.ВыбратьДокументы(НачМесяца(ДатаДок),КонМесяца(ДатаДок));
	Пока ДокТабель.ПолучитьДокумент() = 1 Цикл 
		
		Если ДокТабель.перГрафикТабель = 2 Тогда  //--- это График
			Продолжить;
		КонецЕсли;
		
		ДокТабель.ВыбратьСтроки();
		Пока ДокТабель.ПолучитьСтроку() = 1 Цикл
			Если ДокТабель.Сотрудник = Сотрудник Тогда
				ТекСотрудник = Сотрудник;
				ОткрытьФорму(ДокТабель.ТекущийДокумент(),ТекСотрудник);							
			КонецЕсли;	
		КонецЦикла;
			
	КонецЦикла;
	
КонецПроцедуры // НайтиСотрудникаВТабеле

//====================================================================== //--- УМК Сандомирский В.Ю. (05.12.14) 
Функция ВернутьОснованиеРасчетаАванса()
	Если ФлагИсточникаРасчетаАванса = 1 Тогда					
		Возврат 6;
	ИначеЕсли ФлагИсточникаРасчетаАванса = 2 Тогда
		Возврат 5;
	КонецЕсли;
КонецФункции // ИмеютсяДанныеПропусков

//====================================================================== //--- УМК Сандомирский В.Ю. (05.12.14) 

Процедура РасчитатьАванс() //--- УМК Сандомирский В.Ю. (17.12.14)
	
	ТекСтрока = "";
	ТекКолонка = "";
	Если ТЗ_АвансыСотрудников.НайтиЗначение(Сотрудник.ТекущийЭлемент(),ТекСтрока,ТекКолонка) = 1 Тогда
		ТЗ_АвансыСотрудников.ПолучитьСтрокуПоНомеру(ТекСтрока);
				
		ТекСтрока2 = "";
		ТекКолонка2 = "";
		ТЗ_Примечания.НайтиЗначение(Сотрудник.ТекущийЭлемент(),ТекСтрока2,ТекКолонка2); 			
		ТЗ_Примечания.ПолучитьСтрокуПоНомеру(ТекСтрока2);									
		ПримечаниеАванс 			= ТЗ_Примечания.Примечание;									
		РучнаяКорректировкаАванса 	= ТЗ_Примечания.РучнаяКорректировка;
		ФлагИсточникаРасчетаАванса 	= 1;			
		НачисленоАванса = ТЗ_АвансыСотрудников.СуммаАванса;
		
	Иначе   //--- Если не нашли сотрудника в документах Расчета Авансов то по старому
					
		Если ТекБухИтоги.ПолучитьСубконто(1, 1, Сотрудник.ТекущийЭлемент()) = 1 Тогда
		    НачисленоАванса = ТекБухИтоги.КО() * Процент/100;
			ФлагИсточникаРасчетаАванса = 2;
		КонецЕсли;
				
	КонецЕсли;	
	
	ВыплаченоАванса = 0;
	ТекСтрока = 0;
	ТекКолонка = 0;
	Если ТЗ_ВыплаченыеАвансы.НайтиЗначение(Сотрудник.ТекущийЭлемент(),ТекСтрока,ТекКолонка) = 1 Тогда
		ТЗ_ВыплаченыеАвансы.ПолучитьСтрокуПоНомеру(ТекСтрока);
		ВыплаченоАванса = ТЗ_ВыплаченыеАвансы.СуммаАванса;
	КонецЕсли;
	
	Сумма = НачисленоАванса - ВыплаченоАванса;
	
					
КонецПроцедуры // РасчитатьАванс()

//====================================================================== //--- УМК Сандомирский В.Ю. (05.12.14) 
Процедура Расчитать()
	
	
	Перем ВыбЗначение;
	
	спВариантов = СоздатьОбъект("СписокЗначений");
	спВариантов.ДобавитьЗначение(1,"Текущего сотрудника");
	спВариантов.ДобавитьЗначение(2,"Список сотрудников");
	
	Если спВариантов.ВыбратьЗначение(ВыбЗначение,"",,,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;
	
	//--- определим, были ли выплаты аванса другими документами 
	ТЗ_ВыплаченыеАвансы = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_ВыплаченыеАвансы.НоваяКолонка("Сотрудник","Справочник.Сотрудники");
	ТЗ_ВыплаченыеАвансы.НоваяКолонка("СуммаАванса");
	СчетАВ = СчетПоКоду("АВ");
	Запрос = СоздатьОбъект("Запрос");
	
	
	НачалоПериода   = НачМесяца(МесяцНачисленияЗП);
	КонецПериода	= КонМесяца(МесяцНачисленияЗП);
	
    ТекстЗапроса = 
    "//{{ЗАПРОС(Запрос по операциям)
    |Период с НачалоПериода по КонецПериода;
    |Дебет 				= Операция.Дебет.Счет;
    |Кредит 			= Операция.Кредит.Счет;
    |Счет 				= Операция.Счет;
    |КорСчет 			= Операция.КорСчет.Код;
    |Сумма 				= Операция.Сумма;
    |Количество 		= Операция.Количество;
    |Сотрудник			= Операция.Субконто.Сотрудники;
	|МесяцНачисления    = Операция.Субконто.МесяцНачисленияЗП;
	|ТекДок		        = Операция.ТекущийДокумент;
	|
    |Функция СуммаКО 	= КО(Сумма) когда(Кредит=Счет);
	|
    |Группировка Сотрудник без Групп;
	|
    |Условие (Счет = СчетАВ);
	|Условие (Сотрудник в ГруппаСотр);
	|Условие (МесяцНачисления = МесяцНачисленияЗП);
	|";
	
	Если Выбран()>0  Тогда
		ЭтотДокумент = ТекущийДокумент();
		ТекстЗапроса = ТекстЗапроса + "
		|Условие(ТекДок <> ЭтотДокумент);
		|
	    |"//}}ЗАПРОС
	КонецЕсли;
	
    ;
    // Если ошибка в запросе, то выход из процедуры
    Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
        Возврат;
    КонецЕсли;
                                                   
    Пока Запрос.Группировка(1)=1 Цикл
		ТЗ_ВыплаченыеАвансы.НоваяСтрока();
		ТЗ_ВыплаченыеАвансы.Сотрудник = Запрос.Сотрудник;
		ТЗ_ВыплаченыеАвансы.СуммаАванса = Запрос.СуммаКО;	
	КонецЦикла;
	
	//ТЗ_ВыплаченыеАвансы.ВыбратьСтроку();
	
	ТЗ_АвансыСотрудников = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_АвансыСотрудников.НоваяКолонка("Сотрудник","Справочник.Сотрудники");
	ТЗ_АвансыСотрудников.НоваяКолонка("СуммаАванса");
	ТЗ_АвансыСотрудников.НоваяКолонка("Примечание");
	ТЗ_АвансыСотрудников.НоваяКолонка("РучнаяКорректировка");
	ДокРасчетАванса = СоздатьОбъект("Документ.УМК_РасчетАванса");
	ДокРасчетАванса.ВыбратьДокументы(НачМесяца(ДатаДок),КонМесяца(ДатаДок));
	Пока ДокРасчетАванса.ПолучитьДокумент() = 1 Цикл		
		
		Если ДокРасчетАванса.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ДокРасчетАванса.ПерАвансПредварительноОкончательно <> 2 Тогда //--- УМК Сандомирский В.Ю. (15.12.14) только окончательные авансы
			Продолжить;
		КонецЕсли;	
		
		
		ДокРасчетАванса.ВыбратьСтроки();
		Пока ДокРасчетАванса.ПолучитьСтроку() = 1 Цикл
			Если ДокРасчетАванса.Окончательно > 0 Тогда		
				ТЗ_АвансыСотрудников.НоваяСтрока();
				ТЗ_АвансыСотрудников.Сотрудник 				= ДокРасчетАванса.Сотрудник;
				ТЗ_АвансыСотрудников.СуммаАванса 			= ДокРасчетАванса.Окончательно;	
				ТЗ_АвансыСотрудников.Примечание     		= ДокРасчетАванса.ПримечаниеСтроки; //--- УМК Сандомрский В.Ю. (15.12.14)
				ТЗ_АвансыСотрудников.РучнаяКорректировка    = ДокРасчетАванса.РучнаяКорректировка; //--- УМК Сандомрский В.Ю. (15.12.14)
				
				Если (ДокРасчетАванса.Предварительно - ДокРасчетАванса.Окончательно) < 0 Тогда
					ТЗ_АвансыСотрудников.РучнаяКорректировка    = 2; //--- Ручная корректировка с превышением расчетной //--- УМК Сандомирский В.Ю. (23.12.14)
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;	
	
	ТЗ_Примечания = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_АвансыСотрудников.Выгрузить(ТЗ_Примечания);
	ТЗ_АвансыСотрудников.Свернуть("Сотрудник","СуммаАванса");
	
	//--- итоги за предидущий месяц
	ТекБухИтоги = СоздатьОбъект("БухгалтерскиеИтоги");
	Если ГруппаСотр.Выбран() = 1 Тогда
	    ТекБухИтоги.ИспользоватьСубконто(ВидыСубконто.Сотрудники,ГруппаСотр,1);
	Иначе
		ТекБухИтоги.ИспользоватьСубконто(ВидыСубконто.Сотрудники,,1);
	КонецЕсли;	
	ТекБухИтоги.ИспользоватьСубконто(ВидыСубконто.МесяцНачисленияЗП, ДобавитьМесяц(МесяцНачисленияЗП, -1), 2);
	ТекБухИтоги.ВыполнитьЗапрос(ДобавитьМесяц(МесяцНачисленияЗП, -1), ДатаДок, Сч661);
	 
	Если ВыбЗначение = 1 Тогда	
		Если НомерСтроки > 0 Тогда
			РасчитатьАванс();
		КонецЕсли;
	ИначеЕсли ВыбЗначение = 2  Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			РасчитатьАванс();
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры // Расчитать()

//====================================================================== //--- УМК Сандомирский В.Ю. (16.12.14) 
Функция ВернутьРучноеИзменениеАванса()
	Если РучнаяКорректировкаАванса = 1 Тогда					
		Возврат 1;
	ИначеЕсли РучнаяКорректировкаАванса = 2 Тогда  //--- Ручная корректировка с превышением расчетной //--- УМК Сандомирский В.Ю. (23.12.14)
		Возврат 4;
	КонецЕсли;
КонецФункции // ВернутьРучноеИзменениеАванса()

//====================================================================== //--- УМК Сандомирский В.Ю. (22.12.14) 
Функция ВернутьКвоАвансов()
	Если КвоАвансов > 1 Тогда					
		Возврат 3;
	КонецЕсли;
КонецФункции // ВернутьКвоАвансов

//====================================================================== //--- УМК Сандомирский В.Ю. (17.12.14) 
Процедура ОчиститьПустыеКВыплате()
	ДоселеСтрока = КоличествоСтрок();
	Пока ДоселеСтрока > 0  Цикл
		ПолучитьСтрокуПоНомеру(ДоселеСтрока);
		Если Сумма = 0 Тогда
			УдалитьСтроку();
		КонецЕсли;
		ДоселеСтрока = ДоселеСтрока - 1;
	КонецЦикла;
КонецПроцедуры // ОчиститьПустыеКВыплате()


Ит = СоздатьОбъект("БухгалтерскиеИтоги");
ГруппаСотр.ВыборГруппы(1);
// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");
	
Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
Сервис.ИспользоватьПланРаскраски(1);
