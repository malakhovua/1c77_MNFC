// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем Срок;
Перем СписокДействий;
Перем СтараяДата;

Перем НачальнаяДатаДокумента;


// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

//======================================================================
Процедура ОпределениеНачалаДня()
	
	Если Выбран() <> 1 Тогда
	
		ТекДокНачала = СоздатьОбъект("Документ.НачДня");
		ТекДокНачала.ВыбратьДокументы(ДатаДок,ДатаДок);
		Пока ТекДокНачала.ПолучитьДокумент() = 1 Цикл
			ДокНачала = ТекДокНачала.ТекущийДокумент();
			Прервать;
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры // ОпределениеНачалаДня


// ===============================
Функция УстДоступность()
	Форма.Заголовок(глЗаголовок(Контекст,"Снятие резерва"));    
	
	Форма.кЗаполнить.Доступность(1-Проведен()); //--- УМК Сандомирский В.Ю. (04.04.15)
	
	Возврат "";
КонецФункции

// ===============================
Процедура ИзмДата()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	
	ОпределениеНачалаДня();
	
КонецПроцедуры

// ===============================
Процедура Заполнить()
	
	Если Выбран() <> 1 Тогда
		
		Предупреждение("Требуется записать документ");
		Возврат;
		
	КонецЕсли;
	
	Если Проведен() = 1  Тогда
		
		Предупреждение("Заполнять можно только не проведенный документ");
		Возврат;
		
	КонецЕсли;
	
	УдалитьСтроки();
	
	//--- ТЗ Остатки ТМЦ
	Тз_Резервы_ТМЦ = СоздатьОбъект("ТаблицаЗначений");	
	Тз_Резервы_ТМЦ.НоваяКолонка("Заказ","Документ.УМК_ЗаказКлиента");
	Тз_Резервы_ТМЦ.НоваяКолонка("КвоЗаказ","Число",15,3,"Кво РН");
	Тз_Резервы_ТМЦ.НоваяКолонка("РасходнаяНакладная","Документ");
	Тз_Резервы_ТМЦ.НоваяКолонка("КвоРН","Число",15,3,"Кво РН");
	Тз_Резервы_ТМЦ.НоваяКолонка("ПризнакСортировки");
	Тз_Резервы_ТМЦ.НоваяКолонка("КвоДляСписания","Число",15,3,"Кво для списания");
	
	//ДатаОтчета = ДатаДок; //--- Остатки на докумет закрытие резерва
	
	ДатаОтчета = ТекущийДокумент();
	
	//--- ЗАПРОС по ОСТАТКАМ	 	
 	ЗапросРезервыТМЦ = СоздатьОбъект("Запрос");
	ТекстЗапросаРезервыТМЦ = 
	"//{{ЗАПРОС(резервы ТМЦ)
	|Период с ДатаОтчета по ДатаОтчета;	
	|ДокументРезерва 		= Регистр.Резервы.ДокументРезерва;
	|Резерв 				= Регистр.Резервы.Резерв;
	|ТекФирма 				= Регистр.Резервы.Фирма;
	|Функция РезервКонОст 	= КонОст(Резерв);
	|Группировка ДокументРезерва без упорядочивания;
	|Условие(ТекФирма = Фирма);
	|";
	
	Если ЗапросРезервыТМЦ.Выполнить(ТекстЗапросаРезервыТМЦ) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Док = СоздатьОбъект("Документ");
	
	Пока ЗапросРезервыТМЦ.Группировка(1) = 1  Цикл		
			НашлиРасходку = 0;
			Док.УстановитьФильтр(1, 0);
			Док.ВыбратьПодчиненныеДокументы(,,ЗапросРезервыТМЦ.ДокументРезерва);
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если (Док.Вид() = "РасходнаяНакладная") ИЛИ (Док.Вид() = "СписаниеТМЦ") Тогда
					//Если Док.Проведен() = 1  Тогда
						Тз_Резервы_ТМЦ.НоваяСтрока();
						Тз_Резервы_ТМЦ.Заказ 				= ЗапросРезервыТМЦ.ДокументРезерва.ТекущийДокумент();
						Тз_Резервы_ТМЦ.РасходнаяНакладная 	= Док.ТекущийДокумент();
						Тз_Резервы_ТМЦ.ПризнакСортировки 	= Док.ТекущийДокумент();
						НашлиРасходку 						= 1;
						Тз_Резервы_ТМЦ.КвоЗаказ 			= ЗапросРезервыТМЦ.ДокументРезерва.Итог("КвоПересчет");
						Тз_Резервы_ТМЦ.КвоРН				= Док.ТекущийДокумент().Итог("Кво");						
					//КонецЕсли;					
					//--- Что делать если несколько накладных					
				КонецЕсли;	
			КонецЦикла;
			
			Если НашлиРасходку = 0 Тогда
				Тз_Резервы_ТМЦ.НоваяСтрока();
				Тз_Резервы_ТМЦ.Заказ 				= ЗапросРезервыТМЦ.ДокументРезерва.ТекущийДокумент();
				Тз_Резервы_ТМЦ.РасходнаяНакладная 	= Док.ТекущийДокумент();
				Тз_Резервы_ТМЦ.КвоЗаказ 			= ЗапросРезервыТМЦ.ДокументРезерва.Итог("КвоПересчет");
			КонецЕсли;
			
			Тз_Резервы_ТМЦ.КвоДляСписания = ЗапросРезервыТМЦ.РезервКонОст; 									
	КонецЦикла;
	
	Тз_Резервы_ТМЦ.Сортировать("ПризнакСортировки+");
	//Тз_Резервы_ТМЦ.ВыбратьСтроку();
	
	//--- Заполняем сначала теми что с расходками
	Тз_Резервы_ТМЦ.ВыбратьСтроки();
	Пока Тз_Резервы_ТМЦ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Тз_Резервы_ТМЦ.РасходнаяНакладная) <> 1 Тогда
			НоваяСтрока();
			ДокументРезерва		= Тз_Резервы_ТМЦ.Заказ;
			РасходнаяНакладная 	= Тз_Резервы_ТМЦ.РасходнаяНакладная;		
			ЗарезервированоКво  = Тз_Резервы_ТМЦ.КвоЗаказ;
			ПроданоКво			= Тз_Резервы_ТМЦ.КвоРН;
			ДляСнятияКво		= Тз_Резервы_ТМЦ.КвоДляСписания;
		КонецЕсли;
	КонецЦикла;
	
	//--- Заполняем потом теми что без
	Тз_Резервы_ТМЦ.ВыбратьСтроки();
	Пока Тз_Резервы_ТМЦ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Тз_Резервы_ТМЦ.РасходнаяНакладная) = 1 Тогда
			НоваяСтрока();
			ДокументРезерва		= Тз_Резервы_ТМЦ.Заказ;
			РасходнаяНакладная 	= Тз_Резервы_ТМЦ.РасходнаяНакладная;	
			ЗарезервированоКво  = Тз_Резервы_ТМЦ.КвоЗаказ;
			ПроданоКво			= Тз_Резервы_ТМЦ.КвоРН;
			ДляСнятияКво		= Тз_Резервы_ТМЦ.КвоДляСписания;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры	

// ===============================
Процедура ИзмФирма()
	СтараяФирма = Фирма;
	глУстФирма(Контекст);	
	Если СтараяФирма = Фирма Тогда
		Возврат;
	КонецЕсли;
	
	// фирма изменилась
	Если ПустоеЗначение(Фирма) = 0 Тогда
		Если КоличествоСтрок() <> 0 Тогда
			Ответ = Вопрос("Перезаполнить табличную часть?","Да+Нет+Отмена");
			Если Ответ = "Отмена" Тогда
				Фирма = "";
			Иначе
				УдалитьСтроки();
				Если Ответ = "Да" Тогда
//					Заполнить(1);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
			
	Если ПустоеЗначение(Фирма) = 1 Тогда
		Фирма = СтараяФирма;
		глУстановитьНомер(Контекст);
	КонецЕсли;
КонецПроцедуры //ИзмФирма

// ===============================
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в документе
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
КонецПроцедуры	

// ===============================

// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

// ===============================

// ===============================
Процедура ВводНаОсновании(ДокОснование)
	Автор = глПользователь;
	ДатаДок=РабочаяДата();
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	НоваяСтрока();
	ДокументРезерва=ДокОснование;
КонецПроцедуры

// ===============================
Процедура ВводНового(Скопирован)
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;
	глЗаполнитьШапку(Контекст);
	ДатаДок=РабочаяДата();
	Основание="Истек срок резервирования ТМЦ.";
	//Заполнить(1);		//--- УМК Сандомирский В.Ю, (23.06.15)
	
	ОпределениеНачалаДня();
	
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ДокументРезерва" Тогда
		
		ФлагСтандОбр = 0;
		ТекЗаказ = ДокументРезерва;
		ОткрытьФорму("Журнал.УМК_ЗаказыКлиентов.ФормаСписка",ТекЗаказ.ТекущийДокумент());
		
		//Если Выб.Фирма <> Фирма Тогда
		//	Предупреждение("Выбран документ, принадлежащий другой фирме!");
		//	ФлагСтандОбр = 0;
		//КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;

	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.			Доступность(0);
		Форма.кПровести.	Доступность(0);
		Форма.кДействия.	Доступность(0);
		Форма.кЗаполнить.	Доступность(0);
		Форма.кФирма.		Доступность(0);               		
		Форма.кОсн.			Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;

	СтараяДата = ДатаДок;
	Форма.ТолькоПросмотр(Проведен());
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	
	глПроверкаДатыДок(Контекст,"Запись");
	
	Если Выбран() <> 1 Тогда
		
		Попытка 		//--- УМК Сандомирский В.Ю. (24.06.15)	
			Если ПустоеЗначение(ДокНачала) <> 1 Тогда	
				Ч = 0; М = 0; С = 0;
				ДокНачала.ПолучитьВремя(Ч,М,С);
				
				ТекВремя = "" + Ч + ":" +  М + ":" + С;
				
				ВвестиСтроку(ТекВремя,"Введите время записи документа",8);
				
				//--- парсим время из строки
				Позиция 	= Найти(ТекВремя,":");
				Ч 			= Лев(ТекВремя,Позиция-1);
				ТекВремя 	= Сред(ТекВремя,Позиция+1);
				Позиция 	= Найти(ТекВремя,":");
				М 			= Лев(ТекВремя,Позиция-1);
				С			= Сред(ТекВремя,Позиция+1);
				
				АвтоВремяОтключить();
				УстановитьВремя(Ч,М,С);
				
			КонецЕсли;		
		Исключение КонецПопытки;
		
	КонецЕсли;
	
	Автор = глПользователь;
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Функция ВозвратРодитель()
	
	Попытка 
		Возврат ДокументРезерва.Контрагент.Родитель;
	Исключение
	КонецПопытки;
	
КонецФункции // ВозвратРодитель()

//====================================================================== //--- УМК Сандомирский В.Ю. (07.07.15)
Функция ВывестиВремяЗаказа()
	
	Если ПустоеЗначение(ДокументРезерва) <> 1 Тогда
		Ч = 0; М = 0; С = 0;
		ТекВремя = ДокументРезерва.ПолучитьВремя(Ч, М, С);
		Возврат ТекВремя;
	КонецЕсли;
	
КонецФункции // ВывестиВремяЗаказа

//====================================================================== //--- УМК Сандомирский В.Ю. (07.07.15)
Функция ВывестиВремяРН()
	
	Если ПустоеЗначение(РасходнаяНакладная) <> 1 Тогда
		Ч = 0; М = 0; С = 0;
		ТекВремя = РасходнаяНакладная.ПолучитьВремя(Ч, М, С);
		Возврат ТекВремя;
	КонецЕсли;
	
КонецФункции // ВывестиВремяЗаказа

//====================================================================== //--- УМК Сандомирский В.Ю. (07.07.15)
Процедура ОтчетПоСтроке()
	
	Если НомерСтроки > 0  Тогда

		глФлагРасшифровки = 1;
		глОбновить		  = 0;		
		глРасшифровка = СоздатьОбъект("СписокЗначений");
		глРасшифровка.Установить("Дата1", ДокументРезерва.ДатаДок);
		глРасшифровка.Установить("Дата2", ДатаДок);
		
		глРасшифровка.Установить("ВыбФирма",Фирма);	
		глРасшифровка.Установить("ВыбЗаказ",ДокументРезерва);			
			
		глРасшифровка.Установить("фНачОст",1);	//--- УМК Сандомирский В.Ю. (08.04.15)
		глРасшифровка.Установить("фПриход",1);	//--- УМК Сандомирский В.Ю. (08.04.15)
		глРасшифровка.Установить("фРасход",1);	//--- УМК Сандомирский В.Ю. (08.04.15)
		глРасшифровка.Установить("фКонОст",1);	//--- УМК Сандомирский В.Ю. (08.04.15)
		
		Группировки = СоздатьОбъект("СписокЗначений");
		Группировки.ДобавитьЗначение("Номенклатура", 	"Номенклатура");
		Группировки.ДобавитьЗначение("ВидУпаковки",   	"Вид упаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		Группировки.ДобавитьЗначение("ГруппировкаРазрешенныхВидовУпаковки", "Группировка видов упаковки"); //--- УМК Сандомирский В.Ю. (29.05.15) + группировка ГруппировокВидУпаковки
		Группировки.ДобавитьЗначение("Покупатель",  	"Покупатель");
		Группировки.ДобавитьЗначение("Договор",   		"Договор");
		Группировки.ДобавитьЗначение("ДокументРезерва", "Документ резерва");
		Группировки.ДобавитьЗначение("Документ", 	    "Документ движения");
		// по умолчанию
		Группировки.Пометка(1,1);
		Группировки.Пометка(2,1);
		//Группировки.Пометка(6,1);
		
		глРасшифровка.Установить("Группировки",	Группировки);
		
		ОткрытьФорму("Отчет.Резервы");	

		глФлагРасшифровки = 0;
		глРасшифровка = 0;
		глОбновить = 0;
				
	КонецЕсли;
	
	
КонецПроцедуры // ОтчетПоСтроке

//====================================================================== //--- УМК Сандомигский В.Ю. (09.07.15)
Процедура ОткрытьАктивныйДокТаблЧасти(РежимПросмотра)	
	Если Форма.ТекущаяКолонка() = "РасходнаяНакладная"  Тогда
		ДокРН = СоздатьОбъект("Документ");
		Если ДокРН.НайтиДокумент(РасходнаяНакладная) = 1 Тогда
			ОткрытьФорму(ДокРН.ТекущийДокумент(),,РежимПросмотра);
		КонецЕсли;		
	ИначеЕсли Форма.ТекущаяКолонка() = "ДокументРезерва"  Тогда
		ДокЗаказ = СоздатьОбъект("Документ.УМК_ЗаказКлиента");
		Если ДокЗаказ.НайтиДокумент(ДокументРезерва) = 1 Тогда
			ОткрытьФорму(ДокЗаказ.ТекущийДокумент(),,РежимПросмотра);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ИзменитьАктивныйДокТаблЧасти()

Процедура Отчет()
	НеВыводитьМеньше = 0.5;
	Если ВвестиЧисло(НеВыводитьМеньше, "Введите меньше какого количества не выводить", 15, 3) = 0 Тогда
		Возврат;		
	КонецЕсли;
	
	Если ТекущийДокумент().Проведен() = 0 Тогда
		Предупреждение("Необходимо провести документ");
		Возврат;
	КонецЕсли;
	
	ТЗРез = СоздатьОбъект("ТаблицаЗначений");
	ТЗРез.НоваяКолонка("ДокументРезерва");
	ТЗРез.НоваяКолонка("ТМЦ");
	ТЗРез.НоваяКолонка("ВидУпаковки");
	ТЗРез.НоваяКолонка("Ключ");
	ТЗРез.НоваяКолонка("Резерв");
	ТЗРез.НоваяКолонка("Остаток", "Число", 15, 3);
	ТЗРез.НоваяКолонка("ОстатокБУ", "Число", 15, 3);
	Рег = СоздатьОбъект("Регистры");
	РегОст = Рег.Остатки;
	РегОст.ВременныйРасчет(1);
	
	РегОст.УстановитьЗначениеФильтра("МестоХранения", Фирма.ОсновнойСклад);
	Если СравнитьТА() = -1 Тогда
		Рег.РассчитатьРегистрыНа(ТекущийДокумент());
	ИначеЕсли СравнитьТА() = -2 Тогда
		Если ДатаДок < ПолучитьДатуТА() Тогда
			Рег.РассчитатьРегистрыПо(ДатаДок);
		КонецЕсли;
	КонецЕсли;
	
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	РегОст.ВыгрузитьИтоги(ТЗ);
	ТЗ.НоваяКолонка("Ключ", "Строка");	
	ТЗ.НоваяКолонка("Ключ", "Строка");	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ТЗ.Ключ = ЗначениеВСтроку(ТЗ.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТЗ.ВидУпаковки);
	КонецЦикла;
	
	СписТМЦ = СоздатьОбъект("СписокЗначений");
	РегРез = СоздатьОбъект("Регистр.Резервы");
	РегРез.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегРез.ПолучитьДвижение() = 1 Цикл
		Если РегРез.Резерв > НеВыводитьМеньше Тогда
			ОстатокТУ = 0; ОстатокБУ = 0;
			Стр = 0;
			Ключ = ЗначениеВСтроку(РегРез.ТМЦ) + "//" + ?(РегРез.ВидУпаковки = НетУп, ЗначениеВСтрокуВнутр(ПолучитьПустоеЗначение("Справочник.ВидыУпаковки")), ЗначениеВСтрокуВнутр(РегРез.ВидУпаковки));
			
			Если ТЗ.НайтиЗначение(Ключ, Стр, "Ключ") = 1 Тогда
				ОстатокТУ = ТЗ.ПолучитьЗначение(Стр, "ОстатокТовара");
			КонецЕсли;
			Если (ПустоеЗначение(РегРез.ВидУпаковки) = 0) И (РегРез.ВидУпаковки <> НетУп) Тогда
				Стр = 0;
				Если ТЗ.НайтиЗначение(ЗначениеВСтроку(РегРез.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ПолучитьПустоеЗначение("Справочник.ВидыУпаковки")), Стр, "Ключ") = 1 Тогда
					ОстатокБУ = ТЗ.ПолучитьЗначение(Стр, "ОстатокТовара");
				КонецЕсли;			
			КонецЕсли;
			
			Если (ОстатокТУ > 0) ИЛИ (ОстатокБУ > 0) Тогда
				ТЗРез.НоваяСтрока();
				ТЗРез.ДокументРезерва = РегРез.ДокументРезерва;
				ТЗРез.ТМЦ = РегРез.ТМЦ;
				ТЗРез.ВидУпаковки = РегРез.ВидУпаковки;
				ТЗРез.Резерв = РегРез.Резерв;
				ТЗРез.Остаток = ОстатокТУ;
				ТЗРез.ОстатокБУ = ОстатокБУ;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;

	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	Таб.ВывестиСекцию("Шапка");
	
	СтарДок = "";
	ТЗРез.Сортировать("ДокументРезерва,ТМЦ,ВидУпаковки");
	ТЗРез.ВыбратьСтроки();
	Пока ТЗРез.ПолучитьСтроку() = 1 Цикл
		Если ТЗРез.ДокументРезерва <> СтарДок Тогда
			СписТМЦ.Установить("Документ", ТЗРез.ДокументРезерва);
			Таб.ВывестиСекцию("Документ");
			СтарДок = ТЗРез.ДокументРезерва;
		КонецЕсли;
		СписТМЦ.Установить("ТМЦ", ТЗРез.ТМЦ);
		СписТМЦ.Установить("ВидУпаковки", ТЗРез.ВидУпаковки);
		Таб.ВывестиСекцию("Строка");		
	КонецЦикла;

	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчёт по резервам и ост.");
КонецПроцедуры // Отчет

//======================================================================
Процедура ОбработкаЯчейкиТаблицы(Зн, Флаг, Таб, Адрес)
	Флаг = 1;
	Если ТипЗначенияСтр(Зн) = "СписокЗначений" Тогда
		Док = Зн.Получить("Документ");
		ОткрытьФорму(Док, Зн);
		Флаг = 0;
	КонецЕсли;		
КонецПроцедуры // 

// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");