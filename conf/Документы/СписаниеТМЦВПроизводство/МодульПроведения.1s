Перем СуммаУчБезНДС, ПересчКво;
Перем тбПродукции, спМатериалы, спСчета, спПредпочтения;
Перем тбПартии, тбОстаткиПартий;
Перем ВсегоСписаноКво,ВсегоСписаноСум,ВсегоСписаноДав;
Перем ВремРег;
Перем ТБФорм;

// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Фирма,"Фирма");
    глВыбранЛи(МестоХранения,"Место хранения");
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ДатаДок < ДокументОснование.ДатаДок Тогда
			Сообщить("Дата списания меньше чем дата заказа", "!!!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	
	Если глВсеВыбрано = 1 Тогда
		Если (МестоХранения.Тип = Перечисление.ТипыМестХранения.Склад) и (МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
			глКомментарий("Нельзя указывать РОЗНИЧНЫЙ склад (магазин)",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	глПроверитьТипПодразделения(Подразделение);
    Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
    глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);   
	
	Если глВсеВыбрано = 1 Тогда
	    глВыбранЛи(ТМЦ.Счет,"Счет учета для ТМЦ",НомерСтроки);    
		Если СписыватьПоНормам = 0 Тогда
			глВыбранЛи(ВидЗатрат,"Вид затрат",НомерСтроки);
		КонецЕсли;
	КонецЕсли;    
	
	//Если МестоХранения.СуммовойУчет <> 1 Тогда
	//	глВыбранЛи(Кво,"Количество",НомерСтроки);
	//КонецЕсли;
	
	Если СписыватьПоНормам = 0 Тогда
		глВсеВыбрано = ?(глВсевыбрано = 0,0,глПроверитьАналитикуПоЗатратам(Подразделение, ВидДеятельности, Заказ, Продукция,,,,,НомерСтроки,1));	
	    глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
	Иначе
		глВсеВыбрано = ?(глВсевыбрано = 0,0,глПроверитьАналитикуПоЗатратам(Подразделение, ВидДеятельности, Заказ, ТМЦ,,,,,НомерСтроки,1));	
	КонецЕсли;
	
	Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) //--- УМК Сандомирский В.Ю. (03.10.14) проверка чтобы ТМЦ не содержал ТМЦ для прихода
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
	
		Если ПустоеЗначение(ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) <> 1 Тогда
			
			Сообщить("В строке № " + НомерСтроки  + " Материал " + ТМЦ + " содержит ТМЦ для приходования " + ТМЦ.ТМЦДляПрихода.Получить(ДатаДок) + " !!! это не допустимо !!!","!!!");
			
			глВсеВыбрано = 0;
		КонецЕсли;			
					
	КонецЕсли;//... УМК Сандомирский В.Ю. (03.10.14) проверка чтобы ТМЦ не содержал ТМЦ для прихода
	
    Возврат глВсеВыбрано;
КонецФункции

// ===============================
Процедура РассчитатьШапку()
	
	ВремРег = СоздатьОбъект("Регистры");
	спОтбор = СоздатьОбъект("СписокЗначений");
	Если СписыватьПоНормам = 0 Тогда
		// будем списывать материалы, указанные в ТЧ
		спСчета = СоздатьОбъект("СписокЗначений");
		спПредпочтения = СоздатьОбъект("СписокЗначений");
		// сформируем список счетов для отбора
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			глДобавитьЗначениеБезПовторения(СпСчета,ТМЦ.Счет);
			Если (глЭтоДавальческийЗаказ(Заказ) =1) Тогда
				глДобавитьЗначениеБезПовторения(СпСчета,глПолучитьСчетУчетаТМЦ("Дав",ТМЦ));
			КонецЕсли;
			Если (ПустоеЗначение(Заказ)=0)
			И ((ТМЦ.ВидТМЦ=Перечисление.ВидыТМЦ.Продукция) Или
			   (ТМЦ.ВидТМЦ=Перечисление.ВидыТМЦ.Полуфабрикат))
			Тогда
			    // будем использовать заказ в качестве предпочтения
				спПредпочтения.ДобавитьЗначение(Заказ);
				Если ПустоеЗначение(Предпочтение)=0 Тогда
				    глКомментарий("В строке "+НомерСтроки+" в качесте предпочтения будет использован Заказ.",2);
				КонецЕсли;
			Иначе       
				Если ПустоеЗначение(Предпочтение)=1 Тогда
					спПредпочтения.ДобавитьЗначение(ПустоеЗначение("Справочник.Контрагенты"));
				Иначе
					спПредпочтения.ДобавитьЗначение(Предпочтение);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		// будем списывать материалы и/или полуфабрикаты
		// установим фильр по списку маитериалов/полуфабрикатов
		спОтбор.Установить("Товар",спМатериалы);
	КонецЕсли;
	
	спОтбор.Установить("Фирма",Фирма);
	спОтбор.Установить("Счет",спСчета);
	глПолучитьОтборПоМестамХранения(Контекст, спОтбор);	
	
	Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
		глРассчитатьОстаткиИРезервы(Контекст, ВремРег, спОтбор,1,1,1, 0); //--- УМК Сандомирский В.Ю, (03.10.14) 7ой параметр : (0 - текущий товар ТЧ \ 1-Заменять товаром для списания \ 2-Заменять товаром для приходования)
	Иначе //--- как было  
		глРассчитатьОстаткиИРезервы(Контекст, ВремРег, спОтбор, 1, 1, 1); //--- УМК Сандомирский В.Ю, (03.10.14) 7ой параметр : (0 - текущий товар ТЧ \ 1-Заменять товаром для списания \ 2-Заменять товаром для приходования)
	КонецЕсли;
	
	Если глПартионныйУчетПоСкладам <> Да Тогда
		спОтбор.Установить("МестоХранения", "");
//	    спОтбор.Установить("МестоХранения", МестоХранения);
	КонецЕсли;
		
	Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
		глРассчитатьОстаткиПартий(Контекст, ВремРег, Фирма, спОтбор,,1);//--- УМК Сандомирский В.Ю, (03.10.14) 6ой параметр : (0 - текущий товар ТЧ \ 1-Заменять товаром для списания \ 2-Заменять товаром для приходования)
	Иначе
		глРассчитатьОстаткиПартий(Контекст, ВремРег, Фирма, спОтбор);//--- УМК Сандомирский В.Ю, (03.10.14) 6ой параметр : (0 - текущий товар ТЧ \ 1-Заменять товаром для списания \ 2-Заменять товаром для приходования)	
	КонецЕсли;
	
	
	Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
		глСформироватьТаблицуПартий(Контекст, ВремРег, Фирма, спОтбор, спПредпочтения, тбПартии, тбОстаткиПартий, 0, 1); //--- УМК Сандомирский В.Ю, (03.10.14) 10ый параметр : (0 - текущий товар ТЧ \ 1-Заменять товаром для списания \ 2-Заменять товаром для приходования)
	Иначе
		глСформироватьТаблицуПартий(Контекст, ВремРег, Фирма, спОтбор, спПредпочтения, тбПартии, тбОстаткиПартий, 0, 1); //--- УМК Сандомирский В.Ю, (03.10.14) 10ый параметр : (0 - текущий товар ТЧ \ 1-Заменять товаром для списания \ 2-Заменять товаром для приходования)
	КонецЕсли;	
	
	
	
КонецПроцедуры

//===============================
Процедура Проводки(Счет,ТМЦ,Партия,ВидЗатрат,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяДавСтоимость);
	
	Склад = ?(ПустоеЗначение(СкладСписания) = 1, МестоХранения, СкладСписания);
	
	ПересчКво = Кво * Коэффициент;
	Если (Счет.Забалансовый = 0) Тогда //Списываем собственные материалы/полуфабрикаты/продукцию
		глПроводкаПоЗатратам(Контекст,"231",Счет, СписываемаяСтоимость,"Списание собственного сырья в производство: уч. сумма",СписываемыйОстатокТовара, ВидДеятельности, Подразделение,ВидЗатрат,
			Склад,ТМЦ,Партия, ,,"СП");
		// по давалльческому заказу показываем затраты на счете ДВ
		Если глЭтоДавальческийЗаказ(Заказ) = 1 Тогда
			глПроводка(Контекст,"ДВ",,СписываемаяСтоимость,"Списание собственного сырья в производство: уч. сумма",СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
			,,, ,,"СП");
		КонецЕсли;
	ИначеЕсли СокрЛП(Счет) = "022" Тогда //Списываем давальческие материалы
		глПроводка(Контекст,"ДВ",Счет,СписываемаяСтоимость,"Списание давальческих материалов в производство: уч. сумма",СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
		Склад,ТМЦ,Партия, ,,"СП"); 
	
	ИначеЕсли (СокрЛП(Счет) = "0235") или (СокрЛП(Счет) = "0236") Тогда //Списываем давальческие полуфабрикаты/продукцию
		//Полная себестоимость
		глПроводка(Контекст,"ДВ",Счет,СписываемаяСтоимость,"Списание давальческих полуфабрикатов (продукции) в производство: давальч. сумма",СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
		Склад,ТМЦ,Партия, ,,"СП");
		
		//Недавальческая часть            
		глПроводка(Контекст,"231","232",СписываемаяСтоимость - СписываемаяДавСтоимость,"Списание давальческих полуфабрикатов (продукции) в производство: недавальч. сумма",СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
		Склад,ТМЦ,Партия, ,,"СП");
	КонецЕсли;
КонецПроцедуры 

// ===============================
Процедура ДвиженияПроизводственныеЗатраты(Продукция,ВидЗатрат,ТМЦ,ВсегоСписаноКво,СуммаБезНДС,СуммаДав,Кутер,КодОперации)
	
	Регистр.ПроизводственныеЗатраты.ПривязыватьСтроку(НомерСтроки);
	
	Регистр.ПроизводственныеЗатраты.Фирма = Фирма;
	Регистр.ПроизводственныеЗатраты.ВидДеятельности = ВидДеятельности;
	Регистр.ПроизводственныеЗатраты.Подразделение = Подразделение;
	Регистр.ПроизводственныеЗатраты.Продукция = Продукция;
	Регистр.ПроизводственныеЗатраты.ВидЗатрат = ВидЗатрат;
	Регистр.ПроизводственныеЗатраты.Заказ = Заказ;
	Регистр.ПроизводственныеЗатраты.Материал = ТМЦ;
	Регистр.ПроизводственныеЗатраты.Количество = ВсегоСписаноКво;
	Регистр.ПроизводственныеЗатраты.Сумма = СуммаБезНДС;
	Регистр.ПроизводственныеЗатраты.СуммаДав = СуммаДав;
	Регистр.ПроизводственныеЗатраты.КодОперации = КодОперации;
	
	Если (ПустоеЗначение(Константа.УМК_ДатаНачалаУчетаЗатратПоКутерам) <> 1) И (Константа.УМК_ДатаНачалаУчетаЗатратПоКутерам < ДатаДок) Тогда //--- УМК Сандомирский В.Ю. (24.06.14) учет производственных затрат в кутерах
		Регистр.ПроизводственныеЗатраты.Кутер = Кутер; 
	КонецЕсли; //... УМК Сандомирский В.Ю. (24.06.14) учет производственных затрат в кутерах
	
	Регистр.ПроизводственныеЗатраты.ДвижениеПриходВыполнить();
КонецПроцедуры

// ===============================
Процедура СписаниеПартий(ТМЦ,Кво,ВидЗатрат,НомСтр)
	ВсегоСписаноКво = 0;
	ВсегоСписаноСум = 0;
	ВсегоСписаноДав = 0;
	
	ВсегоСписать = Кво;
	ОсталосьСписать = ВсегоСписать;
	
	НС=0;
	Если тбПартии.НайтиЗначение(НомСтр,НС,"НомерСтрокиДокумента")=1 Тогда
		тбПартии.ПолучитьСтрокуПоНомеру(НС);
	Иначе
		тбПартии.ВыбратьСтроки();
		тбПартии.ПолучитьСтроку();
	КонецЕсли;
	
	Пока тбПартии.НомерСтрокиДокумента = НомСтр Цикл
		МестоХраненияП = тбПартии.МестоХранения;
		ПоставщикП = тбПартии.Поставщик;
		ПоставкаП = тбПартии.Поставка;
		ПрихДокументП = тбПартии.ПрихДокумент;
		СчетП = тбПартии.Счет;
		// проверяем соответствие партиии заказу
		Если глПартияСоответствуетЗаказу(ПрихДокументП,Заказ)=0 Тогда
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		//По недавальческому заказу списываем только собственное сырье
		Если (глЭтоДавальческийЗаказ(Заказ) = 0) Тогда
			Если (СчетП.Забалансовый = 1) Тогда
				Если тбПартии.ПолучитьСтроку()=0 Тогда
					Прервать;
				КонецЕсли;
		    	Продолжить;
			КонецЕсли;
			// для недавальческого заказа проверим счет учета
			Если СчетП<>тбПартии.ТМЦ.Счет Тогда
				Если тбПартии.ПолучитьСтроку()=0 Тогда
					Прервать;
				КонецЕсли;
		    	Продолжить;
			КонецЕсли;
		Иначе // давальческий заказ
		    Если (СчетП.Забалансовый = 1) и (ПоставщикП <> Заказ.Контрагент) Тогда
				Если тбПартии.ПолучитьСтроку()=0 Тогда
					Прервать;
				КонецЕсли;
		    	Продолжить;
		    КонецЕсли;
		КонецЕсли;
		НС =0;
		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 	//--- УМК Сандомирский В.Ю. (03.10.14) в остатки тмц в партии ТМЦ для приходования
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 			
			ТМЦПартии = ?(ПустоеЗначение(ТМЦ.ТМЦДляСписания.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляСписания.Получить(ДатаДок), ТМЦ); 			
		Иначе		
			ТМЦПартии = ТМЦ;	
		КонецЕсли;
			
		Если тбОстаткиПартий.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,ТМЦПартии.Код,СчетП),НС,"Ключ")=1 Тогда
			тбОстаткиПартий.ПолучитьСтрокуПоНомеру(НС);
			ОстатокТовара = тбОстаткиПартий.ОстатокТовара;
			Если ОстатокТовара = 0 Тогда
				Если тбПартии.ПолучитьСтроку()=0 Тогда
					Прервать;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
			КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
			Если ЦенаВручную = Да Тогда
			    СписываемаяСтоимость = СписываемыйОстатокТовара * Коэффициент * ЦенаБезНДС;
				Если СписываемаяСтоимость > тбОстаткиПартий.Стоимость Тогда
					Сообщить("В строке: " + Строка(НомерСтроки) + " цена указана вручную. Списываемая стоимость " + Строка(СписываемаяСтоимость) 
					 + " превышает стоимость в остатке." + Строка(тбОстаткиПартий.Стоимость));
				КонецЕсли;
			Иначе
				СписываемаяСтоимость = тбОстаткиПартий.Стоимость * КоэфСписания;
			КонецЕсли;
			
			СписываемаяПродСтоимость = тбОстаткиПартий.ПродСтоимость * КоэфСписания;
			// Давальческие материалы учитываются на забалансовых счетах
			СписываемаяДавСтоимость = ?(СчетП.Забалансовый = 1,СписываемаяСтоимость - СписываемаяПродСтоимость,0);
			
			ВсегоСписаноКво = ВсегоСписаноКво + СписываемыйОстатокТовара;
			ВсегоСписаноСум = ВсегоСписаноСум + СписываемаяСтоимость;
			ВсегоСписаноДав = ВсегоСписаноДав + СписываемаяДавСтоимость;
			
			// Списываем
			глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦПартии, СчетП, МестоХраненияП, ПоставщикП,
				ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
				СписаниеВПроизводство, 0 ,0, 0);
			
			Если ТМЦПартии.СписыватьПриВыпуске.Получить(Заказ.ДатаДок) = 1 Тогда
				глПровестиПартию(Контекст, 1, 0, Фирма, ТМЦПартии, СчетП, МестоХраненияП, ПоставщикП,
					ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
					СписаниеВПроизводство, 0 ,0, 0);				
			КонецЕсли;
			глУчестьСписание(тбОстаткиПартий,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость);
			ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
			
			Проводки(СчетП,ТМЦПартии,ПрихДокументП,ВидЗатрат,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяДавСтоимость);
		КонецЕсли;
		Если ОсталосьСписать = 0 Тогда
			Прервать;
		КонецЕсли;   
		Если тбПартии.ПолучитьСтроку()=0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ОсталосьСписать > 0 Тогда		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 	//--- УМК Сандомирский В.Ю. (07.11.14) в остатки тмц в партии ТМЦ для приходования 
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 			
			ТМЦПартии = ?(ПустоеЗначение(ТМЦ.ТМЦДляСписания.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляСписания.Получить(ДатаДок), ТМЦ); 			
		Иначе		
			ТМЦПартии = ТМЦ;	
		КонецЕсли;
		
		глСообщитьОбОтсутствииПартии(0, Фирма, ТМЦПартии, НомерСтроки);
		ТБФорм.НоваяСтрока();
		ТБФорм.ТМЦ = ТМЦПартии;
		ТБФорм.Кво = ОсталосьСписать;
		Если Константа.РазрешитьОтрицОстатки = Нет Тогда
			глНеПроводить(Контекст);
			Возврат;
		Иначе
			СписываемыйОстатокТовара = ОсталосьСписать;
			Если ЦенаВручную = Да Тогда
			    СписываемаяСтоимость = СписываемыйОстатокТовара * Коэффициент * ЦенаБезНДС;
			Иначе
				СписываемаяСтоимость = ТМЦПартии.УчетнаяЦена.Получить(ДатаДок) * СписываемыйОстатокТовара;
			КонецЕсли;			
			
			СписываемаяПродСтоимость = 0;
			ВсегоСписаноКво = ВсегоСписаноКво + СписываемыйОстатокТовара;
			ВсегоСписаноСум = ВсегоСписаноСум + СписываемаяСтоимость;
			Если глПартионныйУчетПоСкладам = Да Тогда
				МестоХраненияП = МестоХранения;
			КонецЕсли;
			СчетП = ТМЦПартии.Счет;
			Если ТМЦПартии.ВидТМЦ = Перечисление.ВидыТМЦ.Товар тогда
				МетодРасчетаСебест = Константа.МетодРасчетаСебестоимостиТоваров.Получить(ДатаДок);
			Иначе
				МетодРасчетаСебест = Константа.МетодРасчетаСебестоимостиПроизводственныхЗапасов.Получить(ДатаДок);
			КонецЕсли;
			Если МетодРасчетаСебест = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
				ПоставщикП = 0;
				ПоставкаП = 0;
				ПрихДокументП = 0;
			Иначе
				ПоставщикП = 0;
				ПоставкаП = ТекущийДокумент();
				ПрихДокументП = ТекущийДокумент();
			КонецЕсли;
			//Списываем партию
			глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦПартии, СчетП, МестоХраненияП, ПоставщикП,
				ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
				СписаниеВПроизводство, 0 ,0, 0);
				
			Если ТМЦПартии.СписыватьПриВыпуске.Получить(Заказ.ДатаДок) = 1 Тогда
				глПровестиПартию(Контекст, 1, 0, Фирма, ТМЦПартии, СчетП, МестоХраненияП, ПоставщикП,
					ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
					СписаниеВПроизводство, 0 ,0, 0);				
			КонецЕсли;

			Проводки(СчетП,ТМЦПартии,ПрихДокументП,ВидЗатрат,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяДавСтоимость);
				
			ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
			глСообщитьОСозданииПартии(ТМЦПартии, СписываемыйОстатокТовара);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //

// ===============================
Процедура ДвиженияИПроводкиСтрока()	
	ПересчКво = Кво * Коэффициент;
	Если ПересчКво = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 	//--- УМК Сандомирский В.Ю. (03.10.14) в остатки тмц в партии ТМЦ для приходования
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 			
		ТМЦПартии 	= ?(ПустоеЗначение(ТМЦ.ТМЦДляСписания.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляСписания.Получить(ДатаДок), ТМЦ); 
		ТМЦОстатки 	= ТМЦ
	Иначе		
		ТМЦПартии 	= ?(ПустоеЗначение(ТМЦ.ТМЦДляСписания.Получить(ДатаДок)) = 1, ТМЦ, ТМЦ.ТМЦДляСписания.Получить(ДатаДок));
		ТМЦОстатки 	= ?(ПустоеЗначение(ТМЦ.ТМЦДляСписания.Получить(ДатаДок)) = 1, ТМЦ, ТМЦ.ТМЦДляСписания.Получить(ДатаДок));
	КонецЕсли;	
	
	Если СписыватьПоНормам=0 Тогда
		// просто списываем ТМЦ, указанные с таблчасти 
		// списываем остатки		
		глПровестиОстатки(Контекст, ВремРег, Фирма, ?(ПустоеЗначение(СкладСписания) = 1, МестоХранения, СкладСписания), ТМЦОстатки,, ПересчКво, 0, 0, 1, 2, 1,,,,?(ТМЦОстатки.СписыватьПриВыпуске.Получить(Заказ.ДатаДок) = 1, 3, 1),Заказ.ДатаДок);		
		
		// списываем партии
		СписаниеПартий(ТМЦПартии,ПересчКво,ВидЗатрат,НомерСтроки);
		// отражаем затраты

		СписываемыйМатериал = ТМЦ;
		CписываемоеКво = ВсегоСписаноКво;
		Если ВидЗатрат.СтатьяКалькуляции.Выбран() = 1 Тогда
			Если   (ВидЗатрат.СтатьяКалькуляции.ДетализироватьДоМатериалов = 0)
				 И (СписываемыйМатериал.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат) 
				 И (СписываемыйМатериал.ВидТМЦ <> Перечисление.ВидыТМЦ.Продукция) Тогда
			    СписываемыйМатериал = 0;
				CписываемоеКво = 0;
			КонецЕсли;
		КонецЕсли;
		
		//--- УМК Сандомирский В.Ю. (24.06.14) учет производственных затрат в кутерах
		Кутер = "";
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаУчетаЗатратПоКутерам) <> 1) И (Константа.УМК_ДатаНачалаУчетаЗатратПоКутерам < ДатаДок) Тогда
			Кутер = КвоКутеров * Кво / Итог("Кво");
		КонецЕсли;
		
		ДвиженияПроизводственныеЗатраты(Продукция,ВидЗатрат,СписываемыйМатериал,CписываемоеКво,ВсегоСписаноСум,ВсегоСписаноДав,Кутер,ОтражениеЗатрат);
		//... УМК Сандомирский В.Ю. (24.06.14) учет производственных затрат в кутерах
		
		// заполняем реквизиты документа
		Если ВсегоСписаноКво = 0 Тогда
			// рассчитываем себестоимость из справочника ТМЦ
			СуммаУчБезНДС = ТМЦ.УчетнаяЦена.Получить(ДатаДок)*ПересчКво;
			СуммаУчДав = 0;
		Иначе
			СуммаУчБезНДС = ПересчКво*ВсегоСписаноСум/ВсегоСписаноКво;
			СуммаУчДав = ПересчКво*ВсегоСписаноДав/ВсегоСписаноКво;
		КонецЕсли;
		// запишем себестоимость в колонку ...
		Если ((НеПересчитыватьЦену = 0) и (ЦенаВручную <> Да)) или (СуммаБезНДС = 0) Тогда
			СуммаБезНДС = СуммаУчБезНДС;
			ЦенаБезНДС = ?(ПересчКво=0, 0, СуммаУчБезНДС/Кво);
		КонецЕсли;
		СуммаДав = СуммаУчДав;
	Иначе
		// списываем по нормам, обрабатываем тбПродукции
		НомерСтр = 0; // номер строки в тбПродукции соответствующий текущему номеру строки документа
		тбПродукции.НайтиЗначение(НомерСтроки,НомерСтр,"НСтр");
		тбПродукции.ПолучитьСтрокуПоНомеру(НомерСтр);
		Пока тбПродукции.НСтр = НомерСтроки Цикл
			тбНормы = тбПродукции.Нормы;
			тбНормы.ВыбратьСтроки();
			Пока тбНормы.ПолучитьСтроку() = 1 Цикл
				//МАТЕРИАЛ или ПОЛУФАБРИКАТ
				Если (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Материал)
				или (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат) Тогда
					//Списываем материалы по ОСТАТКАМ и по ПАРТИЯМ
					глПровестиОстатки(Контекст, ВремРег, Фирма, МестоХранения, тбНормы.Материал, ,тбНормы.Кво, 0, 0, 1, 2, 1,,,,,Заказ.ДатаДок);
					
					// ищем номер пары (Материал,Предпочтение) в списках
					НомСтр = 0;
					Для НомСтр = 1 по спМатериалы.РазмерСписка() Цикл
						Если (спМатериалы.ПолучитьЗначение(НомСтр)=тбНормы.Материал) и (спПредпочтения.ПолучитьЗначение(НомСтр)=Заказ) Тогда
						    Прервать;
						КонецЕсли;
					КонецЦикла;
					СписаниеПартий(тбНормы.Материал,тбНормы.Кво,тбНормы.Материал.ВидЗатрат,НомСтр);
					
					//--- УМК Сандомирский В.Ю. (24.06.14) учет производственных затрат в кутерах
					
					Кутер = "";
					Если (ПустоеЗначение(Константа.УМК_ДатаНачалаУчетаЗатратПоКутерам) <> 1) И (Константа.УМК_ДатаНачалаУчетаЗатратПоКутерам < ДатаДок) Тогда
						Кутер = КвоКутеров * тбНормы.Кво / тбНормы.Итог("Кво") ;
					КонецЕсли;	
					
					//... УМК Сандомирский В.Ю. (24.06.14) учет производственных затрат в кутерах
					
					ДвиженияПроизводственныеЗатраты(тбПродукции.Продукция,тбНормы.Материал.ВидЗатрат,тбНормы.Материал,ВсегоСписаноКво,ВсегоСписаноСум,ВсегоСписаноДав,Кутер,ОтражениеЗатрат);
				КонецЕсли;
			КонецЦикла;
			Если тбПродукции.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
//Вызывается рекурсивно
//Добавляется материал в спМатериалы, счет в спСчета из норм затрат
Функция ДобавитьСтрокуВТаблицуПродукции(Продукция,НаЗаказ,Единица,Коэф,Кво,КвоБрака,Уровень)
	Перем тбНормы;

	//Получаем нормы по этому же ЗАКАЗУ, если в заказе их нет то берем на ДатаДок
	Если глПолучитьНормы(Продукция,Единица,Кво,ДатаДок,НаЗаказ,тбНормы) =0 Тогда
		глКомментарий("Не указаны нормы для "+Продукция+?(ПустоеЗначение(НаЗаказ)=0," по заказу "+НаЗаказ,""),0);
		Возврат 0;
	КонецЕсли;
	тбПродукции.НоваяСтрока();
	тбПродукции.НСтр = НомерСтроки;
	тбПродукции.Продукция = Продукция;
	тбПродукции.Заказ = НаЗаказ;
	тбПродукции.Кво = Кво * Коэф;
	тбПродукции.КвоБрака = КвоБрака * Коэф;
	тбПродукции.Уровень = Уровень;
	тбПродукции.Нормы = тбНормы;
	
	тбНормы.ВыбратьСтроки();
	Пока тбНормы.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тбНормы.Материал) = 0 Тогда  //тбНормы.Материал = ВозвратныйОтход или Материал или Продукция или Полуфабрикат
			//Добавляем материал по норме на продукцию в СПИСОК МАТЕРИАЛОВ
		    Если (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.ВозвратныйОтход) или 
			((УчитыватьПолуфабрикаты = 1) 
			И (тбНормы.Материал.ВидТМЦ <> Перечисление.ВидыТМЦ.Материал)
			И (тбНормы.Материал.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат)
			И (тбНормы.Материал.ВидТМЦ <> Перечисление.ВидыТМЦ.Товар)
			И (тбНормы.Материал.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара)) Тогда
				// ничего не добавляем
			Иначе
				// добавляем пару (Материал,Предпочтение) без повторения
				// в качестве предпочтения выступает заказ
				фНашли = 0;
				Для НомСтр = 1 по спМатериалы.РазмерСписка() Цикл
					Если (спМатериалы.ПолучитьЗначение(НомСтр)=тбНормы.Материал) и (спПредпочтения.ПолучитьЗначение(НомСтр)=тбПродукции.Заказ) Тогда
						фНашли = 1;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если фНашли = 0 Тогда
					// если такой пары в списках еще нет
					спМатериалы.ДобавитьЗначение(тбНормы.Материал);
					спПредпочтения.ДобавитьЗначение(тбПродукции.Заказ);
				КонецЕсли;
				
				//Добавляем счет учета сырья в СПИСОК СЧЕТОВ
				глДобавитьЗначениеБезПовторения(СпСчета,тбНормы.Материал.Счет);
				
				Если (глЭтоДавальческийЗаказ(тбПродукции.Заказ) =1) Тогда
					глДобавитьЗначениеБезПовторения(СпСчета,глПолучитьСчетУчетаТМЦ("Дав",тбНормы.Материал));
				КонецЕсли;
				
		    КонецЕсли;
			//Если в продукцию входят ПОЛУФАБРИКАТЫ, получаем нормы для них 
			Если (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат) и (УчитыватьПолуфабрикаты = 1) Тогда
				Уровень = Уровень + 1;
				Если ДобавитьСтрокуВТаблицуПродукции(тбНормы.Материал,НаЗаказ,0,1,тбНормы.Кво,0,Уровень) = 0 Тогда
					Возврат 0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат 1;
КонецФункции //ДобавитьСтрокуТаблицыПродукции

// ===============================
Процедура Рентабельность()
	ВесПрод = 0;
	НормаПотерь = 0;
	ПотериФарша = 0;
	ДопКоэф = 1;
	Если (ПустоеЗначение(ДокументОснование) = 0) и (ДокументОснование.Вид() = "Заказ") Тогда
		ДокументОснование.ВыбратьСтроки();
		Пока ДокументОснование.ПолучитьСтроку() = 1 Цикл
			Если ДокументОснование.Продукция = ПродукцияШ Тогда
				//НормаПотерь = Число(ДокументОснование.НормыЗатрат.ПроцПотерь);
				НормаПотерь = Число(ДокументОснование.Продукция.ПроцПотерь.Получить(ДокументОснование.ДатаДок));
			КонецЕсли;
			Если ДокументОснование.КодСтроки = КодСтроки Тогда
				ПотериФарша = ДокументОснование.ПотериФарша;
				ДопКоэф = ?(ДокументОснование.КвоФаршаФакт = 0, 1, ДокументОснование.КвоФаршаПлан / ДокументОснование.КвоФаршаФакт);
			КонецЕсли;			
		КонецЦикла;
	КонецЕсли;
	
	КФарша = КвоФарша - ПотериФарша; 
	ВесПрод = КФарша - КФарша * (НормаПотерь / 100);
	ВесПрод = ВесПрод / ?(ДопКоэф = 0, 1, ДопКоэф);
	
    
	ИтогСуммаДляФ = 0;
	ВыбратьСтроки();	
	Пока ПолучитьСтроку()=1 Цикл
		СуммаДляФ = ?(ВесПрод = 0,0, СуммаБезНДС / ВесПрод);
		ИтогСуммаДляФ = ИтогСуммаДляФ + СуммаДляФ;
	КонецЦикла;
			
	//ОПЗ = Константа.ОПЗ.Получить(ДатаДок); // + umk - уберем пока
	ОПЗ = ПродукцияШ.ОПР.Получить(ДатаДок); // + umk
	ИтЦенаКГ = Число(ИтогСуммаДляФ + ОПЗ + глПолучитьСтУпак(ПродукцияШ, , ДатаДок, -1));
	ЦенаП = глВернутьЦену(ПродукцияШ, Константа.ОсновнаяКатегорияЦен, ДатаДок, Гривня);
	
	Попытка
		Рен = Окр((?(ИтЦенаКГ = 0, 0, ЦенаП/ ИтЦенаКГ))*100, 2);
	Исключение
		Рен = 0; // + umk
	КонецПопытки;
	
Рентаб = Рен;
КонецПроцедуры

// ===============================
Функция ЗаполнитьТбПродукции()
	//Таблица ПРОДУКЦИИ содержит информацию о продукции и полуфабрикатах всех уровней из которых она состоит 
	тбПродукции = СоздатьОбъект("ТаблицаЗначений");
	тбПродукции.НоваяКолонка("НСтр","Число",4,0);
	тбПродукции.НоваяКолонка("Продукция","Справочник.ТМЦ");
	тбПродукции.НоваяКолонка("Заказ","Документ.Заказ");
	тбПродукции.НоваяКолонка("Кво","Число",10,3);
	тбПродукции.НоваяКолонка("КвоБрака","Число",10,3);
	тбПродукции.НоваяКолонка("Уровень","Число",3,0);
	тбПродукции.НоваяКолонка("Нормы");
	                                     
	спМатериалы = СоздатьОбъект("СписокЗначений");
	спПредпочтения = СоздатьОбъект("СписокЗначений");
	спСчета = СоздатьОбъект("СписокЗначений");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ДобавитьСтрокуВТаблицуПродукции(ТМЦ,Заказ,Ед,Коэффициент,Кво,0,0) = 0 Тогда
			Возврат 0;
		КонецЕсли;
	КонецЦикла;
	//Сортируем таблицу ПРОДУКЦИИ в порядке убывания глубины передела
	тбПродукции.Сортировать("НСтр+,Уровень-");
	Возврат 1;
КонецФункции //ЗаполнитьТбПродукции

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	
	//--- Проверка строк 
	ОшибкиВстроках = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    ОшибкиВстроках = 1
		КонецЕсли;
	КонецЦикла;    
	
	//Проверка заполненности продукции в табличной части //--- УМК Сандомирский В.Ю, по запросу Ольги 20.03.14 г.
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глВыбранЛи(Продукция,"Продукция",НомерСтроки);
	КонецЦикла;   //... УМК Сандомирский В.Ю, по запросу Ольги 20.03.14 г.
		
	Если ОшибкиВстроках = 1 Тогда
	    глНеПроводить(Контекст);
		Возврат;
	КонецЕсли;
	
	Если СписыватьПоНормам = 1 Тогда
		Если ЗаполнитьТбПродукции()=0 Тогда
			глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ТБФорм = СоздатьОбъект("ТаблицаЗначений");
	ТБФорм.НоваяКолонка("ТМЦ");
	ТБФорм.НоваяКолонка("Кво");
	
	РассчитатьШапку();
	                 
	ВремРег.Актуальность(1);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ДвиженияИПроводкиСтрока();
	КонецЦикла;           
	ВремРег.Актуальность(0);
	
	// запишем суммы для фарша в заказ
	Если (ДокументОснование.Выбран() = 1) и (ДокументОснование.Вид() = "Заказ") Тогда
		//ТЗ = СоздатьОбъект("ТаблицаЗначений");
		//ДокументОснование.ВыгрузитьТабличнуюЧасть(ТЗ);
		Зак = СоздатьОбъект("Документ");
		Зак.НайтиДокумент(ДокументОснование);
		Зак.ВыбратьСтроки();
		Пока Зак.ПолучитьСтроку() = 1 Цикл
			Если (Зак.Продукция = ПродукцияШ) и (Зак.КодСтроки = КодСтроки) Тогда
			    Зак.КвоФаршаПлан = КвоФарша;
			КонецЕсли;
		КонецЦикла;
		
		//ТБВесПрод.Свернуть("Продукция", "Вес");
		//ТБВесПрод.ВыбратьСтроки();
		//Пока ТБВесПрод.ПолучитьСтроку() = 1 Цикл
		//	Стр = 0;
		//	Если ТЗ.НайтиЗначение(ТБВесПрод.Продукция, Стр, "Продукция") = 1 Тогда
		//		Зак.ПолучитьСтрокуПоНомеру(Стр);
		//		Зак.КвоФаршаПлан = ТБВесПрод.Вес;
		//	КонецЕсли;
		//КонецЦикла;
		
		Зак.Записать();                                     
	КонецЕсли;
	
	Если (СформироватьВОНаНедостаток = 1) Тогда
		НачатьТранзакцию();
	    Док = СоздатьОбъект("Документ");
		ДокОп = СоздатьОбъект("Документ.ОприходованиеИзлишков");
		
		Док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент());
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Вид() = "ОприходованиеИзлишков" Тогда
				ДокОп.НайтиДокумент(Док.ТекущийДокумент());
				Если Док.ПометкаУдаления() = 1 Тогда
				    Док.СнятьПометкуУдаления();					
				КонецЕсли;
				
				Прервать;				
			КонецЕсли;
		КонецЦикла;
		
		Если (ДокОп.КоличествоСтрок() <> 0) или (ТБФорм.КоличествоСтрок() <> 0) Тогда
			Если ДокОп.ТекущийДокумент().Выбран() = 0 Тогда
			    ДокОп = СоздатьОбъект("Документ.ОприходованиеИзлишков");
				ДокОп.Новый();
				ДокОп.ДатаДок = ДатаДок;
				ДокОп.МестоХранения = МестоХранения;
				ДокОп.СчетДоходов = СчетПоКоду("00");
				ДокОп.СубконтоВалДох = Константа.БазВаловыйДоход;
				ДокОп.КатегорияЦен = Константа.РозничнаяКатегорияЦен;
				ДокОп.ДокОснование = ТекущийДокумент();
				ДокОп.Автор = Автор;
				ДокОп.Фирма = Фирма;
				глУстановитьНомер(ДокОп);
				ДокОп.Примечание = "Авт. формирование";
				Ч = 0; М = 0; С = 0;
				ТекущийДокумент().ПолучитьВремя(Ч,М,С);
				ДокОп.УстановитьВремя(Ч,М,С+1);
			КонецЕсли;
	
			ДокОп.УдалитьСтроки();
			ТБФорм.ВыбратьСтроки();
			Пока ТБФорм.ПолучитьСтроку() = 1 Цикл
				ДокОп.НоваяСтрока();
				ДокОп.ТМЦ = ТБФорм.ТМЦ;				
				ДокОп.Кво = ТБФорм.Кво;
				ДокОп.Ед = ДокОп.ТМЦ.ЕдиницаПоУмолчанию;
				ДокОп.Коэффициент = ДокОп.Ед.Коэффициент;
			КонецЦикла;
			ДокОп.Записать();
			ОткрытьФормуМодально(ДокОп.ТекущийДокумент(), "Провести");
		КонецЕсли;		
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
	Рентабельность();	
	Операция.СуммаОперации = Итог("СуммаБезНДС");
	Операция.Содержание = Примечание;
	Операция.Записать();

	Если ПустоеЗначение(ДокументОснование) = 1 Тогда
		НачатьТранзакцию();
		Док = СоздатьОбъект("Документ");
		Док.УстановитьФильтр(1, 0);
		Док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент());
		
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Вид() = "ПереработкаМяса" Тогда
				ОткрытьФормуМодально(Док.ТекущийДокумент(), Контекст);
			КонецЕсли;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	Если СтатусВозврата() = 1 Тогда
		ТребуетсяПроведение = 0;
	КонецЕсли;
	
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры