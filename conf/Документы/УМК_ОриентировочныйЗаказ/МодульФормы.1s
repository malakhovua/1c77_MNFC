Перем СтараяДата;              
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем НачальнаяДатаДокумента;
Перем СпВидыУпаковкиГлобальный; 							//--- УМК Сандомирский В.Ю. (*)
Перем СпВидыУпаковкиЛокальный;  							//--- УМК Сандомирский В.Ю. (*)
Перем СпрТМЦ, СпрРазрешенныеУпаковкиТМЦ, СпрВидУпаковки;  	//--- УМК Сандомирский В.Ю. (*)
Перем ТекИмяФайла;
Перем ТЗ_Фильтр;
Перем ОшибкиПриИмпорте;  									//--- УМК Сандомирский В.Ю. (*)
Перем спОшибки; 											//--- УМК Сандомирский В.Ю. (*)

Перем ТЗ_Результирующая, ТЗ_РезультирующаяКн;				//--- УМК Сандомирский В.Ю. (23.06.15)
Перем Язык;

Перем ПодборТаблицы;
Перем ТекСтрокаВТаблицеМФ; // текущая строка в таблице значений  МФ 

// ===============================
Функция УстДоступность() 
	Возврат "";
КонецФункции

// ===============================
Процедура ИзмДатаДок()

	глПриИзмененииДатыДокумента(Контекст, СтараяДата);

КонецПроцедуры
                                
// =============================== УМК Сандомирский В.Ю. (*)
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда
	
		Если ПустоеЗначение(Контрагент.КатегорияЦен.Получить(ДатаДок)) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
		Иначе	
			КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		КонецЕсли;      						
		
		Регион = Контрагент.Регион;		
		
	КонецЕсли;   
	
	Маршрут = глВернутьМаршрут(Контрагент);
		
КонецПроцедуры

// =============================== УМК Сандомирский В.Ю. (*)
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			ПодборТаблицы = 1;
			глПодбор(Контекст,"ТМЦ","ДляПодбораЗаказ");  		//--- УМК Сандомирский В.Ю. (14.11.14)
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора");
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// =============================== УМК Сандомирский В.Ю. (*)
Процедура ИзмКво()
	глВыч_Суммы_Накл(Контекст);
КонецПроцедуры

// =============================== УМК Сандомирский В.Ю. (*)

// =============================== УМК Сандомирский В.Ю. (*)
Процедура ОбработкаПодбора(Значение) //Предопределенная процедура
	
	Если ПодборТаблицы = 1 Тогда
	
		глПриОбработкеПодбораЗаказа(Значение,Контекст);
		ПодборТаблицы = 0;
	
	КонецЕсли;
	
	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры //Обработка подбора

// =============================== УМК Сандомирский В.Ю. (*)
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = ТМЦ.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;  
	
КонецПроцедуры //ПересчетСтроки

// =============================== УМК Сандомирский В.Ю. (*) (*) пересчет цен при изменении какого либо реквизита шапкки (ДатаДок, Контрагент, ТипЦен)
// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
Процедура ИзмРеквизитШапки(Реквизит, ИмяРекв = "")           
	
	Если (Реквизит = "Контрагент") ИЛИ (Реквизит = "ДатаДок") Тогда //--- УМК Сандомирский В.Ю. (13.02.15) 
		ИзмКонтрагент();
	КонецЕсли;
	
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	
	//текОтвет = Вопрос("В документе изменен реквизит """+?(ИмяРекв = "", Реквизит, ИмяРекв)+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глПриИзмененииТовара(Контекст, 1);
	КонецЦикла;	
КонецПроцедуры 
          
//====================================================================== УМК Сандомирский В.Ю. (*)
Процедура СортироватьТабличнуюЧасть()
	
	Тз_Сортировка = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(Тз_Сортировка);
	Тз_Сортировка.НоваяКолонка("ГруппаТМЦ");
	Тз_Сортировка.НоваяКолонка("ТМЦНаименование");
	Тз_Сортировка.ВыбратьСтроки();
	Пока Тз_Сортировка.ПолучитьСтроку() = 1 Цикл
		Тз_Сортировка.ГруппаТМЦ 		= Тз_Сортировка.ТМЦ.Родитель.Наименование;
		Тз_Сортировка.ТМЦНаименование 	= Тз_Сортировка.ТМЦ.Наименование;
		Если ПустоеЗначение(Тз_Сортировка.ВидУпаковки) = 1 Тогда
			Тз_Сортировка.ВидУпаковки = НетУп;
		КонецЕсли;
	КонецЦикла;
	
	Тз_Сортировка.Сортировать("ГруппаТМЦ+,ТМЦ+,ВидУпаковки-");  //--- УМК Сандомирский В.Ю. (08.11.14)
	
	УдалитьСтроки();
	
	ЗагрузитьТабличнуюЧасть(Тз_Сортировка);
	
КонецПроцедуры // СортироватьТабличнуюЧасть

//====================================================================== УМК Сандомирский В.Ю. (*)
Процедура ПечатьНаСклад()
	//--- УМК Сандомирский В.Ю. (08.11.14)
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");	
	Таб.ИсходнаяТаблица("НаСклад"); 
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,ВидУпаковки,Ед,Кво,ПримечаниеСтроки");		
	
	ТаблТМЦ.Свернуть("ТМЦ,ВидУпаковки,Ед,ПримечаниеСтроки","Кво");
	глСортироватьТаблицуПоСкладу(ТаблТМЦ, Контекст, 1);
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = ?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);
	ПечВремяЗаказа = "" + ВремяЗаказа + ":00";
	ПримечаниеКонстанта = Константа.УМК_ТекстЗаказНаСклад.Получить(ДатаДок);
	Таб.ВывестиСекцию("Шапка");
	Таб.ПовторятьПриПечатиСтроки(10, 10);    
	ТаблТМЦ.ВыбратьСтроки();

	ТекСклад = ""; ТекФормаУпаковки = ""; ПерваяСтраница = 1; ПервыйВакуум = 1;
	РазделятьПоСтраницам = ?((ТаблТМЦ.КоличествоСтрок() > 16), 1, 0);
	ИтогПечКг = 0;
	ТекГруппа = "";
	Пока ТаблТМЦ.ПолучитьСтроку() = 1 Цикл
		Если (ТекСклад <> ТаблТМЦ.СкладСорт) ИЛИ (ТекФормаУпаковки <> ТаблТМЦ.ФормаУпаковки) Тогда
			Если (РазделятьПоСтраницам = 1) И (ПерваяСтраница = 0) И (ПервыйВакуум = 1) Тогда
				Таб.НоваяСтраница();					
			КонецЕсли;
			Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 0) И (ТаблТМЦ.ВидУпаковки <> НетУп) И (ПустоеЗначение(ТаблТМЦ.СкладСорт) = 1) Тогда					
				ПервыйВакуум = 0;
			КонецЕсли;
			ПерваяСтраница = 0;
			Таб.ВывестиСекцию("РазрывСклад");
			ТекСклад = ТаблТМЦ.СкладСорт;
			ТекФормаУпаковки = ТаблТМЦ.ФормаУпаковки;
		КонецЕсли;
		  
		Если ТекГруппа <> ТаблТМЦ.ТМЦ.Родитель Тогда
			Таб.ВывестиСекцию("РазрывГруппы");
			 ТекГруппа = ТаблТМЦ.ТМЦ.Родитель;
		КонецЕсли;
		
		ПечУпаковка = ""; 							//---УМК Сандомирский В.Ю. (11.11.14)
		Если ТаблТМЦ.ВидУпаковки.Код <> "0" Тогда   //---УМК Сандомирский В.Ю. (11.11.14)
			ПечУпаковка = ТаблТМЦ.ВидУпаковки;
		КонецЕсли;
		
		ПечШтуки 	= "";
		ПечКг = ТаблТМЦ.Кво;	
		
		ИтогПечКг = ИтогПечКг + ПечКг;
		
		ПечКг 		= ?(ПечКг > 0,Формат(ПечКг,"Ч12.1"),"");
		
		//--- Определим задана ли основная упаковка и если задана //--- УМК Сандомирский В.Ю. (02.12.14)
		Серый = "";
		Если (ТаблТМЦ.ВидУпаковки = НетУп) ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1 ) Тогда 
			//--- Пропускаем без упаковка
		Иначе
			Если ПустоеЗначение(ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию) <> 1 Тогда
				Если ТаблТМЦ.ВидУпаковки <> ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию Тогда		
					Серый = "Серый";				
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		
		Таб.ВывестиСекцию("Строка"+ Серый);			
		//... УМК Сандомирский В.Ю. (02.12.14)
	КонецЦикла;

	ИтогПечКг 		= ?(ИтогПечКг > 0,Формат(ИтогПечКг,"Ч12.1"),"");
	
	Таб.ВывестиСекцию("Дно");	
	
	Таб.ПовторятьПриПечатиСтроки(1,9);
	
	Таб.ПараметрыСтраницы(1,,,5,5,5,5,4,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Ориентировочный заказ","");

	ПриЗаписиПерепроводить(0);
	Распечатана = 1;
	Записать();
	ПриЗаписиПерепроводить(1);		
КонецПроцедуры // 

//====================================================================== УМК Сандомирский В.Ю. (*)
Процедура ПечатьНаЭкспедицию()

	//--- УМК Сандомирский В.Ю. (08.11.14)
	ПриЗаписиПерепроводить(0);
	Распечатана = 1;
	Записать();
	ПриЗаписиПерепроводить(1);	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");	
	Таб.ИсходнаяТаблица("НаЭкспедицию"); 
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,ВидУпаковки,Ед,Кво,ПримечаниеСтроки");	
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = ?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);
	ПечВремяЗаказа = "" + ВремяЗаказа + ":00";
	ПримечаниеКонстанта = Константа.УМК_ТекстЗаказНаСклад.Получить(ДатаДок);
	Таб.ВывестиСекцию("Шапка");
	Таб.ПовторятьПриПечатиСтроки(10, 10);    
	ТаблТМЦ.ВыбратьСтроки();

	ИтогПечКг = 0;
	ТекГруппа = "";
	Пока ТаблТМЦ.ПолучитьСтроку() = 1 Цикл
		  
		Если ТекГруппа <> ТаблТМЦ.ТМЦ.Родитель Тогда
			Таб.ВывестиСекцию("РазрывГруппы");
			 ТекГруппа = ТаблТМЦ.ТМЦ.Родитель;
		КонецЕсли;
		
		ПечУпаковка = ""; 							//---УМК Сандомирский В.Ю. (11.11.14)
		Если ТаблТМЦ.ВидУпаковки.Код <> "0" Тогда   //---УМК Сандомирский В.Ю. (11.11.14)
			ПечУпаковка = ТаблТМЦ.ВидУпаковки;
		КонецЕсли;
		
		ПечШтуки 	= "";		
		ПечКг = ТаблТМЦ.Кво;			
		Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп)  Тогда
		Иначе	
			РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
			Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
				
				ТекВес = ?(РазрешенныйВидУпаковкиТМЦ.ВесУпаковки=0,1,РазрешенныйВидУпаковкиТМЦ.ВесУпаковки.Получить(ДатаДок));
				
				ПечШтуки = Формат(ТаблТМЦ.Кво / ТекВес,"Ч12.0");
				ПечШтуки = СокрЛП(ПечШтуки) + " уп";				
			КонецЕсли;	
		КонецЕсли;
		
		Если (ТаблТМЦ.ВидУпаковки = НетУп) ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) Тогда
			//--- этто без упаковки
		Иначе
		КонецЕсли;
			
		ИтогПечКг = ИтогПечКг + ПечКг;		
		ПечКг 		= ?(ПечКг > 0,Формат(ПечКг,"Ч12.1"),"");
		
		//--- Определим задана ли основная упаковка и если задана //--- УМК Сандомирский В.Ю. (02.12.14)
		Серый = "";
		Если (ТаблТМЦ.ВидУпаковки = НетУп) ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1 ) Тогда 
			//--- Пропускаем без упаковка
		Иначе
			
			//--- УМК Сандомирский В.Ю. (27.05.15) основной вид упаковки теперь реквизит разрешенного вида упаковки			
			//Серый = "Серый";
			//РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
			//Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
			//	Если РазрешенныйВидУпаковкиТМЦ.ОсновнаяУпаковка = 1 Тогда
			//		Серый = "";				
			//	КонецЕсли
			//КонецЕсли;
			
			//--- УМК Сандомирский В.Ю. (27.05.15) было
			Если ПустоеЗначение(ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию) <> 1 Тогда
				Если ТаблТМЦ.ВидУпаковки <> ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию Тогда		
					Серый = "Серый";				
				КонецЕсли;	
			КонецЕсли;
			//... УМК Сандомирский В.Ю. (27.05.15) было
			
		КонецЕсли;
		
		Таб.ВывестиСекцию("Строка"+ Серый);			
		//... УМК Сандомирский В.Ю. (02.12.14)		
	КонецЦикла;

	ИтогПечКг 		= ?(ИтогПечКг > 0,Формат(ИтогПечКг,"Ч12.1"),"");
	
	Таб.ВывестиСекцию("Дно");	
	
	Таб.ПовторятьПриПечатиСтроки(1,9);
	
	Таб.ПараметрыСтраницы(1,,,5,5,5,5,4,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: НА ЭКСПЕДИЦИЮ","");
		
КонецПроцедуры // 

//====================================================================== УМК Сандомирский В.Ю. (*)
Процедура ПечатьНаВакуум()

	//--- УМК Сандомирский В.Ю. (08.11.14)
	ПриЗаписиПерепроводить(0);
	Распечатана = 1;
	Записать();
	ПриЗаписиПерепроводить(1);	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");	
	Таб.ИсходнаяТаблица("НаВакуум"); 
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,ВидУпаковки,Ед,Кво,ПримечаниеСтроки");	
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = ?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);
	ПечВремяЗаказа = "" + ВремяЗаказа + ":00";
	ПримечаниеКонстанта = Константа.УМК_ТекстЗаказНаСклад.Получить(ДатаДок);
	  
	//--- Считаю вакуумные позиции
	ВакуумныхПозиций = 0;
	ТаблТМЦ.ВыбратьСтроки();
	Пока ТаблТМЦ.ПолучитьСтроку() = 1 Цикл
		
		Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп) Тогда
			Продолжить;
		КонецЕсли;
	
		ВакуумныхПозиций = 1;
		
	КонецЦикла;	
	
	Если ВакуумныхПозиций = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Таб.ВывестиСекцию("ШапкаВакуум");
	Таб.ПовторятьПриПечатиСтроки(10, 10);  
	
	ТаблТМЦ.ВыбратьСтроки();

	ИтогПечКг = 0;
	ТекГруппа = "";
	Пока ТаблТМЦ.ПолучитьСтроку() = 1 Цикл
		
		Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп) Тогда
			Продолжить;
		КонецЕсли;
		
		  
		Если ТекГруппа <> ТаблТМЦ.ТМЦ.Родитель Тогда
			Таб.ВывестиСекцию("РазрывГруппы");
			 ТекГруппа = ТаблТМЦ.ТМЦ.Родитель;
		КонецЕсли;
		
		ПечУпаковка = ""; 							//---УМК Сандомирский В.Ю. (11.11.14)
		Если ТаблТМЦ.ВидУпаковки.Код <> "0" Тогда   //---УМК Сандомирский В.Ю. (11.11.14)
			ПечУпаковка = ТаблТМЦ.ВидУпаковки;
		КонецЕсли;
		
		ПечШтуки 	= "";
		
		ПечКг = ТаблТМЦ.Кво;			
		Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп)  Тогда			
			Попытка
				ПечШтуки = Формат(ТаблТМЦ.Кво / ТаблТМЦ.ТМЦ.Вес,"Ч12.0");
			Исключение
			КонецПопытки;				
		Иначе	
			РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
			Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
				
				ТекВес = ?(РазрешенныйВидУпаковкиТМЦ.ВесУпаковки=0,1,РазрешенныйВидУпаковкиТМЦ.ВесУпаковки.Получить(ДатаДок));
				ПечШтуки = Формат(ТаблТМЦ.Кво / ТекВес,"Ч12.0");
				ПечШтуки = СокрЛП(ПечШтуки) + " уп";
			КонецЕсли;				
		КонецЕсли;				
		
		Если (ТаблТМЦ.ВидУпаковки = НетУп) ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) Тогда
			//--- этто без упаковки
		Иначе
		КонецЕсли;
		
		
		ИтогПечКг = ИтогПечКг + ПечКг;
		
		ПечКг 		= ?(ПечКг > 0,Формат(ПечКг,"Ч12.1"),"");
		
		//--- Определим задана ли основная упаковка и если задана //--- УМК Сандомирский В.Ю. (02.12.14)
		Серый = "";
		Если (ТаблТМЦ.ВидУпаковки = НетУп) ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1 ) Тогда 
			//--- Пропускаем без упаковка
		Иначе
			
			//--- УМК Сандомирский В.Ю. (27.05.15) основной вид упаковки теперь реквизит разрешенного вида упаковки			
			//Серый = "Серый";
			//РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
			//Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
			//	Если РазрешенныйВидУпаковкиТМЦ.ОсновнаяУпаковка = 1 Тогда
			//		Серый = "";				
			//	КонецЕсли
			//КонецЕсли;
			
			//--- УМК Сандомирский В.Ю. (27.05.15) было
			Если ПустоеЗначение(ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию) <> 1 Тогда
				Если ТаблТМЦ.ВидУпаковки <> ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию Тогда		
					Серый = "Серый";				
				КонецЕсли;	
			КонецЕсли;
			//... УМК Сандомирский В.Ю. (27.05.15) было
			
		КонецЕсли;
		
		Таб.ВывестиСекцию("СтрокаВакуум"+ Серый);			
		//... УМК Сандомирский В.Ю. (02.12.14)		
	КонецЦикла;

	ИтогПечКг 		= ?(ИтогПечКг > 0,Формат(ИтогПечКг,"Ч12.1"),"");
	
	Таб.ВывестиСекцию("Дно");	
	
	Таб.ПовторятьПриПечатиСтроки(1,9);
	
	Таб.ПараметрыСтраницы(1,,,5,5,5,5,4,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: НА ВАКУУМ","");
		
КонецПроцедуры // 

// ===============================
Процедура Печать(БыстраяПечать=0) 
	
	Перем ВыбЗначение;
	
	Попытка
		СортироватьТабличнуюЧасть();
	Исключение
		//--- Документ окрыт для просмотра
	КонецПопытки;
	
	
	Если НазваниеНабораПрав() = "Заказ" Тогда						//--- УМК Сандомирский В.Ю, РОЛИ "ЗАКАЗ" нельзя печатать непроведенные документы (13.06.14) тут с (12.11.14)
		Если (ТекущийДокумент().Проведен() = 0) Тогда
			Предупреждение("Нельзя печатать не проведенные ЗАКАЗЫ");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПечатьНаСклад();  //--- УМК Сандомирский В.Ю. (05.06.15) срочно возвращаемся на старый
	
	Попытка			
		ПриЗаписиПерепроводить(0);
		фРаспечатан = 1;
		
		ВыбратьСтроки();					//--- УМК Сандомирский В.Ю, (09.02.15) 
		Пока ПолучитьСтроку() = 1 Цикл
			фБылНапечатан = 1;				
		КонецЦикла;
		
		Записать();
		ПриЗаписиПерепроводить(1);		
	Исключение
	КонецПопытки;	
	
	Если НазваниеНабораПрав() = "Заказ" Тогда //--- УМК Сандомирский В.Ю, (26.12.14)		
		Форма.ТолькоПросмотр(1);
		Форма.кИмпортExcel.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кДействия.Доступность(0);	
	КонецЕсли;
КонецПроцедуры

//====================================================================== // --- УМК Сандомирский В.Ю. (*) Водитель Автомобиль и кн ОК
Процедура ЗакрываемВсеРеквизитыКроме()  
        //ЗАПОМИНАЕМ СОСТОЯНИЕ ДОСТУПНОСТИ ПРИ ТОЛЬКОПРОСМОТР(1)
 
    ТЗ_Рекв=СоздатьОбъект("ТаблицаЗначений"); 
    ТЗ_Рекв.НоваяКолонка("Реквизит");
    ТЗ_Рекв.НоваяКолонка("ИмяРекв");
    ТЗ_Рекв.НоваяКолонка("Доступность");
    рф = СоздатьОбъект("РасширениеФормы"); 
    рф.УстановитьФорму(Форма);
    Для Сч=0 По рф.КоличествоАтрибутов() - 1 Цикл
        Рекв=рф.ПолучитьАтрибут(Сч);
        ТЗ_Рекв.НоваяСтрока();
        ТЗ_Рекв.Реквизит=Рекв;
        ТЗ_Рекв.ИмяРекв=Рекв.Идентификатор;
        ТЗ_Рекв.Доступность=Рекв.Доступность;
    КонецЦикла;     
  
 
    ТЗ_Рекв.ВыбратьСтроки();
    Пока ТЗ_Рекв.ПолучитьСтроку()=1 Цикл
        Рекв=ТЗ_Рекв.Реквизит;
        Рекв.Доступность=ТЗ_Рекв.Доступность;
		Если (Рекв.Идентификатор = "Водитель") 
			ИЛИ (Рекв.Идентификатор = "Водитель") 
			ИЛИ (Рекв.Идентификатор = "Автомобиль") 
			ИЛИ (Рекв.Идентификатор = "кОК") 
			
							Тогда
								
       		Рекв.Доступность=1;    
	   	Иначе
	   		Рекв.Доступность=0;   
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()	
	Если (НазваниеНабораПрав() <> "Технолог") Тогда  //--- УМК Сандомирский В.Ю. (09.04.15) 
		Автор = глПользователь;
	КонецЕсли;
	
	СуръезнаяОшибко = 0;	
	СортироватьТабличнуюЧасть();	
	ТЗ_ПериодыСтрокой = ЗначениеВСтрокуВнутр(ТЗ_Периоды);
	ТаблицаМФСтрокой  = ЗначениеВСтрокуВнутр(ТаблицаМФ);
	СписокЭлементовМФСтрокой = СписокЭлементовМФ.ВСтрокуСРазделителями();
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		СтрокаПоиска = ТМЦ.Код + "/" + Строка(ВидУпаковки.Код) + "/" + Сред(Заказ.НомерДок,4) + Прав(Строка(ДатаГод(ДатаДок)), 2);
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
		
	Если (Рекв = "ВидУпаковки") Тогда //--- УМК Сандомирский В.Ю, (06.11.14) 	
		
		ФлагСтандОбр = 0;
		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаГрупУпаковок) <> 1) 
				И (Константа.УМК_ДатаНачалаГрупУпаковок <= ДатаДок)  Тогда 
						
			// --- Строю локальный , разрешенный список для конкретного элемента
			ТекРазрешенныеВидыУпаковки = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
			СпВидыУпаковкиЛокальный = СоздатьОбъект("СписокЗначений");
			ТекРазрешенныеВидыУпаковки.ИспользоватьВладельца(ТМЦ.ТекущийЭлемент());
			ТекРазрешенныеВидыУпаковки.ВыбратьЭлементы();
			Пока ТекРазрешенныеВидыУпаковки.ПолучитьЭлемент() = 1 Цикл
				Если ТекРазрешенныеВидыУпаковки.ПометкаУдаления() = 1 Тогда
					Продолжить;
				КонецЕсли;
				
				Если ТекРазрешенныеВидыУпаковки.ВидУпаковки.Активна <> Перечисление.ДаНет.Да Тогда //--- пропускаем не активные
					Продолжить;
				КонецЕсли;
					
				СпВидыУпаковкиЛокальный.ДобавитьЗначение(ТекРазрешенныеВидыУпаковки.ТекущийЭлемент().ВидУпаковки);	// --- из подчиненного справочника	 
			КонецЦикла;
			
			Если ТМЦ.НетБезУпаковки = 0 Тогда  						// --- УМК Сандомирский В.Ю. (10.11.14)
				СпВидыУпаковкиЛокальный.ДобавитьЗначение(НетУп);
			КонецЕсли;
			
			СтрВидУпаковки = "";
			Если СпВидыУпаковкиЛокальный.ВыбратьЗначение(СтрВидУпаковки,,,,2) = 1 Тогда
			    ВидУпаковки = СтрВидУпаковки;
			КонецЕсли;			
			
		Иначе 	
				
			СтрВидУпаковки = "";
			Если СпВидыУпаковкиГлобальный.ВыбратьЗначение(СтрВидУпаковки,,,,2) = 1 Тогда
			    ВидУпаковки = СтрВидУпаковки;
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли;
	
	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (*)
Процедура ИзмТМЦ()
	глПриИзмененииТовара(Контекст, 1);
	
	Если (ТМЦ.НетБезУпаковки = 1) И ((ПустоеЗначение(ВидУпаковки) = 1) ИЛИ (ВидУпаковки = НетУп)) Тогда // --- УМК Сандомирский В.Ю. (11.06.15)
		ВидУпаковки = ТМЦ.ВидУпаковкиПоУмолчанию;
	КонецЕсли;	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (*)
Процедура ИзмВидУпаковки()
	глПриИзмененииТовара(Контекст, 1);	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (*)
Функция ИтКол()	
	//Возврат "Итог кг :" + ( Итог("Кво") +  Итог("КвоПересчет") ) + "    Итог сумма:" + Итог("СуммаБезНДС") + "   Итог С НДС : " + Итог("СуммаСНДС");
	Возврат "Итог кг :" + Итог("Кво") + "    Итог сумма:" + Итог("СуммаБезНДС") + "   Итог С НДС : " + Итог("СуммаСНДС");	
КонецФункции // ИтКол()

//====================================================================== УМК Сандомирский В.Ю. (*)
Процедура ЗаполнитьПоУмолчанию()
	
	глУстановитьФирму(Контекст);
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад",Константа.ОсновнойСклад);  
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
	ИзмКонтрагент();
	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ВводНового(ПризнакКопирования)
	Распечатана = 0;
	Если ПризнакКопирования = 1 Тогда  
		фРаспечатан = 0; //--- УМК Сандомирский В.Ю. (28.12.14)
		Распечатана = 0; //--- УМК Сандомирский В.Ю. (28.12.14)
		глУстановитьНомер(Контекст);	
		ДатаУКШ = ДатаДок;
		глИзмДатаУКШ(Контекст);
		Возврат;		
	КонецЕсли;
	
	ЗаполнитьПоУмолчанию();	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (17.11.14) 
Процедура СоздатьНовуюСтроку(ТекТМЦ,ТекКоментСтроки="",ТекКг,ТекШт,ТекУпаковка = "") //--- ТекТМЦ = Код ТМЦ, ТекУпаковка = Код ВидУпаковки 
	//--- Ищем Товар 
	Если СпрТМЦ.НайтиПоКоду(ТекТМЦ,0) = 1 Тогда		
		ТекСтрока = "";
		ТекКолонка   = "";
		Если ТЗ_Фильтр.НайтиЗначение(СпрТМЦ.ТекущийЭлемент(),ТекСтрока,ТекКолонка) = 0 Тогда  //--- УМК Сандомирский В.Ю. (19.11.14)  ищем по фильтру
			Сообщить(" " + ТекИмяФайла + " Товар " + СпрТМЦ + " - не производится !","!");
			Возврат;
		КонецЕсли;
			
		//--- ищем у товара нужную упаковку 
		
		ТекВидУпаковки = "";
		
		Если ТекУпаковка <> "0" Тогда //--- пропускаем без упаковки 
			Если СпрВидУпаковки.НайтиПоКоду(ТекУпаковка) = 1 Тогда	
				СпрРазрешенныеУпаковкиТМЦ.ИспользоватьВладельца(СпрТМЦ.ТекущийЭлемент());
				Если СпрРазрешенныеУпаковкиТМЦ.НайтиПоРеквизиту("ВидУпаковки",СпрВидУпаковки,0) = 1  Тогда					
					ТекВидУпаковки = СпрВидУпаковки.ТекущийЭлемент();
					
					Если СпрРазрешенныеУпаковкиТМЦ.ПометкаУдаления() = 1 Тогда
						Сообщить(" " + ТекИмяФайла + " Товар " + СпрТМЦ + " в упаковке " + СпрВидУпаковки +  " - не производится !","!");
						Возврат;
					КонецЕсли;				
				Иначе					
					Сообщить(" " + ТекИмяФайла + " Товар " + СпрТМЦ + " в упаковке " + СпрВидУпаковки +  " - не производится !","!");
					Возврат;					
				КонецЕсли;
			КонецЕсли;			
		ИначеЕсли ТекУпаковка = "0" Тогда // --- УМК Сандомирский В.Ю. (11.06.15) проверка на когда старый бланк а товар уже без упаковки не отпускается			
			Если СпрТМЦ.НетБезУпаковки = 1 Тогда
				Сообщить(" " + ТекИмяФайла + " Товар " + СпрТМЦ + " БЕЗ Упаковки - не производится !","!");
				Возврат;
			КонецЕсли;			
		КонецЕсли;	
		
		НоваяСтрока();
		ТМЦ = СпрТМЦ.ТекущийЭлемент();
		ПримечаниеСтроки 	= ТекКоментСтроки;
		ВидУпаковки			= ТекВидУпаковки;
		Кво 	= ТекКг;
		КвоШт 	= ТекШт;
		
		глПриИзмененииТовара(Контекст, 1);	
	ИначеЕсли ТекТМЦ = "НоваяПродукция" Тогда			
		НоваяСтрока();
		ПримечаниеСтроки = ТекКоментСтроки;
		Кво 	= ТекКг;
		КвоШт 	= ТекШт;		
	КонецЕсли;
	
	глВыч_Суммы_Накл(Контекст); //--- УМК Сандомирский В.Ю. (09.12.14) 	
КонецПроцедуры // СоздатьНовуюСтроку()

//====================================================================== //--- УМК Сандомирский В.Ю. (17.11.14)
Функция ПолучитьДробноеЧисло(ТекСтрока) //--- преобразует точки лили запятые к нормальному формату
	ТекСтрока = Число(СокрЛП(СтрЗаменить(ТекСтрока,",",".")));
	Возврат ТекСтрока;
КонецФункции // 

//====================================================================== //--- УМК Сандомирский В.Ю. (17.11.14)
Функция ПроверкаНеЦифр(ТекСтрока,ТекФормат)	
	ВсеНеХорошо = 0;
	ТекСтрока = СокрЛП(СтрЗаменить(ТекСтрока,",","."));  //--- УМК Сандомирский В.Ю. (15.11.14)
	Если СтрДлина(ТекСтрока) > 0 Тогда
		Если Число(ТекСтрока) = 0 Тогда
			ВсеНеХорошо = 1;
		КонецЕсли;	
	КонецЕсли;
	
	Возврат ВсеНеХорошо;	
КонецФункции // ПроверкаНеЦифр(Килограммы)ПроверкаНеЦифр(Килограммы)

//====================================================================== //--- УМК Сандомирский В.Ю. (19.11.14)
Процедура ЗаполнитьФильтрТМЦ()
	//--- читаю из файла в список - фильтр
	СписокВыбТМЦ = СоздатьОбъект("СписокЗначений");		
	СпрТМЦ1 = СоздатьОбъект("Справочник.ТМЦ");	
	НазваниеФайла1= "" + КаталогИБ() + "filter_set1.txt";
	ОбъектФайла1=СоздатьОбъект("Scripting.FileSystemObject");
	Файле1 = ОбъектФайла1.OpenTextFile(НазваниеФайла1);
	Пока Файле1.atendofstream=0 цикл	
		Код = СокрЛП(Файле1.readline());     
		Если СпрТМЦ1.НайтиПоКоду(Код,0) = 1 Тогда
			СписокВыбТМЦ.ДобавитьЗначение(СпрТМЦ1.ТекущийЭлемент(),СпрТМЦ1.Наименование);
		КонецЕсли;	
	КонецЦикла;
	Файле1.close(); 
	
	//--- читаю из файла в список - фильтр	
	СписокВыбТМЦИсключение = СоздатьОбъект("СписокЗначений");		
	СпрТМЦ2 = СоздатьОбъект("Справочник.ТМЦ");	
	НазваниеФайла2= "" + КаталогИБ() + "filter_set2.txt";
	//ОбъектФайла=СоздатьОбъект("Scripting.FileSystemObject");
	ОбъектФайла2=СоздатьОбъект("Scripting.FileSystemObject");
	Файле2 = ОбъектФайла2.OpenTextFile(НазваниеФайла2);
	Пока Файле2.atendofstream=0 цикл	
		Код = СокрЛП(Файле2.readline());     
		Если СпрТМЦ2.НайтиПоКоду(Код,0) = 1 Тогда
			СписокВыбТМЦИсключение.ДобавитьЗначение(СпрТМЦ2.ТекущийЭлемент(),СпрТМЦ2.Наименование);
		КонецЕсли;	
	КонецЦикла;
	Файле2.close(); 
	
	ТЗ_Фильтр = СоздатьОбъект("ТаблицаЗначений");
	
	Запрос = СоздатьОбъект("Запрос");
	ДатаЗапроса = РабочаяДата();
	ТекстЗапроса = 
	"//{{ЗАПРОС(СпрТМЦ)
	|Период с ДатаЗапроса по ДатаЗапроса;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Без итогов;
	|Товар 					= Справочник.ТМЦ.ТекущийЭлемент;
	|Группировка Товар Без Групп;
	|Условие(Товар в СписокВыбТМЦ);
	|";
	Если СписокВыбТМЦИсключение.РазмерСписка() > 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие (НЕ (Товар в СписокВыбТМЦИсключение));
		|
		|";	
	КонецЕсли;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Выгрузить(ТЗ_Фильтр);	
КонецПроцедуры // ЗаполнитьФильтрТМЦ

//====================================================================== //--- УМК Сандомирский В.Ю. (17.11.14)
Процедура ИмпортИзExcel()
	Перем Кат, НачальныйКаталог;

	СпрТМЦ 						= СоздатьОбъект("Справочник.ТМЦ");	
	СпрРазрешенныеУпаковкиТМЦ 	= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
	СпрВидУпаковки 				= СоздатьОбъект("Справочник.ВидыУпаковки");
	
   	Попытка 
        xl=СоздатьОбъект("Excel.Application");
    Исключение       
        Предупреждение("MS Excel не загружен !");
		Возврат;
	КонецПопытки;
	
	Книга=xl.Workbooks; 
	
	НачальныйКаталог = ""; //НачальныйКаталог = "c:\network\";
	
	Если ФС.ВыбратьФайл(0,Кат,НачальныйКаталог,"Выбери файл Еxcel",,"*.xls",)=1 Тогда   
		
		ОшибкиПриИмпорте = 1; // --- Excel если вылетит тот так и останется
		
		УдалитьСтроки();
		
		ЗаполнитьФильтрТМЦ(); // --- УМК Сандомирский В.Ю, (19.11.14)
		
		ТекИмяФайла = СокрЛП(Кат);
		
        Книга.Open(НачальныйКаталог+Кат); 
		xl.Visible = 1;   //--- видмость окна ексель 1- видимость 0 - нет
	    Лист = xl.Worksheets(1); 
		Лист.Activate();
     	//данные
	 	Лист.UnProtect("123");
    	 	
	 	Высота=Лист.Rows.Count;
     	Ширина=Лист.Columns.Count;
		
	 	ПрерватьЦиклы = "";
	 	
	 	НовыйБланк = 1;	//--- УМК Сандомирский В.Ю. (10.11.14)	
	 	Если ПустоеЗначение(Константа.УМК_ДатаНачалаГрупУпаковок) <> 1 Тогда 
	 		ДатаБланка			= Дата(Прав(СокрЛП(Лист.Cells(1,16).Value),8));
	 		
	 		Если ПустоеЗначение(ДатаБланка) = 1 Тогда
	 			НовыйБланк = -1;
	 			Сообщить("" + ТекИмяФайла + " Старый бланк, импорт не выполнен !");
	 		ИначеЕсли  ДатаБланка < Константа.УМК_ДатаФормированияБланкаЗаказа Тогда
		 		//Сообщить("Бланк от !!!" + ДатаБланка + " существует более новый - " + Константа.УМК_ДатаФормированияБланкаЗаказа + "");
		 		НовыйБланк = 0;
		 	КонецЕсли;	
		 	
	 	КонецЕсли; //--- УМК Сандомирский В.Ю. (10.11.14)	
	 	
	 	Если НовыйБланк = -1 Тогда //--- т.е. старый бланк
	 		 		
	 	Иначе
	 	 	
	 		БылиМатюки = 0;
	 		
		 	ДатаExcel		= СокрЛП(Лист.Cells(1,8).Value);
		  	ВремяExcel		= СокрЛП(Лист.Cells(1,12).Value);  //----- глючит разобратьсяс форматом
		 	ВремяЗаказа 	= ВремяExcel;
		 	КлиентExcel 	= СокрЛП(Лист.Cells(2,8).Value);
		 	ФормаExcel 		= СокрЛП(Лист.Cells(3,8).Value);
		 	перФорма = Число(ФормаExcel);
		 	
		 	Если перФорма = 0 Тогда
				перФорма = 2;
			ИначеЕсли  перФорма = 1 Тогда
				Ф1 = 1;
			КонецЕсли;
			
		 	ТорговыйExcel	= СокрЛП(Лист.Cells(4,8).Value);
		 	ПримечаниеExcel	= СокрЛП(Лист.Cells(5,8).Value);
		 	Примечание = СокрЛП(ПримечаниеExcel);
		 	
		 	ВесЗаказаExcel = "";	
		 	
		 	Если спОшибки.НайтиЗначение(СокрЛП(Лист.Cells(15,6).Text)) <> 0 Тогда  //--- УМК Сандомирский В.Ю. (12.12.14)
		 		Сообщить("" + ТекИмяФайла + " ОШИБКА в формуле определения веса заказа !!! , возможно в ячейках не цифры ","!!!");
		 		БылиМатюки = 1;
		 	Иначе	
		 		ВесЗаказаExcel  = Формат(Число(Лист.Cells(15,6).Value),"Ч12.2"); //--- УМК Сандомирский В.Ю. (09.12.14) (10.12.14)
		 	КонецЕсли;
		 	
		 	ТекСтрокаExcel   = 6;
		 	ТекСтрокаТаблицы = 0;
		 	
		 	Для ТекСтрока = 1 По Высота Цикл
		 		
		 		ТекСтрокаExcel   = ТекСтрокаExcel + 1;
		 		//ТекСтрокаТаблицы = ТекСтрокаТаблицы + 1;
		 		
		 		Если ПрерватьЦиклы = "Да" Тогда
		 			Прервать;
		 		КонецЕсли;
		 		
		 		ТекКод=СокрЛП(Лист.Cells(ТекСтрокаExcel,1).Value);
		 		ТекНаименованиеExcel = СокрЛП(Лист.Cells(ТекСтрокаExcel,2).Value);
				Если ПустоеЗначение(ТекКод) <> 1 Тогда
					
					Если ТекКод = "Конец" Тогда
						ПрерватьЦиклы = "Да";
						Прервать;
					КонецЕсли;
			
					
					Если ТекКод = "НоваяПродукция" Тогда
													
						ЕстьСообщения = 0;
				
						КонтрольНаименование =  СокрЛП(Лист.Cells(ТекСтрокаExcel,2).Value);
						Если ПустоеЗначение(КонтрольНаименование) <> 1 Тогда
							ЕстьСообщения = 1;
							Сообщить("!!! ВНИМАНИЕ !!! файл " + ТекИмяФайла + " Новая продукция - " + КонтрольНаименование,"!!!");
							//БылиМатюки = 1;
							ТекстСообщения = "упаковка  ---  ";
							Для ТекК = 1 По 5 Цикл
								
								ТекУпак  		= СокрЛП(Лист.Cells(ТекСтрокаExcel,		7+ТекК).Value);	
								ТекКг  			= СокрЛП(Лист.Cells(ТекСтрокаExcel+2,	7+ТекК).Value);
								ТекШт  			= СокрЛП(Лист.Cells(ТекСтрокаExcel+3,	7+ТекК).Value);
								ТекПримечание 	= СокрЛП(Лист.Cells(ТекСтрокаExcel+4,	7+ТекК).Value);
								
								
								
								Если (ПустоеЗначение(ТекКг) <> 1) ИЛИ (ПустоеЗначение(ТекШт) <> 1) Тогда
									ТекКг = ПолучитьДробноеЧисло(ТекКг);
									ТекШт = ПолучитьДробноеЧисло(ТекШт);	
									СоздатьНовуюСтроку(ТекКод,КонтрольНаименование + " " + ТекПримечание,ТекКг,ТекШт,ТекУпак);	
								КонецЕсли;
								
							КонецЦикла;
												
						КонецЕсли;
	
					Иначе
															
								
						Область=Лист.Cells.CurrentRegion;
		     			Ширина=50;
			 				
			 			//--- заполнить килограммы
			 			Для ТекКолонка = 7 По Ширина Цикл
								 				
							Если ТекКолонка%2=0 Тогда //--- четная нечетная
							      
								//--- Четная значение
								
							Иначе	//--- нечетная код Вида упаковки	      
								
								КодУпаковкиExcel 			= СокрЛП(Лист.Cells(ТекСтрокаExcel,ТекКолонка).Value);
								НаименованиеУпаковкиExcel 	= СокрЛП(Лист.Cells(ТекСтрокаExcel,ТекКолонка+1).Value);
								ТекКилограммы 				= СокрЛП(Лист.Cells(ТекСтрокаExcel+2,ТекКолонка+1).Value);
								ТекШтуки 					= СокрЛП(Лист.Cells(ТекСтрокаExcel+3,ТекКолонка+1).Value);
								ТекПримечание				= СокрЛП(Лист.Cells(ТекСтрокаExcel+4,ТекКолонка+1).Value);
								
								ТекКгФорматЯчейки = Лист.Cells(ТекСтрокаExcel+2,ТекКолонка+1).NumberFormat; 
								ТекШтФорматЯчейки = Лист.Cells(ТекСтрокаExcel+3,ТекКолонка+1).NumberFormat; 
									
								Если ПроверкаНеЦифр(ТекКилограммы,ТекКгФорматЯчейки) = 1 Тогда
			 						Сообщить("" + ТекИмяФайла + " "+ ТекНаименованиеExcel + " " + ТекКилограммы + " в килограммах не цифры","!");
			 						ТекКилограммы = "";
			 						БылиМатюки = 1;
			 					КонецЕсли;
								Если ПроверкаНеЦифр(ТекШтуки,ТекШтФорматЯчейки) = 1 Тогда
			 						Сообщить("" + ТекИмяФайла + " "+ ТекНаименованиеExcel + " " + ТекШтуки + " в штуках не цифры","!");
			 						ТекШтуки = "";
			 						БылиМатюки = 1;
			 					КонецЕсли;
								
			 					ТекКилограммы = ПолучитьДробноеЧисло(ТекКилограммы);
			 					ТекШтуки	  = ПолучитьДробноеЧисло(ТекШтуки);
			 					
								Если (ТекКилограммы <> 0) Тогда //--- строка Килограммы
									ТекКг = ТекКилограммы;
									ТекШт = "";
									СоздатьНовуюСтроку(ТекКод,ТекПримечание,ТекКг,ТекШт,КодУпаковкиExcel);	
								КонецЕсли;
								
								Если (ТекШтуки <> 0) Тогда//--- строка Количество
									ТекШт = ТекШтуки;	
									ТекКг = "";
									СоздатьНовуюСтроку(ТекКод,ТекПримечание,ТекКг,ТекШт,КодУпаковкиExcel);	
								КонецЕсли;
													
							КонецЕсли;
					 				
						КонецЦикла;
						
					КонецЕсли;
						
				КонецЕсли;
		 									
		 	КонецЦикла;
		 		
		 	Лист.Protect("123");  //--- защита с паролем
		 	
	 	КонецЕсли;
	 	
	КонецЕсли;
	 
	Если БылиМатюки = 0 Тогда
		xl.DisplayAlerts = 0;
		xl.Workbooks.Close();
		xl.DisplayAlerts = 1;
		xl.Quit();
	КонецЕсли;
	
	Если ЕстьСообщения = 1 Тогда
		Предупреждение("!!!!!!!!!!!!!!ВНИМАНИЕ !!!!!!!!!!!!" + глПравильныйСимволПереноса + " Есть новые позиции в бланке для переноса вручную --- " + глПравильныйСимволПереноса + " в окне сообщений внизу ");
	КонецЕсли;
	
	Если Дата(СокрЛП(ДатаExcel)) < РабочаяДата() Тогда
		ВвестиДату(ДатаДок, "" + ДатаExcel + " не корректна, введите дату заказа !!!");
		БылиМатюки = 1;
	Иначе
		ДатаДок = Дата(СокрЛП(ДатаExcel));
	КонецЕсли;
	
	Если БылиМатюки = 0 Тогда
		Если Вопрос("Удалить Файл импорта ?", "Да+Нет") = "Да" Тогда
			ФС.УдалитьФайл(НачальныйКаталог+Кат);
		КонецЕсли;
	
	ИначеЕсли БылиМатюки = 1 Тогда
		
		Если НовыйБланк = 0 Тогда
			Сообщить("" + ТекИмяФайла + "Возможно у клиента старый Бланк - разошлите обновленный.");
		КонецЕсли;
		
	КонецЕсли;
	
	ОшибкиПриИмпорте = 0; //--- Фиксируем что ошибок Excel не было
	ПолученИзExcel = 1;
	
	СортироватьТабличнуюЧасть(); //--- УМК Сандомирский В.Ю. (19.11.14)
	
	Сообщить("Импорт завершен.");
	
 
КонецПроцедуры // ИмпортИзExcel

//====================================================================== УМК Сандомирский В.Ю. (10.11.14)
Функция ПолучитьЦвет(Красный = 0,Зеленый = 0,Синий = 0)
    
    Возврат Макс(0,Синий)*65536+Макс(0,Зеленый)*256+Макс(0,Красный);

КонецФункции

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

//======================================================================//--- УМК Сандомирский В.Ю. (09.04.15)
Процедура ПриВводеСтроки()	
	Если (НазваниеНабораПрав() = "Технолог") Тогда 
		СтатусВозврата(0);
		Возврат;	
	КонецЕсли;	
КонецПроцедуры

//======================================================================//--- УМК Сандомирский В.Ю. (09.04.15)
Процедура ПриУдаленииСтроки()
	Если (НазваниеНабораПрав() = "Технолог") Тогда 
		СтатусВозврата(0);
		Возврат;	
	КонецЕсли;	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (09.06.15)
Процедура ДобавитьТЗПериод()
	ТЗ_Периоды.НоваяСтрока();
	ТЗ_Периоды.FormEx_ПланРаскраски = "(BRUSH["+глПолучитьЦвет(196,233,242)+"])()()()()()";
КонецПроцедуры // гл

//====================================================================== //--- УМК Сандомирский В.Ю. (09.06.15)
Процедура ИзмТзПериоды()
	
	НомСтр = ТЗ_Периоды.ТекущаяСтрока();	
	НомКол = ТЗ_Периоды.ТекущаяКолонка();
		
	Если НомКол = "Дата1" Тогда //--- формат Дата	
		глВвестиЗначениеВТаблицу(ТЗ_Периоды,НомСтр,НомКол,"Дата","Введите начало периода"); //(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение") Экспорт
	ИначеЕсли НомКол = "Дата2" Тогда //--- формат Дата	
		глВвестиЗначениеВТаблицу(ТЗ_Периоды,НомСтр,НомКол,"Дата","Введите начало периода"); //(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение") Экспорт
	ИначеЕсли НомКол = "ДокНачала" Тогда //--- формат Дата
		глВвестиЗначениеВТаблицу(ТЗ_Периоды,НомСтр,НомКол,"Документ.УМК_СнятиеРезерва","Выберите документ начала"); //(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение") Экспорт
	ИначеЕсли НомКол = "ДокКонца" Тогда //--- формат Дата
		глВвестиЗначениеВТаблицу(ТЗ_Периоды,НомСтр,НомКол,"Документ.УМК_СнятиеРезерва","Выберите документ окончания"); //(Таб,НомСтр=0,НомКол=0,ТипЗнач="",Подсказка="Введите значение") Экспорт
	КонецЕсли;
	
КонецПроцедуры // ИзмТзПериоды()

//====================================================================== //--- УМК Сандомирский В.Ю. (22.06.15)
Процедура УдалитьТекущуюСтрокуТЗПериодов()
	НомСтр = ТЗ_Периоды.ТекущаяСтрока();
	ТЗ_Периоды.УдалитьСтроку(НомСтр);
КонецПроцедуры // УдалитьТекущуюСтрокуТЗПериодов()

//====================================================================== //--- УМК Сандомирский В.Ю. (22.06.15)
Процедура ИзменениеПорядкаТЗ(Направление)
	
	ТекСтрока = ТЗ_Периоды.ТекущаяСтрока();
	ТЗ_Периоды.СдвинутьСтроку(Направление,ТекСтрока);
	ТекСтрока = ТекСтрока + Направление;
	Если ТекСтрока > ТЗ_Периоды.КоличествоСтрок() Тогда
		ТекСтрока = ТЗ_Периоды.КоличествоСтрок(); 
	КонецЕсли; 
	ТЗ_Периоды.ТекущаяСтрока(ТекСтрока);
	
КонецПроцедуры // ИзменениеПорядка(1)

//======================================================================
Процедура ДобавитьСтрокуРезульт(Запрос, ТЗ_1)
	ТЗ_1.НоваяСтрока();
	ТЗ_1.Индекс 		= СокрЛП(Строка(Запрос.ВидУпаковки))+СокрЛП(Строка(Запрос.ГруппировкаРазрешенныхВидовУпаковки))+СокрЛП(Строка(Запрос.Номенклатура));
	ТЗ_1.Группировка1 	= Запрос.ВидУпаковки;
	ТЗ_1.Группировка2 	= Запрос.ГруппировкаРазрешенныхВидовУпаковки;
	ТЗ_1.Группировка3 	= Запрос.Номенклатура;
	ТЗ_1.ВидУпаковки 	= Запрос.ВидУпаковки;
	ТЗ_1.ГруппировкаРазрешенныхВидовУпаковки = Запрос.ГруппировкаРазрешенныхВидовУпаковки;
	ТЗ_1.Номенклатура 	= Запрос.Номенклатура;
	ТЗ_1.ПрихРезерв 	= Запрос.ПрихРезерв;	
	ТЗ_1.Заказ			= Запрос.ДокументРезерва;
КонецПроцедуры //

Функция СравнитьУпаковку(Вид1, Вид2)
	Если (Вид1 = Вид2) ИЛИ ((Вид1 = НетУп) И (ПустоеЗначение(Вид2) = 1)) ИЛИ ((Вид2 = НетУп) И (ПустоеЗначение(Вид1) = 1)) 
		ИЛИ ((ПустоеЗначение(Вид2) = 1) И (ПустоеЗначение(Вид1) = 1)) Тогда
		Возврат 1;
	КонецЕсли;
	
	Возврат 0;
КонецФункции // СравнитьУпаковку

// фильтр по стикеровке
// если фильтр не нужен, возвращаем 1
// если нужен, то возвращаем единцу, если стоит стикеровать и фильтр = 2 (только стикеровать) либо если стоит не стикеровать и фильтр = 3 (только не стикеровать)
//======================================================================
Функция УсловиеПоСтику(ДокументРезерва, Номенклатура, ВидУпаковки)
	Если Стик = 1 Тогда
		Возврат 1;
	Иначе
		Если ПустоеЗначение(ДокументРезерва) = 1 Тогда
			Возврат 0;
		ИначеЕсли ДокументРезерва.Вид() <> "УМК_ЗаказКлиента" Тогда
			Возврат 0;
		КонецЕсли;
		
		Стикеровка = -1;
		ДокРез = СоздатьОбъект("Документ");
		ДокРез.НайтиДокумент(ДокументРезерва);
		ДокРез.ВыбратьСтроки();
		Пока ДокРез.ПолучитьСтроку() = 1 Цикл
			Если (ДокРез.ТМЦ = Номенклатура) И (СравнитьУпаковку(ДокРез.ВидУпаковки, ВидУпаковки) = 1) Тогда
				Стикеровка = ?(ДокРез.Стикеровать = Да, 1, 0);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Стикеровка <> - 1 Тогда
			Возврат ?(((Стик = 2) И (Стикеровка = 1)) ИЛИ ((Стик = 3) И (Стикеровка = 0)), 1, 0);
		Иначе
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
КонецФункции // УсловиеПоСтику(ДокументРезерва, Номенклатура, ВидУпаковки)

//====================================================================== //--- УМК Сандомирский В.Ю. (10.06.15)
Процедура ДополнитьРезультирующуюТЗ(Дата1,Дата2,НомерПериода, ПоЗаказам)	
	Запрос				= СоздатьОбъект("Запрос");	
	ТекстЗапроса = 
		"
		|Период с Дата1 по Дата2;
		|Фирма									= Регистр.Резервы.Фирма;
		|ВидУпаковки 							= Регистр.Резервы.ВидУпаковки;
		|ГруппировкаРазрешенныхВидовУпаковки 	= Регистр.Резервы.ТМЦ.ГруппировкаРазрешенныхВидовУпаковки;
		|Номенклатура 							= Регистр.Резервы.ТМЦ;
		|Покупатель								= Регистр.Резервы.ДокументРезерва.Контрагент; 
		|ДокументРезерва						= Регистр.Резервы.ДокументРезерва;
		|Резерв									= Регистр.Резервы.Резерв;
		|Функция ПрихРезерв	= Приход(Резерв) Когда (УсловиеПоСтику(ДокументРезерва, Номенклатура, ВидУпаковки) = 1);
		|Группировка ВидУпаковки без Групп;
		|Группировка ГруппировкаРазрешенныхВидовУпаковки без Групп;
		|Группировка Номенклатура без Групп;" + 
		?(ПоЗаказам = 1,"
		|Группировка ДокументРезерва;", "") + "
		|";	
			
	Загол="";
                            
	//Если фПросроченныйРезерв = 1 Тогда
	//	ТекстЗапроса = ТекстЗапроса + "Условие (глБанковскаяДата(ДатаРезерва,СрокРезерва) < Дата2);";
	//	Загол = Загол + ?(Язык="у","Тільки резерв, прострочений на ","Только резерв, просроченный на ")+Дата2+". ";
	//КонецЕсли;
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были
	ВыбЗаказ = "";
	
	Если глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Фирма", Фирма, "Фирма", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по фирмам. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Номенклатура", ВыбНоменклатура, "ВыбНоменклатура", ТекстЗапроса, Загол, Язык, "КатегорииТоваров")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по номенклатурным позициям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Покупатель", ВыбПокупатель, "ВыбПокупатель", ТекстЗапроса, Загол, Язык, "КатегорииКонтрагентов")=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по покупателям. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ,"Договор", ВыбДоговор, "ВыбДоговор", ТекстЗапроса, Загол, Язык)=0 Тогда
		Предупреждение("Возникли ошибки при наложении фильтра по договорам. Отчет не сформирован.");
		Возврат;			
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ВидУпаковки", ВыбВидУпаковки, "ВыбВидУпаковки", ТекстЗапроса, Загол, Язык, "")=0 Тогда //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		Предупреждение("Возникли ошибки при наложении фильтра по видам упаковки. Отчет не сформирован.");
		Возврат;
	ИначеЕсли глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ДокументРезерва", ВыбЗаказ, "ВыбЗаказ", ТекстЗапроса, Загол, Язык, "")=0 Тогда //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		Предупреждение("Возникли ошибки при наложении фильтра по заказам. Отчет не сформирован.");
		Возврат;		
	КонецЕсли;
	
	//// --- Технологически вывести текст запроса //--- УМК Сандомирский В.Ю. (*)
	//Текст=СоздатьОбъект("Текст");
	//Текст.ДобавитьСтроку(ТекстЗапроса);
	//Текст.Показать("Текст запроса "); 
	//// ... Технологически вывести текст запроса
		
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса)=0 Тогда
		Предупреждение("Запрос по резервам не выполнился!!!");
		Возврат;
	Иначе
		ТЗ_1 = СоздатьОбъект("ТаблицаЗначений");
		ТЗ_1.НоваяКолонка("Индекс");
		ТЗ_1.НоваяКолонка("Группировка1");
		ТЗ_1.НоваяКолонка("Группировка2");
		ТЗ_1.НоваяКолонка("Группировка3");
		ТЗ_1.НоваяКолонка("Заказ", "Документ.УМК_ЗаказКлиента");
		ТЗ_1.НоваяКолонка("ВидУпаковки","Справочник.ВидыУпаковки");
		ТЗ_1.НоваяКолонка("ГруппировкаРазрешенныхВидовУпаковки","Справочник.УМК_ГруппировкиВидовУпаковки");
		ТЗ_1.НоваяКолонка("Номенклатура","Справочник.ТМЦ");
		ТЗ_1.НоваяКолонка("ПрихРезерв","Число",14,2);
		
		//Запрос.Выгрузить(ТЗ_1);
		//ТЗ_1.ВыбратьСтроку(); //--- Технологически
		
		Пока Запрос.Группировка(1) = 1 Цикл				
			//ТЗ_1.НоваяСтрока();
			//ТЗ_1.Индекс 		= СокрЛП(Строка(Запрос.ВидУпаковки));
			//ТЗ_1.Группировка1 	= Запрос.ВидУпаковки;
			//ТЗ_1.ВидУпаковки 	= Запрос.ВидУпаковки;
			//ТЗ_1.ПрихРезерв 	= Запрос.ПрихРезерв;
			
			Пока Запрос.Группировка(2) = 1 Цикл					
				//ТЗ_1.НоваяСтрока();
				//ТЗ_1.Индекс 		= СокрЛП(Строка(Запрос.ВидУпаковки))+СокрЛП(Строка(Запрос.ГруппировкаРазрешенныхВидовУпаковки));
				//ТЗ_1.Группировка1 	= Запрос.ВидУпаковки;
				//ТЗ_1.Группировка2 	= Запрос.ГруппировкаРазрешенныхВидовУпаковки;
				//ТЗ_1.ВидУпаковки 	= Запрос.ВидУпаковки;
				//ТЗ_1.ГруппировкаРазрешенныхВидовУпаковки = Запрос.ГруппировкаРазрешенныхВидовУпаковки;
				//ТЗ_1.ПрихРезерв 	= Запрос.ПрихРезерв;
					
				Пока Запрос.Группировка(3) = 1 Цикл
					Если ПоЗаказам = 0 Тогда
						ДобавитьСтрокуРезульт(Запрос, ТЗ_1);
						ТЗ_1.Заказ = "";
					Иначе
						Пока Запрос.Группировка(4) = 1 Цикл
							ДобавитьСтрокуРезульт(Запрос, ТЗ_1);
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;							
			КонецЦикла;		
		КонецЦикла;	
	КонецЕсли;

	ТЗ_Результирующая.НоваяКолонка("Пер_" + Строка(НомерПериода),"Число",14,2);		
	ТЗ_1.ВыбратьСтроки();
	Пока ТЗ_1.ПолучитьСтроку() = 1 Цикл
		ТЗ_Результирующая.НоваяСтрока();
		ТЗ_Результирующая.Индекс 								= СокрЛП(Строка(ТЗ_1.ВидУпаковки))+СокрЛП(Строка(ТЗ_1.ГруппировкаРазрешенныхВидовУпаковки))+СокрЛП(Строка(ТЗ_1.Номенклатура));
		ТЗ_Результирующая.Группировка1							= ТЗ_1.Группировка1; 
		ТЗ_Результирующая.Группировка2							= ТЗ_1.Группировка2; 	
		ТЗ_Результирующая.Группировка3							= ТЗ_1.Группировка3; 
		ТЗ_Результирующая.ВидУпаковки 							= ТЗ_1.ВидУпаковки;
		ТЗ_Результирующая.ГруппировкаРазрешенныхВидовУпаковки 	= ТЗ_1.ГруппировкаРазрешенныхВидовУпаковки;
		ТЗ_Результирующая.Номенклатура 							= ТЗ_1.Номенклатура;
		ТЗ_Результирующая.Заказ									= ТЗ_1.Заказ;
		ТекСтрока = ТЗ_Результирующая.КоличествоСтрок();
		ТЗ_Результирующая.УстановитьЗначение(ТекСтрока,"Пер_" + Строка(НомерПериода),ТЗ_1.ПрихРезерв);					
	КонецЦикла;	
КонецПроцедуры  

//======================================================================
Процедура ЗаполнитьПоПериодам(ПоЗаказам = 0)
	УдалитьСтроки();

	ВалютаПечати=Гривня;
	Язык = ?(Константа.ФормыНаУкраинском = Да, "у", "");
	
	ТЗ_Результирующая = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Результирующая.НоваяКолонка("Индекс");
	ТЗ_Результирующая.НоваяКолонка("Группировка1");
	ТЗ_Результирующая.НоваяКолонка("Группировка2");
	ТЗ_Результирующая.НоваяКолонка("Группировка3");
	ТЗ_Результирующая.НоваяКолонка("Заказ");
	ТЗ_Результирующая.НоваяКолонка("ВидУпаковки","Справочник.ВидыУпаковки");
	ТЗ_Результирующая.НоваяКолонка("ГруппировкаРазрешенныхВидовУпаковки","Справочник.УМК_ГруппировкиВидовУпаковки");
	ТЗ_Результирующая.НоваяКолонка("Номенклатура","Справочник.ТМЦ");
	
	НомерПериода = 0;
	СтрокаСвертки = "";
	ТЗ_Периоды.ВыбратьСтроки();
	Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл		
		Дата1 = ТЗ_Периоды.Дата1;
		Если ПустоеЗначение(ТЗ_Периоды.ДокНачала) <> 1 Тогда
			Дата1 = ТЗ_Периоды.ДокНачала;
		КонецЕсли;
		
		Дата2 = ТЗ_Периоды.Дата2;
		Если ПустоеЗначение(ТЗ_Периоды.ДокКонца) <> 1 Тогда
			Дата2 = ТЗ_Периоды.ДокКонца;
		КонецЕсли;
		
		НомерПериода = НомерПериода + 1;		
		ДополнитьРезультирующуюТЗ(Дата1,Дата2,НомерПериода, ПоЗаказам);
		//--- Получаю названия колонок с периодами для свертки таблицы значений
		СтрокаСвертки = СтрокаСвертки + ",Пер_" + Строка(НомерПериода);						
	КонецЦикла;
	
	СтрокаСвертки = Сред(СтрокаСвертки,2);	
	ТЗ_Результирующая.Свернуть("Индекс,Группировка1,Группировка2,Группировка3,Заказ,ВидУпаковки,ГруппировкаРазрешенныхВидовУпаковки,Номенклатура",СтрокаСвертки);
	//ТЗ_Результирующая.Сортировать("ВидУпаковки+,ГруппировкаРазрешенныхВидовУпаковки+,Номенклатура+");
	//ТЗ_Результирующая.ВыбратьСтроку();
	
	ТекстГруппировок 	= "";
	ПечЗаголовокСтолбца = "";	
	// обнуляем счетчик числа строк, выведенных в таблицу отчета
	     
	// ВЫВОД ГРУППИРОВОК ЗАПРОСА по ТМЦ и УПАКОВКАМ	
	ТекГруппировка1  = "";
	ТекГруппировка2  = "";
	ТекГруппировка3  = "";
	
	ТЗ_Результирующая.ВыбратьСтроки();
	Пока ТЗ_Результирующая.ПолучитьСтроку() = 1 Цикл
		Если (ПустоеЗначение(ТЗ_Результирующая.Группировка1) <> 1) 
			И (ПустоеЗначение(ТЗ_Результирующая.Группировка2) <> 1)
			И (ПустоеЗначение(ТЗ_Результирующая.Группировка3) <> 1) 
																		Тогда
			Наим = ТЗ_Результирующая.Номенклатура;
		//	Таб.ВывестиСекцию("Группировка3|Наименование");
			ТекГруппировка3 = ТЗ_Результирующая.Номенклатура;
			МинимумСтроки = 1000000000;
			НомерПериода = 0;
			
			СуммаПериоды = 0;
			КвоПериоды	 = 0;
			
			ТЗ_Периоды.ВыбратьСтроки();
			Пока ТЗ_Периоды.ПолучитьСтроку() = 1 Цикл
				НомерПериода = НомерПериода + 1;		
				ТекЗначение = ТЗ_Результирующая.ПолучитьЗначение(ТЗ_Результирующая.НомерСтроки,"Пер_" + Строка(НомерПериода));			
//				Таб.ПрисоединитьСекцию("Группировка3|Период");
				
				Если ТекЗначение < МинимумСтроки  Тогда
					МинимумСтроки = ТекЗначение;
				КонецЕсли;				
				СуммаПериоды = СуммаПериоды + ТекЗначение;
				КвоПериоды   = КвоПериоды + 1;				
			КонецЦикла;	
			
			СуммаСреднее = СуммаПериоды / КвоПериоды;			
			Если перКолонкаМинимально = 1 Тогда //--- минимальное значение
				РезультКолонка = МинимумСтроки;
			ИначеЕсли перКолонкаМинимально = 2 Тогда //--- среднее значение
				РезультКолонка = СуммаСреднее;
			КонецЕсли;
			
			КоэфКво = глОкруглить(РезультКолонка * НастройкиКоэффициент, ПорядокОкругления);			
			Если КоэфКво < НастройкиМинКво Тогда	
			//	МинимумСтроки = "";
				КоэфКво    = "";
			КонецЕсли;
			
			Если КоэфКво <> ""  Тогда
				Если КоэфКво > 0 Тогда				
					НоваяСтрока();
					ТМЦ 		= ТЗ_Результирующая.Номенклатура;
					Заказ		= ТЗ_Результирующая.Заказ; 
					ИзмТМЦ();
					ВидУпаковки = ТЗ_Результирующая.ВидУпаковки;
					ИзмВидУпаковки();
					Кво 	= КоэфКво;
					ИзмКво();					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	
	Форма.ИспользоватьСлой("Основной,Общий",2);
	Форма.Закладки.ТекущаяСтрока(1);
	Если Вопрос("Сформировать очтёт?", "Да+Нет") = "Да" Тогда
		//--- УМК Сандомирский В.Ю. (23.06.15) а теперь еще и отчет выведем
		глФлагРасшифровки = 1;
		глОбновить		  = 1;
		глРасшифровка = СоздатьОбъект("СписокЗначений");
	    глРасшифровка.Установить("Объект", "УМК_АнализРезервовПоПериодам");
		глРасшифровка.Установить("ВыбФирма", 			Фирма);
		глРасшифровка.Установить("ВыбНоменклатура", 	ВыбНоменклатура); 
		глРасшифровка.Установить("ВыбВидУпаковки",		ВыбВидУпаковки);   //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
		глРасшифровка.Установить("ВыбПокупатель", 		ВыбПокупатель);
		глРасшифровка.Установить("ВыбДоговор", 			ВыбДоговор);
		глРасшифровка.Установить("МинКво", 				НастройкиМинКво);
		глРасшифровка.Установить("Коэффициент", 		НастройкиКоэффициент);
		глРасшифровка.Установить("ПорядокОкругления", 	ПорядокОкругления);
		глРасшифровка.Установить("перКолонкаМинимально", перКолонкаМинимально);
		глРасшифровка.Установить("перГруппыКонтрагентов", 1);
		глРасшифровка.Установить("ргСтик", Стик);
		
		// запомним МФ только если он задан
	    Если глМножественныйФильтрЗадан(ТаблицаМФ) = 1 Тогда
			глРасшифровка.Установить("ТаблицаМФ", ТаблицаМФ);
		КонецЕсли;
		
		глРасшифровка.Установить("ТЗ_Периоды", ТЗ_Периоды);	
		ОткрытьФорму("Отчет.УМК_АнализРезервовПоПериодам#");	
		
		глФлагРасшифровки = 0;
		глРасшифровка = 0;
		глОбновить = 0;
	КонецЕсли;
КонецПроцедуры // ЗаполнитьПоПериодам

//====================================================================== //--- УМК Сандомирский В.Ю. (22.06.15)
Процедура ПриВыбореЗакладки(Ном,Значен)
	Форма.ИспользоватьСлой(Значен+", Общий",2);	
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблицеМФ,Контекст); // записываем изменения если они были	
КонецПроцедуры  

// ===============================
Процедура ПриОткрытии() 
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);

//	Форма.ДатаДок.ВыполнятьФормулуТолькоПриИзменении(1);
	
	СтараяДата 		 = ДатаДок;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	Если Стик = 0 Тогда
		Стик = 1;
	КонецЕсли;
	
	//--- Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (06.11.14)
	ТекВидУпаковки = СоздатьОбъект("Справочник.ВидыУпаковки");
	СпВидыУпаковкиГлобальный = СоздатьОбъект("СписокЗначений");
	ТекВидУпаковки.ВыбратьЭлементы();
	Пока ТекВидУпаковки.ПолучитьЭлемент() = 1 Цикл
		Если ТекВидУпаковки.ПометкаУдаления() = 1 Тогда //--- пропускаем помеченные на удаление
			Продолжить;
		КонецЕсли;
		
		Если ТекВидУпаковки.Активна <> Перечисление.ДаНет.Да Тогда //--- пропускаем не активные
			Продолжить;
		КонецЕсли;
	
		Если ТекВидУпаковки.ЭтоГруппа() = 1 Тогда //--- пропускаем группы
			Продолжить;
		КонецЕсли;
		СпВидыУпаковкиГлобальный.ДобавитьЗначение(ТекВидУпаковки.ТекущийЭлемент());		
	КонецЦикла;
	//... Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (06.11.14)
	
	//--- УМК Сандомирский В.Ю. (12.12.14)
	спОшибки=СоздатьОбъект("СписокЗначений");
    спОшибки.ДобавитьЗначение("#ПУСТО!");
    спОшибки.ДобавитьЗначение("#ДЕЛ/0!");
    спОшибки.ДобавитьЗначение("#ЗНАЧ!");
    спОшибки.ДобавитьЗначение("#ССЫЛКА!");
    спОшибки.ДобавитьЗначение("#ИМЯ?");
    спОшибки.ДобавитьЗначение("#ЧИСЛО!");
    спОшибки.ДобавитьЗначение("#Н/Д");
    //Для англ. версии
    спОшибки.ДобавитьЗначение("#NULL!");
    спОшибки.ДобавитьЗначение("#DIV/0!");
    спОшибки.ДобавитьЗначение("#VALUE!");
    спОшибки.ДобавитьЗначение("#REF!");
    спОшибки.ДобавитьЗначение("#NAME?");
    спОшибки.ДобавитьЗначение("#NUM!");
    спОшибки.ДобавитьЗначение("#N/A");
	спОшибки.ДобавитьЗначение("######");
	//... УМК Сандомирский В.Ю. (12.12.14)
	
	Если (НазваниеНабораПрав() = "Заказ") И (фРаспечатан = 1) Тогда //--- УМК Сандомирский В.Ю, (26.12.14)
		Форма.ТолькоПросмотр(1);
		Форма.кИмпортExcel.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кДействия.Доступность(0);
	КонецЕсли;
	
	Если (НазваниеНабораПрав() = "Технолог") Тогда 	//--- УМК Сандомирский В.Ю, (09.04.15)
		
		ЗакрываемВсеРеквизитыКроме();
		
	КонецЕсли;
		
	//--- УМК Сандомирский В.Ю, (22.06.15)
	
	Если ТипЗначенияСтр(Форма.Параметр) = "ТаблицаЗначений" Тогда //--- УМК Сандомирский В.Ю. (18.06.15) формирование перемещения из отчета по заказам Поставщикам		
		//--- заполним по умолчанию склад откуда - складом оболочка
		//СкладОболочка = СоздатьОбъект("Справочник.МестаХранения");
		//Если СкладОболочка.НайтиПоКоду(42,0) = 1 Тогда
		//	МестоХранения = СкладОболочка.ТекущийЭлемент();
		//КонецЕсли;
		//ЗагрузитьТабличнуюЧасть(Форма.Параметр);
		//ВыбратьСтроки();
		//Пока ПолучитьСтроку() = 1 Цикл
		//	ИзмТМЦ();
		//КонецЦикла;			
		Форма.Параметр.ВыбратьСтроки();
		Пока Форма.Параметр.ПолучитьСтроку() = 1 Цикл
			Если Форма.Параметр.ТЗРез.КоличествоСтрок() > 0 Тогда
				Форма.Параметр.ТЗРез.ВыбратьСтроки();
				Пока Форма.Параметр.ТЗРез.ПолучитьСтроку() = 1 Цикл
					НоваяСтрока();
					ТМЦ = Форма.Параметр.ТМЦ;
					ВидУпаковки = Форма.Параметр.ВидУпаковки;
					Заказ = Форма.Параметр.ТЗРез.Заказ;
					Кво = Форма.Параметр.ТЗРез.Кво;
					ИзмТМЦ();
				КонецЦикла;
			Иначе
				НоваяСтрока();
				ТМЦ = Форма.Параметр.ТМЦ;
				ВидУпаковки = Форма.Параметр.ВидУпаковки;
				Кво = Форма.Параметр.Кво;
				ИзмТМЦ();				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	//... УМК Сандомирский В.Ю, (22.06.15)
	
	//--- УМК Сандомирский В.Ю. (22.06.15)
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Настройки","Настройки");
	Форма.Закладки.ДобавитьЗначение("МФ","Множественный фильтр");
	Форма.ИспользоватьСлой("Основной,Общий",2);
	//... УМК Сандомирский В.Ю. (22.06.15)
		
	Если ПустоеЗначение(ТЗ_ПериодыСтрокой) <> 1 Тогда
		ЗначениеИзСтрокиВнутр(ТЗ_ПериодыСтрокой).Выгрузить(ТЗ_Периоды);
		ТЗ_Периоды.ВидимостьКолонки("FormEx_ПланРаскраски",0);
	КонецЕсли;
	
	Если ПустоеЗначение(ТаблицаМФСтрокой) <> 1 Тогда
		ЗначениеИзСтрокиВнутр(ТаблицаМФСтрокой).Выгрузить(ТаблицаМФ);
	КонецЕсли;
	
	Если ПустоеЗначение(СписокЭлементовМФСтрокой) <> 1 Тогда
		СписокЭлементовМФ.ИзСтрокиСРазделителями(СписокЭлементовМФСтрокой);
	КонецЕсли;
	
	ТаблицаМФ.ВидимостьКолонки("Тип",				0);
	ТаблицаМФ.ВидимостьКолонки("Вид",				0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",	0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",				0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",		0);
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	
	Если перКолонкаМинимально = 0 Тогда
		перКолонкаМинимально = 1;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ОчиститьВУ()
	Если Вопрос("Очистить вак. уп?", "Да+Нет") = "Да" Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ВидУпаковки = НетУп;
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры // ОчиститьВУ()

//======================================================================
Процедура УбратьЗаказы()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	ТЗ.Свернуть("ТМЦ,ВидУпаковки,Коэффициент,Ед,ТМЦ,ЦенаБезНДС,ЦенаСНДС,ПримечаниеСтроки,Набор,ЦенаУпаковки,фБылНапечатан", "СуммаУпаковки,СуммаБезСкидки,Скидка,Кво,НДС,СуммаСНДС,СуммаБезНДС");
	ЗагрузитьТабличнуюЧасть(ТЗ);
КонецПроцедуры // УбратьЗаказы

// =============================== УМК Сандомирский В.Ю. (04.11.14)
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");

//                  			тип			вид						переменная  			название
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ТМЦ",					"Номенклатура",    		"По позициям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыУпаковки",			"ВидУпаковки",			"По видам упаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Контрагенты",			"Покупатель",			"По покупателям");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",	"Договор",				"Договор",				"По договорам");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Документ",	"УМК_ЗаказКлиента",		"ДокументРезерва",		"По заказам");				//--- УМК Сандомирский В.Ю. (29.05.15)
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",		"Номенклатура",			"По категориям номенклатуры");
глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ВидыКатегорий",		"Покупатель",			"По категориям покупателей");

ТекСтрокаВТаблицеМФ="";


ТЗ_Периоды.НоваяКолонка("FormEx_ПланРаскраски");
ТЗ_Периоды.НоваяКолонка("Дата1","Дата",,,"Дата начала");
ТЗ_Периоды.НоваяКолонка("Дата2","Дата",,,"Дата окончания");
ТЗ_Периоды.НоваяКолонка("ДокНачала","Документ.УМК_СнятиеРезерва",,,"Документ начала");
ТЗ_Периоды.НоваяКолонка("ДокКонца",	"Документ.УМК_СнятиеРезерва",,,"Документ окончания");
ТЗ_Периоды.ВидимостьКолонки("FormEx_ПланРаскраски",0);

ВыбНоменклатура.ВыборГруппы(1);
ВыбВидУпаковки.ВыборГруппы(1);
ВыбПокупатель.ВыборГруппы(1);

ТекСтрокаВТаблицеМФ="";