Перем Валюта_Прежн, Курс_Прежн;
Перем НачальнаяДатаДокумента;
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем СтарЧтоПриходуем;          
Перем спЧтоПриходуем;
Перем СписокДействий;

// ===============================
Процедура ПриОткрытии()
	НачальнаяДатаДокумента = ДатаДок;
	// закладки
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("ГТД","ГТД");
	Форма.ИспользоватьСлой("Общий,Основной",2);
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	       
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПодбор.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.кОсн.Доступность(0);
		Форма.кВалюта.Доступность(0);
		
		Форма.кОснТаможня.Доступность(0);
		Форма.кОснПеревозка.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	
	// Инициализируем список действий по кнопке "Действия"
	СписокДействий = глПолучитьСписокДействий(?(ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ,"ТоварныйСостав,ОбновлениеЦен,","") + "
		|СтруктураПодчиненности,
		|ДвиженияДокумента,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные");
	
	пПошлина = Итог("Пошлина");
	пТаможенныеУслуги = Итог("ТаможенныеУслуги");
	пАкциз = Итог("Акциз");
	      
	СтарЧтоПриходуем = ЧтоПриходуем;
	
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;   
	глУстВидимостьЦен(Контекст);
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ТМЦ.Вид() = "ТМЦ" Тогда
				Если (ТМЦ = Форма.Параметр) или (ТМЦ.ТМЦДляПрихода.Получить(ДатаДок) = Форма.Параметр) Тогда
				    АктивизироватьСтроку(НомерСтроки);
					Прервать;
				КонецЕсли;			    
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	Форма.ИспользоватьСлой("Общий," + Значение,2);
КонецПроцедуры

// ===============================
Процедура РаспределитьДопИздержки()
	Если (КоличествоСтрок() = 0) или (Итог("СуммаБезНДСВал") = 0) Тогда
	    Предупреждение("Табличная часть пуста или валютные суммы нулевые! Не на что распределять дополнительные издержки!");
		пАкциз = 0;
		пПошлина = 0;
		пТаможенныеУслуги = 0;
		СуммаГрнПеревозки = 0;
		СуммаВалПеревозки = 0;
	Иначе
		// распределяем пропорционально сумме вал без НДС
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Коэф = СуммаБезНДСВал/Итог("СуммаБезНДСВал");
			Акциз = пАкциз * Коэф;
			Пошлина = пПошлина * Коэф;
			ТаможенныеУслуги = пТаможенныеУслуги *Коэф;
			Перевозка = СуммаГрнПеревозки * Коэф;
			ПеревозкаВал = СуммаВалПеревозки * Коэф;
		КонецЦикла;
		// если возникли ошибки округлений, то дельту - в первую строку
		ПолучитьСтрокуПоНомеру(1);
		Акциз = Акциз + (пАкциз - Итог("Акциз"));
		Пошлина = Пошлина + пПошлина - Итог("Пошлина");
		ТаможенныеУслуги = ТаможенныеУслуги + пТаможенныеУслуги - Итог("ТаможенныеУслуги");
		Перевозка = Перевозка + СуммаГрнПеревозки - Итог("Перевозка");
		ПеревозкаВал = ПеревозкаВал + СуммаВалПеревозки - Итог("ПеревозкаВал");
	КонецЕсли;
КонецПроцедуры
               
// ===============================
Процедура ИзмСчетВзаиморасчетов(текСчет,текРеквизит)
	Если глПроверитьСчетВзаиморасчетов(текСчет) = 0 Тогда
		глКомментарий("Выбранный счет не является счетом учета взаиморасчетов!",1,,"!");
		УстановитьАтрибут(текРеквизит,0);
	ИначеЕсли (СчетКонтрагента.Валютный=0)
	И (текРеквизит = "СчетКонтрагента") Тогда
		глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
		СчетКонтрагента = 0;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Функция УстДоступность()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	// доступность в зависимости от слоя
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если Закл = "Основной" Тогда
		// слой Основной
		Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
			// для бартера запретим относить НДС на себестоимость
			// нет точной схемы проводок для этого случая
		    Форма.НДСнаЗатраты.Доступность(0);
			Если НДСнаЗатраты = 1 Тогда
			    НДСнаЗатраты = 0;
			КонецЕсли;
		Иначе
			Форма.НДСнаЗатраты.Доступность(1);
		КонецЕсли;              
		фВидимостьКредит = ?(ВидТорговли = Перечисление.ВидыТорговли.Кредит,1,0);
		Форма.тДатаОплаты.Видимость(фВидимостьКредит);
		Форма.тГлубина.Видимость(фВидимостьКредит);
		Форма.Глубина.Видимость(фВидимостьКредит);
	КонецЕсли;
	
	Форма.Заголовок(глЗаголовок(Контекст,"Приходная накладная"));
	// для всех слоев
    Форма.ЦенаБезНДС.Доступность(1);
	Форма.ЦенаБезНДС.Видимость(1);
	Форма.СуммаБезНДСВал.Видимость(1);
    Форма.СуммаБезНДС.Доступность(0);		
    Форма.Пошлина.Видимость(1);
    Форма.ТаможенныеУслуги.Видимость(1);
    Форма.Акциз.Видимость(1);

	НазначитьВид(Контрагент,СчетКонтрагента.ВидСубконто(1));
	Форма.Контрагент.НеИзменятьВид(1);
	
	Если Контрагент.Выбран()=1 Тогда
	    Если Контрагент.Вид()="Контрагенты" Тогда
	        Форма.ВидТорговли.Доступность(1);
	    Иначе
	    	Форма.ВидТорговли.Доступность(0);
	    КонецЕсли;
	КонецЕсли;

	// закладки
	Если Форма.Закладки.НайтиЗначение("ГТД") = 0 Тогда
	    // добавим закладку
		Форма.Закладки.ДобавитьЗначение("ГТД","ГТД");
	КонецЕсли;
	                     
	Если ЧтоПриходуем = Перечисление.ЧтоПриходуем.ОСиНМАиДрНеобМатАктивы Тогда
		НазначитьВид(ТМЦ,"Инвестиции");
		Форма.кПодбор.Доступность(0);
	Иначе
		НазначитьВид(ТМЦ,"ТМЦ");
		Форма.кПодбор.Доступность(1-Форма.ТолькоПросмотр());
	КонецЕсли;
	Форма.ТМЦ.НеИзменятьВид(1);
	
	Если ТМЦ.Вид() = "ТМЦ" Тогда
		Форма.ДопКво.Доступность(ТМЦ.УчетДопКво);
	КонецЕсли;

	Возврат "";
КонецФункции  

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	ИзмСчетВзаиморасчетов(СчетКонтрагента,"СчетКонтрагента");
КонецПроцедуры	

// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
		// определим ставку НДС
		Если ВидНДС = ОсновнаяСтавкаНДС Тогда
			СтавкаНДС = ТМЦ.СтавкаНДС;
		Иначе
			СтавкаНДС = ВидНДС;
		КонецЕсли;
		// устанавливаем цену без НДС
		ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
	КонецЕсли;
	глВыч_Суммы_Накл(Контекст,-1);
КонецПроцедуры //ПересчетСтроки

// ===============================
// Назначение: пересчитывает цену и суммы в строке документа по категори цен
//		
Процедура ПресчитатьЦенуПоКатегории()
	ЦенаТовара = глВернутьЦену(ТМЦ, КатегорияЦен);
	Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
		// получим параметры цены
		ЦенаТовара.ИспользоватьДату(ДатаДок);
		ЦенаЦены   = ЦенаТовара.Цена;
		ВалютаЦены = ЦенаТовара.Валюта;
		ЕдЦены	   = ЦенаТовара.Единица;
		ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
		ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
		ПересчетСтроки(ЦенаЦены);                                                   
	Иначе
		ПересчетСтроки();
	КонецЕсли;
КонецПроцедуры //ПресчитатьЦенуПоКатегории

// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
// ===============================
Процедура ИзмРеквизитШапки(Реквизит)
	// пересчитаем суммы НДС в строках табличной части
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	текОтвет = Вопрос("В документе изменен реквизит """+Реквизит+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текОтвет = "Да" Тогда
			// изменим цены
			ПресчитатьЦенуПоКатегории();
		ИначеЕсли Реквизит = "ВидНДС" Тогда
			ПересчетСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;
	Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
		ДатаОплаты=ДатаДок + Глубина;	
	Иначе	
		ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстГлубина() 
	// Формирует и показывает дату оплаты и глубину кредита
	Если ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
		Глубина=0;
	Иначе	
		Если ПустоЕзначение(Контрагент) = 0 Тогда
			Если Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) <> 0 тогда
				Если Глубина <> Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) тогда
					Глубина=Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
				КонецЕсли;	
			КонецЕсли;	
			ИзмГлубина();
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры //Выбор Глубины

// ===============================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран()=1 Тогда
		Если Контрагент.Вид()="Контрагенты" Тогда
			// изменили Контрагента  
			//Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
			//	Контрагент = 0;
			//	глКомментарий("Контрагент должен быть нерезидентом !!!",1);
			//	Возврат;
			//КонецЕсли;
			Если Договор.Выбран() = 1 Тогда
			    Если Договор.Контрагент <> Контрагент Тогда
					Договор = 0;
			    КонецЕсли;
		    КонецЕсли;
			// подставляем БазДоговор в зависимоти от константы
			Если (Константа.ПодставлятьОсновнойДоговор = Да) 
			И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
			И (ПустоеЗначение(Договор)=1) Тогда
				Если Фирма = Контрагент.БазДоговор.Фирма Тогда
					Если глЕстьРеквизитШапки("Валюта", Контрагент.БазДоговор.Вид()) = Да Тогда
						Если (Контрагент.БазДоговор.Валюта <> Гривня) Тогда
							Договор = Контрагент.БазДоговор;
						КонецЕсли;
					Иначе
						Договор = Контрагент.БазДоговор;
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;
			Если Договор.Выбран() = 1 Тогда
				Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
					Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
						ВидТорговли = Договор.ВидТорговли;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;	                      		
			Если (ПустоеЗначение(Контрагент.ВидТорговли) = 0)
			И (ПустоеЗначение(ВидТорговли) = 1) Тогда   
				Если Контрагент.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
				    ВидТорговли = Контрагент.ВидТорговли;      
				Иначе	
					ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
				КонецЕсли;
			ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;    
			КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
			Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
				КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
			КонецЕсли; 
			Если КатегорияЦен<>СтарКатегорияЦен Тогда
				// изменилась категория цен
				Если КоличествоСтрок() <> 0 Тогда
				    текОтвет = Вопрос("У покупателя установлена категория цен "+КатегорияЦен+". Изменить категорию цен в документе и пересчитать суммы в табличной части?","Да+Нет");
					Если текОтвет = "Да" Тогда
						СтарКатегорияЦен = КатегорияЦен;
						ВыбратьСтроки();
						Пока ПолучитьСтроку() = 1 Цикл  
							ПресчитатьЦенуПоКатегории();
						КонецЦикла;	
					Иначе
						КатегорияЦен = СтарКатегорияЦен;	
					КонецЕсли;
				Иначе
					СтарКатегорияЦен = КатегорияЦен;
				КонецЕсли;      
			КонецЕсли;
			УстГлубина();
			Если ПустоеЗначение(ДокументОснование) = 0 Тогда //--- УМК Сандомирский В.Ю. (29.08.14) основание ЗАКАЗ поставщику
				Если ДокументОснование.Вид() = "ЗаказПоставщику" Тогда
					Если ДокументОснование.Поставщик <> Контрагент Тогда
						ДокументОснование = 0;	
					КонецЕсли;
				Иначе					
					Если ДокументОснование.Контрагент <> Контрагент Тогда
						ДокументОснование = 0;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;	
	    Иначе
			ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			Договор = 0;
			ДокументОснование = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмВидТорговли()
	УстГлубина();
КонецПроцедуры         
     
// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, НачальнаяДатаДокумента);
	ИзмГлубина();
КонецПроцедуры

// ===============================
Процедура ИзмМестоХранения()
	Если МестоХранения.Тип = Перечисление.ТипыМестХранения.Склад Тогда
		Если МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
			Предупреждение ("В качестве места хранения не может быть выбран розничный склад!");
			МестоХранения = "";
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры  

// ===============================
Процедура ИзмЧтоПриходуем()
	Если (КоличествоСтрок()<>0) и (СтарЧтоПриходуем<>ЧтоПриходуем) и (Сокрлп(СтарЧтоПриходуем)<>"") Тогда
	    ЧтоПриходуем = СтарЧтоПриходуем;
	    Предупреждение("Сначала удалите все строки!");
	Иначе
		СтарЧтоПриходуем = ЧтоПриходуем;
	КонецЕсли;
	// Инициализируем список действий по кнопке "Действия"
	СписокДействий = глПолучитьСписокДействий(?(ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ,"ТоварныйСостав,ОбновлениеЦен,","") + "
		|СтруктураПодчиненности,
		|ДвиженияДокумента,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные");
КонецПроцедуры

// ===============================
Процедура ИзмДоговор()
	Если ПустоеЗначение(Договор) = 1 Тогда
		Возврат;
	КонецЕсли;
	Если Договор.Вид() = "Договор" Тогда
		// вид торговли есть только в договоре
		Если (Договор.ВидТорговли <> Перечисление.ВидыТорговли.Предоплата)
		   И (Договор.ВидТорговли <> Перечисление.ВидыТорговли.Кредит) Тогда
			глКомментарий(Шаблон("Нельзя выбирать Договор с видом торговли [Договор.ВидТорговли]!!!"),1);
			Договор=0;
		Иначе
			Если Договор.Валюта = Гривня Тогда
				Предупреждение("Нельзя выбирать договор с валютой "+Гривня+" в качестве договора в документе ГТД.");
				Договор = 0;
			Иначе
				Валюта_Прежн = Валюта;
				Валюта = Договор.Валюта;
				Если Валюта <> Валюта_Прежн Тогда
					Дата_Курса=ДатаДок;
					Курс_Прежн = Курс;
					Курс = глКурсДляВалюты(Валюта,ДатаДок);
					Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
						// что-то изменилось, надо пересчитать цены
						глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
					КонецЕсли;
				КонецЕсли;
				ВидТорговли = Договор.ВидТорговли;
				ВидНДС = Договор.ВидНДС;
				ИзмРеквизитШапки("ВидНДС");
			КонецЕсли;		
		КонецЕсли;       
	КонецЕсли;       
	Если (ПустоеЗначение(ДокументОснование) = 0) 
	И (глЕстьРеквизитШапки("ВидТорговли",ДокументОснование.Вид()) = Да) Тогда    
		Если ДокументОснование.ВидТорговли = Перечисление.ВидыТорговли.Кредит Тогда
			глКомментарий(Шаблон("Нельзя выбирать документ-основание с видом торговли [ДокументОснование.ВидТорговли]!!!"),1);
			ДокументОснование = 0;
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры

// ===============================
Процедура ЗаполнитьПоУмолчанию()
	// заполняем все то, что общее для ввода нового и для ввода на основании
	СчетТаможни = СчетПоКоду("6852");
	СчетПеревозчика = СчетПоКоду("631");
	СчетКонтрагента = СчетПоКоду(?(Валюта = Гривня, "631", "632"));
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	СубконтоВалРасх = глВосстановитьЗначение(Контекст,"СубконтоВалРасх", Константа.БазВаловыйРасход);
	УстГлубина();		
КонецПроцедуры
                        
// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Автор = глПользователь;
	// если этот документ Договор...
	ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	ОтборСчетаТаможня = ?(ПустоеЗначение(ДокументОснованиеТаможни)=1, Таможня, 0);
	ОтборСчетаПеревозчик = ?(ПустоеЗначение(ДокументОснованиеПеревозки)=1, Перевозчик, 0);
	глСохранитьЗначение(Контекст,"СубконтоВалРасх",СубконтоВалРасх);
	глСохранитьЗначение(Контекст,"ОсновнойПоставщик",Контрагент);
КонецПроцедуры

// ===============================
Процедура ВычДопНДС()
	// Порядок начисления таможенных сборов, таможенной пошлины, налога на добавленную 
	// стоимость ..." (Утверждено приказом Государственной таможенной службы Украины от 
	// 27.03.2000 № 164)
	ДопНДС = (Итог("Пошлина")+Итог("Акциз")+Итог("Перевозка"))*ВидНДС.Ставка.Получить(ДатаДок);
КонецПроцедуры

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Закупка");
КонецПроцедуры

// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
	    КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры //Обработка подбора

// ===============================
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да,"_Укр","");
	Таб.ИсходнаяТаблица("Таблица"+СуффиксТаблицы);

	глУстПропись(Валюта);
	ПечОснование=глСтрокаОснование(Контекст,Договор,ДокументОснование);	
	Таб.ВывестиСекцию("Шапка1");
	Если Валюта <> Гривня Тогда
	    Таб.ВывестиСекцию("ШапкаГТД");
	КонецЕсли;
	Таб.ВывестиСекцию("Шапка2");
	Ном = 1;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;
	СуммаВалПрописью = Формат(Итог("СуммаБезНДСВал"),"ЧПДС");
	глУстПропись(Гривня);
	СуммаГрнПрописью = Формат(Итог("СуммаСНДС"),"ЧПДС");
	Таб.ВывестиСекцию("Дно1");
	Если Валюта <> Гривня Тогда
	    Таб.ВывестиСекцию("ДноГТД");
	КонецЕсли;
	Таб.ВывестиСекцию("Дно2");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ:Приходная накладная","");
КонецПроцедуры

// ===============================
Процедура ИзмпПошлина()
	Если пПошлина <> Итог("Пошлина") Тогда
	    Рез = Вопрос("Указанная сумма пошлины отличается от итоговой по табличной части. Распределить дополнительные издержки?","Да+Нет");
		Если Рез = "Нет" Тогда
		    пПошлина = Итог("Пошлина");
		Иначе
			РаспределитьДопИздержки();
		КонецЕсли;
	КонецЕсли;
	ВычДопНДС();
КонецПроцедуры

// ===============================
Процедура ИзмпАкциз()
	Если пАкциз <> Итог("Акциз") Тогда
	    Рез = Вопрос("Указанная сумма акциза отличается от итоговой по табличной части. Распределить дополнительные издержки?","Да+Нет");
		Если Рез = "Нет" Тогда
		    пАкциз = Итог("Акциз");
		Иначе
			РаспределитьДопИздержки();
		КонецЕсли;
	КонецЕсли;
	ВычДопНДС();
КонецПроцедуры

// ===============================
Процедура ИзмпТаможенныеУслуги()
	Если пТаможенныеУслуги <> Итог("ТаможенныеУслуги") Тогда
	    Рез = Вопрос("Указанная сумма таможенных услуг отличается от итоговой по табличной части. Распределить дополнительные издержки?","Да+Нет");
		Если Рез = "Нет" Тогда
		    пТаможенныеУслуги = Итог("ТаможенныеУслуги");
		Иначе
			РаспределитьДопИздержки();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмСуммаГрнПеревозки()
	Если СуммаГрнПеревозки <> Итог("Перевозка") Тогда
	    Рез = Вопрос("Указанная сумма перевозки (грн) отличается от итоговой по табличной части. Распределить дополнительные издержки?","Да+Нет");
		Если Рез = "Нет" Тогда
		    СуммаГрнПеревозки = Итог("Перевозка");
		Иначе
			РаспределитьДопИздержки();
		КонецЕсли;
	КонецЕсли;
	ВычДопНДС();
КонецПроцедуры

// ===============================
// пПошлина, пАкциз, пТаможенныеУслуги - просто реквизиты диалога, 
// в документе не сохраняются, при открытии и изменении пересчитываются
Процедура ИзмПошлина()
	пПошлина = Итог("Пошлина");
	ИзмпПошлина();
КонецПроцедуры

// ===============================
Процедура ИзмАкциз()
	пАкциз = Итог("Акциз");
	ИзмпАкциз();
КонецПроцедуры

// ===============================
Процедура ИзмТаможенныеУслуги()
	пТаможенныеУслуги = Итог("ТаможенныеУслуги");
	ИзмпТаможенныеУслуги();
КонецПроцедуры

// ===============================

Процедура ИзмПеревозка()
	СуммаГрнПеревозки = Итог("Перевозка");
	ИзмСуммаГрнПеревозки();
КонецПроцедуры

// ===============================
Процедура ИзмСуммаВалПеревозки()
	Если СуммаВалПеревозки <> Итог("ПеревозкаВал") Тогда
	    Рез = Вопрос("Указанная сумма перевозки (вал) отличается от итоговой по табличной части. Распределить дополнительные издержки?","Да+Нет");
		Если Рез = "Нет" Тогда
		    СуммаВалПеревозки = Итог("ПеревозкаВал");
		Иначе
			Если ВалютаПеревозки.Выбран() = 1 Тогда
				СуммаГрнПеревозки = глПересчет(СуммаВалПеревозки,ВалютаПеревозки,Гривня,КурсПеревозки,ДатаДок);
			КонецЕсли;
			РаспределитьДопИздержки();
			ИзмСуммаГрнПеревозки();
		КонецЕсли;
	Иначе
		// все совпадает, но сумму перевозки в грн пересчитать надо
		СуммаГрнПеревозки = Итог("Перевозка");
		ИзмСуммаГрнПеревозки();
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмПеревозкаВал()
	СуммаВалПеревозки = Итог("ПеревозкаВал");
	Перевозка = глПересчет(ПеревозкаВал,ВалютаПеревозки,Гривня,КурсПеревозки,ДатаДок);
	ИзмСуммаВалПеревозки();
КонецПроцедуры

// ===============================
Процедура ИзмКурсПеревозки()

	ИзмСуммаВалПеревозки();
КонецПроцедуры

// ===============================
Процедура ИзмВалютаПеревозки()
	КурсПеревозки = глКурсДляВалюты(ВалютаПеревозки,ДатаДок);
	ИзмКурсПеревозки();
	СчетПеревозчика = СчетПоКоду(?(ВалютаПеревозки=Гривня,"631","632"));
КонецПроцедуры

// ======================================
Процедура ИзмТаможня()
	Если ПустоеЗначение(Таможня) = 0 Тогда
		ЗаказТаможни = Таможня.БазДоговор;
	КонецЕсли;
	Если ПустоеЗначение(ДоговорТаможни) = 0 Тогда
	    Если ДоговорТаможни.Контрагент <> Таможня Тогда
			ДоговорТаможни = 0;
	    КонецЕсли;
	КонецЕсли;     
	Если ПустоеЗначение(ДокументОснованиеТаможни) = 0 Тогда
		Если ДокументОснованиеТаможни.Контрагент <> Таможня Тогда
			ДокументОснованиеТаможни = 0;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры 

// ===============================
Процедура ИзмПеревозчик()
	Если ВалютаПеревозки.Выбран() = 0 Тогда
		ВалютаПеревозки = Гривня;
		ИзмВалютаПеревозки();
	КонецЕсли;
	Если ПустоеЗначение(ДоговорПеревозки) = 0 Тогда
	    Если ДоговорПеревозки.Контрагент <> Перевозчик Тогда
			ДоговорПеревозки = 0;
	    КонецЕсли;
	КонецЕсли;     
	Если ПустоеЗначение(ДокументОснованиеПеревозки) = 0 Тогда
		Если ДокументОснованиеПеревозки.Контрагент <> Перевозчик Тогда
			ДокументОснованиеПеревозки = 0;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПересчитатьИтоги()
	пПошлина = Итог("Пошлина");
	пТаможенныеУслуги = Итог("ТаможенныеУслуги");
	пАкциз = Итог("Акциз");
	СуммаВалПеревозки = Итог("ПеревозкаВал");
	СуммаГрнПеревозки = Итог("Перевозка");
	ИзмСуммаГрнПеревозки(); // здесь же и пересчитывается доп. НДС
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	// если скопировали строку, то нужно просуммировать итоговые значения пошлины и тп
	ПересчитатьИтоги();
КонецПроцедуры

// ===============================
Процедура ПриУдаленииСтроки()
	// во время вызова функции строка еще существует,
	// поэтому делаем небольшой "фокус"
	УдалитьСтроку();
	ПересчитатьИтоги();
	СтатусВозврата(0);
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст,Рекв);
		ФлагСтандОбр = 0;
		ИзмРеквизитШапки("ВидНДС");
	ИначеЕсли Рекв="ЧтоПриходуем" Тогда                               
		спЧтоПриходуем.ВыбратьЗначение(ЧтоПриходуем,,,,2);                
		ФлагСтандОбр = 0;                 
		ИзмЧтоПриходуем(); 
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВводНового(Копируем)
	Если Копируем = 1 Тогда
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;
	
	глУстановитьФирму(Контекст);
	
	Контрагент = глВосстановитьЗначение(Контекст,"ОсновнойПоставщик");
	Если ПустоеЗначение(Контрагент) = 0 Тогда
		Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
			Контрагент = 0;
		КонецЕсли;		
	КонецЕсли;
	ИзмКонтрагент();
	ЧтоПриходуем  = Перечисление.ЧтоПриходуем.ТМЦ;
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
		// найдем первую попавшуюся валюту НЕ ГРИВНЮ
		// можно конечно сохранить/восстановить значение, но зачем же ...
		СпрВал = СоздатьОбъект("Справочник.Валюты");
		СпрВал.ВыбратьЭлементы();
		Пока СпрВал.ПолучитьЭлемент() = 1 Цикл
			Если СпрВал.ТекущийЭлемент() <> Гривня Тогда
				Валюта = СпрВал.ТекущийЭлемент();
				Прервать;
			КонецЕсли;	
		КонецЦикла;			
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	ВалютаПеревозки = Гривня;
	ИзмВалютаПеревозки();
	
	ЗаполнитьПоУмолчанию();
КонецПроцедуры
       
// ===============================
Функция ПроверкаОснования(Док)	
	Если глЕстьРеквизитШапки("ВидыТорговли",Док.Вид()) = Нет Тогда
		Возврат 1;
	КонецЕсли;	
	Если Док.ВидТорговли = Перечисление.ВидыТорговли.Кредит Тогда
		Предупреждение("Для приходования на условиях товарного кредита
		|используйте документ Прих. накл. (запасы)");
		Возврат 0;
	КонецЕсли;
                     
	Возврат 1;
КонецФункции

// ===============================
// основание - счет входящий, договор, остатки взаиморасчетов
Процедура ВводНаОсновании(Док) //--- УМК Сандомирский В.Ю. (29.08.14) переписана с учетом работы с заказами поставщикам
	Если ПустоеЗначение(Док) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	   
	     
	
	//--- УМК Сандомирский В.Ю. (28.08.14) закоментил
	
	//Если Док.Валюта = Гривня Тогда
	//	Предупреждение("Нельзя вводить ГТД на основании документа "+Док.ПредставлениеВида()+" с валютой "+Гривня+" .");
	//	СтатусВозврата(0);
	//	Возврат;     
	//КонецЕсли;	
	
	//... УМК Сандомирский В.Ю. (28.08.14) закоментил
	
	Если ПроверкаОснования(Док) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	 
	
	ЗаполнитьПоУмолчанию();
	Фирма = Док.Фирма;
	глЗаполнитьШапкуНаОсн(Контекст,Док);
	глУстановитьНомер(Контекст);

	Если (Док.Вид() = "ЗаказПоставщику") Тогда
		Контрагент = Док.Поставщик;
		ИзмКонтрагент();
		ВидТорговли = Перечисление.ВидыТорговли.Предоплата;
		ЧтоПриходуем = Перечисление.ЧтоПриходуем.ТМЦ;
	Иначе
		ВидТорговли = Док.ВидТорговли;
	КонецЕсли;
	
	//Валюта = Док.Валюта;
	Если Док.Вид() = "Договор" Тогда
		Договор = Док;			    
		Дата_Курса=ДатаДок;
		Курс_Прежн = Курс;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	ИначеЕсли (Док.Вид() = "ЗаказПоставщику") Тогда
		Дата_курса = ДатаДок;
		Курс_Прежн = Курс;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	Иначе		
		Если глЕстьРеквизитШапки("Дата_Курса",Док.Вид()) = Да Тогда
			Дата_Курса=Док.Дата_Курса;
		Иначе
			Дата_Курса=Док.ДатаДок;
		КонецЕсли;
		Курс = Док.Курс;
		Валюта_Прежн = Валюта;
		Курс_Прежн = Курс;
	КонецЕсли;	
	ВалютаПеревозки = Гривня;
	ИзмВалютаПеревозки();
	СчетКонтрагента = СчетПоКоду("632");
	
	Если Док.Вид() = "ЗаказПоставщику" Тогда
		Попытка
			Док.ПолучитьСтрокуПоНомеру(1);
			МестоХранения = Док.ТМЦ.НГруппа.МХ;
		Исключение
			МестоХранения = глВосстановитьЗначение(Контекст,"СкладМатериалов");
		КонецПопытки;
		//Если ПустоеЗначение(Док.Автор.МестоХранения) = 0 Тогда
		//    МестоХранения = Док.Автор.МестоХранения;
		//КонецЕсли;		    
	КонецЕсли;
	
	Попытка
		ВидНДС = Док.ВидНДС;
	Исключение
		ВидНДС = глВосстановитьЗначение(,"БазНДС");
	КонецПопытки;	
	
	Если Док.Вид() <> "ЗаказПоставщику" Тогда
		КатегорияЦен = Док.КатегорияЦен;
		Если Док.Договор.Выбран() = 1 Тогда
		    Договор = Док.Договор;
		КонецЕсли;
	Иначе
		КатегорияЦен = Константа.ЗакупЦена;
	КонецЕсли;

	Если (Док.Вид()="СчетВходящий") ИЛИ (Док.Вид() = "ЗаказПоставщику") Тогда
		
		Если Док.Вид() = "СчетВходящий" Тогда
			Если Док.ЧтоПриходуем <> Перечисление.ЧтоПриходуем.ТМЦ Тогда
				Предупреждение("Если приходуются "+Док.ЧтоПриходуем+", необходимо использовать документ Приходная накладная (прочие)");
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;	
		КонецЕсли;
		
		Если Док.Вид() <> "ЗаказПоставщику" Тогда
			КатегорияЦен = Док.КатегорияЦен;
			Если Док.Договор.Выбран() = 1 Тогда
			    Договор = Док.Договор;
			КонецЕсли;
			ЧтоПриходуем = Док.ЧтоПриходуем;
			КатегорияЦен = Док.КатегорияЦен;
		Иначе
			КатегорияЦен = Константа.ЗакупЦена;
		КонецЕсли;
		
		
		Если КоличествоСтрок() = 0 Тогда //--- Заполняем табличную часть
			// табл. часть       
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку()=1 Цикл
				НоваяСтрока();
				ТМЦ = Док.ТМЦ;
				Ед = Док.Ед;
				Коэффициент = Док.Коэффициент;
				ЦенаБезНДС 	= Док.ЦенаСНДС;			//--- !!!!!!!!!!!!!!!
				Кво = Док.Кво;
				//глВыч_Суммы_Накл(Контекст,3);
				
				Если Док.Вид() = "ЗаказПоставщику" Тогда
					Склад = Док.Склад;
					Заказ = Док.ТекущийДокумент();
				КонецЕсли;
						
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Попытка
		ВидТорговли = Договор.ВидТорговли;
	Исключение КонецПопытки;	

	Если Найти("Договор,Заказ",Договор.Вид()) = 0 Тогда
		// заказом может быть только договор или заказ
	    Договор = 0;
	КонецЕсли;
КонецПроцедуры           

// ===============================
Процедура ВыборОснования(КонтрагентОснования="")  
	// Процедура по кнопке редактирования основания в документе
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;               
	                                    
	глРасшифровка = СоздатьОбъект("СписокЗначений");		
	Если СокрЛП(КонтрагентОснования) = "Таможня" Тогда
		глРасшифровка.Установить("Контрагент", "Таможня");		
		глРасшифровка.Установить("Договор", "ДоговорТаможни");		
		глРасшифровка.Установить("ДокументОснование", "ДокументОснованиеТаможни");		
	ИначеЕсли СокрЛП(КонтрагентОснования) = "Перевозка" Тогда
		глРасшифровка.Установить("Контрагент", "Перевозчик");		
		глРасшифровка.Установить("Договор", "ДоговорПеревозки");		
		глРасшифровка.Установить("ДокументОснование", "ДокументОснованиеПеревозки");		
	Иначе	
		глРасшифровка.Установить("Контрагент", "Контрагент");		
		глРасшифровка.Установить("Договор", "Договор");		
		глРасшифровка.Установить("ДокументОснование", "ДокументОснование");		
	КонецЕсли;
	
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	глРасшифровка = 0;
	
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ПроверкаОснования(ДокументОснование) = 0 Тогда 
			ДокументОснование = СтарОснование;              		
		КонецЕсли;	
		Если (ДокументОснование <> СтарОснование)
		И (ДокументОснование.Вид() <> "РасходыНаПриобретение") Тогда
			ВводНаОсновании(ДокументОснование);			
		КонецЕсли;	
	КонецЕсли;
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	    
    


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции




спЧтоПриходуем = СоздатьОбъект("СписокЗначений");
спЧтоПриходуем.ДобавитьЗначение(Перечисление.ЧтоПриходуем.ТМЦ);    
спЧтоПриходуем.ДобавитьЗначение(Перечисление.ЧтоПриходуем.ОСиНМАиДрНеобМатАктивы);

// ===============================

