Перем ФиксацияЕсть;
Перем Зрп, сФормат, СтараяФирма;

Перем ТекДокРасчетАванса; //--- УМК Сандомирский В.Ю. (10.12.14)


Перем СтруктИзменений;		//--- УМК Сандомирский В.Ю. (04.09.14)
Перем ИтБух661; //--- УМК Сандомирский В.Ю, (24.06.14) для вычисления уже начисленного по нарядам
Перем СтараяДата;              
Перем НачальнаяДатаДокумента;

//======================================================================
Процедура Заполнить() Далее
Процедура Очистить(Спросить = "Да") Далее			//--- УМК Сандомирский В.Ю. (04.08.14)
Функция ПроверкаДругогоАванса(ТекСотрудник) Далее	//--- УМК Сандомирский В.Ю. (11.12.14)

//======================================================================

//====================================================================== //--- УМК Сандомирский В.Ю. (03.12.14)
Процедура ПриВыбореЗакладки(Ном,Значен)
	
	Если Значен = "Аванс" Тогда //--- УМК Сандомирский В.Ю. (10.12.14) запрет на доступ к закладке "Аванс"
		Если глПользователь.фПривелегииПросмотрТабельЗарплата = 1 Тогда
			Форма.ИспользоватьСлой(Значен+", Общий",2);
		Иначе	
			Форма.ИспользоватьСлой("Основной, Общий",2);
		КонецЕсли;
	Иначе
		Форма.ИспользоватьСлой(Значен+", Общий",2);	
	КонецЕсли;
	
КонецПроцедуры  

//======================================================================
Функция ЕстьПодчиненныйВидРабот()

	ЕстьВидыРабот = "";
	СпрВидыРабот = СоздатьОбъект("Справочник.ВидыРаботСотрудников");
	СпрВидыРабот.ИспользоватьВладельца(Сотрудник.ТекущийЭлемент());
	СпрВидыРабот.ВыбратьЭлементы();
	Пока СпрВидыРабот.ПолучитьЭлемент() = 1 Цикл
		Если СпрВидыРабот.ПометкаУдаления() = 1 Тогда
			Продолжить;	
		КонецЕсли;		
		ЕстьВидыРабот = 1;
	КонецЦикла;
	
	Возврат ЕстьВидыРабот;
	
КонецФункции // ЕстьПодчиненныйВидРабот

// ===============================
Функция УстДоступность()
	Форма.Ч29.Доступность(?(ДатаЧисло(КонМесяца(ДатаДок))>=29, 1, 0));
	Форма.Ч30.Доступность(?(ДатаЧисло(КонМесяца(ДатаДок))>=30, 1, 0));
	Форма.Ч31.Доступность(?(ДатаЧисло(КонМесяца(ДатаДок))>=31, 1, 0));
	Если ФиксацияЕсть = 0 Тогда
		//ФормаРасш = СоздатьОбъект("РасширениеФормы");
		//ФормаРасш.УстановитьФорму(Форма);
		//ФормаРасш.ФиксироватьМногострочнуюЧасть(6);	
		//ФиксацияЕсть = 1;		
	КонецЕсли;
	
		
	Форма.ЧН1.Видимость(фНочныеСмены);
	Форма.ЧН2.Видимость(фНочныеСмены);
	Форма.ЧН3.Видимость(фНочныеСмены);
	Форма.ЧН4.Видимость(фНочныеСмены);
	Форма.ЧН5.Видимость(фНочныеСмены);
	Форма.ЧН6.Видимость(фНочныеСмены);
	Форма.ЧН7.Видимость(фНочныеСмены);
	Форма.ЧН8.Видимость(фНочныеСмены);
	Форма.ЧН9.Видимость(фНочныеСмены);
	Форма.ЧН10.Видимость(фНочныеСмены);
	Форма.ЧН11.Видимость(фНочныеСмены);
	Форма.ЧН12.Видимость(фНочныеСмены);
	Форма.ЧН13.Видимость(фНочныеСмены);
	Форма.ЧН14.Видимость(фНочныеСмены);
	Форма.ЧН15.Видимость(фНочныеСмены);
	Форма.ЧН16.Видимость(фНочныеСмены);
	Форма.ЧН17.Видимость(фНочныеСмены);
	Форма.ЧН18.Видимость(фНочныеСмены);
	Форма.ЧН19.Видимость(фНочныеСмены);
	Форма.ЧН20.Видимость(фНочныеСмены);
	Форма.ЧН21.Видимость(фНочныеСмены);
	Форма.ЧН22.Видимость(фНочныеСмены);
	Форма.ЧН23.Видимость(фНочныеСмены);
	Форма.ЧН24.Видимость(фНочныеСмены);
	Форма.ЧН25.Видимость(фНочныеСмены);
	Форма.ЧН26.Видимость(фНочныеСмены);
	Форма.ЧН27.Видимость(фНочныеСмены);
	Форма.ЧН28.Видимость(фНочныеСмены);
	Форма.ЧН29.Видимость(фНочныеСмены);
	Форма.ЧН30.Видимость(фНочныеСмены);
	Форма.ЧН31.Видимость(фНочныеСмены);
	
	Если НазваниеНабораПрав() = "Администратор" Тогда
		Форма.Ответсвенный.Доступность(1); //--- УМК Сандомирский В.Ю. (08.07.14) изменил (03.10.14)
	Иначе
		Форма.Ответсвенный.Доступность(0);
	КонецЕсли;
	
	// --- УМК Сандомирский В.Ю. (29.05.15) всем можно тыцкать --- ваще Нина просила Николай Владимировичу .... открыл всем
	
	//Если (Ответсвенный <> глПользователь) И (НазваниеНабораПрав() <> "Администратор") Тогда    //--- УМК Сандомирский В.Ю. (03.10.14)   в основоном чтобы Фендак случайно не тыцнула
	//	Форма.кнЗаполнитьВыходныеРабочиеПоГрафику.Доступность(0);
	//	Форма.кнЗаполнитьВыходныеПоГрафику.Доступность(0);
	//	Форма.кнЗаполнитьКвоДнейПоГрафику.Доступность(0);
	//Иначе
	//	Форма.кнЗаполнитьВыходныеРабочиеПоГрафику.Доступность(1);	
	//	Форма.кнЗаполнитьВыходныеПоГрафику.Доступность(1);
	//	Форма.кнЗаполнитьКвоДнейПоГрафику.Доступность(1);
	//КонецЕсли;
	
	Возврат "";
КонецФункции

// ======================================
Процедура ИзмФирма()
	Если СтараяФирма <> Фирма Тогда
		// фирма изменилась
		Если КоличествоСтрок() > 0 Тогда
			Рез = Вопрос("Табличная часть будет очищена!","Да+Нет");
			Если Рез = "Да" Тогда
				УдалитьСтроки();
			ИначеЕсли ПустоеЗначение(СтараяФирма) = 0 Тогда
				// восстановим фирму, которая была выбрана раньше
				Фирма = СтараяФирма;
				глУстановитьНомер(Контекст);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
КонецПроцедуры

// ===============================
Процедура ИзмЧасы(Ном = 0)
	ЧасовПраздники = 0;
	//Если Ном <> 0 Тогда
	//	Атр = ПолучитьАтрибут("Ч"+Ном);
	//	Если Число(Атр) = 0 Тогда
	//		Если СокрЛП(Атр) = "0" Тогда
	//			УстановитьАтрибут("Ч"+Ном, "");
	//		ИначеЕсли (Атр = "") Тогда
	//			Возврат;
	//		Иначе
	//			Атр = ВРЕГ(СокрЛП(Атр));
	//			Если Найти("РС,ВЧ,РН,НУ,РВ,ВД,В,Д,Ч,ТВ,Н,НБ,ДБ,ДО,ВП,ДД,НА,БЗ,НД,НП,ІН,П,ПР,С,ТН,НН,НЗ,ІВ,І,", Атр) = 0 Тогда
	//				Предупреждение("Вы ввели недопустимое значение. Список допустимых значений см. в Табеле форма П5");
	//				УстановитьАтрибут("Ч"+Ном, "");
	//			Иначе
	//				УстановитьАтрибут("Ч"+Ном, Атр);
	//			КонецЕсли;
	//		КонецЕсли;		
	//	КонецЕсли;
	//КонецЕсли;
	
	СписПрДней = СоздатьОбъект("СписокЗначений");
	ПрДней = глПолучитьКвоПрДней(НачМесяца(ДатаДок), КонМесяца(ДатаДок), СписПрДней);
	
	СменВсего 	= 0;	ЧасовВсего 		= 0; 
	СменНочных 	= 0;	ЧасовНочных 	= 0;
	СменДневных = 0;	ЧасовДневных 	= 0;
	
	Для Инд = 1 По 31 Цикл		
		Атр = ПолучитьАтрибут("Ч"+Инд);
		Часов = Число(Атр);
		ЧасовН = Число(ПолучитьАтрибут("ЧН"+Инд));
		ЧасовД = Число(ПолучитьАтрибут("ЧД"+Инд));
		//ПрДень = СписПрДней.Получить(Строка(НачМесяца(ДатаДок) + Инд - 1));
		//Если ПустоеЗначение(ПрДень) = 0 Тогда
		//	ЧасовПраздники = ЧасовПраздники + Часов;
		//КонецЕсли;
			
		
		СменВсего		= СменВсего 	+ Мин(Часов,1);
		СменНочных		= СменНочных 	+ Мин(ЧасовН,1);
		
		Если Врег(СокрЛП(ПолучитьАтрибут("ЧД"+Инд))) = "О" Тогда
			СменДневных 	= СменДневных	+ 1;
		Иначе
			СменДневных 	= СменДневных	+ Мин(ЧасовД,1);
		КонецЕсли;
		
		ЧасовВсего 		= ЧасовВсего 	+ Часов;
		ЧасовНочных 	= ЧасовНочных 	+ ЧасовН;
		ЧасовДневных 	= ЧасовДневных 	+ ЧасовД;
	
	КонецЦикла;
	
КонецПроцедуры

// =============================== //--- УМК Сандомирский В.Ю. (10.10.14) --- копируем тариф из предидущей строки
Процедура ПриРедактированииНовойСтроки()
	ТЗ_СтрокиДокумента = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ_СтрокиДокумента);
	Если ТЗ_СтрокиДокумента.КоличествоСтрок() > 1 Тогда
		ТЗ_СтрокиДокумента.ПолучитьСтрокуПоНомеру(ТЗ_СтрокиДокумента.КоличествоСтрок()-1);
		
		Если ПустоеЗначение(ТЗ_СтрокиДокумента.Тариф) <> 1 Тогда
			//Тариф = ТЗ_СтрокиДокумента.Тариф;
		КонецЕсли;
			
	КонецЕсли;

КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	
	//Если НазваниеНабораПрав() = "Табель" Тогда
	//	СтатусВозврата(0);
	//	Возврат;
	//КонецЕсли;//+ umk Фендак Е.
	
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		
		Если ПустоеЗначение(Ответсвенный) = 0  Тогда //--- УМК Сандомирский В.Ю. (15.07.14) проверка доступа ответсвенный
			
			БлокироватьТабель = 1;
			Если (Ответсвенный.ГруппаПользователя = глПользователь.ГруппаПользователя)
				И (ПустоеЗначение(глПользователь.ГруппаПользователя) = 0) Тогда 
				БлокироватьТабель = 0;
			КонецЕсли;
	
			Если глПользователь.фПривелегииТабель = 1 Тогда
				БлокироватьТабель = 0;
			КонецЕсли;		
			
			Если БлокироватьТабель = 1 Тогда
				Подразделение 	= "";
				Ответсвенный	= "";
				УдалитьСтроки();
			КонецЕсли;
		
		КонецЕсли; //... УМК Сандомирский В.Ю. (15.07.14) проверка доступа ответсвенный
		
		//--- УМК Сандомирский В.Ю. (04.08.14)
		перГрафикТабель = 1;
		Ответсвенный = "";
		
		ДокРасчетАванса = ""; //--- УМК Сандомирский В.Ю. (03.12.14)
		
		ДатаДок = НачМесяца(РабочаяДата());
		Ответ = Вопрос("Очистить табличную часть?","Да+Нет+Отмена");
		Если Ответ = "Отмена" Тогда
			СтатусВозврата(0);
			Возврат;
		ИначеЕсли Ответ = "Да" Тогда
			Очистить("БезВопросов");
		КонецЕсли;
		//... УМК Сандомирский В.Ю. (04.08.14)
		
		ПерАвансПредварительноОкончательно = 1; //--- УМК Сандомирский В.Ю. (06.01.15) --- окончательный аванс не копируем 
		
		Возврат;
	КонецЕсли;
	глПроверкаДатыДок(Контекст,"Ввод нового");
	Фирма = Константа.БазФирма;
	
	перГрафикТабель = 1;
	
	ПерАвансПредварительноОкончательно = 1; //--- УМК Сандомирский В.Ю. (15.12.14)
	
КонецПроцедуры

// ===============================  //--- УМК Сандомирский В.Ю. (*) (05.12.14)
Процедура ПриОткрытии()
	глПроверкаДатыДок(Контекст,"Открытие");
	
	Если ТекущийДокумент().Выбран() <> 0 Тогда //---документ записан
		
		Если ПустоеЗначение(Ответсвенный) = 0  Тогда //--- УМК Сандомирский В.Ю. (09.07.14)
			
			БлокироватьТабель = 1;
				
			Если (Ответсвенный.ГруппаПользователя = глПользователь.ГруппаПользователя)
				И (ПустоеЗначение(глПользователь.ГруппаПользователя) = 0) Тогда 
				БлокироватьТабель = 0;
			КонецЕсли;
	
			Если глПользователь.фПривелегииТабель = 1 Тогда
				БлокироватьТабель = 0;
			КонецЕсли;		
		    
			Если НазваниеНабораПрав() = "Администратор"Тогда
				БлокироватьТабель = 0;
			КонецЕсли;
						
			Если БлокироватьТабель = 1 Тогда
				
				СтатусВозврата(0);
				Возврат;
				
			КонецЕсли;
		
		КонецЕсли;

	КонецЕсли;
	
	ПриЗаписиПерепроводить(1);
	СтараяДата = ДатаДок;
	НачальнаяДатаДокумента = ДатаДок;
	//--- УМК Сандомирский В.Ю, ---------------------------- 06.06.14
	Если перГрафикТабель = 0 Тогда
		перГрафикТабель = 1;
	КонецЕсли;
	
	Если перГрафикТабель = 1 Тогда
		перФормаТабельГрафик = 1;	
	ИначеЕсли перГрафикТабель = 2 Тогда
		перФормаТабельГрафик = 2;
	ИначеЕсли перГрафикТабель = 3 Тогда
		перФормаТабельГрафик = 3;
	КонецЕсли;
	
	Если ПерАвансПредварительноОкончательно = 0 Тогда //--- УМК Сандомирский В.Ю. (15.12.14)
		ПерАвансПредварительноОкончательно = 1;
	КонецЕсли;
	
	Если ПерАвансПредварительноОкончательно = 1 Тогда //--- УМК Сандомирский В.Ю. (15.12.14)
		перАвансПредварОкончат = 1;	
	ИначеЕсли ПерАвансПредварительноОкончательно = 2 Тогда
		перАвансПредварОкончат = 2;
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю, (08.07.14) при открытии из З\П позиционируемся на строчку с сотрудником
	Если ТипЗначенияСтр(Форма.Параметр)="Справочник" Тогда
		ПереданныйПараметромСотрудник = Форма.Параметр; 
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если Сотрудник = ПереданныйПараметромСотрудник Тогда
				АктивизироватьСтроку();
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ТипЗначенияСтр(Форма.Параметр) = "Число" Тогда	
		Если ПолучитьСтрокуПоНомеру(Форма.Параметр) = 1 Тогда
		    АктивизироватьСтроку();
		КонецЕсли;
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю. (09.07.14)
	Если ТекущийДокумент().Выбран() <> 0   Тогда //--- Саохраненный
		Если (глПользователь.фПривелегииТабель <>  1) И (Ответсвенный.ГруппаПользователя <> глПользователь.ГруппаПользователя) И (НазваниеНабораПрав()<>"Табель") Тогда// добавили Табель Фендак Е. + umk
				
			Форма.Тариф.Доступность(0);				//--- УМК Сандомирский В.Ю. (01.12.14)
			Форма.РабочихСменГрафик.Доступность(0); //--- УМК Сандомирский В.Ю. (01.12.14)
			
			Форма.СменВсего.Доступность(0);
			Форма.ЧасовВсего.Доступность(0);
			Форма.СменДневных.Доступность(0);
			Форма.ЧасовДневных .Доступность(0);
			Форма.СменНочных.Доступность(0);
			Форма.ЧасовНочных.Доступность(0);
			
			Форма.Ч1.Доступность(0);
			Форма.Ч2.Доступность(0);
			Форма.Ч3.Доступность(0);
			Форма.Ч4.Доступность(0);
			Форма.Ч5.Доступность(0);
			Форма.Ч6.Доступность(0);
			Форма.Ч7.Доступность(0);
			Форма.Ч8.Доступность(0);
			Форма.Ч8.Доступность(0);
			Форма.Ч9.Доступность(0);
			Форма.Ч10.Доступность(0);
			Форма.Ч11.Доступность(0);
			Форма.Ч12.Доступность(0);
			Форма.Ч13.Доступность(0);
			Форма.Ч14.Доступность(0);
			Форма.Ч15.Доступность(0);
			Форма.Ч16.Доступность(0);
			Форма.Ч17.Доступность(0);
			Форма.Ч18.Доступность(0);
			Форма.Ч19.Доступность(0);
			Форма.Ч20.Доступность(0);
			Форма.Ч21.Доступность(0);
			Форма.Ч22.Доступность(0);
			Форма.Ч23.Доступность(0);
			Форма.Ч24.Доступность(0);
			Форма.Ч25.Доступность(0);
			Форма.Ч26.Доступность(0);
			Форма.Ч27.Доступность(0);
			Форма.Ч28.Доступность(0);
			Форма.Ч29.Доступность(0);
			Форма.Ч30.Доступность(0);
			Форма.Ч31.Доступность(0);
			
			Форма.ЧН1.Доступность(0);
			Форма.ЧН2.Доступность(0);
			Форма.ЧН3.Доступность(0);
			Форма.ЧН4.Доступность(0);
			Форма.ЧН5.Доступность(0);
			Форма.ЧН6.Доступность(0);
			Форма.ЧН7.Доступность(0);
			Форма.ЧН8.Доступность(0);
			Форма.ЧН8.Доступность(0);
			Форма.ЧН9.Доступность(0);
			Форма.ЧН10.Доступность(0);
			Форма.ЧН11.Доступность(0);
			Форма.ЧН12.Доступность(0);
			Форма.ЧН13.Доступность(0);
			Форма.ЧН15.Доступность(0);
			Форма.ЧН16.Доступность(0);
			Форма.ЧН17.Доступность(0);
			Форма.ЧН18.Доступность(0);
			Форма.ЧН19.Доступность(0);
			Форма.ЧН20.Доступность(0);
			Форма.ЧН21.Доступность(0);
			Форма.ЧН22.Доступность(0);
			Форма.ЧН23.Доступность(0);
			Форма.ЧН24.Доступность(0);
			Форма.ЧН25.Доступность(0);
			Форма.ЧН26.Доступность(0);
			Форма.ЧН27.Доступность(0);
			Форма.ЧН28.Доступность(0);
			Форма.ЧН29.Доступность(0);
			Форма.ЧН30.Доступность(0);
			Форма.ЧН31.Доступность(0);
			
			Форма.ЧД1.Доступность(0);
			Форма.ЧД2.Доступность(0);
			Форма.ЧД3.Доступность(0);
			Форма.ЧД4.Доступность(0);
			Форма.ЧД5.Доступность(0);
			Форма.ЧД6.Доступность(0);
			Форма.ЧД7.Доступность(0);
			Форма.ЧД8.Доступность(0);
			Форма.ЧД8.Доступность(0);
			Форма.ЧД9.Доступность(0);
			Форма.ЧД10.Доступность(0);
			Форма.ЧД11.Доступность(0);
			Форма.ЧД12.Доступность(0);
			Форма.ЧД13.Доступность(0);
			Форма.ЧД14.Доступность(0);
			Форма.ЧД15.Доступность(0);
			Форма.ЧД16.Доступность(0);
			Форма.ЧД17.Доступность(0);
			Форма.ЧД18.Доступность(0);
			Форма.ЧД19.Доступность(0);
			Форма.ЧД20.Доступность(0);
			Форма.ЧД21.Доступность(0);
			Форма.ЧД22.Доступность(0);
			Форма.ЧД23.Доступность(0);
			Форма.ЧД24.Доступность(0);
			Форма.ЧД25.Доступность(0);
			Форма.ЧД26.Доступность(0);
			Форма.ЧД27.Доступность(0);
			Форма.ЧД28.Доступность(0);
			Форма.ЧД29.Доступность(0);
			Форма.ЧД30.Доступность(0);
			Форма.ЧД31.Доступность(0);
		
		КонецЕсли;	
	КонецЕсли;	
	
	СтрокаКолонокИсключений = "СменВсего,ЧасовВсего"; 
	
	Для Ном = 1 По 31 Цикл	//--- УМК Сандомирский В.Ю. (04.09.14) проверяем у окладников есть ли пропуски по данным табеля по сравнению с записями ответсвенного		
		СтрокаКолонокИсключений =  СтрокаКолонокИсключений + "," + "Ч"+Ном;		   		 
	КонецЦикла;
	
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений,СтрокаКолонокИсключений); //--- УМК Сандомирский В.Ю. (04.09.14)
	
	//--- УМК Сандомирский В.Ю. (03.12.14)
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Аванс","Расчет аванса");
	Форма.ИспользоватьСлой("Основной,Общий",2);
	
	//--- заполняем таблицу авансов
	ТабАвансы.НоваяКолонка("FormEx_ПланРаскраски");
	ТабАвансы.НоваяКолонка("Сотрудник",			"Справочник.Сотрудники",,,"Сотрудник",20);
	ТабАвансы.НоваяКолонка("ОтработаноДней", 	"Число",2,,"Дней"            	,3);
	ТабАвансы.НоваяКолонка("ОкладСумма",		"Число",14,2,"Оклад"         	,10);
	ТабАвансы.НоваяКолонка("ТарифНаименование",	"Справочник.УМК_ТарифыНаВидыРабот",,,"Вид тарифа",12);	
	ТабАвансы.НоваяКолонка("ОтработаноЧасов", 	"Число",3,,"Часов"           	,4);
	ТабАвансы.НоваяКолонка("ЧасовойТариф",	"Число",14,2,"Часовой тариф" 		,10);
	ТабАвансы.НоваяКолонка("СдельныйТарифСумма","Число",14,2,"Сдельный тариф"	,10);
	ТабАвансы.НоваяКолонка("БылАванс",			"Число",1,,"Аванс был"			,2);
	ТабАвансы.НоваяКолонка("Предварительно",	"Число",14,2,"Предварительно"	,10);
	ТабАвансы.НоваяКолонка("Окончательно",		"Число",14,2,"Окончательно"  	,10);
	ТабАвансы.НоваяКолонка("Разница",			"Число",14,2,"Разница"       	,10);
	ТабАвансы.НоваяКолонка("РучнаяКорректировка","Число",1,,"Руч."       		,2);
	
	ТабАвансы.ВидимостьКолонки("FormEx_ПланРаскраски",0);
	ТабАвансы.ВидимостьКолонки("ОтработаноДней",0);
	ТабАвансы.ВыводитьПиктограммы("БылАванс");
	ТабАвансы.ВыводитьПиктограммы("РучнаяКорректировка");
	
	//ТабАвансы.НоваяКолонка("БазаРасчета",		"Перечисление.УМК_БазыРасчетаЗП",,,"База расчета");
	
	ТекДокРасчетАванса = СоздатьОбъект("Документ.УМК_РасчетАванса");		//--- УМК Сандомирский В.Ю. (11.12.14) далее используется для поиска в других (табельных авансов)
	
	Если ПустоеЗначение(ДокРасчетАванса) <> 1 Тогда
		ТабАвансы.УдалитьСтроки();
		ДокРасчетАванса.ВыбратьСтроки();
		Пока ДокРасчетАванса.ПолучитьСтроку() = 1 Цикл
			
			Если ПустоеЗначение(ДокРасчетАванса.Сотрудник) = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			ТабАвансы.НоваяСтрока();
					
			ТабАвансы.Сотрудник 			= ДокРасчетАванса.Сотрудник;
			ТабАвансы.БылАванс 				= ПроверкаДругогоАванса(ДокРасчетАванса.Сотрудник); //--- УМК Сандомирский В.Ю. (11.12.14)
			ТабАвансы.ОтработаноДней		= ДокРасчетАванса.ОтработаноДней;
			ТабАвансы.ОкладСумма			= ДокРасчетАванса.ОкладСумма;	
			ТабАвансы.ТарифНаименование		= ДокРасчетАванса.ТарифНаименование;
			ТабАвансы.ОтработаноЧасов		= ДокРасчетАванса.ОтработаноЧасов;
			ТабАвансы.ЧасовойТариф 			= ДокРасчетАванса.ЧасовойТариф;  	
			ТабАвансы.СдельныйТарифСумма	= ДокРасчетАванса.СдельныйТарифСумма;	
			ТабАвансы.Предварительно		= ДокРасчетАванса.Предварительно;
			ТабАвансы.Окончательно			= ДокРасчетАванса.Окончательно;
			ТабАвансы.Разница				= ТабАвансы.Предварительно - ТабАвансы.Окончательно;
			ТабАвансы.РучнаяКорректировка 	= ДокРасчетАванса.РучнаяКорректировка;
			
			Если ТабАвансы.Разница < 0 Тогда
				ТабАвансы.FormEx_ПланРаскраски = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])()()()()()()()()(BRUSH["+глПолучитьЦвет(255,130,130)+"])";
			Иначе
				ТабАвансы.FormEx_ПланРаскраски = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])";
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	//... УМК Сандомирский В.Ю. (03.12.14)
	
КонецПроцедуры //--- При открытии
    
// =============================== //--- УМК Сандомирский В.Ю. (*) (22.12.14)
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	
	Если ПустоеЗначение(Ответсвенный) = 1 Тогда
		//--- Проверить принадлежность Ответсвенного к группе
		Если ПустоеЗначение(глПользователь.ГруппаПользователя) = 1 Тогда
			Сообщить(" у пользователя " + глПользователь + " не задана группа пользователя - обратитесь к администратору 1С");
		Иначе	
			Ответсвенный = глПользователь;
		КонецЕсли;
		
	КонецЕсли;
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю. (04.09.14) добавил колонки таблицы исключаемые из проверки						
	СтрокаРеквизитовШапки = "Примечание,";
	
	СтрокаКолонокИсключений = "СменВсего,ЧасовВсего"; 
	
	Для Ном = 1 По 31 Цикл	//--- УМК Сандомирский В.Ю. (04.09.14) проверяем у окладников есть ли пропуски по данным табеля по сравнению с записями ответсвенного		
		СтрокаКолонокИсключений =  СтрокаКолонокИсключений + "," + "Ч"+Ном;		   		 
	КонецЦикла;
	
	Если глЕстьИзменения(Контекст, СтруктИзменений, СтрокаРеквизитовШапки,СтрокаКолонокИсключений) = 1 Тогда	
		
		Если (глПользователь.Наименование = "Фендак") И (Ответсвенный.Наименование <> "Фендак") Тогда //--- УМК Сандомирский В.Ю. 
			
			// --- Значит Фендак в чужом табеле (путь делает что хочет в автор мы ниче не пишем) 
			
		Иначе
			
			Автор = глПользователь;			
			
		КонецЕсли;
		
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю. (08.07.14) проверим "временных сотрудников" те что в примечании
	фЕстьВременныеСотрудники = 0;
	фЕстьБезОкладаТарифа     = 0;
	фЕстьСотрудникиБезДанныхПропусков = 0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если (ПустоеЗначение(Сотрудник) = 1) И (ПустоеЗначение(ПримечаниеСтрока) <> 1) Тогда
			фЕстьВременныеСотрудники = 1;
		КонецЕсли;
		
		Если (Сотрудник.Оклад.Получить(ДатаДок) = 0) 	//--- УМК Сандомирский В.Ю. (05.08.14)
			//И (Сотрудник.Тариф.Получить(ДатаДок) = 0 ) 
			И (ПустоеЗначение(Сотрудник.ВидТарифа.Получить(КонМесяца(ДатаДок)))=1)
			И (ЕстьПодчиненныйВидРабот() = 0)
			И (КонМесяца(Сотрудник.ДатаПриема) = КонМесяца(ДатаДок)) Тогда	
				фЕстьБезОкладаТарифа     = 1;
		КонецЕсли;
			
		Если (СменВсего = 0) И (Сотрудник.Выбран() = 1) Тогда					//--- УМК Сандомирский В.Ю. (06.08.14) 
		    фЕстьСотрудникиБезДанныхПропусков = 1;
		КонецЕсли;
				
	КонецЦикла;
	
	Если КонМесяца(ДатаДок) < КонМесяца(РабочаяДата()) Тогда //--- УМК Сандомирский В.Ю. (25.07.14) табель сохраняют в следующем смесяце соответсвенно он может быть окончательным о чем сообщавем
		Если перГрафикТабель = 1 Тогда //--- Табель		
			Предупреждение("Переведите табель в режим окончательный !!!");
			Сообщить("Месяц окончен. Переведите табель в режим окончательный !!!");
		КонецЕсли;
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю. (24.07.14) проверим графики в окончательном табеле
	ТекстОшибок = "";
	ТекстОшибокНесоответсвия = "";
	Если перГрафикТабель = 3 Тогда //--- окончательный		
		фОшибкиВОкончательномТабеле = 0;
		фОшибкиНесоответсвияОкончательномТабеле = 0;
		фНеЗаполненГрафик = 0;
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
		
			Если (Сотрудник.Оклад.Получить(ДатаДок) > 0) И (РабочихСменГрафик = 0) Тогда
				фОшибкиВОкончательномТабеле = 1;
				фНеЗаполненГрафик = 1;
				ТекОшибка = "В строке № " + НомерСтроки + " " + Сотрудник +" не заполнен график";
				Сообщить(ТекОшибка);
				ТекстОшибок  = ТекстОшибок + ТекОшибка + глПравильныйСимволПереноса;
			ИначеЕсли (Сотрудник.Оклад.Получить(ДатаДок) > 0) И (РабочихСменГрафик <> СменДневных) Тогда
				фОшибкиВОкончательномТабеле = 1;
				ТекОшибка = "В строке № " + НомерСтроки + " " + Сотрудник + " график не соответсвует отработаному времени ";
				Сообщить(ТекОшибка);
				ТекстОшибок  = ТекстОшибок + ТекОшибка + глПравильныйСимволПереноса;
			КонецЕсли;
			
			//--- УМК Сандомирский В.Ю, (16.12.14) проверка сответсвия тарифов в сотруднике и в строке табеля
			
			ТекТариф = Сотрудник.ВидТарифа.Получить(ДатаДок);
			Если ПустоеЗначение(ТекТариф) <> 1 Тогда //--- у сотрудников с видом тарифа в карточке проверим что стоит в тарифе в табличной части
				Если ТекТариф <> Тариф Тогда
					Сообщить("строка " + НомерСтроки + " у сотрудника " + Сотрудник + " тариф - " + Тариф + " не совпадает с тарифом из карточки - " + ТекТариф,"!");
				КонецЕсли;
			КонецЕсли;
				
			//... УМК Сандомирский В.Ю, (16.12.14)
			
			
			Для Ном = 1 По 31 Цикл	//--- УМК Сандомирский В.Ю. (13.08.14) проверяем у окладников есть ли пропуски по данным табеля по сравнению с записями ответсвенного		
		   		ЧасыПропуск =  Число(ПолучитьАтрибут("Ч"+Ном));
		   		ЧасыОтветсвенный = Число(ПолучитьАтрибут("ЧД"+Ном));
		   		Если (ЧасыПропуск = 0) И (ЧасыОтветсвенный > 0) Тогда
		   			фОшибкиНесоответсвияОкончательномТабеле = 1;
		   		    ТекОшибка = "В строке № " + НомерСтроки + " " + Сотрудник + " не соотвтсвие данных пропусков и данных табеля на дату " + Ном;
		   			// Сообщить(ТекОшибка); //--- УМК Сандомирский В.Ю. (05.12.14) закоментил
 					ТекстОшибокНесоответсвия   = ТекстОшибокНесоответсвия  + ТекОшибка + глПравильныйСимволПереноса;
		   		КонецЕсли;
		   		 
	   		КонецЦикла;
 					
		КонецЦикла;
		
		Если фОшибкиВОкончательномТабеле = 1 Тогда
			Предупреждение(ТекстОшибок);			
		КонецЕсли;
		
		Если фОшибкиНесоответсвияОкончательномТабеле = 1 Тогда
			//Предупреждение(ТекстОшибокНесоответсвия);			//--- УМК Сандомирский В.Ю. (05.09.14) убрал слишком много цыфар 		
		КонецЕсли;
		
		Если фНеЗаполненГрафик = 1 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	//--- Проверка дублей строк (ньюанс почему не использовал стандартную процедуру)
	ТЗ_Сотрудники = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Сотрудники.НоваяКолонка("Сотрудник","Справочник.Сотрудники");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Сотрудник.Выбран() = 1 Тогда
			ТЗ_Сотрудники.НоваяСтрока();
			ТЗ_Сотрудники.Сотрудник = Сотрудник;	
		КонецЕсли;	
	КонецЦикла;
	
	ТЗ_Сотрудники.Свернуть("Сотрудник","");
	
	ТекстСообщения = "";
	
	ТЗ_Сотрудники.ВыбратьСтроки();
	Пока ТЗ_Сотрудники.ПолучитьСтроку() = 1 Цикл
		
		Нашли = 0;
		ТекСтрока = "";
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Сотрудник = ТЗ_Сотрудники.Сотрудник Тогда
				Нашли = Нашли + 1;
				ТекСтрока = ТекСтрока + " строка № " + НомерСтроки; 
			КонецЕсли;
		КонецЦикла;
		
		Если Нашли > 1 Тогда
			ТекстСообщения = ТекстСообщения + " Задвоен сотрудник " + ТЗ_Сотрудники.Сотрудник + " " + ТекСтрока + глПравильныйСимволПереноса;
		КонецЕсли;
				
	КонецЦикла;
	
	Если ТекстСообщения <> "" Тогда
		
		Предупреждение(ТекстСообщения);
		
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю. (03.12.14) Сохраняем  расчет аванса АВАНСЫ
	ДокРасчетАвансаОбъект = СоздатьОбъект("Документ.УМК_РасчетАванса");
	Если ПустоеЗначение(ДокРасчетАванса) <> 1 Тогда
		ДокРасчетАвансаОбъект.НайтиДокумент(ДокРасчетАванса);
		Если ДокРасчетАвансаОбъект.ПометкаУдаления() = 1 Тогда
			ДокРасчетАвансаОбъект.СнятьПометкуУдаления();
		КонецЕсли;
		ДокРасчетАвансаОбъект.УдалитьСтроки();
		ДокРасчетАвансаОбъект.ДатаДок = ДатаДок;
		глУстановитьНомер(ДокРасчетАвансаОбъект);
	Иначе	
		ДокРасчетАвансаОбъект.Новый();		
		ДокРасчетАвансаОбъект.ДатаДок = ДатаДок;
		глУстановитьНомер(ДокРасчетАвансаОбъект);
	КонецЕсли;
	
	ДокРасчетАвансаОбъект.ПерАвансПредварительноОкончательно = ПерАвансПредварительноОкончательно; //--- УМК Сандомирский В.Ю, (15.12.14)
	ДокРасчетАвансаОбъект.ДатаРасчетаАванса                  = ДокРасчетАвансаОбъект;			   //--- УМК Сандомирский В.Ю, (15.12.14)

	СписУже = СоздатьОбъект("СписокЗначений");
	// Цикл по строкам ТабАвансы
	ТабАвансы.ВыбратьСтроки();
	Пока ТабАвансы.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТабАвансы.Сотрудник) = 1 Тогда
			Продолжить;
		КонецЕсли;
		Если СписУже.НайтиЗначение(ТабАвансы.Сотрудник) <> 0 Тогда
			Сообщить("Сотрудник: " + Строка(ТабАвансы.Сотрудник) + " присутствует в таблице авансов больше одного раза");
			Продолжить;
		КонецЕсли;
		
		ДокРасчетАвансаОбъект.НоваяСтрока();		
		ДокРасчетАвансаОбъект.Сотрудник 			= ТабАвансы.Сотрудник;
		ДокРасчетАвансаОбъект.ОтработаноДней 		= ТабАвансы.ОтработаноДней;
		ДокРасчетАвансаОбъект.ОкладСумма 			= ТабАвансы.ОкладСумма;
		ДокРасчетАвансаОбъект.ТарифНаименование 	= ТабАвансы.ТарифНаименование;
		ДокРасчетАвансаОбъект.ОтработаноЧасов 		= ТабАвансы.ОтработаноЧасов;
		ДокРасчетАвансаОбъект.ЧасовойТариф 			= ТабАвансы.ЧасовойТариф; 
		ДокРасчетАвансаОбъект.СдельныйТарифСумма	= ТабАвансы.СдельныйТарифСумма;
		ДокРасчетАвансаОбъект.Предварительно 		= ТабАвансы.Предварительно;
		ДокРасчетАвансаОбъект.Окончательно 			= ТабАвансы.Окончательно;
		ДокРасчетАвансаОбъект.РучнаяКорректировка   = ТабАвансы.РучнаяКорректировка;
		
		Если (ПроцентАвансаОкладникам = 0) И (ПроцентАвансаОтЗаработанного = 0) 
			И (МинусАванс = 0) И (ОкруглитьАванс = 0) Тогда
			ДокРасчетАвансаОбъект.ПримечаниеСтроки      = "Фиксированной суммой";
		Иначе
			ДокРасчетАвансаОбъект.ПримечаниеСтроки      = "окл.%" + ПроцентАвансаОкладникам + " и табель на "
													+ ДатаРасчетаАванса  + "(" + ПроцентАвансаОтЗаработанного + "%)" + " - сум. "
													+ МинусАванс + " окр. до:" + ОкруглитьАванс;				
		КонецЕсли;
		
		Если ТабАвансы.Разница < 0 Тогда
			Сообщить("У сотрудника " + ТабАвансы.Сотрудник + " в расчете Аванса окончательній расчет превышает предварительный !","!!!");
		КонецЕсли;
		СписУже.ДобавитьЗначение(ТабАвансы.Сотрудник);	
	КонецЦикла;	
		
	ДокРасчетАвансаОбъект.Записать();

	ДокРасчетАванса = ДокРасчетАвансаОбъект.ТекущийДокумент();
	
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()
	Зрп = 0;
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв, ФлагСтандОбр)
	
	//Если НазваниеНабораПрав() = "Табель" Тогда   //=== УМК Сандомирский В.Ю. (07.07.14) пока не используем этот запрет
	//	
	//	Для Инд = 1 По 31 Цикл
	//		Если Рекв = ("Ч"+Инд) Тогда
	//			СтатусВозврата(0);
	//			Возврат;
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//	Если Рекв = "Сотрудник" Тогда
	//		СтатусВозврата(0);
	//		Возврат;
	//	КонецЕсли;
	//	
	//КонецЕсли;

	Если Рекв = "Сотрудник" Тогда	//--- УМК Сандомирский В.Ю. (07.10.14) //--- открівать папку сотрудников выбранную группу в шапке табеля 
 		Если Сотрудник.Выбран() = 1 Тогда
			ФлагСтандОбр = 1;
		Иначе
			ТекПараметр = Подразделение;
			ОткрытьПодбор("Справочник.Сотрудники","ДляВыбора",ТекПараметр,0); 
			ФлагСтандОбр = 0;	
		КонецЕсли;	
	КонецЕсли;	
	
	Если Рекв = "Тариф" Тогда
		глВыборИзТабеля = 1;
	КонецЕсли;	
		
КонецПроцедуры

// =============================== УМК Сандомирский В.Ю. (26.06.14)
Процедура Очистить(Спросить = "Да")
	
	Если Спросить = "Да" Тогда
		Если Вопрос("Очистить табличную часть ?","Да+Нет") = "Нет" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
    ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Для Инд = 1 По 31 Цикл			
	   		УстановитьАтрибут("Ч"+Инд,"");		
	   		УстановитьАтрибут("ЧН"+Инд,"");
	   		УстановитьАтрибут("ЧД"+Инд,"");
   		КонецЦикла;	
	   	СменВсего 	= 0;	ЧасовВсего 		= 0; 
		СменНочных 	= 0;	ЧасовНочных 	= 0;
		СменДневных = 0;	ЧасовДневных 	= 0;
	КонецЦикла;	
	
КонецПроцедуры

// ===============================
Функция ПолучитьЧасы(НДата, ДокПЛ)
	Если ДокПЛ.ДатаПриезда = ДокПЛ.ДатаВыезда Тогда
		ЧКон = Число(Лев(ДокПЛ.ВремяПриезда,2)) + Число(Прав(СокрЛП(ДокПЛ.ВремяПриезда),2)) / 60;
		ЧНач = Число(Лев(ДокПЛ.ВремяВыезда,2)) - Число(Прав(СокрЛП(ДокПЛ.ВремяВыезда),2)) / 60;
		Возврат ЧКон - ЧНач;
	ИначеЕсли НДата = ДокПЛ.ДатаВыезда Тогда
		Возврат 24 - Число(Лев(ДокПЛ.ВремяВыезда,2)) - Число(Прав(СокрЛП(ДокПЛ.ВремяВыезда),2)) / 60;
	ИначеЕсли НДата = ДокПЛ.ДатаПриезда Тогда
		Возврат Число(Лев(ДокПЛ.ВремяПриезда,2)) + Число(Прав(СокрЛП(ДокПЛ.ВремяПриезда),2)) / 60;
	Иначе
		Возврат 24;		
	КонецЕсли;	
КонецФункции

// ===============================
Функция ПолучитьТЗПоПутевым(Сотруд = "")
	ТЗП = СоздатьОбъект("ТаблицаЗначений");
	ТЗП.НоваяКолонка("Сотрудник", "Справочник.Сотрудники");
	ТЗП.НоваяКолонка("Дата", "Дата");
	ТЗП.НоваяКолонка("Часов", "Число");
	
	ДокПЛ = СоздатьОбъект("Документ.Путевойлист");
	ДокПЛ.УстановитьФильтр(1,0);
	ДокПЛ.ВыбратьДокументы(НачМесяца(ДатаДок), КонМесяца(ДатаДок));
	Пока ДокПЛ.ПолучитьДокумент() = 1 Цикл
		Если Сотруд <> ""  Тогда
			Если (ДокПЛ.Водитель <> Сотруд) И (ДокПЛ.Водитель2 <> Сотруд) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
			
		НДата = ДокПЛ.ДатаВыезда;
		Пока НДата <= ДокПЛ.ДатаПриезда Цикл
			ТЗП.НоваяСтрока();
			ТЗП.Сотрудник = ДокПЛ.Водитель;
			ТЗП.Дата = НДата;
			ТЗП.Часов = ПолучитьЧасы(НДата, ДокПЛ);
			Если ПустоеЗначение(ДокПЛ.Водитель2) = 0 Тогда
				ТЗП.НоваяСтрока();
				ТЗП.Сотрудник = ДокПЛ.Водитель2;
				ТЗП.Дата = НДата;
				ТЗП.Часов = ПолучитьЧасы(НДата, ДокПЛ);
			КонецЕсли;
			НДата = НДата + 1;
		КонецЦикла;
	КонецЦикла;
	
	ТЗП.Свернуть("Сотрудник,Дата", "Часов");
	ТЗП.Сортировать("Сотрудник,Дата");	
	Возврат ТЗП;
КонецФункции

// ===============================
Процедура Заполнить()
	Если КоличествоСтрок() > 0 Тогда
		Отв = Вопрос("Удалить строки?", "Да+Нет+Отмена");
		Если Отв = "Отмена" Тогда
			Возврат;
		ИначеЕсли Отв = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	Сотр = СоздатьОбъект("Справочник.Сотрудники");
	Если Подразделение.Выбран() = 1 Тогда
		Сотр.ИспользоватьРодителя(Подразделение);
	КонецЕсли;
	
	Сотр.ВыбратьЭлементы(1);
	Пока Сотр.ПолучитьЭлемент() = 1 Цикл
		Если (Сотр.ЭтоГруппа() = 1) или (Сотр.Фирма <> Фирма) Тогда
			Продолжить;
		КонецЕсли;
		Если Сотр.ДатаУвольнения <> Дата(0) Тогда
			Если Сотр.ДатаУвольнения < НачМесяца(ДатаДок) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Если Сотр.ДатаПриема <> Дата(0) Тогда
			Если Сотр.ДатаПриема > КонМесяца(ДатаДок) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		НоваяСтрока();
		Сотрудник = Сотр.ТекущийЭлемент();
		
	КонецЦикла;
КонецПроцедуры

// ===============================
Функция ФорматПок(Чсл) Экспорт
	Возврат Формат(Чсл,сФормат);
КонецФункции

// ===============================
Функция ФорматДни(Чсл) Экспорт
	Атр = СокрЛП(ПолучитьАтрибут("Ч"+Чсл));
	Чс = Число(Атр);
	Если Чс <> 0 Тогда
		Возврат "Р";
	КонецЕсли;

	Если (Атр = "") или (Атр = "0") Тогда
		Возврат "-";
	ИначеЕсли Атр = "Б" Тогда
		Возврат "ТН";
	Иначе
		Возврат Атр;
	КонецЕсли;
КонецФункции

Функция ПолучитьКвоДней(Код, ТЗ)
	Стр = 0;
	Если ТЗ.НайтиЗначение(Код, Стр, "Код") = 1 Тогда
		Возврат ТЗ.ПолучитьЗначение(Стр, "Дней");
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю, (06.06.2014)
Процедура ПечатьДанныхПропусков()
	КонецПериода = КонМесяца(ДатаДок);
	НачПериода = НачМесяца(ДатаДок);
	
	Расшифровка = СоздатьОбъект( "СписокЗначений" );
	Расшифровка.Установить("Дата",КонецПериода);
	Расшифровка.Установить("Фирма",Фирма);
	Расшифровка.Установить("ПолнНаименование","");
	Расшифровка.Установить("ЕДРПОУ","");
	глПолучитьДанные(Расшифровка);
	Организация = Расшифровка.Получить("ПолнНаименование");
	
	глУстПропись(Гривня, "У");
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Пропуска");
	Таб.ПараметрыСтраницы(2);
	
	ДниЗаМесяцВсего = 0;
	ЧасыЗаМесяцВсего = 0;
	НочныеВсего = 0;
	
	Таб.ВывестиСекцию("Шапка|Основная");
	ТекДень = НачМесяца(ДатаДок); 
	
	Для День = 1 По 31 Цикл
	
		ПечДень = День;
		ДенНед = Лев(Строка(Формат(ТекДень,"ДНННН")),3) + ".";
		Таб.ПрисоединитьСекцию("Шапка|День");
		Если фНочныеСмены = 1 Тогда
			Таб.ПрисоединитьСекцию("Шапка|Ночь");
		КонецЕсли;
		ТекДень = ТекДень + 1;
		
	КонецЦикла;
	
	
	Таб.ПрисоединитьСекцию("Шапка|Итоги<");
	Если фНочныеСмены = 1 Тогда
		Таб.ПрисоединитьСекцию("Шапка|ИтогиНочь");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка|Итоги>");
	
	ВыбратьСтроки();
	Ном = 1;
	Пока ПолучитьСтроку() = 1 Цикл
	
		Если ПустоеЗначение(Сотрудник) = 1 Тогда	
			ПечСотрудник = СокрЛП(ПримечаниеСтрока);		
		Иначе		
			ПечСотрудник = глУкр(глФИО(Сотрудник,1));		
		КонецЕсли;	
		
		Должность = Сотрудник.Должность.Получить(ДатаДок);
		Пол = Сотрудник.Пол;
			
		Таб.ВывестиСекцию("Строка|Основная");
		
		// из документа
		ТекДень = НачМесяца(ДатаДок);
		
		СтрокаПарсить = ВремяСтрокой; //--- пропуска
		
		
		Для День = 1 По 31 Цикл
	
			ПозицияШтрих = Найти(СтрокаПарсить,":");
			ПечМинутыПропуск = "";
			Если ПозицияШтрих > 0 Тогда
				ПечМинутыПропуск = Число(Сред(СтрокаПарсить,ПозицияШтрих+1,1)) * 10;
			   	ПечЧасыПропуск   = Число(Сред(СтрокаПарсить,ПозицияШтрих - 2,2));
			   	СтрокаПарсить = Сред(СтрокаПарсить,ПозицияШтрих+1);
			КонецЕсли;
			
			
			Атр1 = ПолучитьАтрибут("ЧД"+День);
			Атр2 = ПолучитьАтрибут("ЧН"+День);
			Атр3 = ПолучитьАтрибут("Ч"+День);
			
			ПечЧасы 		= СокрЛП(Атр1);
			ПечЧасыНочь 	= СокрЛП(Атр2);
			//ПечЧасыПропуск 	= СокрЛП(Атр3);
			ПечРазница		= Число(Атр3) - Число(Атр1) - Число(Атр2);
				
			
			Если НомерДняНедели(ТекДень) = 5 Тогда  //--- Пятница 
				
				Таб.ПрисоединитьСекцию("Пятница|День");
				
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Пятница|Ночь");
				КонецЕсли;
				
			ИначеЕсли НомерДняНедели(ТекДень) = 6 Тогда //--- Суббота
				Таб.ПрисоединитьСекцию("Выходной|День");
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Выходной|Ночь");
				КонецЕсли;
			ИначеЕсли НомерДняНедели(ТекДень) = 7 Тогда //--- Воскресенье
				Таб.ПрисоединитьСекцию("Выходной|День");
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Выходной|Ночь");
				КонецЕсли;
			Иначе
				Таб.ПрисоединитьСекцию("Строка|День");
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Строка|Ночь");
				КонецЕсли;
			КонецЕсли;	
					
			ТекДень = ТекДень + 1;
			
		КонецЦикла;
		
		ОтработаноСмен = 0; ОтработаноЧасов = 0;
			
		ПечПервыхСмен	= СменДневных;
		ПечПервыхЧасов	= ЧасовДневных;
		ПечВторыхСмен	= СменНочных;
		ПечВторыхЧасов	= ЧасовНочных;
		ПечВсегоСмен 	= СменНочных + СменДневных;
		ПечВсегоЧасов 	= ЧасовНочных + ЧасовДневных;
		ПечПервыхСменПропуск 	= СменВсего;
		ПечПервыхЧасовПропуск 	= ЧасовВсего;
		ПечРазницаСмен			= СменВсего - СменНочных - СменДневных;
		ПечРазницаЧасов 		= ЧасовВсего - ЧасовНочных - ЧасовДневных;
		
		Таб.ПрисоединитьСекцию("Строка|Итоги<");
		Если фНочныеСмены = 1 Тогда
			Таб.ПрисоединитьСекцию("Строка|ИтогиНочь");
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Строка|Итоги>");
		
		Ном = Ном + 1;
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);
	// Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр(1);
	Таб.Показать();
	Таб = 0;
	
	глУстПропись(Гривня, "р");
	
КонецПроцедуры // ПечатьДанныхПропусков

//====================================================================== //--- УМК Сандомирский В.Ю, (05.06.2014)
Процедура ПечатьТабеля()
                                       
	КонецПериода = КонМесяца(ДатаДок);
	НачПериода = НачМесяца(ДатаДок);
	
	Расшифровка = СоздатьОбъект( "СписокЗначений" );
	Расшифровка.Установить("Дата",КонецПериода);
	Расшифровка.Установить("Фирма",Фирма);
	Расшифровка.Установить("ПолнНаименование","");
	Расшифровка.Установить("ЕДРПОУ","");
	глПолучитьДанные(Расшифровка);
	Организация = Расшифровка.Получить("ПолнНаименование");
	
	глУстПропись(Гривня, "У");
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Табель");
	Таб.ПараметрыСтраницы(2);
	
	ДниЗаМесяцВсего = 0;
	ЧасыЗаМесяцВсего = 0;
	НочныеВсего = 0;
	
	Таб.ВывестиСекцию("Шапка|Основная");
	ТекДень = НачМесяца(ДатаДок);
	Для День = 1 По 31 Цикл

		ПечДень = День;
		ДенНед = Лев(Строка(Формат(ТекДень,"ДНННН")),3) + ".";
		Таб.ПрисоединитьСекцию("Шапка|День");
		Если фНочныеСмены = 1 Тогда
			Таб.ПрисоединитьСекцию("Шапка|Ночь");
		КонецЕсли;
		ТекДень = ТекДень + 1;
		
	КонецЦикла;
	
	
	Таб.ПрисоединитьСекцию("Шапка|Итоги<");
	Если фНочныеСмены = 1 Тогда
		Таб.ПрисоединитьСекцию("Шапка|ИтогиНочь");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка|Итоги>");
	
	
	ВыбратьСтроки();
	Ном = 1;
	Пока ПолучитьСтроку() = 1 Цикл
	
		Если ПустоеЗначение(Сотрудник) = 1 Тогда	
			ПечСотрудник = СокрЛП(ПримечаниеСтрока);		
		Иначе		
			ПечСотрудник = глУкр(глФИО(Сотрудник,1));		
		КонецЕсли;
			
		Должность = Сотрудник.Должность.Получить(ДатаДок);
		Пол = Сотрудник.Пол;
			
		Таб.ВывестиСекцию("Строка|Основная");
		
		// из документа
		ТекДень = НачМесяца(ДатаДок);
		Для День = 1 По 31 Цикл
	
			Атр1 = ПолучитьАтрибут("ЧД"+День);
			Атр2 = ПолучитьАтрибут("ЧН"+День);
			
			ПечЧасы = СокрЛП(Атр1);
			ПечЧасыНочь = СокрЛП(Атр2);
			
				
			Если НомерДняНедели(ТекДень) = 5 Тогда  //--- Пятница 
				
				Таб.ПрисоединитьСекцию("Пятница|День");
				
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Пятница|Ночь");
				КонецЕсли;
				
			ИначеЕсли НомерДняНедели(ТекДень) = 6 Тогда //--- Суббота
				Таб.ПрисоединитьСекцию("Выходной|День");
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Выходной|Ночь");
				КонецЕсли;
			ИначеЕсли НомерДняНедели(ТекДень) = 7 Тогда //--- Воскресенье
				Таб.ПрисоединитьСекцию("Выходной|День");
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Выходной|Ночь");
				КонецЕсли;
			Иначе
				Таб.ПрисоединитьСекцию("Строка|День");
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Строка|Ночь");
				КонецЕсли;
			КонецЕсли;	
						
			ТекДень = ТекДень + 1;
			
		КонецЦикла;
		
		ОтработаноСмен = 0; ОтработаноЧасов = 0;
			
		ПечПервыхСмен	= СменДневных;
		ПечПервыхЧасов	= ЧасовДневных;
		ПечВторыхСмен	= СменНочных;
		ПечВторыхЧасов	= ЧасовНочных;
		ПечВсегоСмен 	= СменНочных + СменДневных;
		ПечВсегоЧасов 	= ЧасовНочных + ЧасовДневных;
		
		Таб.ПрисоединитьСекцию("Строка|Итоги<");
		Если фНочныеСмены = 1 Тогда
			Таб.ПрисоединитьСекцию("Строка|ИтогиНочь");
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Строка|Итоги>");
		
		Ном = Ном + 1;
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);
	// Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр(1);
	Таб.Показать();
	Таб = 0;
	
	глУстПропись(Гривня, "р");
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (05.06.2014)
Процедура ПечатьГрафика()
                                       
	КонецПериода = КонМесяца(ДатаДок);
	НачПериода = НачМесяца(ДатаДок);
	
	Расшифровка = СоздатьОбъект( "СписокЗначений" );
	Расшифровка.Установить("Дата",КонецПериода);
	Расшифровка.Установить("Фирма",Фирма);
	Расшифровка.Установить("ПолнНаименование","");
	
	глПолучитьДанные(Расшифровка);
	Организация = Расшифровка.Получить("ПолнНаименование");
	
	глУстПропись(Гривня, "У");
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ГрафикРаботы");
	
	ДниЗаМесяцВсего = 0;
	ЧасыЗаМесяцВсего = 0;
	НочныеВсего = 0;
	
	Таб.ВывестиСекцию("Шапка|Основная");
	ТекДень = НачМесяца(ДатаДок);
	Для День = 1 По 31 Цикл

		ПечДень = День;
		ДенНед = Лев(Строка(Формат(ТекДень,"ДНННН")),3) + ".";
		Таб.ПрисоединитьСекцию("Шапка|День");
		Если фНочныеСмены = 1 Тогда
			Таб.ПрисоединитьСекцию("Шапка|Ночь");
		КонецЕсли;
		ТекДень = ТекДень + 1;
		
	КонецЦикла;
	
	ВыбратьСтроки();
	Ном = 1;
	Пока ПолучитьСтроку() = 1 Цикл
	
		Если ПустоеЗначение(Сотрудник) = 1 Тогда	
			ПечСотрудник = СокрЛП(ПримечаниеСтрока);		
		Иначе		
			ПечСотрудник = глУкр(глФИО(Сотрудник,1));		
		КонецЕсли;	
		
		Должность = Сотрудник.Должность.Получить(ДатаДок);
		Пол = Сотрудник.Пол;
			
		Таб.ВывестиСекцию("Строка|Основная");
		
		// из документа
		ТекДень = НачМесяца(ДатаДок);
		Для День = 1 По 31 Цикл
	
			Атр = ПолучитьАтрибут("ЧД"+День);
			Если Число(Атр)>0 Тогда
				ПечЧасы = "";
			Иначе
				ПечЧасы = СокрЛП(Атр);
				ПечЧасыНочь = СокрЛП(Атр);
			КонецЕсли;
				
			Если НомерДняНедели(ТекДень) = 5 Тогда  //--- Пятница 
				
				Таб.ПрисоединитьСекцию("Пятница|День");
				
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Пятница|Ночь");
				КонецЕсли;
				
			ИначеЕсли НомерДняНедели(ТекДень) = 6 Тогда //--- Суббота
				Таб.ПрисоединитьСекцию("Выходной|День");
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Выходной|Ночь");
				КонецЕсли;
			ИначеЕсли НомерДняНедели(ТекДень) = 7 Тогда //--- Воскресенье
				Таб.ПрисоединитьСекцию("Выходной|День");
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Выходной|Ночь");
				КонецЕсли;
			Иначе
				Таб.ПрисоединитьСекцию("Строка|День");
				Если фНочныеСмены = 1 Тогда
					Таб.ПрисоединитьСекцию("Строка|Ночь");
				КонецЕсли;
			КонецЕсли;	
				
			ТекДень = ТекДень + 1;
			
		КонецЦикла;
		
		ОтработаноСмен = 0; ОтработаноЧасов = 0;
		
		Ном = Ном + 1;
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);
	// Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр(1);
	Таб.Показать();
	Таб = 0;
	
	глУстПропись(Гривня, "р");
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (17.07.2014)
Процедура ПечатьПредварительнойЗП(ТипОтчета)
	ДатаОтчета = КонМесяца(ДатаДок);
	ВвестиДату(ДатаОтчета,"Введите дату отчета",0);
	
	КонецПериода = КонМесяца(ДатаДок);
	НачПериода = НачМесяца(ДатаДок);
	
	Расшифровка = СоздатьОбъект( "СписокЗначений" );
	Расшифровка.Установить("Дата",КонецПериода);
	Расшифровка.Установить("Фирма",Фирма);
	Расшифровка.Установить("ПолнНаименование","");
	
	глПолучитьДанные(Расшифровка);
	Организация = Расшифровка.Получить("ПолнНаименование");
	
	глУстПропись(Гривня, "У");
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("РасчетЗП");
	
	ДниЗаМесяцВсего = 0;
	ЧасыЗаМесяцВсего = 0;
	НочныеВсего = 0;	
	    
	Таб.ВывестиСекцию("Шапка|Основная");

	Если ТипОтчета > 4 Тогда
		ТекстЗ = 
		"//{{ЗАПРОС(ВидыРабот)
		|Период с НачПериода по КонецПериода;
		|ВидРабот = Документ.Наряд.ВидРабот;
		|Сотрудник = Документ.Наряд.Сотрудник;
		|СуммаС = Документ.Наряд.СуммаС;
		|Функция СуммаЗП = Сумма(СуммаС);
		|Группировка Сотрудник упорядочить по Сотрудник.Наименование без групп;
		|Группировка ВидРабот упорядочить по ВидРабот.Наименование без групп все ВошедшиеВЗапрос;
		|Условие(Сотрудник в СписСотрудники);
		|"//}}ЗАПРОС
		;
		
		СписСотрудники = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(СписСотрудники, "Сотрудник");
		ЗапросНаряды = СоздатьОбъект("Запрос");
		Если ЗапросНаряды.Выполнить(ТекстЗ) = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если ТипОтчета = 42 Тогда
			ТекстЗапросаНЗП = 
			"//{{ЗАПРОС(ЗапросЗП)
			|Период с НачПериода по КонецПериода;
			|Сотрудник = Документ.НачислениеЗП.Сотрудник;
			|Оклад = Документ.НачислениеЗП.Оклад;
			|Тариф = Документ.НачислениеЗП.Тариф;
			|Сдельно = Документ.НачислениеЗП.Сдельно;
			|Премия = Документ.НачислениеЗП.Премия;
			|Удержано = Документ.НачислениеЗП.Удержано;
			|Функция ФактСумма = Сумма(Оклад + Тариф + Сдельно + Премия - Удержано);
			|Функция ОкладСумма = Сумма(Оклад);
			|Функция ТарифСумма = Сумма(Тариф);
			|Функция СдельноСумма = Сумма(Сдельно);
			|Функция ПремияСумма = Сумма(Премия);
			|Функция УдержаноСумма = Сумма(Удержано);
			|Группировка Сотрудник упорядочить по Сотрудник.Наименование без групп;
			|Условие(Сотрудник в СписСотрудники);
			|"//}}ЗАПРОС
			;
			ЗапросНЗП = СоздатьОбъект("Запрос");
			Если ЗапросНЗП.Выполнить(ТекстЗапросаНЗП) = 0 Тогда
			    Возврат;
			КонецЕсли;			
			
			Таб.ПрисоединитьСекцию("Шапка|Факт");
		КонецЕсли; 
		
		Пока ЗапросНаряды.Группировка(1) = 1 Цикл
			Пока ЗапросНаряды.Группировка(2) = 1 Цикл				
				Таб.ПрисоединитьСекцию("Шапка|ВидРабот");
			КонецЦикла;
			Прервать;
		КонецЦикла;
	КонецЕсли;
	
	ТЗИтогиВР = СоздатьОбъект("ТаблицаЗначений");
	ТЗИтогиВР.НоваяКолонка("ВидРабот", "Справочник.ВидыРабот");
	ТЗИтогиВР.НоваяКолонка("Сумма", "Число", 15, 2);
	ТЗИтогиВР.НоваяКолонка("Кво", "Число");
	ИтЗП = 0;
	
	ВыбратьСтроки();
	Ном = 1;
	Пока ПолучитьСтроку() = 1 Цикл
	
		Если ПустоеЗначение(Сотрудник) = 1 Тогда	
			ПечСотрудник = СокрЛП(ПримечаниеСтрока);		
		Иначе		
			ПечСотрудник = глУкр(глФИО(Сотрудник,1));		
		КонецЕсли;	
		
		//--- Считаем количество смен до нужной даты
		ОтработаноЧасов = 0;
		Для День = 1 По ДатаЧисло(ДатаОтчета) Цикл
			Атр = ПолучитьАтрибут("ЧД"+День);
			Если Число(Атр)>0 Тогда
				ОтработаноЧасов = ОтработаноЧасов + Число(Атр);
			КонецЕсли;
		КонецЦикла;
		
		Должность 	= Сотрудник.Должность.Получить(ДатаДок);
		Пол 		= Сотрудник.Пол;
	
		ПечТариф	= "";
		ПечВидРабот = "";
		ПечЧасов	= "";
		ПечЗарплата = "";
		
		//--- Окладникам ничего не выводим
		Если (Сотрудник.Оклад.Получить(ДатаДок) = 0) 
			//И (Сотрудник.Тариф.Получить(ДатаДок) = 0 ) 
			И (ПустоеЗначение(Сотрудник.ВидТарифа.Получить(КонМесяца(ДатаДок)))=1)
			И (ЕстьПодчиненныйВидРабот() = 0)
			И (КонМесяца(Сотрудник.ДатаПриема) = КонМесяца(ДатаДок)) Тогда	
			//--- синий плюсик  //--- Сотрудник принят  в текущем месяце и у него не заполнены в карточке ни оклад ни тариф	
			ПечТариф	= "Оклад";
			ПечВидРабот = "";
			ПечЧасов	= ОтработаноЧасов;
			ПечЗарплата = "";		
		КонецЕсли;
		
		ВыводитьВР = 1;
		//--- Сдельщикам ничего не выводим
		Если (Сотрудник.Оклад.Получить(КонМесяца(ДатаДок)) = 0) 
		//И (Сотрудник.Тариф.Получить(КонМесяца(ДатаДок)) = 0 ) 
		И (ПустоеЗначение(Сотрудник.ВидТарифа.Получить(КонМесяца(ДатаДок)))=1)
		И (ЕстьПодчиненныйВидРабот() = 1)
		И (Тариф.Выбран() = 0) Тогда
			//--- красная галочка   //--- Сотрудник находится на сдельной оплате	
			ПечТариф 	= "Сдельная оплата";
			ПечВидРабот = "";
			//ПечЗарплата = "";
		КонецЕсли;
		Факт_ = 0;
		Если (ТипОтчета > 4) Тогда
			ЗапросНаряды.ВНачалоВыборки();
			Если ЗапросНаряды.Получить(Сотрудник, ) = 1 Тогда
				Факт_ = ЗапросНаряды.СуммаЗП;
				ПечЗарплата = ЗапросНаряды.СуммаЗП; 
				ИтЗП = ИтЗП + ЗапросНаряды.СуммаЗП; 
			Иначе
				ВыводитьВР = 0;
			КонецЕсли;
		КонецЕсли;
		
			
		//--- Выводим только предварительный расчет по тарифу из табеля
		Если ПустоеЗначение(Тариф) = 0 Тогда	
			ПечТариф	= Тариф.Тариф.Получить(КонМесяца(ДатаДок));
			ПечКоэф 	= Тариф.КоэфУвеличенияЗП.Получить(КонМесяца(ДатаДок));
			КоэфДляРасчета = ПечТариф * Макс(0, ПечКоэф - 1);
			ПечВидРабот = Тариф.Наименование;
			ПечЧасов	= ОтработаноЧасов;
			ПечЗарплата = ПечТариф * ПечЧасов + Макс(0, ?(Норма = 0, 0, ПечЧасов - Норма)) * КоэфДляРасчета;
			ИтЗП = ИтЗП + ПечЗарплата;
//			ПечЗарплата = ПечТариф * ОтработаноЧасов;
		КонецЕсли;		
		Таб.ВывестиСекцию("Строка|Основная");

		Если (ТипОтчета = 42) Тогда
			Факт_ = Цел(ЗапросНаряды.СуммаЗП); Оклад_ = 0; Тариф_ = 0; Сдельно_ = 0; Премия_ = 0; Удержано_ = 0;
			
			ЗапросНЗП.ВНачалоВыборки();
			Если ЗапросНЗП.Получить(Сотрудник) = 1 Тогда
				Факт_ = Факт_ + Цел(ЗапросНЗП.ФактСумма);
				Оклад_ = ЗапросНЗП.ОкладСумма;
				Тариф_ = ЗапросНЗП.ТарифСумма;
				Сдельно_	= ЗапросНЗП.СдельноСумма;
				Премия_	= ЗапросНЗП.ПремияСумма;
				Удержано_ = ЗапросНЗП.УдержаноСумма;
			КонецЕсли;
			
			Разница = Цел(ПечЗарплата) - Цел(Факт_);
			Таб.ПрисоединитьСекцию("Строка|Факт");
		КонецЕсли;
		
		Если (ВыводитьВР = 1) И (ТипОтчета > 4) Тогда			
			Пока ЗапросНаряды.Группировка(2) = 1 Цикл				
				Тариффф = Число(ЗапросНаряды.ВидРабот.Тариф.Получить(КонецПериода));
				Кво = Окр(ЗапросНаряды.СуммаЗП / ?(Тариффф = 0, 1, Тариффф), 2);
				Таб.ПрисоединитьСекцию("Строка|ВидРабот");
				ТЗИтогиВР.НоваяСтрока();
				ТЗИтогиВР.ВидРабот = ЗапросНаряды.ВидРабот;
				ТЗИтогиВР.Сумма = ЗапросНаряды.СуммаЗП;
				ТЗИтогиВР.Кво = Кво;
			КонецЦикла;
		КонецЕсли;
		ОтработаноСмен = 0; ОтработаноЧасов = 0;	
		Ном = Ном + 1;
		
	КонецЦикла;
	
	Таб.ВывестиСекцию("Дно|Основная");	
	Если (ТипОтчета > 4) Тогда
		Если (ТипОтчета = 42) Тогда
			Факт_ = Цел(ТЗИтогиВР.Итог("Сумма")); Оклад_ = 0; Тариф_ = 0; Сдельно_ = 0; Премия_ = 0; Удержано_ = 0;
			
			ЗапросНЗП.ВНачалоВыборки();
			Факт_ = Факт_ + ЗапросНЗП.ФактСумма;
			Оклад_ = ЗапросНЗП.ОкладСумма;
			Тариф_ = ЗапросНЗП.ТарифСумма;
			Сдельно_	= ЗапросНЗП.СдельноСумма;
			Премия_	= ЗапросНЗП.ПремияСумма;
			Удержано_ = ЗапросНЗП.УдержаноСумма;
			
			Разница = Цел(ИтЗП) - Цел(Факт_);
			Таб.ПрисоединитьСекцию("Строка|Факт");
		КонецЕсли;
		
		ТЗИтогиВР.Свернуть("ВидРабот", "Кво,Сумма");
		ТЗИтогиВР.Сортировать("ВидРабот");
		ТЗИтогиВР.ВыбратьСтроки();
		Пока ТЗИтогиВР.ПолучитьСтроку() = 1 Цикл
			Таб.ПрисоединитьСекцию("Дно|ВидРабот");
		КонецЦикла;
	КонецЕсли;
	
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);
	// Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр(1);
	Таб.Показать();
	Таб = 0;
	
	глУстПропись(Гривня, "р");
КонецПроцедуры

//======================================================================
Процедура ПечатьТабеляСравнение()
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Сравнение");
	
	Таб.ВывестиСекцию("Шапка");
	
	ВыбратьСтроки();
	Ном = 1;
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Сотрудник) = 1 Тогда	
			ПечСотрудник = СокрЛП(ПримечаниеСтрока);		
		Иначе		
			ПечСотрудник = глУкр(глФИО(Сотрудник,1));		
		КонецЕсли;	
		
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	// Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр(1);
	Таб.Показать();
	Таб = 0;
	
	глУстПропись(Гривня, "р");	
КонецПроцедуры // 
//====================================================================== //--- УМК Сандомирский В.Ю, (05.06.2014)
Процедура Печать()
	
	Перем ВыбЗначение,мЕДРПОУ[10],мЧ[31];
	спВариантов = СоздатьОбъект("СписокЗначений");
	спВариантов.ДобавитьЗначение(1,"График работы");
	спВариантов.ДобавитьЗначение(2,"Табель");
	спВариантов.ДобавитьЗначение(31,"Сравнение смен по пропускам и в табеле");
	спВариантов.ДобавитьЗначение(3,"Данные пропусков");
	
	
	Если глПользователь.фПривелегииПросмотрТабельЗарплата = 1 Тогда //--- УМК Сандомирский В.Ю, (17.07.2014) доступ к зарплате
		спВариантов.ДобавитьЗначение(4,"Зарплата предварительно");
		спВариантов.ДобавитьЗначение(41,"Зарплата предварительно с детализацией по ВР");
		спВариантов.ДобавитьЗначение(42,"Зарплата предварительно по ВР и факт");
		спВариантов.ДобавитьЗначение(5,"Отчет по сотрудникам");
	КонецЕсли;
	
	//Если (НазваниеНабораПрав() = "Администратор") ИЛИ ()  Тогда
	//	
	//КонецЕсли;
	
	Если спВариантов.ВыбратьЗначение(ВыбЗначение,"",,,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;
	                                       
	Если ВыбЗначение = 1 Тогда
	    ПечатьГрафика();
	ИначеЕсли ВыбЗначение = 2  Тогда
		ПечатьТабеля();
	ИначеЕсли ВыбЗначение = 3  Тогда
		ПечатьДанныхПропусков();
	ИначеЕсли (ВыбЗначение = 4) ИЛИ (ВыбЗначение = 41)  ИЛИ (ВыбЗначение = 42) Тогда //--- УМК Сандомирский В.Ю, (17.07.2014) предварительная зарплата
		ПечатьПредварительнойЗП(ВыбЗначение);	
	ИначеЕсли ВыбЗначение = 5  Тогда //--- УМК Сандомирский В.Ю, (20.04.15) предварительная зарплата		
		ОткрытьФорму("Отчет.СписСотр",ТекущийДокумент());
	ИначеЕсли ВыбЗначение = 31 Тогда
		ПечатьТабеляСравнение();
	КонецЕсли;
	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (09.07.2014)
Процедура ИзмСотрудник()
	
	Если Сотрудник.ПометкаУдаления() = 1 Тогда
		Сотрудник = "";
	КонецЕсли;
	
	Если глДоступСотрудник(Сотрудник) <> 1 Тогда
		Сотрудник = "";
	КонецЕсли;
	
	Если ПустоеЗначение(Тариф) = 1 Тогда //--- УМК Сандомирский В.Ю, (10.10.2014) не меняем если там чтото тесть
		Тариф = Сотрудник.ВидТарифа.Получить(ДатаДок);
	КонецЕсли;
	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (30.05.2014)
Процедура Импорт()
	
	ТЗ_Пропуска = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Пропуска.НоваяКолонка("Сотрудник","Справочник.Сотрудники");
	Для Инд = 1 По 31 Цикл
		ТЗ_Пропуска.НоваяКолонка("Д" + Строка(Инд),"Число",2,0);
	КонецЦикла;
	ТЗ_Пропуска.НоваяКолонка("ВремяСтрокой","Строка",160);

	СпрСотрудник = СоздатьОбъект("Справочник.Сотрудники");
	
	ИмФл = ""; ИмКатал = СокрЛП(Константа.ПутьЭкспортаРН);
	Если ФС.ВыбратьФайл(0,ИмФл, ИмКатал, "Выберите файл импорта", "Файлы prn (*.prn)|*.prn") = 1 Тогда
		ИмяФайла = ИмКатал + ИмФл;
		fso=СоздатьОбъект("Scripting.FileSystemObject");     	
		TextFile = fso.OpenTextFile(ИмяФайла,1,0,0);//Открываем файл в режиме "только чтение"
		
		ТекСотрудник = "";
		
	   	Пока TextFile.AtEndOfStream=0 цикл
			ТекСтрока = TextFile.ReadLine();
			//--- Ищем точку в первых 10 символах
	   		ПервыеДесять = Лев(ТекСтрока,10);
	   			
	   		Если Найти(ПервыеДесять,".") > 0 Тогда //--- Это строка с стотрудником
	   			ТабНомерИзФайла = СокрЛП(Сред(ТекСтрока,12,10));	
	   			ОбрезатьСлева = СтрДлина(ТабНомерИзФайла);
	   			ТабНомерВБазе = Лев("УМ-0000000",10-ОбрезатьСлева) + ТабНомерИзФайла;
	   			ТекФИО = СокрЛП(Сред(ТекСтрока,25));
	   			
	   			СотрудникНайден = 0;
	   			Если СпрСотрудник.НайтиПоКоду(ТабНомерВБазе,0) = 1 Тогда
	   				СотрудникНайден = 1;
	   				ТЗ_Пропуска.НоваяСтрока();			
	   				ТЗ_Пропуска.Сотрудник 	= СпрСотрудник.ТекущийЭлемент();	
	   			Иначе
	   				Сообщить("Не найден сотрудник " + ТекФИО + " с кодом системы пропусков - " + ТабНомерИзФайла);
	   				ТекСотрудник = "";		
	   			КонецЕсли;
	   		КонецЕсли;	   		
	   		
	   		Если (Найти(ПервыеДесять,":") > 0) И (СотрудникНайден = 1) Тогда //--- Это строка с часами по дням	   			
	   			ТЗ_Пропуска.УстановитьЗначение(ТЗ_Пропуска.НомерСтроки,"ВремяСтрокой",СокрЛП(ТекСтрока));	   			
	   			//--- Парсим строку на 31 день
				СтрокаПарсить = ТекСтрока;
	   			Для Инд = 1 По 31 Цикл
	   				ПозицияШтрих = Найти(СтрокаПарсить,":");
	   				Если ПозицияШтрих > 0 Тогда	   							
		   				Минуты = Число(Сред(СтрокаПарсить,ПозицияШтрих+1,1));
		   				Часы   = Число(Сред(СтрокаПарсить,ПозицияШтрих - 2,2));
		   				Если Минуты > 2 Тогда //--- если более 20 минут значит + 1 час
		   					Часы = Часы + 1;
		   				КонецЕсли;
		   						
		   				Если СотрудникНайден = 1 Тогда
		   					ТЗ_Пропуска.УстановитьЗначение(ТЗ_Пропуска.НомерСтроки,Инд+1,Часы);
		   				КонецЕсли;
		   							
		   				//УстановитьАтрибут("Ч"+Инд,Часы);		   				
		   				СтрокаПарсить = Сред(СтрокаПарсить,ПозицияШтрих+1);
		   			КонецЕсли;		   			
	   			КонецЦикла;	   			 			
	   		КонецЕсли;	   		
	   	КонецЦикла;    
	   	TextFile.close(); 
	КонецЕсли;
	
	//ТЗ_Пропуска.ВыбратьСтроку();
	
	
	//--- Ищем в импортированой таблице нужного сотрудника
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		НомерСтрокиЗначения = 0;
		Если ТЗ_Пропуска.НайтиЗначение(Сотрудник,НомерСтрокиЗначения,1) = 1 Тогда
			
			ВремяСтрокой = ТЗ_Пропуска.ПолучитьЗначение(НомерСтрокиЗначения,"ВремяСтрокой");
			
			Для Инд = 1 По 31 Цикл			
		   		ТекЧасы = ТЗ_Пропуска.ПолучитьЗначение(НомерСтрокиЗначения,Инд+1);
		   		УстановитьАтрибут("Ч"+Инд,ТекЧасы);		 
	   		КонецЦикла;		
		   	
	   		ИзмЧасы(1);
	   		
		КонецЕсли;		
	КонецЦикла;
	
КонецПроцедуры // Импорт

//====================================================================== //--- УМК Сандомирский В.Ю, (30.05.2014)
Процедура ПриУдаленииСтроки()
	Если Вопрос("Удалить строку ?","Да+Нет") <> "Да" Тогда //--- УМК Сандомирский В.Ю, на всякий пожарный случай
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	//Если (глПользователь.фПривелегииТабель = 1) И (Ответсвенный.ГруппаПользователя <> глПользователь.ГруппаПользователя) Тогда
	//	Сообщить("Строки может удалять только ответсвенный.","!");
	//	СтатусВозврата(0);
	//	Возврат;	
	//КонецЕсли;
	
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (30.05.2014)
Процедура ПриВводеСтроки()
	Если НазваниеНабораПрав() = "Табель" Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (02.06.2014)
Процедура ПослеОткрытия()
    ФормаРасш = СоздатьОбъект("РасширениеФормы");
	
	ФормаРасш.УстановитьШиринуКолонки("МногострочнаяЧасть", 5,  20);
	ФормаРасш.УстановитьШиринуКолонки("МногострочнаяЧасть", 6,  25);
	ФормаРасш.УстановитьШиринуКолонки("МногострочнаяЧасть", 7,  20);
	ФормаРасш.УстановитьШиринуКолонки("МногострочнаяЧасть", 8,  25);
	ФормаРасш.УстановитьШиринуКолонки("МногострочнаяЧасть", 9,  20);
	ФормаРасш.УстановитьШиринуКолонки("МногострочнаяЧасть", 10, 25);
		
	Для Инд = 11 По 150 Цикл
		ФормаРасш.УстановитьШиринуКолонки("МногострочнаяЧасть", Инд, 16);
    КонецЦикла;
    //ФормаРасш.Максимизирована = 1;
   
	Сервис = СоздатьОбъект("Сервис");
	Сервис.ВключитьРаскраскуТаблиц();
	Сервис.ИспользоватьПланРаскраски(1);

КонецПроцедуры

//======================================================================
Функция ПолучитьЦвет(Красный = 0,Зеленый = 0,Синий = 0)
    
    Возврат Макс(0,Синий)*65536+Макс(0,Зеленый)*256+Макс(0,Красный);

КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю, (02.06.2014)
Функция ПолучитьПланРаскраски()
	
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()()()()()()()()()()()()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	
	ТекДень = НачМесяца(ДатаДок);
	Для Инд = 1 По 31 Цикл
		
		Если НомерДняНедели(ТекДень) = 5 Тогда  //--- Пятница 
			ТекстПлана = ТекстПлана + "(BRUSH["+ПолучитьЦвет(255,130,130)+"])()()()";	
		ИначеЕсли НомерДняНедели(ТекДень) = 6 Тогда //--- Суббота
			ТекстПлана = ТекстПлана + "(BRUSH["+ПолучитьЦвет(210,255,145)+"])()()()";	
		ИначеЕсли НомерДняНедели(ТекДень) = 7 Тогда //--- Воскресенье
			ТекстПлана = ТекстПлана + "(BRUSH["+ПолучитьЦвет(210,255,145)+"])()()()";		
		Иначе
			ТекстПлана = ТекстПлана + "(BRUSH_S[" + Строка(100*255*100) + "] BRUSH[NONE])()()()";	
		КонецЕсли;	
			
		ТекДень = ТекДень + 1;
			
	КонецЦикла;
	
	Возврат ТекстПлана;
	
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю, (03.06.2014)
Функция ПолучитьДолжность()
	Если ПустоеЗначение(Сотрудник) <> 1 Тогда
		Возврат Сотрудник.Должность.Получить(Датадок);
	КонецЕсли;
КонецФункции // ПолучитьДолжность

//====================================================================== //--- УМК Сандомирский В.Ю, (10.06.2014)
Функция ВернутьГрафикТабель()
	Если перФормаТабельГрафик = 1 Тогда
		Возврат "Табель №";	
	ИначеЕсли перФормаТабельГрафик = 2 Тогда
		Возврат "График №";		
	ИначеЕсли перФормаТабельГрафик = 3 Тогда
		Возврат "Ок.Табель №";	
	КонецЕсли;
КонецФункции // ВернутьГрафикТабель

//====================================================================== //--- УМК Сандомирский В.Ю, (10.06.2014)
Процедура ИзмТабельГрафик()
	Если перФормаТабельГрафик = 1 Тогда
		перГрафикТабель = 1;	
	ИначеЕсли перФормаТабельГрафик = 2 Тогда
		перГрафикТабель = 2;	
	ИначеЕсли перФормаТабельГрафик = 3 Тогда  
		перГрафикТабель = 3;		
			
		//--- УМК Сандомирский В.Ю, (04.08.2014)
		ТекстПредупреждения = ""; 
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Сотрудник.Оклад.Получить(ДатаДок) > 0 Тогда
				Если РабочихСменГрафик <> (СменНочных + СменДневных) Тогда
					ТекстПредупреждения = ТекстПредупреждения + " В строке " + НомерСтроки +  " " + СокрЛП(Строка(Сотрудник)) + " не соответсвие графиков и отработаных смен" + глПравильныйСимволПереноса;			
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ТекстПредупреждения <> "" Тогда
			Предупреждение(ТекстПредупреждения);  
		КонецЕсли;	
		//... УМК Сандомирский В.Ю, (04.08.2014)
		
	КонецЕсли;
КонецПроцедуры // ИзмТабельГрафик

//====================================================================== //--- УМК Сандомирский В.Ю, (10.06.2014)
Процедура ИзмПерАвансПредвОконч()
	Если перАвансПредварОкончат = 1 Тогда
		ПерАвансПредварительноОкончательно = 1; 
	ИначеЕсли перАвансПредварОкончат = 2 Тогда
		ПерАвансПредварительноОкончательно = 2; 
	КонецЕсли;		
КонецПроцедуры // ИзмТабельГрафик

//====================================================================== //--- УМК Сандомирский В.Ю, (20.06.2014)
Функция ИнформацияПоСтроке()
	
	Если ПустоеЗначение(Сотрудник) = 1 Тогда	
		ПечСотрудник = СокрЛП(ПримечаниеСтрока);		
	Иначе		
		ПечСотрудник = СокрЛП(глУкр(глФИО(Сотрудник,1)));		
	КонецЕсли;
	
	Возврат "Пропуска :" + Строка(ЧасовВсего) + Симв(13)
			+ "Табель :" + Строка(ЧасовДневных + ЧасовНочных)
			+ Симв(13) + "Сотрудник :" + ПечСотрудник;	
КонецФункции // ИнформацияПоСтроке

//====================================================================== //--- УМК Сандомирский В.Ю, (08.07.2014)
Процедура ЗаполнитьПоПодразделению()
	
	Если КоличествоСтрок() > 0 Тогда
		Отв = Вопрос("Удалить строки?", "Да+Нет+Отмена");
		Если Отв = "Отмена" Тогда
			Возврат;
		ИначеЕсли Отв = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(Подразделение) = 0 Тогда
		СпрСотрудники = СоздатьОбъект("Справочник.Сотрудники");
		СпрСотрудники.ИспользоватьРодителя(Подразделение);
		СпрСотрудники.ВыбратьЭлементы();
		Пока СпрСотрудники.ПолучитьЭлемент() = 1 Цикл
			Если СпрСотрудники.ЭтоГруппа() <> 1 Тогда
				НоваяСтрока();
				Сотрудник = СпрСотрудники.ТекущийЭлемент()
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПодразделению()

//====================================================================== //--- УМК Сандомирский В.Ю, (08.09.2014)
Процедура СтрокаЗаполнитьЛичнымиГрафиками(Флаг) //--- Флаг=1 только графики; Флаг=2 графики и энки ; Флаг=3 графики \ энки \ востмерки;

	Если НомерСтроки > 0 Тогда	
		Если Флаг <> 1 Тогда
			//--- Очищаем таблицу
			Для Инд = 1 По 31 Цикл
				УстановитьАтрибут("ЧД"+Инд,"");		
			КонецЦикла;
		КонецЕсли;	
		Если ПустоеЗначение(Сотрудник.ДниОплаты) = 1 Тогда
			Возврат;	    
		КонецЕсли;
		ЛичныйГрафик = Сотрудник.ДниОплаты;
		ТекДень = НачМесяца(ДатаДок);
		РабочихСменГрафик = 0;
		Для Инд = 1 По ДатаЧисло(КонМесяца(ДатаДок)) Цикл	
			Если Сред(ЛичныйГрафик,НомерДняНедели(ТекДень),1) = "0"Тогда  //--- Рабочий		
				Если (Флаг = 2) ИЛИ (Флаг = 3) Тогда
					УстановитьАтрибут("ЧД"+Инд,"н");	
				КонецЕсли;		
			Иначе		
				Если Флаг = 3 Тогда
					УстановитьАтрибут("ЧД"+Инд,8);	
				КонецЕсли;		
				РабочихСменГрафик = РабочихСменГрафик + 1;		
			КонецЕсли;			
			ТекДень = ТекДень + 1;		
		КонецЦикла;		
		ИзмЧасы();			
	КонецЕсли;

КонецПроцедуры // ЗаполнитьЛичнымиГрафиками()

//====================================================================== //--- УМК Сандомирский В.Ю, (08.09.2014)	
Процедура ВсеЗаполнитьЛичнымиГрафиками(Флаг)	//--- Флаг=1 только графики; Флаг=2 графики и энки ; Флаг=3 графики \ энки \ востмерки;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл	
		Если Флаг <> 1 Тогда
			//--- Очищаем таблицу
			Для Инд = 1 По 31 Цикл
				УстановитьАтрибут("ЧД"+Инд,"");		
			КонецЦикла;
		КонецЕсли;	
		Если ПустоеЗначение(Сотрудник.ДниОплаты) = 1 Тогда
			Продолжить;		    
		КонецЕсли;	
		ЛичныйГрафик = Сотрудник.ДниОплаты;
		ТекДень = НачМесяца(ДатаДок);
		РабочихСменГрафик = 0;
		Для Инд = 1 По ДатаЧисло(КонМесяца(ДатаДок)) Цикл
			
			Если Сред(ЛичныйГрафик,НомерДняНедели(ТекДень),1) = "0"Тогда  //--- Рабочий	
			
				Если (Флаг = 2) ИЛИ (Флаг = 3) Тогда
					УстановитьАтрибут("ЧД"+Инд,"н");	
				КонецЕсли;		
			Иначе		
				Если Флаг = 3 Тогда
					УстановитьАтрибут("ЧД"+Инд,8);	
				КонецЕсли;
				РабочихСменГрафик = РабочихСменГрафик + 1;			
			КонецЕсли;				
			ТекДень = ТекДень + 1;		
		КонецЦикла;	
		ИзмЧасы();		
	КонецЦикла;
	
КонецПроцедуры // Все ЗаполнитьЛичнымиГрафиками()

//====================================================================== //--- УМК Сандомирский В.Ю, (08.09.2014)
Процедура ЗаполнитьЛичнымиГрафиками(Флаг) //--- Флаг=1 только графики; Флаг=2 графики и энки ; Флаг=3 графики \ энки \ востмерки;
	
	Перем ВыбЗначение; 
	
	спВариантов = СоздатьОбъект("СписокЗначений");
	спВариантов.ДобавитьЗначение(1,"по всем сотрудникам");
	спВариантов.ДобавитьЗначение(2,"по сотруднику");

	Если спВариантов.ВыбратьЗначение(ВыбЗначение,"",,,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;                                       
	Если ВыбЗначение = 1 Тогда
	    ВсеЗаполнитьЛичнымиГрафиками(Флаг);
	ИначеЕсли ВыбЗначение = 2  Тогда
		СтрокаЗаполнитьЛичнымиГрафиками(Флаг);
	КонецЕсли;
	
КонецПроцедуры	

//====================================================================== //--- УМК Сандомирский В.Ю, (24.07.2014)
Процедура СменыВГрафики()
	
	РабочихСменГрафик = СменДневных + СменНочных;
	
КонецПроцедуры // СменыВГрафики()

//====================================================================== //--- УМК Сандомирский В.Ю, (04.08.2014)
Процедура ПятидневкаВГрафики()
	ТекДень = НачМесяца(ДатаДок);
	РабочихСменГрафик = 0;
	Для Инд = 1 По 31 Цикл
		
		Если НомерДняНедели(ТекДень) = 6 Тогда //--- Суббота
			//---
		ИначеЕсли НомерДняНедели(ТекДень) = 7 Тогда //--- Воскресенье
			//---	
		Иначе
			РабочихСменГрафик = РабочихСменГрафик + 1;	
		КонецЕсли;	
			
		ТекДень = ТекДень + 1;
			
	КонецЦикла;
КонецПроцедуры // ПятидневкаВГрафики

//====================================================================== //--- УМК Сандомирский В.Ю, (04.08.2014) красные плюсики или галочки
Функция ВывестиОкладТариф()
	
	Если ПустоеЗначение(Сотрудник) = 1 Тогда
		Возврат "";
	КонецЕсли;
	
	Если Сотрудник.Оклад.Получить(КонМесяца(ДатаДок)) > 0 Тогда
		Возврат 5; //--- красный плюсик     //--- Сотрудник с окладом
	КонецЕсли;
		
	Если (Сотрудник.Оклад.Получить(ДатаДок) = 0) 	//--- УМК Сандомирский В.Ю. (05.08.14)
			//И (Сотрудник.Тариф.Получить(ДатаДок) = 0 ) 
			И (ПустоеЗначение(Сотрудник.ВидТарифа.Получить(КонМесяца(ДатаДок)))=1)
			И (ЕстьПодчиненныйВидРабот() = 0)
			И (КонМесяца(Сотрудник.ДатаПриема) = КонМесяца(ДатаДок)) Тогда	
			Возврат 3; //--- синий плюсик  //--- Сотрудник принят  в текущем месяце и у него не заполнены в карточке ни оклад ни тариф
	КонецЕсли;
	
	Если (Сотрудник.Оклад.Получить(КонМесяца(ДатаДок)) = 0) 
		//И (Сотрудник.Тариф.Получить(КонМесяца(ДатаДок)) = 0 ) 
		И (ПустоеЗначение(Сотрудник.ВидТарифа.Получить(КонМесяца(ДатаДок)))=1)
		И (ЕстьПодчиненныйВидРабот() = 1)
		И (Тариф.Выбран() = 0) Тогда
			Возврат 1; //--- красная галочка   //--- Сотрудник находится на сдельной оплате
	КонецЕсли;
		
	
КонецФункции	
	
//====================================================================== //--- УМК Сандомирский В.Ю. (06.10.14) 
Функция ИмеютсяДанныеПропусков()
	Если (СменВсего = 0) И (Сотрудник.Выбран() = 1) Тогда					
		    Возврат 4;
	КонецЕсли;
КонецФункции // ИмеютсяДанныеПропусков

//======================================================================
Функция ПроверкаДругогоАванса(ТекСотрудник)
	
	НашлиВДругомРасчете = 0;
	
	ТекДокРасчетАванса.ВыбратьДокументы(НачМесяца(ДатаРасчетаАванса),КонМесяца(ДатаРасчетаАванса));
	Пока ТекДокРасчетАванса.ПолучитьДокумент() = 1 Цикл
	
		Если ДокРасчетАванса.ТекущийДокумент() = ТекДокРасчетАванса.ТекущийДокумент() Тогда
			Продолжить;
		КонецЕсли;
		
		ТекДокРасчетАванса.ВыбратьСтроки();
		Пока ТекДокРасчетАванса.ПолучитьСтроку() = 1 Цикл
			Если ТекДокРасчетАванса.Сотрудник = ТекСотрудник Тогда
				НашлиВДругомРасчете = 1;
				Возврат НашлиВДругомРасчете;
			КонецЕсли;
		КонецЦикла;

	КонецЦикла;
	
	Возврат  НашлиВДругомРасчете;
	
КонецФункции // ПроверкаДругогоАванса

//====================================================================== //--- УМК Сандомирский В.Ю. (03.12.14) 
Процедура ЗаполнитьТабАвансы()
	
	БылиОшибкиЗаполненияШапки = 0;
	
	Если ПустоеЗначение(ДатаРасчетаАванса) = 1 Тогда
		Сообщить("Не задана дата расчета аванса", "!");
		БылиОшибкиЗаполненияШапки = 1;	
	КонецЕсли;	
		
	Если НачМесяца(ДатаРасчетаАванса) <> НачМесяца(ДатаДок) Тогда
		Сообщить("Дата расчета аванса не соответсвует дате табеля !!!", "!");
		БылиОшибкиЗаполненияШапки = 1;
	КонецЕсли;
		
	Если ПроцентАвансаОкладникам = 0 Тогда
		Сообщить("не заполнен процент аванса окладникам !!!", "!");
		БылиОшибкиЗаполненияШапки = 1;
	КонецЕсли;
		
	Если ПроцентАвансаОтЗаработанного= 0 Тогда
		Сообщить("не заполнен Процент от заработанного !!!", "!");
		БылиОшибкиЗаполненияШапки = 1;	
	КонецЕсли;
	
	Если БылиОшибкиЗаполненияШапки = 1 Тогда
		Возврат;		
	КонецЕсли;
	
	ТЗ_СдельныеСотрудники = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_СдельныеСотрудники.НоваяКолонка("Сотрудник","Справочник.Сотрудники");
	ТЗ_СдельныеСотрудники.НоваяКолонка("СуммаКО",	"Число",14,2);
	
	НачалоПериода = НачМесяца(ДатаДок);
	КонецПериода  = КонМесяца(ДатаДок);
	
	СписокСотрудников = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписокСотрудников,"Сотрудник");
	ВидДокументаНаряд = "Наряд";
	Счет661 = СчетПоКоду("66.1");
	
	// запрос по операциям
	
    Запрос = СоздатьОбъект("Запрос");
    ТекстЗапроса = 
    "//{{ЗАПРОС(Сформировать)
    |Период с НачалоПериода по КонецПериода;
    |Дебет 				= Операция.Дебет.Счет;
    |Кредит 			= Операция.Кредит.Счет;
    |Счет 				= Операция.Счет;
    |КорСчет 			= Операция.КорСчет.Код;
    |Сумма 				= Операция.Сумма;
    |Количество 		= Операция.Количество;
    |Сотрудник			= Операция.Субконто.Сотрудники;
	|
	|ТекДок		        = Операция.ТекущийДокумент;
	|
   //	|Функция СуммаСНД 	= СНД(Сумма) когда(Дебет=Счет);
   //	|Функция СуммаСНК 	= СНК(Сумма) когда(Кредит=Счет);
   //	|Функция СуммаДО 	= ДО(Сумма) когда(Дебет=Счет);
    |Функция СуммаКО 	= КО(Сумма) когда(Кредит=Счет);
  //	|Функция СуммаКорДО = КорДО(Сумма) когда(Дебет=Счет);
  //	|Функция СуммаКорКО = КорКО(Сумма) когда(Кредит=Счет);
  //	|Функция СуммаСКД 	= СКД(Сумма) когда(Дебет=Счет);
  //	|Функция СуммаСКК 	= СКК(Сумма) когда(Кредит=Счет);
	
  //	|Группировка ТекДок;
    |Группировка Сотрудник без Групп;
	|
    |Условие (Счет = Счет661);
	|Условие (Сотрудник в СписокСотрудников);
	|Условие(ТекДок.Вид() = ВидДокументаНаряд);
	|
    |"//}}ЗАПРОС
    ;
    // Если ошибка в запросе, то выход из процедуры
    Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
        Возврат;
    КонецЕсли;
                                                   
    Пока Запрос.Группировка(1)=1 Цикл
		// Сообщить(" Сотр " + Запрос.Сотрудник + " СуммаКО " + Запрос.СуммаКО );
		ТЗ_СдельныеСотрудники.НоваяСтрока();
		ТЗ_СдельныеСотрудники.Сотрудник = Запрос.Сотрудник;
		ТЗ_СдельныеСотрудники.СуммаКО 	= Запрос.СуммаКО;
    КонецЦикла; 
	
	МесяцНачисленияЗП = НачМесяца(ДатаРасчетаАванса);
	
	ТекстПредупреждения = "";
	
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		
		Если ПустоеЗначение(Сотрудник) = 1 Тогда
			
			Если ПустоеЗначение(ПримечаниеСтрока) <> 1 Тогда //--- временный сотрудник
				
			ТекстПредупреждения = ТекстПредупреждения + глПравильныйСимволПереноса 
									+ СокрЛП(ПримечаниеСтрока);
			
			КонецЕсли;
			
			Продолжить;
		КонецЕсли;
		
		ТекСтрока 	= "";
		ТекКолонка 	= "";
		
		Если ТабАвансы.НайтиЗначение(Сотрудник,ТекСтрока,ТекКолонка) = 1 Тогда
			ТабАвансы.ПолучитьСтрокуПоНомеру(ТекСтрока);
		Иначе
			ТабАвансы.НоваяСтрока();
			ТабАвансы.FormEx_ПланРаскраски = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])";
		КонецЕсли;
		
		ТабАвансы.Сотрудник 		= Сотрудник;
		
		
		ТабАвансы.БылАванс = ПроверкаДругогоАванса(Сотрудник);
		
		
		ТекСменДневных 		= 0;
		ТекЧасовНочных 		= 0;
		ТекЧасовДневных 	= 0;
		
		Для Инд = 1 По ДатаЧисло(ДатаРасчетаАванса) Цикл		
			Атр = ПолучитьАтрибут("Ч"+Инд);
			Часов = Число(Атр);
			ЧасовН = Число(ПолучитьАтрибут("ЧН"+Инд));
			ЧасовД = Число(ПолучитьАтрибут("ЧД"+Инд));
			
			ТекЧасовНочных 		= ТекЧасовНочных 	+ ЧасовН;
			ТекЧасовДневных 	= ТекЧасовДневных 	+ ЧасовД;
		
			Если Врег(СокрЛП(ПолучитьАтрибут("ЧД"+Инд))) = "О" Тогда
				ТекСменДневных 	= ТекСменДневных	+ 1;
			Иначе
				ТекСменДневных 	= ТекСменДневных	+ Мин(ЧасовД,1);
			КонецЕсли;
					
		КонецЦикла;
				
		ТабАвансы.ОтработаноДней	= ТекСменДневных;
		ТабАвансы.ОкладСумма		= Сотрудник.Оклад.Получить(ДатаРасчетаАванса);
		ТабАвансы.ТарифНаименование	= Тариф;
		
		ТабАвансы.ОтработаноЧасов 	= ТекЧасовНочных + ТекЧасовДневных; 
		ТабАвансы.ЧасовойТариф		= Тариф.Тариф.Получить(ДатаРасчетаАванса); // --- УМК Сандомирский В.Ю. (10.12.14) 
		
		Если ТабАвансы.ЧасовойТариф = 0 Тогда
			ТабАвансы.ОтработаноЧасов 	= 0; //--- обнуляем отработано часов , єто тут неважно
		КонецЕсли;
			
		//--- Сдельная по нарядам
		ТекСтр = "";
		ТекКол = "";
		Если ТЗ_СдельныеСотрудники.НайтиЗначение(Сотрудник,ТекСтр,ТекКол) = 1 Тогда
		    ТЗ_СдельныеСотрудники.ПолучитьСтрокуПоНомеру(ТекСтр);
			ТабАвансы.СдельныйТарифСумма = ТЗ_СдельныеСотрудники.СуммаКО;	
		КонецЕсли;
			
		ТабАвансы.Предварительно	= 		ТабАвансы.СдельныйТарифСумма 						//--- УМК Сандомирский В.Ю. (22.12.14)
										//+ ( ТабАвансы.ОтработаноДней * (ТабАвансы.ОкладСумма / ?(РабочихСменГрафик=0,1,РабочихСменГрафик)))
										+ (ТабАвансы.ОкладСумма * ПроцентАвансаОкладникам / 100)
										+ (	ТабАвансы.ОтработаноЧасов * ТабАвансы.ЧасовойТариф);	//--- УМК Сандомирский В.Ю. (22.12.14)	
										
		//--- Расчет окончательно по формуле СуммаПредварительно - 400 и округлить до 100 в меньшую сторону	
		
		Если ТабАвансы.РучнаяКорректировка <> 1 Тогда //--- УМК Сандомирский В.Ю. (15.12.14)
			ТабАвансы.Окончательно = 0;	
			
				//--- Вариант_1 (15.12.14)
			
			//	ТабАвансы.Окончательно 		= (ТабАвансы.Предварительно * ПроцентАвансаОтЗаработанного / 100) - МинусАванс; 
			//	ТабАвансы.Окончательно      = глОкруглитьВМеньшую(ТабАвансы.Окончательно,ОкруглитьАванс);        //--- УМК Сандомирский В.Ю. (15.12.14)		
			
				//--- Вариант_1 (15.12.14)
				ТабАвансы.Окончательно		= (((ТабАвансы.ОтработаноЧасов * ТабАвансы.ЧасовойТариф) + ТабАвансы.СдельныйТарифСумма) * ПроцентАвансаОтЗаработанного / 100 )
											  + (ТабАвансы.ОкладСумма * ПроцентАвансаОкладникам / 100)
											  - МинусАванс ;			 //--- УМК Сандомирский В.Ю. (19.02.15)	
				
				ТабАвансы.Окончательно      = глОкруглитьВМеньшую(ТабАвансы.Окончательно,ОкруглитьАванс);        //--- УМК Сандомирский В.Ю. (19.02.15)										  
											  
				
				Если ТабАвансы.Окончательно < 0 Тогда
					ТабАвансы.Окончательно = 0;
				КонецЕсли;			
			
		КонецЕсли;
		
		ТабАвансы.Разница = ТабАвансы.Предварительно - ТабАвансы.Окончательно; 
			
		Если ТабАвансы.Разница < 0 Тогда
			ТабАвансы.FormEx_ПланРаскраски = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])()()()()()()()(BRUSH["+глПолучитьЦвет(255,130,130)+"])";
		Иначе
			ТабАвансы.FormEx_ПланРаскраски = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])";
		КонецЕсли;
			
	КонецЦикла;
	
	Если ТекстПредупреждения <> "" Тогда
		Предупреждение("!!! Внимание !!!" + глПравильныйСимволПереноса + "В табличной части присутсвуют временные сотрудники !!!" 
						+ ТекстПредупреждения
						+ глПравильныйСимволПереноса + "!!! Подайте сведения в Отдел кадров для регистрации их в 1С !!!" 
						+ глПравильныйСимволПереноса + "!!! после регистрации , выберите их в текущем табеле  !!!" );
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьТабАвансы()

//====================================================================== //--- УМК Сандомирский В.Ю. (03.12.14) 
Процедура ИзмСтрокуТабАвансы()
	
	Если ТабАвансы.ТекущаяСтрока() > 0 Тогда
		
		Если ТабАвансы.ТекущаяКолонка() = "Окончательно" Тогда
			
			ВремОкончательно = ТабАвансы.Окончательно;
			
			глВвестиЗначениеВТаблицу(ТабАвансы,ТабАвансы.ТекущаяСтрока(),11,"Число","Введите окончательную сумму");		
			
			ТабАвансы.Разница = ТабАвансы.Предварительно - ТабАвансы.Окончательно;
			
			Если ВремОкончательно <> ТабАвансы.Окончательно Тогда
				ТабАвансы.РучнаяКорректировка = 1;
			КонецЕсли;
			
			Если ТабАвансы.Разница < 0 Тогда
				ТабАвансы.FormEx_ПланРаскраски = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])()()()()()()()()(BRUSH["+глПолучитьЦвет(255,130,130)+"])";
			Иначе
				ТабАвансы.FormEx_ПланРаскраски = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])";
			КонецЕсли;
			
		ИначеЕсли ТабАвансы.ТекущаяКолонка() = "РучнаяКорректировка" Тогда	//--- УМК Сандомирский В.Ю. (15.12.14)	
		
			Если ТабАвансы.РучнаяКорректировка = 1 Тогда
				ТабАвансы.Окончательно 		= (ТабАвансы.Предварительно * ПроцентАвансаОтЗаработанного / 100) - МинусАванс; 
				ТабАвансы.Окончательно      = глОкруглитьВМеньшую(ТабАвансы.Окончательно,ОкруглитьАванс);        	
				Если ТабАвансы.Окончательно < 0 Тогда
					ТабАвансы.Окончательно = 0;
				КонецЕсли;			
				ТабАвансы.Разница = ТабАвансы.Предварительно - ТабАвансы.Окончательно; 
				ТабАвансы.РучнаяКорректировка = 0;
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры // ИзмСтрокуТабАванса()

//====================================================================== //--- УМК Сандомирский В.Ю. (04.12.14) 
Процедура УдалитьТекСтрокуТабАвансы()
	Если ТабАвансы.ТекущаяСтрока() > 0 Тогда
		НомСтроки = ТабАвансы.ТекущаяСтрока();
		ТабАвансы.УдалитьСтроку(НомСтроки);
		НомСтроки = Мин(НомСтроки,ТабАвансы.КоличествоСтрок());
		ТабАвансы.ТекущаяСтрока(НомСтроки);		
	КонецЕсли;
КонецПроцедуры // УдалитьТекСтрокуТабАвансы

//====================================================================== //--- УМК Сандомирский В.Ю. (23.12.14) 
Процедура ПриИзмененииПроцентОтЗаработанного()
	Если ПроцентАвансаОтЗаработанного > 100 Тогда
		ПроцентАвансаОтЗаработанного = 100;
	КонецЕсли;
КонецПроцедуры // ПриИзмененииПроцентОтЗаработанного()

//====================================================================== //--- УМК Сандомирский В.Ю. (23.12.14) 
Процедура ВвестиФиксированныйАванс()
	
	ТекСуммаОкончательно = 0;
	Если ВвестиЧисло(ТекСуммаОкончательно, "Фиксированная сумма аванса", 14,2) = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	ОкруглитьАванс = "";
	МинусАванс     = "";
	ПроцентАвансаОкладникам = "";
	ПроцентАвансаОтЗаработанного = "";
	
	ТабАвансы.ВыбратьСтроки();
	Пока ТабАвансы.ПолучитьСтроку() = 1 Цикл	
		ТабАвансы.Окончательно = ТекСуммаОкончательно;
		ТабАвансы.Разница = ТабАвансы.Предварительно - ТабАвансы.Окончательно; 	
		ТабАвансы.РучнаяКорректировка = 1;
	КонецЦикла;
		
КонецПроцедуры // ВвестиФиксированныйАванс()

Подразделение.ВыборГруппы(1);
ФиксацияЕсть = 0;

