Перем СтруктИзменений;
Перем ОстаткиТоваров;         
Перем НачальнаяДатаДокумента;
Перем РегО;
Перем СпВидыУпаковкиГлобальный; //--- УМК Сандомирский В.Ю. (31.08.14)

// ===============================
Процедура ВидимостьПоВидуОперации()
	Видимость = ?(ВидОперации=2,1,0);
	Форма.ОсновноеСредство.Видимость(Видимость)
КонецПроцедуры

// ===============================
Функция УстДоступность()
	//Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	
	Слой = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если СписаниеМБП  = 1 Тогда
		// если списываем МБП, то дополнительную закладку не нужно показывать
		Инд = Форма.Закладки.НайтиЗначение("Дополнительный");
		ТекИнд = Форма.Закладки.ТекущаяСтрока();
		Если Инд <> 0 Тогда
		    // удалим закладку
			Форма.Закладки.УдалитьЗначение(Инд);
			Если ТекИнд = Инд Тогда
			    Форма.Закладки.ТекущаяСтрока(1);
				Форма.ИспользоватьСлой("Общий,Основной",2);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если Форма.Закладки.НайтиЗначение("Дополнительный") = 0 Тогда
		    // добавим закладку
			Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
		КонецЕсли;
	КонецЕсли;
	
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;
	
    Форма.кПечать.Доступность(Проведен() * (1-Модифицированность()));
	
	Форма.Заголовок(глЗаголовок(Контекст,"Списание ТМЦ"));
	Форма.ДопКво.Доступность(ТМЦ.УчетДопКво);
	
	Возврат "";
КонецФункции

// ===============================
Процедура ИзмМестоХранения()
	Если МестоХранения.Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;   
	Если (МестоХранения.Тип = Перечисление.ТипыМестХранения.Склад) и (МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
	    Предупреждение("Нельзя указывать РОЗНИЧНЫЙ склад (магазин)!");
	    МестоХранения = глВосстановитьЗначение(Контекст,"МестоХранения");
	КонецЕсли;
	Если МестоХранения <> глВосстановитьЗначение(Контекст,"МестоХранения") Тогда
		Если КоличествоСтрок()>0 Тогда
			Рез = Вопрос("Место хранения было изменено. Удалить строки?","Да+Нет");
			Если Рез ="Да" Тогда
				УдалитьСтроки();
			КонецЕсли;
		КонецЕсли;
		глСохранитьЗначение(Контекст,"МестоХранения",МестоХранения);
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ИзмФирма()
	Если Фирма <> глВосстановитьЗначение(Контекст,"Фирма") Тогда
		Если КоличествоСтрок()>0 Тогда
			Рез = Вопрос("Фирма была изменена. Удалить строки?","Да+Нет");
			Если Рез ="Да" Тогда
				УдалитьСтроки();
			Иначе
				Фирма = глВосстановитьЗначение(Контекст,"Фирма");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		глСохранитьЗначение(Контекст,"Фирма",Фирма);
	КонецЕсли;
КонецПроцедуры                      

// ===============================
Процедура НазначитьСубконтоСписания()
	Для Инд = 1 По 3 Цикл
		НазначитьТип("СубконтоСписания"+Инд,СчетСписания.ВидСубконто(Инд));
	КонецЦикла;
КонецПроцедуры                      

// ===============================
Процедура ИзмСчетСписания()
	Если ПустоеЗначение(СчетСписания) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если СчетСписания.Валютный = 1 Тогда
	    Предупреждение("Счет, на который списываются ТМЦ, не может быть валютным!");
		СчетСписания = 0;
		Возврат;
	КонецЕсли;
	Если СчетСписания.Количественный = 1 Тогда
	    Предупреждение("Счет, на который списываются ТМЦ, не может быть количественным!");
		СчетСписания = 0;
		Возврат;
	КонецЕсли;
	Если (СчетСписания.ВидСубконто(1) = ВидыСубконто.Контрагенты) 
	и (СчетСписания.ВидСубконто(2) = ВидыСубконто.Договора) Тогда
	    Предупреждение("Счет, на который списываются ТМЦ, не может быть счетом взаиморасчетов!");
		СчетСписания = 0;
		Возврат;
	КонецЕсли;           
	Если СчетСписания.ПринадлежитГруппе(СчетПоКоду("23")) = 1 Тогда // + umk
	   // Предупреждение("Для списания в производство используйте документ ""Спис. ТМЦ в производство""!");
		//СчетСписания = 0;
		//Возврат;
	КонецЕсли;
	Если ((Лев(СчетСписания,1)="9")
	ИЛИ ((Лев(СчетСписания,1)="8"))) Тогда
		Если глПроверитьСчетЗатрат(СчетСписания,2,0)=0 Тогда
			СчетСписания = 0;
			Возврат;
		КонецЕсли;                       		
	КонецЕсли;
	НазначитьСубконтоСписания();
КонецПроцедуры

// ======================================
Процедура ИзмВидНДС()
	// пересчитаем суммы НДС в строках табличной части
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
			глВыч_Суммы_Накл(Контекст,-1);
		Иначе
			глВыч_Суммы_Накл(Контекст,1);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура ИзмТМЦ()          
	Если глПроверкаТовараВДокументе(Контекст,ТМЦ) = Нет Тогда
		ТМЦ = глВосстановитьЗначение(Контекст,"ТМЦ");
	Иначе
		Если ТМЦ.Выбран()=1 Тогда
			Если (ПустоеЗначение(Ед) = 1) ИЛИ (ТМЦ <> Ед.Владелец) Тогда
				глУстановкаБазЕд(Контекст,ТМЦ, глКилограмм, 1);
			КонецЕсли;
			// если партия этого ТМЦ уже есть, не будем ее трогать
		КонецЕсли;
	КонецЕсли;
	
	// + umk
	Если ТМЦ.НетБезУпаковки = 1 Тогда 
		ВидУпаковки = ТМЦ.ВидУпаковкиПоУмолчанию;		
	Иначе
		ВидУпаковки = "";
	КонецЕсли;
	// - umk
	
КонецПроцедуры

// ======================================
Процедура ИзмЕд()
	Коэффициент = Ед.Коэффициент;
КонецПроцедуры 
                  

Процедура УвеличитьКво()
//++	
	КоэфУ = 1;
	Если ВвестиЧисло(КоэфУ, "Введите коэф. увеличения", 10, 4) = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Кво = Кво * КоэфУ;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета=СоздатьОбъект("СписокЗначений");
	спСчета.ДобавитьЗначение(ТМЦ.Счет);
	спОтбор.Установить("Счет",спСчета);
	Если глПартионныйУчетПоСкладам = Да Тогда
		спОтбор.Установить("МестоХранения",МестоХранения);  
	КонецЕсли;
	спОтбор.Установить("Контекст",Контекст);                      
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры

// ======================================
Процедура УстРеквизитыШапки(ИзВводаНаОсновании = 0)
	Если (ПустоеЗначение(СчетСписания) = 1) Тогда //(ИзВводаНаОсновании = 1) И
		СчетСписания = глВосстановитьЗначение(Контекст,"СчетСписания");
		НазначитьСубконтоСписания();
		СубконтоСписания1 = глВосстановитьЗначение(Контекст,"СубконтоСписания1");
		СубконтоСписания2 = глВосстановитьЗначение(Контекст,"СубконтоСписания2");
		СубконтоСписания3 = глВосстановитьЗначение(Контекст,"СубконтоСписания3");
		Если ((глПроверитьСчетЗатрат(СчетСписания,0,0)=0)
		ИЛИ (СчетСписания.Выбран()=0)) Тогда
			Если ИспользоватьСчетаРасходов=Класс8 Тогда
				Если ПустоеЗначение(СубконтоСписания3)=0 Тогда
					Если СубконтоСписания3 = ВидыСубконто.ВидыЗатрат Тогда
						СчетСписания = СубконтоСписания3.Счет;		
					КонецЕсли;	
				КонецЕсли;	                             
				Если ПустоеЗначение(СчетСписания) = 1 Тогда
					СчетСписания = СчетПоКоду("801");
				КонецЕсли;	
			Иначе
				СчетСписания = СчетПоКоду("947");
			КонецЕсли;
			НазначитьСубконтоСписания();
		КонецЕсли;
	КонецЕсли;
	
	ВидНДС = глВосстановитьЗначение(, "БазНДС");
КонецПроцедуры 

// ===============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		ДокОснование = "";
		глУстановитьНомер(Контекст);
		Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	ИзмФирма();
	УстРеквизитыШапки();
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
	СозданоВручную = 1;
	ВидОперации = 1;
КонецПроцедуры

Процедура ЗаполнитьТЧ(Док)	
	Если ПустоеЗначение(Док.УчетПоФирме) = 0 Тогда
		ТЗДок = СоздатьОбъект("ТаблицаЗначений"); 
		Док.ВыгрузитьТабличнуюЧасть(ТЗДок);
		ТЗДок.Свернуть("ТМЦ,ВидУпаковки,ЦенаПродавца", "КвоПоФакту");
		//ТЗДок.НоваяКолонка("Ключ", "Строка");
		//ТЗДок.ВыбратьСтроки();
		//Пока ТЗДок.ПолучитьСтроку() = 1 Цикл
		//	ТЗДок.Ключ = ЗначениеВСтрокуВнутр(ТЗДок.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТЗДок.ВидУпаковки);
		//КонецЦикла;
		ТЗДок.Сортировать("ТМЦ");
	КонецЕсли;
	
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку()>0 Цикл
		// Документ основание - Инвентаризация, 
		// списываем только те ТМЦ, по которым была выявлена недостача
		Если (Док.Разница < 0) И (Док.ДляП <> Да) И (Док.РаспределятьВСписания <> Да) Тогда
			НоваяСтрока();
			ТМЦ = Док.ТМЦ; 
			НазначитьТип("Предпочтение","Документ");
			Предпочтение = Док.Партия;
			Ед = Док.Ед;
			Коэффициент = Док.Коэффициент;
			Если Док.ДопКво = 1 Тогда
			    ДопКво = - Док.Разница;
			Иначе
				Кво = - Док.Разница;
			КонецЕсли;
			ЦенаБезНДС = Док.ЦенаБезНДС;
			ВидУпаковки = Док.ВидУпаковки;
			Если ПустоеЗначение(Док.УчетПоФирме) = 0 Тогда
				Стр = 0;
				//Ключ = ЗначениеВСтрокуВнутр(Док.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(Док.ВидУпаковки);
				ТЗДок.НайтиЗначение(ТМЦ, Стр, "ТМЦ");
				Если Стр <> 0 Тогда
					ТЗДок.ПолучитьСтрокуПоНомеру(Стр);
					Пока ТЗДок.ТМЦ = ТМЦ Цикл
						СуммаСНДС = СуммаСНДС - ТЗДок.ЦенаПродавца * ТЗДок.КвоПоФакту;
						ТЗДок.ЦенаПродавца = 0;
						
						Стр = Стр + 1;
						Если Стр > ТЗДок.КоличествоСтрок() Тогда
							Прервать;
						Иначе
							ТЗДок.ПолучитьСтрокуПоНомеру(Стр);
						КонецЕсли;
					КонецЦикла;					
				КонецЕсли;
				СуммаБезНДС = СуммаСНДС;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Если ПустоеЗначение(Док.УчетПоФирме) = 0 Тогда
		Спис = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(Спис, "ТМЦ");
		Партии = СоздатьОбъект("Регистр.Партии");		
		Партии.УстановитьЗначениеФильтра("Фирма", Док.Фирма, 1);
		Партии.УстановитьЗначениеФильтра("ТМЦ", Спис, 2);
		//Партии.УстановитьЗначениеФильтра("МестоХранения", Док.МестоХранения, 1);
		Партии.ВременныйРасчет(1);
		Попытка
			РассчитатьРегистрыНа(Док.УчетПоФирме);
		Исключение
		КонецПопытки;
		
		ТЗПартий = СоздатьОбъект("ТаблицаЗначений"); 
		Партии.ВыгрузитьИтоги(ТЗПартий, 1);
		ТЗПартий.Свернуть("ТМЦ", "ОстатокТовара,Стоимость,ПродСтоимость");
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Стр = 0;
			Если ТЗПартий.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
				СуммаСНДС = ТЗПартий.ПолучитьЗначение(Стр, "Стоимость") + СуммаСНДС; 
				// обнулим значение в партиях, на случай, если вдруг есть ещё одна колбаса.
				ТЗПартий.УстановитьЗначение(Стр, "Стоимость", 0);
				СуммаБезНДС = СуммаСНДС;
				ЦенаБезНДС = СуммаБезНДС / (Кво * Коэффициент);
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;	
КонецПроцедуры

// ======================================
Процедура ВводНаОсновании(Док)
	Дк = СоздатьОбъект("Документ");
	Если Док.Вид() = "Инвентаризация" Тогда
		Дк.ВыбратьПодчиненныеДокументы(,,Док);
		Пока Дк.ПолучитьДокумент() = 1 Цикл
			Если (Дк.Вид() = "СписаниеТМЦ") И (Дк.ПометкаУдаления() = 0) Тогда
				Сообщить("Для данной инвентаризации уже есть списание " + Строка(Дк.ТекущийДокумент()));
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЦикла;
		Если Док.ТипИнвентаризации <> 2 Тогда
		    Предупреждение("Ввод документов "+ПредставлениеВида()+" предусмотрен только на основании Инвентаризации по складу !");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		Если (Док.МестоХранения.Тип = Перечисление.ТипыМестХранения.Склад) и (Док.МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
		    Предупреждение("Нельзя указывать РОЗНИЧНЫЙ склад (магазин)! " + 
						   "Нужно сначала переместить ТМЦ на оптовый склад.");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		ПродажаРозница = Док.МестоХранения.ИспользуетсяВРознице;// + umk
		ЗаполнитьТЧ(Док);
	ИначеЕсли Док.Вид() = "ВедомостьПриемкиПромпереработки" Тогда		
		ДокОснование = Док;
		БезСС = 1;
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		Док.ВыгрузитьТабличнуюЧасть(ТЗ);
		Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			МестоХранения = Док.Перемещение.НовоеМестоХранения;
			Прервать;
		КонецЦикла;
		ТЗ.Свернуть("ТМЦ", "Кво,Принято");
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			Если ТЗ.Кво < ТЗ.Принято Тогда
				НоваяСтрока();
				ТМЦ = ТЗ.ТМЦ;
				ИзмТМЦ();
				Кво = ТЗ.Принято - ТЗ.Кво;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Док.Вид() = "Перемещение" Тогда
		МестоХранения = Док.НовоеМестоХранения;
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		Док.ВыгрузитьТабличнуюЧасть(ТЗ);
		ТЗ.Свернуть("Стало", "Кво,ДопКво");
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			Если ТЗ.Кво > 0 Тогда
				НоваяСтрока();
				ТМЦ = ТЗ.Стало;
				ИзмТМЦ();
				Кво = ТЗ.Кво;
				ДопКво = ТЗ.ДопКво;
			КонецЕсли;
		КонецЦикла;		
	ИначеЕсли Док.Вид() = "УМК_ЗаказКлиента" Тогда
		Если ПустоеЗначение(Док.ВидЗатрат) = 1 Тогда
			Предупреждение("На основании этого заказа нужно вводить расходную накладную");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		
		СчетСписания = СчетПоКоду("947");
		ИзмСчетСписания();		
		СубконтоСписания1 = Константа.БазВидДеятельности;
		СпрПодр = СоздатьОбъект("Справочник.Подразделения");
		СпрПодр.НайтиПоКоду("0000000007", 0);
		СубконтоСписания2 = СпрПодр.ТекущийЭлемент(); 
		СубконтоСписания3 = Док.ВидЗатрат;
		ДатаДок = Док.ДатаДок;		
		ДокументОснование = Док;
		ИтКвоФакт = Док.Итог("КвоФакт");
	    Док.ВыбратьСтроки();                                         
		Пока Док.ПолучитьСтроку()=1 Цикл			
			Если (Док.КвоФакт = 0) И (ИтКвоФакт <> 0) И (Док.СтрокаВзвешена = Да) Тогда
				Сообщить("Для ТМЦ: " + Строка(Док.ТМЦ) + " в строке: " + Строка(Док.НомерСтроки) + " взвешенное количество = 0. Строка пропущена.");
			Иначе
				НоваяСтрока();
				ТМЦ 			= Док.ТМЦ;
				ИзмТМЦ();
				Ед 				= Док.Ед;
				Коэффициент 	= Док.Коэффициент;	
				ВидУпаковки 	= ?(ПустоеЗначение(Док.ВидУпаковкиН) = 1, Док.ВидУпаковки, Док.ВидУпаковкиН);
				Кво = Док.КвоФакт;
			КонецЕсли;	
		КонецЦикла;
	Иначе
		Если Док.Вид() = "ПриходнаяНакладнаяЗапасы" Тогда
			ДатаДок = Док.ДатаДок;		    
		КонецЕсли;
		
		Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			ТМЦ = Док.ТМЦ;
			ИзмТМЦ();
			Кво = Док.Кво;
			ДопКво = Док.ДопКво;
		КонецЦикла;
	КонецЕсли;
	Фирма = Док.Фирма;
	глУстановитьНомер(Контекст);
	//ИзмФирма();
	Если ПустоеЗначение(МестоХранения) = 1 Тогда
		МестоХранения = Док.МестоХранения;
	КонецЕсли;
	УстРеквизитыШапки(?(Док.Вид() = "УМК_ЗаказКлиента", 0, 1));	
	Если Док.Вид() = "Инвентаризация" Тогда
	    СубконтоСписания3 = Константа.ВЗСписаниеИнв;
	КонецЕсли;
	ДокОснование = Док;
	СозданоВручную = 1;
КонецПроцедуры              

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	Форма.ИспользоватьСлой("Общий,"+Значение,2);
КонецПроцедуры

Процедура ИзмфОстаткиНаДокумент()
	Если фОстаткиНаДокумент = 1 Тогда
		РегО = СоздатьОбъект("Регистр.Остатки");
		Если ТекущийДокумент().Выбран() = 1 Тогда
			Если СравнитьТА() = -1 Тогда
				РегО.ВременныйРасчет(1);
			    РассчитатьРегистрыНа(ТекущийДокумент());
			КонецЕсли;		    
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()    
	Если Форма.Параметр = 1 Тогда //--- УМК Сандомирский В.Ю, (АВТОПРОВЕДЕНИЕ при создании из другого документа)
		Если (Проведен() = 1) Тогда
		    Провести();
		Иначе
			Если СравнитьТА() = -1 Тогда
			    Провести(0);
			Иначе
				Провести(1);
			КонецЕсли;			
		КонецЕсли;	    
		СтатусВозврата(0);
		Форма.Закрыть();
		Возврат;		
	КонецЕсли;
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Форма.ЦенаБезНДС.Видимость(0);
		Форма.СуммаБезНДС.Видимость(0);
		Форма.СуммаСНДС.Видимость(0);
		Форма.НДС.Видимость(0);
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1); 
	Если НазваниеНабораПрав() = "Заказ" Тогда		
		Если (МестоХранения.ДляГП = 0) Тогда
			Если ТекущийДокумент().Выбран() = 0 Тогда
			    МестоХранения = Фирма.ОсновнойСклад;
			Иначе
		        СтатусВозврата(0);
				Возврат;
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
//		Форма.кДействия.Доступность(0);
		Форма.кПодбор.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Общий,Основной",2);
	
	ОбщРег=СоздатьОбъект("Регистры");
	ОстаткиТоваров=ОбщРег.Остатки;
	фОстаткиНаДокумент = ВосстановитьЗначение("ОстаткиНаДокумент");
	ИзмфОстаткиНаДокумент();
	
	глСохранитьЗначение(Контекст,"Фирма",Фирма);
	глСохранитьЗначение(Контекст,"МестоХранения",МестоХранения);
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если (ТМЦ = Форма.Параметр) или (ТМЦ.ТМЦДляСписания.Получить(ДатаДок) = Форма.Параметр) Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений);
	СпВидыУпаковкиГлобальный = глПолучитьСписокУпаковкиГлобальный();
	ВидимостьПоВидуОперации();
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	Если глЕстьИзменения(Контекст, СтруктИзменений, "") = 1 Тогда		
		Автор = глПользователь;
	КонецЕсли;
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Если (МестоХранения.ДляГП = 0) Тогда
			Сообщить("Вам запрещено создавать списания, в которых склад не является складом готовой продукции");
	        СтатусВозврата(0);
		КонецЕсли;
	КонецЕсли;
	Попытка
		Если (ДокОснование.Выбран() = 1) И (ДокОснование.Вид() = "УМК_ЗаказКлиента") Тогда
			Если (ДатаДок > ТекущаяДата()) и (ТекущийДокумент().Выбран() = 0) Тогда
			    Попытка
					АвтоВремяОтключить();
					УстановитьВремя(0,1,0);
				Исключение КонецПопытки;
			ИначеЕсли (ДатаДок = ТекущаяДата()) и (ТекущийДокумент().Выбран() = 0) Тогда
				ВремяЗаписи = Константа.ВремяЗаписиРН;
				ПозТире = Найти(ВремяЗаписи, "-");
				Если ПозТире <> 0 Тогда
					Начало = Лев(ВремяЗаписи, ПозТире-1);
					НВремя = Число(Лев(Начало, 2)) * 3600 + Число(Прав(Начало, 2)) * 60;			
					Конец = Сред(ВремяЗаписи, ПозТире+1);
					КЧасы = Число(Лев(Конец, 2));
					КМинуты = Число(Прав(Конец, 2));
					КВремя = КЧасы * 3600 + КМинуты * 60;			
				Иначе
					НВремя = 10 * 3600;
					КВремя = 18 * 3600;
					КЧасы = 18;
					КМинуты = 0;
				КонецЕсли;
				Ч = 0; М = 0; С = 0;
				ТекущееВремя(Ч,М,С);
				ТекВр = Ч*3600+М*60+С;
				Попытка
					Если (ТекВр >= НВремя) и (ТекВр <= КВремя) Тогда
					    УстановитьВремя(КЧасы, КМинуты, 0);
					Иначе
						УстановитьВремя(Ч,М,С);
					КонецЕсли;
				Исключение КонецПопытки;			
			ИначеЕсли (ТекущийДокумент().Выбран() = 1) и (Проведен() = 0) Тогда
				АвтоВремяНачалоДня();
			КонецЕсли;	
		ИначеЕсли НЕ ((ДокОснование.Выбран() = 1) И ((ДокОснование.Вид() = "Инвентаризация") ИЛИ (ДокОснование.Вид() = "УМК_ЗаказКлиента"))) Тогда
			АвтоВремяОтключить();
			УстановитьВремя(16,0,0);
		КонецЕсли;
	    //Если (ДокОснование.Выбран() = 1) Тогда
		//	АвтоВремяОтключить();
		//	УстановитьВремя(23,59,59);
	    //ИначеЕсли (МестоХранения = Константа.СкладОбвалка) ИЛИ  (МестоХранения = Константа.СкладМорозилка) Тогда    
		//	АвтоВремяОтключить();
		//	УстановитьВремя(16,0,0);
		////Иначе
		////	АвтоВремяОтключить();
		////	УстановитьВремя(23,59,59);		    
		//КонецЕсли;
	Исключение КонецПопытки;

	Если (ПустоеЗначение(ДокОснование) = 1) ИЛИ ((ПустоеЗначение(ДокОснование) = 0) И (ДокОснование.Вид() <> "УМК_ЗаказКлиента")) Тогда
		глСохранитьЗначение(Контекст,"СчетСписания", СчетСписания);
		глСохранитьЗначение(Контекст,"СубконтоСписания1", СубконтоСписания1);
		глСохранитьЗначение(Контекст,"СубконтоСписания2", СубконтоСписания2);
		Если (ДокОснование.Вид() <> "Инвентаризация") и (ДокОснование.Вид() <> "ПриходнаяНакладнаяЗапасы") Тогда
			глСохранитьЗначение(Контекст,"СубконтоСписания3", СубконтоСписания3);
		КонецЕсли;
	КонецЕсли;
	глСохранитьЗначение(Контекст,"ОсновнойСклад",МестоХранения);
КонецПроцедуры
                             
// ===============================
Процедура ПриНачалеРедактированияСтроки()
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;
	глСохранитьЗначение(Контекст,"ТМЦ",ТМЦ);
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
	Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
КонецПроцедуры

// =================================
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(глВосстановитьЗначение(,"ФормыНаУкраинском")= Да, "_Укр", "");
	Таб.ИсходнаяТаблица("Списание" + ?((НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ПрочиеЗаказ") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") , "БЦ","") + СуффиксТаблицы);
	глУстПропись(Гривня);
	
    СчетСписанияПеч = "";
	СубконтоПеч = "";    
	СчетСписанияПеч = "" + СчетСписания.Код + " """+ СчетСписания.Наименование + """";
	Если Константа.ФормыНаУкраинском = Да Тогда
		СчетСписанияПеч = "" + СчетСписания.Код + " """+ СчетСписания.ПолнНаименование + """";
	КонецЕсли;
	
	СубконтоПеч = "";
	ТекПокупатель = "";
	
	Для Инд = 1 По СчетСписания.КоличествоСубконто() Цикл
		Попытка
			СубконтоПеч = СубконтоПеч + СокрЛП(ПолучитьАтрибут("СубконтоСписания"+Инд).ПолнНаименование) + ";";
		Исключение
			СубконтоПеч = СубконтоПеч + СокрЛП(ПолучитьАтрибут("СубконтоСписания"+Инд)) + ";";
		КонецПопытки;
	КонецЦикла;
	Если (ПустоеЗначение(ДокОснование) = 0) И (ДокОснование.Вид() = "УМК_ЗаказКлиента") Тогда
		ТекПокупатель = ДокОснование.Контрагент;
	КонецЕсли;
	
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном = 0;
	Пока ПолучитьСтроку() = 1 Цикл
		Ном = Ном + 1;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Списание","");
	глУстПропись(Гривня); 
КонецПроцедуры

// ===============================
Процедура Подбор()
	Перем ВыбЗначение;
	глПодбор(Контекст,"ТМЦ","ДляПодбора");
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)       
	глПриОбработкеПодбора(Выб,Контекст);
	ВыбратьСтроки();// + umk
	Пока ПолучитьСтроку() = 1 Цикл	
		Если (ТМЦ.НетБезУпаковки = 1) И ((ПустоеЗначение(ВидУпаковки) = 1) ИЛИ (ВидУпаковки = НетУп)) Тогда 
			ВидУпаковки = ТМЦ.ВидУпаковкиПоУмолчанию;
		КонецЕсли;	
	КонецЦикла;// - umk	
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
		глВыбратьНДС(Контекст);
		ИзмВидНДС();
		ФлагСтандОбр = 0;
	ИначеЕсли Рекв = "Партия" Тогда
		глМестоХранения = МестоХранения;
	ИначеЕсли Рекв = "Предпочтение" Тогда
		ВыборПредПочтения();
		ФлагСтандОбр = 0;
	ИначеЕсли (Рекв = "ВидУпаковки") Тогда //--- УМК Сандомирский В.Ю, (31.08.14) 
		глВыбратьВидУпаковки(Контекст, ФлагСтандОбр, СпВидыУпаковкиГлобальный, 1);		
	КонецЕсли;		
КонецПроцедуры

Процедура Заполнить()
	Если ПустоеЗначение(ДокОснование) = 0 Тогда
		Если КоличествоСтрок() > 0 Тогда
			Если Вопрос("Заполнить заново?", "Да+Нет") = "Нет" Тогда
				Возврат;
			КонецЕсли;
			УдалитьСтроки();			
		КонецЕсли;
		ЗаполнитьТЧ(ДокОснование);
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьИнв()
	Если ДокОснование.Выбран() = 1 Тогда
		ОткрытьФорму(ДокОснование);
	КонецЕсли;
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

Процедура ИзмПродукцияШ()
	НЗ = глВыбратьНормыЗатрат(ПродукцияШ);
	Если НЗ = 0 Тогда
	    НормыШ = ПродукцияШ.НормыЗатрат.Получить(ДатаДок);
	Иначе
		НормыШ = НЗ;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьПоНормам()
	Если (КоличествоСтрок() > 0) Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	Чис = 1;
	НКво = "";
	
	Если ПустоеЗначение(НормыШ) = 1 Тогда
		Предупреждение("Нормы затрат не указаны");
		Возврат;
	КонецЕсли;
	
	Если НормыШ.Действует = 0 Тогда
	    Предупреждение("Нормы затрат, указанные в заказе не действуют");
	КонецЕсли;
	
	Если глПроверитьДоступКНормам(НормыШ.Продукция) = 0 Тогда
		Возврат;
	КонецЕсли;
	КвоЗамесов = 1;
	НормаОснование = НормыШ;
	тбНормы = СоздатьОбъект("ТаблицаЗначений");
	Если глПолучитьНормы(ПродукцияШ, , НормыШ.КвоПродукции, ДатаДок, , тбНормы,,НКво,,НормыШ,1) = 1 Тогда
		тбНормы.ВыбратьСтроки();
		Пока тбНормы.ПолучитьСтроку() = 1 Цикл
//			Если тбНормы.Кво > 0 Тогда
				НоваяСтрока();
				ТСп = тбНормы.Материал.ТМЦДляСписания.Получить(ДатаДок); 
				ТМЦ = ?(ПустоеЗначение(ТСп) = 1, тбНормы.Материал, ТСп);
				ИзмТМЦ();
				Кво = тбНормы.Кво * КвоКутеров;
				глПолучитьСкладСписания(Контекст, НормыШ.Продукция, ТМЦ);
//			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале");