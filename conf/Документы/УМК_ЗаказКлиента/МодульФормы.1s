Перем РегО;
Перем СписокДействий;
Перем СтараяДата;              
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем НачальнаяДатаДокумента;
Перем СпВидыУпаковкиГлобальный; 							//--- УМК Сандомирский В.Ю. (06.11.14)
Перем СпВидыУпаковкиЛокальный;  							//--- УМК Сандомирский В.Ю. (06.11.14)
Перем СпрТМЦ, СпрРазрешенныеУпаковкиТМЦ, СпрВидУпаковки;  	//--- УМК Сандомирский В.Ю. (17.11.14)
Перем ТекИмяФайла;
Перем ТЗ_Фильтр;
Перем ОшибкиПриИмпорте;  									//--- УМК Сандомирский В.Ю. (08.12.14)
Перем спОшибки; 											//--- УМК Сандомирский В.Ю. (12.12.14)
Перем ГоловнойЗаказ, МодифВзвешивание;
Перем Расширение;
Перем СписокТары;
Перем ИзначальнаяТаблица;
Перем ЕстьПодчиненныйЗаказ;
Перем ТекстФайл, ИмяФайлаЛога, НДок, ДДок, ПисатьЛог;

Процедура ИзмДоговор() Далее
Процедура РазделитьЗаказ(Док = "") Далее
Процедура ПровестиЗаказ(Закрывать, ВременноеСохранение = 0) Далее

Процедура УстановитьВидимостьПоВидуУпаковки()	
	РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВидУпаковки);
	Если ПустоеЗначение(РВУ) = 0 Тогда
		Если ПустоеЗначение(РВУ.ТМЦПодарок) = 0 Тогда
			Форма.КвоУпаковок.Видимость(1);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура УстановитьВидимостьПоВидуУпаковки_Общая()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		УстановитьВидимостьПоВидуУпаковки();
		Если Форма.КвоУпаковок.Видимость() = 1 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры // 

Процедура НайтиЕстьПодчиненный()
	ЕстьПодчиненныйЗаказ = 0;
	Док = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(,, ГоловнойЗаказ);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если (Док.Вид() = "УМК_ЗаказКлиента") И (Док.ПометкаУдаления() = 0) Тогда
			ЕстьПодчиненныйЗаказ = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//======================================================================
Процедура ИзмБрутто(Принудительно = 0)
	Если Ед.Единица = Константа.БазЕдиница Тогда
		Если (Брутто < КвоФакт) И (Принудительно = 0) Тогда
			Брутто = КвоФакт;
		КонецЕсли;
		КвоФ = Брутто - ?(ПустоеЗначение(Тара) = 1, 0, Тара.Вес * КвоТары);
		Если КвоФ <= 0 Тогда
			Предупреждение("Проверьте правильно ли ввели Тару. Фактический вес получается меньше нуля");
		КонецЕсли;
	    КвоФакт = КвоФ;
	Иначе
		Если Ед.Вес = 0 Тогда
			Предупреждение("У единицы измерения не задан вес");			
		КонецЕсли;
		
		Брутто = КвоФакт * Ед.Вес + ?(ПустоеЗначение(Тара) = 1, 0, Тара.Вес * КвоТары);
	КонецЕсли;
КонецПроцедуры // ИзмБрутто

//======================================================================
Процедура ИзмТМЦ() Далее

//======================================================================
Процедура ЗаписатьВЛог(ТЗаписи, ПисатьСразу = 0)
	Если ПисатьЛог = Да Тогда
		ТекстФайл.ДобавитьСтроку(ТЗаписи + ". " + Строка(ТекущаяДата()) + " в " + Строка(ТекущееВремя()) + " № "+ НДок + " от " + Строка(ДДок));
		Если ПисатьСразу = 1 Тогда
			ТекстФайл.Записать(ИмяФайлаЛога);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Процедура АктивизироватьСтрокуПоПараметру(Параметр)
	Ном = Параметр.Получить("ТМЦ");
	Упак = Параметр.Получить("ВидУпаковки"); 
	Упак = ?(ПустоеЗначение(Упак) = 1, НетУп, Упак);
	
	НомерСтрокиСТМЦ = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл			
		Если (ТМЦ = Ном) Тогда
			НомерСтрокиСТМЦ = НомерСтроки;
			Если ((ВидУпаковки = Упак) ИЛИ ((ПустоеЗначение(ВидУпаковки) = 1) И (Упак = НетУп))) Тогда
				НомерСтрокиСТМЦ = 0;
				АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;				
		КонецЕсли;
	КонецЦикла;

	Если НомерСтрокиСТМЦ <> 0 Тогда
		АктивизироватьСтроку(НомерСтрокиСТМЦ);
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Функция ПроверкаКорректностиВремениДокумента()

	СписВремен = СоздатьОбъект("СписокЗначений");
	СписВремен.ДобавитьЗначение("1");
	СписВремен.ДобавитьЗначение("01");
	СписВремен.ДобавитьЗначение("2");
	СписВремен.ДобавитьЗначение("02");
	СписВремен.ДобавитьЗначение("3");
	СписВремен.ДобавитьЗначение("03");
	СписВремен.ДобавитьЗначение("4");
	СписВремен.ДобавитьЗначение("04");
	СписВремен.ДобавитьЗначение("5");
	СписВремен.ДобавитьЗначение("05");
	СписВремен.ДобавитьЗначение("6");
	СписВремен.ДобавитьЗначение("06");
	СписВремен.ДобавитьЗначение("7");
	СписВремен.ДобавитьЗначение("07");
	СписВремен.ДобавитьЗначение("8");
	СписВремен.ДобавитьЗначение("08");
	СписВремен.ДобавитьЗначение("9");
	СписВремен.ДобавитьЗначение("09");
	СписВремен.ДобавитьЗначение("10");
	СписВремен.ДобавитьЗначение("11");
	СписВремен.ДобавитьЗначение("12");
	СписВремен.ДобавитьЗначение("13");
	СписВремен.ДобавитьЗначение("14");
	СписВремен.ДобавитьЗначение("15");
	СписВремен.ДобавитьЗначение("16");
	СписВремен.ДобавитьЗначение("17");
	СписВремен.ДобавитьЗначение("18");
	СписВремен.ДобавитьЗначение("19");
	СписВремен.ДобавитьЗначение("20");
	СписВремен.ДобавитьЗначение("21");
	СписВремен.ДобавитьЗначение("22");
	СписВремен.ДобавитьЗначение("23");
	
	Если СписВремен.НайтиЗначение(СокрЛП(ВремяЗаказа)) = 0 Тогда
		Предупреждение("Не корректно задано время заказа !!! " + ВремяЗаказа);
		Возврат 1;
	КонецЕсли;
	
КонецФункции // ПроверкаКорректностиВремениДокумента()

// ===============================
Функция УстДоступность() 	
	Если (НазваниеНабораПрав() <> "Весовщик") И (НазваниеНабораПрав() <> "ВесовщикСыр") И (НазваниеНабораПрав() <> "МастерЭкспедиции") Тогда
		Если Кво > 0 Тогда
			Форма.Кво.Доступность(1);
			Форма.КвоШт.Доступность(0);
		ИначеЕсли КвоШт > 0 Тогда
			Форма.Кво.Доступность(0);
			Форма.КвоШт.Доступность(1);
		Иначе	
			Форма.Кво.Доступность(1);
			Форма.КвоШт.Доступность(1);
		КонецЕсли;
	Иначе
		Если ТМЦ.СтикероватьВсегда = 1 Тогда
			Форма.Стикеровать.Доступность(0);
		КонецЕсли;
	КонецЕсли;
    
	Если (ПустоеЗначение(ГоловнойЗаказ) = 0) И (Модифицированность() = 1) Тогда
		Расширение.СбросМодифицированности();
	КонецЕсли;
	Возврат "";
КонецФункции

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ДатаУК = глПолучитьДатуИзУК(ДатаДок, ТМЦ);
	КонецЦикла;
КонецПроцедуры
                                
// =============================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда
	
		Если ПустоеЗначение(Контрагент.КатегорияЦен.Получить(ДатаДок)) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
		Иначе	
			КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		КонецЕсли;      						
		
		Регион = Контрагент.Регион;		
		ДатаЦ = Контрагент.ДатаЦ.Получить(ДатаДок);
		Если ПустоеЗначение(ДатаЦ) = 1 Тогда
			ДатаЦ = ДатаДок;
		КонецЕсли;		
	КонецЕсли;   
	
	//Маршрут = глВернутьМаршрут(Контрагент, Договор);		
	К = Контрагент;
	Если ПустоеЗначение(К) = 0 Тогда
		ОткрытьФормуМодально("Обработка.ВыборМаршрута", К);
		Если ТипЗначенияСтр(К) = "СписокЗначений" Тогда
			Маршрут = К.Получить("Маршрут");
			Договор = К.Получить("Договор");
			ИзмДоговор();
		Иначе
			Маршрут = "";
		КонецЕсли;
	Иначе
		Маршрут = "";
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьИзСпецификации()
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	ДокСпец = СоздатьОбъект("Документ.УМК_Спецификация");
	Если ДокСпец.Выбрать("Выберите спецификацию", "ФормаСписка") = 1 Тогда
		ДокСпец.ВыбратьСтроки();
		Пока ДокСпец.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			ТМЦ = ДокСпец.ТМЦ;
			ВидУпаковки = ДокСпец.ВидУпаковки;
			ИзмТМЦ();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // 

// =============================== УМК Сандомирский В.Ю. (04.11.14)
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Варианы.ДобавитьЗначение("&спецификация");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбораЗаказ");  		//--- УМК Сандомирский В.Ю. (14.11.14)
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора");
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
		ИначеЕсли Результат = 4 Тогда
			ЗаполнитьИзСпецификации();			
	    КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//======================================================================
// =============================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ИзмКво()
	глРассчитатьПересчетКво(Контекст);
КонецПроцедуры

// =============================== УМК Сандомирский В.Ю. (25.11.14)
Процедура ИзмКвоШт()
	глРассчитатьПересчетКво(Контекст);
КонецПроцедуры

// =============================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбораЗаказа(Выб,Контекст);
	УстановитьВидимостьПоВидуУпаковки_Общая();
КонецПроцедуры //Обработка подбора

// =============================== УМК Сандомирский В.Ю. (04.11.14)
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = ТМЦ.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;  
	
КонецПроцедуры //ПересчетСтроки

// =============================== УМК Сандомирский В.Ю. (04.11.14) (13.02.15) пересчет цен при изменении какого либо реквизита шапкки (ДатаДок, Контрагент, ТипЦен)
// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
Процедура ИзмРеквизитШапки(Реквизит, ИмяРекв = "")           	
	Если (Реквизит = "Контрагент") ИЛИ (Реквизит = "ДатаДок") Тогда //--- УМК Сандомирский В.Ю. (13.02.15) 
		ИзмКонтрагент();
	КонецЕсли;
	
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	
	//текОтвет = Вопрос("В документе изменен реквизит """+?(ИмяРекв = "", Реквизит, ИмяРекв)+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глПриИзмененииТовара(Контекст, 1);
	КонецЦикла;	
КонецПроцедуры 
          
//====================================================================== УМК Сандомирский В.Ю. (08.11.14)
Процедура ПечатьНаСклад(СоСкладами = 0)
	//--- УМК Сандомирский В.Ю. (08.11.14)	
	ПриЗаписиПерепроводить(0);
	
	Распечатана = 1;	
	Если ТекущийДокумент().Выбран() = 0 Тогда		//--- УМК Сандомирский В.Ю. (14.05.15) установить время документа 
	    Попытка
			АвтоВремяОтключить();
			УстановитьВремя(Число(ВремяЗаказа),0,0);
		Исключение КонецПопытки;
	КонецЕсли;
	
	Если ПустоеЗначение(ГоловнойЗаказ) = 1 Тогда
		Записать();
	КонецЕсли;

	ЕстьМаленькийВес = "";	
	ЕстьСтикеровка = "";
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если КвоПересчет < 1 Тогда
			ЕстьМаленькийВес = "!!!ЕСТЬ МАЛЕНЬКИЙ ВЕС";
			Прервать;
		КонецЕсли;
		Если Стикеровать = Да Тогда
			ЕстьСтикеровка = "Есть стикеровка";
		КонецЕсли;
	КонецЦикла;
	
	ПриЗаписиПерепроводить(1);	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");	
	Таб.ИсходнаяТаблица("НаСклад"); 
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ);
	РазделятьПоСтраницам = ?((ТаблТМЦ.КоличествоСтрок() > 16) И (СоСкладами = 1), 1, 0);
	
	Если СоСкладами = 1 Тогда
		глСортироватьТаблицуПоСкладу(ТаблТМЦ, Контекст);
	КонецЕсли;
	
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = ?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);
	ПечВремяЗаказа = "" + ВремяЗаказа + ":00";
	ПримечаниеКонстанта = Константа.УМК_ТекстЗаказНаСклад.Получить(ДатаДок);
	Таб.ВывестиСекцию("Шапка");
	Таб.ПовторятьПриПечатиСтроки(10, 10);    
	ТаблТМЦ.НоваяКолонка("КодВесов", "Строка", 5);
	
	ТаблТМЦ.ВыбратьСтроки();
	ИтогПечКг = 0;
	ТекГруппа = "";
	ТекСклад = ""; ТекФормаУпаковки = ""; ПерваяСтраница = 1; ПервыйВакуум = 1;
	Спец = глПолучитьКодыИзСпецификации(Контрагент, ДатаДок);
	
	Пока ТаблТМЦ.ПолучитьСтроку() = 1 Цикл
		Если Спец.КоличествоСтрок() > 0 Тогда
			ТМЦУпаковка = ЗначениеВСтрокуВнутр(ТаблТМЦ.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(?(ТаблТМЦ.ВидУпаковки = НетУп, ПолучитьПустоеЗначение("Справочник.ВидыУпаковки"), ТаблТМЦ.ВидУпаковки));
			Стр = 0;
			Если Спец.НайтиЗначение(ТМЦУпаковка, Стр, "ТМЦУпаковка") = 1 Тогда
				Если Спец.ПолучитьЗначение(Стр, "КодКлиента") <> "" Тогда
					ТаблТМЦ.КодВесов = Спец.ПолучитьЗначение(Стр, "КодДляШК");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ПустоеЗначение(ТаблТМЦ.КодВесов) = 1 Тогда
			Если ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 0 Тогда
				РВУ = глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ, ТаблТМЦ.ВидУпаковки);
				Если ПустоеЗначение(РВУ) = 0 Тогда
					ТаблТМЦ.КодВесов = Строка(РВУ.КодPLU) + Формат(Число(ТаблТМЦ.ТМЦ.КодЭ), "Ч(0)3");
				КонецЕсли;
			КонецЕсли;
			Если ПустоеЗначение(ТаблТМЦ.КодВесов) = 1 Тогда
				ТаблТМЦ.КодВесов = Формат(Число(ТаблТМЦ.ТМЦ.КодЭ), "Ч(0)4");
			КонецЕсли;
		КонецЕсли;
		
		Стикер = ?(ТаблТМЦ.Стикеровать = Да, "стик. ", "");
		Если ТаблТМЦ.КвоПересчет = 0 Тогда
			Предупреждение("В строке: " + ТаблТМЦ.НомерСтроки + " не задано количество. Документ не будет напечатан");
			Возврат;
		КонецЕсли;
		Если СоСкладами = 1 Тогда
			Если (ТекСклад <> ТаблТМЦ.СкладСорт) ИЛИ (ТекФормаУпаковки <> ТаблТМЦ.ФормаУпаковки) Тогда
				Если (РазделятьПоСтраницам = 1) И (ПерваяСтраница = 0) И (ПервыйВакуум = 1) Тогда
					Таб.НоваяСтраница();					
				КонецЕсли;
				Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 0) И (ТаблТМЦ.ВидУпаковки <> НетУп) И (ПустоеЗначение(ТаблТМЦ.СкладСорт) = 1) Тогда					
					ПервыйВакуум = 0;
				КонецЕсли;
				ПерваяСтраница = 0;
				Таб.ВывестиСекцию("РазрывСклад");
				ТекСклад = ТаблТМЦ.СкладСорт;
				ТекФормаУпаковки = ТаблТМЦ.ФормаУпаковки;
			КонецЕсли;
		Иначе
			Если ТекГруппа <> ТаблТМЦ.ТМЦ.Родитель Тогда
				Таб.ВывестиСекцию("РазрывГруппы");
				ТекГруппа = ТаблТМЦ.ТМЦ.Родитель;
			КонецЕсли;
		КонецЕсли;
		
		ПечУпаковка = ""; 							//---УМК Сандомирский В.Ю. (11.11.14)
		Если ТаблТМЦ.ВидУпаковки.Код <> "0" Тогда   //---УМК Сандомирский В.Ю. (11.11.14)
			ПечУпаковка = ТаблТМЦ.ВидУпаковки;
		КонецЕсли;
		
		ПечШтуки 	= ?(ТаблТМЦ.КвоШт > 0,Формат(ТаблТМЦ.КвоШт,"Ч12.0"),"");		
		Если ТаблТМЦ.КвоШт > 0 Тогда
			Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп)  Тогда
				ПечКг = ТаблТМЦ.Кво + 	ТаблТМЦ.КвоШт * ТаблТМЦ.ТМЦ.Вес;
			Иначе	
				РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
				Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
					ПечКг = ТаблТМЦ.Кво + 	ТаблТМЦ.КвоШт * РазрешенныйВидУпаковкиТМЦ.ВесУпаковки.Получить(ДатаДок) * глПолучитьВычитатьВес(ТаблТМЦ, ДатаДок);
				КонецЕсли;		
			КонецЕсли;
		Иначе
			ПечКг = ТаблТМЦ.Кво;	
		КонецЕсли;
		
		ИтогПечКг = ИтогПечКг + ПечКг;		
		ПечКг 	  = ?(ПечКг > 0,Формат(ПечКг,"Ч12.1"),"");
		//--- Определим задана ли основная упаковка и если задана //--- УМК Сандомирский В.Ю. (02.12.14)
		Серый = "";
		Если (ТаблТМЦ.ВидУпаковки = НетУп) ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1 ) Тогда
			//--- Пропускаем без упаковка
			Цвет = "Ц";
		Иначе
			Если ПустоеЗначение(ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию) <> 1 Тогда
				Если ТаблТМЦ.ВидУпаковки <> ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию Тогда
					Серый = "Серый";				
				КонецЕсли;	
			КонецЕсли;
			Цвет = "";
		КонецЕсли;
		
		Если ТаблТМЦ.КвоШт > 0 Тогда
			Таб.ВывестиСекцию("СтрокаШт"+ Серый + Цвет);
		Иначе
			Таб.ВывестиСекцию("Строка"+ Серый + Цвет);
		КонецЕсли;
		//... УМК Сандомирский В.Ю. (02.12.14)		
	КонецЦикла;

	ИтогПечКг 		= ?(ИтогПечКг > 0,Формат(ИтогПечКг,"Ч12.1"),"");	
	Таб.ВывестиСекцию("Дно");	
	Таб.ПовторятьПриПечатиСтроки(1,9);
	
	Таб.ПараметрыСтраницы(1,,,5,5,5,5,4,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Заказ покупателя","");		
КонецПроцедуры // 

//====================================================================== УМК Сандомирский В.Ю. (03.06.15)
Процедура ПечатьНаЭкспедицию()

	//--- УМК Сандомирский В.Ю. (08.11.14)
	ПриЗаписиПерепроводить(0);
	Распечатана = 1;
	
	Если ТекущийДокумент().Выбран() = 0 Тогда		//--- УМК Сандомирский В.Ю. (14.05.15) установить время документа 
	    Попытка
			АвтоВремяОтключить();
			УстановитьВремя(Число(ВремяЗаказа),0,0);
		Исключение КонецПопытки;
	КонецЕсли;
	
	Если ПустоеЗначение(ГоловнойЗаказ) = 1 Тогда
		Записать();
	КонецЕсли;
	
	
	ПриЗаписиПерепроводить(1);	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");	
	Таб.ИсходнаяТаблица("НаЭкспедицию"); 
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,ВидУпаковки,Ед,Кво,КвоШт,ПримечаниеСтроки,СоздатьПеремещение");	
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = ?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);
	ПечВремяЗаказа = "" + ВремяЗаказа + ":00";
	ПримечаниеКонстанта = Константа.УМК_ТекстЗаказНаСклад.Получить(ДатаДок);
	Таб.ВывестиСекцию("Шапка");
	Таб.ПовторятьПриПечатиСтроки(10, 10);    
	ТаблТМЦ.ВыбратьСтроки();

	ИтогПечКг = 0;
	ТекГруппа = "";
	Пока ТаблТМЦ.ПолучитьСтроку() = 1 Цикл
		  
		Если ТекГруппа <> ТаблТМЦ.ТМЦ.Родитель Тогда
			Таб.ВывестиСекцию("РазрывГруппы");
			 ТекГруппа = ТаблТМЦ.ТМЦ.Родитель;
		КонецЕсли;
		
		ПечУпаковка = ""; 							//---УМК Сандомирский В.Ю. (11.11.14)
		Если ТаблТМЦ.ВидУпаковки.Код <> "0" Тогда   //---УМК Сандомирский В.Ю. (11.11.14)
			ПечУпаковка = ТаблТМЦ.ВидУпаковки;
		КонецЕсли;
		
		ПечШтуки 	= ?(ТаблТМЦ.КвоШт > 0,Формат(ТаблТМЦ.КвоШт,"Ч12.0"),"");
		
		Если ТаблТМЦ.КвоШт > 0 Тогда
			Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп)  Тогда
				ПечКг = ТаблТМЦ.Кво + 	ТаблТМЦ.КвоШт * ТаблТМЦ.ТМЦ.Вес;
			Иначе	
				РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
				Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
					ПечКг = ТаблТМЦ.Кво + 	ТаблТМЦ.КвоШт * РазрешенныйВидУпаковкиТМЦ.ВесУпаковки.Получить(ДатаДок) * глПолучитьВычитатьВес(ТаблТМЦ, ДатаДок);
				КонецЕсли;		
			КонецЕсли;
		Иначе
			ПечКг = ТаблТМЦ.Кво;	
			
			Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп)  Тогда
				
				// --- УМК Сандомирсикй В.Ю. (04.06.15) не печатать в таком случае
				
				//Попытка
				////	ПечШтуки = Формат(ТаблТМЦ.Кво / ТаблТМЦ.ТМЦ.Вес,"Ч12.0");
				//Исключение
				//КонецПопытки;
					
			Иначе	
				РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
				Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
					
					ТекВес = ?(РазрешенныйВидУпаковкиТМЦ.ВесУпаковки=0,1,РазрешенныйВидУпаковкиТМЦ.ВесУпаковки.Получить(ДатаДок));
					
					ПечШтуки = Формат(ТаблТМЦ.Кво / ТекВес * глПолучитьВычитатьВес(ТаблТМЦ, ДатаДок),"Ч12.0");
					ПечШтуки = СокрЛП(ПечШтуки) + " уп";
					
				КонецЕсли;	
			КонецЕсли;
					
		КонецЕсли;
		
		Если (ТаблТМЦ.ВидУпаковки = НетУп) ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) Тогда
			//--- этто без упаковки
		Иначе
			Если ТаблТМЦ.КвоШт > 0 Тогда
				ПечШтуки = СокрЛП(ПечШтуки) + " уп";
			КонецЕсли;	
		КонецЕсли;
			
		ИтогПечКг = ИтогПечКг + ПечКг;
		
		ПечКг 		= ?(ПечКг > 0,Формат(ПечКг,"Ч12.1"),"");
		
		//--- Определим задана ли основная упаковка и если задана //--- УМК Сандомирский В.Ю. (02.12.14)
		Серый = "";
		Если (ТаблТМЦ.ВидУпаковки = НетУп) ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1 ) Тогда 
			//--- Пропускаем без упаковка
		Иначе
			
			//--- УМК Сандомирский В.Ю. (27.05.15) основной вид упаковки теперь реквизит разрешенного вида упаковки			
			//Серый = "Серый";
			//РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
			//Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
			//	Если РазрешенныйВидУпаковкиТМЦ.ОсновнаяУпаковка = 1 Тогда
			//		Серый = "";				
			//	КонецЕсли
			//КонецЕсли;
			
			//--- УМК Сандомирский В.Ю. (27.05.15) было
			Если ПустоеЗначение(ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию) <> 1 Тогда
				Если ТаблТМЦ.ВидУпаковки <> ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию Тогда		
					Серый = "Серый";				
				КонецЕсли;	
			КонецЕсли;
			//... УМК Сандомирский В.Ю. (27.05.15) было
			
		КонецЕсли;
		
		Если ТаблТМЦ.КвоШт > 0 Тогда
			Таб.ВывестиСекцию("СтрокаШт"+ Серый);
		Иначе
			Таб.ВывестиСекцию("Строка"+ Серый);			
		КонецЕсли;
		//... УМК Сандомирский В.Ю. (02.12.14)
		
	КонецЦикла;

	ИтогПечКг 		= ?(ИтогПечКг > 0,Формат(ИтогПечКг,"Ч12.1"),"");
	
	Таб.ВывестиСекцию("Дно");	
	
	Таб.ПовторятьПриПечатиСтроки(1,9);
	
	Таб.ПараметрыСтраницы(1,,,5,5,5,5,4,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: НА ЭКСПЕДИЦИЮ","");
		
КонецПроцедуры // 

//====================================================================== УМК Сандомирский В.Ю. (03.06.15)
Процедура ПечатьНаВакуум()
	//--- УМК Сандомирский В.Ю. (08.11.14)
	ПриЗаписиПерепроводить(0);
	Распечатана = 1;
	
	Если ТекущийДокумент().Выбран() = 0 Тогда		//--- УМК Сандомирский В.Ю. (14.05.15) установить время документа 
	    Попытка
			АвтоВремяОтключить();
			УстановитьВремя(Число(ВремяЗаказа),0,0);
		Исключение КонецПопытки;
	КонецЕсли;
	
	Если ПустоеЗначение(ГоловнойЗаказ) = 1 Тогда
		Записать();
	КонецЕсли;

	ПриЗаписиПерепроводить(1);	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");	
	Таб.ИсходнаяТаблица("НаВакуум"); 
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,ВидУпаковки,Ед,Кво,КвоШт,ПримечаниеСтроки,СоздатьПеремещение");	
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = ?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);
	ПечВремяЗаказа = "" + ВремяЗаказа + ":00";
	ПримечаниеКонстанта = Константа.УМК_ТекстЗаказНаСклад.Получить(ДатаДок);
	  
	//--- Считаю вакуумные позиции
	ВакуумныхПозиций = 0;
	ТаблТМЦ.ВыбратьСтроки();
	Пока ТаблТМЦ.ПолучитьСтроку() = 1 Цикл		
		Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп) Тогда
			Продолжить;
		КонецЕсли;
	
		ВакуумныхПозиций = 1;		
	КонецЦикла;	
	
	Если ВакуумныхПозиций = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Таб.ВывестиСекцию("ШапкаВакуум");
	Таб.ПовторятьПриПечатиСтроки(10, 10);  
	
	ТаблТМЦ.ВыбратьСтроки();

	ИтогПечКг = 0;
	ТекГруппа = "";
	Пока ТаблТМЦ.ПолучитьСтроку() = 1 Цикл		
		Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп) Тогда
			Продолжить;
		КонецЕсли;
		
		  
		Если ТекГруппа <> ТаблТМЦ.ТМЦ.Родитель Тогда
			Таб.ВывестиСекцию("РазрывГруппы");
			 ТекГруппа = ТаблТМЦ.ТМЦ.Родитель;
		КонецЕсли;
		
		ПечУпаковка = ""; 							//---УМК Сандомирский В.Ю. (11.11.14)
		Если ТаблТМЦ.ВидУпаковки.Код <> "0" Тогда   //---УМК Сандомирский В.Ю. (11.11.14)
			ПечУпаковка = ТаблТМЦ.ВидУпаковки;
		КонецЕсли;
		
		ПечШтуки 	= ?(ТаблТМЦ.КвоШт > 0,Формат(ТаблТМЦ.КвоШт,"Ч12.0"),"");
		
		Если ТаблТМЦ.КвоШт > 0 Тогда
			Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп)  Тогда
				ПечКг = ТаблТМЦ.Кво + 	ТаблТМЦ.КвоШт * ТаблТМЦ.ТМЦ.Вес;
			Иначе	
				РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
				Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
					ПечКг = ТаблТМЦ.Кво + 	ТаблТМЦ.КвоШт * РазрешенныйВидУпаковкиТМЦ.ВесУпаковки.Получить(ДатаДок) * глПолучитьВычитатьВес(ТаблТМЦ, ДатаДок);
				КонецЕсли;		
			КонецЕсли;
		Иначе
			ПечКг = ТаблТМЦ.Кво;	
			
			Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп)  Тогда
				
				Попытка
					ПечШтуки = Формат(ТаблТМЦ.Кво / ТаблТМЦ.ТМЦ.Вес,"Ч12.0");
				Исключение
				КонецПопытки;
					
			Иначе	
				РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
				Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
					
					ТекВес = ?(РазрешенныйВидУпаковкиТМЦ.ВесУпаковки=0,1,РазрешенныйВидУпаковкиТМЦ.ВесУпаковки.Получить(ДатаДок)) * глПолучитьВычитатьВес(ТаблТМЦ, ДатаДок);
					ПечШтуки = Формат(ТаблТМЦ.Кво / ТекВес,"Ч12.0");
					ПечШтуки = СокрЛП(ПечШтуки) + " уп";
				КонецЕсли;	
					
			КонецЕсли;
					
		КонецЕсли;
		
		Если (ТаблТМЦ.ВидУпаковки = НетУп) ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) Тогда
			//--- этто без упаковки
		Иначе
			Если ТаблТМЦ.КвоШт > 0 Тогда
				ПечШтуки = СокрЛП(ПечШтуки) + " уп";
			КонецЕсли;	
		КонецЕсли;
		
		
		ИтогПечКг = ИтогПечКг + ПечКг;
		
		ПечКг 		= ?(ПечКг > 0,Формат(ПечКг,"Ч12.1"),"");
		
		//--- Определим задана ли основная упаковка и если задана //--- УМК Сандомирский В.Ю. (02.12.14)
		Серый = "";
		Если (ТаблТМЦ.ВидУпаковки = НетУп) ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1 ) Тогда 
			//--- Пропускаем без упаковка
		Иначе
			
			//--- УМК Сандомирский В.Ю. (27.05.15) основной вид упаковки теперь реквизит разрешенного вида упаковки			
			//Серый = "Серый";
			//РазрешенныйВидУпаковкиТМЦ =  глПолучитьРазрешенныйВидУпаковки(ТаблТМЦ.ТМЦ,ТаблТМЦ.ВидУпаковки);
			//Если ПустоеЗначение(РазрешенныйВидУпаковкиТМЦ) <> 1 Тогда
			//	Если РазрешенныйВидУпаковкиТМЦ.ОсновнаяУпаковка = 1 Тогда
			//		Серый = "";				
			//	КонецЕсли
			//КонецЕсли;
			
			//--- УМК Сандомирский В.Ю. (27.05.15) было
			Если ПустоеЗначение(ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию) <> 1 Тогда
				Если ТаблТМЦ.ВидУпаковки <> ТаблТМЦ.ТМЦ.ВидУпаковкиПоУмолчанию Тогда		
					Серый = "Серый";				
				КонецЕсли;	
			КонецЕсли;
			//... УМК Сандомирский В.Ю. (27.05.15) было
			
		КонецЕсли;
		
		Если ТаблТМЦ.КвоШт > 0 Тогда
			Таб.ВывестиСекцию("СтрокаШтВакуум"+ Серый);
		Иначе
			Таб.ВывестиСекцию("СтрокаВакуум"+ Серый);			
		КонецЕсли;
		//... УМК Сандомирский В.Ю. (02.12.14)
		
	КонецЦикла;

	ИтогПечКг 		= ?(ИтогПечКг > 0,Формат(ИтогПечКг,"Ч12.1"),"");	
	Таб.ВывестиСекцию("Дно");	
	Таб.ПовторятьПриПечатиСтроки(1,9);	
	Таб.ПараметрыСтраницы(1,,,5,5,5,5,4,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: НА ВАКУУМ","");		
КонецПроцедуры // 

//======================================================================
// ===============================
Процедура Печать(БыстраяПечать=0, СоСкладами = 0) 	
	Перем ВыбЗначение;
	
	Попытка
		Если СоСкладами = 0 Тогда
			глСортироватьТабличнуюЧасть(Контекст);
		КонецЕсли;
	Исключение
		//--- Документ окрыт для просмотра
	КонецПопытки;	
	
	Если ПроверкаКорректностиВремениДокумента() = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	Если Число(ВремяЗаказа) > 23 Тогда				//--- УМК Сандомирский В.Ю, (28.06.15)
		Предупреждение("Не корректное время заказа !!! " + СокрЛП(ВремяЗаказа));
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "Весовщик") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") Тогда						//--- УМК Сандомирский В.Ю, РОЛИ "ЗАКАЗ" нельзя печатать непроведенные документы (13.06.14) тут с (12.11.14)
		Если ТекущийДокумент().Проведен() = 0 Тогда
			НельзяПечатать = 1;
			Если ПустоеЗначение(ГоловнойЗаказ) = 0 Тогда
				НельзяПечатать = 1 - ГоловнойЗаказ.Проведен();
			КонецЕсли;
			Если НельзяПечатать = 1 Тогда
				Предупреждение("Нельзя печатать не проведенные ЗАКАЗЫ");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПечатьНаСклад(СоСкладами);  //--- УМК Сандомирский В.Ю. (05.06.15) срочно возвращаемся на старый	
	//ПечатьНаЭкспедицию(); //--- УМК Сандомирский В.Ю. (05.06.15) новые формы пока не нужны
	//ПечатьНаВакуум();		//--- УМК Сандомирский В.Ю. (05.06.15) новые формы пока не нужны
	
	//спВариантов = СоздатьОбъект("СписокЗначений");
	//спВариантов.ДобавитьЗначение(1,"На склад");
	//спВариантов.ДобавитьЗначение(2,"На вакуумный цех");
	//
	//Если спВариантов.ВыбратьЗначение(ВыбЗначение,"",,,1) <> 1 Тогда
	//    Возврат;
	//КонецЕсли;
	//                                       
	//Если ВыбЗначение = 1 Тогда
	//    ПечатьНаСклад();
	//	ПечатьНаВакуум();
	//ИначеЕсли ВыбЗначение = 2  Тогда
	//	ПечатьНаВакуум(); //ПечатьНаПроизводство();//--- УМК Сандомирский В.Ю, (02.06.15) 
	//КонецЕсли;
	
	Попытка			
		ПриЗаписиПерепроводить(0);
		фРаспечатан = 1;
		
		ВыбратьСтроки();					//--- УМК Сандомирский В.Ю, (09.02.15) 
		Пока ПолучитьСтроку() = 1 Цикл
			фБылНапечатан = 1;				
		КонецЦикла;
		
		Если ТекущийДокумент().Выбран() = 0 Тогда		//--- УМК Сандомирский В.Ю. (14.05.15) установить время документа 
		    Попытка
				АвтоВремяОтключить();
				УстановитьВремя(Число(ВремяЗаказа),0,0);
			Исключение КонецПопытки;
		КонецЕсли;
		
		Если ПустоеЗначение(ГоловнойЗаказ) = 1 Тогда
			Записать();
		КонецЕсли;

		ПриЗаписиПерепроводить(1);		
	Исключение
	КонецПопытки;	
	
	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "Весовщик") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") Тогда //--- УМК Сандомирский В.Ю, (26.12.14)		
		Форма.ТолькоПросмотр(1);
		Форма.кИмпортExcel.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кДействия.Доступность(0);
		Форма.кОсн.Доступность(0);
	КонецЕсли;		
КонецПроцедуры

//====================================================================== // --- УМК Сандомирский В.Ю. (09.11.14) Водитель Автомобиль и кн ОК
Процедура ЗакрываемВсеРеквизитыКроме()  
        //ЗАПОМИНАЕМ СОСТОЯНИЕ ДОСТУПНОСТИ ПРИ ТОЛЬКОПРОСМОТР(1)
	СписДоступныхРеквизитов = СоздатьОбъект("СписокЗначений");
	Если (НазваниеНабораПрав() = "Весовщик") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") Тогда
		СписДоступныхРеквизитов.ИзСтрокиСРазделителями("""кВесы"",""кВесыМн"",""кУстВесы"",""кЗакрытьВзв"",""кПровестиВзв"",""кОКВзв"", ""кОчиститьФакт"", ""КвоФакт"", ""СтрокаВзвешена"", ""Взвешено"", ""КоличествоКлиента"", 
		|""кСортГ"", ""кСортХ"", ""СоздатьПеремещение"", ""КвоУпаковок""," + ?((ЕстьПодчиненныйЗаказ = 0) И (ПустоеЗначение(ГоловнойЗаказ.МастерЗаказ) = 1), """Разделить"",", "") + """Тара"", ""КвоТары"", ""ВидУпаковкиН"", ""кРазделить""" + 
		?(НазваниеНабораПрав() = "МастерЭкспедиции", ", ""кПечатьСК""", ""));
	Иначе
		СписДоступныхРеквизитов.ИзСтрокиСРазделителями("""Водитель"",""Автомобиль"",""кОК""");		
	КонецЕсли;
 
    ТЗ_Рекв=СоздатьОбъект("ТаблицаЗначений"); 
    ТЗ_Рекв.НоваяКолонка("Реквизит");
    ТЗ_Рекв.НоваяКолонка("ИмяРекв");
    ТЗ_Рекв.НоваяКолонка("Доступность");
    рф = СоздатьОбъект("РасширениеФормы"); 
    рф.УстановитьФорму(Форма);
    Для Сч=0 По рф.КоличествоАтрибутов() - 1 Цикл
        Рекв=рф.ПолучитьАтрибут(Сч);
        ТЗ_Рекв.НоваяСтрока();
        ТЗ_Рекв.Реквизит=Рекв;
        ТЗ_Рекв.ИмяРекв=Рекв.Идентификатор;
        ТЗ_Рекв.Доступность=Рекв.Доступность;
    КонецЦикла;  
 
    ТЗ_Рекв.ВыбратьСтроки();
    Пока ТЗ_Рекв.ПолучитьСтроку()=1 Цикл
        Рекв=ТЗ_Рекв.Реквизит;
        Рекв.Доступность=ТЗ_Рекв.Доступность;
		Если СписДоступныхРеквизитов.НайтиЗначение(Рекв.Идентификатор) <> 0 Тогда
       		Рекв.Доступность = 1;
	   	Иначе
	   		Рекв.Доступность = 0;   
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

Процедура ИзмфОстаткиНаДокумент()
	Если фОстаткиНаДокумент = 1 Тогда
		РегО = СоздатьОбъект("Регистр.Остатки");
		Если ТекущийДокумент().Выбран() = 1 Тогда
			Если СравнитьТА() = -1 Тогда
				РегО.ВременныйРасчет(1);
			    РассчитатьРегистрыНа(ТекущийДокумент());
			КонецЕсли;		    
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ИзмДоговор()
	//Маршрут = глВернутьМаршрут(Контрагент, Договор, ДатаДок);
КонецПроцедуры 

// ===============================
Процедура ВыборОснования()  
	// Процедура по кнопке редактирования основания в докумнете
	СтарДоговор = Договор;
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;
КонецПроцедуры	

// ===============================
Процедура ПриОткрытии()
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		Если глГруппыДоступаКонтрагенты.Принадлежит(Контрагент) = 0 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(ТекущийДокумент()) = 1 Тогда
		Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
			Если ТипЗначенияСтр(Форма.Параметр) = "Документ" Тогда
				ГоловнойЗаказ = Форма.Параметр;
			ИначеЕсли ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
				ГоловнойЗаказ = Форма.Параметр.Получить("Документ");
			КонецЕсли;
			
			Если ГоловнойЗаказ.ПометкаУдаления() = 1 Тогда
				Предупреждение("Заказ помечен на удаление. Взвешивать нельзя");
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			
			ИзначальнаяТаблица = СоздатьОбъект("ТаблицаЗначений");
			ВыгрузитьТабличнуюЧасть(ИзначальнаяТаблица);
			ИзначальнаяТаблица.НоваяКолонка("ТоварВУП", "Строка");
			ИзначальнаяТаблица.ВыбратьСтроки();
			Пока ИзначальнаяТаблица.ПолучитьСтроку() = 1 Цикл
				ИзначальнаяТаблица.ТоварВУП = ЗначениеВСтрокуВнутр(ИзначальнаяТаблица.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ИзначальнаяТаблица.ВидУпаковки);
			КонецЦикла;
			// проверим есть ли подчинённый заказ
			НайтиЕстьПодчиненный();

			Форма.ВидУпаковкиН.Видимость(1);
			Форма.ВидУпаковкиН.Доступность(1);		
			Форма.фПоказатьНовыйВУ.Видимость(0);
			Форма.НомДок.Видимость(1);
			НомДок = ГоловнойЗаказ.НомерДок;
			Форма.НомерДок.Видимость(0);

			глСкопироватьОдинВОдин(Контекст, ГоловнойЗаказ);
			ДатаДок = ГоловнойЗаказ.ДатаДок;
			УстановитьНовыйНомер("ПРФВЗ-");
			УстановитьВремя(1, 1, 1);
			Расширение.ЗапретЗакрытияФормыКнопкой(1);
//			глСброситьФлагМодифицированности(Контекст);
			
			Форма.кОКВзв.Видимость(1);
			Форма.кОК.Видимость(0);			
			Форма.кПровестиВзв.Видимость(1);			
			Форма.кПровести.Видимость(0);
			Форма.кЗакрытьВзв.Видимость(1);
			Форма.кЗакрыть.Видимость(0);
			
			МодифВзвешивание = 0;
		ИначеЕсли (НазваниеНабораПрав() = "Весовщик") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") Тогда
			СтатусВозврата(0);
		КонецЕсли;		
	КонецЕсли;
	
	Если (НазваниеНабораПрав() <> "Администратор") И (НазваниеНабораПрав() <> "ПроизводствоКасса") Тогда
		Форма.ДатаЦ.Доступность(0);
	КонецЕсли;
	Если (НазваниеНабораПрав() = "Администратор") ИЛИ (НазваниеНабораПрав() = "ПроизводствоПросмотрТабель") Тогда
		Форма.КвоФакт.Доступность(1);
	КонецЕсли;
	
	Если (НазваниеНабораПрав() = "Весовщик") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") Тогда
		Форма.ЦенаБезНДС.Видимость(0);
		Форма.ЦенаСНДС.Видимость(0);
		Форма.ЦенаУпаковки.Видимость(0);
		Форма.СуммаУпаковки.Видимость(0);
		Форма.СуммаБезНДС.Видимость(0);
		Форма.НДС.Видимость(0);
		Форма.СуммаСНДС.Видимость(0);
	КонецЕсли;

	Если (ПустоеЗначение(ГоловнойЗаказ) = 1) И ((НазваниеНабораПрав() = "Весовщик") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции")) Тогда
		НужнаФормаВзвешивания = 1;
		Если Проведен() = 0 Тогда
			Если Вопрос("Заказ НЕ проведен. Вы действительно хотите его взвешивать?", "Да+Нет") = "Нет" Тогда
				НужнаФормаВзвешивания = 0;
			КонецЕсли;
		КонецЕсли;
		
		Если НужнаФормаВзвешивания = 1 Тогда
			Док = СоздатьОбъект("Документ");
			Док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент());
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если (Док.Вид() = "РасходнаяНакладная") И (Док.ПометкаУдаления() = 0) Тогда
					Предупреждение("Запрещено редактирование заказа");
					НужнаФормаВзвешивания = 0;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		Если НужнаФормаВзвешивания = 1 Тогда
			КФормы = СоздатьОбъект("СписокЗначений");
			КФормы.Установить("Документ", ТекущийДокумент());
			Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
				КФормы.Установить("ТМЦ", Форма.Параметр.Получить("ТМЦ"));
				КФормы.Установить("ВидУпаковки", Форма.Параметр.Получить("ВидУпаковки"));
			КонецЕсли;
			ОткрытьФорму("Документ.УМК_ЗаказКлиента", КФормы);
			СтатусВозврата(0);
			Возврат;
		Иначе
			Форма.ТолькоПросмотр(1);			
		КонецЕсли;
	КонецЕсли;

	Если ПустоеЗначение(ГоловнойЗаказ) = 0 Тогда
		НДок = ГоловнойЗаказ.НомерДок;
		ДДок = ГоловнойЗаказ.ДатаДок;
	Иначе
		НДок = НомерДок;
		ДДок = ДатаДок;
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);

//	Форма.ДатаДок.ВыполнятьФормулуТолькоПриИзменении(1);
	
	СтараяДата 		 = ДатаДок;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	
	//--- Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (06.11.14)
	СпВидыУпаковкиГлобальный = глПолучитьСписокУпаковкиГлобальный();
	//... Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (06.11.14)
	
	//--- УМК Сандомирский В.Ю. (12.12.14)
	спОшибки = глПолучитьСписокОшибокExcel();
	//... УМК Сандомирский В.Ю. (12.12.14)
	
	Если (НазваниеНабораПрав() = "Заказ") И (фРаспечатан = 1) Тогда //--- УМК Сандомирский В.Ю, (26.12.14)
		Форма.ТолькоПросмотр(1);
		Форма.кИмпортExcel.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кДействия.Доступность(0);
	КонецЕсли;
	
	Если ((НазваниеНабораПрав() = "Технолог") ИЛИ (НазваниеНабораПрав() = "Весовщик") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции")) И (Форма.ТолькоПросмотр() = 0) Тогда 	//--- УМК Сандомирский В.Ю, (09.04.15)
		ЗакрываемВсеРеквизитыКроме();
	КонецЕсли;	
	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кВесы.Доступность(0);
		Форма.кВесыМн.Доступность(0);
		Форма.кУстВесы.Доступность(0);
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
		Форма.кОчиститьФакт.Доступность(0);		
		// Инициализируем список действий по кнопке "Действия"
		СписокДействий = глПолучитьСписокДействий("
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");		
	Иначе
		// =============================== УМК Сандомирский В.Ю. (04.11.14)
		// Инициализируем список действий по кнопке "Действия"
		СписокДействий = глПолучитьСписокДействий("
		    |ТоварныйСостав,
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");		
	КонецЕсли;
	

	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		АктивизироватьСтрокуПоПараметру(Форма.Параметр);
	КонецЕсли;
	
	ИзмфОстаткиНаДокумент();
	Если Проведен() = 1 Тогда
		Форма.ТМЦ.Доступность(0);
		Форма.ВидУпаковки.Доступность(0);
	КонецЕсли;

	УстановитьВидимостьПоВидуУпаковки_Общая();	
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

Процедура РазделитьЗаказ(Док = "")
	Если ПустоеЗначение(ГоловнойЗаказ) = 1 Тогда
		Возврат;
	КонецЕсли;

	ПровестиЗаказ(0, 0);
	
	НайтиЕстьПодчиненный();
	Если ЕстьПодчиненныйЗаказ = 1 Тогда
		Предупреждение("Разделение уже выполнено");
	КонецЕсли;
	Если Док = "" Тогда
		Док = СоздатьОбъект("Документ.УМК_ЗаказКлиента");
		Док.НайтиДокумент(ГоловнойЗаказ);		
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Разделить = Да Тогда
			// будем разделять
			ДокН = СоздатьОбъект("Документ.УМК_ЗаказКлиента");						
			ДокН.Новый();
			глСкопироватьОдинВОдин(ДокН, Контекст);
			ДокН.ДатаДок = ДатаДок;
			глУстановитьНомер(ДокН);
			ТЗДокН = СоздатьОбъект("ТаблицаЗначений");
			ДокН.ВыгрузитьТабличнуюЧасть(ТЗДокН);
			ДокН.МастерЗаказ = ГоловнойЗаказ;
			Инд = 1;
			
			Пока Инд <= ТЗДокН.КоличествоСтрок() Цикл
				ТЗДокН.ПолучитьСтрокуПоНомеру(Инд);
				Если (ТЗДокН.Разделить = Да) И (ТЗДокН.КвоПересчет - ТЗДокН.КвоФакт > 0) Тогда
					ТЗДокН.Кво = ТЗДокН.КвоПересчет - ТЗДокН.КвоФакт;
					ТЗДокН.Разделить = Нет;
					ТЗДокН.КвоФакт = 0;
					ТЗДокН.СтрокаВзвешена = "";
					ТЗДокН.Взвесил = "";
					ТЗДокН.КвоТары = 0;
					ТЗДокН.СоздатьПеремещение = "";
					ТЗДокН.УстВручную = 0;
					ТЗДокН.КвоШт = 0;
					Инд = Инд + 1;					
				Иначе
					ТЗДокН.УдалитьСтроку(Инд);
				КонецЕсли;
			КонецЦикла;
			ДокН.ЗагрузитьТабличнуюЧасть(ТЗДокН);
			ДокН.ВыбратьСтроки();
			Пока ДокН.ПолучитьСтроку() = 1 Цикл
				глРассчитатьПересчетКво(ДокН);
			КонецЦикла;
			глВыполнитьДействияПередЗаписью(ДокН);
			
			ТЗС = СоздатьОбъект("ТаблицаЗначений");
			Док.ВыгрузитьТабличнуюЧасть(ТЗС);
			
			Инд = 1;
			Пока Инд <= ТЗС.КоличествоСтрок() Цикл
				ТЗС.ПолучитьСтрокуПоНомеру(Инд);
				Если ТЗС.Разделить = Да Тогда
					ТЗС.Кво = ТЗС.КвоФакт;
					ТЗС.КвоПересчет = ТЗС.Кво;
					ТЗС.КвоШт = 0;
				КонецЕсли;
				Если ТЗС.КвоФакт = 0 Тогда
					ТЗС.УдалитьСтроку(Инд);
				Иначе
					Инд = Инд + 1;
				КонецЕсли;
			КонецЦикла;
			Док.ЗагрузитьТабличнуюЧасть(ТЗС);
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку() = 1 Цикл
				глРассчитатьПересчетКво(Док);
			КонецЦикла;
			
			глВыполнитьДействияПередЗаписью(Док);
			
			НачатьТранзакцию();
			Док.Записать();
			Если Док.Проведен()  = 1 Тогда
				Док.Провести();
			КонецЕсли;
			
			ДокН.Записать();
			Если Док.Проведен() = 1 Тогда
				ДокН.Провести();
			КонецЕсли;
			ЗафиксироватьТранзакцию();
			
			ЗагрузитьТабличнуюЧасть(ТЗС);
			
			// обнуляем количество 			
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//======================================================================
Процедура ПровестиЗаказ(Закрывать, ВременноеСохранение = 0)
	Если ПустоеЗначение(ГоловнойЗаказ) = 0 Тогда
		// нужно записать вес с заказ
		Отв = ?(ВременноеСохранение = 1, "Да", Вопрос("Сохранить результаты взвешивания?", "Да+Нет"));
		Если Отв = "Да" Тогда
			ЗаписатьВЛог("Начато сохранение", 1);
			// данные нужно записать в головной заказ
			Док = СоздатьОбъект("Документ.УМК_ЗаказКлиента");
			Док.НайтиДокумент(ГоловнойЗаказ);			
			Состояние("Блокируем заказ для записи");
			Если Док.Блокировка(1) = 0 Тогда
				Если ВременноеСохранение = 0 Тогда
					ЗаписатьВЛог("Документ открыт другим пользователем");
					Предупреждение("Документ открыт другим пользователем");					
				Иначе
					Сообщить("Не удалось выполнить временное сохранение");
					ЗаписатьВЛог("Не удалось выполнить временное сохранение");
				КонецЕсли;
				Возврат;
			КонецЕсли;				
			Состояние("Пишем данные в заказ");
			ТЗ = СоздатьОбъект("ТаблицаЗначений");
			Док.ВыгрузитьТабличнуюЧасть(ТЗ);
			ТЗ.НоваяКолонка("ТоварВУП", "Строка");
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				ТЗ.ТоварВУП = ЗначениеВСтрокуВнутр(ТЗ.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТЗ.ВидУпаковки);
			КонецЦикла;
			
			ТЗТек = СоздатьОбъект("ТаблицаЗначений");
			ВыгрузитьТабличнуюЧасть(ТЗТек);
			
			ТЗТек.ВыбратьСтроки();
			Пока ТЗТек.ПолучитьСтроку() = 1 Цикл
				НужноИскать = 0;
				
				Попытка
					ТЗ.ПолучитьСтрокуПоНомеру(ТЗТек.НомерСтроки);
					Если (ТЗ.ТМЦ <> ТЗТек.ТМЦ) ИЛИ (ТЗ.ВидУпаковки <> ТЗТек.ВидУпаковки) Тогда
						НужноИскать = 1;
					КонецЕсли;
				Исключение
					НужноИскать = 1;
				КонецПопытки;
				
				ТоварВУП = ЗначениеВСтрокуВнутр(ТЗТек.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТЗТек.ВидУпаковки);
				Если НужноИскать = 1 Тогда					
					Стр = 0;
					Если ТЗ.НайтиЗначение(ТоварВУП, Стр, "ТоварВУП") = 1 Тогда
						ТЗ.ПолучитьСтрокуПоНомеру(Стр);
					Иначе
						Предупреждение("Строка с продукцией: " + Строка(ТЗТек.ТМЦ) + " вид упаковки: " + Строка(ТЗТек.ВидУпаковки) + " не найдена в заказе. Возможно её удалил другой пользователь");
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если ((ПустоеЗначение(ТЗ.СоздатьПеремещение) = 1) И (ПустоеЗначение(ТЗТек.СоздатьПеремещение) = 0))
					ИЛИ ((ПустоеЗначение(ТЗ.СоздатьПеремещение) = 0) И (ПустоеЗначение(ТЗТек.СоздатьПеремещение) = 0)) Тогда
					ТЗ.СоздатьПеремещение = ТЗТек.СоздатьПеремещение;
				КонецЕсли;
				Если ((ПустоеЗначение(ТЗ.Разделить) = 1) И (ПустоеЗначение(ТЗТек.Разделить) = 0))
					ИЛИ ((ПустоеЗначение(ТЗ.Разделить) = 0) И (ПустоеЗначение(ТЗТек.Разделить) = 0)) Тогда
					ТЗ.Разделить = ТЗТек.Разделить;
				КонецЕсли;				
				Если (ТЗ.ВидУпаковкиН <> ТЗТек.ВидУпаковкиН) Тогда
					ТЗ.ВидУпаковкиН = ТЗТек.ВидУпаковкиН;
				КонецЕсли;				
				
				//Если ((ПустоеЗначение(ТЗТек.Взвесил) = 1) ИЛИ (ТЗТек.Взвесил = глПользователь)) И 
				//	 ((ТЗТек.КвоФакт <> 0) ИЛИ (ТЗТек.УстВручную = 1) ИЛИ ((ТЗТек.КвоФакт = 0) И (ПустоеЗначение(ТЗ.Взвесил) = 0))) Тогда
				Если ((ПустоеЗначение(ТЗТек.Взвесил) = 1) ИЛИ (ТЗТек.Взвесил = глПользователь)) И ((ТЗТек.КвоФакт <> 0) ИЛИ (ТЗТек.УстВручную = 1)) Тогда				
					ЗаписатьДаные = 1;
					Если (ПустоеЗначение(ТЗ.Взвесил) = 0) И (ТЗ.Взвесил <> глПользователь) И (ТЗТек.УстВручную = 0) Тогда
						Если Вопрос("Товар: " + Строка(ТЗ.ТМЦ) + " в/у: " + Строка(ТЗ.ВидУпаковки) + " уже взвешен пользователем: " + Строка(ТЗ.Взвесил) + ". Записать новое значение?", "Да+Нет") = "Нет" Тогда
							ЗаписатьДаные = 0;
						КонецЕсли;
					КонецЕсли;
					
					Если ЗаписатьДаные = 1 Тогда							
						ТЗ.КвоФакт = ТЗТек.КвоФакт;
						ТЗ.Тара = ТЗТек.Тара;
						ТЗ.Брутто = ТЗТек.Брутто;
						ТЗ.КвоТары = ТЗТек.КвоТары;
						ТЗ.УстВручную = ТЗТек.УстВручную;
						ТЗ.СтрокаВзвешена = ТЗТек.СтрокаВзвешена;
						ТЗ.СоздатьПеремещение = ТЗТек.СоздатьПеремещение;
						ТЗ.Разделить = ТЗТек.Разделить;
						ТЗ.КоличествоКлиента = ТЗТек.КоличествоКлиента;
						ТЗ.Взвесил = глПользователь;
						ТЗ.КвоУпаковок = ТЗТек.КвоУпаковок;
					Иначе
						//СтрИзн = 0;
						//Если ИзначальнаяТаблица.НайтиЗначение(ТоварВУП, СтрИзн, "ТоварВУП") = 1 Тогда
						//	Если ИзначальнаяТаблица.ПолучитьЗначение(СтрИзн, "СоздатьПеремещение") <> ТЗТек.СоздатьПеремещение Тогда
						//		ТЗ.СоздатьПеремещение = ТЗТек.СоздатьПеремещение;
						//	КонецЕсли;
						//КонецЕсли;						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;

			Успех = 0;			
			Док.ЗагрузитьТабличнуюЧасть(ТЗ);
			глВыполнитьДействияПередЗаписью(Док);
			Состояние("Запись");
			//НачатьТранзакцию();
			Попытка
				Док.Записать();
				ЗаписатьВЛог("Окончание сохранения", 1);
				Если (Док.Проведен() = 1) И (ВременноеСохранение = 0) Тогда
					Если Док.Провести() = 0 Тогда
						ТекстПроблем = "";
						ВыбратьСтроки();
						Пока ПолучитьСтроку() = 1 Цикл
							Если (ПустоеЗначение(ВидУпаковки) = 0) и (ВидУпаковки <> НетУп) Тогда
								РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВидУпаковки);
								Если ПустоеЗначение(РВУ) = 0 Тогда
									Если (ПустоеЗначение(РВУ.ТМЦПодарок) = 0) и (КвоУпаковок = 0) Тогда
										ТекстПроблем = ТекстПроблем + "
										|" + "Заполните количество упаковок в строке: " + Строка(НомерСтроки) + " для ТМЦ: " + Строка(ТМЦ) + " вид уп.: " + ВидУпаковки;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;

						Предупреждение("Не удалось провести документ" + ТекстПроблем);
						ЗаписатьВЛог("Не удалось провести");
					КонецЕсли;
				КонецЕсли;
				Успех = 1;
			Исключение
				Сообщить("Временное сохранение не удалось");
				ЗаписатьВЛог("Временное сохранение не удалось", 1);
				Док.Блокировка(0);
			КонецПопытки;			
			//ЗафиксироватьТранзакцию();

			//разделим заказ
			//Если (ЕстьПодчиненныйЗаказ = 0) И (ВременноеСохранение = 0) Тогда
			//	ЗаписатьВЛог("Начато разделение заказа");
			//	РазделитьЗаказ(Док);
			//	ЗаписатьВЛог("Закончено разделение заказа", 1);
			//КонецЕсли;
			
			Если Док.Блокировка() = 1 Тогда
				Док.Блокировка(0);
			КонецЕсли;

			Если (Закрывать = 1) И (Успех = 1) Тогда
				Расширение.СбросМодифицированности();
				//глСброситьФлагМодифицированности(Контекст);	
				МодифВзвешивание = 0;
				Форма.Закрыть(0);
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПровестиЗаказ

Процедура ИзмВзвешено()
	Если СтрокаВзвешена = Да Тогда
		Взвесил = глПользователь;
	Иначе
		Взвесил = "";
	КонецЕсли;
	ПровестиЗаказ(0, 1);	
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	Если ПустоеЗначение(ГоловнойЗаказ) = 0 Тогда // Это взвешивание, сам документ записывать не будем
		ПровестиЗаказ(1);
		СтатусВозврата(0);
	КонецЕсли;
	
	глПроверкаДатыДок(Контекст,"Запись");
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ);
	
	//Если ВыполнитьПроверкуПечати(ТаблТМЦ, 1) = 0 Тогда
	//    СтатусВозврата(0);
	//	Возврат;
	//КонецЕсли;
		
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	Если ПроверкаКорректностиВремениДокумента() = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если (НазваниеНабораПрав() <> "Технолог") И (НазваниеНабораПрав() <> "Весовщик") И (НазваниеНабораПрав() <> "ВесовщикСыр") И (НазваниеНабораПрав() <> "МастерЭкспедиции") Тогда
		Автор = глПользователь;
	КонецЕсли;
	
	СуръезнаяОшибко = 0;
	
	//--- Проверка заполненности контрагента 
	Если ПустоеЗначение(Контрагент) = 1 Тогда
		Сообщить("Контрагент не заполнен. Заказ не записан", "!");
		СуръезнаяОшибко = 1;
	КонецЕсли;
	
	//--- Проверка заполненности времени
	Если ПустоеЗначение(ВремяЗаказа) = 1 Тогда
		Сообщить("Время заказа не заполнено. Заказ не записан", "!");
		СуръезнаяОшибко = 1;
	КонецЕсли;
	
	Если (ДатаДок > ТекущаяДата()) Тогда
		Если (ДатаДок - ТекущаяДата()) > 5  Тогда
			Предупреждение("Внимание дата заказа - очень в будующем :" + ДатаДок);
		КонецЕсли;
	КонецЕсли;
		
	Если (ДатаДок < РабочаяДата()) И (НазваниеНабораПрав() <> "Технолог") И (НазваниеНабораПрав() <> "Весовщик") И (НазваниеНабораПрав() <> "ВесовщикСыр")
	 И (НазваниеНабораПрав() <> "МастерЭкспедиции") Тогда //--- неправильный импорт из Эксель //--- УМК Сандомирский В.Ю. (09.04.15) 
		Предупреждение("Дата заказа меньше рабочей даты, документ не записан", "!!!");
		СуръезнаяОшибко = 1;
	КонецЕсли;
	Если ПустоеЗначение(ДатаСоздания) = 1 Тогда
		ДатаСоздания = ТекущаяДата();  			//--- УМК Сандомирский В.Ю. (08.12.14) 
	КонецЕсли;	
  	Если (ДатаДок <> ДатаСоздания) И (ДатаДок - 1 <> ДатаСоздания) Тогда
  		Предупреждение("Документ создаётся не текущей и не завтрашней датой");
  	КонецЕсли;	
	
	Если ОшибкиПриИмпорте = 1 Тогда //--- неправильный импорт из Excel //--- УМК Сандомирский В.Ю. (08.12.14)
		Предупреждение("Произошли ошибки при импорте из Excel, документ не записан", "!!!");
		СуръезнаяОшибко = 1;
	КонецЕсли;	
	
	Если СуръезнаяОшибко = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если ТекущийДокумент().Выбран() = 0 Тогда		//--- УМК Сандомирский В.Ю. (14.05.15) установить время документа 
	    Попытка
			АвтоВремяОтключить();
			УстановитьВремя(Число(ВремяЗаказа),0,0);
		Исключение КонецПопытки;
	КонецЕсли;
	
	// проверим цены
	//ВыбратьСтроки();
	//Пока ПолучитьСтроку() = 1 Цикл
	//	Если ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара Тогда
	//		ЦСНДС = глВернутьЦену(ТМЦ, КатегорияЦен, ДатаДок, Валюта);
	//		ЦенаДляПроверки = глПолучитьЦенуВУП(Контекст, КатегорияЦен, ДатаДок, Валюта, Дата_курса, ТМЦ, ЦСНДС);
	//		Если ЦенаСНДС = ЦенаДляПроверки Тогда
	//			Сообщить("В строке: " + НомерСтроки  + " указана только цена вак. уп. либо нулевая цена");
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;
	
	//СохранитьЗначение("ОстаткиНаДокумент", фОстаткиНаДокумент);
	
	глСортироватьТабличнуюЧасть(Контекст);	
	Если СтатусВозврата() = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ВидУпаковкиН) = 1 Тогда
				ВидУпаковкиН = ВидУпаковки;
			КонецЕсли;		
		КонецЦикла;		
	КонецЕсли;
	//--- УМК Сандомирский В.Ю. (23.06.15) Сумма и вес по заказу
	глВыполнитьДействияПередЗаписью(глВзятьКонтекст(Контекст));
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)		
	Если (Рекв = "ВидУпаковки") ИЛИ (Рекв = "ВидУпаковкиН") Тогда //--- УМК Сандомирский В.Ю, (06.11.14)
		Если Рекв = "ВидУпаковки" Тогда
			СтарВид = ВидУпаковки;
		КонецЕсли;
		глВыбратьВидУпаковки(Контекст, ФлагСтандОбр, СпВидыУпаковкиГлобальный, 1,, Рекв);
		Если (Рекв = "ВидУпаковки") И (ВидУпаковки <> СтарВид) Тогда
			ВидУпаковкиН = ВидУпаковки;
		КонецЕсли;
		Если СтарВид <> ВидУпаковки Тогда
			Если Лев(ПримечаниеСтроки, 2) = "@@" Тогда
				Поз = Найти(ПримечаниеСтроки, "##");
				Если Поз <> 0 Тогда
					ПримечаниеСтроки = Сред(ПримечаниеСтроки, Поз + 2);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли (Рекв = "Тара") Тогда //--- УМК Сандомирский В.Ю, (06.11.14)
		ФлагСтандОбр = 0;
		СписокТары.ВыбратьЗначение(Тара, ,,,2);
	ИначеЕсли Рекв = "Маршрут" Тогда
		ФлагСтандОбр = 0;
		К = Контрагент;
		ОткрытьФормуМодально("Обработка.ВыборМаршрута", К);
		Если ТипЗначенияСтр(К) = "СписокЗначений" Тогда
			Маршрут = К.Получить("Маршрут");
			Договор = К.Получить("Договор");
			ИзмДоговор();
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (03.11.14)
Процедура ИзмТМЦ()	
	Если ТМЦ.НетБезУпаковки = 1 Тогда // --- УМК Сандомирский В.Ю. (11.06.15)
		ВидУпаковки = ТМЦ.ВидУпаковкиПоУмолчанию;
	Иначе
		ВидУпаковки = НетУп;
	КонецЕсли;
	ВидУпаковкиН = ВидУпаковки;
	Если НомерСтроки = 1 Тогда
		глУстановитьСкладПоТМЦ(ТМЦ, Контекст);
	КонецЕсли;
	Если ТМЦ.СтикероватьВсегда = 1 Тогда
		Стикеровать = Да;
	КонецЕсли;
	
	глПриИзмененииТовара(Контекст, 1);
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (25.11.14)
Процедура ИзмВидУпаковки()
	Если ПустоеЗначение(ГоловнойЗаказ) = 1 Тогда
		глПриИзмененииТовара(Контекст, 1);
		Если (ВидУпаковки <> НетУп) И (ПустоеЗначение(ВидУпаковки) = 0) Тогда
			УстановитьВидимостьПоВидуУпаковки();
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (03.11.14)
Функция ИтКол()
	
	Возврат "Итог кг :" + (Итог("КвоПересчет")) + "    Итог сумма:" + Итог("СуммаБезНДС") + "   Итог С НДС : " + Итог("СуммаСНДС");
	
КонецФункции // ИтКол()

//====================================================================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ЗаполнитьПоУмолчанию()
	
	глУстановитьФирму(Контекст);
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад",Константа.ОсновнойСклад);  
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
	ИзмКонтрагент();
	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (04.11.14)
Процедура ВводНового(ПризнакКопирования)	
	Если ((НазваниеНабораПрав() = "Весовщик") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции")) И (ПустоеЗначение(Форма.Параметр) = 1) Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Распечатана = 0;
	ДатаСоздания = ТекущаяДата();
	ДатаВзвешен = Дата(0);
	ВремяВзвешен = "";
	Если ПризнакКопирования = 1 Тогда  
		фРаспечатан = 0; //--- УМК Сандомирский В.Ю. (28.12.14)
		Распечатана = 0; //--- УМК Сандомирский В.Ю. (28.12.14)
		Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
			глУстановитьНомер(Контекст);
		КонецЕсли;
		ДатаУКШ = ДатаДок;
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			СтрокаВзвешена = "";
			КвоФакт = 0;
			Взвесил = "";
			СоздатьПеремещение = "";
			УстВручную = 0;
			ДатаУК = глПолучитьДатуИзУК(?(ПустоеЗначение(ДатаУКШ) = 1, ДатаДок, ДатаУКШ), ТМЦ);
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоУмолчанию();	
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (17.11.14) 
Процедура СоздатьНовуюСтроку(ТекТМЦ,ТекКоментСтроки="",ТекКг,ТекШт,ТекУпаковка = "", ЕстьОшибки, ТекСтикеровать) //--- ТекТМЦ = Код ТМЦ, ТекУпаковка = Код ВидУпаковки 
	//--- Ищем Товар 
	Если СпрТМЦ.НайтиПоКоду(ТекТМЦ,0) = 1 Тогда
		ТекСтрока = "";
		ТекКолонка   = "";
		ТекстКомментария = "";
		Если ТЗ_Фильтр.НайтиЗначение(СпрТМЦ.ТекущийЭлемент(),ТекСтрока,ТекКолонка) = 0 Тогда  //--- УМК Сандомирский В.Ю. (19.11.14)  ищем по фильтру
			Сообщить(" " + ТекИмяФайла + " Товар " + СпрТМЦ + " - не производится !","!");
			//ЕстьОшибки = 1;
			//ТекстКомментария = ТекстКомментария + "@@ " + Строка(СпрТМЦ) + " ##";
			Возврат;
		Иначе
			//--- ищем у товара нужную упаковку
			
			ТекВидУпаковки = "";			
			Если ТекУпаковка <> "0" Тогда //--- пропускаем без упаковки 
				Если СпрВидУпаковки.НайтиПоКоду(ТекУпаковка) = 1 Тогда	
					СпрРазрешенныеУпаковкиТМЦ.ИспользоватьВладельца(СпрТМЦ.ТекущийЭлемент());
					Если СпрРазрешенныеУпаковкиТМЦ.НайтиПоРеквизиту("ВидУпаковки",СпрВидУпаковки,0) = 1  Тогда												
						Если СпрРазрешенныеУпаковкиТМЦ.ПометкаУдаления() = 1 Тогда
							Сообщить(" " + ТекИмяФайла + " Товар " + СпрТМЦ + " в упаковке " + СпрВидУпаковки +  " - не производится !","!");
							ТекВидУпаковки = "";
							ТекстКомментария = ТекстКомментария + "@@ " + СпрВидУпаковки + " ##";
//							Возврат;
						Иначе
							ТекВидУпаковки = СпрВидУпаковки.ТекущийЭлемент();
						КонецЕсли;
					Иначе
						Сообщить(" " + ТекИмяФайла + " Товар " + СпрТМЦ + " в упаковке " + СпрВидУпаковки +  " - не производится !","!");
						ТекстКомментария = ТекстКомментария + "@@ " + СпрВидУпаковки + " ##";
//						Возврат;	
					КонецЕсли;
				КонецЕсли;					
			ИначеЕсли ТекУпаковка = "0" Тогда // --- УМК Сандомирский В.Ю. (11.06.15) проверка на когда старый бланк а товар уже без упаковки не отпускается				
				Если СпрТМЦ.НетБезУпаковки = 1 Тогда
					Сообщить(" " + ТекИмяФайла + " Товар " + СпрТМЦ + " БЕЗ Упаковки - не производится !","!");
					ТекстКомментария = ТекстКомментария + "@@ без уп. ##";
//					Возврат;
				КонецЕсли;				
			КонецЕсли;				
		КонецЕсли;
			
		ЕстьОшибки = Макс(ЕстьОшибки, СтрДлина(ТекстКомментария));
		НоваяСтрока();
		ТМЦ = СпрТМЦ.ТекущийЭлемент();		
		ВидУпаковки			= ТекВидУпаковки;
		ВидУпаковкиН		= ТекВидУпаковки;
		Кво 	= ТекКг;
		КвоШт 	= ТекШт;
		Стикеровать = ?((ПустоеЗначение(ТекСтикеровать) = 0) ИЛИ (ТМЦ.СтикероватьВсегда = 1), Да, "");
		Если (ПустоеЗначение(ВидУпаковки) = 1) ИЛИ (ВидУпаковки = НетУп) Тогда
			Если ПустоеЗначение(ТМЦ.УпаковкаЗамены) = 0 Тогда
				ВидУпаковки = ТМЦ.УпаковкаЗамены;
				ВидУпаковкиН = ВидУпаковки;
				ТекстКомментария = "";
			КонецЕсли;
		КонецЕсли;
		ПримечаниеСтроки 	= ТекстКомментария + ТекКоментСтроки;
		
		глПриИзмененииТовара(Контекст, 1);
	
	ИначеЕсли ТекТМЦ = "НоваяПродукция" Тогда	
		
		НоваяСтрока();
		ПримечаниеСтроки = ТекКоментСтроки;
		Кво 	= ТекКг;
		КвоШт 	= ТекШт;
		
	КонецЕсли;
	
	глВыч_Суммы_Накл(Контекст); //--- УМК Сандомирский В.Ю. (09.12.14) 
КонецПроцедуры // СоздатьНовуюСтроку()

//====================================================================== //--- УМК Сандомирский В.Ю. (17.11.14)
Функция ПолучитьДробноеЧисло(ТекСтрока) //--- преобразует точки лили запятые к нормальному формату
	ТекСтрока = Число(СокрЛП(СтрЗаменить(ТекСтрока,",",".")));
	Возврат ТекСтрока;
КонецФункции // 

//====================================================================== //--- УМК Сандомирский В.Ю. (17.11.14)
Функция ПроверкаНеЦифр(ТекСтрока,ТекФормат)
	
	ВсеНеХорошо = 0;
	
//	Если ТекФормат = "Основной" Тогда //--- Если вдруг дата
//		
//	ИначеЕсли ТекФормат = "@" Тогда
//
//	Иначе		
//		ВсеНеХорошо = 1;
//		Возврат ВсеНеХорошо;	
//	КонецЕсли;
	
	ТекСтрока = СокрЛП(СтрЗаменить(ТекСтрока,",","."));  //--- УМК Сандомирский В.Ю. (15.11.14)
	Если СтрДлина(ТекСтрока) > 0 Тогда
		Если Число(ТекСтрока) = 0 Тогда
			ВсеНеХорошо = 1;
		КонецЕсли;	
	КонецЕсли;
	
	Возврат ВсеНеХорошо;
	
КонецФункции // ПроверкаНеЦифр(Килограммы)ПроверкаНеЦифр(Килограммы)

//====================================================================== //--- УМК Сандомирский В.Ю. (19.11.14)
Процедура ЗаполнитьФильтрТМЦ()
	СписокВыбТМЦ = глПрочитатьФильтр("" + КаталогИБ() + "filter_set1.txt");	
	СписокВыбТМЦИсключение = глПрочитатьФильтр("" + КаталогИБ() + "filter_set2.txt");	
	
	ТЗ_Фильтр = СоздатьОбъект("ТаблицаЗначений");
	ТекстЗапроса = "";
	Запрос = глПолучитьЗапросПоТоварамДляЗаказа(СписокВыбТМЦ, СписокВыбТМЦИсключение, ТекстЗапроса);
	ДатаЗаказа = РабочаяДата();
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Выгрузить(ТЗ_Фильтр);
	
	//ТЗ_Фильтр.ВыбратьСтроку();
	
КонецПроцедуры // ЗаполнитьФильтрТМЦ

//====================================================================== //--- УМК Сандомирский В.Ю. (17.11.14)
Процедура ИмпортИзExcel()
	Перем Кат, НачальныйКаталог;

	СпрТМЦ 						= СоздатьОбъект("Справочник.ТМЦ");	
	СпрРазрешенныеУпаковкиТМЦ 	= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
	СпрВидУпаковки 				= СоздатьОбъект("Справочник.ВидыУпаковки");
	
	НачальныйКаталог = ""; //НачальныйКаталог = "c:\network\";
	
	Если ФС.ВыбратьФайл(0,Кат,НачальныйКаталог,"Выбери файл Еxcel",,"*.xls",)=1 Тогда   
		СтикероватьШ = 1;
	   	Попытка 
	        xl=СоздатьОбъект("Excel.Application");
	    Исключение       
	        Предупреждение("MS Excel не загружен !");
			Возврат;
		КонецПопытки;
		
		Книга=xl.Workbooks; 		
		
		ОшибкиПриИмпорте = 1; // --- Excel если вылетит тот так и останется
		
		УдалитьСтроки();
		
		ЗаполнитьФильтрТМЦ(); // --- УМК Сандомирский В.Ю, (19.11.14)
		
		ТекИмяФайла = СокрЛП(Кат);
		
        Книга.Open(НачальныйКаталог+Кат); 
		xl.Visible = 1;   //--- видмость окна ексель 1- видимость 0 - нет
	    Лист = xl.Worksheets(1); 
		Лист.Activate();
     	//данные
	 	Лист.UnProtect("123");
    	 	
	 	Высота=Лист.Rows.Count;
     	Ширина=Лист.Columns.Count;
		
	 	ПрерватьЦиклы = "";
	 	
	 	НовыйБланк = 1;	//--- УМК Сандомирский В.Ю. (10.11.14)	
	 	Если ПустоеЗначение(Константа.УМК_ДатаНачалаГрупУпаковок) <> 1 Тогда 
	 		ДатаБланка			= Дата(Прав(СокрЛП(Лист.Cells(1,16).Value),8));
	 		
	 		Если ПустоеЗначение(ДатаБланка) = 1 Тогда
	 			НовыйБланк = -1;
	 			Сообщить("" + ТекИмяФайла + " Старый бланк, импорт не выполнен !");
	 		ИначеЕсли  ДатаБланка < Константа.УМК_ДатаФормированияБланкаЗаказа Тогда
		 		//Сообщить("Бланк от !!!" + ДатаБланка + " существует более новый - " + Константа.УМК_ДатаФормированияБланкаЗаказа + "");
		 		НовыйБланк = 0;
		 	КонецЕсли;	
		 	
	 	КонецЕсли; //--- УМК Сандомирский В.Ю. (10.11.14)	
		ЕстьСтикеровать = -1;
		ЕстьСтикероватьВШапкеТолькоУп = Лист.Cells(10, 12).Value;
		ЕстьСтикероватьВШапке = Лист.Cells(10, 18).Value; 
		Если ПустоеЗначение(ЕстьСтикероватьВШапке) = 0 Тогда
			СтикероватьШ = 2;
		ИначеЕсли ПустоеЗначение(ЕстьСтикероватьВШапкеТолькоУп) = 0 Тогда
			СтикероватьШ = 3;
		КонецЕсли;
	 	
	 	Если НовыйБланк = -1 Тогда //--- т.е. старый бланк
	 		 		
	 	Иначе
	 	 	
	 		БылиМатюки = 0;
	 		
		 	ДатаExcel		= СокрЛП(Лист.Cells(1,8).Value);
		  	ВремяExcel		= СокрЛП(Лист.Cells(1,12).Value);  //----- глючит разобратьсяс форматом
		 	ВремяЗаказа 	= ВремяExcel;
		 	КлиентExcel 	= СокрЛП(Лист.Cells(2,8).Value);
		 	ФормаExcel 		= СокрЛП(Лист.Cells(3,8).Value);
		 	перФорма = Число(ФормаExcel);
		 	
		 	Если перФорма = 0 Тогда
				перФорма = 2;
			ИначеЕсли  перФорма = 1 Тогда
				Ф1 = 1;
			КонецЕсли;
			
		 	ТорговыйExcel	= СокрЛП(Лист.Cells(4,8).Value);
		 	ПримечаниеExcel	= СокрЛП(Лист.Cells(5,8).Value);
		 	Примечание = СокрЛП(ПримечаниеExcel);
		 	
		 	ВесЗаказаExcel = "";	
		 	
		 	Если спОшибки.НайтиЗначение(СокрЛП(Лист.Cells(15,6).Text)) <> 0 Тогда  //--- УМК Сандомирский В.Ю. (12.12.14)
		 		Сообщить("" + ТекИмяФайла + " ОШИБКА в формуле определения веса заказа !!! , возможно в ячейках не цифры ","!!!");
		 		БылиМатюки = 1;
		 	Иначе	
		 		ВесЗаказаExcel  = Формат(Число(Лист.Cells(15,6).Value),"Ч12.2"); //--- УМК Сандомирский В.Ю. (09.12.14) (10.12.14)
		 	КонецЕсли;
		 	
		 	ТекСтрокаExcel   = 6;
		 	ТекСтрокаТаблицы = 0;
		 	ЕстьОшибки = 0;
		 	
		 	Для ТекСтрока = 1 По Высота Цикл
		 		
		 		ТекСтрокаExcel   = ТекСтрокаExcel + 1;
		 		//ТекСтрокаТаблицы = ТекСтрокаТаблицы + 1;
		 		
		 		Если ПрерватьЦиклы = "Да" Тогда
		 			Прервать;
		 		КонецЕсли;
		 		
		 		ТекКод=СокрЛП(Лист.Cells(ТекСтрокаExcel,1).Value);
		 		ТекНаименованиеExcel = СокрЛП(Лист.Cells(ТекСтрокаExcel,2).Value);
		 		ТекСтикеровать = "";
				Если ПустоеЗначение(ТекКод) <> 1 Тогда
					// проверим есть ли поле Стикеровать
					Если ЕстьСтикеровать = -1 Тогда
						ЕстьСтикеровать = ?(СокрЛП(Лист.Cells(ТекСтрокаExcel + 5,2).Value) = "Стикеровать:", 1, 0);
					КонецЕсли;
					ЗначениеСтик = СокрЛП(Лист.Cells(ТекСтрокаExcel,1).Value);
					Если ТекКод = "Конец" Тогда
						ПрерватьЦиклы = "Да";
						Прервать;
					КонецЕсли;
			
					
					Если ТекКод = "НоваяПродукция" Тогда
													
						ЕстьСообщения = 0;
				
						КонтрольНаименование =  СокрЛП(Лист.Cells(ТекСтрокаExcel,2).Value);
						Если ПустоеЗначение(КонтрольНаименование) <> 1 Тогда
							ЕстьСообщения = 1;
							Сообщить("!!! ВНИМАНИЕ !!! файл " + ТекИмяФайла + " Новая продукция - " + КонтрольНаименование,"!!!");
							//БылиМатюки = 1;
							ТекстСообщения = "упаковка  ---  ";
							Для ТекК = 1 По 5 Цикл
								
								ТекУпак  		= СокрЛП(Лист.Cells(ТекСтрокаExcel,		7+ТекК).Value);	
								ТекКг  			= СокрЛП(Лист.Cells(ТекСтрокаExcel+2,	7+ТекК).Value);
								ТекШт  			= СокрЛП(Лист.Cells(ТекСтрокаExcel+3,	7+ТекК).Value);
								ТекПримечание 	= СокрЛП(Лист.Cells(ТекСтрокаExcel+4,	7+ТекК).Value);	
								Если (ПустоеЗначение(ЕстьСтикероватьВШапке) = 0) ИЛИ ((ПустоеЗначение(ЕстьСтикероватьВШапкеТолькоУп) = 0) И (ТекУпак <> "0")) Тогда
									ТекСтикеровать = Да;
								ИначеЕсли ЕстьСтикеровать = 1 Тогда
									ТекСтикеровать= СокрЛП(Лист.Cells(ТекСтрокаExcel+5,	7+ТекК).Value);	
								КонецЕсли;
								
								Если (ПустоеЗначение(ТекКг) <> 1) ИЛИ (ПустоеЗначение(ТекШт) <> 1) Тогда
									ТекКг = ПолучитьДробноеЧисло(ТекКг);
									ТекШт = ПолучитьДробноеЧисло(ТекШт);	
									СоздатьНовуюСтроку(ТекКод,КонтрольНаименование + " " + ТекПримечание,ТекКг,ТекШт,ТекУпак,ЕстьОшибки, ТекСтикеровать);
								КонецЕсли;								
							КонецЦикла;												
						КонецЕсли;	
					Иначе							
						Область=Лист.Cells.CurrentRegion;
		     			Ширина=50;
			 				
			 			//--- заполнить килограммы
			 			Для ТекКолонка = 7 По Ширина Цикл
								 				
							Если ТекКолонка%2=0 Тогда //--- четная нечетная
							      
								//--- Четная значение
								
							Иначе	//--- нечетная код Вида упаковки	      
								
								КодУпаковкиExcel 			= СокрЛП(Лист.Cells(ТекСтрокаExcel,ТекКолонка).Value);
								НаименованиеУпаковкиExcel 	= СокрЛП(Лист.Cells(ТекСтрокаExcel,ТекКолонка+1).Value);
								ТекКилограммы 				= СокрЛП(Лист.Cells(ТекСтрокаExcel+2,ТекКолонка+1).Value);
								ТекШтуки 					= СокрЛП(Лист.Cells(ТекСтрокаExcel+3,ТекКолонка+1).Value);
								ТекПримечание				= СокрЛП(Лист.Cells(ТекСтрокаExcel+4,ТекКолонка+1).Value);								
								Если (ПустоеЗначение(ЕстьСтикероватьВШапке) = 0) ИЛИ ((ПустоеЗначение(ЕстьСтикероватьВШапкеТолькоУп) = 0) И (КодУпаковкиExcel <> "0")) Тогда
									ТекСтикеровать = Да;
								ИначеЕсли ЕстьСтикеровать = 1 Тогда
									ТекСтикеровать= СокрЛП(Лист.Cells(ТекСтрокаExcel+5,	ТекКолонка+1).Value);	
								КонецЕсли;								
								
								ТекКгФорматЯчейки = Лист.Cells(ТекСтрокаExcel+2,ТекКолонка+1).NumberFormat; 
								ТекШтФорматЯчейки = Лист.Cells(ТекСтрокаExcel+3,ТекКолонка+1).NumberFormat; 
									
								Если ПроверкаНеЦифр(ТекКилограммы,ТекКгФорматЯчейки) = 1 Тогда
			 						Сообщить("" + ТекИмяФайла + " "+ ТекНаименованиеExcel + " " + ТекКилограммы + " в килограммах не цифры","!");
			 						ТекКилограммы = "";
			 						БылиМатюки = 1;
			 					КонецЕсли;
								Если ПроверкаНеЦифр(ТекШтуки,ТекШтФорматЯчейки) = 1 Тогда
			 						Сообщить("" + ТекИмяФайла + " "+ ТекНаименованиеExcel + " " + ТекШтуки + " в штуках не цифры","!");
			 						ТекШтуки = "";
			 						БылиМатюки = 1;
			 					КонецЕсли;
								
			 					ТекКилограммы = ПолучитьДробноеЧисло(ТекКилограммы);
			 					ТекШтуки	  = ПолучитьДробноеЧисло(ТекШтуки);
			 					
								Если (ТекКилограммы <> 0) Тогда //--- строка Килограммы
									ТекКг = ТекКилограммы;
									ТекШт = "";
									СоздатьНовуюСтроку(ТекКод,ТекПримечание,ТекКг,ТекШт,КодУпаковкиExcel, ЕстьОшибки, ТекСтикеровать);	
								КонецЕсли;
								
								Если (ТекШтуки <> 0) Тогда//--- строка Количество
									ТекШт = ТекШтуки;	
									ТекКг = "";
									СоздатьНовуюСтроку(ТекКод,ТекПримечание,ТекКг,ТекШт,КодУпаковкиExcel, ЕстьОшибки, ТекСтикеровать);	
								КонецЕсли;													
							КонецЕсли;					 				
						КонецЦикла;						
					КонецЕсли;						
				КонецЕсли;		 									
		 	КонецЦикла;
		 		
		 	Лист.Protect("123");  //--- защита с паролем		 	
	 	КонецЕсли;	 	
	КонецЕсли;
	 
	Если БылиМатюки = 0 Тогда
		xl.DisplayAlerts = 0;
		xl.Workbooks.Close();
		xl.DisplayAlerts = 1;
		xl.Quit();
	КонецЕсли;
	
	Если ЕстьСообщения = 1 Тогда
		Предупреждение("!!!!!!!!!!!!!!ВНИМАНИЕ !!!!!!!!!!!!" + глПравильныйСимволПереноса + " Есть новые позиции в бланке для переноса вручную --- " + глПравильныйСимволПереноса + " в окне сообщений внизу ");
	КонецЕсли;
	
	Если Дата(СокрЛП(ДатаExcel)) < РабочаяДата() Тогда
		ВвестиДату(ДатаДок, "" + ДатаExcel + " не корректна, введите дату заказа !!!");
		БылиМатюки = 1;
	Иначе
		ДатаДок = Дата(СокрЛП(ДатаExcel));
	КонецЕсли;
	
	Если БылиМатюки = 0 Тогда
		Если Вопрос("Удалить Файл импорта ?", "Да+Нет") = "Да" Тогда
			ФС.УдалитьФайл(НачальныйКаталог+Кат);
		КонецЕсли;
	
	ИначеЕсли БылиМатюки = 1 Тогда
		
		Если НовыйБланк = 0 Тогда
			Сообщить("" + ТекИмяФайла + "Возможно у клиента старый Бланк - разошлите обновленный.");
		КонецЕсли;
		
	КонецЕсли;
	Если ЕстьОшибки <> 0 Тогда
		Предупреждение("При импорте не были найдены некоторые виды упаковки. Проверьте табличную часть");
	КонецЕсли;
	
	ОшибкиПриИмпорте = 0; //--- Фиксируем что ошибок Excel не было
	ПолученИзExcel = 1;
	
	глСортироватьТабличнуюЧасть(Контекст); //--- УМК Сандомирский В.Ю. (19.11.14)	
	УстановитьВидимостьПоВидуУпаковки_Общая();
	Сообщить("Импорт завершен."); 
КонецПроцедуры // ИмпортИзExcel

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	//ТекстПлана = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "]COUNT[2]FONTSET[" + Строка(Шрифт) + "])";	
	// поищем, если ли ОЗ
	ТекДок = ?(ПустоеЗначение(ГоловнойЗаказ) = 1, ТекущийДокумент(), ГоловнойЗаказ);
	ЕстьОЗ = 0;
	Если ПустоеЗначение(ТекДок) = 0 Тогда
		СтрокаПоиска = ТМЦ.Код + "/" + Строка(ВидУпаковки.Код) + "/" + Сред(ТекДок.НомерДок,4) + Прав(Строка(ДатаГод(ТекДок.ДатаДок)), 2);

		Док = СоздатьОбъект("Документ");
		Док.ВыбратьПоЗначению(,,"ЗаказыОЗ", СтрокаПоиска);
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.ПометкаУдаления() = 0 Тогда
				ЕстьОЗ = 1;
				Прервать;
				//Док.ВыбратьСтроки();
				//Пока Док.ПолучитьСтроку() = 1 Цикл
				//	Если (Док.Заказ = ТекущийДокумент()) И (Док.ТМЦ = ТМЦ) И (Док.ВидУпаковки = ВидУпаковки) Тогда
				//		ЕстьОЗ = 1;
				//		Прервать;
				//	КонецЕсли;
				//КонецЦикла;
				//Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//Возврат "(COUNT[4])(BRUSH[" + глПолучитьЦвет(255, 128, 128) +  "])";
	
	Если ЕстьОЗ = 1 Тогда
		ТекстПлана = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])()()(BRUSH["+глПолучитьЦвет(201,255,198)+"])";
	Иначе
		ТекстПлана = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	КонецЕсли;
	
	Возврат  ТекстПлана;	
КонецФункции

//======================================================================
Функция РаскраскаНетУп()
	Если Лев(ПримечаниеСтроки, 2) = "@@" Тогда
		Возврат "(COUNT[3])(BRUSH[" + глПолучитьЦвет(255, 128, 128) +  "])";
	КонецЕсли;
КонецФункции // 

//======================================================================//--- УМК Сандомирский В.Ю. (09.04.15)
Процедура ПриВводеСтроки()	
	Если (НазваниеНабораПрав() = "Технолог") ИЛИ (НазваниеНабораПрав() = "Весовщик") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") ИЛИ (Проведен() = 1) Тогда
		СтатусВозврата(0);
		Возврат;	
	КонецЕсли;	
КонецПроцедуры

//======================================================================//--- УМК Сандомирский В.Ю. (09.04.15)
Процедура ПриУдаленииСтроки()
	Если (НазваниеНабораПрав() = "Технолог") ИЛИ (НазваниеНабораПрав() = "Весовщик") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") ИЛИ (Проведен() = 1) Тогда
		СтатусВозврата(0);
		Возврат;	
	КонецЕсли;	
КонецПроцедуры

//======================================================================//--- УМК Сандомирский В.Ю. (25.06.15)
Процедура ИзмЧасыКонтроль()
	
	Если Число(ВремяЗаказа) > 23 Тогда
		ВремяЗаказа = 23;
	КонецЕсли;

КонецПроцедуры // ИзмЧасыКонтроль()

//======================================================================
Процедура ИзменитьСтикеровать()
Перем Зн, ТекЗн;	
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение(Да, "Установить Да для всех в/у");
	Меню.ДобавитьЗначение(Нет, "Установить Нет для всех в/у");
	Меню.ДобавитьЗначение(1, "Установить Да для всех, включая без упаковки");
	Меню.ДобавитьЗначение(2, "Установить Нет для всех, включая без упаковки");
	
	Рез = 0;
	Если Меню.ВыбратьЗначение(ТекЗн,,,,1) = 1 Тогда
		Если ТипЗначенияСтр(ТекЗн) = "Число" Тогда
			Зн = ?(ТекЗн = 1, Да, Нет);
		Иначе
			Зн = ТекЗн;
		КонецЕсли;
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ((ПустоеЗначение(ВидУпаковки) = 0) И (ВидУпаковки <> НетУп)) ИЛИ (ТипЗначенияСтр(ТекЗн) = "Число") Тогда
				Стикеровать = Зн;
			КонецЕсли;
			Если ТМЦ.СтикероватьВсегда = 1 Тогда
				Стикеровать = Да;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ИзмСтикеровать()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если СтикероватьШ <= 1 Тогда
			Стикеровать = Нет;			
		Иначе
			Стикеровать = ?(((ПустоеЗначение(ВидУпаковки) = 0) И (ВидУпаковки <> НетУп)) ИЛИ (СтикероватьШ = 2), Да, Стикеровать);
		КонецЕсли;
		Если ТМЦ.СтикероватьВсегда= 1 Тогда
			Стикеровать = Да;
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры //

Процедура ИзВесов(ПутьВесов = "")
	Если (ПустоеЗначение(Взвесил) = 0) И ((Взвесил) <> глПользователь) И (ПустоеЗначение(ГоловнойЗаказ) = 0) Тогда
		Предупреждение("Эта строка уже была взвешена ранее");
		Возврат;
	КонецЕсли;
	Если Ед.Единица <> Константа.БазЕдиница Тогда
		Предупреждение("Взвешивать можно только весовой товар");
		Возврат;
	КонецЕсли;
	
	ЗаписатьВЛог("Начато взвешивание: " + Строка(НомерСтроки));
	Если ПутьВесов = "" Тогда
		Если глПользователь.ВесыПоУмолчанию.Выбран() = 1 Тогда
			ПутьВесов = СокрЛП(глПользователь.ВесыПоУмолчанию.Путь);
		Иначе
			ПутьВесов = СокрЛП(Константа.ПутьКВесам);
		КонецЕсли;
	КонецЕсли;
	
	Текст = СоздатьОбъект("Текст");
	Если ФС.СуществуетФайл(ПутьВесов) = 1 Тогда
		Текст.Открыть(ПутьВесов);
		Если Текст.КоличествоСтрок() > 0 Тогда
			Стр = Текст.ПолучитьСтроку(1);
			Поз = Найти(Стр, " ");
			Если Поз <> 0 Тогда				
				ВремКолВо = Окр(Число(Лев(Стр, Поз-1)) / 1000, 3);
				Если ВремКолВо = 0 Тогда
				    Сообщить("Количество в файле из весов = 0");
					ЗаписатьВЛог("Вес = 0: " + Строка(НомерСтроки));
					Возврат;
				КонецЕсли;
				Если ПустоеЗначение(Тара) = 1 Тогда
					Тара = Константа.ТараПоУмолчанию;
				КонецЕсли;
				Если КвоФакт <> 0 Тогда
					Отв = Вопрос("Эта строка уже взвешивалась. Плюсовать вес? ", "Да+Нет+Отмена");
					Если Отв = "Да" Тогда
					    КвоФакт= КвоФакт + ВремКолВо;
						Брутто = Брутто + ВремКолВо;						
						ЗаписатьВЛог("Вес прибавлен: " + Строка(НомерСтроки));
					ИначеЕсли Отв = "Нет" Тогда
						ЗаписатьВЛог("Вес перезаписан: " + Строка(НомерСтроки));
						Брутто = ВремКолВо;
						ИзмБрутто(1);
					Иначе
						ЗаписатьВЛог("Отмена взвешивания: " + Строка(НомерСтроки));
						Возврат;
					КонецЕсли;
				Иначе
					Брутто = ВремКолВо;
					ИзмБрутто(1);
					ЗаписатьВЛог("Записан новый вес: " + Строка(НомерСтроки));
				КонецЕсли;
				УстВручную = 0;
				СтрокаВзвешена = Да;
				МодифВзвешивание = 1;
				Взвесил = глПользователь;
				ПровестиЗаказ(0, 1);
			Иначе				
				Сообщить("В файле не найдено количество");
				ЗаписатьВЛог("В файле не найдено количество: " + Строка(НомерСтроки));
			КонецЕсли;
			Текст.ЗаменитьСтроку(1, "0");
			Текст.Записать(ПутьВесов);
		Иначе
			Сообщить("Файл пустой");
			ЗаписатьВЛог("Файл пустой: " + Строка(НомерСтроки));
		КонецЕсли;
	Иначе
		Сообщить("Файл весов не найден");
		ЗаписатьВЛог("Файл весов не найден: " + Строка(НомерСтроки));
	КонецЕсли;
КонецПроцедуры

Процедура ПолучитьИзВесов(УстановитьВесы = 0)
	СписВесов = СоздатьОбъект("СписокЗначений");
	СпрВесы = СоздатьОбъект("Справочник.Весы");
	СпрВесы.ВыбратьЭлементы(0);
	Пока СпрВесы.ПолучитьЭлемент() = 1 Цикл
		Если (СпрВесы.ПометкаУдаления() = 0) И (СпрВесы.НеИспользоватьДляВзвешивания = 0) Тогда
			СписВесов.ДобавитьЗначение(СпрВесы.ТекущийЭлемент());
		КонецЕсли;
	КонецЦикла;
	
	Весы = "";
	Если СписВесов.ВыбратьЗначение(Весы, ,,,1) = 1 Тогда
		Если УстановитьВесы = 1 Тогда
			СпрП = СоздатьОбъект("Справочник.Пользователи");
			СпрП.НайтиЭлемент(глПользователь);
			СпрП.ВесыПоУмолчанию = Весы;
			СпрП.Записать();
			глПользователь = СпрП.ТекущийЭлемент();
		Иначе
			ИзВесов(СокрЛП(Весы.Путь));
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

Процедура ОчиститьФакт()
	КвоФакт = 0;
	Брутто = 0;
	СтрокаВзвешена = Нет;
	УстВручную = 0;
	Взвесил = "";
	МодифВзвешивание = 1;
	ПровестиЗаказ(0, 1);	
КонецПроцедуры

Процедура ПриНачалеРедактированияСтроки()
	Если ПустоеЗначение(ГоловнойЗаказ) = 0 Тогда
		Если (ПустоеЗначение(Взвесил) = 0) И (Взвесил <> глПользователь) Тогда
			Если Вопрос("Эта строка уже была взвешена ранее пользователем: " + Строка(Взвесил) + " Хотите изменить вручную?", "Да+Нет") = "Нет" Тогда
				СтатусВозврата(0);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ИзмКвоФакт()	
	Если Ед.Единица <> Константа.БазЕдиница Тогда
		Если Ед.Вес = 0 Тогда
			Предупреждение("Не задан вес для единциы измерения");
		КонецЕсли;
		КвоФакт = Цел(КвоФакт);		
	КонецЕсли;
	СтрокаВзвешена = Да;
	УстВручную = 1;
	НачальноеКоличество = 0;
	Взвесил = глПользователь;
	МодифВзвешивание = 1;
	Если Ед.Единица <> Константа.БазЕдиница Тогда
		Брутто = КвоФакт + ?(ПустоеЗначение(Тара) = 0, КвоТары * Тара.Вес, 0) ;
	Иначе
		Брутто = КвоФакт * Ед.Вес + ?(ПустоеЗначение(Тара) = 0, КвоТары * Тара.Вес, 0) ;
	КонецЕсли;	
	
	ПровестиЗаказ(0, 1);	
КонецПроцедуры // ИзмКвоФакт

//======================================================================
Процедура ЗакрытьЗаказ()
	Если (ПустоеЗначение(ГоловнойЗаказ) = 0) И (МодифВзвешивание = 1) Тогда
		Отв = Вопрос("Сохранить изменения?", "Да+Нет+Отмена");
		Если Отв = "Да" Тогда
			ПровестиЗаказ(1);
		ИначеЕсли Отв = "Отмена" Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		Форма.Закрыть(0);
	Иначе
		Форма.Закрыть(0);
	КонецЕсли;	
КонецПроцедуры // ЗакрытьЗаказ()
//======================================================================

Процедура ПриЗакрытии()
	ЗакрытьЗаказ();
//	Сервис.ВыключитьРаскраскуТаблиц();
КонецПроцедуры // ПриЗакрытии

//======================================================================
Функция ВесТары()
	Возврат КвоТары * ?(ПустоеЗначение(Тара) = 1, 0, Тара.Вес);
КонецФункции // ВесТары()

//======================================================================
Процедура ИзмПоказатьНовыйВУ()
	Форма.ВидУпаковкиН.Видимость(фПоказатьНовыйВУ);
КонецПроцедуры 

//======================================================================
Процедура ИзмРазделить()
	Если Разделить = Да Тогда
		Взвешено = Да;
	ИначеЕсли (Разделить = Нет) И (КвоФакт = 0) Тогда
		Взвешено = Нет;
	КонецЕсли;
КонецПроцедуры // ИзмРазделить

//======================================================================
Процедура ПриПовторномОткрытии()
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		ТекДок = Форма.Параметр.Получить("Документ");
		Если ТипЗначенияСтр(ТекДок) = "Документ" Тогда
			Если ТекДок <> ГоловнойЗаказ Тогда
				Предупреждение("Вы уже взвешиваете " + Строка(ГоловнойЗаказ) + ". Вначале закройте его. Потом можете взвешивать другой");
			КонецЕсли;
		КонецЕсли;
		АктивизироватьСтрокуПоПараметру(Форма.Параметр);
	КонецЕсли;
КонецПроцедуры // ПриПовторномОткрытии

//======================================================================
Процедура СортГ()
	глСортироватьТабличнуюЧасть(Контекст);
КонецПроцедуры // СортГ()

//======================================================================
Процедура СортХ()
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ);
	
	глСортироватьТаблицуПоСкладу(ТаблТМЦ, Контекст);
КонецПроцедуры // СорТХ

//======================================================================
Функция ВесУп()
	Если (ПустоеЗначение(ВидУпаковки) = 0) И (ВидУпаковки <> НетУп) Тогда
		РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВидУпаковки);
		Если ПустоеЗначение(РВУ) = 0 Тогда
			Возврат РВУ.ВесУпаковки.Получить(ДатаДок);
		КонецЕсли;		
	КонецЕсли;
	
	Возврат "";
КонецФункции // ВесУп
// ИзмПоказатьНовыйВУ()
//Процедура ПриНажатииКнопкиКлавиатуры(код, _а, _ш, _к)
//	Сообщить("Нажата кнопка клавиатуры.");
//КонецПроцедуры

//======================================================================
Процедура ИзмТара()
	БК = Тара.БазоваяКатегорияЦены.Получить(ДатаДок);
	ЦенаСНДС = глВернутьЦену(ТМЦ, КатегорияЦен, ДатаДок, Гривня) + глПолучитьЦенуВУП(Контекст, КатегорияЦен, ДатаДок, Гривня, ДатаДок, ТМЦ) + 
		?(ПустоеЗначение(Тара) = 1, 0, глВернутьЦену(Тара, БК, ДатаДок, Гривня) * ?(Ед.Единица = Константа.БазЕдиница, 1, Ед.Вес));
	глВыч_суммы_накл(Контекст, 1);
	
	ИзмБрутто();
КонецПроцедуры // ИзмТара

//======================================================================
Процедура ЗаполнитьТару()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Заполнить из текущей строки");
	СпМеню.ДобавитьЗначение(2, "Заполнить из данных по умолчанию");
	СпМеню.ДобавитьЗначение(3, "Очистить тару");
	
	Зн = 2;
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 1 Тогда
		Если Вопрос("Действительно заполнить?", "Да+Нет") = "Да" Тогда
			Если Зн = 1 Тогда
				ТекТара = Тара;
			ИначеЕсли Зн = 2 Тогда
				ТекТара = Константа.ТараПоУмолчанию;
			Иначе
				ТекТара = ПолучитьПустоеЗначение("Справочник.ТМЦ");
			КонецЕсли;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Тара = ТекТара;
				ИзмТара();
			КонецЦикла;			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ЗаполнитьТару()

//======================================================================
Функция ЯщикиПовидам()
	СтрЯщики = "";
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	ТЗ.Свернуть("Тара", "КвоТары");
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗ.Тара) = 0 Тогда
			СтрЯщики = СтрЯщики + ?(СтрЯщики = "", "", "; ") + Строка(ТЗ.Тара) + " - " + Строка(ТЗ.КвоТары);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрЯщики;
КонецФункции // ЯщикиПовидам

//======================================================================
Процедура Анализ()
	Если Модифицированность() = 1 Тогда
		Предупреждение("Вначале сохраните документ");
	Иначе
		Парам = ТекущийДокумент();
		ОткрытьФорму("Отчет.АнализЗаказа", Парам);
	КонецЕсли;
КонецПроцедуры // Анализ

//======================================================================
Процедура ОчиститьМаршрут()
	Маршрут = "";
КонецПроцедуры // 

//======================================================================
Функция ТакоеЖеДрМарк()
	Если ПустоеЗначение(ТМЦ) = 0 Тогда
		Возврат ТМЦ.ОдинаковаяПрРазныеМарк;
	КонецЕсли;
	
	Возврат "";
КонецФункции // ТакоеЖеДрМарк

//======================================================================
Процедура СоздатьСписание()
	Если ПустоеЗначение(ВидЗатрат) = 1 Тогда
		Предупреждение("Нужно выбрать вид затрат");
		Возврат;
	КонецЕсли;
	Если (ПустоеЗначение(ТекущийДокумент()) = 1) ИЛИ (Модифицированность() = 1) Тогда
		Предупреждение("Документ нужно сохранить");
		Возврат;		
	КонецЕсли;
		
	ОткрытьФорму("Документ.СписаниеТМЦ", 0, ТекущийДокумент());	
КонецПроцедуры // СоздатьСписание

//======================================================================
Процедура ЗаполнитьУК()
	Если Вопрос("Заполнить дату УК заново?", "Да+Нет") = "Да" Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ДатаУК = глПолучитьДатуИзУК(ДатаДок, ТМЦ);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // гл

Процедура ИзмПоказатьНаборы()
	Форма.Набор.Видимость(фПоказатьНаборы);
КонецПроцедуры

Процедура ИзмПоказатьEDI() 
	Форма.ШКEDI.Видимость(фПоказатьEDI);
	Форма.ККEDI.Видимость(фПоказатьEDI);
	Форма.АртикулEDI.Видимость(фПоказатьEDI);	
КонецПроцедуры

МодифВзвешивание = 0;
Расширение = СоздатьОбъект("РасширениеФормы");
СписокТары = СоздатьОбъект("СписокЗначений");
СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
СпрТМЦ.ВыбратьЭлементыПоРеквизиту("ВидТМЦ", Перечисление.ВидыТМЦ.Тара, 0, 0);
Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
	Если (СпрТМЦ.ПометкаУдаления() = 0) И (СпрТМЦ.ТараДляЗаказов = 1) Тогда
		СписокТары.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
	КонецЕсли;
КонецЦикла;

ЕстьПодчиненныйЗаказ = 0;
ТекстФайл = СоздатьОбъект("Текст");
ИмяФайлаЛога = КаталогПользователя()+ "\l_" + СтрЗаменить(Формат(ТекущаяДата(), "ДДДММГГ"), ".", "") + ".txt"; 
Попытка
	ТекстФайл.Открыть(ИмяФайлаЛога);
Исключение	
КонецПопытки;

ПисатьЛог = Константа.ВключитьЛогВесовщика;
//Сервис = СоздатьОбъект("Сервис");
//Сервис.ВключитьРаскраскуТаблиц();
//Сервис.ИспользоватьПланРаскраски(1);
