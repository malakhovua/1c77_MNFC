// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем НачальнаяДатаДокумента;
Перем СтарыйКонтрагент;
Перем СтарВидНДС;
Перем СтарКатегорияЦен;

// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
//Устанавливаем счет контрагента в зависимости от выбранной валюты
Процедура УстСчетКонтрагента()
	СчетКонтрагента = СчетПоКоду("63.1");
КонецПроцедуры                    

// ===============================
Процедура ЗаполнитьПоУмолчанию()
	// заполняем все то, что общее для ввода нового и для ввода на основании
	Если ПустоеЗначение(ВидНДС)=1 Тогда
		ВидНДС = глВосстановитьЗначение(,"БазНДС");
	КонецЕсли;
	СубконтоВалРасх = глВосстановитьЗначение(Контекст,"СубконтоВалРасх", Константа.БазВаловыйРасход);

	СчетЗатратНДСПоУмолч = СчетПоКоду("93");
	Если ИспользоватьСчетаРасходов = Класс8 Тогда
		СчетЗатратНДСПоУмолч = СчетПоКоду("85");
	КонецЕсли;
	СчетЗатратНДС = глВосстановитьЗначение(Контекст,"СчетЗатратНДС",СчетЗатратНДСПоУмолч);
	ВидЗатратНДС = глВосстановитьЗначение(Контекст,"ВидЗатратНДС");
	
	// установим валюту
	Валюта = Гривня;
	Дата_Курса= ДатаДок;
	Курс = глКурсДляВалюты(Валюта,Дата_Курса);
	УстСчетКонтрагента();
                                                             
	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
		КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
	КонецЕсли;
	
КонецПроцедуры


// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
Функция УстДоступность()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	// доступность в зависимости от слоя
	Форма.Заголовок(глЗаголовок(Контекст,"Услуги сторонних организаций производственного характера"));
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());

	Если Закл = "Дополнительный" Тогда
		// слой Дополнительный
		
		Если ИспользоватьСчетаРасходов = Класс8 Тогда
		    // не используем девятый класс - нельзя выбирать счет
			Форма.СчетЗатратНДС.Доступность(0);
		КонецЕсли;		

		Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
			// для бартера запретим относить НДС на себестоимость
			// нет точной схемы проводок для этого случая
		    Форма.НДСнаЗатраты.Доступность(0);
		Иначе
			Форма.НДСнаЗатраты.Доступность(1);
		КонецЕсли;

		Форма.ВидНДС.Доступность(1-НДСНаЗатраты);
	    Форма.ВидЗатратНДС.Видимость(НДСНаЗатраты);
	    Форма.СчетЗатратНДС.Видимость(НДСНаЗатраты);
	    Форма.тСчетЗатратНДС.Видимость(НДСНаЗатраты);
	Иначе // слой основной
		фВидимостьКредит = ?(ВидТорговли = Перечисление.ВидыТорговли.Кредит,1,0);
		Форма.тДатаОплаты.Видимость(фВидимостьКредит);
		Форма.тГлубина.Видимость(фВидимостьКредит);
		Форма.Глубина.Видимость(фВидимостьКредит);
	КонецЕсли;
	Если (ВидТорговли = Перечисление.ВидыТорговли.Бартер) и (НДСнаЗатраты = 1) Тогда
		НДСнаЗатраты = 0;
	КонецЕсли;
	Форма.Фирма.Видимость(0);
	
	Возврат "";
КонецФункции

// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;
	Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
		ДатаОплаты=ДатаДок + Глубина;
	Иначе
		ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура УстГлубина()
	Если ВидТорговли = Перечисление.ВидыТорговли.Кредит Тогда
		Если Контрагент.Глубина.Получить(ДатаДок) <> 0 тогда    
			Если ПустоеЗначение(Глубина)=1 тогда
				Глубина=Контрагент.Глубина.Получить(ДатаДок);
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		Глубина=0;
	КонецЕсли;
	ИзмГлубина();
КонецПроцедуры
                           
// ===============================
Процедура ИзмДатаДок()
	ИзмГлубина();
КонецПроцедуры //

// ===============================
Процедура ИзмВидТорговли()
	Если ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
		Глубина = 0;
		ИзмГлубина();
	КонецЕсли;
КонецПроцедуры //

// ===============================
Процедура ИзмСчетКонтрагента()
	Если СчетКонтрагента.Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбраный счет не является счетом учета взаиморасчетов!",1,,"!");
		СчетКонтрагента = 0;
		Возврат;
	ИначеЕсли СчетКонтрагента.Валютный = 1 Тогда
		глКомментарий("Документ не предназначен для отражения услуг, полученных за валюту!",1,,"!");
		СчетКонтрагента = 0;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмДоговор()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Фирма <> Фирма Тогда
		    Договор = 0;
		КонецЕсли;
	КонецЕсли;
	Если (Договор.Выбран() = 1) и (Договор.Вид()="Договор") Тогда
		Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
			ВидТорговли = Договор.ВидТорговли;
		КонецЕсли;
	ИначеЕсли ПустоеЗначение(Контрагент.ВидТорговли) = 0 Тогда
		ВидТорговли = Контрагент.ВидТорговли;
	ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмКонтрагент()
	Если (Контрагент.Выбран() = 0) или (СтарыйКонтрагент = Контрагент) Тогда
	    Возврат;
	КонецЕсли;
	Если Договор.Выбран() = 1 Тогда
	    Если Договор.Контрагент <> Контрагент Тогда
			Договор = 0;
	    КонецЕсли;
    КонецЕсли;
	Если (глВосстановитьЗначение(,"ПодставлятьОсновнойДоговор") = Да) и
			(Фирма = Контрагент.БазДоговор.Фирма) Тогда
		Договор = Контрагент.БазДоговор;
	КонецЕсли;
	ИзмДоговор();
	// проверим документ-основание
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ДокументОснование.Контрагент <> Контрагент Тогда
			ДокументОснование = 0;
		КонецЕсли;	
	КонецЕсли;	
	Если ПустоеЗначение(Контрагент.КатегорияЦенПоставщика) = 0 Тогда
		КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
	Иначе
		КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
	КонецЕсли;
	УстГлубина();
	СтарыйКонтрагент = Контрагент
КонецПроцедуры

// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = Услуга.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;
КонецПроцедуры //ПересчетСтроки

// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
// ===============================
Процедура ИзмРеквизитШапки(Реквизит)
	// пересчитаем суммы НДС в строках табличной части
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	КонецЕсли;          
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	текОтвет = Вопрос("В документе изменен реквизит """+Реквизит+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текОтвет = "Да" Тогда
			// изменим цены
			ЦенаТовара = глВернутьЦену(Услуга, КатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
				// получим параметры цены
				ЦенаТовара.ИспользоватьДату(ДатаДок);
				ЦенаЦены   = ЦенаТовара.Цена;
				ВалютаЦены = ЦенаТовара.Валюта;
				ЕдЦены	   = ЦенаТовара.Единица;
				ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
				ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
				ПересчетСтроки(ЦенаЦены);                                                   
			Иначе
				ПересчетСтроки();
			КонецЕсли;
		ИначеЕсли Реквизит = "ВидНДС" Тогда
			ПересчетСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура ИзмСчетЗатратНДС()
	Если глПроверитьСчетЗатрат(СчетЗатратНДС)=0 Тогда
		СчетЗатратНДС = 0;
	КонецЕсли;
КонецПроцедуры //

// ===============================
Процедура Подбор()                          
	глПодбор(Контекст,"ТМЦ","ДляПодбора")
КонецПроцедуры
                                                                 
// ===============================
Процедура ИзмВидЗатратНДС()
	Если ИспользоватьСчетаРасходов = Класс8 Тогда
		Если ПустоеЗначение(ВидЗатратНДС)=0 Тогда
		    СчетЗатартНДС = ВидЗатратНДС.Счет;
		Иначе
			СчетЗатартНДС = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //

// ===============================
Процедура ИзмУслуга()
	глПриИзмененииТовара(Контекст);
	ВидЗатрат = Услуга.ВидЗатрат;
	ВидДеятельности	= Услуга.ВидДеятельности; 
КонецПроцедуры

// ===============================
Процедура ИзмФирма()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Фирма <> Фирма Тогда
		    Договор = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборОснования()    
	// Процедура по кнопке редактирования основания в докумнете
	СтарДоговор 	= Договор;
	СтарОснование 	= ДокументОснование;
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Закупка");
КонецПроцедуры


// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	Форма.ИспользоватьСлой("Общий,"+Значение,2);
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;
	ПриЗаписиПерепроводить(1);

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительные");
	Форма.ИспользоватьСлой("Общий,Основной",2);
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.		Доступность(0);
//		Форма.кДействия.Доступность(0);
		Форма.кПодбор.	Доступность(0);
		Форма.кФирма.	Доступность(0);               		
		Форма.кОсн.		Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;	
	глУстВидимостьЦен(Контекст);
	СтарыйКонтрагент = Контрагент;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Услуга = Форма.Параметр Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры                                                 

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Автор = глПользователь;
	ОтборСчетаКонтрагент = ?(ДокументОснование.Выбран()=1,"",Контрагент);

	глСохранитьЗначение(Контекст,"СубконтоВалРасх",СубконтоВалРасх);
	глСохранитьЗначение(Контекст,"СчетЗатратНДС",СчетЗатратНДС);
	глСохранитьЗначение(Контекст,"ВидЗатратНДС",ВидЗатратНДС);

КонецПроцедуры

// ===============================
Процедура ВводНового(Копируем)
	Если Копируем = 1 Тогда
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;

	глЗаполнитьШапку(Контекст);
	глУстановитьФирму(Контекст);
	
	Если ПустоеЗначение(Контрагент) = 1 Тогда
		Контрагент=глВосстановитьЗначение(,"ОсновнойПоставщик");
	КонецЕсли;
	
	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
		КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
	КонецЕсли;      

	ИзмКонтрагент();                                  
	ЗаполнитьПоУмолчанию();
	СтарыйКонтрагент = Контрагент;
КонецПроцедуры

// ===============================
// основание - счет входящий, договор, остатки взаиморасчетов
Процедура ВводНаОсновании(Док)
	Если (Док.Валюта <> Гривня) Тогда
		глКомментарий("Валюта документа-основания должна быть Гривня!",0,,"!!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если Док.Вид()="СчетВходящий" Тогда
		Если Док.ЧтоПриходуем <> Перечисление.ЧтоПриходуем.ТМЦ Тогда
			Предупреждение("Выбранный счет должен содержать услуги в табличной части!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;

	глЗаполнитьШапкуНаОсн(Контекст,Док);
	ИзмКонтрагент();
	глУстановитьНомер(Контекст);
	ЗаполнитьПоУмолчанию();
	СтарыйКонтрагент = Контрагент;
	
	Если Док.Вид()="СчетВходящий" Тогда
		
		// табл. часть
	    Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку()=1 Цикл
			Если Док.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
				НоваяСтрока();
				Услуга = Док.ТМЦ;
				ИзмУслуга();
				Ед = Док.Ед;
				Коэффициент = Док.Коэффициент;
				Кво = Док.Кво;
				Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС Тогда
					ЦенаСНДС = Док.ЦенаСНДС;
					глВыч_суммы_накл(Контекст,1);				
				Иначе	
					ЦенаБезНДС = Док.ЦенаБезНДС;
					глВыч_суммы_накл(Контекст,-1);				
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)
	Если ПустоеЗначение(Выб) = 0 Тогда
		глПриОбработкеПодбора(Выб,Контекст);
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			ИзмУслуга();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
		ФлагСтандОбр = 0;
		ИзмРеквизитШапки("ВидНДС");
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ОбработкаВыбораЗначения(Значение,Рекв,ФлагСтандОбр)
	Если Рекв = "Услуга" Тогда
		Если (Значение.ВидТМЦ<>Перечисление.ВидыТМЦ.Услуга) Тогда
		    Предупреждение("Можно выбирать только услугу!");
			ФлагСтандОбр = 0;            
		ИначеЕсли глЭтоСчетТЗР(Значение.Счет)=1 Тогда
		    Предупреждение("В данном документе нельзя выбирать услугу, относящуюся к транспортно-заготовительным расходам!");
			ФлагСтандОбр = 0;            
		КонецЕсли;
	ИначеЕсли Рекв = "СчетЗатратНДС" Тогда
		Если глПроверитьСчетЗатрат(Значение)=0 Тогда
			ФлагСтандОбр = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции




// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");