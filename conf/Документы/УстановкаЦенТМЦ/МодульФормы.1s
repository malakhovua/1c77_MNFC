Перем ТекСпис;
Перем КатегорияФилиал;
Перем СписокРеквизитовИзВЭ;
Перем ПутьЭкспорта;

Процедура ДобавитьВСписок(Элт, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура Заполнить() Далее

Процедура РазобратьИмяРеквизита(ИмяРекв, Зн, ЕстьРешетка)
	ЕстьРешетка = 0;
	Поз = Найти(ИмяРекв, "#"); Зн = "";
	Если Поз <> 0 Тогда
		Зн = Сред(ИмяРекв, Поз+1);
		ИмяРекв = Лев(ИмяРекв, Поз-1);		
		ЕстьРешетка = 1;
	КонецЕсли;	
КонецПроцедуры // 

Процедура Эксп(Автоматизированный = 0, СРеквизитов = "", ВидВесов = "")
	Парам = "ИзЦен";
	СписРекв = СоздатьОбъект("СписокЗначений");
	
	Если Автоматизированный = 0 Тогда		
		Фрм = ОткрытьФормуМодально("Обработка.НастройкаСхемыЭкспорта", Парам);
		Если ТипЗначенияСтр(Парам) = "СписокЗначений" Тогда
			СписРекв = Парам;
		КонецЕсли;
	Иначе
		СпрВЭ = СоздатьОбъект("Справочник.Этикетки");
		СписРекв = СРеквизитов;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ДляЭкспорта");
	Таб.ВывестиСекцию("Шапка|Основная");
	Для Инд = 1 По СписРекв.РазмерСписка() Цикл
		Рекв = СписРекв.ПолучитьЗначение(Инд);
		Поз = Найти(Рекв,"#");
		Если Поз <> 0 Тогда
			Рекв = Лев(Рекв, Поз-1);
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Шапка|Доп");
	КонецЦикла;
	
	Таб.Опции(0,0,0,0);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Таб.ВывестиСекцию("Строка|Основная");
		Для Инд = 1 По СписРекв.РазмерСписка() Цикл
			Если Автоматизированный = 1 Тогда
				ИмяРекв = СписРекв.ПолучитьЗначение(Инд); 
				Зн = ""; ЕстьРешетка = 0;
				РазобратьИмяРеквизита(ИмяРекв, Зн, ЕстьРешетка);
				
				Если ЕстьРешетка = 1 Тогда
					ЗначениеРекв = Зн;
				Иначе
					ЕстьРеквизит = 0;
					Если (Найти(СписокРеквизитовИзВЭ, ИмяРекв + ",") <> 0) и (ПустоеЗначение(ВидВесов) = 0) Тогда
						Если СпрВЭ.Владелец <> ТМЦ Тогда
							СпрВЭ.ИспользоватьВладельца(ТМЦ);						
							Если СпрВЭ.НайтиПоРеквизиту("ВидВесов", ВидВесов, 0) = 0 Тогда
								Сообщить("Указан вид весов для выгрузки, но для продукции: " + Строка(ТМЦ) + " не найдена этикетка. Реквизиты этикетки будут взяты из продукции.");
							КонецЕсли;
						КонецЕсли;
						
						Если (СпрВЭ.Владелец = ТМЦ) И (ПустоеЗначение(СпрВЭ.ТекущийЭлемент()) = 0) Тогда
							ЗначениеРекв = СпрВЭ.ПолучитьАтрибут(ИмяРекв);
							ЕстьРеквизит = 1;							
						КонецЕсли;
					КонецЕсли;
					
					Если ЕстьРеквизит = 0 Тогда
						Если Метаданные.Справочник("ТМЦ").Реквизит(ИмяРекв).Периодический = 1 Тогда
							ЗначениеРекв = ТМЦ.ПолучитьАтрибут(ИмяРекв).Получить(ТекущаяДата());
						Иначе
							ЗначениеРекв = ТМЦ.ПолучитьАтрибут(ИмяРекв);
						КонецЕсли;
					КонецЕсли;
					Если ТипЗначенияСтр(ЗначениеРекв) = "Перечисление" Тогда
						ЗначениеРекв = ЗначениеРекв.Идентификатор();			    
					КонецЕсли;					
				КонецЕсли;
				Зн = ЗначениеРекв;
			Иначе
				ИмяР = СписРекв.ПолучитьЗначение(Инд);
				Если Метаданные.Справочник("ТМЦ").Реквизит(ИмяР).Периодический = 1 Тогда
					Зн = ТМЦ.ПолучитьАтрибут(ИмяР).Получить(ДатаДок);
				Иначе
					Зн = ТМЦ.ПолучитьАтрибут(ИмяР);
				КонецЕсли;
				Если ТипЗначенияСтр(Зн) = "Перечисление" Тогда
					Зн = Зн.Идентификатор();			    
				КонецЕсли;				
			КонецЕсли;
			Таб.ПрисоединитьСекцию("Строка|Доп");
		КонецЦикла;
	КонецЦикла;
	Таб.ТолькоПросмотр(1);
	Если Автоматизированный = 1 Тогда
		Таб.Записать(ПутьЭкспорта + "УЦН" + НомерДок + ".mxl", 0);
	Иначе		
		Таб.Показать("Печать для эскпорта","");
	КонецЕсли;	
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьФайлы()
	Перем КомлектующиеНабора;
	Перем Индекс;
	
	Если Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;

	ФЛ = СоздатьОбъект("Справочник.ФайлыОбщие");
	Фл.ВыбратьЭлементыПоРеквизиту("Объект", ТекущийДокумент(), 0, 0);
	Индекс = 0; 
	Файлы.УдалитьСтроки();
	Пока ФЛ.ПолучитьЭлемент()=1 Цикл
		Если ФЛ.ПометкаУдаления()=1 Тогда
		    Продолжить;
		КонецЕсли;

	    Индекс = Индекс + 1;
		Файлы.НоваяСтрока(Индекс);
		Файлы.Ссылка = ФЛ.ТекущийЭлемент();
		Файлы.Категория = ФЛ.Категория;
		Файлы.Описание = ФЛ.Наименование;
	КонецЦикла;
	
	Файлы.Сортировать("Категория,Описание");
КонецПроцедуры	// ЗаполнитьСписокКомплектующих      

//======================================================================
Процедура ИзмПоказатьНормы()
	Форма.НормыЗатрат.Видимость(фНормы);
КонецПроцедуры // ИзмПоказатьНормы()

Процедура ПриОткрытии()
	Если Форма.Параметр = "Проведение" Тогда
		Провести();
		Форма.Закрыть();
		Возврат;
	КонецЕсли;
	
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		Форма.Параметр.Получить("списТовар").Выгрузить(СписТовар);
		Категория = Форма.Параметр.Получить("КатегорияЦен");
		КатегорияФилиал = Форма.Параметр.Получить("КатегорияЦенФ");
		ПутьЭкспорта = Форма.Параметр.Получить("Контрагент").ПутьДляЭкспортаРН; 
		Заполнить();
		Эксп(1, Форма.Параметр.Получить("СписДоп"), Форма.Параметр.Получить("ВидВесов"));
		СтатусВозврата(0);
		Форма.Закрыть();		
	КонецЕсли;

	Если (ПустоеЗначение(ДатаКонцаАкции) = 0) И (Проведен() = 1) Тогда
		Форма.ТолькоПросмотр(1);
		Предупреждение("Документы акции перед редактированием нужно сделать не проведенными");
	КонецЕсли;
	
	
	Форма.ИспользоватьЗакладки(1);	
	Форма.Закладки.ДобавитьЗначение("Основной");
	Форма.Закладки.ДобавитьЗначение("Файлы");
	ПриЗаписиПерепроводить(1);
	
	Если ПроцЧис = 0 Тогда
	    ПроцЧис = 3; //--- УМК Сандомирский В.Ю. (19.12.14) расчет производится только по схемам
	КонецЕсли; 
	
	СписФ = СоздатьОбъект("СписокЗначений");
    СписФ.ИзСтрокиСРазделителями(СокрЛП(СтрФильтр));
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	
	Для Инд = 1 По СписФ.РазмерСписка() Цикл
		Если СпрТМЦ.НайтиПоКоду(СписФ.ПолучитьЗначение(Инд), 0) = 1 Тогда
		    списТовар.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
		КонецЕсли;		
	КонецЦикла;	
	
	перРазница = 1; //--- УМК Сандомирский В.Ю. (12.03.15)	
	ЗаполнитьФайлы();
	Форма.ИспользоватьСлой("Общий,Основной", 2);
	фНормы = ВосстановитьЗначение("ПоказыватьНормыВУЦ");
	ИзмПоказатьНормы();
КонецПроцедуры


//======================================================================
Процедура ПриВыбореЗакладки(Ном, Название)
	Форма.ИспользоватьСлой("Общий," + Название, 2);
КонецПроцедуры //

//******************************************************************************
Процедура ВводНового(Скопирован, ОбъектКопирования)
	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;
	КатегорияОт = Константа.РозничнаяКатегорияЦен;
	МестоХранения = Константа.ОсновнойСклад;
	
	ПроцЧис = 3; //--- УМК Сандомирский В.Ю. (19.12.14) расчет производится только по схемам
	
	ДатаДок=РабочаяДата();	
КонецПроцедуры

Процедура ПриЗаписи()
	Автор = глПользователь;
	глПроверкаДатыДок(Контекст,"Запись");
	СписФ = СоздатьОбъект("СписокЗначений");
	Для Инд = 1 По списТовар.РазмерСписка() Цикл
		СписФ.ДобавитьЗначение(списТовар.ПолучитьЗначение(Инд).Код);
	КонецЦикла;	
	Если списТовар.РазмерСписка() > 0 Тогда
		ПервыйТМЦ = списТовар.ПолучитьЗначение(1);
	Иначе
		ПервыйТМЦ = "";
	КонецЕсли;
	СтрФильтр = СписФ.ВСтрокуСРазделителями();	
КонецПроцедуры

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("ПоказыватьНормыВУЦ", фНормы);
КонецПроцедуры // ПриЗакрытии

Процедура ИзмТовар(ИзСпец = 0)
	Цена = 0;
	Валюта = "";
	глПриИзмененииТовара(Контекст);
	
	СхемаЦенообразованияСтр = глПолучитьСхемуЦенообразования(ТМЦ,Категория,ДатаДок); //--- УМК Сандомирский В.Ю. (24.10.2014)
	БазоваяКатегорияЦен 	= ТМЦ.БазоваяКатегорияЦены.Получить(ДатаДок); 			 //--- УМК Сандомирский В.Ю. (27.10.2014)
	АвтоИзменениеЦен = ТМЦ.АвтоИзменениеЦен.Получить(ДатаДок);
	АвтоУменьшениеЦен = ТМЦ.АвтоУменьшениеЦен.Получить(ДатаДок);
	
	Цена = ?(ИзСпец = 0, глВернутьЦену(ТМЦ, Категория, ДатаДок, Гривня), ИзСпец);
	ЦенаОт = глВернутьЦену(ТМЦ, ?(ПустоеЗначение(КатегорияОтТЧ) = 1, БазоваяКатегорияЦен, КатегорияОтТЧ), ДатаДок, Гривня);	//--- УМК Сандомирский В.Ю. (19.12.2014)	
КонецПроцедуры
	
Процедура ИзмКатегорияЦен(ЗадатьВопрос = "")
	//	ПНац = Категория.ТорговаяНаценка;				//--- УМК Сандомирский В.Ю. (15.12.14)
	Если КоличествоСтрок() > 0 Тогда
		Если ЗадатьВопрос = "Да" Тогда
		    Если Вопрос("Пересчитать цены в строках?", "Да+Нет") = "Нет" Тогда
		        Возврат;
		    КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ИзмТовар();
	КонецЦикла;
КонецПроцедуры

Процедура РассчитатьЦены()
	Если Вопрос("Рассчитать цены?", "Да+Нет") = "Да" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл			
			СпрЦены = СоздатьОбъект("Справочник.Цены");
			СпрЦены.ИспользоватьДату(ДатаДок,1);
			СпрЦены.ИспользоватьВладельца(ТМЦ);
			СпрЦены.ВыбратьЭлементыПоРеквизиту("КатегорияЦены", Категория, 1, 0);
			                    
			НашлиКатегорию = 0;
			Пока СпрЦены.ПолучитьЭлемент() = 1 Цикл
				Если СпрЦены.КатегорияЦены = Категория Тогда   
					НашлиКатегорию = 1;
					Если НеЗаписыватьБазовуюСхему = 0 Тогда
						СпрЦены.СхемаЦенообразования = СхемаЦенообразованияСтр; 	//--- УМК Сандомирский В. (27.10.14)
					КонецЕсли;
					СпрЦены.Записать();
				КонецЕсли;
			КонецЦикла;
				
			Если  НашлиКатегорию = 0 Тогда // --- Создаем цену с нужной категорией  //--- УМК Сандомирский В.Ю, 20/03/14
				СпрЦены.Новый();      						
				// заполняем список единиц
				ТекЕдиница = "";
				ЕдиницыВладельца = СоздатьОбъект("Справочник.Единицы");
				ЕдиницыВладельца.ИспользоватьВладельца(ТМЦ);
				ЕдиницыВладельца.ВыбратьЭлементы();
				Пока ЕдиницыВладельца.ПолучитьЭлемент() = 1 Цикл
					Если ЕдиницыВладельца.ПометкаУдаления() = 1 Тогда
						// пропускаем помеченные на удаление
						Продолжить;
					КонецЕсли;
					ТекЕдиница = ЕдиницыВладельца.ТекущийЭлемент();
					Прервать;
				КонецЦикла;
				
				СпрЦены.Валюта					= Гривня;
				СпрЦены.Единица					= ТекЕдиница;
				СпрЦены.КатегорияЦены 			= Категория;
				Если НеЗаписыватьБазовуюСхему = 0 Тогда
				   	СпрЦены.СхемаЦенообразования 	= СхемаЦенообразованияСтр; 	//--- УМК Сандомирский В. (27.10.14)
				КонецЕсли;
				СпрЦены.Записать();
			КонецЕсли;

			Если ЦенаОт <> 0 Тогда
				Цена = глАвтоПересчетЦены(СпрЦены, ЦенаОт,,СхемаЦенообразованияСтр);
			Иначе				//--- УМК Сандомирский В.Ю. (19.12.14)
				Цена = 0;
			КонецЕсли;			
		//КонецЕсли;	//--- УМК Сандомирский В.Ю. (19.12.14) расчет производится только по схемам								
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура Заполнить()	
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	Если списТовар.РазмерСписка() = 0 Тогда
		СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
		Если ГруппаТ.Выбран() = 1 Тогда
		    СпрТМЦ.ИспользоватьРодителя(ГруппаТ);
			СпрТМЦ.ВыбратьЭлементы(1);
		Иначе
			СпрТМЦ.ВыбратьЭлементы(0);
		КонецЕсли;
		
		Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
			Если СпрТМЦ.ЭтоГруппа() = 0 Тогда
			    НоваяСтрока();
				ТМЦ = СпрТМЦ.ТекущийЭлемент();
				ИзмТовар();
			КонецЕсли;
		КонецЦикла;	
	Иначе
		Если ВсеКроме = 1 Тогда
		    ТекстУсл = "Условие (НЕ(ТМЦ в списТовар));";
		Иначе
			ТекстУсл = "Условие (ТМЦ в списТовар);";
		КонецЕсли;		
		
	ТекстЗ = 
		 "//{{ЗАПРОС(Сформировать)
		|ТМЦ = Справочник.ТМЦ.ТекущийЭлемент;
		|Функция Счётчик = Счётчик();
		|Группировка ТМЦ упорядочить по ТМЦ.Наименование;
		|Условие (ТМЦ В ГруппаТ);" + 	//--- УМК Сандомирский В.Ю, убрал по группам (02.04.2014) 
		ТекстУсл + "
		|"//}}ЗАПРОС
		;

		Запрос = СоздатьОбъект("Запрос");
		Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Пока Запрос.Группировка(1) = 1 Цикл
			 
			Если Запрос.ТМЦ.ЭтоГруппа() = 1 Тогда //--- УМК Сандомирский В.Ю, добавил по группам (02.04.2014) 
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока();
			ТМЦ = Запрос.ТМЦ;
			ИзмТовар();			
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура УдалитьПустыеСтроки(Атр)
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	
	Инд = 1;
	Пока Инд <= ТЗ.КоличествоСтрок() Цикл
		Если ПустоеЗначение(ТЗ.ПолучитьЗначение(Инд, Атр)) = 1 Тогда
			ТЗ.УдалитьСтроку(Инд);
		Иначе
			Инд = Инд + 1;
		КонецЕсли;
	КонецЦикла;
	
	ЗагрузитьТабличнуюЧасть(ТЗ);
КонецПроцедуры // УдалитьПустыеСтроки(Атр)

//======================================================================
Процедура ЗаполнитьРеквизит(Атр)
	Зн = ПолучитьПустоеЗначение("Перечисление.ДаНет");
	Если ВвестиПеречисление(Зн, "Введите значение, которое нужно заполнить") = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			УстановитьАтрибут(Атр, Зн);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры //

//======================================================================
Процедура ИзменитьПризнакПроводитьБазовую()
	Спис = СоздатьОбъект("СписокЗначений");
	Спис.ДобавитьЗначение(Да);
	Спис.ДобавитьЗначение(Нет);
	
	Зн = Да;
	Если Спис.ВыбратьЗначение(Зн, "Установить ""Проводить базовую""",,,0) = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ПроводитьБазовую = Зн;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Процедура ЗаполнитьПоДвижениям()
	Если КоличествоСтрок() > 0 Тогда
		Отв = Вопрос("Удалить строки?", "Да+Нет+Отмена"); 
		Если Отв = "Да" Тогда
			УдалитьСтроки();
		ИначеЕсли Отв = "Отмена" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НДата = НачМесяца(ДатаДок);
	КДата = ДатаДок;
	Если ВвестиПериод(НДата, КДата, "Введите период для заполнения") = 1 Тогда
		ТекстЗ = 
		"//{{ЗАПРОС(Остатки)
		|Период с НДата по КДата;
		|ТМЦ = Регистр.Остатки.ТМЦ;
		|Фир = Регистр.Остатки.Фирма;
		|ОстатокТовара = Регистр.Остатки.ОстатокТовара;
		|Функция ОстатокТовараПриход = Приход(ОстатокТовара);
		|Функция ОстатокТовараРасход = Расход(ОстатокТовара);
		|Группировка ТМЦ без групп;
		|Условие(ТМЦ в списТовар);
		|Условие (Фир = Фирма);
		|"//}}ЗАПРОС
		;
		
		Запрос = СоздатьОбъект("Запрос");
		Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
			Возврат;
		КонецЕсли;
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(ТЗ);
		
		Пока Запрос.Группировка(1) = 1 Цикл
			Стр = 0;
			Если ТЗ.НайтиЗначение(Запрос.ТМЦ, Стр, "ТМЦ") = 0 Тогда
				НоваяСтрока();
				ТМЦ = Запрос.ТМЦ;
				ИзмТовар();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьПоДвижениям

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ВыборЗаполнения()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Заполнить документ");
	СпМеню.ДобавитьЗначение(2, "Авто изменение цены");
	СпМеню.ДобавитьЗначение(3, "Авто уменьшение цены");	
	СпМеню.ДобавитьЗначение(4, "Цену от");
	СпМеню.ДобавитьЗначение(5, "По товарам, где было движение");
	СпМеню.ДобавитьЗначение("СхемаЦенообразованияСтр", "Удалить с пустой схемой");
	СпМеню.ДобавитьЗначение("КатегорияОтТЧ", "Удалить с пустой категорией от");
	СпМеню.ДобавитьЗначение("БазоваяКатегорияЦен", "Удалить с пустой базовой категорией");
	СпМеню.ДобавитьЗначение("Цена", "Удалить с нулевой ценой");
	СпМеню.ДобавитьЗначение("ЦенаОт", "Удалить с нулевой от");
	СпМеню.ДобавитьЗначение("ИзмБазовая", "Установить ""Проводить базовую""");
	
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Зн = 1 Тогда
		Заполнить();
	ИначеЕсли Зн = 2 Тогда
		ЗаполнитьРеквизит("АвтоИзменениеЦен");
	ИначеЕсли Зн = 3 Тогда
		ЗаполнитьРеквизит("АвтоУменьшениеЦен");
	ИначеЕсли Зн = 4 Тогда
		Если Вопрос("Перезаполнить цену от?", "Да+Нет") = "Да" Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				ЦенаОт = глВернутьЦену(ТМЦ, ?(ПустоеЗначение(КатегорияОтТЧ) = 1, БазоваяКатегорияЦен, КатегорияОтТЧ), ДатаДок, Гривня);	//--- УМК Сандомирский В.Ю. (19.12.2014)
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли Зн = 5 Тогда		
		ЗаполнитьПоДвижениям();
	ИначеЕсли ТипЗначенияСтр(Зн) = "Строка" Тогда
		Если Зн = "ИзмБазовая" Тогда
			ИзменитьПризнакПроводитьБазовую();			
		Иначе
			УдалитьПустыеСтроки(Зн);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ВыборЗаполнения

//======================================================================
Процедура ЗаполнитьСпец()
	Если Спецификация.Выбран() = 0 Тогда
		Предупреждение("Выберите спецификацию");
		Возврат;
	КонецЕсли;

	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	ВзятьЦенуСпец = Вопрос("Взять цену из спецификации?", "Да+Нет");

	Спецификация.ВыбратьСтроки();
	Пока Спецификация.ПолучитьСтроку() = 1 Цикл
		НоваяСтрока();
		ТМЦ = Спецификация.ТМЦ;
		МинусУпаковка = 0;
		Если (ПустоеЗначение(Спецификация.ВидУпаковки) = 0) И (Спецификация.ВидУпаковки <> НетУп) Тогда
			МинусУпаковка = глПолучитьЦенуВУП(Спецификация, Спецификация.КатегорияЦен, ДатаДок, Гривня, ДатаДок, ТМЦ);
		КонецЕсли;
		ИзмТовар(?(ВзятьЦенуСпец = "Да", Спецификация.ЦенаСНДС - МинусУпаковка, 0));
	КонецЦикла;	
КонецПроцедуры // 

//======================================================================
Процедура Обороты()
	Если ПустоеЗначение(ТекущийДокумент()) = 1 Тогда
		Предупреждение("Документ необходимо записать");
		Возврат;
	КонецЕсли;
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	
	ОткрытьФормуМодально("Отчет.УстановкиЦенАкции", Расшифровка);
	Расшифровка.Установить("Дата1", 		ДатаНачалаАкции);
    Расшифровка.Установить("Дата2", 		?(ПустоеЗначение(ДатаКонцаАкции) = 1, ТекущаяДата(), ДатаКонцаАкции));
	Расшифровка.Установить("ВыбКатегорияЦен", Категория);
	Расшифровка.Установить("ВыбНоменклатура", "");
	ТаблицаМФ = Расшифровка.Получить("ТаблицаМФ");
	ВыгрузитьТабличнуюЧасть(ТаблицаМФ.ПолучитьЗначение(1, "СписокЭлементов"), "ТМЦ");
	ТаблицаМФ.УстановитьЗначение(1, "ФлВкл", 2);
	Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ);			

	глРасшифровка = Расшифровка;
	глФлагРасшифровки = 1;
	глОбновить = 2;
	ОткрытьФорму("Отчет.Обороты");	
КонецПроцедуры // Обороты

Процедура Печать()
	ИмяР = "Наименование";
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение("Наименование");
	СпМеню.ДобавитьЗначение("ПолнНаименование", "Полное наименование");
	СпМеню.ДобавитьЗначение("НаименованиеП", "Наименование без примечания");
	СпМеню.ДобавитьЗначение("ПолнНаименованиеП", "Полное наименование без примечания");	
	СпМеню.ДобавитьЗначение("Обороты", "Обороты");
	Если СпМеню.ВыбратьЗначение(ИмяР,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ИмяР = "Обороты" Тогда
		Обороты();
		Возврат;
	КонецЕсли;
	Хвост = ?(Прав(ИмяР, 1) = "П", "|Основная", "");
	ИмяР = ?(Прав(ИмяР, 1) = "П", Лев(ИмяР, СтрДлина(ИмяР) - 1), ИмяР); 
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Печать");
	Таб.ВывестиСекцию("Шапка" + Хвост);
	Таб.Опции(0,0,0,0);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл				
		ПечПроцент = "";
		Если ЦенаОт <> 0 Тогда
			ПечПроцент = Формат((Цена-ЦенаОт)/ЦенаОт*100,"Ч12." + ?(Хвост = "", "2", "0"));
		КонецЕсли;
		ПечТМЦ = СокрЛП(?(ИмяР = "Наименование", ТМЦ.Наименование, ТМЦ.ПолнНаименование));
		
		Таб.ВывестиСекцию("Строка" + Хвост);
	КонецЦикла;
	
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать Установка цен","");
КонецПроцедуры

Процедура Подбор()
	ТекСпис = "";
	ОткрытьПодбор("Справочник.ТМЦ", "ФормаСписка",,1);
КонецПроцедуры

Процедура ОбработкаПодбора(Элемент, Конт)
	Если ТипЗначенияСтр(Элемент) = "ТаблицаЗначений" Тогда		
		Если Элемент.ПолучитьПараметрыКолонки(2) = "Наименование" Тогда
			Отв = "Нет";
			Если Элемент.ПолучитьПараметрыКолонки(Элемент.КоличествоКолонок()) = "ТолькоИзДок" Тогда
				ВыбратьСтроки();
				Пока ПолучитьСтроку() = 1 Цикл
					Цена = 0;
				КонецЦикла;
				Отв = "Да";
				ТЗ = СоздатьОбъект("ТаблицаЗначений");
				ВыгрузитьТабличнуюЧасть(ТЗ, "ТМЦ");
			КонецЕсли;
			
			Элемент.ВыбратьСтроки();
			Пока Элемент.ПолучитьСтроку() = 1 Цикл
				Если ПустоеЗначение(Элемент.ТМЦ) = 0 Тогда
					Если Отв= "Да" Тогда
						Стр = 0;
						Если ТЗ.НайтиЗначение(Элемент.ТМЦ, Стр, "ТМЦ") = 0 Тогда
							Продолжить;
						Иначе
							ПолучитьСтрокуПоНомеру(Стр);
						КонецЕсли;
					Иначе
						НоваяСтрока();
						ТМЦ = Элемент.ТМЦ;
						ИзмТовар();
					КонецЕсли;
					Цена = Элемент.Цена;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ТекСпис = "" Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Элемент = ТМЦ Тогда
			    Возврат;
			КонецЕсли;
		КонецЦикла;
	
		НоваяСтрока();
		ТМЦ = Элемент;
		ИзмТовар();
	Иначе
		ДобавитьвСписок(Элемент, списТовар);
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьДЦ()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ТМЦ.ПечататьВДекларацию = 1 Тогда
			Ц = ТМЦ.Цена_Прод.Получить(ДатаДок);
			Если Цена > Ц Тогда
			    Цена = Ц;
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

//======================================================================
Процедура ИмпортФилиал()
	Если КоличествоСтрок() > 0 Тогда
		Отв = Вопрос("Удалить строки?", "Да+Нет+Отмена");
		Если Отв = "Да" Тогда
			УдалитьСтроки();
		ИначеЕсли Отв = "Отмена" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	ИмяФл = ""; Путь = "";
	Если ФС.ВыбратьФайл(0, ИмяФл, Путь, "Выберите файл для импорта", "Файлы mxl (*.mxl) | *.mxl", "*.mxl") = 1 Тогда
		Таб.Открыть(Путь + ИмяФл);
		Для Инд = 2 По Таб.ВысотаТаблицы() Цикл
			Код = СокрЛП(Таб.Область(Инд, 2, Инд, 2).Текст);
			Если СпрТМЦ.НайтиПоКоду(Код, 0) = 1 Тогда
				НоваяСтрока();
				ТМЦ = СпрТМЦ.ТекущийЭлемент();
				ИзмТовар();
				Цена = Число(Таб.Область(Инд, 4, Инд, 4).Текст);
			Иначе
				Сообщить("Не найдено ТМЦ: " + Таб.Область(Инд, 3, Инд, 3).Текст + " с кодом: " + Код);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ИмпортФилиал

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ТекСпис = "списТовар";
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (01.04.2014) 
Функция  ПоказатьРодитель()
	Если ПустоеЗначение(ТМЦ)=0 Тогда
		Возврат ТМЦ.Родитель;
	КонецЕсли;
	
КонецФункции //  ПоказатьРодитель()

//====================================================================== Сандомирский В.Ю. (24.10.2014) 
Процедура СкопироватьСхемыИзКатегорииЦен(ЗадатьВопрос = "")
	Если КоличествоСтрок() > 0 Тогда
		Если ЗадатьВопрос = "Да" Тогда
		    Если Вопрос("Заполнить схемы в строках?", "Да+Нет") = "Нет" Тогда
		        Возврат;
		    КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Цена = 0;
		Валюта = "";
		глПриИзмененииТовара(Контекст);
		СхемаЦенообразованияСтр = глПолучитьСхемуЦенообразования(ТМЦ,КатегорияЦенКопироватьСхемы,ДатаДок);
		//Цена = глВернутьЦену(ТМЦ, КатегорияЦенКопироватьСхемы, ДатаДок, Гривня);
		//ЦенаОт = глВернутьЦену(ТМЦ, КатегорияЦенКопироватьСхемы, ДатаДок, Гривня);
	КонецЦикла;
	
КонецПроцедуры // СкопироватьСхемыИзКатегорииЦен()

//====================================================================== Сандомирский В.Ю. (24.10.2014) 
Процедура ЗаполнитьСхемуВТаблицу(ЗадатьВопрос = "")
	Если КоличествоСтрок() > 0 Тогда
		Если ЗадатьВопрос = "Да" Тогда
		    Если Вопрос("Заполнить схемы в строках?", "Да+Нет") = "Нет" Тогда
		        Возврат;
		    КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		
		Цена = 0;
		Валюта = "";
		глПриИзмененииТовара(Контекст);
		СхемаЦенообразованияСтр = СхемаЦенообразования;
	
	КонецЦикла;
	
КонецПроцедуры // СкопироватьСхемыИзКатегорииЦен()

//====================================================================== Сандомирский В.Ю. (24.10.2014) 
Процедура ЗаполнитьБазовуюЦенуВТаблицу(ЗадатьВопрос = "")
	
	Если КоличествоСтрок() > 0 Тогда
		Если ЗадатьВопрос = "Да" Тогда
		    Если Вопрос("Заполнить базовую цену таблицу ?", "Да+Нет") = "Нет" Тогда
		        Возврат;
		    КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		
		Цена = 0;
		Валюта = "";
		глПриИзмененииТовара(Контекст);
		БазоваяКатегорияЦен = КатегорияОт;
	
	КонецЦикла;
	
КонецПроцедуры // СкопироватьСхемыИзКатегорииЦен()

//====================================================================== //--- УМК Сандомирский В.Ю, (01.04.2014) 
Функция  УстДоступность()
	
	//--- УМК Сандомирский В.Ю. (19.12.14) расчет производится только по схемам
	//Если ПроцЧис = 3 Тогда
	//	Форма.тСхемаЦенообразования.Видимость(1);
	//	Форма.СхемаЦенообразования.Видимость(1);
	//	Форма.кнЗаполнитьСхемуВТаблицу.Видимость(1);  	//---УМК Сандомирский В.Ю. (24.10.2014)
	//Иначе
	//	Форма.тСхемаЦенообразования.Видимость(0);
	//	Форма.СхемаЦенообразования.Видимость(0);
	//	Форма.кнЗаполнитьСхемуВТаблицу.Видимость(0);	//---УМК Сандомирский В.Ю. (24.10.2014)
	//КонецЕсли;
	//... УМК Сандомирский В.Ю. (19.12.14) расчет производится только по схемам
	
	Если Файлы.ТекущаяСтрока() <> 0 Тогда
		Если Файлы.Ссылка.Картинка = 1 Тогда
		    Путь = СокрЛП(Файлы.Ссылка.Путь);
			сКартинка.Загрузить(Путь);
		Иначе
			Файлы.ВыбратьСтроки();
			Пока Файлы.ПолучитьСтроку() = 1 Цикл
				Если Файлы.Ссылка.Картинка = 1 Тогда
				    Путь = СокрЛП(Файлы.Ссылка.Путь);
					Если Путь <> "" Тогда
						сКартинка.Загрузить(Путь);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
КонецФункции // УстДоступность()

//====================================================================== //--- УМК Сандомирский В.Ю, (01.04.2014) 
Функция ВернутьРазницу()	
	Если (Цена <> 0) И (ЦенаОт <> 0) Тогда		
		Если перРазница = 1 Тогда
			Разница = Цена - ЦенаОт;		
		ИначеЕсли перРазница = 2 Тогда				
			Разница = Окр((Цена - ЦенаОт) / ЦенаОт * 100,2);			
		КонецЕсли;		
		
		Возврат Разница;		
	КонецЕсли;	
КонецФункции // ВернутьРазницу()

//======================================================================
Процедура ИмпортПоШаблону()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Полный");
	СпМеню.ДобавитьЗначение(2, "Только то, что есть в документе");
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн, ,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	

	Если Зн = 1 Тогда		
		Если КоличествоСтрок() > 0 Тогда
			Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
				УдалитьСтроки();
			КонецЕсли;
		КонецЕсли;		
		Парам = Категория.ШаблонИмпорта;	
	Иначе
		Парам = СоздатьОбъект("СписокЗначений");
		Парам.Установить("Шаблон", Категория.ШаблонИмпорта);
		СписТ = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(СписТ, "ТМЦ");
		Парам.Установить("Товары", СписТ);
	КонецЕсли;
	ОткрытьПодбор("Обработка.ИмпортПН", , Парам);
КонецПроцедуры // 

//====================================================================== //--- УМК Сандомирский В.Ю, (11.12.2014) 
Процедура Импорт()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Обычный");
	СпМеню.ДобавитьЗначение(2, "По шаблону");
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Нет" Тогда
			Возврат;
		Иначе
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	Если Зн = 2 Тогда
		ИмпортПоШаблону();
	КонецЕсли;
	
	ФЛ = ""; Каталог = "";
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	СпрТМЦ.ИспользоватьДату(ДатаДок);
	Если ФС.ВыбратьФайл(0, ФЛ, Каталог, "Выберите файл импорта", "Файлы mxl (*.mxl) | *.mxl", "*.mxl") = 1 Тогда
		Таб = СоздатьОбъект("Таблица");
		Таб.Открыть(СокрЛП(Каталог) + СокрЛП(Фл));
		Таб.Показать();
		Если Вопрос("Продолжить импорт?", "Да+Нет") = "Нет" Тогда
			Возврат;
		КонецЕсли;
		Для Инд = 2 По Таб.ВысотаТаблицы() Цикл
			КодПоиска = Таб.Область(Инд, 2, Инд, 2).Текст;
			Если СокрЛП(КодПоиска) <> "" Тогда
				Новый = 0;
				Если СпрТМЦ.НайтиПоКоду(КодПоиска, 0) = 0 Тогда					
					СпрТМЦ.Новый();
					СпрТМЦ.Код = КодПоиска;
					СпрТМЦ.СтавкаНДС = Константа.БазНДС;
					СпрТМЦ.ВидДеятельности = Константа.БазВидДеятельности;
					СпрТМЦ.Наименование = Таб.Область(Инд, 3, Инд, 3).Текст;
					Новый = 1;
				КонецЕсли;
				
				ПометкаУдаления = Число(Таб.Область(Инд, 6, Инд, 6).Текст); //--- Сандомирский В.Ю. (??.??.????) Удаляем и выводим в корень если в производстве удален
				Если ПометкаУдаления = 1 Тогда
					СпрТМЦ.Родитель = "";
					СпрТМЦ.Удалить(0);
					СпрТМЦ.Записать();
				КонецЕсли; //... Сандомирский В.Ю. (??.??.????) Удаляем и выводим в корень если в производстве удален
				
				//СпрТМЦ.ПолнНаименование = Таб.Область(Инд, 3, Инд, 3).Текст;
				Един = СоздатьОбъект("Справочник.КлассификаторЕдИзм");
				Если Един.НайтиПоНаименованию(Таб.Область(Инд, 5, Инд, 5).Текст) = 0 Тогда
					Един.Новый();
					Един.Наименование = Таб.Область(Инд, 5, Инд, 5).Текст;
					Един.ПолнНаименование = Таб.Область(Инд, 5, Инд, 5).Текст;
					Един.Записать();
				КонецЕсли;
				
				Если ПустоеЗначение(СпрТМЦ.БазоваяЕдиница) = 1 Тогда
					СпрТМЦ.БазоваяЕдиница = Един.ТекущийЭлемент();
				КонецЕсли;
				
				Если фОбновлятьНаименования = 1 Тогда //--- Сандомирский В.Ю. (обновлять наименования при импорте ?) 12.03.14
				    СпрТМЦ.Наименование = СокрЛП(Таб.Область(Инд, 3, Инд, 3).Текст);
				КонецЕсли; //... Сандомирский В.Ю. (обновлять наименования при импорте ?) 12.03.14
				
				Для Идкс = 7 По Таб.ШиринаТаблицы() Цикл
					ИмяРекв = Таб.Область(1, Идкс, 1, Идкс).Текст;
					Значение = Таб.Область(Инд, Идкс, Инд, Идкс).Текст;
					Попытка
						Если Метаданные.Справочник("ТМЦ").Реквизит(ИмяРекв).Тип = "Перечисление" Тогда
							СпрТМЦ.УстановитьАтрибут(ИмяРекв, Перечисление.ПолучитьАтрибут(Метаданные.Справочник("ТМЦ").Реквизит(ИмяРекв).Вид).ЗначениеПоИдентификатору(Значение));
						ИначеЕсли Метаданные.Справочник("ТМЦ").Реквизит(ИмяРекв).Тип = "Счет" Тогда
							СпрТМЦ.УстановитьАтрибут(ИмяРекв, СчетПоКоду(Значение));
						Иначе
							СпрТМЦ.УстановитьАтрибут(ИмяРекв, Значение);
						КонецЕсли;							
					Исключение
					КонецПопытки;
				КонецЦикла;
				Попытка
					СпрТМЦ.Записать();
					Если ПустоеЗначение(СпрТМЦ.ЕдиницаПоУмолчанию) = 1 Тогда
						СпрЕд = СоздатьОбъект("Справочник.Единицы");
						СпрЕд.Новый();
						СпрЕд.Владелец = СпрТМЦ.ТекущийЭлемент();
						СпрЕд.Наименование = Строка(СпрТМЦ.БазоваяЕдиница);
						СпрЕд.Коэффициент = 1;
						СпрЕд.Единица = СпрТМЦ.БазоваяЕдиница;
						СпрЕд.Записать();
						СпрТМЦ.ЕдиницаПоУмолчанию = СпрЕд.ТекущийЭлемент();
						СпрТМЦ.Записать();
					КонецЕсли;
					Сообщить(?(Новый = 1, "Добавлен: ", "Обновлен: ")  + СпрТМЦ.ТекущийЭлемент());
				Исключение
					Сообщить(ОписаниеОшибки());
					Продолжить;
				КонецПопытки;
				
				НоваяСтрока();
				ТМЦ = СпрТМЦ.ТекущийЭлемент();
				ИзмТовар();							//--- УМК Сандомирский В.Ю. (19.12.14) для того чтобы при импорте заполнялись тоже реквизиты
				Ед = ТМЦ.ЕдиницаПоУмолчанию;
				ЦенаОт = глВернутьЦену(ТМЦ, КатегорияОт, ДатаДок, Гривня);
				Цена = Число(Таб.Область(Инд, 4, Инд, 4).Текст);	
						
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьКатегориюОт()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		КатегорияОтТЧ = КатегорияДляУстановкиОт;
		ИзмТовар();
	КонецЦикла;	
КонецПроцедуры // ЗаполнитьКатегориюОт()

//======================================================================
Процедура ИзмБазовыйТЦ()
	ЦенаОт = глВернутьЦену(ТМЦ, ?(ПустоеЗначение(КатегорияОтТЧ) = 1, БазоваяКатегорияЦен, КатегорияОтТЧ), ДатаДок, Гривня);	//--- УМК Сандомирский В.Ю. (19.12.2014)		
КонецПроцедуры // ИзмБазовыйТЦ()

//======================================================================
Процедура ИзмСхемаЦенообразования()
	НеЗаписыватьБазовуюСхему = 0;
	Если ПустоеЗначение(СхемаЦенообразования) = 0 Тогда
		Если СхемаЦенообразования <> Категория.БазоваяСхемаЦенообразования Тогда
			НеЗаписыватьБазовуюСхему = 1;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ИзмСхемаЦенообразования()

//======================================================================
Процедура УдалитьДубли()
	Если Вопрос("Удалить дубли строк?", "Да+Нет") = "Да" Тогда
		ТЗ =СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(ТЗ);
		СписУже = СоздатьОбъект("СписокЗначений");
		Инд = 1;
		Пока Инд <= ТЗ.КоличествоСтрок() Цикл
			Если СписУже.НайтиЗначение(ТЗ.ПолучитьЗначение(Инд, "ТМЦ")) <> 0 Тогда
				ТЗ.УдалитьСтроку(Инд);
			Иначе
				СписУже.ДобавитьЗначение(ТЗ.ПолучитьЗначение(Инд, "ТМЦ"));
				Инд = Инд + 1;
			КонецЕсли;			
		КонецЦикла;
		
		ЗагрузитьТабличнуюЧасть(ТЗ);
	КонецЕсли;
КонецПроцедуры // УдалитьДубли

Процедура ДобавитьФайл()
	Перем ФормаЗаписи;
	Если Выбран() = 0 Тогда
		Предупреждение("Элемент сначала следует записать!");
		Возврат;
	КонецЕсли;	
	ОткрытьФормуМодально("Элемент.ФайлыОбщие", Контекст,,,ТекущийДокумент());
КонецПроцедуры	// ДобавитьКомпл

// ===============================
// Модально открывается форма текущего в списке файлов для редактирования
Процедура ИзменитьФайл()
	Перем ФормаЗаписи;                                        
	Поз=Файлы.ТекущаяСтрока();	
	Если Поз = 0 Тогда
	    // не выбрана строка таблицы
		Возврат;
	КонецЕсли;               	
	Эл=Файлы.ПолучитьЗначение(Поз,"Ссылка");
	ОткрытьФормуМодально(Эл,Контекст);
КонецПроцедуры	// ИзменитьКомпл

// ===============================
// Удаляет текущий файл в списке 
Процедура УдалитьФайл()
	Если Вопрос("Удалить файл?",1)=2 Тогда
		Возврат;
	КонецЕсли;
	Поз=Файлы.ТекущаяСтрока();
	
	Если Поз = 0 Тогда
	    // не выбрана строка таблицы
		Возврат;
	КонецЕсли;

	Эл=Файлы.ПолучитьЗначение(Поз,"Ссылка");
	Спр=СоздатьОбъект("Справочник.ФайлыНА");
	Если Спр.НайтиЭлемент(Эл)=1 Тогда
		Спр.Удалить(0);
		Файлы.УдалитьСтроку(Поз);
		Файлы.ТекущаяСтрока(?(Поз>1,Поз-1,1));
		Форма.Обновить();
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьФайл()
	Поз = Файлы.ТекущаяСтрока();
	Если Поз <> 0 Тогда
	    ЗапуститьПриложение(СокрЛП(Файлы.ПолучитьЗначение(Поз, "Ссылка").Путь));
	КонецЕсли;
КонецПроцедуры

//======================================================================
Функция ПродукцияТФ()
	Если ПустоеЗначение(ТМЦ) = 1 Тогда
		Возврат "";
	Иначе
		Возврат ТМЦ.ТМЦСТакимЖеФаршем;
	КонецЕсли;
КонецФункции // ПродукцияТФ

//======================================================================
Функция ПолучитьДокумент(ПоказыватьНормы = 0)	
	Если (ПустоеЗначение(ТМЦ) = 0) И ((ПоказыватьНормы = 1) ИЛИ (фНормы = 1)) Тогда
		Док = СоздатьОбъект("Документ");
		Док.ОбратныйПорядок(1);
		Док.УстановитьФильтр(1,0);
		Док.ВыбратьПоЗначению(,,"Продукция", ТМЦ);
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Действует = 1 Тогда
				Возврат Док.ТекущийДокумент();
			КонецЕсли;		
		КонецЦикла;
	КонецЕсли;
	
	Возврат "";	
КонецФункции // ПолучитьДокумент

//======================================================================
Процедура ОткрытьНормыЗатрат()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Нормы затрат");
	СпМеню.ДобавитьЗначение(2, "ТМЦ с таким же фаршем");

	Зн = 1;	
	Если ПустоеЗначение(ТМЦ.ТМЦСТакимЖеФаршем) = 0 Тогда		
		Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если Зн = 1 Тогда
		Док = ПолучитьДокумент(1);
		Если ПустоеЗначение(Док) = 0 Тогда
			ОткрытьФорму(Док);
		КонецЕсли;
	Иначе
		ОткрытьФорму(ТМЦ.ТМЦСТакимЖеФаршем);
	КонецЕсли;
КонецПроцедуры // НормыЗатрат()

ПерваяЗапись = 0;

// ===============================
Файлы.НоваяКолонка("Ссылка","Справочник.ФайлыОбщие",,,,0);
Файлы.НоваяКолонка("Категория","Справочник.ВидыКатегорий",,,"Кат.",10);
Файлы.НоваяКолонка("Описание","Строка",,,"Описание",30);

ГруппаТ.ВыборГруппы(1);

ГруппаТ.ВыборГруппы(1);
Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
Сервис.ИспользоватьПланРаскраски(1);


ТекСпис = "";
СписокРеквизитовИзВЭ = "УсловияХранения,УсловияХраненияВП,УсловияХраненияВС,УсловияХраненияВЦ,УсловияХраненияГ,ОписаниеЭ,НаименованиеЭ,ВидЭ,";