//Ошибки пишем на pvv911@rambler.ru 
//© Вадимко, 2007

Перем СтарыйИДРегистра;
Перем КартинкаПриход, КартинкаРасход, КартинкаОборот;
Перем ТипРегистра;
Перем НачальнаяДатаДокумента;


Функция ЗаголовокФормы()
	Перем Заголовок, Название;

	Заголовок	= ПредставлениеВида();
	Название 	= Заголовок+" №";
	
	Если Выбран() = 1 Тогда  
		Если Проведен() = 1 Тогда
			Заголовок = Заголовок + ". Проведен";
		Иначе
			Заголовок = Заголовок + ". Не проведен";
		КонецЕсли;
	Иначе
		Заголовок = Заголовок + ". Новый";
	КонецЕсли;
	
	Форма.Заголовок(Заголовок);
	
	Возврат Название;
КонецФункции


Процедура ЗаполнитьСписокРегистров()
	Для Сч = 1 По Метаданные.Регистр() Цикл
		СписокРегистров.ДобавитьЗначение(Метаданные.Регистр(Сч).Идентификатор, Метаданные.Регистр(Сч).Представление());
	КонецЦикла;
КонецПроцедуры	


Функция ПолучитьТипВид(Объект)
	Тип = Объект.Тип;
	Вид = Объект.Вид;
	
	Если ПустоеЗначение(Вид) = 0 Тогда
		ТипВид = Тип + "." + Вид;
	Иначе
		ТипВид = Тип;
	КонецЕсли;	
		
	Возврат ТипВид;
КонецФункции


Процедура ЗаполнитьКолонкиТаблицы()
	ТаблДвижений.Очистить();	
	
	ТаблДвижений.НоваяКолонка("Движение", "Число",,, "Дв.", 5);
	ТаблДвижений.ВыводитьПиктограммы("Движение");
	
    ТипРегистра = Метаданные.Регистр(СокрЛП(ИДРегистра)).ТипРегистра;
	
	Для Сч = 1 по Метаданные.Регистр(СокрЛП(ИДРегистра)).Измерение() Цикл
		Измерение = Метаданные.Регистр(СокрЛП(ИДРегистра)).Измерение(Сч);
		ТипВид = ПолучитьТипВид(Измерение);
		ТаблДвижений.НоваяКолонка(Измерение.Идентификатор, ТипВид, Измерение.Длина, Измерение.Точность, Измерение.Представление());
	КонецЦикла;	
	
	Для Сч = 1 по Метаданные.Регистр(СокрЛП(ИДРегистра)).Ресурс() Цикл
		Ресурс = Метаданные.Регистр(СокрЛП(ИДРегистра)).Ресурс(Сч);
		ТипВид = ПолучитьТипВид(Ресурс);
		ТаблДвижений.НоваяКолонка(Ресурс.Идентификатор, ТипВид, Ресурс.Длина, Ресурс.Точность, Ресурс.Представление());
	КонецЦикла;	
	
	Для Сч = 1 по Метаданные.Регистр(СокрЛП(ИДРегистра)).Реквизит() Цикл
		Реквизит = Метаданные.Регистр(СокрЛП(ИДРегистра)).Реквизит(Сч);
		ТипВид = ПолучитьТипВид(Реквизит);
		ТаблДвижений.НоваяКолонка(Реквизит.Идентификатор, ТипВид, Реквизит.Длина, Реквизит.Точность, Реквизит.Представление());
	КонецЦикла;	
КонецПроцедуры


Процедура ЗаполнитьТаблицу()
	СписокРеквизитов  = СоздатьОбъект("СписокЗначений");
	
	Для Сч = 1 по Метаданные.Регистр(СокрЛП(ИДРегистра)).Измерение() Цикл
		Измерение = Метаданные.Регистр(СокрЛП(ИДРегистра)).Измерение(Сч);
		СписокРеквизитов.ДобавитьЗначение(Измерение.Идентификатор);
	КонецЦикла;	
	
	Для Сч = 1 по Метаданные.Регистр(СокрЛП(ИДРегистра)).Ресурс() Цикл
		Ресурс = Метаданные.Регистр(СокрЛП(ИДРегистра)).Ресурс(Сч);
		СписокРеквизитов.ДобавитьЗначение(Ресурс.Идентификатор);
	КонецЦикла;	
	
	Для Сч = 1 по Метаданные.Регистр(СокрЛП(ИДРегистра)).Реквизит() Цикл
		Реквизит = Метаданные.Регистр(СокрЛП(ИДРегистра)).Реквизит(Сч);
		СписокРеквизитов.ДобавитьЗначение(Реквизит.Идентификатор);
	КонецЦикла;	
	
	Рег = СоздатьОбъект("Регистр." + СокрЛП(ИДРегистра));
	
	Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока Рег.ПолучитьДвижение() = 1 Цикл
		ТаблДвижений.НоваяСтрока();
		
		Для Сч = 1 по СписокРеквизитов.РазмерСписка() Цикл
			ИД = СписокРеквизитов.ПолучитьЗначение(Сч);
			ТаблДвижений.УстановитьЗначение(ТаблДвижений.НомерСтроки, Сч + 1, Рег.ПолучитьАтрибут(ИД));
		КонецЦикла;    
		
		Если ТипРегистра = "Остатки" Тогда
			Если Рег.Приход = 1 Тогда
				ТаблДвижений.Движение = КартинкаПриход;
			Иначе
				ТаблДвижений.Движение = КартинкаРасход;
			КонецЕсли;
		Иначе
			ТаблДвижений.Движение = КартинкаОборот;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры


Процедура ПриДвойномЩелчкеНаТаблице()
	Перем ТекКол, ТекСтр;
	Перем ТипВид, Длина, Точность, ВремЗнач;
	Перем ФормаПодбора;
	
	ТаблДвижений.ТекущаяКолонка(,ТекКол);
	ТекСтр		= ТаблДвижений.ТекущаяСтрока();
	КодТекКол	= ТаблДвижений.ПолучитьПараметрыКолонки(ТекКол, ТипВид, Длина, Точность);
	
	Список = СоздатьОбъект("СписокЗначений");
	
	Если ТекСтр > 0 Тогда
		Значение	= ТаблДвижений.ПолучитьЗначение(ТекСтр, ТекКол);
		
		Если КодТекКол = "Движение" Тогда
			Если ТипРегистра = "Обороты" Тогда
				Возврат;
			КонецЕсли;
			
			Значение = ?(Значение = КартинкаПриход, КартинкаРасход, КартинкаПриход);
			ТаблДвижений.УстановитьЗначение(ТекСтр, ТекКол, Значение);
			НомерДок = НомерДок;
			Возврат;
		КонецЕсли;
				
		ТипЗнач		= ТипЗначенияСтр(Значение);
		
		Попытка
			Вид = Значение.Вид();
		Исключение	
			Вид = "";
		КонецПопытки;	
		
		Если ТипЗнач = "Число" Тогда
			Если ВвестиЧисло(Значение, "Введите число", Длина, Точность, 60) = 1 Тогда
				ТаблДвижений.УстановитьЗначение(ТекСтр, ТекКол, Значение);
			КонецЕсли;
		ИначеЕсли ТипЗнач = "Строка" Тогда
			Если ВвестиСтроку(Значение, "Введите строку", Длина, , 60) = 1 Тогда
				ТаблДвижений.УстановитьЗначение(ТекСтр, ТекКол, Значение);
			КонецЕсли;
		ИначеЕсли ТипЗнач = "Дата" Тогда
			Если ВвестиДату(Значение, "Введите дату", 60) = 1 Тогда
				ТаблДвижений.УстановитьЗначение(ТекСтр, ТекКол, Значение);
			КонецЕсли;
		ИначеЕсли ТипЗнач = "Перечисление" Тогда	
			Для Сч = 1 по Перечисление.ПолучитьАтрибут(Вид).КоличествоЗначений() Цикл
				Список.ДобавитьЗначение(Перечисление.ПолучитьАтрибут(Вид).ЗначениеПоНомеру(Сч));
			КонецЦикла;	
			
			Если Список.ВыбратьЗначение(Значение,,, 60, 2) = 1 Тогда
				ТаблДвижений.УстановитьЗначение(ТекСтр, ТекКол, Значение);
			КонецЕсли;	
		ИначеЕсли ТипЗнач = "Справочник" Тогда		
			Если Найти(ТипВид, ".") = 0 Тогда
				Если ПустоеЗначение(Вид) = 0 Тогда
					Список.ДобавитьЗначение("<...>", "<Оставить прежним>");
				КонецЕсли;	
				
				Для Сч = 1 по Метаданные.Справочник() Цикл
					Список.ДобавитьЗначение(Метаданные.Справочник(Сч).Идентификатор, Метаданные.Справочник(Сч).Представление());
				КонецЦикла;	
				
				Если Список.ВыбратьЗначение(ВремЗнач, "Выберите вид справочника", , 60) <> 1 Тогда
					Возврат;
				КонецЕсли;	
				
				Если ВремЗнач <> "<...>" Тогда
					Вид = ВремЗнач;
				КонецЕсли;
			КонецЕсли;	
			
			Если СокрЛП(Метаданные.Справочник(Вид).Владелец) <> "Метаданные" Тогда
				ТекВладелец = СоздатьОбъект(Метаданные.Справочник(Вид).Владелец.ПолныйИдентификатор());
				ТекВладелец.ВыборГруппы(0);
				Если ТекВладелец.Выбрать("Выберите " + Метаданные.Справочник(Вид).Владелец,"") = 0 Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;	
			
			ОткрытьПодбор("Справочник." + Вид,,ФормаПодбора, 0, Значение);
			ФормаПодбора.ВыборГруппы(0);                                      
			Если ТипЗначенияСтр(ТекВладелец) = "Справочник" Тогда
				ФормаПодбора.ИспользоватьВладельца(ТекВладелец.ТекущийЭлемент());
			КонецЕсли;
		ИначеЕсли ТипЗнач = "Документ" Тогда
        	Если Найти(ТипВид, ".") = 0 Тогда
				Если ПустоеЗначение(Вид) = 0 Тогда
					Список.ДобавитьЗначение("<...>", "<Оставить прежним>");
				КонецЕсли;	
				
				Для Сч = 1 по Метаданные.Документ() Цикл
					Список.ДобавитьЗначение(Метаданные.Документ(Сч).Идентификатор, Метаданные.Документ(Сч).Представление());
				КонецЦикла;	
				
				Если Список.ВыбратьЗначение(ВремЗнач, "Выберите вид документа", , 60) <> 1 Тогда
					Возврат;
				КонецЕсли;	
				
				Если ВремЗнач <> "<...>" Тогда
					Вид = ВремЗнач;
				КонецЕсли;	
			КонецЕсли;	
			
			ОткрытьПодбор("Документ." + Вид,,ФормаПодбора, 0, Значение);
		// + umk
		ИначеЕсли ТипЗнач = "Счет" Тогда
			ОткрытьПодбор("ПланСчетов.Основной",ФормаПодбора,0,Значение);
		КонецЕсли;
		// - umk	
	КонецЕсли;
КонецПроцедуры


Функция ПриИзмененииИДРегистра()
	Попытка
		Рег = СоздатьОбъект("Регистр." + СокрЛП(ИдРегистра));
	Исключение	
		Предупреждение("Указанного регистра не сущетвует", 60);
		ИДРегистра = СтарыйИДРегистра;
		Возврат 0;
	КонецПопытки;	
	
	Поз = СписокРегистров.НайтиЗначение(СокрЛП(ИДРегистра));
	
	Если Поз = 0 Тогда
	    Предупреждение("Не найден регистр в списке", 60);
		ИДРегистра = СписокРегистров.ПолучитьЗначение(СписокРегистров.ТекущаяСтрока());
		Возврат 0;
	Иначе
		СписокРегистров.ТекущаяСтрока(Поз);
	КонецЕсли;
	
	Возврат 1;
КонецФункции	


Процедура ПриИзмененииРегистра()
	ИДРегистра = СписокРегистров.ПолучитьЗначение(СписокРегистров.ТекущаяСтрока());
	
	Если СтарыйИДРегистра = ИДРегистра Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблДвижений.КоличествоСтрок() > 0 Тогда	    
		Если Вопрос("Табличная часть будет очищена. Продолжить?", "Да+Нет", 60) <> "Да"  Тогда
			ИДРегистра = СтарыйИДРегистра;
			ПриИзмененииИДРегистра();
			Возврат;
		КонецЕсли;
	КонецЕсли;
			
	СтарыйИДРегистра = ИДРегистра;
	ЗаполнитьКолонкиТаблицы();
КонецПроцедуры


Процедура ПоКнопкеКопироватьСтроку()
	ТекСтр = ТаблДвижений.ТекущаяСтрока();
	
	Если ТекСтр > 0 Тогда
		ТаблДвижений.НоваяСтрока();
		
		КолСтрок = ТаблДвижений.КоличествоСтрок();
				
		Для Сч = 1 по ТаблДвижений.КоличествоКолонок() Цикл
			ТаблДвижений.УстановитьЗначение(КолСтрок, Сч, ТаблДвижений.ПолучитьЗначение(ТекСтр, Сч))
		КонецЦикла;	
	КонецЕсли;

	ТаблДвижений.ТекущаяСтрока(КолСтрок);	
КонецПроцедуры	


Процедура ПоКнопкеДобавитьСтроку()
	ТаблДвижений.НоваяСтрока();
	
	Если ТипРегистра = "Остатки" Тогда
		ТаблДвижений.Движение = КартинкаПриход;
	Иначе
		ТаблДвижений.Движение = КартинкаОборот;
	КонецЕсли;	
КонецПроцедуры	


Процедура ПоКнопкеУдалитьСтроку()
	ТекСтр = ТаблДвижений.ТекущаяСтрока();
	
	Если ТекСтр > 0 Тогда
		ТаблДвижений.УдалитьСтроку(ТекСтр);
	КонецЕсли;	
КонецПроцедуры	


Процедура ПоКнопкеПровести()
	Записать();
	Провести(1, ТаблДвижений);	
КонецПроцедуры


Процедура ПоКнопкеОК()
	Записать();
	Провести(1, ТаблДвижений);	
	Форма.Закрыть();
КонецПроцедуры


Процедура ПоКнопкеОчиститьЗначение()
	ТекСтр = ТаблДвижений.ТекущаяСтрока();
	
	Если ТекСтр > 0 Тогда
		ТаблДвижений.УстановитьЗначение(ТекСтр, ТаблДвижений.ТекущаяКолонка(), "");
	КонецЕсли;	
КонецПроцедуры


Процедура СохранитьВФайл()
	Перем ИмяФайла, Каталог;
	
	Каталог = КаталогПользователя();
	Выбор	= "Файл данных (*.dtz)|*.dtz";
	
	Если ФС.ВыбратьФайл(0, ИмяФайла, Каталог, "Выберите файл", Выбор, , ) = 1 Тогда
		ИмяФайлаДанных = Каталог + ИмяФайла;
	Иначе
		Предупреждение("Не выбран файл с данными!");
		Возврат;
	КонецЕсли;	
			
	ЗначениеВФайл(ИмяФайлаДанных, ТаблДвижений);
	
	Текст = СоздатьОбъект("Текст");
	Текст.ДобавитьСтроку(СокрЛП(ИДРегистра));
	ИмяФайлаРегистра = Лев(ИмяФайлаДанных, СтрДлина(ИмяФайлаДанных) - 4) + ".ttz";
	Текст.Записать(ИмяФайлаРегистра);
КонецПроцедуры


Процедура ВосстановитьИзФайла()
	Перем ИмяФайла, Каталог;
	
	Если ТаблДвижений.КоличествоСтрок() > 0 Тогда
		Если Вопрос("Табличная часть будет очищена. Продолжить?", "Да+Нет", 60) <> "Да"  Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Каталог = КаталогПользователя();
	Выбор	= "Файл данных (*.dtz)|*.dtz";
	
	Если ФС.ВыбратьФайл(0, ИмяФайла, Каталог, "Выберите файл", Выбор, , ) = 1 Тогда
		ИмяФайлаДанных = Каталог + ИмяФайла;
	Иначе
		Предупреждение("Не выбран файл с данными!");
		Возврат;
	КонецЕсли;	
		
	Текст = СоздатьОбъект("Текст");
	ИмяФайлаРегистра = Лев(ИмяФайлаДанных, СтрДлина(ИмяФайлаДанных) - 4) + ".ttz";
	Если ФС.СуществуетФайл(ИмяФайлаРегистра) = 0 Тогда
		Предупреждение("Файл " + ИмяФайлаРегистра + " не существует");
		Возврат;
	КонецЕсли;	
	
	Попытка
		Текст.Открыть(ИмяФайлаРегистра);
		ИДРегистра = СокрЛП(Текст.ПолучитьСтроку(1));
		Если ПриИзмененииИДРегистра() = 0 Тогда
			Возврат;
		КонецЕсли;	
	Исключение
		Предупреждение("Некорректные данные о регистре", 60);
		Возврат;
	КонецПопытки;	
	
	ЗначениеИзФайла(ИмяФайлаДанных, ТаблДвижений);
	
	Попытка
		ТаблДвижений.ВыводитьПиктограммы("Движение");
	Исключение	
		ТаблДвижений.ВставитьКолонку("Движение", 1, "Число",,, "Дв.", 5);
		ТаблДвижений.Заполнить(1,,,"Движение");
		ТаблДвижений.ВыводитьПиктограммы("Движение");
	КонецПопытки;	
	НомерДок = НомерДок;
КонецПроцедуры


Процедура ЗаполнитьПоИтогам()
	ТипРегистра = Метаданные.Регистр(СокрЛП(ИДРегистра)).ТипРегистра;
	Если ТипРегистра = "Обороты" Тогда
		Возврат;
	КонецЕсли;
	
	ОбщРег	= СоздатьОбъект("Регистры");
	Рег		= ОбщРег.ПолучитьАтрибут(СокрЛП(ИДРегистра));
	
	Если ДатаДок < ПолучитьДатуТА() Тогда
		Рег.ВременныйРасчет();
		ОбщРег.РассчитатьРегистрыПо(ДатаДок);
	КонецЕсли;
		
	Рег.ВыгрузитьИтоги(ТаблДвижений);	
	ТаблДвижений.ВставитьКолонку("Движение", 1, "Число",,, "Дв.", 5);
	ТаблДвижений.Заполнить(1,,,"Движение");
	ТаблДвижений.ВыводитьПиктограммы("Движение");
КонецПроцедуры


Процедура ИнвертироватьЗнаки()
	ТипРегистра = Метаданные.Регистр(СокрЛП(ИДРегистра)).ТипРегистра;
	Если ТипРегистра = "Обороты" Тогда
		Возврат;
	КонецЕсли;
    
	ТаблДвижений.ВыбратьСтроки();
	Пока ТаблДвижений.ПолучитьСтроку() = 1 Цикл
		ТаблДвижений.Движение = ?(ТаблДвижений.Движение = КартинкаПриход, КартинкаРасход, КартинкаПриход);
	КонецЦикла;	
КонецПроцедуры


Процедура ПоКнопкеДействия()
	Перем Действие;
	
	ТипРегистра = Метаданные.Регистр(СокрЛП(ИДРегистра)).ТипРегистра;
	
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Сохранить таблицу в файл");
	СписокДействий.ДобавитьЗначение("Восстановить таблицу из файла");
	Если ТипРегистра = "Остатки" Тогда
		СписокДействий.ДобавитьЗначение("Заполнить по итогам");
		СписокДействий.ДобавитьЗначение("Инвертировать знаки");
	КонецЕсли;
	
	Если СписокДействий.ВыбратьЗначение(Действие,,,,1) > 0 Тогда
		Если Действие = "Сохранить таблицу в файл" Тогда
			СохранитьВФайл();
		ИначеЕсли Действие = "Восстановить таблицу из файла" Тогда
			ВосстановитьИзФайла();
		ИначеЕсли Действие = "Заполнить по итогам" Тогда
			ЗаполнитьПоИтогам();
		ИначеЕсли Действие = "Инвертировать знаки" Тогда
			ИнвертироватьЗнаки();
			НомерДок = НомерДок;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры


Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Автор = глПользователь;
	Провести(1, ТаблДвижений);	
КонецПроцедуры


Процедура ОбработкаПодбора(ВыбЗнач)
	ТаблДвижений.УстановитьЗначение(ТаблДвижений.ТекущаяСтрока(), ТаблДвижений.ТекущаяКолонка(), ВыбЗнач);
КонецПроцедуры


Процедура ПриОткрытии()
	// + umk
	СписокПараметров = Форма.Параметр;
	
	Если ПустоеЗначение(СписокПараметров) = 0 Тогда
		ДатаДок = СписокПараметров.Получить("ДатаДок");
		ИДРегистра = СписокПараметров.Получить("ИдРегистра");
		Комментарий_ = СписокПараметров.Получить("Комментарий"); 
	КонецЕсли;
	// - umk
	НачальнаяДатаДокумента = ДатаДок;
	ПриИзмененииИДРегистра();
	
	ЗаполнитьКолонкиТаблицы();
	
	// + umk
	Если ПустоеЗначение(СписокПараметров) = 0 Тогда
		ТаблДвижений.Загрузить(СписокПараметров.Получить("ТаблДвижений"));
	КонецЕсли;
	// - umk
	
	СтарыйИДРегистра = ИДРегистра;
	
	Если Проведен() = 1 Тогда
		ЗаполнитьТаблицу();
	КонецЕсли;
КонецПроцедуры


Процедура ВводНового()
	ИДРегистра = СписокРегистров.ПолучитьЗначение(1);
КонецПроцедуры


ЗаполнитьСписокРегистров();

КартинкаПриход = 1;
КартинкаРасход = 2;
КартинкаОборот = 3;