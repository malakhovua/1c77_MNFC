Перем тбПоставщик,тбПерезачет;
Перем ФлагОтгрузкиПоставщиков, ФлагОтгрузкиПокупателей;

// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Поставщик,"Поставщик");
	глВыбранЛи(Покупатель,"Покупатель");
    глВыбранЛи(СчетПоставщика,"Счет поставщика");
    глВыбранЛи(СчетПокупателя,"Счет покупателя");
	глВыбранЛи(Валюта,"Валюта");
    Если (Итог("СуммаВалПоставщик") <> Итог("СуммаВалПокупатель")) или 
		(Итог("СуммаГрнПоставщик") <> Итог("СуммаГрнПокупатель")) Тогда
        глКомментарий("Не совпадают суммы долга поставщика и покупателя. Перезачет не возможен.");
		глВсеВыбрано = 0;
	КонецЕсли;
	
    Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
	глВыбранЛи(ВидКонтрагента,"Вид контрагента",НомерСтроки);
    
	Если глВсеВыбрано = 1 Тогда
	    Если ВидКонтрагента = Перечисление.ВидыКлиентов.Поставщик Тогда
			глВыбранЛи(СуммаВалПоставщик,"Сумма поставщика в валюте",НомерСтроки);
			глВыбранЛи(СуммаГрнПоставщик,"Сумма поставщика в гривнях",НомерСтроки);
		ИначеЕсли ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель Тогда
			глВыбранЛи(СуммаВалПокупатель,"Сумма покупателя в валюте",НомерСтроки);
			глВыбранЛи(СуммаГрнПокупатель,"Сумма покупателя в гривнях",НомерСтроки);
	    КонецЕсли;
	КонецЕсли;
	
	Если Счет.Выбран() = 1 Тогда
		Если (Найти("Счет,СчетВходящий,ПриходнаяНакладнаяЗапасы,ПриходнаяНакладнаяПрочие,ПриходнаяНакладнаяГТД,РасходнаяНакладная,ОказаниеУслуг,УслугиСтороннихОрганизаций,УслугиСтороннихОрганизацийПроизвХарактера,ЛиквидацияНеоборАктивов",Счет.Вид()) = 0) Тогда
			глКомментарий("Неверный вид документа взаиморасчетов в строке "+ НомерСтроки + ". Можно выбирать документ по которому проходят взаиморасчеты!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	
    Возврат глВсеВыбрано;
КонецФункции
               
// Заполняет строки таблиц тбПерезачет и тбПоставщик
// ===============================
Процедура ДобавитьСтрокуДляПроводки(текЗаказ, текСуммаВал, текСуммаГрн)	
	//разделим заказы покупателя и поставщика
	Если ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель Тогда
	    тбПерезачет.НоваяСтрока();
	    тбПерезачет.ЗаказПокупателя = текЗаказ;
		
		тбПерезачет.СуммаВал = текСуммаВал;
		тбПерезачет.СуммаГрн = текСуммаГрн;
	Иначе
		тбПоставщик.НоваяСтрока();
	    тбПоставщик.Заказ = текЗаказ;
		тбПоставщик.СуммаВал = текСуммаВал;
		тбПоставщик.СуммаГрн = текСуммаГрн;
	КонецЕсли;
КонецПроцедуры

// ===============================
Функция ДвиженияВзаиморасчетыТолькоПок()
	// если счет покупателя = счету поставика, то
	// документом долга в этом случе будет выступать сам перезачет
	// при этом проводим по одному контрагенту с плюсом, по другому с минусом	
	// долг уменьшаяется у убоих контрагентов, но у Покупателя с минусом, а у поставщика - с плюсом.
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Регистр.ВзаиморасчетыПокупателей.ПривязыватьСтроку(НомерСтроки);
		Регистр.ВзаиморасчетыПокупателей.Фирма = Фирма;
		Регистр.ВзаиморасчетыПокупателей.КредДокумент = ТекущийДокумент();
		Регистр.ВзаиморасчетыПокупателей.Валюта = Гривня;

		Если ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель Тогда
			Регистр.ВзаиморасчетыПокупателей.Контрагент = Покупатель;
			Регистр.ВзаиморасчетыПокупателей.Договор = ДоговорПокупателя;
			Регистр.ВзаиморасчетыПокупателей.СтавкаНДС = ВидНДСПок;
			Регистр.ВзаиморасчетыПокупателей.КодОперации = ВводОстатковОплата;
			Регистр.ВзаиморасчетыПокупателей.Долг = -СуммаВалПокупатель;
			Регистр.ВзаиморасчетыПокупателей.ДолгОсн = -СуммаГрнПокупатель;
			ДобавитьСтрокуДляПроводки(ПолучитьПустоеЗначение("Документ.Договор"), СуммаВалПокупатель, СуммаГрнПокупатель);
		Иначе
			Регистр.ВзаиморасчетыПокупателей.Контрагент = Поставщик;
			Регистр.ВзаиморасчетыПокупателей.Договор = ДоговорПоставщика;
			Регистр.ВзаиморасчетыПокупателей.СтавкаНДС = ВидНДСПост;
			Регистр.ВзаиморасчетыПокупателей.КодОперации = ВводОстатковОтгрузка;
			Регистр.ВзаиморасчетыПокупателей.Долг = СуммаВалПоставщик;
			Регистр.ВзаиморасчетыПокупателей.ДолгОсн = СуммаГрнПоставщик;
			ДобавитьСтрокуДляПроводки(ПолучитьПустоеЗначение("Документ.Договор"), СуммаВалПоставщик, СуммаГрнПоставщик);
		КонецЕсли;
		Регистр.ВзаиморасчетыПокупателей.ДвижениеРасходВыполнить();
		
	КонецЦикла;
	
	Возврат 1;
КонецФункции

// Перераспределяет заказы поставщика и покупателя между собой
// ===============================
Процедура РаспределитьЗаказы(тбПоставщик,тбПерезачет)	                      
	НомСтрПоставщик = 1;
	НомСтрПерезачет = 1;
	
	//теперь "разбросаем" заказы поставщика по заказам покупателя
	Пока НомСтрПоставщик <= тбПоставщик.КоличествоСтрок() Цикл
		тбПоставщик.ПолучитьСтрокуПоНомеру(НомСтрПоставщик);
		тбПерезачет.ПолучитьСтрокуПоНомеру(НомСтрПерезачет);
		
		СуммаЗачета = Мин(тбПерезачет.СуммаВал,тбПоставщик.СуммаВал);
		СуммаЗачетаГрн = тбПерезачет.СуммаГрн * СуммаЗачета/тбПерезачет.СуммаВал;
		// делаем зачет
		Если СуммаЗачета < тбПерезачет.СуммаВал Тогда
			
			ЗаказПокупателя = тбПерезачет.ЗаказПокупателя;
		    СуммаВал = тбПерезачет.СуммаВал - СуммаЗачета;
			СуммаГрн = тбПерезачет.СуммаГрн - СуммаЗачетаГрн;
			
			тбПерезачет.ЗаказПоставщика = тбПоставщик.Заказ;
			тбПерезачет.СуммаВал = СуммаЗачета;
			тбПерезачет.СуммаГрн = СуммаЗачетаГрн;
			
			тбПерезачет.НоваяСтрока();
			тбПерезачет.ЗаказПокупателя = ЗаказПокупателя;
			тбПерезачет.СуммаВал = СуммаВал;
			тбПерезачет.СуммаГрн = СуммаГрн;
			
		Иначе
			тбПерезачет.ЗаказПоставщика = тбПоставщик.Заказ;
			тбПоставщик.СуммаВал = тбПоставщик.СуммаВал - СуммаЗачета;
			тбПоставщик.СуммаГрн = тбПоставщик.СуммаГрн - СуммаЗачетаГрн;
		КонецЕсли;
		
		Если ПустоеЗначение(тбПерезачет.ЗаказПоставщика)=0 Тогда
		    НомСтрПерезачет = НомСтрПерезачет + 1;
			Если НомСтрПерезачет > тбПерезачет.КоличествоСтрок() Тогда
			    Прервать;
			КонецЕсли;
		КонецЕсли;
		
		Если тбПоставщик.СуммаВал = 0 Тогда
		    НомСтрПоставщик = НомСтрПоставщик + 1;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// ===============================
Функция ДвиженияВзаиморасчеты()
	Перем ФлагОтгрузки;	            
	
	тбДолгиПоставщиков = 0;
	тбДолгиПокупателей = 0;
	
	// Заполняем списки
	спКонтрагенты = СоздатьОбъект("СписокЗначений");
	спКонтрагенты.ДобавитьЗначение(Поставщик);
	спКонтрагенты.ДобавитьЗначение(Покупатель);
	
	спСчета = СоздатьОбъект("СписокЗначений");
	
	ВыгрузитьТабличнуюЧасть(спСчета,"Счет");
	
	ВремРегистрыПоставщика=СоздатьОбъект("Регистры");	
	Если ((СчетПоставщика.ПринадлежитГруппе(СчетПоКоду("63"))=1)
	ИЛИ (СчетПоставщика = СчетПоКоду("3772")) ИЛИ (СчетПоставщика = СчетПоКоду("3774"))) Тогда
		РегПоставщики=ВремРегистрыПоставщика.ВзаиморасчетыПоставщиков;
	Иначе
		РегПоставщики=ВремРегистрыПоставщика.ВзаиморасчетыПокупателей;
	КонецЕсли;	
	РегПоставщики.УстановитьЗначениеФильтра("Фирма",		Фирма,	 		1);
	РегПоставщики.УстановитьЗначениеФильтра("Контрагент",	Поставщик,		1);
	Если ДоговорПоставщика.Выбран() = 1 Тогда
		РегПоставщики.УстановитьЗначениеФильтра("Договор",	ДоговорПоставщика,		1);
	КонецЕсли;
	РегПоставщики.УстановитьЗначениеФильтра("Счет",			СпСчета,		2);
	РегПоставщики.УстановитьЗначениеФильтра("Валюта",		Валюта,			1);
	                           
	ВремРегистрыПокупателя=СоздатьОбъект("Регистры");	
	Если ((СчетПокупателя.ПринадлежитГруппе(СчетПоКоду("36"))=1)
	ИЛИ (СчетПокупателя = СчетПоКоду("6852")) ИЛИ (СчетПокупателя = СчетПоКоду("6854"))) Тогда
		РегПокупатели=ВремРегистрыПокупателя.ВзаиморасчетыПокупателей;
	Иначе     
		РегПокупатели=ВремРегистрыПокупателя.ВзаиморасчетыПоставщиков;
	КонецЕсли;	
	РегПокупатели.УстановитьЗначениеФильтра("Фирма",		Фирма,			1);	
	РегПокупатели.УстановитьЗначениеФильтра("Контрагент",	Покупатель,		1);
	Если ДоговорПокупателя.Выбран() = 1 Тогда
		РегПокупатели.УстановитьЗначениеФильтра("Договор",	ДоговорПокупателя,		1);
	КонецЕсли;	
	РегПокупатели.УстановитьЗначениеФильтра("Счет",			СпСчета,		2);
	РегПокупатели.УстановитьЗначениеФильтра("Валюта",		Валюта,			1);
	
	Если ИтогиАктуальны()=0 Тогда
		РегПоставщики.ВременныйРасчет();
		РегПокупатели.ВременныйРасчет();
		ВремРегистрыПоставщика.РассчитатьРегистрыНа(ТекущийДокумент());
		ВремРегистрыПокупателя.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;
	
	РегПоставщики.УстановитьЗначениеФильтра("Фирма",		Фирма,			1);
	РегПоставщики.УстановитьЗначениеФильтра("Контрагент",	Поставщик,		1);
	РегПоставщики.УстановитьЗначениеФильтра("Счет",			СпСчета,		2);
	РегПоставщики.УстановитьЗначениеФильтра("Валюта",		Валюта,			1);
	РегПоставщики.ВыгрузитьИтоги(тбДолгиПоставщиков,1,1);
	
	РегПокупатели.УстановитьЗначениеФильтра("Фирма",		Фирма,			1);
	РегПокупатели.УстановитьЗначениеФильтра("Контрагент",	Покупатель,		1);
	РегПокупатели.УстановитьЗначениеФильтра("Счет",			СпСчета,		2);
	РегПокупатели.УстановитьЗначениеФильтра("Валюта",		Валюта,			1);
	РегПокупатели.ВыгрузитьИтоги(тбДолгиПокупателей,1,1);
				
	ФлагОтгрузкиПокупателей = 0;
	ФлагОтгрузкиПоставщиков = 0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		
		Если ВидКонтрагента   = Перечисление.ВидыКлиентов.Покупатель Тогда
			текКонтрагент 	  = Покупатель;
			тбДолги			  = тбДолгиПокупателей;
			СуммаПогашения	  = СуммаВалПокупатель;
			СуммаПогашенияОсн = СуммаГрнПокупатель;
			Если ((СчетПокупателя.ПринадлежитГруппе(СчетПоКоду("36"))=1)
			ИЛИ (СчетПокупателя = СчетПоКоду("6852")) ИЛИ (СчетПокупателя = СчетПоКоду("6854"))) Тогда
				ЗнакОплаты = -1;
			Иначе
				ЗнакОплаты = +1;
			КонецЕсли;
		ИначеЕсли ВидКонтрагента = Перечисление.ВидыКлиентов.Поставщик Тогда
			текКонтрагент	  = Поставщик;
			тбДолги			  = тбДолгиПоставщиков;
			СуммаПогашения	  = СуммаВалПоставщик;
			СуммаПогашенияОсн = СуммаГрнПоставщик;
			Если ((СчетПоставщика.ПринадлежитГруппе(СчетПоКоду("63"))=1)
			ИЛИ (СчетПоставщика = СчетПоКоду("3772")) ИЛИ (СчетПоставщика = СчетПоКоду("3774"))) Тогда
				ЗнакОплаты = +1;
			Иначе
				ЗнакОплаты = -1;
		КонецЕсли;	
		КонецЕсли;

		ФлагВозврата = 0;
		
		тбДолги.Сортировать("Контрагент*,КредДокумент",1);
		тбДолги.ВыбратьСтроки();
		Пока тбДолги.ПолучитьСтроку()=1 Цикл
			Если глПроверитьДолг(тбДолги,,,,Счет)=0 Тогда
				Продолжить;
			КонецЕсли;
			
			СальдоПоОтгрузке = 0;
			СальдоПоОплате	 = 0;
			СуммаСНДС		 = 0;
			СуммаСНДСОсн 	 = 0;
			СуммаНДС	 	 = 0;
			Если (((ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель) И (ЗнакОплаты = -1))
			ИЛИ   ((ВидКонтрагента = Перечисление.ВидыКлиентов.Поставщик ) И (ЗнакОплаты =  1)))Тогда
				СальдоПоОтгрузке = ?(ЗнакОплаты<0, Макс(0, тбДолги.Долг), -Мин(0, тбДолги.Долг));
				СальдоПоОплате	 = ?(ЗнакОплаты>0, Макс(0, тбДолги.Долг), -Мин(0, тбДолги.Долг));
			Иначе
				СальдоПоОплате	 = ?(ЗнакОплаты>0, Макс(0, тбДолги.Долг), -Мин(0, тбДолги.Долг));
			КонецЕсли;	

			Если СальдоПоОтгрузке <> 0 Тогда                   	     
		
				ФлагОтгрузки = 0;                                             
				КодОперации = ПостОплата;					
				Если ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель Тогда
					ФлагОтгрузкиПокупателей = Макс(ФлагОтгрузкиПокупателей,0);
				ИначеЕсли ВидКонтрагента = Перечисление.ВидыКлиентов.Поставщик Тогда
					ФлагОтгрузкиПоставщиков = Макс(ФлагОтгрузкиПоставщиков,0);
				КонецЕсли;		
				СуммаСНДС = Мин(СуммаПогашения, СальдоПоОтгрузке);

				СуммаСНДСОсн = Окр(СуммаПогашенияОсн * СуммаСНДС / СуммаПогашения,2);
				ПроцНДС 	 = глПроцентНДС(тбДолги.СтавкаНДС,ДатаДок);
				СуммаНДС	 = СуммаСНДС * ПроцНДС / (100 + ПроцНДС);
				
				тбДолги.Долг 	= тбДолги.Долг + ЗнакОплаты * СуммаСНДС;
				тбДолги.ДолгОсн = тбДолги.ДолгОсн + ЗнакОплаты * СуммаСНДСОсн;					
			ИначеЕсли СальдоПоОплате <> 0 Тогда
				
				ФлагОтгрузки = 1;                                             
				КодОперации = ПостОтгрузка;
				Если ВидКонтрагента = Перечисление.ВидыКлиентов.Покупатель Тогда
					ФлагОтгрузкиПокупателей = 1;
				ИначеЕсли ВидКонтрагента = Перечисление.ВидыКлиентов.Поставщик Тогда
					ФлагОтгрузкиПоставщиков = 1;
				КонецЕсли;				
				СуммаСНДС = Мин(СуммаПогашения, СальдоПоОплате);

				СуммаСНДСОсн = Окр(СуммаПогашенияОсн * СуммаСНДС / СуммаПогашения,2);
				ПроцНДС 	 = глПроцентНДС(тбДолги.СтавкаНДС,ДатаДок);
				СуммаНДС	 = СуммаСНДС * ПроцНДС / (100 + ПроцНДС);
				
				тбДолги.Долг	= тбДолги.Долг    - ЗнакОплаты * СуммаСНДС;
				тбДолги.ДолгОсн = тбДолги.ДолгОсн - ЗнакОплаты * СуммаСНДСОсн;					
			КонецЕсли;
				
			СуммаПогашения 	  = СуммаПогашения - СуммаСНДС;
			СуммаПогашенияОсн = СуммаПогашенияОсн - СуммаСНДСОсн;
			глПогаситьДокументВзаиморасчетов(Контекст,ЗнакОплаты, ФлагОтгрузки, ФлагВозврата, 
				тбДолги.Фирма, тбДолги.Контрагент, тбДолги.Договор, тбДолги.СтавкаНДС, тбДолги.Счет, 
				тбДолги.КредДокумент, Валюта, СуммаСНДС, СуммаСНДСОсн, СуммаНДС, КодОперации, 0);
				
			// заполним таблицу для формирования проводок	
			ДобавитьСтрокуДляПроводки(тбДолги.Договор, СуммаСНДС, СуммаСНДСОсн);
			
			Если СуммаПогашения = 0 Тогда
				Прервать;
			КонецЕсли;					
			глПереоценкаДолга(Контекст, ЗнакОплаты, тбДолги,0);			
		КонецЦикла;
		
		Если СуммаПогашения > 0 Тогда
		    
			глНеПроводить(Контекст,"Не распределился долг по взаиморасчетам."+РазделительСтрок+
						Шаблон("Остаток долга [СуммаПогашения] [Валюта.Кратко]. Строка [НомерСтроки]"));
			Возврат 0;
		КонецЕсли;
	КонецЦикла;      
	Возврат 1;
КонецФункции

// ===============================
Процедура РассчитатьШапку()
	глТаблицаСчетов.УдалитьСтроки();
	//нужно распределить заказы между собой
	тбПерезачет = СоздатьОбъект("ТаблицаЗначений");
	тбПерезачет.НоваяКолонка("ЗаказПоставщика");
	тбПерезачет.НоваяКолонка("ЗаказПокупателя");
	тбПерезачет.НоваяКолонка("СуммаВал");
	тбПерезачет.НоваяКолонка("СуммаГрн");

	тбПоставщик = СоздатьОбъект("ТаблицаЗначений");
	тбПоставщик.НоваяКолонка("Заказ");
	тбПоставщик.НоваяКолонка("СуммаВал");
	тбПоставщик.НоваяКолонка("СуммаГрн");
КонецПроцедуры

// ===============================
Процедура РассчитатьСтроку()      
	Если Валюта <> Гривня Тогда
		// переоценим заказ поставщика
		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = СчетПоставщика;
		глТаблицаСчетов.Субконто1 = Поставщик;
		глТаблицаСчетов.Субконто2 = тбПерезачет.ЗаказПоставщика;
		глТаблицаСчетов.Субконто3 = 0;
		глТаблицаСчетов.Валюта = Валюта;
		глТаблицаСчетов.ОперационнаяКР = 0;
		глТаблицаСчетов.ВидДеятельности = ПолучитьПустоеЗначение("Справочник.ВидыДеятельности");
		
		// переоценим заказ покупателя
		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = СчетПокупателя;
		глТаблицаСчетов.Субконто1 = Покупатель;
		глТаблицаСчетов.Субконто2 = тбПерезачет.ЗаказПокупателя;
		глТаблицаСчетов.Субконто3 = 0;
		глТаблицаСчетов.Валюта = Валюта;
		глТаблицаСчетов.ОперационнаяКР = 0;
		глТаблицаСчетов.ВидДеятельности = ПолучитьПустоеЗначение("Справочник.ВидыДеятельности");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПроводкиСтрока()
	// определим счет учета
	СчетВзаиморасчПоставщика = СчетПоставщика;
	СчетВзаиморасчПокупателя = СчетПокупателя;
	Если Валюта = Гривня Тогда
		Если ФлагОтгрузкиПокупателей = 1 Тогда
			// по покупателю погашаем аванс
			Если глВыделятьЛиАвансыПоСчету(СчетПокупателя) = 1 Тогда
				Если ((СчетПокупателя.ПринадлежитГруппе(СчетПоКоду("36"))=1)
				ИЛИ (СчетПокупателя = СчетПоКоду("6852"))) Тогда
					СчетВзаиморасчПокупателя = "6811";
				Иначе     
					СчетВзаиморасчПокупателя = "3711";
				КонецЕсли;	
			Иначе
				СчетВзаиморасчПокупателя = СчетПокупателя;
			КонецЕсли;			
		КонецЕсли;	
		Если ФлагОтгрузкиПоставщиков = 1 Тогда
			// по поставщику погашаем аванс
			Если глВыделятьЛиАвансыПоСчету(СчетПоставщика) = 1 Тогда
				Если ((СчетПоставщика.ПринадлежитГруппе(СчетПоКоду("63"))=1)
				ИЛИ (СчетПоставщика = СчетПоКоду("3772"))) Тогда
					СчетВзаиморасчПоставщика = "3711";
				Иначе
					СчетВзаиморасчПоставщика = "6811";
				КонецЕсли;	
			Иначе
				СчетВзаиморасчПоставщика = СчетПоставщика;
			КонецЕсли;			                         			
		КонецЕсли;
		
		//---УМК Сандомирский В.Ю. (22.08.14) корректирую для проводок с договорами потому что на 361 субконто договора
	    //глПроводка(Контекст,СчетВзаиморасчПоставщика,СчетВзаиморасчПокупателя,тбПерезачет.СуммаГрн,"Перезачет средств между заказами",,
		//	Покупатель,?(ПустоеЗначение(тбПерезачет.ЗаказПокупателя)=1,ПолучитьПустоеЗначение("ВидыСубконто.Заказы"),тбПерезачет.ЗаказПокупателя),,
		//	Поставщик,?(ПустоеЗначение(тбПерезачет.ЗаказПоставщика)=1,ПолучитьПустоеЗначение("ВидыСубконто.Заказы"),тбПерезачет.ЗаказПоставщика),, ,,"БК");
		//	
		глПроводка(Контекст,СчетВзаиморасчПоставщика,СчетВзаиморасчПокупателя,тбПерезачет.СуммаГрн,"Перезачет средств между заказами",,
			Покупатель,?(ПустоеЗначение(ДоговорПокупателя)=1,ПолучитьПустоеЗначение("ВидыСубконто.Договора"),ДоговорПокупателя),,
			Поставщик,?(ПустоеЗначение(ДоговорПоставщика)=1,ПолучитьПустоеЗначение("ВидыСубконто.Договра"),ДоговорПоставщика),, ,,"БК");
			
		//...УМК Сандомирский В.Ю. (22.08.14)	
			
	Иначе
		Если ФлагОтгрузкиПокупателей = 1 Тогда
			// по покупателю погашаем аванс
			Если глВыделятьЛиАвансыПоСчету(СчетПокупателя) = 1 Тогда
				Если ((СчетПокупателя.ПринадлежитГруппе(СчетПоКоду("36"))=1)
				ИЛИ (СчетПокупателя = СчетПоКоду("6854"))) Тогда
					СчетВзаиморасчПокупателя = "6812";
				Иначе     
					СчетВзаиморасчПокупателя = "3712";
				КонецЕсли;	
			Иначе
				СчетВзаиморасчПокупателя = СчетПокупателя;
			КонецЕсли;			
		КонецЕсли;	
		Если ФлагОтгрузкиПоставщиков = 1 Тогда
			// по поставщику погашаем аванс
			Если глВыделятьЛиАвансыПоСчету(СчетПоставщика) = 1 Тогда
				Если ((СчетПоставщика.ПринадлежитГруппе(СчетПоКоду("63"))=1)
				ИЛИ (СчетПоставщика = СчетПоКоду("3774"))) Тогда
					СчетВзаиморасчПоставщика = "3712";
				Иначе
					СчетВзаиморасчПоставщика = "6812";
				КонецЕсли;	
			Иначе
				СчетВзаиморасчПоставщика = СчетПоставщика;
			КонецЕсли;			                         			
		КонецЕсли;
		
		//---УМК Сандомирский В.Ю. (22.08.14)
	    //глПроводка(Контекст,СчетВзаиморасчПоставщика,СчетВзаиморасчПокупателя,тбПерезачет.СуммаГрн,"Перезачет средств между заказами",,
		//	Поставщик,?(ПустоеЗначение(тбПерезачет.ЗаказПоставщика)=1,ПолучитьПустоеЗначение("ВидыСубконто.Заказы"),тбПерезачет.ЗаказПоставщика),,
		//	Покупатель,?(ПустоеЗначение(тбПерезачет.ЗаказПокупателя)=1,ПолучитьПустоеЗначение("ВидыСубконто.Заказы"),тбПерезачет.ЗаказПокупателя),,Валюта,тбПерезачет.СуммаВал,"БК");
			
		глПроводка(Контекст,СчетВзаиморасчПоставщика,СчетВзаиморасчПокупателя,тбПерезачет.СуммаГрн,"Перезачет средств между заказами",,
			Покупатель,?(ПустоеЗначение(ДоговорПокупателя)=1,ПолучитьПустоеЗначение("ВидыСубконто.Договора"),ДоговорПокупателя),,
			Поставщик,?(ПустоеЗначение(ДоговорПоставщика)=1,ПолучитьПустоеЗначение("ВидыСубконто.Договра"),ДоговорПоставщика),,Валюта,тбПерезачет.СуммаВал,"БК");
			
		//...УМК Сандомирский В.Ю. (22.08.14)		
			
	КонецЕсли;
КонецПроцедуры
                                  
// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	Если ПроверкаШапки()=0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки()=0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	КонецЦикла;
	
	РассчитатьШапку();
	// Проведение по регистрам
	Если (СчетПокупателя = СчетПоставщика) и (СчетПокупателя = СчетПоКоду("361")) Тогда
		Если ДвиженияВзаиморасчетыТолькоПок() = 0 Тогда
		    Возврат;
		КонецЕсли;		
	Иначе
		Если ДвиженияВзаиморасчеты() = 0 Тогда
		    Возврат;
		КонецЕсли;		
	КонецЕсли;

	РаспределитьЗаказы(тбПоставщик,тбПерезачет);		
	тбПерезачет.ВыбратьСтроки();
	Пока тбПерезачет.ПолучитьСтроку()=1 Цикл
		РассчитатьСтроку();
		ПроводкиСтрока();
	КонецЦикла;
	
	Если глТаблицаСчетов.КоличествоСтрок() > 0 Тогда
	    глПереоценкаСчетов(Контекст, глТаблицаСчетов, "БК");
	КонецЕсли;
	
	Операция.СуммаОперации = Итог("СуммаВалПоставщик");
	Операция.Содержание = Примечание;
	Операция.Записать();
	
	
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры