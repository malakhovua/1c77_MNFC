Перем НачальнаяДатаДокумента;
Перем СтараяДата;
Перем СуммаКТУ_;
Процедура Рассчитать_sql(Печать = 0, ПоДатам = 0, ТолькоДаты = 0) Далее

//======================================================================
Процедура ИзмСотрудник(ПересчитыватьЗП = 1, СчитатьКТУ = 1) Далее	//--- УМК Сандомирский В.Ю, данные из табелей (03.07.14)	
//======================================================================

Процедура РассчитатьЗП()
	Сум = БазаДляЗП;
	ИтКТУ = 0;
	ПоследСтрВР = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Вручную = Да Тогда
		    Сум = Сум - СуммаС;
		Иначе
			ИтКТУ = ИтКТУ + КТУ;
			ПоследСтрВР = НомерСтроки;
		КонецЕсли;
	КонецЦикла;
	
	Если КТУПоДням = 1 Тогда
		ТЗПоДням = СоздатьОбъект("ТаблицаЗначений");
		ТЗПоДням.НоваяКолонка("Д", "Число", 12, 2);

		КД = (ДатаК - ДатаН) + 1;
		КвоДней = 0;
		Для Инд = 1 По КД Цикл			
			Если Итог("Ч"+Инд) <> 0 Тогда
				КвоДней = КвоДней + 1;
			КонецЕсли;			
		КонецЦикла;
		
		Для Инд = 1 По КД Цикл
			ТЗПоДням.НоваяСтрока();
			Если Итог("Ч"+Инд) <> 0 Тогда
				ТЗПоДням.Д = Сум / КвоДней;
			КонецЕсли;			
		КонецЦикла;

		Разница = Сум - ТЗПоДням.Итог("Д");
		Инд = ТЗПоДням.КоличествоСтрок();
		Пока Инд > 0 Цикл
			Инд = Инд - 1;
			Если Итог("Ч"+Инд) <> 0 Тогда
				ТЗПоДням.ПолучитьСтрокуПоНомеру(Инд);
				ТЗПоДням.Д = ТЗПоДням.Д + Разница;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Вручную <> Да Тогда
			    СуммаС = 0;
			КонецЕсли;			
		КонецЦикла;
		
		// теперь поехали по дням
		Для Инд = 1 По КД Цикл
			ИтКТУ = 0;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Если Вручную <> Да Тогда
				    ИтКТУ = ИтКТУ + ПолучитьАтрибут("Ч"+Инд);
				КонецЕсли;
				УстановитьАтрибут("ЗД"+Инд, 0);
			КонецЦикла;
			
			ИтСуммаЗП = ТЗПоДням.ПолучитьЗначение(Инд, "Д");
			ТекСумма = 0;
			
			Если ИтКТУ <> 0 Тогда
				ВыбратьСтроки();
				Пока ПолучитьСтроку() = 1 Цикл
					Если Вручную <> Да Тогда
						УстановитьАтрибут("ЗД"+Инд, (ИтСуммаЗП / ИтКТУ) * ПолучитьАтрибут("Ч" + Инд));
					    СуммаС = СуммаС + ПолучитьАтрибут("ЗД"+Инд);
						ТекСумма = ТекСумма + ПолучитьАтрибут("ЗД"+Инд);
					КонецЕсли;
				КонецЦикла;			    
				ПолучитьСтрокуПоНомеру(ПоследСтрВР);
				СуммаС = СуммаС + (ИтСуммаЗП - ТекСумма);
				УстановитьАтрибут("ЗД"+Инд, ПолучитьАтрибут("ЗД"+Инд) + (ИтСуммаЗП - ТекСумма));
			КонецЕсли;			
		КонецЦикла;
	Иначе
		ПоследСтрВр = 0;
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Вручную <> Да Тогда
			    СуммаС = Сум * КТУ/?(ИтКТУ = 0, 1, ИтКТУ);
				ПоследСтрВр = НомерСтроки;
			КонецЕсли;		
		КонецЦикла;
		
		Если КоличествоСтрок() > 0 Тогда
			Разница = Итог("СуммаС") - БазаДляЗП;
			Если Разница <> 0 Тогда
				Если ПоследСтрВр <> 0 Тогда
					ПолучитьСтрокуПоНомеру(ПоследСтрВр);
				Иначе
					Предупреждение("В документе все строки установлены вручную. После расчёта разница между базой для з/п и суммой з/п: " + Строка(Разница) +
					РазделительСтрок + "Требуется ручная корректировка");
					Возврат;
				КонецЕсли;		    
			КонецЕсли;
			СуммаС = СуммаС - Разница;
		КонецЕсли;		
	КонецЕсли;
	Форма.Обновить();
КонецПроцедуры

Процедура ИзмКоэф()
	БазаДляЗП = Сумма * ПроцОбъема;
	РассчитатьЗП();
КонецПроцедуры

Процедура ДобавитьСтрокуТЗПРод(Продукция, ТЗПрод, ДляРасчета, Знач Док, ПоДатам = 0)
	Стр = 0;
	Если ПоДатам = 1 Тогда
		КлючПоиска = ЗначениеВСтрокуВнутр(Продукция) + "/" + Строка(Док.ДатаДок);
		ИмяРекв = "Ключ";
	Иначе
		КлючПоиска = Продукция;
		ИмяРекв = "Продукция";		
	КонецЕсли;
	Если ТЗПрод.НайтиЗначение(КлючПоиска, Стр, ИмяРекв) = 1 Тогда
		ТЗПрод.ПолучитьСтрокуПоНомеру(Стр);
		
		Тариф = ВидРабот.Тариф.Получить(Док.ДатаДок);
			
		ТЗПрод.Сумма = ТЗПрод.Сумма + Тариф * ДляРасчета;
		ТЗПрод.Объем = ТЗПрод.Объем + ДляРасчета;
		ТЗПрод.ТЗП.НоваяСтрока();
		ТЗПрод.ТЗП.Документ = Док;
		ТЗПрод.ТЗП.Объем = ДляРасчета;
		ТЗПрод.ТЗП.Сумма = Тариф * ДляРасчета;
	КонецЕсли;
	
	
КонецПроцедуры

	
// ===============================
Процедура ИзмДатаДок()
    глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	Если ДатаН = ДатаК Тогда
	    ДатаН = ДатаДок;
		ДатаК = ДатаДок;
	КонецЕсли;
КонецПроцедуры

// ===============================
// Предопределенные процедуры

//======================================================================
Процедура ЗаполнитьПоТабелю() //--- УМК Сандомирский В.Ю, данные из табелей (03.07.14) 
	
	Если ПустоеЗначение(Табель) = 1 Тогда
	
		Сообщить("Выберите табель в шапке документа !");
		
		Возврат;
		
	КонецЕсли;
	
	Если КоличествоСтрок()>0 Тогда
		Рез = Вопрос("Удалить строки?","Да+Нет+Отмена");
		Если Рез ="Да" Тогда
			УдалитьСтроки();
		ИначеЕсли Рез = "Отмена" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	Табель.ВыбратьСтроки();
	Пока Табель.ПолучитьСтроку() = 1 Цикл
		НоваяСтрока();
		Сотрудник = Табель.Сотрудник;
		Если КТУПоДням = 1 Тогда
			Для Инд = 1 По 31 Цикл						
				ЧасовТабельДневные = Число(Табель.ПолучитьАтрибут("ЧД"+Инд));
				ЧасовТабельНочные  = Число(Табель.ПолучитьАтрибут("ЧН"+Инд));
				УстановитьАтрибут("Ч"+Инд,ЧасовТабельДневные + ЧасовТабельНочные);				
			КонецЦикла;
			КТУ = 0; //--- обнуляем КТУ
		Иначе
			//--- УМК Сандомирский В.Ю, (22.12.14) 		
			ТекКТУ = 0;
			
			Для Инд = 1 По ДатаЧисло(ДатаК) Цикл						
				ЧасовТабельДневные = Число(Табель.ПолучитьАтрибут("ЧД"+Инд));
				ЧасовТабельНочные  = Число(Табель.ПолучитьАтрибут("ЧН"+Инд));
				ТекКТУ =  ТекКТУ + ЧасовТабельДневные + ЧасовТабельНочные;	
			КонецЦикла;
			
			КТУ = ТекКТУ;
			
			Для Инд = 1 По 31 Цикл	//--- обнуляем дни			
				УстановитьАтрибут("Ч"+Инд,0);	
			КонецЦикла;	
			
			ИзмСотрудник(1, 0);
		КонецЕсли;	
		
	КонецЦикла;

	
КонецПроцедуры // ЗаполнитьПоТабелю()

//======================================================================
Процедура ЗаполнитьДаннымиТабеля();	//--- УМК Сандомирский В.Ю, данные из табелей (10.06.14) 	
	
	ДокТабель = СоздатьОбъект("Документ.УМК_Табель");	
	
	 // Альтернативный вариант обхода строк
    КвоСтр = КоличествоСтрок();
    Для НомСтр=1 По КвоСтр Цикл
        ПолучитьСтрокуПоНомеру(НомСтр);
    
		ЕстьТабель = 0;
		ТекСотрудник = Сотрудник;
		ДокТабель.ВыбратьДокументы(НачМесяца(ДатаДок),КонМесяца(ДатаДок));
		Пока ДокТабель.ПолучитьДокумент() = 1 Цикл
			
			Если ДокТабель.ПометкаУдаления() = 1 Тогда 			
				Продолжить;
			КонецЕсли;
			
			ДокТабель.ВыбратьСтроки();
			Пока ДокТабель.ПолучитьСтроку() = 1 Цикл
				Если ДокТабель.Сотрудник = Сотрудник Тогда
					ЕстьТабель = 1;		
					
					Если ДокТабель.перГрафикТабель <> 3 Тогда 
						Сообщить("Сотрудник - " + Сотрудник + " табель не окончательный !","!");
					КонецЕсли;
					
					Если КТУПоДням = 1 Тогда
						Для Инд = ДатаЧисло(ДатаН) По ДатаЧисло(ДатаК) Цикл						// --- УМК Сандомирский В.Ю. (29.05.15)	было Инд = 1				
							ЧасовТабельДневные = Число(ДокТабель.ПолучитьАтрибут("ЧД"+Инд));
							ЧасовТабельНочные  = Число(ДокТабель.ПолучитьАтрибут("ЧН"+Инд));
							УстановитьАтрибут("Ч"+Инд,ЧасовТабельДневные + ЧасовТабельНочные);				
						КонецЦикла;
						КТУ = 0; //--- обнуляем КТУ
					Иначе
						//--- УМК Сандомирский В.Ю, (22.12.14) 		
						ТекКТУ = 0;
						
						Для Инд = ДатаЧисло(ДатаН) По ДатаЧисло(ДатаК) Цикл						// --- УМК Сандомирский В.Ю. (29.05.15)	было Инд = 1				
							ЧасовТабельДневные = Число(ДокТабель.ПолучитьАтрибут("ЧД"+Инд));
							ЧасовТабельНочные  = Число(ДокТабель.ПолучитьАтрибут("ЧН"+Инд));
							ТекКТУ =  ТекКТУ + ЧасовТабельДневные + ЧасовТабельНочные;	
						КонецЦикла;
						
						КТУ = ТекКТУ;
						
						Для Инд = ДатаЧисло(ДатаН) По ДатаЧисло(ДатаК) Цикл	//--- обнуляем дни	// --- УМК Сандомирский В.Ю. (29.05.15)	было Инд = 1		
							УстановитьАтрибут("Ч"+Инд,0);	
						КонецЦикла;	
							
					КонецЕсли;
					
					Прервать;
					
				КонецЕсли;	
				
			КонецЦикла;
			
			Если ЕстьТабель = 1 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
			
		Если ЕстьТабель = 0 Тогда
			Сообщить("Сотрудник: " + Строка(Сотрудник) + " не указан ни в одном табеле");
		Иначе
			ИзмСотрудник(1, 0);	
		КонецЕсли;		
			
	КонецЦикла;
	
	
КонецПроцедуры // ЗаполнитьДаннымиТабеля();	//... УМК Сандомирский В.Ю, данные из табелей (10.06.14) 	

// ===============================
Процедура ВводНового(Скопирован, ДокКопир) //Предопределенная процедура

	глЗаполнитьШапку(Контекст);
	Если (ДатаН = ДатаК) и (ДатаН = ДокКопир.ДатаДок) Тогда
	    ДатаН = ДатаДок;
		ДатаК = ДатаДок;
	КонецЕсли;
	Если Скопирован=1 Тогда	//копирование документа
		Табель = ""; 			// --- УМК Сандомирский В.Ю. (05.08.14)
		Возврат;
	КонецЕсли;
	ПроцОбъема = 1;
КонецПроцедуры

Процедура ИзмКТУПоДням()
	Для Инд = 1 По 31 Цикл
		Форма.ПолучитьАтрибут("Ч"+Инд).Видимость(КТУПоДням);
	КонецЦикла;
	Форма.тСотрудник.Видимость(КТУПоДням);
	Форма.СуммаКТУ.Видимость(КТУПоДням);
	Форма.СуммаКТУ2.Видимость(КТУПоДням);
КонецПроцедуры

Функция СуммаКТУ()
	СуммаКТУ_ = 0;
	Для Инд = 1 По 31 Цикл
		СуммаКТУ_ = СуммаКТУ_ + ПолучитьАтрибут("Ч"+Инд);
	КонецЦикла;
	
	Возврат СуммаКТУ_;
КонецФункции

// ===============================
Процедура ПриОткрытии() //Предопределенная процедура
	Если ПроцОбъема = 0 Тогда
		ПроцОбъема = 1;
	КонецЕсли;
	Если БазаДляЗП = 0 Тогда
	    БазаДляЗП = Сумма * ПроцОбъема;
	КонецЕсли;
	Если НазваниеНабораПрав() = "ПроизводствоПросмотр" Тогда
		Запретить = 0;
	    Если ПустоеЗначение(ВидРабот.Родитель) = 1 Тогда
			Запретить = 1;
		КонецЕсли;
		СпрВР = СоздатьОбъект("Справочник.ВидыРабот");	
		Если СпрВР.НайтиПоНаименованию("Группа обвалка") = 1 Тогда
		    Если ВидРабот.ПринадлежитГруппе(СпрВР.ТекущийЭлемент()) = 0 Тогда
		        Запретить = 1;
			КонецЕсли;
		Иначе
			Запретить = 1;
		КонецЕсли;
		
		Если Запретить = 1 Тогда
		    СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;

	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;                                                                                     
	Если ПустоеЗначение(ДатаН) = 1 Тогда
		ДатаН = ДатаДок;
	КонецЕсли;
	Если ПустоеЗначение(ДатаК) = 1 Тогда
		ДатаК = ДатаДок;
	КонецЕсли;
	СтараяДата = ДатаДок;	
	ПриЗаписиПерепроводить(1);
	ИзмКТУПоДням();
                                                    
	// Инициализируем список действий по кнопке "Действия"
	СписокДействий = глПолучитьСписокДействий("
		|ОткрытьВЖурнале,");
КонецПроцедуры //При открытии

Процедура ИзмСотрудник(ПересчитыватьЗП = 1, СчитатьКТУ = 1)
	Если (КТУ = 0) И (СчитатьКТУ = 1) Тогда
		СпрВРС = СоздатьОбъект("Справочник.ВидыРаботСотрудников");
		СпрВРС.ИспользоватьВладельца(Сотрудник);
		СпрВРС.ВыбратьЭлементыПоРеквизиту("ВидРабот", ВидРабот, 0, 0);
		Пока СпрВРС.ПолучитьЭлемент() = 1 Цикл
			Если СпрВРС.ПометкаУдаления() = 0 Тогда
				КТУ = СпрВРС.КТУ;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	Если ПересчитыватьЗП = 1 Тогда
	    РассчитатьЗП();
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриЗаписи() //Предопределенная процедура
	глПроверкаДатыДок(Контекст,"Запись");
	Автор = глПользователь;             
КонецПроцедуры

Процедура ЗаполнитьВидомРабот() 
	
	Если КоличествоСтрок()>0 Тогда
		Рез = Вопрос("Удалить строки?","Да+Нет+Отмена");
		Если Рез ="Да" Тогда
			УдалитьСтроки();
		ИначеЕсли Рез = "Отмена" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	НачДата = ДатаДок;
	КонДата = ДатаДок;
	
	СпрВРС = СоздатьОбъект("Справочник.ВидыРаботСотрудников");
	ТЗСотр = СоздатьОбъект("ТаблицаЗначений");
	СпрВРС.ВыбратьЭлементыПоРеквизиту("ВидРабот", ВидРабот, 0, 0);
	Пока СпрВРС.ПолучитьЭлемент() = 1 Цикл
		Если СпрВРС.ПометкаУдаления() = 0 Тогда
			Сотр = СпрВРС.Владелец;
			Если (Сотр.ЭтоГруппа() = 0) и (Сотр.Фирма = Фирма) Тогда
				Если Сотр.ДатаУвольнения <> Дата(0) Тогда
					Если Сотр.ДатаУвольнения <= НачДата Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				Если Сотр.ДатаПриема <> Дата(0) Тогда
					Если Сотр.ДатаПриема > КонДата Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				НоваяСтрока();
				Сотрудник = СпрВРС.Владелец;
				КТУ = СпрВРС.КТУ;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	СортироватьСтроки("Сотрудник");
КонецПроцедуры

Процедура Заполнить() 
	
	Перем ВыбЗначение;
	ВариантыСкидок = СоздатьОбъект("СписокЗначений");
	ВариантыСкидок.ДобавитьЗначение(1,"&По виду работ");
	ВариантыСкидок.ДобавитьЗначение(2,"Дополнить списком другого наряда");
	ВариантыСкидок.ДобавитьЗначение(3,"Дополнить данными табеля");
	ВариантыСкидок.ДобавитьЗначение(4,"Дополнить сотрудниками табеля");
	
	Если ВариантыСкидок.ВыбратьЗначение(ВыбЗначение,"",,,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;

	Если ВыбЗначение = 1 Тогда
		ЗаполнитьВидомРабот(); 
	ИначеЕсли ВыбЗначение = 2 Тогда
		
		ВыбЗначение = СоздатьОбъект("Документ.Наряд");
		фВыбрали = ВыбЗначение.Выбрать("Выбор наряда",);
		Если фВыбрали = 1 Тогда
			ВыбЗначение.ВыбратьСтроки();
			Пока ВыбЗначение.ПолучитьСтроку() = 1 Цикл
				НоваяСтрока();
				Сотрудник = ВыбЗначение.Сотрудник;
			КонецЦикла;
		КонецЕсли;	
		
	ИначеЕсли ВыбЗначение = 3 Тогда //--- УМК Сандомирский В.Ю, данные из табелей (10.06.14)
		
		ЗаполнитьДаннымиТабеля();	 	
		
	ИначеЕсли ВыбЗначение = 4 Тогда //--- УМК Сандомирский В.Ю, данные из табелей (03.07.14)
		
		ЗаполнитьПоТабелю();	
		
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьСписокЗаказов(БазаВР, Способ)
	Спис = СоздатьОбъект("СписокЗначений");
	Если Способ = 0 Тогда
		ДокЗаказ = СоздатьОбъект("Документ.Заказ");
		ДокЗаказ.УстановитьФильтр(1, 0);
		ДокЗаказ.ВыбратьДокументы(ДатаН, ДатаК);
		Пока ДокЗаказ.ПолучитьДокумент() = 1 Цикл
			Спис.ДобавитьЗначение(ДокЗаказ.ТекущийДокумент());
		КонецЦикла;
	Иначе // выполним запрос
		ТекстЗ = 
		"//{{ЗАПРОС(ВыпускЗак)
		|Период с ДатаН по ДатаК;
		|Продукция = Регистр.ВыпускПродукции.Продукция;
		|Количество = Регистр.ВыпускПродукции.Количество;
		|Заказ = Регистр.ВыпускПродукции.Заказ;
		|Функция КвоСумма = Сумма(Количество);
		|Группировка Заказ;
		|"//}}ЗАПРОС
		;
		
		Запрос = СоздатьОбъект("Запрос");
		Если Запрос.Выполнить(ТекстЗ) = 0 Тогда
			Возврат Спис;
		КонецЕсли;
		
		Пока Запрос.Группировка(1) = 1 Цикл
			Спис.ДобавитьЗначение(Запрос.Заказ);
		КонецЦикла;
	КонецЕсли;
	Возврат Спис;	
КонецФункции

Функция ПолучитьСписокЗаказов_sql(БазаВР, Способ)
	
	Спис = СоздатьОбъект("СписокЗначений");
	
	Если Способ = 0 Тогда
		ДокЗаказ = СоздатьОбъект("Документ.Заказ");
		ДокЗаказ.УстановитьФильтр(1, 0);
		ДокЗаказ.ВыбратьДокументы(ДатаН, ДатаК);
		Пока ДокЗаказ.ПолучитьДокумент() = 1 Цикл
			Спис.ДобавитьЗначение(ДокЗаказ.ТекущийДокумент());
		КонецЦикла;
	Иначе // выполним запрос по движениям регистра выпуск	
		рс = СоздатьОбъект("ODBCRecordset");
		ТекстЗапроса = 
		"SELECT ВыпускПродукцииОбороты.Заказ [Заказ $Документ.Заказ]
		|FROM $РегистрОбороты.ВыпускПродукции(:НачДата,
		|		:КонДата~,
		|		Документ,,
		|		(Заказ <> $ПустойИд),
		|		Заказ,) AS ВыпускПродукцииОбороты
		|GROUP BY ВыпускПродукцииОбороты.Заказ";
		//
		рс.УстановитьТекстовыйПараметр("НачДата", ДатаН);
		рс.УстановитьТекстовыйПараметр("КонДата", ДатаК);
		тз = рс.ВыполнитьИнструкцию(ТекстЗапроса);
		Если тз.КоличествоСтрок() = 0 Тогда
			Возврат Спис;
		КонецЕсли;
		
		тз.Выгрузить(Спис);
		
	КонецЕсли;
	
	Возврат Спис;	
	
КонецФункции

Процедура ДобавитьИниСтрокуТЗПрод(ТЗПрод, СпрТМЦ, ТЗСхем, Дат);
	ТЗПрод.НоваяСтрока();
	ТЗПрод.Родитель = СпрТМЦ.ТекущийЭлемент().Родитель;
    ТЗПрод.Продукция = СпрТМЦ.ТекущийЭлемент();
	ТЗПрод.Схема = ТЗСхем.Схема;
	ТЗПрод.Тариф = ТЗСхем.Тариф;
	ТЗПрод.Дата = Дат;
	ТЗПрод.Ключ = ЗначениеВСтрокуВнутр(ТЗПрод.Продукция) + "/" + Строка(Дат);
	ТЗПрод.ТЗП = СоздатьОбъект("ТаблицаЗначений");
	ТЗПрод.ТЗП.НоваяКолонка("Документ", "Документ");
	ТЗПрод.ТЗП.НоваяКолонка("Объем", "Число");
	ТЗПрод.ТЗП.НоваяКолонка("Сумма", "Число");
	ТЗПрод.ТЗП.НоваяКолонка("ТЗП", "ТаблицаЗначений");
КонецПроцедуры

Процедура ЗаполнитьИниСтрокуТЗПрод(ТЗПрод, Дат);
	ТЗПрод.Дата = Дат;
	ТЗПрод.Ключ = ЗначениеВСтрокуВнутр(ТЗПрод.Продукция) + "/" + Строка(Дат);
	ТЗПрод.ТЗП = СоздатьОбъект("ТаблицаЗначений");
	ТЗПрод.ТЗП.НоваяКолонка("Документ", "Документ");
	ТЗПрод.ТЗП.НоваяКолонка("Объем", "Число");
	ТЗПрод.ТЗП.НоваяКолонка("Сумма", "Число");
	ТЗПрод.ТЗП.НоваяКолонка("ТЗП", "ТаблицаЗначений");
КонецПроцедуры


Процедура Рассчитать_sql(Печать = 0, ПоДатам = 0, ТолькоДаты = 0)
	
	// выбираем всю продукцию, у которой в схеме на дату присутствует вид работ
	Если ПроцОбъема = 0 Тогда
	    ПроцОбъема = 1;
	КонецЕсли;
	
	СтараяСхема = Константа.СтараяСхемаРасчета;
	Если СтараяСхема <> Да Тогда
		СпрВР = СоздатьОбъект("Справочник.ВидыРабот");
		Пер = СоздатьОбъект("Периодический");
		СпрВР.ВыбратьЭлементы();
		Пока СпрВР.ПолучитьЭлемент() = 1 Цикл
			Если СпрВР.ПометкаУдаления() = 0 Тогда
				Если СпрВР.ЭтоГруппа() = 0 Тогда
				    Пер.ИспользоватьОбъект("Тариф", СпрВР.ТекущийЭлемент());
					Если Пер.ВыбратьЗначения(ДатаН+1, ДатаК) <> 0 Тогда
						Сообщить("Для вида работ: " + Строка(СпрВР.ТекущийЭлемент()) + " зафиксировано изменение тарифа в периоде");
					КонецЕсли;				    
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	    
	КонецЕсли;
	
	
	ТЗПрод = СоздатьОбъект("ТаблицаЗначений");
	

	рс = СоздатьОбъект("ODBCRecordset");
	ТекстЗапроса = 
	"SELECT Подзапрос.Продукция [Продукция $Справочник.ТМЦ]
	|	, Подзапрос.Родитель [Родитель $Справочник.ТМЦ]
	|	, Подзапрос.Схема [Схема $Документ.СхемаРасчетаЗП]
	|FROM (SELECT ТМЦ.DESCR Наименование
	|			, ТМЦ.ID Продукция
	|			, $ПоследнееЗначение.ТМЦ.СхемаРасчетаЗП(ТМЦ.ID, :ДатаДок) Схема
	|			, ТМЦ.PARENTID Родитель
	|		FROM $Справочник.ТМЦ AS ТМЦ With (NOLOCK)
	|			INNER JOIN $ДокументСтроки.СхемаРасчетаЗП AS СхемаРасчетаЗПСтроки With (NOLOCK) ON $ПоследнееЗначение.ТМЦ.СхемаРасчетаЗП(ТМЦ.ID, :ДатаДок) = СхемаРасчетаЗПСтроки.IDDOC
	|		WHERE ($СхемаРасчетаЗПСтроки.ВидРабот = :ВидРабот)
	|		GROUP BY ТМЦ.DESCR
	|			, ТМЦ.ID
	|			, ТМЦ.PARENTID) AS Подзапрос
	|ORDER BY Подзапрос.Наименование";
	
	рс.УстановитьТекстовыйПараметр("ВидРабот", ВидРабот);
	рс.УстановитьТекстовыйПараметр("ДатаДок", ДатаДок);
	тз = рс.ВыполнитьИнструкцию(ТекстЗапроса);
	
	ТЗПрод.Загрузить(тз);
	ТЗПрод.НоваяКолонка("Дата", "Дата");
	ТЗПрод.НоваяКолонка("Ключ", "Строка");
	ТЗПрод.НоваяКолонка("Тариф", "Число");
	ТЗПрод.НоваяКолонка("Объем", "Число", 12, 2);
	ТЗПрод.НоваяКолонка("Сумма", "Число");
	ТЗПрод.НоваяКолонка("ТЗП", "ТаблицаЗначений");
	
	ТЗПрод.ВыбратьСтроки();
	
	Пока ТЗПрод.ПолучитьСтроку() = 1  Цикл
		Если ПоДатам = 1 Тогда
			//ДНач = ДатаН;
			//Пока ДНач <= ДатаК Цикл
			//	ДЗаполнитьИниСтрокуТЗПрод(ТЗПрод, Дат);
			//	ДНач = ДНач + 1;
			//КонецЦикла;
		Иначе
			ЗаполнитьИниСтрокуТЗПрод(ТЗПрод, Дата(0));
		КонецЕсли;
	КонецЦикла;
		
	//ТЗПрод.Показать();
	//ПоказатьТЗ(ТЗПрод);
	//Возврат;// временно остановим
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	// теперь получим перечеь продукции с базой
	БазаВР = ВидРабот.База;
	Если (БазаВР = Перечисление.ТипБазыВР.КвоФарша) или (БазаВР = Перечисление.ТипБазыВР.Кутера) Тогда
	    // выбираем списания на определённую продукцию. Базой будет количество фарша фактическое
		СписЗаказов = ПолучитьСписокЗаказов_sql(БазаВР, ВидРабот.Способ);
		
		Для Инд = 1 По СписЗаказов.РазмерСписка() Цикл
			ДокЗаказ = СписЗаказов.ПолучитьЗначение(Инд);
			ДокЗаказ.ВыбратьСтроки();
			Пока ДокЗаказ.ПолучитьСтроку() = 1 Цикл
				ДляРасчета = ?(БазаВР = Перечисление.ТипБазыВР.КвоФарша, ДокЗаказ.КвоФаршаФакт, ДокЗаказ.КвоКутеров*100);
				ДобавитьСтрокуТЗПРод(ДокЗаказ.Продукция, ТЗПрод, ДляРасчета, ДокЗаказ.ТекущийДокумент(), ПоДатам);
			КонецЦикла;
		КонецЦикла;
	ИначеЕсли (БазаВР = Перечисление.ТипБазыВР.Выпущено) или (БазаВР = Перечисление.ТипБазыВР.Реализовано) Тогда
		списПродукция = СоздатьОбъект("СписокЗначений");
		ТЗПрод.Выгрузить(списПродукция,,,"Продукция");
		
		Если (БазаВР = Перечисление.ТипБазыВР.Реализовано) Тогда
			
			ПроверятьУпаковки = ?(ВидРабот.Способ = 1,1,0);
			
			рс = СоздатьОбъект("ODBCRecordset");
			ТекстЗапроса =
			"SELECT ОборотыОбороты.ТМЦ [Продукция $Справочник.ТМЦ] " +
			  ?(ПроверятьУпаковки = 1 ,", ОборотыОбороты.ВидУпаковки [ВидУпаковки $Справочник.ВидыУпаковки], 
			|   , УМК_РазрешенныеВидыУпаковкиТМЦ.ID [РВУ $Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ]
			|   , $ПоследнееЗначение.УМК_РазрешенныеВидыУпаковкиТМЦ.СчитатьВЗарплатуПоПеремещению(УМК_РазрешенныеВидыУпаковкиТМЦ.ID, Cast(Left(Журнал.DATE_TIME_IDDOC, 8) AS datetime)) СчитатьВЗарплатуПоПеремещению",
			    "") + "
			|	, Журнал.IDDOC [Документ $Документ]
			|	, ОборотыОбороты.ВидДокумента [Документ_вид $ВидДокументаПредставление]
			|	, Sum(ОборотыОбороты.РасходКвоОборот) КвоСумма
			|FROM $РегистрОбороты.Обороты(:НачДата,
			|		:КонДата~,
			|		Документ,, 
			|       (1=1) 
			|        AND (ТМЦ IN  (SELECT Val FROM #списПродукция) "
			 + ?(ПроверятьУпаковки = 1," AND (ВидУпаковки <> :НетУп) ","") + "
			|		(ВидУпаковки <> :НетУп),
			|		(ТМЦ" + ?(ПроверятьУпаковки = 1, ", ВидУпаковки", "") + "),
			|		РасходКво) AS ОборотыОбороты
			|	LEFT OUTER JOIN _1SJOURN AS Журнал With (NOLOCK) ON ОборотыОбороты.ПозицияДокумента = Журнал.DATE_TIME_IDDOC AND ОборотыОбороты.ВидДокумента = Журнал.IDDOCDEF" 
			 + ?(ПроверятьУпаковки = 1," LEFT OUTER JOIN $Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ AS УМК_РазрешенныеВидыУпаковкиТМЦ With (NOLOCK)
			|   ON ОборотыОбороты.ТМЦ = УМК_РазрешенныеВидыУпаковкиТМЦ.PARENTEXT 
			|   AND ОборотыОбороты.ВидУпаковки = $УМК_РазрешенныеВидыУпаковкиТМЦ.ВидУпаковки","") + "
			|GROUP BY ОборотыОбороты.ТМЦ " 
			 + ?(ПроверятьУпаковки = 1,"
			|	, ОборотыОбороты.ВидУпаковки","") + "
			|	, Журнал.IDDOC
			|	, ОборотыОбороты.ВидДокумента"
			 + ?(ПроверятьУпаковки = 1,"
			|	, УМК_РазрешенныеВидыУпаковкиТМЦ.ID
			|	, Cast(Left(Журнал.DATE_TIME_IDDOC, 8) AS datetime)","") + "
			|ORDER BY Журнал.IDDOC";
			
			рс.УложитьСписокОбъектов(списПродукция, "#списПродукция");
			рс.УстановитьТекстовыйПараметр("НачДата", ДатаН);
			рс.УстановитьТекстовыйПараметр("КонДата", ДатаК);
			рс.УстановитьТекстовыйПараметр("НетУп", НетУп);
			

			тз = рс.ВыполнитьИнструкцию(ТекстЗапроса);
			
			Если тз.КоличествоСтрок() = 0 Тогда
				Возврат;
			КонецЕсли;
		
			тз.ВыбратьСтроки();
			
			Пока тз.ПолучитьСтроку() = 1 Цикл
				Если (ПроверятьУпаковки = 1) Тогда
					Если  (ПустоеЗначение(тз.РВУ)=0) И (тз.СчитатьВЗарплатуПоПеремещению=0) Тогда
						ДобавитьСтрокуТЗПРод(тз.Продукция, ТЗПрод, тз.КвоСумма, тз.Документ, ПоДатам);
					КонецЕсли;
				Иначе
					ДобавитьСтрокуТЗПРод(тз.Продукция, ТЗПрод, тз.КвоСумма, тз.Документ, ПоДатам);
				КонецЕсли;
			КонецЦикла;
				
			Если (ПроверятьУпаковки = 1) И (СписПродукция.РазмерСписка() > 0) Тогда
				ТекстЗ = 
				"//{{ЗАПРОС(Перемещения)
				|Период с ДатаН по ДатаК;
				|ОбрабатыватьДокументы Проведенные;
				|Продукция = Документ.Перемещение.Стало;
				|Количество = Документ.Перемещение.Кво;
				|ВидУпаковки = Документ.Перемещение.ВидУпаковкиСтало;
				|Функция КвоСумма = Сумма(Количество);
				|Группировка Продукция упорядочить по Продукция.Наименование без групп;
				|Группировка ВидУпаковки без групп;
				|Группировка Документ;
				|Условие (Продукция в списПродукция);
				|"//}}ЗАПРОС
				;			
				
				Запр = СоздатьОбъект("Запрос");
				Если Запр.Выполнить(ТекстЗ) = 0  Тогда
				    Возврат;
				КонецЕсли;
				
				Пока Запр.Группировка(1) = 1 Цикл
					Пока Запр.Группировка(2) = 1 Цикл
						РВУ = глПолучитьРазрешенныйВидУпаковки(Запр.Продукция, Запр.ВидУпаковки);
						Если ПустоеЗначение(РВУ) = 0 Тогда
							Пока Запр.Группировка(3) = 1 Цикл
								Если РВУ.СчитатьВЗарплатуПоПеремещению.Получить(Запр.Документ.ДатаДок) = 1 Тогда
									ДобавитьСтрокуТЗПРод(Запр.Продукция, ТЗПрод, Запр.КвоСумма, Запр.Документ, ПоДатам);
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				
			КонецЕсли;
		Иначе			
			МинДата = ДатаН;
			МаксДата = ДатаК;
			Если ВидРабот.Способ = 1 Тогда
				// вначале отберём заказы за период и определим мин и макс. дату выпуска
				СписЗ = СоздатьОбъект("СписокЗначений");
				ДокЗ = СоздатьОбъект("Документ.Заказ");
				Док = СоздатьОбъект("Документ");
				ДокЗ.УстановитьФильтр(1,0);
				ДокЗ.ВыбратьДокументы(ДатаН,ДатаК);				
				Пока ДокЗ.ПолучитьДокумент() = 1 Цикл
					СписЗ.ДобавитьЗначение(ДокЗ.ТекущийДокумент());
					Док.УстановитьФильтр(1,0);
					Док.ВыбратьПодчиненныеДокументы(,,ДокЗ.ТекущийДокумент());
					Пока Док.ПолучитьДокумент() = 1 Цикл
						Если Док.Вид() = "ВыпускПродукции" Тогда
						    МинДата = Мин(МинДата, Док.ДатаДок);
							МаксДата = Макс(МаксДата, Док.ДатаДок);
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			ТекстЗ = 
			"//{{ЗАПРОС(Выпуск)
			|Период с МинДата по МаксДата;
			|Продукция = Регистр.ВыпускПродукции.Продукция;
			|Количество = Регистр.ВыпускПродукции.Количество;
			|Заказ = Регистр.ВыпускПродукции.Заказ;
			|Функция КвоСумма = Сумма(Количество);
			|Группировка Продукция упорядочить по Продукция.Наименование без групп;
			|Группировка Документ;
			|Условие(Продукция в списПродукция);" + 
			?(ВидРабот.Способ = 1,"
			|Условие(Заказ в СписЗ);","") + "
			|"//}}ЗАПРОС
			;
			
			Запр = СоздатьОбъект("Запрос");
			Если Запр.Выполнить(ТекстЗ) = 0  Тогда
			    Возврат;
			КонецЕсли;
			
			Пока Запр.Группировка(1) = 1 Цикл
				Пока Запр.Группировка(2) = 1 Цикл
					ДобавитьСтрокуТЗПРод(Запр.Продукция, ТЗПрод, Запр.КвоСумма, Запр.Документ, ПоДатам);
				КонецЦикла;
			КонецЦикла;					
		КонецЕсли;		
	ИначеЕсли (БазаВР = Перечисление.ТипБазыВР.Списано) ИЛИ (БазаВР = Перечисление.ТипБазыВР.Обвалка) Тогда
		списПродукция = СоздатьОбъект("СписокЗначений");
		ТЗПрод.Выгрузить(списПродукция,,,"Продукция");
		
		ТекстЗ = 
		"//{{ЗАПРОС(Списание)
		|Период с ДатаН по ДатаК;
		|Материал = Регистр.Партии.ТМЦ;
		|Количество = Регистр.Партии.ОстатокТовара;
		|КодОперации = Регистр.Партии.КодОперации;
		|Функция КвоПриход = Расход(Количество);
		|Группировка Материал без групп;
		|Группировка Документ;
		|Условие (Материал в списПродукция);
		|Условие (КодОперации = СписаниеВПроизводство);
		|"//}}ЗАПРОС
		;			
		
		Запр = СоздатьОбъект("Запрос");
		Если Запр.Выполнить(ТекстЗ) = 0  Тогда
		    Возврат;
		КонецЕсли;
		
		ВСП = ?(БазаВР = Перечисление.ТипБазыВР.Обвалка, 1, 0);
		Док = СоздатьОбъект("Документ");
		Пока Запр.Группировка(1) = 1 Цикл
			Пока Запр.Группировка(2) = 1 Цикл
				Если ВСП = 0 Тогда 
				    ДобавитьСтрокуТЗПРод(Запр.Материал, ТЗПрод, Запр.КвоПриход, Запр.Документ, ПоДатам);
				Иначе
					Док.ВыбратьПодчиненныеДокументы(,,Запр.Документ);
					Док.УстановитьФильтр(1,0);
					Пока Док.ПолучитьДокумент() = 1 Цикл
						Если Док.Вид() = "ПереработкаМяса" Тогда
						    ДобавитьСтрокуТЗПРод(Запр.Материал, ТЗПрод, Док.Итог("ВесФакт"), Запр.Документ, ПоДатам);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ТЗПродД = СоздатьОбъект("ТаблицаЗначений");
	ТЗПрод.Выгрузить(ТЗПродД,,,"Дата,Объем,Сумма");
	ТЗПродД.ВыбратьСтроки();
	Пока ТЗПродД.ПолучитьСтроку() = 1 Цикл
		ТЗПродД.Объем = ТЗПродД.Объем * ПроцОбъема;
	КонецЦикла;
	ТЗПродД.Свернуть("Дата", "Объем,Сумма");
	
	Если Печать <> 0 Тогда
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("Таблица"); 
		ТЗПрод.Сортировать("Дата,Родитель,Продукция");
		
		СтарДата = Дата(0);
		Таб.ВывестиСекцию("Шапка");
		Ном = 1;
		ТЗПрод.ВыбратьСтроки();
		Пока ТЗПрод.ПолучитьСтроку() = 1 Цикл
			Если ТЗПрод.Сумма = 0 Тогда
			    Продолжить;
			КонецЕсли;
			Если СтарДата <> ТЗПрод.Дата Тогда
				СтрДата = 0;
				ТЗПродД.НайтиЗначение(ТЗПрод.Дата, СтрДата, "Дата");
				ТЗПродД.ПолучитьСтрокуПоНомеру(СтрДата);
				Таб.ВывестиСекцию("Дата");
				СтарДата = ТЗПрод.Дата;
			КонецЕсли;
			
			Если ТолькоДаты = 0 Тогда
				Таб.ВывестиСекцию("Строка");
				Если Печать = 2 Тогда
					Таб.ВывестиСекцию("Схема");
				    ТЗПрод.ТЗП.ВыбратьСтроки();
					Пока ТЗПрод.ТЗП.ПолучитьСтроку() = 1 Цикл
						Таб.ВывестиСекцию("Док");
					КонецЦикла;				
				КонецЕсли;
				Ном = Ном + 1;				
			КонецЕсли;
		КонецЦикла;
		Таб.ВывестиСекцию("Дно");
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Печать Протокол","");

		Возврат;
	КонецЕсли;	
	
	Объем = ТЗПрод.Итог("Объем");
	Сумма = ТЗПрод.Итог("Сумма");
	ИзмКоэф();
	РассчитатьЗП();
КонецПроцедуры  

Процедура Рассчитать(Печать = 0, ПоДатам = 0, ТолькоДаты = 0)
	
	Если Константа.ОтладкаЗапросов = 1 Тогда
        Рассчитать_sql(Печать, ПоДатам, ТолькоДаты);		
		Возврат;
	КонецЕсли;
	
	// выбираем всю продукцию, у которой в схеме на дату присутствует вид работ
	Если ПроцОбъема = 0 Тогда
	    ПроцОбъема = 1;
	КонецЕсли;
	
	СтараяСхема = Константа.СтараяСхемаРасчета;
	Если СтараяСхема <> Да Тогда
		СпрВР = СоздатьОбъект("Справочник.ВидыРабот");
		Пер = СоздатьОбъект("Периодический");
		СпрВР.ВыбратьЭлементы();
		Пока СпрВР.ПолучитьЭлемент() = 1 Цикл
			Если СпрВР.ПометкаУдаления() = 0 Тогда
				Если СпрВР.ЭтоГруппа() = 0 Тогда
				    Пер.ИспользоватьОбъект("Тариф", СпрВР.ТекущийЭлемент());
					Если Пер.ВыбратьЗначения(ДатаН+1, ДатаК) <> 0 Тогда
						Сообщить("Для вида работ: " + Строка(СпрВР.ТекущийЭлемент()) + " зафиксировано изменение тарифа в периоде");
					КонецЕсли;				    
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	    
	КонецЕсли;
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	ТЗСхем = СоздатьОбъект("ТаблицаЗначений");
	ТЗСхем.НоваяКолонка("Схема", "Документ.СхемаРасчетаЗП");
	ТЗСхем.НоваяКолонка("Тариф", "Число");
	
	ТЗПрод = СоздатьОбъект("ТаблицаЗначений");
	ТЗПрод.НоваяКолонка("Продукция", "Справочник.ТМЦ");
	ТЗПрод.НоваяКолонка("Дата", "Дата");
	ТЗПрод.НоваяКолонка("Ключ", "Строка");
	ТЗПрод.НоваяКолонка("Родитель", "Справочник.ТМЦ");
	ТЗПрод.НоваяКолонка("Схема", "Документ.СхемаРасчетаЗП");
	ТЗПрод.НоваяКолонка("Тариф", "Число");
	ТЗПрод.НоваяКолонка("Объем", "Число", 12, 2);
	ТЗПрод.НоваяКолонка("Сумма", "Число");
	ТЗПрод.НоваяКолонка("ТЗП", "ТаблицаЗначений");
	
		//ТЗСхем = СоздатьОбъект("");
	СпрТМЦ.ВыбратьЭлементы(0);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Схема = СпрТМЦ.СхемаРасчетаЗП.Получить(ДатаДок);		
		ЕстьСхема = 0;
		Если ТЗСхем.НайтиЗначение(Схема, ЕстьСхема, "Схема") = 0 Тогда
		    Схема.ВыбратьСтроки();
			Пока Схема.ПолучитьСтроку() = 1 Цикл
				Если Схема.ВидРабот = ВидРабот Тогда
				    ТЗСхем.НоваяСтрока();
					ТЗСхем.Схема = Схема;
					Если СтараяСхема <> Да Тогда
						//ТЗСхем.Тариф = Схема.ВидРабот.Тариф.Получить(ДатаДок);
					Иначе
						ТЗСхем.Тариф = Схема.Тариф;
					КонецЕсли;
					ЕстьСхема = ТЗСхем.НомерСтроки;
					Прервать;
				КонецЕсли;
			КонецЦикла;			
		КонецЕсли;
		
		Если ЕстьСхема <> 0 Тогда
			ТЗСхем.ПолучитьСтрокуПоНомеру(ЕстьСхема);
			Если ПоДатам = 1 Тогда
				ДНач = ДатаН;
				Пока ДНач <= ДатаК Цикл
					ДобавитьИниСтрокуТЗПрод(ТЗПрод, СпрТМЦ, ТЗСхем, ДНач);
					ДНач = ДНач + 1;
				КонецЦикла;
			Иначе
				ДобавитьИниСтрокуТЗПрод(ТЗПрод, СпрТМЦ, ТЗСхем, Дата(0));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// теперь получим перечеь продукции с базой
	БазаВР = ВидРабот.База;
	Если (БазаВР = Перечисление.ТипБазыВР.КвоФарша) или (БазаВР = Перечисление.ТипБазыВР.Кутера) Тогда
	    // выбираем списания на определённую продукцию. Базой будет количество фарша фактическое
		СписЗаказов = ПолучитьСписокЗаказов(БазаВР, ВидРабот.Способ);
		
		Для Инд = 1 По СписЗаказов.РазмерСписка() Цикл
			ДокЗаказ = СписЗаказов.ПолучитьЗначение(Инд);
			ДокЗаказ.ВыбратьСтроки();
			Пока ДокЗаказ.ПолучитьСтроку() = 1 Цикл
				ДляРасчета = ?(БазаВР = Перечисление.ТипБазыВР.КвоФарша, ДокЗаказ.КвоФаршаФакт, ДокЗаказ.КвоКутеров*100);
				ДобавитьСтрокуТЗПРод(ДокЗаказ.Продукция, ТЗПрод, ДляРасчета, ДокЗаказ.ТекущийДокумент(), ПоДатам);
			КонецЦикла;
		КонецЦикла;
	ИначеЕсли (БазаВР = Перечисление.ТипБазыВР.Выпущено) или (БазаВР = Перечисление.ТипБазыВР.Реализовано) Тогда
		списПродукция = СоздатьОбъект("СписокЗначений");
		ТЗПрод.Выгрузить(списПродукция,,,"Продукция");
		
		Если (БазаВР = Перечисление.ТипБазыВР.Реализовано) Тогда
			ПроверятьУпаковки = 0;
			Если ВидРабот.Способ = 1 Тогда
				ПроверятьУпаковки = 1;
			    ТекстУсл = "
				|Условие (ВидУпаковки <> НетУп);";
			Иначе
				ТекстУсл = "";
			КонецЕсли;
			
			ТекстЗ = 
			"//{{ЗАПРОС(Реализция)
			|Период с ДатаН по ДатаК;
			|Продукция = Регистр.Обороты.ТМЦ;
			|Количество = Регистр.Обороты.РасходКво;
			|ВидУпаковки = Регистр.Обороты.ВидУпаковки;
			|Функция КвоСумма = Сумма(Количество);
			|Группировка Продукция упорядочить по Продукция.Наименование без групп;" + 
			?(ПроверятьУпаковки = 1, "
			|Группировка ВидУпаковки без групп;", "") + "			
			|Группировка Документ;
			|Условие (Продукция в списПродукция);" + ТекстУсл + "
			|"//}}ЗАПРОС
			;			
			
			Запр = СоздатьОбъект("Запрос");
			Если Запр.Выполнить(ТекстЗ) = 0  Тогда
			    Возврат;
			КонецЕсли;
			СписВУ = СоздатьОбъект("СписокЗначений");
			
			Пока Запр.Группировка(1) = 1 Цикл
				Если ПроверятьУпаковки = 1 Тогда
					Пока Запр.Группировка(2) = 1 Цикл
						РВУ = глПолучитьРазрешенныйВидУпаковки(Запр.Продукция, Запр.ВидУпаковки);
						Если ПустоеЗначение(РВУ) = 0 Тогда
							Пока Запр.Группировка(3) = 1 Цикл
								Если РВУ.СчитатьВЗарплатуПоПеремещению.Получить(Запр.Документ.ДатаДок) = 0 Тогда
									ДобавитьСтрокуТЗПРод(Запр.Продукция, ТЗПрод, Запр.КвоСумма, Запр.Документ, ПоДатам);
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Пока Запр.Группировка(2) = 1 Цикл
						ДобавитьСтрокуТЗПРод(Запр.Продукция, ТЗПрод, Запр.КвоСумма, Запр.Документ, ПоДатам);
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			
			Если (ПроверятьУпаковки = 1) И (СписПродукция.РазмерСписка() > 0) Тогда
				ТекстЗ = 
				"//{{ЗАПРОС(Перемещения)
				|Период с ДатаН по ДатаК;
				|ОбрабатыватьДокументы Проведенные;
				|Продукция = Документ.Перемещение.Стало;
				|Количество = Документ.Перемещение.Кво;
				|ВидУпаковки = Документ.Перемещение.ВидУпаковкиСтало;
				|Функция КвоСумма = Сумма(Количество);
				|Группировка Продукция упорядочить по Продукция.Наименование без групп;
				|Группировка ВидУпаковки без групп;
				|Группировка Документ;
				|Условие (Продукция в списПродукция);
				|"//}}ЗАПРОС
				;			
				
				Запр = СоздатьОбъект("Запрос");
				Если Запр.Выполнить(ТекстЗ) = 0  Тогда
				    Возврат;
				КонецЕсли;
				
				Пока Запр.Группировка(1) = 1 Цикл
					Пока Запр.Группировка(2) = 1 Цикл
						РВУ = глПолучитьРазрешенныйВидУпаковки(Запр.Продукция, Запр.ВидУпаковки);
						Если ПустоеЗначение(РВУ) = 0 Тогда
							Пока Запр.Группировка(3) = 1 Цикл
								Если РВУ.СчитатьВЗарплатуПоПеремещению.Получить(Запр.Документ.ДатаДок) = 1 Тогда
									ДобавитьСтрокуТЗПРод(Запр.Продукция, ТЗПрод, Запр.КвоСумма, Запр.Документ, ПоДатам);
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				
			КонецЕсли;
		Иначе			
			МинДата = ДатаН;
			МаксДата = ДатаК;
			Если ВидРабот.Способ = 1 Тогда
				// вначале отберём заказы за период и определим мин и макс. дату выпуска
				СписЗ = СоздатьОбъект("СписокЗначений");
				ДокЗ = СоздатьОбъект("Документ.Заказ");
				Док = СоздатьОбъект("Документ");
				ДокЗ.УстановитьФильтр(1,0);
				ДокЗ.ВыбратьДокументы(ДатаН,ДатаК);				
				Пока ДокЗ.ПолучитьДокумент() = 1 Цикл
					СписЗ.ДобавитьЗначение(ДокЗ.ТекущийДокумент());
					Док.УстановитьФильтр(1,0);
					Док.ВыбратьПодчиненныеДокументы(,,ДокЗ.ТекущийДокумент());
					Пока Док.ПолучитьДокумент() = 1 Цикл
						Если Док.Вид() = "ВыпускПродукции" Тогда
						    МинДата = Мин(МинДата, Док.ДатаДок);
							МаксДата = Макс(МаксДата, Док.ДатаДок);
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			ТекстЗ = 
			"//{{ЗАПРОС(Выпуск)
			|Период с МинДата по МаксДата;
			|Продукция = Регистр.ВыпускПродукции.Продукция;
			|Количество = Регистр.ВыпускПродукции.Количество;
			|Заказ = Регистр.ВыпускПродукции.Заказ;
			|Функция КвоСумма = Сумма(Количество);
			|Группировка Продукция упорядочить по Продукция.Наименование без групп;
			|Группировка Документ;
			|Условие(Продукция в списПродукция);" + 
			?(ВидРабот.Способ = 1,"
			|Условие(Заказ в СписЗ);","") + "
			|"//}}ЗАПРОС
			;
			
			Запр = СоздатьОбъект("Запрос");
			Если Запр.Выполнить(ТекстЗ) = 0  Тогда
			    Возврат;
			КонецЕсли;
			
			Пока Запр.Группировка(1) = 1 Цикл
				Пока Запр.Группировка(2) = 1 Цикл
					ДобавитьСтрокуТЗПРод(Запр.Продукция, ТЗПрод, Запр.КвоСумма, Запр.Документ, ПоДатам);
				КонецЦикла;
			КонецЦикла;					
		КонецЕсли;		
	ИначеЕсли (БазаВР = Перечисление.ТипБазыВР.Списано) ИЛИ (БазаВР = Перечисление.ТипБазыВР.Обвалка) Тогда
		списПродукция = СоздатьОбъект("СписокЗначений");
		ТЗПрод.Выгрузить(списПродукция,,,"Продукция");
		
		ТекстЗ = 
		"//{{ЗАПРОС(Списание)
		|Период с ДатаН по ДатаК;
		|Материал = Регистр.Партии.ТМЦ;
		|Количество = Регистр.Партии.ОстатокТовара;
		|КодОперации = Регистр.Партии.КодОперации;
		|Функция КвоПриход = Расход(Количество);
		|Группировка Материал без групп;
		|Группировка Документ;
		|Условие (Материал в списПродукция);
		|Условие (КодОперации = СписаниеВПроизводство);
		|"//}}ЗАПРОС
		;			
		
		Запр = СоздатьОбъект("Запрос");
		Если Запр.Выполнить(ТекстЗ) = 0  Тогда
		    Возврат;
		КонецЕсли;
		
		ВСП = ?(БазаВР = Перечисление.ТипБазыВР.Обвалка, 1, 0);
		Док = СоздатьОбъект("Документ");
		Пока Запр.Группировка(1) = 1 Цикл
			Пока Запр.Группировка(2) = 1 Цикл
				Если ВСП = 0 Тогда 
				    ДобавитьСтрокуТЗПРод(Запр.Материал, ТЗПрод, Запр.КвоПриход, Запр.Документ, ПоДатам);
				Иначе
					Док.ВыбратьПодчиненныеДокументы(,,Запр.Документ);
					Док.УстановитьФильтр(1,0);
					Пока Док.ПолучитьДокумент() = 1 Цикл
						Если Док.Вид() = "ПереработкаМяса" Тогда
						    ДобавитьСтрокуТЗПРод(Запр.Материал, ТЗПрод, Док.Итог("ВесФакт"), Запр.Документ, ПоДатам);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ТЗПродД = СоздатьОбъект("ТаблицаЗначений");
	ТЗПрод.Выгрузить(ТЗПродД,,,"Дата,Объем,Сумма");
	ТЗПродД.ВыбратьСтроки();
	Пока ТЗПродД.ПолучитьСтроку() = 1 Цикл
		ТЗПродД.Объем = ТЗПродД.Объем * ПроцОбъема;
	КонецЦикла;
	ТЗПродД.Свернуть("Дата", "Объем,Сумма");
	
	Если Печать <> 0 Тогда
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("Таблица"); 
		ТЗПрод.Сортировать("Дата,Родитель,Продукция");
		
		СтарДата = Дата(0);
		Таб.ВывестиСекцию("Шапка");
		Ном = 1;
		ТЗПрод.ВыбратьСтроки();
		Пока ТЗПрод.ПолучитьСтроку() = 1 Цикл
			Если ТЗПрод.Сумма = 0 Тогда
			    Продолжить;
			КонецЕсли;
			Если СтарДата <> ТЗПрод.Дата Тогда
				СтрДата = 0;
				ТЗПродД.НайтиЗначение(ТЗПрод.Дата, СтрДата, "Дата");
				ТЗПродД.ПолучитьСтрокуПоНомеру(СтрДата);
				Таб.ВывестиСекцию("Дата");
				СтарДата = ТЗПрод.Дата;
			КонецЕсли;
			
			Если ТолькоДаты = 0 Тогда
				Таб.ВывестиСекцию("Строка");
				Если Печать = 2 Тогда
					Таб.ВывестиСекцию("Схема");
				    ТЗПрод.ТЗП.ВыбратьСтроки();
					Пока ТЗПрод.ТЗП.ПолучитьСтроку() = 1 Цикл
						Таб.ВывестиСекцию("Док");
					КонецЦикла;				
				КонецЕсли;
				Ном = Ном + 1;				
			КонецЕсли;
		КонецЦикла;
		Таб.ВывестиСекцию("Дно");
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Печать Протокол","");

		Возврат;
	КонецЕсли;	
	
	Объем = ТЗПрод.Итог("Объем");
	Сумма = ТЗПрод.Итог("Сумма");
	ИзмКоэф();
	РассчитатьЗП();
КонецПроцедуры  

Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Печать");
	Таб.ВывестиСекцию("Шапка|Основная");	
	Если КТУПоДням = 1 Тогда
		КвоДней = (ДатаК - ДатаН) + 1;
		Для Инд = 1 По КвоДней Цикл
			Таб.ПрисоединитьСекцию("Шапка|ЗПД");
		КонецЦикла;
	КонецЕсли;
	
	Таб.Опции(0,0,8,4);
	ВыбратьСтроки();
	Ном = 1;
	Пока ПолучитьСтроку() = 1 Цикл
		Таб.ВывестиСекцию("Строка|Основная");
		Если КТУПоДням = 1 Тогда
			Для Инд = 1 По КвоДней Цикл
				Таб.ПрисоединитьСекцию("Строка|ЗПД");
			КонецЦикла;
		КонецЕсли;
		Ном = Ном + 1;
	КонецЦикла;
	Таб.ВывестиСекцию("Подвал|Основная");
	Если КТУПоДням = 1 Тогда
		Для Инд = 1 По КвоДней Цикл
			Таб.ПрисоединитьСекцию("Подвал|ЗПД");
		КонецЦикла;
		Таб.ПараметрыСтраницы(2);
	Иначе
		Таб.ПараметрыСтраницы(1);
	КонецЕсли;

	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать Наряд","");
КонецПроцедуры

Процедура ПечатьПротокола()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Сводный");
	СпМеню.ДобавитьЗначение(2, "С детализацией");
	СпМеню.ДобавитьЗначение(3, "С детализацией по датам");
	СпМеню.ДобавитьЗначение(4, "Только даты");
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн, ,,,1) = 0 Тогда
	    Возврат;
	КонецЕсли;
	Рассчитать(Мин(Зн, 2), ?(Зн >= 3, 1, 0), ?(Зн = 4, 1, 0));
КонецПроцедуры

Процедура ЗаполнитьКТУПоДням()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "По КТУ сотрудников");
	СпМеню.ДобавитьЗначение(2, "Ввести вручную");
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	Если Вопрос("Заполнить КТУ по дням?", "Да+Нет") = "Нет" Тогда
		Возврат;
	КонецЕсли;
	Если Зн = 2 Тогда
		НовыйКТУ = 0;
		Если ВвестиЧисло(НовыйКТУ, "Введите новый КТУ для всех", 10, 4) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если (Вручную = Да) И (Зн = 1) Тогда
			Продолжить;
		КонецЕсли;
		Если Зн = 2 Тогда
			КТУ = НовыйКТУ;
		КонецЕсли;
		Для Инд = 1 По (ДатаК - ДатаН) + 1 Цикл
			Если Зн = 1 Тогда
				УстановитьАтрибут("Ч"+Строка(Инд), КТУ);
			Иначе
				УстановитьАтрибут("Ч"+Строка(Инд), НовыйКТУ);
			КонецЕсли;
		КонецЦикла;			    
	КонецЦикла;
КонецПроцедуры

Функция Раскраска()
	Возврат  "(BRUSH_S[" + Строка(100*255*100) + "])";	
КонецФункции



Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
Сервис.ИспользоватьПланРаскраски(1);
