Перем тбПоставщик,тбПерезачет;
Перем ФлагОтгрузкиПоставщиков, ФлагОтгрузкиПокупателей;
Перем КассовыйМетодБонусы; // + umk
Перем ТабОстаткиРасчетовБонусы;//+ umk
Перем ТабОсновныеПартнеры; // + umk
Перем ЗачетДолгаБонус; // + umk


// + umk 
//Выполнить движения по остаткам долгов для бонусов рассчитанных по отгрузке
//
Процедура ДвижениеОстаткиРасчетовБонус()
	
	Перем ТабЧасть;
	
	ТабКонтрагентов = СоздатьОбъект("ТаблицаЗначений");
	ТабКонтрагентов.НоваяКолонка("Контрагент");
	ТабКонтрагентов.НоваяКолонка("Сумма");
	
	ВыгрузитьТабличнуюЧасть(ТабЧасть);
	ТабЧасть.Свернуть("КонтрагентОткуда, КонтрагентКуда", "СуммаГрн");
	
	ТабЧасть.ВыбратьСтроки();
	Пока ТабЧасть.ПолучитьСтроку() = 1 Цикл
		
		Если ПустоеЗначение(ТабЧасть.КонтрагентОткуда) = Ложь Тогда
			ТабКонтрагентов.НоваяСтрока();
			ТабКонтрагентов.Контрагент = ТабЧасть.КонтрагентОткуда;
			ТабКонтрагентов.Сумма = 0;
		КонецЕсли;
		
		Если ПустоеЗначение(ТабЧасть.КонтрагентКуда) = Ложь Тогда
			ТабКонтрагентов.НоваяСтрока();
			ТабКонтрагентов.Контрагент = ТабЧасть.КонтрагентКуда;
			ТабКонтрагентов.Сумма = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	//Выполним проверку. Если Дт и Кт по одному контрагенту, то движения не нужны.
	ТабКонтрагентов.Свернуть("Контрагент", "Сумма");
	
	ЗачетДолгаБонус = ?(ТабКонтрагентов.КоличествоСтрок()>1,Истина,Ложь);
	
	Если ЗачетДолгаБонус = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ТабОстаткиРасчетовБонусы.Свернуть("КонтрагентРасчетов,Договор,ВидДвижения","Сумма, Долг");
	
	ТабОстаткиРасчетовБонусы.ВыбратьСтроки();
	Пока ТабОстаткиРасчетовБонусы.ПолучитьСтроку() = 1 Цикл
		ТабОстаткиРасчетовБонусы.Долг = глОстатокДолгаВзаиморасчетыБонусы(ТекущийДокумент(), Фирма, ТабОстаткиРасчетовБонусы.КонтрагентРасчетов, ТабОстаткиРасчетовБонусы.Договор, Валюта); // Добавим сумму долга на дату документа
		глПогаситьДолгОстаткиБонусов(Контекст, ТабОстаткиРасчетовБонусы.КонтрагентРасчетов, ТабОстаткиРасчетовБонусы.Сумма, ТабОстаткиРасчетовБонусы.ВидДвижения, ТабОстаткиРасчетовБонусы.Договор);
	КонецЦикла;
	
КонецПроцедуры

// + umk 
//Подготовим таблицу остатков долгов по основным партнерам
Процедура РассчитатьВзаиморасчеты()
	
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку() = 1 Цикл
		
		Если глСчетаПоставщиковПокупателей.Принадлежит(Число(СчетОткуда.Код)) = 0 Тогда
			// нам нужны только счета 36 и 63
			Продолжить;
		КонецЕсли;
		
		КонтрагентРасчетов = КонтрагентОткуда;
		ОсновнойПартнер = глОсновнойКонтрагентИерархии(КонтрагентРасчетов.Родитель, КонтрагентРасчетов);
		
		Если ПустоеЗначение(ОсновнойПартнер) = 0 Тогда
			КонтрагентРасчетов = ОсновнойПартнер;
		КонецЕсли;
		
		//таблица для закрытия остатков бонусов
		ТабОстаткиРасчетовБонусы.НоваяСтрока();
		ТабОстаткиРасчетовБонусы.КонтрагентРасчетов = КонтрагентРасчетов;
		ТабОстаткиРасчетовБонусы.Договор = ДоговорКонтрагентаОткуда;
		ТабОстаткиРасчетовБонусы.ВидДвижения = 1;
		ТабОстаткиРасчетовБонусы.Сумма = СуммаГрнОткуда;
		
		
		//добавим в таблицу основных партнеров
		ТабОсновныеПартнеры.НоваяСтрока();
		ТабОсновныеПартнеры.Контрагент = КонтрагентОткуда;
		ТабОсновныеПартнеры.Партнер = КонтрагентРасчетов;
		
	КонецЦикла;
	
КонецПроцедуры

// + umk
// Движение бонусов 
Процедура ДвижениеБонусов()
		
	Перем НС_, НС;
		
	Если глСчетаПоставщиковПокупателей.Принадлежит(Число(СчетОткуда.Код)) = 0 Тогда
		// нам нужны только счета 36 и 63
		Возврат;
	КонецЕсли;

	Контрагент = КонтрагентОткуда;
	Договор = ДоговорКонтрагентаОткуда;
	БазаРасчета = СуммаВалОткуда;
	
	//Если применяем кассовый метод расчета, то проверим остаток долга
	Если КассовыйМетодБонусы = 1 Тогда
		
		Если ТабОсновныеПартнеры.НайтиЗначение(Контрагент,НС_,"Контрагент") = 1 Тогда //Найдем Базового контрагента расчетов
			ТабОсновныеПартнеры.ПолучитьСтрокуПоНомеру(НС_);
			КонтрагентРасчетов = ТабОсновныеПартнеры.Партнер;
			Если ТабОстаткиРасчетовБонусы.НайтиЗначение(КонтрагентРасчетов,НС,"КонтрагентРасчетов") = 1 Тогда //Найдем сумму расчетов основного партнера
				ТабОстаткиРасчетовБонусы.ПолучитьСтрокуПоНомеру(НС);
				Долг = ТабОстаткиРасчетовБонусы.Долг;
				Если Долг > БазаРасчета Тогда
					ТабОстаткиРасчетовБонусы.ПолучитьСтрокуПоНомеру(НС);
					ОстатокДолг = Долг - БазаРасчета; // уменьшаем сумму долга на сумму строки документа
					ТабОстаткиРасчетовБонусы.УстановитьЗначение(НС,"Долг", ОстатокДолг);
					Возврат; // Сумма расчетов не привысила сумма остатка долга
				Иначе //Начисляем бонусы на разницу 
					БазаРасчета = БазаРасчета - Долг; // расчитываем бонусы на разницу 
					ТабОстаткиРасчетовБонусы.УстановитьЗначение(НС,"Долг", 0); // обнулим долг. 
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустоеЗначение(СхемаРБ) = Истина Тогда
		Возврат;
	КонецЕсли;
	
	глНачислитьБонусы(Контекст, Контрагент, Договор, 1, БазаРасчета,,1)
	
КонецПроцедуры
// - umk

// ===========================
Функция ПроверкаШапки()
   
	глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    
	глВыбранЛи(Валюта,"Валюта");
   	глВыбранЛи(Курс,"Валюта");
   	глВыбранЛи(Кратность,"Валюта");
   	глВыбранЛи(ВидНДС,"Вид НДС");
   	
     //--- УМК Сандомирский В.Ю. (29.09.14) если через нулевой счет то должны сходится итоги
   	Если (Итог("СуммаВалОткуда") <> Итог("СуммаВалКуда")) ИЛИ (Итог("СуммаГрнОткуда") <> Итог("СуммаГрнКуда")) Тогда
   		Сообщить("Внимание не совпадают итоги откуда и куда","!!!");
   		глВсеВыбрано = 0;
   	КонецЕсли;
   	
    Возврат глВсеВыбрано;	
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;

	Если ПлюсМинус = Перечисление.ПлюсМинус.Плюс Тогда
		глВыбранЛи(ВидКонтрагентаКуда,"не указан вид контрагента левой стороны");
		глВыбранЛи(СчетКуда,"не указан счет учета левой стороны");
		глВыбранЛи(КонтрагентКуда,"не указан контрагент левой стороны");
	ИначеЕсли ПлюсМинус = Перечисление.ПлюсМинус.Минус Тогда
		глВыбранЛи(ВидКонтрагентаОткуда,"не указан вид контрагента правой стороны");
		глВыбранЛи(СчетОткуда,"не указан счет учета правой стороны");
		глВыбранЛи(КонтрагентОткуда,"не указан контрагент правой стороны");	
	КонецЕсли;
	
    Возврат глВсеВыбрано;
КонецФункции

//======================================================================
Процедура ВыполнитьДвижение(Контрагент, Договор, КодОперации, СВал, СГрн, ВидДвижения, Покупатель)
	
	Договор_ = ?(Контрагент.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,Договор, Контрагент.БазДоговор); //  + umk заменим договор 
	
	Если Покупатель = 1 Тогда
		Регистр.ВзаиморасчетыПокупателей.ПривязыватьСтроку(НомерСтроки);
		Регистр.ВзаиморасчетыПокупателей.Фирма 				= Фирма;
		Регистр.ВзаиморасчетыПокупателей.КредДокумент 		= ТекущийДокумент();
		Регистр.ВзаиморасчетыПокупателей.Валюта 			= Валюта;
		Регистр.ВзаиморасчетыПокупателей.Контрагент 		= Контрагент;
		Регистр.ВзаиморасчетыПокупателей.Договор 			= Договор_;
		Регистр.ВзаиморасчетыПокупателей.СтавкаНДС 			= ВидНДС;
		Регистр.ВзаиморасчетыПокупателей.КодОперации 		= КодОперации;
		Регистр.ВзаиморасчетыПокупателей.Долг 				= СВал;
		Регистр.ВзаиморасчетыПокупателей.ДолгОсн 			= СГрн;
		Если ВидДвижения = 1 Тогда
			Регистр.ВзаиморасчетыПокупателей.ДвижениеРасходВыполнить();
		Иначе
			Регистр.ВзаиморасчетыПокупателей.ДвижениеПриходВыполнить();
		КонецЕсли;
	Иначе
		Регистр.ВзаиморасчетыПоставщиков.ПривязыватьСтроку(НомерСтроки);
		Регистр.ВзаиморасчетыПоставщиков.Фирма 				= Фирма;
		Регистр.ВзаиморасчетыПоставщиков.КредДокумент 		= ТекущийДокумент();
		Регистр.ВзаиморасчетыПоставщиков.Валюта 			= Валюта;
		Регистр.ВзаиморасчетыПоставщиков.Контрагент 		= Контрагент;
		Регистр.ВзаиморасчетыПоставщиков.Договор 			= Договор_;
		Регистр.ВзаиморасчетыПоставщиков.СтавкаНДС 			= ВидНДС;
		Регистр.ВзаиморасчетыПоставщиков.КодОперации 		= КодОперации;
		Регистр.ВзаиморасчетыПоставщиков.Долг 				= СВал;
		Регистр.ВзаиморасчетыПоставщиков.ДолгОсн 			= СГрн;
		Если ВидДвижения = 1 Тогда
			Регистр.ВзаиморасчетыПоставщиков.ДвижениеРасходВыполнить();			
		Иначе
			Регистр.ВзаиморасчетыПоставщиков.ДвижениеПриходВыполнить();			
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры // ВыполнитьДвижение

// ===============================
Процедура ПроводкиСтрока()	
	Если ПлюсМинус = Перечисление.ПлюсМинус.Плюс Тогда
		
		ДоговорКонтрагентаКуда_ = ?(КонтрагентКуда.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,ДоговорКонтрагентаКуда, КонтрагентКуда.БазДоговор); //  + umk заменим договор 
	
		
		Если Валюта = Гривня Тогда
			
			глПроводка(Контекст,СчетКуда,"00",СуммаГрн,"Перезачет средств",,
					КонтрагентКуда,ДоговорКонтрагентаКуда_,,
					,,, ,,"БК");
		Иначе				
			глПроводка(Контекст,СчетКуда,"00",СуммаГрн,"Перезачет средств",,
					КонтрагентКуда,ДоговорКонтрагентаКуда_,,
					,,,Валюта ,СуммаВал,"БК");					
		КонецЕсли;

		Если ВидКонтрагентаКуда = Перечисление.ВидыКлиентов.Покупатель Тогда
			Если (СуммаГрн = 0) И (СуммаВал = 0) Тогда
				ВыполнитьДвижение(КонтрагентКуда, ДоговорКонтрагентаКуда_, ПерезачетВзаиморасчетов, -0.01, -0.01, 1, 1);
				ВыполнитьДвижение(КонтрагентКуда, ДоговорКонтрагентаКуда_, ПерезачетВзаиморасчетов, 0.01, 0.01, 1, 1);
			Иначе
				ВыполнитьДвижение(КонтрагентКуда, ДоговорКонтрагентаКуда_, ПерезачетВзаиморасчетов, -СуммаВал, -СуммаГрн, 1, 1);
			КонецЕсли;			
		Иначе			
			Если (СуммаГрн = 0) И (СуммаВал = 0) Тогда
				ВыполнитьДвижение(КонтрагентКуда, ДоговорКонтрагентаКуда_, ПерезачетВзаиморасчетов, 0.01, 0.01, 0, 0);
				ВыполнитьДвижение(КонтрагентКуда, ДоговорКонтрагентаКуда_, ПерезачетВзаиморасчетов, -0.01, -0.01, 0, 0);				
			Иначе
				ВыполнитьДвижение(КонтрагентКуда, ДоговорКонтрагентаКуда_, ПерезачетВзаиморасчетов, СуммаВал, СуммаГрн, 0, 0);
			КонецЕсли;
			
			//====================================================================== //--- УМК Сандомирский В.Ю, (16.09.14)	движение ВзаиморасчетыПоставщиковР
			РегистрВзаиморасчетовР				= Регистр.ВзаиморасчетыПоставщиковР;
			РегистрВзаиморасчетовР.Фирма		= Фирма;
			РегистрВзаиморасчетовР.Контрагент	= КонтрагентКуда;
			РегистрВзаиморасчетовР.Валюта		= Валюта;
			РегистрВзаиморасчетовР.Долг			= СуммаВал;
			РегистрВзаиморасчетовР.ДолгОсн		= СуммаГрн;
			РегистрВзаиморасчетовР.КодОперации	= ПерезачетВзаиморасчетов;
			РегистрВзаиморасчетовР.Флаг_НУ 		= 8;  
			РегистрВзаиморасчетовР.СуммаСНДС_НУ	= СуммаГрн;
			РегистрВзаиморасчетовР.ДвижениеПриходВыполнить();					
		КонецЕсли;	
	ИначеЕсли ПлюсМинус = Перечисление.ПлюсМинус.Минус Тогда
		
		ДоговорКонтрагентаОткуда_ = ?(КонтрагентОткуда.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,ДоговорКонтрагентаОткуда, КонтрагентОткуда.БазДоговор); //  + umk заменим договор 
	
		Если Валюта = Гривня Тогда
			глПроводка(Контекст,"00",СчетОткуда,СуммаГрн,"Перезачет средств",,
					,,,
					КонтрагентОткуда,ДоговорКонтрагентаОткуда_,, ,,"БК");
		Иначе		
			глПроводка(Контекст,"00",СчетОткуда,СуммаГрн,"Перезачет средств",,
					,,,
					КонтрагентОткуда,ДоговорКонтрагентаОткуда_,,Валюта ,СуммаВал,"БК");					
		КонецЕсли;
					
		Если ВидКонтрагентаОткуда = Перечисление.ВидыКлиентов.Покупатель Тогда		
			Если (СуммаГрн = 0) И (СуммаВал = 0) Тогда
				ВыполнитьДвижение(КонтрагентОткуда, ДоговорКонтрагентаОткуда_, ПерезачетВзаиморасчетов, 0.01, 0.01, 1, 1);
				ВыполнитьДвижение(КонтрагентОткуда, ДоговорКонтрагентаОткуда_, ПерезачетВзаиморасчетов, -0.01, -0.01, 1, 1);
			Иначе				
				ВыполнитьДвижение(КонтрагентОткуда, ДоговорКонтрагентаОткуда_, ПерезачетВзаиморасчетов, СуммаВал, СуммаГрн, 1, 1);
			КонецЕсли;
		Иначе
			Если (СуммаГрн = 0) И (СуммаВал = 0) Тогда
				ВыполнитьДвижение(КонтрагентОткуда, ДоговорКонтрагентаОткуда_, ПерезачетВзаиморасчетов, 0.01, 0.01, 0, 0);
				ВыполнитьДвижение(КонтрагентОткуда, ДоговорКонтрагентаОткуда_, ПерезачетВзаиморасчетов, -0.01, -0.01, 0, 0);
			Иначе				
				ВыполнитьДвижение(КонтрагентОткуда, ДоговорКонтрагентаОткуда_, ПерезачетВзаиморасчетов, -СуммаВал, -СуммаГрн, 0, 0);
			КонецЕсли;
			//====================================================================== //--- УМК Сандомирский В.Ю, (16.09.14)	движение ВзаиморасчетыПоставщиковР
			РегистрВзаиморасчетовР				= Регистр.ВзаиморасчетыПоставщиковР;
			РегистрВзаиморасчетовР.Фирма		= Фирма;
			РегистрВзаиморасчетовР.Контрагент	= КонтрагентОткуда;
			РегистрВзаиморасчетовР.Валюта		= Валюта;
			РегистрВзаиморасчетовР.Долг			= -СуммаВал;
			РегистрВзаиморасчетовР.ДолгОсн		= -СуммаГрн;
			РегистрВзаиморасчетовР.КодОперации	= ПерезачетВзаиморасчетов;
			РегистрВзаиморасчетовР.Флаг_НУ 		= 8;  
			РегистрВзаиморасчетовР.СуммаСНДС_НУ	= -СуммаГрн;
			РегистрВзаиморасчетовР.ДвижениеПриходВыполнить();						
		КонецЕсли;				
	КонецЕсли;	
КонецПроцедуры
    
// ===============================
Процедура ОбработкаПроведения()
	
	// + umk Подготовим таблицы 
	
	//основных партнеров
	ТабОсновныеПартнеры = СоздатьОбъект("ТаблицаЗначений");
	ТабОсновныеПартнеры.НоваяКолонка("Контрагент");
	ТабОсновныеПартнеры.НоваяКолонка("Партнер");
	
	//остатков бонусов 
	ТабОстаткиРасчетовБонусы = СоздатьОбъект("ТаблицаЗначений");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("КонтрагентРасчетов");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("Договор");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("ВидДвижения");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("Сумма");
	ТабОстаткиРасчетовБонусы.НоваяКолонка("Долг");
	
	// - umk
	
	глКомментарий("Начало",2,Контекст);

	Если ПроверкаШапки()=0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки()=0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	КонецЦикла;
		
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		ПроводкиСтрока();
	КонецЦикла;
	
	РассчитатьВзаиморасчеты(); // + umk
	
	ДвижениеОстаткиРасчетовБонус();// + umk
	
	Если ЗачетДолгаБонус = Истина Тогда // + umk Если зачет долга не в рамках одного контрагента
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ДвижениеБонусов(); 	
		КонецЦикла;
	КонецЕсли;
	

	
	
	//Если глТаблицаСчетов.КоличествоСтрок() > 0 Тогда
	//    глПереоценкаСчетов(Контекст, глТаблицаСчетов, "БК");
	//КонецЕсли;
	
	Операция.СуммаОперации = Итог("СуммаГрн");
	Операция.Содержание = Примечание;
	Операция.Записать();
	
	
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

КассовыйМетодБонусы = ?((ПустоеЗначение(Константа.КассовыйМетодРасчетаБонусов)=0) И (ДатаДок>=Константа.КассовыйМетодРасчетаБонусов),1,0); // + umk
Валюта = Гривня; // + umk
ФлРучногоИзмСхемыРБ = 1; // + umk