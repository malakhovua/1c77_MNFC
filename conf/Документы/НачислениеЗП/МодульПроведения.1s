Перем НачалоПериода, КонецПериода;

Перем НиО, ноПенсионный, ноПенсионныйИнв, ноБезработица, ноСоцСтрах, ноСтрахНесч;
Перем ВидЗатратПенсионный,ВидЗатратБезработица, ВидЗатратСоцСтрах,ВидЗатратСтрахНесч;
Перем МаксБазаПен, МаксБазаПенИнв, МаксБазаБез, МаксБазаСоц, МаксБазаНесч;
Перем стПенОрг, стПенИнвОрг, стБзрОрг, стСоцОрг, стНесчОрг;

Перем ноПенсионныйСотр1, ноПенсионныйСотр2, ноБезработицаСотр, ноПрофсоюзныйСотр;
Перем ноСтрахНетрудоспСотр1, ноСтрахНетрудоспСотр2, ноСоцстрБольничн;

Перем ПенсионныйПроц1, ПенсионныйПроц2;
Перем СтрахНетрудоспПроц1, СтрахНетрудоспПроц2;

Перем ТаблЗатр, ТаблСотр, ТаблЗатр23, ТекСчетЗатрат;

Перем КвоНач;

Перем Под, ВиД;

Перем Ит;

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(ВидНачисления,"Вид начисления");
	Если ВидНачисления = ОсновнаяЗП Тогда
		//Если глПроверитьАналитикуПоЗатратам(Подразделение,ВидДеятельности,0,0) = 0 Тогда
		//	глВсеВыбрано = 0;
		//КонецЕсли;
		глВыбранЛи(ВалРасхЗарплата,"Валовые расходы по зарплате");
		глВыбранЛи(ВалРасхОтчисления,"Валовые расходы по отчислениям");
		глВыбранЛи(ВидЗатратЗарплата,"Вид затрат по зарплате");
		глВыбранЛи(ВидЗатратПремии,"Вид затрат по премиям");
		глВыбранЛи(ВидЗатратОтпускные,"Вид затрат по отпускным");
		глВыбранЛи(ВидЗатратБольничные,"Вид затрат по больничным");
		глВыбранЛи(ВидЗатратПрочие,"Вид затрат по прочим начислениям");
		Если ИспользоватьСчетаРасходов <> Класс9 Тогда
			глВыбранЛи(ВидЗатратЗарплата.Счет,"Счет 8-го класса для вида затрат по зарплате");
			глВыбранЛи(ВидЗатратПремии.Счет,"Счет 8-го класса для вида затрат по премиям");
			глВыбранЛи(ВидЗатратОтпускные.Счет,"Счет 8-го класса для вида затрат по отпускным");
			глВыбранЛи(ВидЗатратБольничные.Счет,"Счет 8-го класса для вида затрат по больничным");
			глВыбранЛи(ВидЗатратПрочие.Счет,"Счет 8-го класса для вида затрат по прочим начислениям");
		КонецЕсли;
		Для НомНач = 1 по КвоНач Цикл
			Начисл = ПолучитьАтрибут("Начисл"+НомНач);
			Если ПустоеЗначение(Начисл) = 0 Тогда
				ВидЗатрат = ПолучитьАтрибут("ВидЗатратНачисл"+НомНач);
				глВыбранЛи(ВидЗатрат,"Вид затрат для произвольного начисления "+НомНач+" ("+Начисл+")");
				Если ИспользоватьСчетаРасходов <> Класс9 Тогда
					глВыбранЛи(ВидЗатрат.Счет,"Счет 8-го класса для вида затрат по произвольному начислению "+НомНач+" ("+Начисл+")");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
    глВыбранЛи(Сотрудник,"Сотрудник",НомерСтроки);
	Если глВсеВыбрано = 1 Тогда
		Если Сотрудник.Фирма <> Фирма Тогда
			глКомментарий("Сотрудник " +Сотрудник+ " (строка "+НомерСтроки+") работает в другой фирме!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
		ТекСчетЗатрат = Сотрудник.СчетЗатрат.Получить(КонМесяца(ДатаДок));
		Если ПустоеЗначение(ТекСчетЗатрат) = 1 Тогда
			Если ИспользоватьСчетаРасходов <> Класс8 Тогда
				// Счет затрат для сотрудника не задан.
				// Если используется только 9 класс счетов, или и 8 и 9 классы -
				// установим по умолчанию 91 счет
		        глКомментарий("Для сотрудника "+Сотрудник+" в строке "+НомерСтроки+" не задан счет затрат. Используется 91 счет затрат.",1,,"I");
				ТекСчетЗатрат = СчетПоКоду("91");
				// Если используется только 8 класс счетов, тогда счет в проводку
				// будет подставлен из аналитики ВидЗатрат по этой проводке
				// в глоб. процедуре глПроводкаПоЗатратам()
			КонецЕсли;
		ИначеЕсли ИспользоватьСчетаРасходов = Класс8 Тогда
			Если Лев(ТекСчетЗатрат.Код, 1) = "9" Тогда
		        глКомментарий("Для сотрудника "+Сотрудник+" в строке "+НомерСтроки+" задан счет затрат 9 класса!",0,,"!");
		        глКомментарий("   Счета 9 класса не используются. Проверьте счет затрат у сотрудника и константу ""Использовать счета расходов"".",0,,"!");
				глВсеВыбрано = 0;
			ИначеЕсли Лев(ТекСчетЗатрат.Код, 1) = "8" Тогда
		        глКомментарий("Для сотрудника "+Сотрудник+" в строке "+НомерСтроки+" задан счет затрат 8 класса!",0,,"!");
		        глКомментарий("   Используются счета только 8 класса. В этом случае счет затрат в справочнике Сотрудники должен быть не заполнен. Проверьте счет затрат у сотрудника и константу ""Использовать счета расходов"".",0,,"!");
				глВсеВыбрано = 0;
			КонецЕсли;
		ИначеЕсли (Лев(ТекСчетЗатрат.Код, 1) = "8") и (ИспользоватьСчетаРасходов = Класс9) Тогда
	        глКомментарий("Для сотрудника "+Сотрудник+" в строке "+НомерСтроки+" задан счет затрат 8 класса!",0,,"!");
	        глКомментарий("   Счета 8 класса не используются. Проверьте счет затрат у сотрудника и константу ""Использовать счета расходов"".",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	
	Если (Начислено <= 0) И (НачисленоЗаПериод > 0) Тогда
		Сообщить("Сотруднику " +Сотрудник+" в строке "+НомерСтроки+ " были начисления в расчетном периоде ");
		глВсеВыбрано = 0;
	КонецЕсли;
	
    Возврат глВсеВыбрано;
КонецФункции

// ===============================
// разбиваем базу для отчисления в фонд между "из затрат" и "из прибыли"
Процедура РаспределитьМеждуЗатрИПриб(БазаЗатр,БазаПриб,ИтогоЗатр,ИтогоПриб,МаксБаза)
	Если БазаЗатр+БазаПриб > МаксБаза Тогда
	    // собственно и нужно распределить, разбиваем пропорционально
		Коэф = МаксБаза / (БазаЗатр + БазаПриб);
		ИтогоЗатр = Окр(Коэф*БазаЗатр,2);
		ИтогоПриб = МаксБаза - Окр(Коэф*БазаЗатр,2);
	Иначе
		ИтогоЗатр = БазаЗатр;
		ИтогоПриб = БазаПриб;
	КонецЕсли;
КонецПроцедуры

// ===============================
// Назначение:
// 		разбиваем базу для отчисления в фонд между "из затрат" и "из прибыли"
//		а затем полученную базу "из затрат" распределяем между видами деятельности
//		и подразделениями
// Аргументы:
//		ВидОтчисления	- идентификатор колонки таблицы ТаблЗатр для данного отчисления
//		МаксБаза		- макс. база для данного отчисления
Процедура РаспределитьМеждуСтрокТаблицы(ВидОтчисления,МаксБаза)
Перем Затр, Приб;
	
	ОблагаемоеЗатр = ТаблСотр.Итог("НачисленоЗатр");
	ОблагаемоеПриб = ТаблСотр.Итог("НачисленоПриб");
	РаспределитьМеждуЗатрИПриб(ОблагаемоеЗатр,ОблагаемоеПриб,Затр,Приб,МаксБаза);
	// базу из затрат распределим пропорционально между всеми строками таблицы
	// (т.е. между видами деятельности и подразделениями)
	ТаблСотр.ВыбратьСтроки();
	Пока ТаблСотр.ПолучитьСтроку() = 1 Цикл
		Если Затр = 0 Тогда
			ТаблСотр.БазаЗатр = 0;
		Иначе
			ТаблСотр.БазаЗатр = ТаблСотр.НачисленоЗатр * Затр / ОблагаемоеЗатр;
		КонецЕсли;
	КонецЦикла;
	ТаблСотр.ПолучитьСтрокуПоНомеру(1); // 1-я строка - по начислениям из документа,
	ТаблСотр.БазаПриб = Приб;			// начисления за счет прибыли есть только в
										// этой строке, это ОблагаемаяМатПомощь
	Если Затр <> ТаблСотр.Итог("БазаЗатр") Тогда
		// по затратам: если есть дельта - отнесем ее в первую строку
		ТаблСотр.БазаЗатр = ТаблСотр.БазаЗатр + (Затр - ТаблСотр.Итог("БазаЗатр"));
	КонецЕсли;	

	// перенесем полученные данные в общую таблицу по отчислениям в фонды
	ТаблСотр.ВыбратьСтроки();
	Пока ТаблСотр.ПолучитьСтроку() = 1 Цикл
		ТаблЗатр.НоваяСтрока();
		Если ТаблСотр.НомерСтроки = 1 Тогда
			// в 1-й строке таблицы содержатся суммы из документа (не сдельные начисления)
			// они относятся на счет затрат, указанный для сотрудника
			ТаблЗатр.СчетЗатрат = ТекСчетЗатрат;
		Иначе
			// все остальные строки таблицы - сдельные начисления
			// всегда относим на 23 счет
			ТаблЗатр.СчетЗатрат = СчетПоКоду("231");
		КонецЕсли;
		ТаблЗатр.ВидДеятельности = ТаблСотр.ВидДеятельности;
		ТаблЗатр.Подразделение = ТаблСотр.Подразделение;
		ТаблЗатр.УстановитьЗначение(ТаблЗатр.НомерСтроки,ВидОтчисления+"Затр",ТаблСотр.БазаЗатр);
		ТаблЗатр.УстановитьЗначение(ТаблЗатр.НомерСтроки,ВидОтчисления+"Приб",ТаблСотр.БазаПриб);
	КонецЦикла;
КонецПроцедуры //РаспределитьМеждуСтрокТаблицы()

// ===============================
Функция ПолучитьЭлементШкалыСтавок(Элемент,КодЭлемента,ВидЗатрат="",Сообщение)
	Если глПолучитьНиО(Элемент,КодЭлемента,Сообщение) = 0 Тогда
	    Возврат 0;
	КонецЕсли;
	Если ТипЗначенияСтр(ВидЗатрат) <> "Строка" Тогда
		// нужно прочитать из справочника ВидЗатрат
		Если (ПустоеЗначение(Элемент.ВидЗатрат) = 1) Тогда
			глКомментарий("В справочнике ""Шкала ставок налогов"" не заполнен вид затрат для "+Элемент+" (сведения "+Сообщение+")",0);
	    	Возврат 0;
		КонецЕсли;
		ВидЗатрат = Элемент.ВидЗатрат;
	КонецЕсли;
	Возврат 1;
КонецФункции //ПолучитьЭлементШкалыСтавок

//Рабочими днями считаются дни с понедельника по пятницу.
//Учет графиков работы и праздничных дней не ведется
// ===============================
Функция КвоРабочихДней(НачДата,КонДата)
	ТекДата = НачДата;
	РабДней = 0;
	Пока ТекДата<КонДата Цикл
		ДН=НомерДняНедели(ТекДата);
		Если НЕ((ДН=6) ИЛИ (ДН=7)) Тогда
			РабДней=РабДней+1;
		КонецЕсли;
		ТекДата = ТекДата + 1;
	КонецЦикла;
	Возврат РабДней;
КонецФункции

// ======================================
Функция ПолучитьСтавку(ИмяПараметра)
	Если НиО.НайтиПоКоду(ИмяПараметра) = 1 Тогда
		// есть такой налог
		ПерСтавка = СоздатьОбъект("Периодический");
		ПерСтавка.ИспользоватьОбъект("Ставка",НиО);
		ПерСтавка.ВыбратьЗначения(НачалоПериода+1, КонецПериода);
		Ставка = 0;
		СтавкаПред = НиО.Ставка.Получить(НачалоПериода);
		НачалоПериодаСтавки = НачалоПериода;
		
		Пока ПерСтавка.ПолучитьЗначение() = 1 Цикл
			РабДней = КвоРабочихДней(НачалоПериодаСтавки,ПерСтавка.ДатаЗнач);
			
			Ставка = Ставка + СтавкаПред * РабДней;
			СтавкаПред = ПерСтавка.Значение;
			НачалоПериодаСтавки = ПерСтавка.ДатаЗнач;
		КонецЦикла;
		
		РабДней = КвоРабочихДней(НачалоПериодаСтавки,КонецПериода+1);
						
		Ставка = Ставка + СтавкаПред * РабДней;
		РабДнейВсего = КвоРабочихДней(НачалоПериода,КонецПериода+1);
		Ставка = Ставка / РабДнейВсего;
		
		Возврат Ставка;
	КонецЕсли;
	Возврат 0;
КонецФункции 

// ===============================
Процедура РассчитатьШапку()
	КонецПериода = КонМесяца(ДатаДок);
	НачалоПериода = НачМесяца(ДатаДок);  
	
	НиО = СоздатьОбъект("Справочник.ШкалаСтавок");
	
	Если ПолучитьЭлементШкалыСтавок(ноПенсионныйСотр1,"Пенс1пред",,"об отчислениях в ПФ с сотрудника (1 процент)!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноПенсионныйСотр2,"Пенс2пред",,"об отчислениях в ПФ с сотрудника (2 процента)!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноСтрахНетрудоспСотр1,"СотрНетрудосп1",,"об отчислениях в фонд страх. по временной нетрудоспособности с сотрудника (0.25%)!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноСтрахНетрудоспСотр2,"СотрНетрудосп2",,"об отчислениях в фонд страх. по временной нетрудоспособности с сотрудника (0.5%)!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноСоцстрБольничн,"СоцстрБольничн",,"об аналитике по оплате больничных за счет соц. страха!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноБезработицаСотр,"СотрБезраб",,"об отчислениях в фонд страх. от безработицы с сотрудника!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноПрофсоюзныйСотр,"СотрПрофсоюз",,"об отчислениях в профсоюз с сотрудника!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноПенсионный,"ФЗППенс",ВидЗатратПенсионный,"об отчислениях в ПФ с фонда заработной платы!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноПенсионныйИнв,"ФЗППенсИнв",ВидЗатратПенсионный,"об отчислениях в ПФ с фонда заработной платы (инвалиды)!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноБезработица,"ФЗПБезраб",ВидЗатратБезработица,"об отчислениях в фонд страх. от безработицы с фонда заработной платы!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноСоцСтрах,"ФЗПСоцСтрах",ВидЗатратСоцСтрах,"об отчислениях в фонд социального страхования с фонда заработной платы!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	Если ПолучитьЭлементШкалыСтавок(ноСтрахНесч,"ФЗПСоцСтрахНесч",ВидЗатратСтрахНесч,"об отчислениях в фонд страх. от несчастного случая с фонда заработной платы!") = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	
	// получаем средние значения ставок за месяц
	стПенОрг = ПолучитьСтавку("ФЗППенс");
	стПенИнвОрг = ПолучитьСтавку("ФЗППенсИнв");
	стБзрОрг = ПолучитьСтавку("ФЗПБезраб");
	стСоцОрг = ПолучитьСтавку("ФЗПСоцСтрах");
	стНесчОрг = ПолучитьСтавку("ФЗПСоцСтрахНесч");
	
	Спис = СоздатьОбъект("СписокЗначений");
	глПарсить(ноБезработица.Дополнительно.Получить(КонецПериода),Спис);
	МаксБазаБез = Число(Спис.Получить("Макс. база"));
	глПарсить(ноПенсионный.Дополнительно.Получить(КонецПериода),Спис);
	МаксБазаПен = Число(Спис.Получить("Макс. база"));
	глПарсить(ноПенсионныйИнв.Дополнительно.Получить(КонецПериода),Спис);
	МаксБазаПенИнв = Число(Спис.Получить("Макс. база"));
	глПарсить(ноСоцстрах.Дополнительно.Получить(КонецПериода),Спис);
	МаксБазаСоц = Число(Спис.Получить("Макс. база"));
	глПарсить(ноСтрахНесч.Дополнительно.Получить(КонецПериода),Спис);
	МаксБазаНесч = Число(Спис.Получить("Макс. база"));

	МаксБазаБез = ?(МаксБазаБез = 0, 999999999, МаксБазаБез);
	МаксБазаПен = ?(МаксБазаПен = 0, 999999999, МаксБазаПен);
	МаксБазаПенИнв = ?(МаксБазаПенИнв = 0, 999999999, МаксБазаПенИнв);
	МаксБазаСоц = ?(МаксБазаСоц = 0, 999999999, МаксБазаСоц);
	МаксБазаНесч = ?(МаксБазаНесч = 0, 999999999, МаксБазаНесч);
	
	ТаблЗатр = СоздатьОбъект("ТаблицаЗначений");
	ТаблЗатр.НоваяКолонка("СчетЗатрат","Счет");
	ТаблЗатр.НоваяКолонка("ВидДеятельности","Справочник.ВидыДеятельности");
	ТаблЗатр.НоваяКолонка("Подразделение","Справочник.Подразделения");
	ТаблЗатр.НоваяКолонка("ОблагаемоеБезЗатр","Число",12,2);
	ТаблЗатр.НоваяКолонка("ОблагаемоеПенЗатр","Число",12,2);
	ТаблЗатр.НоваяКолонка("ОблагаемоеПенИнвЗатр","Число",12,2);
	ТаблЗатр.НоваяКолонка("ОблагаемоеСоцЗатр","Число",12,2);
	ТаблЗатр.НоваяКолонка("ОблагаемоеНесчЗатр","Число",12,2);
	ТаблЗатр.НоваяКолонка("ОблагаемоеБезПриб","Число",12,2);
	ТаблЗатр.НоваяКолонка("ОблагаемоеПенПриб","Число",12,2);
	ТаблЗатр.НоваяКолонка("ОблагаемоеПенИнвПриб","Число",12,2);
	ТаблЗатр.НоваяКолонка("ОблагаемоеСоцПриб","Число",12,2);
	ТаблЗатр.НоваяКолонка("ОблагаемоеНесчПриб","Число",12,2);

	ТаблСотр = СоздатьОбъект("ТаблицаЗначений");
	ТаблСотр.НоваяКолонка("ВидДеятельности","Справочник.ВидыДеятельности");
	ТаблСотр.НоваяКолонка("Подразделение","Справочник.Подразделения");
	ТаблСотр.НоваяКолонка("НачисленоЗатр","Число",12,2);
	ТаблСотр.НоваяКолонка("НачисленоПриб","Число",12,2);
	ТаблСотр.НоваяКолонка("БазаЗатр","Число",12,2);
	ТаблСотр.НоваяКолонка("БазаПриб","Число",12,2);
	
	ТаблЗатр23 = СоздатьОбъект("ТаблицаЗначений");
	ТаблЗатр23.НоваяКолонка("ВидДеятельности","Справочник.ВидыДеятельности");
	ТаблЗатр23.НоваяКолонка("Подразделение","Справочник.Подразделения");
	ТаблЗатр23.НоваяКолонка("ВидЗатрат","Справочник.ВидыЗатрат");
	ТаблЗатр23.НоваяКолонка("Сумма","Число",12,2);

	// суммы по сдельным начислениям
	НачПериода = НачМесяца(ДатаДок); 
	КонПериода = СформироватьПозициюДокумента(ТекущийДокумент(),-1);
	
	Если ИспользоватьСчетаРасходов <> Класс9 Тогда
		КоррСч = "81";
	Иначе
		КоррСч = "23";
	КонецЕсли;
	
	спСотрудники = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(спСотрудники,"Сотрудник");
		
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ИспользоватьСубконто(ВидыСубконто.Сотрудники, спСотрудники);
	Ит.ИспользоватьСубконто(ВидыСубконто.МесяцНачисленияЗП);
	Ит.ИспользоватьКорСубконто(ВидыСубконто.ВидыДеятельности);
	Ит.ИспользоватьКорСубконто(ВидыСубконто.Подразделения);
	Ит.ВыполнитьЗапрос(НачПериода,КонПериода,"661",КоррСч,,2);
КонецПроцедуры

// ===============================
Процедура РассчитатьСтроку()
	// Подразделение и ВидДеятельности берем из документа, 
	// а если они не указаны - из Сотрудника
	Под = ?(Подразделение.Выбран()=1, Подразделение, Сотрудник.Подразделение);
	ВиД = ?(ВидДеятельности.Выбран()=1, ВидДеятельности, Сотрудник.ВидДеятельности.Получить(ДатаДок));
	
	ТаблСотр.УдалитьСтроки();
	// суммы по не сдельным начислениям, т.е. суммы из документа
	ТаблСотр.НоваяСтрока();
	ТаблСотр.ВидДеятельности = ВиД;
	ТаблСотр.Подразделение = Под;
	ТаблСотр.НачисленоЗатр = Оклад + Тариф + Премия + Отпускные;
	Для НомНач = 1 по КвоНач Цикл
		ТаблСотр.НачисленоЗатр = ТаблСотр.НачисленоЗатр + Получитьатрибут("СуммаНачисл"+НомНач);
	КонецЦикла;
	ТаблСотр.НачисленоПриб = ОблагаемаяМатПомощь;
	
	//// суммы по сдельным начислениям
	//СуммаСдельных = 0;
	//Если Ит.ПолучитьСубконто(1,,Сотрудник) = 1 Тогда
	//    СуммаСдельных = Ит.КО();
	//	Ит.ВыбратьКорСубконто(1);
	//	Пока Ит.ПолучитьКорСубконто(1) = 1 Цикл
	//		Ит.ВыбратьКорСубконто(2);
	//		Пока Ит.ПолучитьКорСубконто(2) = 1 Цикл
	//			ТаблСотр.НоваяСтрока();
	//			ТаблСотр.ВидДеятельности = Ит.КорСубконто(1);
	//			ТаблСотр.Подразделение = Ит.КорСубконто(2);
	//			ТаблСотр.НачисленоЗатр = Ит.КорКО();
	//		КонецЦикла;
	//	КонецЦикла;
	//КонецЕсли;
	//Если Сдельно <> СуммаСдельных Тогда
	//	глКомментарий("Сумма сдельных начислений не совпадает с указанной в документе для сотрудника "+Сотрудник+", строка "+НомерСтроки,0);
	//	глНеПроводить(Контекст);
	//    Возврат;
	//КонецЕсли;
	       
	// Распределим пропорционально между затратами и прибылью
	// в пенсионный фонд от фонда з/п
	Если Сотрудник.Инвалид.Получить(КонецПериода)=1 Тогда
		РаспределитьМеждуСтрокТаблицы("ОблагаемоеПенИнв",МаксБазаПенИнв);
	Иначе
		РаспределитьМеждуСтрокТаблицы("ОблагаемоеПен",МаксБазаПен);
	КонецЕсли;

	// в фонд безработицы от фонда з/п
	РаспределитьМеждуСтрокТаблицы("ОблагаемоеБез",МаксБазаБез);
	
	// в фонд социального страхования от фонда з/п
	РаспределитьМеждуСтрокТаблицы("ОблагаемоеСоц",МаксБазаСоц);
	                                                                                    
	// в фонд соц. страхования от несч. случая от фонда з/п
	РаспределитьМеждуСтрокТаблицы("ОблагаемоеНесч",МаксБазаНесч);
	
	// определим сумму 1 и 2 процентов по пенсионному фонду
	Если Пенсионный <= ноПенсионныйСотр1.Предел.Получить(КонецПериода)*ноПенсионныйСотр1.Ставка.Получить(КонецПериода) Тогда
	    ПенсионныйПроц1 = Пенсионный;
		ПенсионныйПроц2 = 0;
	Иначе
		ПенсионныйПроц2 = Пенсионный;
		ПенсионныйПроц1 = 0;
	КонецЕсли;

	// определим сумму 0.25 и 0.5 процентов по соцстраху
	Если СтрахНетрудосп <= Окр(ноСтрахНетрудоспСотр1.Предел.Получить(КонецПериода)*ноСтрахНетрудоспСотр1.Ставка.Получить(КонецПериода),2) Тогда
	    СтрахНетрудоспПроц1 = СтрахНетрудосп;
		СтрахНетрудоспПроц2 = 0;
	Иначе
		СтрахНетрудоспПроц2 = СтрахНетрудосп;
		СтрахНетрудоспПроц1 = 0;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПроводкиСтрока()
	Если ВидНачисления = ОсновнаяЗП Тогда
		// Начисления:
		
		//--- УМК Сандомирский В.Ю, (22.07.14)
		Сумма661 = Оклад+Тариф-НачисленоЗаПериод;
		Если (ПустоеЗначение(Константа.УМК_ДатаОбрезанияЦелойЧастиНачисленияЗП) <> 1) И (Константа.УМК_ДатаОбрезанияЦелойЧастиНачисленияЗП <= ДатаДок) Тогда //--- УМК Сандомирский В.Ю. (24.06.14) учет производственных затрат в кутерах
			Сумма661 = Цел(Сумма661);
		КонецЕсли;
		
		// оклад, тариф
		глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"661",Сумма661,"Начисление: оклад, тариф",, ВиД,Под,ВидЗатратЗарплата,  // --- УМК Сандомирский В.Ю. (10.07.14) Было начислено в расчетном периоде но не этим документом
		Сотрудник,МесяцНачисленияЗП,, ,,"ЗП");
		
		// Премия
		глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"661",Премия,"Начисление: премия",, ВиД,Под,ВидЗатратПремии,
		Сотрудник,МесяцНачисленияЗП,, ,,"ЗП");
		
		// Отпускные
		глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"661",Отпускные,"Начисление: отпускные",, ВиД,Под,ВидЗатратОтпускные,
		Сотрудник,МесяцНачисленияЗП,, ,,"ЗП");
		
		// Больничные из фонда соц страхования
		глПроводка(Контекст,"65.2","661",Больничные,"Начисление: больничные из фонда соц. страхования",, ноСоцстрБольничн,,,
		Сотрудник,МесяцНачисленияЗП,, ,,"ЗП");
		
		// Больничные за счет предприятия
		глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"661",БольничныеЗаСчетпредприятия,"Начисление: больничные за счет предприятия",, ВиД,Под,ВидЗатратБольничные,
		Сотрудник,МесяцНачисленияЗП,, ,,"ЗП");
		
		// Мат. помощь
		глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"661",НеоблагаемаяМатПомощь+ОблагаемаяМатПомощь,"Начисление: мат. помощь",, ВиД,Под,ВидЗатратПрочие,
		Сотрудник,МесяцНачисленияЗП,, ,,"ЗП");
		
		// произвольные начисления
		Для НомНач = 1 по КвоНач Цикл
			Начисл = ПолучитьАтрибут("Начисл"+НомНач);
			Если ПустоеЗначение(Начисл) = 1 Тогда
				// произвольные начисления могут быть не выбраны
				Продолжить;
			КонецЕсли;
			ВидЗатрат = ПолучитьАтрибут("ВидЗатратНачисл"+НомНач);
			СумНач = ПолучитьАтрибут("СуммаНачисл"+НомНач);
			
			глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"661",СумНач,"Начисление: "+Начисл,, ВиД,Под,ВидЗатрат,
			Сотрудник,МесяцНачисленияЗП,, ,,"ЗП");
		КонецЦикла;
		
		Если Лев(ТекСчетЗатрат.Код, 2) = "23" Тогда
			// запомним суммы проводок по 23 счету для дальнейшего 
			// формирования движений по регистру ПроизводственныеЗатраты
			
			Если (Сумма661) <> 0 Тогда // --- УМК Сандомирский В.Ю. (10.07.14) Было начислено в расчетном периоде но не этим документом
				// по окладу и тарифу
				ТаблЗатр23.НоваяСтрока();
				ТаблЗатр23.ВидДеятельности = ВиД;
				ТаблЗатр23.Подразделение = Под;
				ТаблЗатр23.ВидЗатрат = ВидЗатратЗарплата;
				ТаблЗатр23.Сумма = Сумма661;
			КонецЕсли;
			Если Премия <> 0 Тогда
				// по премиям
				ТаблЗатр23.НоваяСтрока();
				ТаблЗатр23.ВидДеятельности = ВиД;
				ТаблЗатр23.Подразделение = Под;
				ТаблЗатр23.ВидЗатрат = ВидЗатратПремии;
				ТаблЗатр23.Сумма = Премия;
			КонецЕсли;
			Если Отпускные <> 0 Тогда
				// по отпускным
				ТаблЗатр23.НоваяСтрока();
				ТаблЗатр23.ВидДеятельности = ВиД;
				ТаблЗатр23.Подразделение = Под;
				ТаблЗатр23.ВидЗатрат = ВидЗатратОтпускные;
				ТаблЗатр23.Сумма = Отпускные;
			КонецЕсли;
			Если БольничныеЗаСчетПредприятия <> 0 Тогда
				// по больничным
				ТаблЗатр23.НоваяСтрока();
				ТаблЗатр23.ВидДеятельности = ВиД;
				ТаблЗатр23.Подразделение = Под;
				ТаблЗатр23.ВидЗатрат = ВидЗатратБольничные;
				ТаблЗатр23.Сумма = БольничныеЗаСчетПредприятия;
			КонецЕсли;
			Если (НеоблагаемаяМатПомощь + ОблагаемаяМатПомощь) <> 0 Тогда
				// по мат. помощи
				ТаблЗатр23.НоваяСтрока();
				ТаблЗатр23.ВидДеятельности = ВиД;
				ТаблЗатр23.Подразделение = Под;
				ТаблЗатр23.ВидЗатрат = ВидЗатратПрочие;
				ТаблЗатр23.Сумма = НеоблагаемаяМатПомощь + ОблагаемаяМатПомощь;
			КонецЕсли;
			// по произвольным начислениям
			Для НомНач = 1 по КвоНач Цикл
				Начисл = ПолучитьАтрибут("Начисл"+НомНач);
				Если ПустоеЗначение(Начисл) = 1 Тогда
					// произвольные начисления могут быть не выбраны
					Продолжить;
				КонецЕсли;
				Если ПолучитьАтрибут("СуммаНачисл"+НомНач) <> 0 Тогда
					ТаблЗатр23.НоваяСтрока();
					ТаблЗатр23.ВидДеятельности = ВиД;
					ТаблЗатр23.Подразделение = Под;
					ТаблЗатр23.ВидЗатрат = ПолучитьАтрибут("ВидЗатратНачисл"+НомНач);
					ТаблЗатр23.Сумма = ПолучитьАтрибут("СуммаНачисл"+НомНач);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		// Удержания
		глПроводка(Контекст,"661","65.1",ПенсионныйПроц1,"Удержание: пенсионный, 1%",, Сотрудник,МесяцНачисленияЗП,,
		ноПенсионныйСотр1,,, ,,"ЗП");
		глПроводка(Контекст,"661","65.1",ПенсионныйПроц2,"Удержание: пенсионный, 2%",, Сотрудник,МесяцНачисленияЗП,,
		ноПенсионныйСотр2,,, ,,"ЗП");
		глПроводка(Контекст,"661","65.2",СтрахНетрудоспПроц1,"Удержание: соц.страх (нетрудосп.), 0.25%",, Сотрудник,МесяцНачисленияЗП,,
		ноСтрахНетрудоспСотр1,,, ,,"ЗП");
		глПроводка(Контекст,"661","65.2",СтрахНетрудоспПроц2,"Удержание: соц.страх (нетрудосп.), 0.5%",, Сотрудник,МесяцНачисленияЗП,,
		ноСтрахНетрудоспСотр2,,, ,,"ЗП");
		глПроводка(Контекст,"661","64.1.1",Подоходный,"Удержание: подоходный",, Сотрудник,МесяцНачисленияЗП,,
		,,, ,,"ЗП");
		глПроводка(Контекст,"661","65.3",Безработица,"Удержание: страхование от безработицы",, Сотрудник,МесяцНачисленияЗП,,
		ноБезработицаСотр,,, ,,"ЗП");
		глПроводка(Контекст,"661","71.5",Штраф,"Удержание: штрафные санкции",, Сотрудник,МесяцНачисленияЗП,,
		,,, ,,"ЗП");
		
		//--- Было
		//глПроводка(Контекст,"661","64.2.6",Профсоюзный,"Удержание: профсоюзный",, Сотрудник,МесяцНачисленияЗП,,
		//ноПрофсоюзныйСотр,,, ,,"ЗП");
		//--- Стало
		глПроводка(Контекст,"64.2.6","661",-Профсоюзный,"Удержание: профсоюзный",, ноПрофсоюзныйСотр,,,
		Сотрудник,МесяцНачисленияЗП,, ,,"ЗП");
		
	Иначе
		// внесение остатков
		глПроводка(Контекст,"00","661",ОсталосьВыплатить,"Внесение остатков по зарплате",, ,,,
		Сотрудник,МесяцНачисленияЗП,, ,,"ЗП");
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПроводкиДно()
	// свернем по счету, виду деятельности и подразделению
	ТаблЗатр.Свернуть("СчетЗатрат,ВидДеятельности,Подразделение","ОблагаемоеБезЗатр,ОблагаемоеПенЗатр,ОблагаемоеПенИнвЗатр,ОблагаемоеСоцЗатр,ОблагаемоеНесчЗатр,
		|ОблагаемоеБезПриб,ОблагаемоеПенПриб,ОблагаемоеПенИнвПриб,ОблагаемоеСоцПриб,ОблагаемоеНесчПриб");
	ТаблЗатр.Сортировать("СчетЗатрат+");
	
	ТаблЗатр.ВыбратьСтроки();
	Пока ТаблЗатр.ПолучитьСтроку() = 1 Цикл
		ПенсионныйОрг		= Окр((ТаблЗатр.ОблагаемоеПенЗатр + ТаблЗатр.ОблагаемоеПенПриб) * СтПенОрг, 2);
		ПенсионныйИнвОрг	= Окр((ТаблЗатр.ОблагаемоеПенИнвЗатр + ТаблЗатр.ОблагаемоеПенИнвПриб) * СтПенИнвОрг, 2);
		БезработицаОрг		= Окр((ТаблЗатр.ОблагаемоеБезЗатр + ТаблЗатр.ОблагаемоеБезПриб) * СтБзрОрг, 2);
		СоцстрахОрг			= Окр((ТаблЗатр.ОблагаемоеСоцЗатр + ТаблЗатр.ОблагаемоеСоцПриб) * СтСоцОрг, 2);
		СтрахНесчОрг		= Окр((ТаблЗатр.ОблагаемоеНесчЗатр + ТаблЗатр.ОблагаемоеНесчПриб) * СтНесчОрг, 2);
		
		ТекСчетЗатрат = ТаблЗатр.СчетЗатрат;

		// Пенсионный (от фонда з/п)
		глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"65.1",ПенсионныйОрг,"Пенсионный (от фонда з/п)",, ТаблЗатр.ВидДеятельности,ТаблЗатр.Подразделение,ВидЗатратПенсионный,
		ноПенсионный,,, ,,"ЗП");
		
		// Пенсионный (инвалиды) (от фонда з/п)
		глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"65.1",ПенсионныйИнвОрг,"Пенсионный (инвалиды) (от фонда з/п)",, ТаблЗатр.ВидДеятельности,ТаблЗатр.Подразделение,ВидЗатратПенсионный,
		ноПенсионныйИнв,,, ,,"ЗП");
                                                      
		// Страхование от безработицы (от фонда з/п)
		глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"65.3",БезработицаОрг,"Страхование от безработицы (от фонда з/п)",, ТаблЗатр.ВидДеятельности,ТаблЗатр.Подразделение,ВидЗатратБезработица,
		ноБезработица,,, ,,"ЗП");
                                                   
		// Социальное страхование (от фонда з/п)
		глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"65.2",СоцстрахОрг,"Социальное страхование (от фонда з/п)",, ТаблЗатр.ВидДеятельности,ТаблЗатр.Подразделение,ВидЗатратСоцСтрах,
		ноСоцСтрах,,, ,,"ЗП");
                                                    
		// Соц. страхование от несч. случая (от фонда з/п)
		глПроводкаПоЗатратам(Контекст,ТекСчетЗатрат,"65.6",СтрахНесчОрг,"Соц. страхование от несч. случая (от фонда з/п)",, ТаблЗатр.ВидДеятельности,ТаблЗатр.Подразделение,ВидЗатратСтрахНесч,
		ноСтрахНесч,,, ,,"ЗП");

		Если Лев(ТекСчетЗатрат.Код, 2) = "23" Тогда
			// запомним суммы проводок по 23 счету для дальнейшего 
			// формирования движений по регистру ПроизводственныеЗатраты
			
			Если ПенсионныйОрг <> 0 Тогда
				// Пенсионный (от фонда з/п) + Пенсионный (инвалиды)
				ТаблЗатр23.НоваяСтрока();
				ТаблЗатр23.ВидДеятельности = ТаблЗатр.ВидДеятельности;
				ТаблЗатр23.Подразделение = ТаблЗатр.Подразделение;
				ТаблЗатр23.ВидЗатрат = ВидЗатратПенсионный;
				ТаблЗатр23.Сумма = ПенсионныйОрг + ПенсионныйИнвОрг;
			КонецЕсли;
			Если БезработицаОрг <> 0 Тогда
				// Страхование от безработицы (от фонда з/п)
				ТаблЗатр23.НоваяСтрока();
				ТаблЗатр23.ВидДеятельности = ТаблЗатр.ВидДеятельности;
				ТаблЗатр23.Подразделение = ТаблЗатр.Подразделение;
				ТаблЗатр23.ВидЗатрат = ВидЗатратБезработица;
				ТаблЗатр23.Сумма = БезработицаОрг;
			КонецЕсли;
			Если СоцстрахОрг <> 0 Тогда
				// Социальное страхование (от фонда з/п)
				ТаблЗатр23.НоваяСтрока();
				ТаблЗатр23.ВидДеятельности = ТаблЗатр.ВидДеятельности;
				ТаблЗатр23.Подразделение = ТаблЗатр.Подразделение;
				ТаблЗатр23.ВидЗатрат = ВидЗатратСоцСтрах;
				ТаблЗатр23.Сумма = СоцстрахОрг;
			КонецЕсли;
			Если СтрахНесчОрг <> 0 Тогда
				// Соц. страхование от несч. случая (от фонда з/п)
				ТаблЗатр23.НоваяСтрока();
				ТаблЗатр23.ВидДеятельности = ТаблЗатр.ВидДеятельности;
				ТаблЗатр23.Подразделение = ТаблЗатр.Подразделение;
				ТаблЗатр23.ВидЗатрат = ВидЗатратСтрахНесч;
				ТаблЗатр23.Сумма = СтрахНесчОрг;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// на валовые расходы относим только ту часть, которая "из затрат"
	ПенсионныйОргВалРасх	= Окр(ТаблЗатр.Итог("ОблагаемоеПенЗатр") * СтПенОрг, 2);
	ПенсионныйИнвОргВалРасх	= Окр(ТаблЗатр.Итог("ОблагаемоеПенИнвЗатр") * СтПенИнвОрг, 2);
	БезработицаОргВалРасх	= Окр(ТаблЗатр.Итог("ОблагаемоеБезЗатр") * СтБзрОрг, 2);
	СоцстрахОргВалРасх		= Окр(ТаблЗатр.Итог("ОблагаемоеСоцЗатр") * СтСоцОрг, 2);
	СтрахНесчОргВалРасх		= Окр(ТаблЗатр.Итог("ОблагаемоеНесчЗатр") * СтНесчОрг, 2);
	
	// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
	//// валовые расходы
	//Если ВалРасхЗарплата <> Константа.НиДоходНиРасход Тогда
	//	Сум = Итог("Отпускные") + Итог("Оклад") + Итог("Тариф")  - Итог("НачисленоЗаПериод") // --- УМК Сандомирский В.Ю. (10.07.14) Было начислено в расчетном периоде но не этим документом
	//		+ Итог("Сдельно") + Итог("Премия") + Итог("БольничныеЗаСчетПредприятия");
	//		
	//	Если НачМесяца(ДатаДок)<'01.01.2003' Тогда
	//		// Необлаг. мат. помощь включается в ВР
	//		Сум = Сум + Итог("НеоблагаемаяМатПомощь");
	//	КонецЕсли;
	//	
	//	Для НомНач = 1 по КвоНач Цикл
	//		// произвольных начислений может быть несколько
	//		Сум = Сум + Итог("СуммаНачисл"+НомНач);
	//	КонецЦикла;
	//	
	//	глПроводка(Контекст,"ВР","ВР",Сум,"Валовые расходы: зарплата",, ,,ВалРасхЗарплата,
	//	,,ВалРасхЗарплата, ,,"ЗП");
	//	
	//КонецЕсли;
	// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
	
	// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
	//Если ВалРасхОтчисления <> Константа.НиДоходНиРасход Тогда
	//	Сум = ПенсионныйОргВалРасх + ПенсионныйИнвОргВалРасх + СоцстрахОргВалРасх 
	//		+ СтрахНесчОргВалРасх + БезработицаОргВалРасх;
	//		
	//	глПроводка(Контекст,"ВР","ВР",Сум,"Валовые расходы: пенсионный,соцстрах,безработица",, ,,ВалРасхОтчисления,
	//	,,ВалРасхОтчисления, ,,"ЗП");
	//КонецЕсли;
	// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
	
	// В регистре ПроизводственныеЗатраты отражаем суммы начислений и отчислений в фонды,
	// которые пошли на 23 счет с той же аналитикой
	ТаблЗатр23.Свернуть("ВидДеятельности,Подразделение,ВидЗатрат","Сумма");
	ТаблЗатр23.ВыбратьСтроки();
	Пока ТаблЗатр23.ПолучитьСтроку() = 1 Цикл
		Регистр.ПроизводственныеЗатраты.Фирма			= Фирма;
		Регистр.ПроизводственныеЗатраты.ВидДеятельности	= ТаблЗатр23.ВидДеятельности;
		Регистр.ПроизводственныеЗатраты.Подразделение	= ТаблЗатр23.Подразделение;
		Регистр.ПроизводственныеЗатраты.Продукция		= 0;
		Регистр.ПроизводственныеЗатраты.ВидЗатрат		= ТаблЗатр23.ВидЗатрат;
		Регистр.ПроизводственныеЗатраты.Заказ			= 0;
		Регистр.ПроизводственныеЗатраты.Материал		= 0;
		Регистр.ПроизводственныеЗатраты.Количество		= 0; // материалов нет
		Регистр.ПроизводственныеЗатраты.Сумма			= ТаблЗатр23.Сумма;
		Регистр.ПроизводственныеЗатраты.СуммаДав		= 0;
		Регистр.ПроизводственныеЗатраты.КодОперации		= ОтражениеЗатрат;
		Регистр.ПроизводственныеЗатраты.ДвижениеПриходВыполнить();
	КонецЦикла;
КонецПроцедуры

// ===============================
Функция ПолучитьКвоПроизвольныхНачислений()
Перем КвоНач;
	КвоНач = 0; 
	Пока глЕстьРеквизитШапки("Начисл"+(КвоНач+1), "НачислениеЗП") = Да Цикл
		КвоНач = КвоНач + 1;
	КонецЦикла;
	Возврат КвоНач;
КонецФункции //ПолучитьКвоПроизвольныхНачислений()

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	//МесяцНачисленияЗП = НачМесяца(ДатаДок); //--- УМК Сандомирский В.Ю. (20.03.15) Задается на форме теперь
	
	КвоНач = ПолучитьКвоПроизвольныхНачислений();
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	
	Если ВидНачисления = Перечисление.ВидыНачисленияЗП.Аванс Тогда
		Операция.Содержание = "Начисление аванса за "+Формат(ДатаДок,"Д ММММГГГГ")+" "+Примечание;
		Операция.Записать();
		глКомментарий("Окончание",2,Контекст);
	    Возврат;
	КонецЕсли;
	
	Если ВидНачисления = ОсновнаяЗП Тогда
	    РассчитатьШапку();
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
		Если ВидНачисления = ОсновнаяЗП Тогда
		    РассчитатьСтроку();
		КонецЕсли;
		ПроводкиСтрока();
	КонецЦикла;
	
	Если ВидНачисления = ОсновнаяЗП Тогда
	    ПроводкиДно();
	КонецЕсли;
	
	Операция.СуммаОперации = Итог("КВыплате");
	Сод = ?(ВидНачисления = ОсновнаяЗП, "Расчет з/п за ", "Внесение остатков по з/п за ");
	Операция.Содержание = Сод+Формат(ДатаДок,"Д ММММГГГГ")+" "+Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
	Ит = 0;
КонецПроцедуры