Перем Откуда, Куда, ВидСубконтоТМЦ;
Перем ИтСуммаУчБезНДС;	// для общей суммы операции
Перем фИзРозницы; // 1, если перемещаем из розницы
Перем ИтТМЦ;

// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(МестоХранения,"Откуда");
    глВыбранЛи(НовоеМестоХранения,"Куда");
    Если глВсеВыбрано = 1 Тогда
		Если МестоХранения.Тип = Склады Тогда
			Если (МестоХранения.ВидСклада = Розничный) и (НовоеМестоХранения.Тип <> Склады) Тогда
				глКомментарий("Из магазина перемещать ТМЦ можно только на оптовый склад!",0,,"!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
        Если НовоеМестоХранения.Тип = Склады Тогда
			Если (НовоеМестоХранения.ВидСклада = Розничный) и (МестоХранения.Тип <> Склады) Тогда
		    	глКомментарий("В магазин перемещать ТМЦ можно только с оптового склада!",0,,"!");
		    	глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
		Если (МестоХранения.Тип = Склады) и (МестоХранения.ВидСклада = Розничный) и (МестоХранения.СуммовойУчет = 1) и
	    	 (НовоеМестоХранения.Тип = Склады) и (НовоеМестоХранения.ВидСклада = Розничный) и (НовоеМестоХранения.СуммовойУчет = 1) Тогда 
		 	глКомментарий("Нельзя выполнять перемещение с розничного склада с суммовым учетом на розничный склад с суммовым учетом",0,,"!");
		 	глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	Если (глВсеВыбрано = 1) И (МестоХранения.СуммовойУчет = 0) Тогда
		глВсеВыбрано = глПроверкаДублейСтрок(Контекст,0);
		Если глВсеВыбрано = 0 Тогда
			глКомментарий("При перемещении нельзя в разных строках указывать одинаковые ТМЦ (или одну и ту же партию ТМЦ)!",0,,"!");
		КонецЕсли;
	КонецЕсли;
    Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
    глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
	глВыбранЛи(Счет,"Счет ТМЦ",НомерСтроки);
    глВыбранЛи(Стало,"Стало",НомерСтроки);
	глВыбранЛи(СталоСчет,"Счет Стало",НомерСтроки);
	Если глВсеВыбрано = 1 Тогда
		Если ТМЦ.Вид() = "ТМЦ" Тогда
			глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
		КонецЕсли;
		Если Стало.Вид() = "ТМЦ" Тогда
			глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,Стало,НомерСтроки,1)=Да, глВсеВыбрано, 0);
		КонецЕсли;
		Попытка
			// проверка на "услугу"
			Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
				глКомментарий("Нельзя переместить услугу (строка "+НомерСтроки+")",0,,"!");
				глВсеВыбрано = 0;
			КонецЕсли;
			// проверка "суммового" учета в "месте хранения"
			Если МестоХранения.СуммовойУчет = 1 Тогда
				Если ТМЦ <> Константа.ТоварыВАссортименте Тогда
					глКомментарий("На складе 'Откуда' ведется суммовой учет ТМЦ. Перемещать можно только служебный ТМЦ ""Товары в ассортименте"" (строка "+ НомерСтроки+")!",0,,"!");
					глВсеВыбрано = 0;
				КонецЕсли;
			Иначе
				//Если ТМЦ = Константа.ТоварыВАссортименте Тогда
				//	глКомментарий("В строке " + НомерСтроки + " перемещается служебный ТМЦ ""Товары в ассортименте"", хотя на складе 'Откуда' не ведется суммовой учет ТМЦ!",0,,"!");
				//КонецЕсли;                              
				// если склад без "суммового" учета, надо проверить количество
				//глВыбранЛи(Кво,"Количество",НомерСтроки);
			КонецЕсли;
			// проверка "суммового" учета в "новом месте хранения"
			Если НовоеМестоХранения.СуммовойУчет = 1 Тогда
				Если Стало <> Константа.ТоварыВАссортименте Тогда
					глКомментарий("На складе 'Куда' ведется суммовой учет ТМЦ. Перемещать можно только на служебный ТМЦ ""Товары в ассортименте"" (строка "+ НомерСтроки+")!",0,,"!");
					глВсеВыбрано = 0;
				КонецЕсли;
			Иначе
				//Если Стало = Константа.ТоварыВАссортименте Тогда
				//	глКомментарий("В строке " + НомерСтроки + " перемещение на служебный ТМЦ ""Товары в ассортименте"", хотя на складе 'Куда' не ведется суммовой учет ТМЦ!",0,,"!");
				//	глВсеВыбрано = 0;
				//КонецЕсли;
			КонецЕсли;
		Исключение	
		КонецПопытки;
	КонецЕсли;
    Возврат глВсеВыбрано;
КонецФункции

// ===============================
Процедура ПроводкиТовар(текСуммаУчБезНДС,РознСтоимость,текКоличество,ТекПартияБыло="",ТекПартияСтало="",Переоценка=0)
	Перем Наценка;                                                   
	
	Наценка = ?(ПустоеЗначение(РознСтоимость)=1,0,РознСтоимость - Окр(текСуммаУчБезНДС,2));
	Если Откуда.Тип = Склады Тогда
		Если Куда.Тип = Склады Тогда
			// со склада на склад
		    Если (Откуда.ВидСклада = Оптовый) и (Куда.ВидСклада = Оптовый) Тогда
		        // ОПТОВЫЙ --> ОПТОВЫЙ (без наценки)
		        глПроводка(Контекст,СталоСчет,Счет,текСуммаУчБезНДС,"Перемещение",текКоличество, Куда,Стало,ТекПартияСтало,
		        Откуда,ТМЦ,ТекПартияБыло,,,"ПЕ");
				Если ((Счет = СчетПоКоду("0235"))
				ИЛИ (Счет = СчетПоКоду("0236"))) Тогда 
			        глПроводка(Контекст,"232","232",РознСтоимость,"Перемещение",текКоличество, Куда,Стало,ТекПартияСтало,
			        Откуда,ТМЦ,ТекПартияБыло,,,"ПЕ");
				КонецЕсли;
		    ИначеЕсли (Откуда.ВидСклада = Оптовый) и (Куда.ВидСклада = Розничный) Тогда
		        // ОПТОВЫЙ --> РОЗНИЧНЫЙ (формируем наценку)
		        Если РознСтоимость < текСуммаУчБезНДС Тогда
		        	глКомментарий("Внимание! Розничная стоимость ("+РознСтоимость+") меньше себестоимости ("+текСуммаУчБезНДС+")! Строка "+НомерСтроки+". Проводки могут быть неверными!",1,,"!");
				КонецЕсли;
				Если Куда.СуммовойУчет = 1 Тогда
					// чтобы не увеличивать количество ТМЦ на розничном складе
					// с суммовым учетом и в то же время списать указанное нам
					// кол-во с оптового склада, воспользуемся сложной проводкой
					// списание количества и суммы с оптового склада
					Операция.НоваяПроводка();
					Операция.Кредит.Счет = Счет;
					Операция.Кредит.Субконто(1,Откуда);
					Операция.Кредит.Субконто(2,ТМЦ);
					Операция.Кредит.Субконто(3,ТекПартияБыло);
					Операция.Количество = текКоличество;
					Операция.Сумма = текСуммаУчБезНДС;
					Операция.Комментарий = "Перемещение в розницу: Себестоимость";
					Операция.НомерЖурнала = "ПЕ";
					Операция.НашаФирма = Фирма;
					// оприходование суммы на розничный склад
					Операция.НоваяКорреспонденция();
					Операция.Дебет.Счет = СталоСчет;
					Операция.Дебет.Субконто(1,Куда);
					Операция.Дебет.Субконто(2,Стало);
					Операция.Дебет.Субконто(3,ТекПартияСтало);
					Операция.Сумма = текСуммаУчБезНДС;
					Операция.Комментарий = "Перемещение в розницу: Себестоимость";
					Операция.НомерЖурнала = "ПЕ";
					Операция.НашаФирма = Фирма;
				Иначе
			        глПроводка(Контекст,СталоСчет,Счет,текСуммаУчБезНДС,"Перемещение в розницу: Себестоимость",текКоличество, Куда,Стало,ТекПартияСтало,
			        Откуда,ТМЦ,ТекПартияБыло,,,"ПЕ");
				КонецЕсли;
		        глПроводка(Контекст,СталоСчет,?(СталоСчет=СчетПоКоду("2822"),"2852","2851"),Наценка,"Перемещение в розницу: Наценка+НДС в уч. стоим.",, Куда,Стало,ТекПартияСтало,
		        Куда,Стало,ТекПартияСтало,,,"ПЕ");
		    ИначеЕсли (Откуда.ВидСклада = Розничный) и (Куда.ВидСклада = Оптовый) Тогда
		        // РОЗНИЧНЫЙ --> ОПТОВЫЙ (убираем наценку)
				Если Откуда.СуммовойУчет = 1 Тогда
					// чтобы не изменять количество ТМЦ на розничном складе
					// с суммовым учетом и в то же время оприходовать указанное нам
					// кол-во на оптовый склад, воспользуемся сложной проводкой
					// списание суммы с розничного склада
					Операция.НоваяПроводка();
					Операция.Кредит.Счет = Счет;
					Операция.Кредит.Субконто(1,Откуда);
					Операция.Кредит.Субконто(2,ТМЦ);
					Операция.Кредит.Субконто(3,ТекПартияБыло);
					Операция.Сумма = текСуммаУчБезНДС;
					Операция.Комментарий = "Перемещение из розницы: Себестоимость";
					Операция.НомерЖурнала = "ПЕ";
					Операция.НашаФирма = Фирма;
					// оприходование суммы и количества на оптовый склад
					Операция.НоваяКорреспонденция();
					Операция.Дебет.Счет = СталоСчет;
					Операция.Дебет.Субконто(1,Куда);
					Операция.Дебет.Субконто(2,Стало);
					Операция.Дебет.Субконто(3,ТекПартияСтало);
					Операция.Количество = текКоличество;
					Операция.Сумма = текСуммаУчБезНДС;
					Операция.Комментарий = "Перемещение из розницы: Себестоимость";
					Операция.НомерЖурнала = "ПЕ";
					Операция.НашаФирма = Фирма;
				Иначе
			        глПроводка(Контекст,СталоСчет,Счет,текСуммаУчБезНДС,"Перемещение из розницы: Себестоимость",текКоличество, Куда,Стало,ТекПартияБыло,
			        Откуда,ТМЦ,ТекПартияБыло,,,"ПЕ");
				КонецЕсли;
		        глПроводка(Контекст,?(Счет=СчетПоКоду("2822"),"2852","2851"),Счет,Наценка,"Перемещение из розницы: Наценка+НДС в уч. стоим.",, Откуда,ТМЦ,ТекПартияБыло,
		        Откуда,ТМЦ,ТекПартияБыло,,,"ПЕ");
		    ИначеЕсли (Откуда.ВидСклада = Розничный) и (Куда.ВидСклада = Розничный) Тогда
				// РОЗНИЧНЫЙ --> РОЗНИЧНЫЙ (перемещаем и наценку)
				Если (Откуда.СуммовойУчет = 0) и (Куда.СуммовойУчет = 0) Тогда
					// оба склада не используют суммовой учет, перемещаем количество
					глПроводка(Контекст,СталоСчет,Счет,текСуммаУчБезНДС+Наценка,"Перемещение: Себестоимость",текКоличество, Куда,Стало,ТекПартияСтало,
					Откуда,ТМЦ,ТекПартияБыло,,,"ПЕ");
				ИначеЕсли (Откуда.СуммовойУчет = 1) и (Куда.СуммовойУчет = 1) Тогда
					// оба склада используют суммовой учет, перемещаем без количества
					// данная возможность запрещена
					//глПроводка(Контекст,СталоСчет,Счет,СуммаУчБезНДС+Наценка,"Перемещение: Себестоимость",, Куда,Стало,ТекПартияСтало,
					//Откуда,Товар,ТекПартияБыло,,,"ПЕ");
				ИначеЕсли Откуда.СуммовойУчет = 1 Тогда
					// Откуда - использует суммовой учет, Куда - не использует
					// Изменять количество ТМЦ на розничном складе с суммовым учетом не нужно
					// списание количества и суммы
					Операция.НоваяПроводка();
					Операция.Кредит.Счет = Счет;
					Операция.Кредит.Субконто(1,Откуда);
					Операция.Кредит.Субконто(2,ТМЦ);
					Операция.Кредит.Субконто(3,ТекПартияБыло);
					Операция.Сумма = текСуммаУчБезНДС+Наценка;
					Операция.Комментарий = "Перемещение: Себестоимость";
					Операция.НомерЖурнала = "ПЕ";
					Операция.НашаФирма = Фирма;
					// оприходование только сумму
					Операция.НоваяКорреспонденция();
					Операция.Дебет.Счет = СталоСчет;
					Операция.Дебет.Субконто(1,Куда);
					Операция.Дебет.Субконто(2,Стало);
					Операция.Дебет.Субконто(3,ТекПартияСтало);
					Операция.Количество = текКоличество;
					Операция.Сумма = текСуммаУчБезНДС+Наценка;
					Операция.Комментарий = "Перемещение: Себестоимость";
					Операция.НомерЖурнала = "ПЕ";
					Операция.НашаФирма = Фирма;
				Иначе
					// Куда - использует суммовой учет, Откуда - не использует
					// Изменять количество ТМЦ на розничном складе с суммовым учетом не нужно
					// списание суммы
					Операция.НоваяПроводка();
					Операция.Кредит.Счет = Счет;
					Операция.Кредит.Субконто(1,Откуда);
					Операция.Кредит.Субконто(2,ТМЦ);
					Операция.Кредит.Субконто(3,ТекПартияБыло);
					Операция.Количество = текКоличество;
					Операция.Сумма = текСуммаУчБезНДС+Наценка;
					Операция.Комментарий = "Перемещение: Себестоимость";
					Операция.НомерЖурнала = "ПЕ";
					Операция.НашаФирма = Фирма;
					// оприходование количества и суммы
					Операция.НоваяКорреспонденция();
					Операция.Дебет.Счет = СталоСчет;
					Операция.Дебет.Субконто(1,Куда);
					Операция.Дебет.Субконто(2,Стало);
					Операция.Дебет.Субконто(3,ТекПартияСтало);
					Операция.Сумма = текСуммаУчБезНДС+Наценка;
					Операция.Комментарий = "Перемещение: Себестоимость";
					Операция.НомерЖурнала = "ПЕ";
					Операция.НашаФирма = Фирма;
				КонецЕсли;
				глПроводка(Контекст,?(СталоСчет=СчетПоКоду("2822"),"2852","2851"),?(Счет=СчетПоКоду("25"),"2852","2851"),Наценка,"Перемещение из розницы: Наценка+НДС в уч. стоим.",, Откуда,ТМЦ,ТекПартияБыло,
				Куда,Стало,ТекПартияСтало,,,"ПЕ");
				Если Переоценка > 0 Тогда
					глПроводка(Контекст,СталоСчет,?(Счет=СчетПоКоду("25"),"2852","2851"),Переоценка,"Перемещение из розницы: Дооценка",, Куда,Стало,ТекПартияСтало,
					Куда,Стало,ТекПартияСтало,,,"ПЕ"); 
				ИначеЕсли Переоценка < 0 Тогда
					глПроводка(Контекст,?(Счет=СчетПоКоду("25"),"2852","2851"),СталоСчет,-Переоценка,"Перемещение из розницы: Уценка",, Куда,Стало,ТекПартияСтало,
					Куда,Стало,ТекПартияСтало,,,"ПЕ"); 
				КонецЕсли;
			КонецЕсли;
		Иначе
			// со склада на МОЛ
			глПроводка(Контекст,СталоСчет,Счет,текСуммаУчБезНДС,"Перемещение",текКоличество, Куда,Стало,ТекПартияСтало,
		    Откуда,ТМЦ,ТекПартияБыло,,,"ПЕ");
		КонецЕсли;
	Иначе
		// с МОЛа
		Если Куда.Тип = Склады Тогда
		    // на склад
			глПроводка(Контекст,СталоСчет,Счет,текСуммаУчБезНДС,"Перемещение",текКоличество, Куда,Стало,ТекПартияСтало,
		    Откуда,ТМЦ,ТекПартияБыло,,,"ПЕ");
		Иначе
			// на МОЛ
			глПроводка(Контекст,СталоСчет,Счет,текСуммаУчБезНДС,"Перемещение "+ТМЦ.Вид(),текКоличество, Куда,Стало,ТекПартияСтало,
			Откуда,ТМЦ,ТекПартияБыло, ,,"ПЕ");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Функция ДвиженияПартии()
	Перем тбИтоги;
	Перем фОшибка;	// возвращаемое значение
	фОшибка = 1;              
	
	глКомментарий("Выполняются движения партий ТМЦ",2);	
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета = СоздатьОбъект("СписокЗначений");         
	// сформируем список счетов для отбора	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если спСчета.НайтиЗначение(Счет) = 0 Тогда
			спСчета.ДобавитьЗначение(Счет);
		КонецЕсли;	
	КонецЦикла;	
	спОтбор.Установить("Счет",спСчета);
	Если (МестоХранения.ВидСклада = Розничный) И (МестоХранения.СуммовойУчет=1) Тогда
		спТовары=СоздатьОбъект("СписокЗначений");
		спТовары.ДобавитьЗначение(Константа.ТоварыВАссортименте);
		спОтбор.Установить("Товар",спТовары);
	КонецЕсли;	
	ВремРег = СоздатьОбъект("Регистры");
	глРассчитатьОстаткиИРезервы(Контекст, ВремРег, спОтбор,1,1,1);	
	Если глПартионныйУчетПоСкладам = Да Тогда
	    МестоХраненияП = МестоХранения; 		
	Иначе
		МестоХраненияП = 0;
	КонецЕсли;
	спОтбор.Установить("МестоХранения", МестоХраненияП);
	
	глРассчитатьОстаткиПартий(Контекст, ВремРег, Фирма, спОтбор);
	// обнулим параметры испльзуемые в процедуре глСформироватьТаблицуПартий()
	текПредпочтение = 0;
	тбПартии = 0;
	тбОстатки = 0;
	ИнвСтартегияПредпочтения  = 0;
	ИнвСтратегияПродажи = 0;
	глСформироватьТаблицуПартий(Контекст, ВремРег,Фирма, спОтбор, текПредпочтение, 
		тбПартии, тбОстатки, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
	МетодРасчета = Константа.МетодРасчетаСебестоимостиПроизводственныхЗапасов.Получить(ДатаДок);
		
	ФлагВозврата = 0;
	ФлагПеремещения = 1;
	ВремРег.Актуальность(1);		
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		ВсегоСписать = Кво; // количество построке документа
		Если ВсегоСписать = 0 Тогда
			Продолжить;
		КонецЕсли;
		// движения по регистру Остатки                                                                                                                                                    
		ФлагПрихода = 0;
		глПровестиОстатки(Контекст, ВремРег, Фирма, МестоХранения, ТМЦ, ВидУпаковки, ВсегоСписать, ФлагПрихода, ФлагВозврата,,ФлагПеремещения);
		ФлагПрихода = 1;
		глПровестиОстатки(Контекст, ВремРег, Фирма, НовоеМестоХранения, Стало, ВидУпаковкиСтало, ВсегоСписать, ФлагПрихода, ФлагВозврата,,ФлагПеремещения);
		ОсталосьСписать = Кво; // количество к списанию		
		ВсегоСуммаСНДС = ЦенаСНДС * Кво; // сумма по строке документа 
		ОсталосьСуммаСНДС =  ВсегоСуммаСНДС; // сумма к списанию
		ПоставщикП = 0;
		ПоставкаП = 0;
		// списываем с розничного склада с суммовым учетом
		Если (МестоХранения.ВидСклада = Розничный) И (МестоХранения.СуммовойУчет=1) Тогда
			// выберем остатки ТМЦ на складе				
			тбИтоги = СоздатьОбъект("ТаблицаЗначений");
			Рег=ВремРег.Партии;
			Рег.СводныеОстатки(Фирма,,МестоХранения,Константа.ТоварыВАссортименте,,,);
			ПроцНДС = глПроцентНДС(ТМЦ.СтавкаНДС,ДатаДок);
			 // для склада c суммовым учетом продажная стоимость к 
			 // списанию равна соотв. сумме по строке
			ОсталосьПродСтоимость =  ВсегоСуммаСНДС;
			// для склада c суммовым учетом учетная стоимость к 
			// списанию равна соотв. сумме по строке
			ОсталосьСтоимость = СуммаУчБезНДС; 
			НДС = ОсталосьСтоимость /100*ПроцНДС;
			СчетП = СталоСчет;
			МестоХраненияП = МестоХранения;
			СтоимостьТовара = Рег.Стоимость;
			ПродСтоимостьТовара = Рег.ПродСтоимость;
			//спишем не больше, чем есть на складе
			СписываемаяСтоимость = Мин(ОсталосьСтоимость,СтоимостьТовара);
			СписываемаяПродСтоимость = Мин(ОсталосьПродСтоимость,ПродСтоимостьТовара);
			СписываемыйНДС = 0;
			СписываемыйОстатокТовара = 0;
			Если (НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
				КодОперации = ПереоценкаВРознице;
			Иначе
				КодОперации = ПеремещениеИзРозницы;
			КонецЕсли;
			// Списываем					
			глПровестиПартию(Контекст, 0, 0, Фирма, Константа.ТоварыВАссортименте, СчетП, МестоХраненияП, , 
				,,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
				КодОперации, 0, 0, 0);
			// Приходуем
			Если глПолучитьМетодРасчетаСебестоимости(Стало,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
				ПрихДокументП = 0;
			Иначе
				ПрихДокументП = ТекущийДокумент();
			КонецЕсли;
			глПровестиПартию(Контекст, 1, 0, Фирма, Стало, СчетП, НовоеМестоХранения, 
				,ПрихДокументП, ПрихДокументП,Кво, СуммаУчБезНДС
				,?(НовоеМестоХранения.ВидСклада=Оптовый,0,ВсегоСуммаСНДС)
				,КодОперации, 0, 0, 0);
			ПроводкиТовар(СписываемаяСтоимость,СписываемаяПродСтоимость,Кво,,ПрихДокументП);
			// что-то еще осталось не списанным, сообщим 
			Если (ОсталосьСтоимость - СписываемаяСтоимость) > 0 Тогда
				глСообщитьОбОтсутствииПартии(0, Фирма, ТМЦ, НомерСтроки, Счет);
				Если Константа.РазрешитьОтрицОстатки = Нет Тогда         
					фОшибка = 0;
				Иначе	
					// перемещаем больше, чем есть
					ПроцНДС = глПроцентНДС(ТМЦ.СтавкаНДС,ДатаДок);
					 // для склада c суммовым учетом продажная стоимость к 
					 // списанию равна соотв. сумме по строке
					ОсталосьПродСтоимость =  ВсегоСуммаСНДС - СписываемаяПродСтоимость;
					// для склада c суммовым учетом учетная стоимость к 
					// списанию равна соотв. сумме по строке
					ОсталосьСтоимость = СуммаУчБезНДС - СписываемаяСтоимость; 
					НДС = ОсталосьСтоимость /100*ПроцНДС;
					СчетП = СталоСчет;
					МестоХраненияП = МестоХранения;
					//спишем все, что осталось
					СписываемаяСтоимость = ОсталосьСтоимость;
					СписываемаяПродСтоимость = ОсталосьПродСтоимость;
					СписываемыйНДС = 0;
					СписываемыйОстатокТовара = 0;
					Если (НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
						КодОперации = ПереоценкаВРознице;
					Иначе
						КодОперации = ПеремещениеИзРозницы;
					КонецЕсли;
					// Списываем					
					глПровестиПартию(Контекст, 0, 0, Фирма, Константа.ТоварыВАссортименте, СчетП, МестоХраненияП, , 
						,,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
						КодОперации, 0, 0, 0);
					// Приходуем              
					глПровестиПартию(Контекст, 1, 0, Фирма, Стало, СчетП, НовоеМестоХранения, 
						,ПрихДокументП, ПрихДокументП,Кво, СуммаУчБезНДС
						,?(НовоеМестоХранения.ВидСклада=Оптовый,0,ВсегоСуммаСНДС)
						,КодОперации, 0, 0, 0);      
					ПроводкиТовар(СписываемаяСтоимость,СписываемаяПродСтоимость,Кво,,ПрихДокументП);
					глСообщитьОСозданииПартии(ТМЦ, Кво);					
				КонецЕсли;	
			КонецЕсли;      					
			Продолжить;
		КонецЕсли;
		НС=0;
		// находим в тбПартии первую партию, соответсв. текущей строке документа
		Если тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента")=1 Тогда
			тбПартии.ПолучитьСтрокуПоНомеру(НС);
		Иначе         
			// если такой строки нет, переходим на первую строку таблицы
			тбПартии.ВыбратьСтроки();
			тбПартии.ПолучитьСтроку();
		КонецЕсли;
		// обрабатываем все строки тбПартии с соответсв. номером строки документа
		Пока тбПартии.НомерСтрокиДокумента = НомерСтроки Цикл			
			// берем необходимые параметры партии из тбПартии
			Если тбПартии.Счет = Счет Тогда
				// выбираем только партии на указанном в ТЧ счете
				МестоХраненияП = тбПартии.МестоХранения;
				ПоставщикП = тбПартии.Поставщик;
				ПоставкаП = тбПартии.Поставка;
				ПрихДокументП = тбПартии.ПрихДокумент;
				СчетП = тбПартии.Счет;
				НС =0;
				// находим остаток текущей партии в тбОстатки по ключу
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,ТМЦ.Код,СчетП),НС,"Ключ")=1
				Тогда
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					ОстатокТовара = тбОстатки.ОстатокТовара;
					// если остаток 0, то с текущей партии не списываем
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара); 
					КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
					КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписать;
					СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
					СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
					Если (МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
						Если (НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
							КодОперации = ПереоценкаВРознице;
						Иначе
							Если СчетП.Забалансовый = 0 Тогда
								КодОперации = ПеремещениеИзРозницы;
							КонецЕсли;
						КонецЕсли;
					Иначе
						Если (НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
							Если СчетП.Забалансовый = 0 Тогда
								КодОперации = ПеремещениеВРозницу;
							КонецЕсли;
						Иначе
							КодОперации = ПеремещениеМеждуСкладами;
						КонецЕсли;
					КонецЕсли;
					СписываемыйНДС = 0;
					Регистр.Партии.ПривязыватьСтроку(НомерСтроки);
					// Списываем
					глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП, 
						ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
						КодОперации, 0, 0, 0);
					глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость);
					// Приходуем
					СчетП = СталоСчет;
					Если НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
						// продажная стоимость нужна только для розницы
						Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
							НачисляемаяПродСтоимость = ОсталосьСуммаСНДС;
						Иначе
							НачисляемаяПродСтоимость = ВсегоСуммаСНДС * КоэфРеализации;
						КонецЕсли;
						ОсталосьСуммаСНДС = ОсталосьСуммаСНДС - НачисляемаяПродСтоимость;
						МестоХраненияП = НовоеМестоХранения;  
					Иначе
						Если глПартионныйУчетПоСкладам = Да Тогда
						    МестоХраненияП = НовоеМестоХранения;
						Иначе
							МестоХраненияП = 0;
						КонецЕсли;
					КонецЕсли;      
					Если (МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный)
					И (НовоеМестоХранения.ВидСклада <> Перечисление.ВидыСкладов.Розничный) Тогда
					    ПрихДокументП = ПоставкаП;
					ИначеЕсли НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
						ПрихДокументП = ТекущийДокумент();
						КодОперации = ПеремещениеВРозницу;
					КонецЕсли;
					// приходуем на розничный склад с суммовым учетом
					Если (НовоеМестоХранения.ВидСклада = Розничный) И (НовоеМестоХранения.СуммовойУчет=1) Тогда
						глПровестиПартию(Контекст, 1, 0, Фирма, Константа.ТоварыВАссортименте, СчетП, МестоХраненияП,,
							, ,СписываемыйОстатокТовара, СписываемаяСтоимость, НачисляемаяПродСтоимость,
							КодОперации, 0, 0, 0);
					Иначе
						глПровестиПартию(Контекст, 1, 0, Фирма, Стало, СчетП, МестоХраненияП, ПоставщикП,
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, 
							?(НовоеМестоХранения.ВидСклада=Перечисление.ВидыСкладов.Розничный,НачисляемаяПродСтоимость,0),
							КодОперации, 0, 0, 0);
					КонецЕсли;
					
					Если (МестоХранения.ВидСклада = Розничный) И (НовоеМестоХранения.ВидСклада = Розничный) Тогда
						// перемещение розница-розница, учтем возможную переоценку
						ПроводкиТовар(СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйОстатокТовара,тбПартии.Поставка,тбПартии.Поставка,
						              НачисляемаяПродСтоимость-СписываемаяПродСтоимость);
						ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
					ИначеЕсли НовоеМестоХранения.ВидСклада = Розничный Тогда
						// опт-розница, прод. стоимость берем из ТЧ
						ПроводкиТовар(СписываемаяСтоимость,НачисляемаяПродСтоимость,СписываемыйОстатокТовара,тбПартии.Поставка,тбПартии.Поставка);
						ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
					Иначе
						// розница-опт или опт-опт, прод. стоимость из остатков
						ПроводкиТовар(СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйОстатокТовара,тбПартии.Поставка,тбПартии.Поставка);
						ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; // тбПартии.Счет = Счет
			Если ОсталосьСписать = 0 Тогда
				Прервать;
			КонецЕсли;   
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла; 
		Если ОсталосьСписать > 0 Тогда
			глСообщитьОбОтсутствииПартии(0, Фирма, ТМЦ, НомерСтроки, Счет);
			Если Константа.РазрешитьОтрицОстатки = Нет Тогда
				фОшибка = 0;
			Иначе
				// перемещаем больше, чем есть
				ПроцНДС = глПроцентНДС(ТМЦ.СтавкаНДС,ДатаДок);
				СуммаБезНДС = ОсталосьСуммаСНДС  * 100/(100 + ПроцНДС);
				
				Если МетодРасчета = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
					ПрихДокументП = "";
				Иначе
					ПрихДокументП = ТекущийДокумент();
				КонецЕсли;
				
				// списываем все, что осталось
				СписываемыйОстатокТовара = ОсталосьСписать;
				Если (ПустоеЗначение(ЦенаСНДС) = 0)
				И (НовоеМестоХранения.ВидСклада=Перечисление.ВидыСкладов.Розничный) Тогда
					// указана цена, сумму с НДС определим по цене
					ОсталосьСуммаСНДС = СписываемыйОстатокТовара* ЦенаСНДС;
				Иначе	                                          
					// сумму с НДС определим по учетной цене из справочника
					ОсталосьСуммаСНДС = СписываемыйОстатокТовара * ТМЦ.УчетнаяЦена.Получить(ДатаДок);
				КонецЕсли;	
				ОсталосьСуммаБезНДС = ОсталосьСуммаСНДС * 100/(100 + ПроцНДС);				
				СписываемыйНДС = (ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС) * КоэфСписания;
				// определим стоимость по рассчитанной сумме с НДС						               
				СписываемаяСтоимость = ОсталосьСуммаБезНДС;					
				Если МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
					СписываемаяПродСтоимость = ОсталосьСуммаСНДС;        
				Иначе
					СписываемаяПродСтоимость = 0;        
				КонецЕсли;	                               					
				                  
				СчетП = Счет;
				Если (МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
					Если (НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
						КодОперации = ПереоценкаВРознице;
					Иначе
						Если СчетП.Забалансовый = 0 Тогда
							КодОперации = ПеремещениеИзРозницы;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Если (НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
						Если СчетП.Забалансовый = 0 Тогда
							КодОперации = ПеремещениеВРозницу;
						КонецЕсли;
					Иначе
						КодОперации = ПеремещениеМеждуСкладами;
					КонецЕсли;
				КонецЕсли;
				СписываемыйНДС = 0;
				Регистр.Партии.ПривязыватьСтроку(НомерСтроки);
				Если глПартионныйУчетПоСкладам = Да Тогда
					МестоХраненияП = МестоХранения;
				Иначе
					МестоХраненияП = "";
				КонецЕсли;
				// Списываем
				глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, Счет, МестоХраненияП,,, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
					КодОперации, 0, 0, 0);
				// Приходуем
				СчетП = СталоСчет;
				Если НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
					// продажная стоимость нужна только для розницы
					Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
						СписываемаяПродСтоимость = ОсталосьСуммаСНДС;
					Иначе
						СписываемаяПродСтоимость = ВсегоСуммаСНДС * КоэфРеализации;
					КонецЕсли;
					ОсталосьСуммаСНДС = ОсталосьСуммаСНДС - СписываемаяПродСтоимость;
				КонецЕсли;      
				Если (НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
					МестоХраненияП = НовоеМестоХранения;  
				Иначе
					Если глПартионныйУчетПоСкладам = Да Тогда
					    МестоХраненияП = НовоеМестоХранения;
					Иначе
						МестоХраненияП = 0;
					КонецЕсли;
				КонецЕсли;
				
				// +++ ЗАКОММЕНТИРОВАННЫЙ УЧАСТОК ПО ООП 8090
				//Если (МестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный)
				//И (НовоеМестоХранения.ВидСклада <> Перечисление.ВидыСкладов.Розничный) Тогда
				//    ПрихДокументП = ПоставкаП;
				//ИначеЕсли НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
				//    // если не указана поставка, значит это выпуск продукции или ввод остатков
				//	// в поставку запишем приходный документ, он точно указан
				//    Если ПустоеЗначение(ПоставкаП) = 1 Тогда
				//		ПоставкаП = ПрихДокументП;
				//	КонецЕсли;	
				//	ПрихДокументП = ТекущийДокумент();
				//	КодОперации = ПеремещениеВРозницу;
				//КонецЕсли;
				// --- ЗАКОММЕНТИРОВАННЫЙ УЧАСТОК ПО ООП 8090
				
				// +++ НОВЫЙ КОД ПО ООП 8090
				ПоставщикП = ПолучитьПустоеЗначение("Справочник.Контрагенты");
				ПоставкаП = ПрихДокументП;
				Если МетодРасчета = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
					ПрихДокументП = "";
				Иначе
					ПрихДокументП = ТекущийДокумент();
				КонецЕсли;
				Если НовоеМестоХранения.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
					КодОперации = ПеремещениеВРозницу;
				КонецЕсли;
				// --- НОВЫЙ КОД ПО ООП 8090
				
				// приходуем на розничный склад с суммовым учетом
				Если (НовоеМестоХранения.ВидСклада = Розничный) И (НовоеМестоХранения.СуммовойУчет=1) Тогда
					глПровестиПартию(Контекст, 1, 0, Фирма, Константа.ТоварыВАссортименте, СчетП, МестоХраненияП, , 
						, ,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
						КодОперации, 0, 0, 0);
				Иначе	
					глПровестиПартию(Контекст, 1, 0, Фирма, Стало, СчетП, МестоХраненияП, ПоставщикП, 
						ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, 
						?(НовоеМестоХранения.ВидСклада=Перечисление.ВидыСкладов.Розничный,СписываемаяПродСтоимость,0),
						КодОперации, 0, 0, 0);
				КонецЕсли;
				ПроводкиТовар(СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйОстатокТовара,тбПартии.Поставка,тбПартии.Поставка);
				глСообщитьОСозданииПартии(ТМЦ, ОсталосьСписать);
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла; // строки документа   
	ВремРег.Актуальность(0);		
	Возврат фОшибка;
КонецФункции

Функция ПроводкиНА()
	СписНА = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписНА, "ТМЦ");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьСубконто(ВидыСубконто.НеоборотныеАктивы, СписНА, 2);
	Ит.ИспользоватьСубконто(ВидыСубконто.МестаХранения, МестоХранения, 2);
	Ит.ИспользоватьСубконто(ВидыСубконто.Подразделения, Подразделение, 2);	
	Ит.ВключатьСубсчета(-1);
	Ит.ВыполнитьЗапрос(,ТекущийДокумент(), "10,11,12");	
	
	ИтВал = СоздатьОбъект("БухгалтерскиеИтоги");
	ИтВал.ИспользоватьСубконто(ВидыСубконто.НеоборотныеАктивы, СписНА, 2);
	ИтВал.ИспользоватьСубконто(ВидыСубконто.МестаХранения, МестоХранения, 2);
	ИтВал.ИспользоватьСубконто(ВидыСубконто.Подразделения, Подразделение, 2);	
	ИтВал.ВключатьСубсчета(-1);
	ИтВал.ВыполнитьЗапрос(,ТекущийДокумент(), "1032,1042,1052,1062,1092");	

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ОстКво = 0; ОстСумма = 0; ОстВСумма = 0; Валюта = "";
		Если Ит.ПолучитьСубконто(1,1, ТМЦ) = 1 Тогда
			ОстКво = Ит.СКД("К");
			ОстСумма = Ит.СКД();
		КонецЕсли;
		Если Счет.Валютный = 1 Тогда
			Если ИтВал.ПолучитьСубконто(1,1, ТМЦ) = 1 Тогда			
				ИтВал.ВыбратьСчета();
				Пока ИтВал.ПолучитьСчет() = 1 Цикл	
					Если ИтВал.Счет = Счет Тогда
						ИтВал.ВыбратьВалюты();
						Пока ИтВал.ПолучитьВалюту() = 1 Цикл
							Если ИтВал.СКД("В") <> 0 Тогда
								Валюта = ИтВал.Валюта;
								ОстВСумма = ИтВал.СКД("В");
								Прервать;
							КонецЕсли;                         	
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		
		Если ОстКво < Кво Тогда
			Сообщить("В указанном месте хранения и подразделении недостаточно НА: " + Строка(ТМЦ));
			Если Константа.РазрешитьОтрицОстатки = Нет Тогда
				Возврат 0;
			КонецЕсли;			
			Стоимость = 0;
			ВалСтоимость = 0;
		Иначе
			Стоимость = ОстСумма / ОстКво * Кво;
			ВалСтоимость = ОстВСумма / ОстКво * Кво;
		КонецЕсли;    		
		
		глПроводка(Контекст, СталоСчет, Счет, Стоимость, "Перемещение НА", Кво, НовоеПодразделение, НовоеМестоХранения, Стало, Подразделение, МестоХранения, ТМЦ, 
		Валюта, ВалСтоимость, "НА");
	КонецЦикла;
КонецФункции

Процедура СформироватьСписание()
	ТЗСп = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗСп, "ТМЦ,Стало,КвоСписания,ДопКвоСписания");
	ТЗСп.НоваяКолонка("Коэффициент", "Число");
	ТЗСп.НоваяКолонка("ДатаСписания", "Дата");
	ТЗСп.НоваяКолонка("Ед", "Справочник.Единицы");
	ТЗСп.ВыбратьСтроки();
	Пока ТЗСп.ПолучитьСтроку() = 1 Цикл
		ТЗСп.Ед = ТЗСп.ТМЦ.ЕдиницаПоУмолчанию;
		Если СписаниеСоСкладаС = 1 Тогда
			ТЗСп.ТМЦ = ТЗСп.Стало;
		КонецЕсли;
		ТЗСп.Коэффициент = 1;
		ТЗСп.ДатаСписания = ДатаДок;
	КонецЦикла;
	ТЗСп.Свернуть("ТМЦ,Коэффициент,Ед,ДатаСписания", "КвоСписания,ДопКвоСписания");
	//Если ТЗСп.Итог("КвоСписания") = 0 Тогда
	//	Возврат;
	//КонецЕсли;		
	
	глСформироватьСписание(ТекущийДокумент(), ТЗСп, ?(СписаниеСоСкладаС = 1, МестоХранения, НовоеМестоХранения));
КонецПроцедуры


// ===================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Если (ВидТМЦ = 2) или ((МестоХранения.ДляГП = 0) и (НовоеМестоХранения.ДляГП = 0)) Тогда
			Сообщить("Вам разрешено проводить только с/на основного склада");
	        СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Откуда = МестоХранения;
	Куда = НовоеМестоХранения;
	
	Если ПроверкаШапки()=0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки()=0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	КонецЦикла;
	Если (ВидТМЦ = 1) Тогда
		Если (ДвиженияПартии() = 0) Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;	          
	Иначе
		ПроводкиНА();
	КонецЕсли;
	
	Операция.СуммаОперации = ИтСуммаУчБезНДС;
	Операция.Содержание = ""+Откуда+" -> "+Куда+" "+Примечание;
	СформироватьСписание();
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения()
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Если (ВидТМЦ = 2) или ((МестоХранения.ДляГП = 0) и (НовоеМестоХранения.ДляГП = 0)) Тогда
			Сообщить("Вам разрешено проводить только с/на основного склада");
	        СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
