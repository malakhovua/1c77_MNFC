Перем СтруктИзменений;
Перем Инфо, Укр, Ukr;
Перем НачальнаяДатаДокумента;
Перем СписокДействий;
Перем СтарВидТМЦ;
Перем РегО;
Перем ТекПроцСписания;

// ===============================
Процедура УстСчет()
	Если ТМЦ.Выбран() = 1 Тогда 
		Если ТМЦ.Вид() = "ТМЦ" Тогда
			Счет = ТМЦ.Счет;
		Иначе
			Счет = ТМЦ.Счет.Получить(ДатаДок);
		КонецЕсли;

		Если (МестоХранения.Тип = Склады) и (МестоХранения.ВидСклада = Розничный) Тогда
			Если ((СталоСчет = СчетПоКоду("25")) 
			ИЛИ (СталоСчет = СчетПоКоду("26"))
			ИЛИ (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) 
			ИЛИ (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)) Тогда 
			    Счет = СчетПоКоду("28.2.2");
			Иначе	
			    Счет = СчетПоКоду("28.2.1");
			Конецесли;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура УстСталоСчет()
	Если Стало.Выбран() = 1 Тогда
		Если Стало.Вид() = "ТМЦ" Тогда
			СталоСчет = Стало.Счет;
		Иначе
			СталоСчет = Стало.Счет.Получить(ДатаДок);
		КонецЕсли;
		
		Если (НовоеМестоХранения.Тип = Склады) и (НовоеМестоХранения.ВидСклада = Розничный) Тогда
			Если ((Счет = СчетПоКоду("25")) 
			ИЛИ (Счет = СчетПоКоду("26"))
			ИЛИ (Стало.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) 
			ИЛИ (Стало.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)) Тогда 
		    	СталоСчет = СчетПоКоду("28.2.2");
			Иначе	
		    	СталоСчет = СчетПоКоду("28.2.1");
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ИзмКво()
	Если ТМЦ.Вид()="ТМЦ" Тогда
		глВыч_суммы_накл(Контекст);
	Иначе
		СуммаУчБезНДС = Кво * ТМЦ.Цена_Прих;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмСтало()
	Если Стало.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли;
	Если НовоеМестоХранения.Выбран()=0 Тогда
	    Предупреждение("Не заполнено поле Куда!");
	    Возврат;
	КонецЕсли;
	Если Стало.Вид() = "ТМЦ" Тогда
		Если глПроверкаТовараВДокументе(Контекст,Стало) = Нет Тогда
			Стало = 0;
			Возврат;
		КонецЕсли;	
	КонецЕсли;
    УстСталоСчет();
КонецПроцедуры

// ===============================
Процедура ИзмТМЦ()
	Если ТМЦ.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли;
	Если МестоХранения.Выбран()=0 Тогда
	    Предупреждение("Не заполнено поле Откуда!");
	    Возврат;
	КонецЕсли;
	Если ТМЦ.Вид()="ТМЦ" Тогда 
		Если глПроверкаТовараВДокументе(Контекст,ТМЦ) = Нет Тогда
			ТМЦ = 0;
			Возврат;
		КонецЕсли;	
		Если (НовоеМестоХранения.СуммовойУчет=1)
		И ((ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) 
		ИЛИ (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)) Тогда 
			глКомментарий("ТМЦ "+ТМЦ+" нельзя перемещать на розничный склада с признаком ведения суммового учета.",1);
			ТМЦ = 0;
			Возврат;
		КонецЕсли;	
		глПриИзмененииТовара(Контекст);
		//Стало = ?(НовоеМестоХранения.СуммовойУчет = 0, ТМЦ, Константа.ТоварыВАссортименте);
		
		Стало = ТМЦ; //--- УМК Сандомирский В.Ю, --- Упаковка , то же ТМЦ !!!
		
		ИзмСтало();
	Иначе
		Стало = ТМЦ;
		СуммаУчБезНДС = Кво * ТМЦ.Цена_Прих;
		ИзмСтало();
	КонецЕсли;
	УстСчет();
КонецПроцедуры
                                 
// ===============================
Функция УстТоварыВАссортименте(Рекв)
	Рекв = Константа.ТоварыВАссортименте;
	Если Рекв.Выбран()=0 Тогда
		Предупреждение("На складе используется суммовой учет ТМЦ."+РазделительСтрок+
					   "Не заполнена константа ""Товары в ассортименте""!",1);
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

// ===============================
Процедура ИзмМестоХранения()
	Если МестоХранения.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли;              
           
	Если (МестоХранения.Тип = Склады) и (МестоХранения.ВидСклада = Розничный) и (МестоХранения.СуммовойУчет = 1) и
	     (НовоеМестоХранения.Тип = Склады) и (НовоеМестоХранения.ВидСклада = Розничный) и (НовоеМестоХранения.СуммовойУчет = 1) Тогда 
		 Предупреждение("Нельзя выполнять перемещение с розничного склада с суммовым учетом на розничный склад с суммовым учетом!");
		 МестоХранения = 0;
		 Возврат;
	КонецЕсли;

	Если МестоХранения.Тип = МОЛы Тогда
	    Выдал = МестоХранения.МОЛ;
	КонецЕсли;
	
	// изменим счета в табличной части
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Изменить счет учета в табличной части?","Да+Нет") = "Да" Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				УстСчет();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
        
	Если МестоХранения.СуммовойУчет = 1 Тогда
		// в табличной части установим ТМЦ = ТоварыВАссонртименте
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
	    	УстТоварыВАссортименте(ТМЦ);
		КонецЦикла;
	ИначеЕсли НовоеМестоХранения.СуммовойУчет <> 1 Тогда
		// если выбрано склад без суммового учета и второй склад также без суммового учета,
		// тогда уберем находящиеся в табличной части ТоварывАссортименте (ТМЦ = Стало)
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			// если до этого в строке уже было не ТоварывАссортименте, так и оставим
			Если ТМЦ = Константа.ТоварыВАссортименте Тогда
				ТМЦ = Стало;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если МестоХранения.ДляГП = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Стало = Константа.ТоварыВАссортименте;
		КонецЦикла;
	ИначеЕсли МестоХранения.ДляГП = 0 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Стало = ТМЦ;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// ===============================
// Назначение: обновляет список действий по кнопке "Действия"
//		
// Аргументы:
//		
Процедура ОбновитьСписокДействий()      
	// обновим список действий
	ТекстСписокДействий = "
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале";
	Если (ПустоеЗначение(НовоеМестоХранения) = 0) Тогда
	    Если (НовоеМестоХранения.ВидСклада =Перечисление.ВидыСкладов.Розничный) Тогда
			ТекстСписокДействий = "
				|ДвиженияДокумента," + ?(Форма.ТолькоПросмотр() = 0, " 
				|ОбновлениеЦен,", "") + "
				|ВводНаОсновании,
				|ОткрытьВЖурнале";
		КонецЕсли;
	КонецЕсли;
	СписокДействий = глПолучитьСписокДействий(ТекстСписокДействий);
КонецПроцедуры //ОбновитьСписокДействий


// ===============================
Процедура ИзмНовоеМестоХранения()
	Если НовоеМестоХранения.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли;
	   
	Если (МестоХранения.Тип = Склады) и (МестоХранения.ВидСклада = Розничный) и (МестоХранения.СуммовойУчет = 1) и
	     (НовоеМестоХранения.Тип = Склады) и (НовоеМестоХранения.ВидСклада = Розничный) и (НовоеМестоХранения.СуммовойУчет = 1) Тогда 
		 Предупреждение("Нельзя выполнять перемещение с розничного склада с суммовым учетом на розничный склад с суммовым учетом!",1);
		 НовоеМестоХранения = 0;
		 Возврат;
	КонецЕсли;
	
	Если НовоеМестоХранения.Тип = МОЛы Тогда
	    Получил = НовоеМестоХранения.МОЛ;
	КонецЕсли;

	// изменим счета в табличной части
	Если КоличествоСтрок() > 0 Тогда
		ИзменятьСчета = Вопрос("Изменить счет учета в табличной части?","Да+Нет");
		ИзменятьЦены = Вопрос("Изменить цены в табличной части?","Да+Нет");
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ИзменятьСчета = "Да" Тогда
				УстСталоСчет();
			КонецЕсли;
			Если ИзменятьЦены = "Да" Тогда
				глПриИзмененииТовара(Контекст);
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;

	Если НовоеМестоХранения.СуммовойУчет = 1 Тогда
		// в табличной части установим Стало = ТоварыВАссонртименте
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
	    	УстТоварыВАссортименте(Стало);
		КонецЦикла;
	ИначеЕсли МестоХранения.СуммовойУчет <> 1 Тогда
		// если выбрано склад без суммового учета и второй склад также без суммового учета,
		// тогда уберем находящиеся в табличной части ТоварывАссортименте (Стало = ТМЦ)
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			// если до этого в строке уже было не ТоварывАссортименте, так и оставим
			Если Стало = Константа.ТоварыВАссортименте Тогда
				Стало = ТМЦ;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Пересчитать процент списания в строках?", "Да+Нет") = "Да" Тогда
		    ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				ПроцСписания = глПолучитьПроцентСписания(ТМЦ, МестоХранения, ДатаДок);
				глИзмПроцСписания(Контекст, 1);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
	ОбновитьСписокДействий();
КонецПроцедуры

// ===============================
Процедура УстИнфо()
	Инфо = "";
	Если (МестоХранения.Выбран()=1) и (НовоеМестоХранения.Выбран()=1) Тогда
	    Если (МестоХранения.Тип = Склады) и (НовоеМестоХранения.Тип = Склады) Тогда 
	    	Инфо = "Упаковываем ";   						//--- УМК Сандомирский В.Ю,
	        Если МестоХранения.ВидСклада = Оптовый Тогда
	        	Инфо = Инфо+"с оптового склада ";
	        ИначеЕсли МестоХранения.СуммовойУчет=1 Тогда
			    Инфо = Инфо + "из розницы с суммовым учетом ";
			Иначе
	        	Инфо = Инфо + "из розницы ";
	        КонецЕсли;
	        Если НовоеМестоХранения.ВидСклада = Оптовый Тогда
	        	Инфо = Инфо+"на оптовый склад";
	        ИначеЕсли НовоеМестоХранения.СуммовойУчет=1 Тогда
			    Инфо = Инфо + "в розницу с суммовым учетом.";
			Иначе
			    Инфо = Инфо + "в розницу.";
	        КонецЕсли;
	    КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Функция УстДоступность()
	УстИнфо();
	
	Форма.Заголовок(глЗаголовок(Контекст,"Перемещение"));
	
    Если (Модифицированность() = 1) Или (Проведен() = 0) Тогда
		Форма.кПечать.Доступность(0);
	Иначе
		Форма.кПечать.Доступность(1);
	КонецЕсли;
	            
    ВидимостьЦенаСНДС = 0;
	Если (ПустоеЗначение(НовоеМестоХранения) = 0) Тогда
	    Если (НовоеМестоХранения.ВидСклада =Перечисление.ВидыСкладов.Розничный) Тогда
	        ВидимостьЦенаСНДС = 1;
		КонецЕсли;
	КонецЕсли;                   
	          
	Форма.ЦенаСНДС.Видимость(ВидимостьЦенаСНДС);
	Форма.СуммаСНДС.Видимость(ВидимостьЦенаСНДС);
	                       
 	Если МестоХранения.Тип = Склады Тогда
 		Форма.Выдал.Доступность(1);
//		Форма.ТМЦ.НеИзменятьВид(1);
		Если МестоХранения.ВидСклада = Розничный Тогда
		    Форма.Счет.Доступность(0);
			Если МестоХранения.СуммовойУчет=1 Тогда
				Форма.ТМЦ.Доступность(0);
				Форма.Предпочтение.Доступность(0);
			Иначе
				Форма.ТМЦ.Доступность(1);
				Форма.Предпочтение.Доступность(1);
			КонецЕсли;
		Иначе
			Форма.ТМЦ.Доступность(1);
			Форма.Предпочтение.Доступность(1);
			Форма.Счет.Доступность(1);
		КонецЕсли;
	Иначе
		Форма.Выдал.Доступность(0);
		Форма.ТМЦ.НеИзменятьВид(0);  
	КонецЕсли;

	Если (МестоХранения.Тип = Склады) и (МестоХранения.ВидСклада = Розничный)
	и (МестоХранения.СуммовойУчет = 1) Тогда
		Форма.СуммаУчБезНДС.Видимость(1);
	Иначе
		Форма.СуммаУчБезНДС.Видимость(0);
	КонецЕсли;

	Если НовоеМестоХранения.Тип = Склады Тогда
		Форма.Получил.Доступность(1);
		Форма.Стало.НеИзменятьВид(1);
		Если НовоеМестоХранения.ВидСклада = Розничный Тогда
		    Форма.СталоСчет.Доступность(0);
			Если НовоеМестоХранения.СуммовойУчет=1 Тогда
				Форма.Стало.Доступность(0);
			Иначе
				Форма.Стало.Доступность(1);
			КонецЕсли;
		Иначе
			Форма.Стало.Доступность(1); 
			Форма.СталоСчет.Доступность(1);
		КонецЕсли;
	Иначе
		Форма.Получил.Доступность(0);  
		Форма.Стало.НеИзменятьВид(0);
	КонецЕсли;

	Если ВидТМЦ = 1 Тогда
		НазначитьВид(ТМЦ,"ТМЦ");
		НазначитьВид(Стало,"ТМЦ");
		Форма.Предпочтение.Доступность(1);
		Форма.кПодбор.Доступность(1-Форма.ТолькоПросмотр());
	Иначе
		НазначитьВид(ТМЦ,"НеоборотныеАктивы");
		НазначитьВид(Стало,"НеоборотныеАктивы");
		Форма.Предпочтение.Доступность(0);
		Форма.кПодбор.Доступность(0);
	КонецЕсли;
	Форма.ТМЦ.НеИзменятьВид(1);
	Форма.Стало.НеИзменятьВид(1);
	
	Если (НовоеМестоХранения.ВидСклада<>Розничный) или (НовоеМестоХранения.СуммовойУчет<>1) Тогда
	КонецЕсли;
	
	Если ТМЦ.Вид() = "ТМЦ" Тогда
		Форма.ДопКво.Доступность(ТМЦ.УчетДопКво);
	КонецЕсли;
	
    Возврат "";
КонецФункции

// ===============================
Процедура ПриНачалеРедактированияСтроки()
	Если (МестоХранения.Выбран() = 0) или (НовоеМестоХранения.Выбран() = 0) Тогда
	    Предупреждение("Заполните реквизиты Откуда и Куда!");
		СтатусВозврата(0);
	    Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;
	ТекПроцСписания = ПроцСписания;
КонецПроцедуры

Процедура ПриОкончанииРедактированияСтроки()
	Если (ТекПроцСписания <> ПроцСписания) Тогда
		Если Вопрос("Действительно изменить % списания?", "Да+Нет") = "Нет" Тогда
			ПроцСписания = ТекПроцСписания;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	ПриНачалеРедактированияСтроки();
	Если СтатусВозврата()=1 Тогда
	    Если (МестоХранения.ВидСклада=Розничный) и (МестоХранения.СуммовойУчет=1) Тогда
			Если УстТоварыВАссортименте(ТМЦ) <> 1 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			УстСчет();
	    КонецЕсли;
	    Если (НовоеМестоХранения.ВидСклада=Розничный) и (НовоеМестоХранения.СуммовойУчет=1) Тогда
			Если УстТоварыВАссортименте(Стало) <> 1 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			УстСталоСчет();
	    КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)
	Если (НовоеМестоХранения.ВидСклада = Розничный) И (НовоеМестоХранения.СуммовойУчет=1)
	И (МестоХранения.ВидСклада = Розничный) И (МестоХранения.СуммовойУчет=1) Тогда
		Если ТМЦ <> Константа.ТоварыВАссортименте Тогда
			глКомментарий("ТМЦ "+ТМЦ+" нельзя перемещать с розничного склада с признаком ведения суммового учета.",1);
			ТМЦ = 0;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НовоеМестоХранения.СуммовойУчет=1 Тогда
		Если ((ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) 
		ИЛИ (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция)) Тогда 
			глКомментарий("ТМЦ "+ТМЦ+" нельзя перемещать на розничный склада с признаком ведения суммового учета.",1);
			ТМЦ = 0;
			Возврат;
		КонецЕсли;	
	КонецЕсли;	

	текНачальнаяСтрока = КоличествоСтрок();
	глПриОбработкеПодбора(Выб,Контекст);  
	
	Для текНомерСтроки = текНачальнаяСтрока По КоличествоСтрок() Цикл
		ПолучитьСтрокуПоНомеру(текНомерСтроки);
		ИзмТМЦ();
	КонецЦикла;	
	
КонецПроцедуры

// ===============================
Процедура ВводНового(Признак)
	Если Признак = 1 Тогда
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	МестоХранения = Фирма.ОсновнойСклад;
	НовоеМестоХранения = Фирма.СкладМатериалов;
КонецПроцедуры

Процедура УстВидимостьП()
	Форма.Подразделение.Видимость(ВидТМЦ-1);
	Форма.тПодразделение.Видимость(ВидТМЦ-1);
	Форма.НовоеПодразделение.Видимость(ВидТМЦ-1);
	Форма.тНовоеПодразделение.Видимость(ВидТМЦ-1);
КонецПроцедуры

// ===============================
Процедура ИзмЧтоПриходуем()
	Если (КоличествоСтрок()<>0) и (СтарВидТМЦ<>ВидТМЦ) Тогда
	    ВидТМЦ = СтарВидТМЦ;
	    Предупреждение("Сначала удалите все строки!");
	Иначе
		СтарВидТМЦ = ВидТМЦ;
	КонецЕсли;
	УстВидимостьП();
КонецПроцедуры

Процедура ИзмфОстаткиНаДокумент()
	Если фОстаткиНаДокумент = 1 Тогда
		РегО = СоздатьОбъект("Регистр.Остатки");
		Если ТекущийДокумент().Выбран() = 1 Тогда
			Если СравнитьТА() = -1 Тогда
				РегО.ВременныйРасчет(1);
			    РассчитатьРегистрыНа(ТекущийДокумент());
			КонецЕсли;		    
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	Если ВидТМЦ = 0 Тогда
		ВидТМЦ = 1;		
	КонецЕсли;
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Если (ВидТМЦ = 2) или ((МестоХранения.ДляГП = 0) и (НовоеМестоХранения.ДляГП = 0)) Тогда
	        СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		Форма.ВидТМЦ.Доступность(0);
		Форма.рПНА.Доступность(0);
	КонецЕсли;
	СтарВидТМЦ = ВидТМЦ;
	УстВидимостьП();
	НачальнаяДатаДокумента = ДатаДок;
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1); 
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кПровести.Доступность(0);
		Форма.кЗаполнить.Доступность(0);
		Форма.кПодбор.Доступность(0);
//		Форма.кДействия.Доступность(0);          
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;         
	
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладуОткуда.Видимость(0);
	    Форма.тОстатокПоСкладуКуда.Видимость(0);
	КонецЕсли;

	фОстаткиНаДокумент = ВосстановитьЗначение("ОстаткиНаДокумент");
	ИзмфОстаткиНаДокумент();
	
	Форма.МестоХранения.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НовоеМестоХранения.ВыполнятьФормулуТолькоПриИзменении(1);
	глМестоХранения = МестоХранения;
	УстИнфо();
	ОбновитьСписокДействий();
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ТМЦ = Форма.Параметр Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Стало = Форма.Параметр Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений);
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	Если глЕстьИзменения(Контекст, СтруктИзменений, "") = 1 Тогда		
		Автор = глПользователь;
	КонецЕсли;
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Если НазваниеНабораПрав() = "Заказ" Тогда
		Если (ВидТМЦ = 2) или ((МестоХранения.ДляГП = 0) и (НовоеМестоХранения.ДляГП = 0)) Тогда
			Сообщить("Вам запрещено создавать перемешения, в которых ни один из складов не является складом готовой продукции");
	        СтатусВозврата(0);
		КонецЕсли;
	КонецЕсли;
	Попытка
		АвтоВремяОтключить();
		Если (МестоХранения = НовоеМестоХранения) Тогда
		    УстановитьВремя(9,0,3);
		ИначеЕсли (МестоХранения = Константа.СкладОбвалка) И (НовоеМестоХранения = Фирма.СкладМатериалов) Тогда
			УстановитьВремя(16,15,0);
		ИначеЕсли (МестоХранения = Константа.СкладМорозилка) И (НовоеМестоХранения = Фирма.СкладМатериалов) Тогда
		    УстановитьВремя(16,15,0);
		ИначеЕсли (МестоХранения = Фирма.СкладМатериалов) И (НовоеМестоХранения = Константа.СкладМорозилка) Тогда
		    УстановитьВремя(18,00,0);
		ИначеЕсли (МестоХранения = Фирма.СкладМатериалов) И (НовоеМестоХранения = Константа.СкладОбвалка) Тогда
		    УстановитьВремя(16,20,0);
		ИначеЕсли (МестоХранения = Константа.СкладОбвалка) И (НовоеМестоХранения = Фирма.СкладМатериалов) Тогда
		    УстановитьВремя(16,15,0);
		ИначеЕсли ((МестоХранения = Константа.СкладОбвалка) И (НовоеМестоХранения = Константа.СкладМорозилка) )
				ИЛИ ((НовоеМестоХранения = Константа.СкладОбвалка) И (МестоХранения = Константа.СкладМорозилка)) Тогда
		    УстановитьВремя(9,0,2);
		ИначеЕсли (МестоХранения.ДляГП = 1) И (НовоеМестоХранения = Фирма.СкладМатериалов) Тогда
		    УстановитьВремя(17,10,0);
		ИначеЕсли (МестоХранения = Константа.СкладМорозилка) И (НовоеМестоХранения.ДляГП = 1) Тогда
		    УстановитьВремя(9,0,3);
		КонецЕсли;		    
		//
		//Если МестоХранения = Константа.ОснСкладГП Тогда
		//	Если НовоеМестоХранения = Фирма.СкладМатериалов Тогда
		//		УстановитьВремя(17,10,0);
		//	Иначе				
		//	    УстановитьВремя(8,30,0);
		//	КонецЕсли;		    
		//ИначеЕсли (МестоХранения = Константа.СкладОбвалка) и (НовоеМестоХранения = Константа.СкладМорозилка) Тогда
		//	УстановитьВремя(9,01,0);
		//ИначеЕсли (МестоХранения = Фирма.СкладМатериалов) и (НовоеМестоХранения = Константа.СкладМорозилка) Тогда
		//	УстановитьВремя(9,03,0);
		//Иначе
		//	УстановитьВремя(9,02,0);
		//КонецЕсли;
		
	Исключение КонецПопытки;	
КонецПроцедуры

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета=СоздатьОбъект("СписокЗначений");
	спСчета.ДобавитьЗначение(Счет);
	спОтбор.Установить("Счет",спСчета);
	Если глПартионныйУчетПоСкладам = Да Тогда
	    спОтбор.Установить("МестоХранения",МестоХранения);
	КонецЕсли;
	спОтбор.Установить("Контекст",Контекст);      
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры

// ============================= 
Процедура Печать()
	глУстПропись(Гривня);
	Таб = СоздатьОбъект("Таблица");
	Укр = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");
	Если (МестоХранения.Тип <> МОЛы) И (НовоеМестоХранения.Тип <> МОЛы)
	И ((МестоХранения.ВидСклада = Розничный) Или (НовоеМестоХранения.ВидСклада = Розничный)) Тогда
		Таб.ИсходнаяТаблица("Розница"+Укр);
	Иначе
		Таб.ИсходнаяТаблица("Опт"+?((НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ПрочиеЗаказ") ИЛИ (НазваниеНабораПрав() = "МастерЭкспедиции") , "БЦ","")+Укр);
	КонецЕсли;
	Таб.ВывестиСекцию("Шапка");
	
	Опер = СоздатьОбъект("Операция");
	Опер.НайтиОперацию(ТекущийДокумент());
	
	СуммаУчВсего = 0; СуммаРознВсего = 0; КвоВсего = 0;
	Ном = 1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		СуммаУч = 0; Наценка = 0;
		фПрошлиСтроки = 0; // чтобы не выбирать все проводки для каждой строки
		Опер.ВыбратьПроводки();
		Пока Опер.ПолучитьПроводку()=1 Цикл
			Если ((Опер.Кредит.ТМЦ <> ТМЦ)) И (МестоХранения.СуммовойУчет = 0) ИЛИ
			((Опер.Дебет.ТМЦ <> Стало)) И (МестоХранения.СуммовойУчет = 1) Тогда
				Если фПрошлиСтроки = 0 Тогда
					Продолжить; // еще не нашли нужных строк
				ИначеЕсли (фПрошлиСтроки = 1) И
				((ПустоеЗначение(Опер.Кредит.Счет) = 1) И (МестоХранения.СуммовойУчет = 0)) ИЛИ
				((ПустоеЗначение(Опер.Дебет.Счет) = 1)  И (МестоХранения.СуммовойУчет = 1)) Тогда
					Продолжить; //корреспонденция при суммовом учете
				ИначеЕсли (фПрошлиСтроки = 1) И ((Опер.Дебет.Счет.ПринадлежитГруппе(СчетПоКоду("285"))=1) Или (Опер.Кредит.Счет.ПринадлежитГруппе(СчетПоКоду("285"))=1)) Тогда
					//при суммовом учете Кредит ТМЦ <> ТМЦ (пересортица)
				Иначе
					Прервать; // уже нашли нужные строки, дальше смотреть не нужно
				КонецЕсли;
			КонецЕсли;
			Если (Опер.Дебет.Счет.ПринадлежитГруппе(СчетПоКоду("285"))=1) Или (Опер.Кредит.Счет.ПринадлежитГруппе(СчетПоКоду("285"))=1) Тогда
				// добавим наценку
				Наценка = Наценка + Макс(Опер.Сумма,-Опер.Сумма); // добавим наценку
			Иначе
				// увеличим учетную сумму
				СуммаУч = СуммаУч + Опер.Сумма;
			КонецЕсли;
			фПрошлиСтроки = 1;
		КонецЦикла;
		Если (МестоХранения.ВидСклада = Розничный) и (НовоеМестоХранения.ВидСклада = Розничный) Тогда
			//при перемещении из розницы в розницу учетная сумма и наценка делаются одной проводкой
			СуммаУч = СуммаУч - Наценка;  
		КонецЕсли;
		СуммаРозн = СуммаУч + Наценка;
		ЦенаУч = ?(Кво = 0, 0, СуммаУч / Кво);
		ЦенаРозн = ?(Кво = 0, 0, СуммаРозн / Кво);
		Если ТМЦ.Вид() = "ТМЦ" Тогда
			ЕдПоУмолчанию = ТМЦ.БазоваяЕдиница;
		Иначе                                 
			ЕдПоУмолчанию = ТМЦ.БазЕдиница;	
		КонецЕсли;			
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
		КвоВсего = КвоВсего + Кво;
		СуммаУчВсего = СуммаУчВсего + СуммаУч; 
		СуммаРознВсего = СуммаРознВсего + СуммаРозн;
	КонецЦикла;
	КтоВыдал = глФИО(Выдал,1);
	КтоПолучил = глФИО(Получил,1);
	Таб.ВывестиСекцию("Дно");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,0,0);	
	Таб.Показать("Перемещение ТМЦ","");
КонецПроцедуры	

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,СтандОбр)
	Если Рекв = "Предпочтение" Тогда
	    ВыборПредпочтения();    
		СтандОбр = 0;
	ИначеЕсли (Рекв = "СталоСчет") и (Константа.ИспользоватьСписокКорректныхПроводок = Да) 
	И (Счет.Выбран() = 1) Тогда
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
	    СписокКорректныхПроводок.Установить("Счет", Счет);
	    СписокКорректныхПроводок.Установить("Корреспонденция", 0);
		глЗначениеОтбора = СписокКорректныхПроводок;
	ИначеЕсли (Рекв="Выдал") или (Рекв="Получил") Тогда
		КонтФирмы = Фирма;
		СтандОбр = 0;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВводНаОсновании(Док)
	Фирма = Док.Фирма;
	ДокументОснование = Док;
	глУстановитьНомер(Контекст);
	
	//--- Будет вводится позже на основании какого то другого заказного документа
	
	//Если Найти(Док.Вид(),"ПриходнаяНакладная") <> 0 Тогда
	//	// считаем, что перемещаем с оптового склада в розницу
	//    МестоХранения = Док.МестоХранения;
	//	Выдал = 0;
	//	Если НовоеМестоХранения.Выбран() = 0 Тогда 
	//		НовоеМестоХранения = Фирма.ОсновнойСклад;
	//	КонецЕсли;
	//	Если (ПустоеЗначение(Константа.ТоварыВАссортименте)=1) И (Док.МестоХранения.СуммовойУчет=1) Тогда
	//		Предупреждение("На складе-получателе используется суммовой учет ТМЦ."+РазделительСтрок+
	//				"Не заполнена константа ""Товары в ассортименте""!",2);
	//		СтатусВозврата(0);
	//		Возврат;
	//	КонецЕсли;
	//	Получил = 0;
	//	Док.ВыбратьСтроки();
	//	Пока Док.ПолучитьСтроку() = 1 Цикл
	//		Если Док.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
	//			Продолжить;
	//		КонецЕсли;	
	//		НоваяСтрока();
	//		ТМЦ = Док.ТМЦ;
	//		УстСчет();
	//		Если МестоХранения.ДляГП = 1 Тогда
	//			Стало = Константа.ТоварыВАссортименте;
	//		Иначе
	//			Стало = ТМЦ;
	//		КонецЕсли;
	//		УстСталоСчет();
	//		Если (НовоеМестоХранения.Тип = Склады) и (НовоеМестоХранения.ВидСклада = Розничный) Тогда
	//			глПриИзмененииТовара(Контекст);
	//		Иначе	
	//		    Если глЕстьРеквизитМнЧ("ЦенаСНДС", Док.Вид())= Да Тогда
	//				ЦенаСНДС = Док.ЦенаСНДС;
	//			Иначе	                  
	//				ЦенаСНДС = Док.ЦенаБезНДС;
	//			КонецЕсли;	
	//		КонецЕсли;	
	//		Кво = Док.Кво;
	//		ДопКво = Док.ДопКво;
	//		ПроцСписания = глПолучитьПроцентСписания(ТМЦ, НовоеМестоХранения, ДатаДок);
	//		глИзмПроцСписания(Контекст);
	//		ДопКвоСписания = Док.ДопКвосписания;
	//		глВыч_суммы_накл(Контекст,1);
	//	КонецЦикла;
	//ИначеЕсли Найти(Док.Вид(),"ВводВЭксплуатацию") <> 0 Тогда
	//	// считаем, что перемещаем с оптового склада в розницу
	//    МестоХранения = Док.МестоХранения;
	//	Выдал = 0;
	//	Если НовоеМестоХранения.Выбран() = 0 Тогда 
	//		НовоеМестоХранения = Фирма.ОсновнойСклад;
	//	КонецЕсли;
	//	ВидТМЦ = 2;
	//	Получил = 0;
	//	Подразделение = Док.Подразделение;
	//	НовоеПодразделение = Док.Подразделение;
	//	Док.ВыбратьСтроки();
	//	Пока Док.ПолучитьСтроку() = 1 Цикл
	//		НоваяСтрока();
	//		ТМЦ = Док.НеоборотныйАктив;
	//		УстСчет();
	//		Если НовоеМестоХранения.СуммовойУчет=1 Тогда
	//			Стало = Константа.ТоварыВАссортименте;
	//		Иначе
	//			Стало = ТМЦ;
	//		КонецЕсли;
	//		УстСталоСчет();
	//		Кво = Док.Кво;        
	//		глВыч_суммы_накл(Контекст,1);
	//	КонецЦикла;
	//ИначеЕсли Док.Вид() = "Инвентаризация" Тогда
	//	МестоХранения = Док.МестоХранения;
	//	НовоеМестоХранения = Док.МестоХранения;
	//Иначе
	//	// зеркально отображаем документ, являющийся основанием для заполнения
	//    МестоХранения = Док.НовоеМестоХранения;
	//	Выдал = Док.Получил;
	//	НовоеМестоХранения = Док.МестоХранения;
	//	Получил = Док.Выдал;
	//	Док.ВыбратьСтроки();
	//	Пока Док.ПолучитьСтроку() = 1 Цикл
	//		НоваяСтрока();
	//		ТМЦ = Док.Стало;
	//		Счет = Док.СталоСчет;
	//		Стало = Док.ТМЦ;
	//		СталоСчет = Док.Счет;
	//		Кво = Док.Кво;
	//		ДопКво = Док.ДопКво;
	//		ЦенаСНДС = Док.ЦенаСНДС;
	//		СуммаУчБезНДС = Док.СуммаУчБезНДС;
	//		СуммаСНДС = Док.СуммаСНДС;
	//	КонецЦикла;
	//КонецЕсли;
КонецПроцедуры

// ===============================
Процедура Заполнить(Док=0) // заполнить по приходным документам
	Перем ВыбЗначение, Таб;
	
	Если Док = 0 Тогда
		Если ДокументОснование.Вид() = "Инвентаризация" Тогда
			Если (МестоХранения.Выбран() = 0) ИЛИ (НовоеМестоХранения.Выбран() = 0) Тогда
				Предупреждение("Нужно выбрать склад");
				Возврат;
			КонецЕсли;
			Если МестоХранения = ДокументОснование.МестоХранения Тогда
				ВыбЗначение = "Списание";
			Иначе
				ВыбЗначение = "Оприходование";			    
			КонецЕсли;
			//Меню = СоздатьОбъект("СписокЗначений");
			//Меню.ДобавитьЗначение("Списание");
			//Меню.ДобавитьЗначение("Оприходование");
			//Если Меню.ВыбратьЗначение(ВыбЗначение,"",,,1) = 0 Тогда
			//	Возврат;
			//КонецЕсли;
		Иначе
			Меню = СоздатьОбъект("СписокЗначений");
			Меню.ДобавитьЗначение("ПриходнаяНакладнаяГТД","По ГТД");
			Меню.ДобавитьЗначение("ПриходнаяНакладнаяЗапасы","По приходным накладным (запасы)");
			Меню.ДобавитьЗначение("Перемещение","По документам Перемещение");
			Если Меню.ВыбратьЗначение(ВыбЗначение,"",,,1) = 0 Тогда
				Возврат;
			КонецЕсли;
			Док = СоздатьОбъект("Документ."+ВыбЗначение);
			Если Док.Выбрать("Выберите документ (существущие строки будут удалены):") = 0 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
	
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить существующие строки?","Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	          
	Если ДокументОснование.Вид() = "Инвентаризация" Тогда
		ДокументОснование.ВыбратьСтроки();
		Пока ДокументОснование.ПолучитьСтроку() = 1 Цикл
			Если ((ВыбЗначение = "Списание") И (ДокументОснование.Разница > 0)) 
				ИЛИ ((ВыбЗначение = "Оприходование") И (ДокументОснование.Разница < 0)) 
				ИЛИ (ДокументОснование.Разница = 0) 
				ИЛИ (ДокументОснование.ДляП <> Да) Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока();
			ТМЦ = ДокументОснование.ТМЦ;
			ИзмТМЦ();
			Кво = ?(ДокументОснование.Разница < 0, -ДокументОснование.Разница, ДокументОснование.Разница);
		КонецЦикла;
	Иначе		
		ВводНаОсновании(Док.ТекущийДокумент());	
		// поскольку повторения не разрешены...
		ВыгрузитьТабличнуюЧасть(Таб);
		Таб.Свернуть("ТМЦ,Предпочтение,Счет,Стало,СталоСчет","Кво");
		ЗагрузитьТабличнуюЧасть(Таб);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмСуммаУчБезНДС()
	// При изменении реквизита СуммаУчБезНДС признак модифицированности
	// устанавливается после прорисовки формы, из-за чего не изменяется
	// доступность кнопки "Печать" на форме. Для того, чтобы корректно
	// установился признак модифицорованности документа до прорисовки,
	// изменим другой реквизит документа, и восстановим его значение.
	ВременноеКво = Кво;
	Кво = Кво + 1;
	Кво = ВременноеКво;
КонецПроцедуры //ИзмСуммаУчБезНДС

Процедура УвеличитьКво()
	КоэфУ = 1;
	Если ВвестиЧисло(КоэфУ, "Введите коэф. увеличения", 10, 4) = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Кво = Кво * КоэфУ;
			ИзмКво();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

// ===============================
// ===============================
ДокументОснование.ВидыДляВыбора("ПриходнаяНакладнаяЗапасы,ПриходнаяНакладнаяГТД,Перемещение");