Перем Списание, ПервыйДок, Касса;
Перем СуммаГрнСНДС, СумГрнБезНДС;
Перем ЭтоНМА, СчетУчета, СчетЗатрат, СчетИзноса, СчетГруппы, ОстСтоимость, БалСтоимость;
Перем Ит, ТаблВиды;
Перем ВремРег;       
Перем ОбъектныйУчет[4];
Перем ВсегоВзамГрн;

// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,			"Фирма");
	глВыбранЛи(ВидНДС,			"Вид НДС");
	глВыбранЛи(Подразделение,	"Подразделение");
	глВыбранЛи(СубконтоВалДох,	"Субконто валовых доходов");
	глВыбранЛи(СубконтоВалРасх,	"Субконто валовых расходов");

	Если ВидЛиквидации = Списание Тогда
		глВыбранЛи(ВидЗатрат,"Вид затрат");
	    Если (ТипСписания = Перечисление.ТипыСписанияНеоборАктивов.ВынужденнаяЗаменаЕслиВиновныйУстановлен) Тогда
			Если Виновный.Выбран() = 0 Тогда
		    	глКомментарий("При списании необоротного актива не выбрано виновное лицо!",0,,"!");
				глВсеВыбрано = 0;
			ИначеЕсли ВидДеятельности.Выбран() = 0 Тогда
		    	глКомментарий("При списании необоротного актива не выбран вид деятельности для компенсации ущерба!",0,,"!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
	Иначе
	    глВыбранЛи(Контрагент,		"Контрагент");
	    глВыбранЛи(СчетКонтрагента,"Счет контрагента");
		Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
			глКомментарий("Счет контрагента ("+СчетКонтрагента+") не является счетом учета взаиморасчетов!",1,,"!");
		    глВсеВыбрано = 0;
		ИначеЕсли СчетКонтрагента.Валютный = ?(Валюта=Гривня,1,0) Тогда
			глКомментарий("Счет взаиморасчетов не соответствует валюте документа!",1,,"!");
		    глВсеВыбрано = 0;
		КонецЕсли;
	    глВыбранЛи(Валюта,			"Валюта");
	    глВыбранЛи(ВидТорговли,		"Вид торговли");
		Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
			глКомментарий("Нельзя продавать необоротные активы на условиях бартера!",0,,"!");
			глВсеВыбрано = 0;
		ИначеЕсли ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
			Касса = глПолучитьКассу(Фирма,Валюта);
			Если Касса = 0 Тогда
				глКомментарий(Шаблон("Для валюты [Валюта] не задано ни одной кассы!"),0,,"!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
		Если Валюта <> Гривня Тогда
		    Если ВидТорговли <> Перечисление.ВидыТорговли.Предоплата Тогда
				глКомментарий("Продавать за валюту можно только на условиях предоплаты!",0,,"!");
	    		глВсеВыбрано = 0;
			КонецЕсли;               		
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				// это явная ошибка, запрещаем проведение 
	        	глКомментарий("При продаже за валюту нельзя указывать НДС!",0,,"!");
	    		глВсеВыбрано = 0;
			ИначеЕсли ВидНДС <> ЛьготнаяСтавкаНДС Тогда
				// просто предупредим, но жестко не запрещаем
			    глКомментарий("Отгрузка за валюту вероятно должна проходить по ставке НДС """+ЛьготнаяСтавкаНДС+"""!",2)
			КонецЕсли;	
		КонецЕсли;    
		глПроверкаНДСВДокументе(Контекст, Итог("СуммаБезНДС"), Итог("СуммаСНДС"), Итог("НДС"));
	КонецЕсли;
	ноАмортГр = 0;
	Спис = СоздатьОбъект("СписокЗначений");
	Для Инд = 1 По 4 Цикл
		Если глПолучитьНиО(ноАмортГр,"АмортГр"+Инд,"о ставках амортизации "+Инд+" группы!") = 0 Тогда
			Возврат 0;
		КонецЕсли;
		глПарсить(ноАмортГр.Дополнительно.Получить(ДатаДок),Спис);
		ОбъектныйУчет[Инд] = Число(Спис.Получить("Пообъектно"));
	КонецЦикла;
    Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()

	глВсеВыбрано = 1;
    глВыбранЛи(НеоборотныйАктив,									"Необоротный актив",						НомерСтроки);
    глВыбранЛи(НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок),	"Вид деятельности для необоротного актива",	НомерСтроки);
	глВыбранЛи(МестоХранения,										"Место хранения",							НомерСтроки);
	Если	(НеоборотныйАктив.ВидНеоборотногоАктива <> НМА)
	И		(НеоборотныйАктив.ВидНеоборотногоАктива <> Перечисление.ВидыНеоборотныхАктивов.ДругиеНеоборотныеМатериальныеАктивы)
	И		(Кво <> 1)
	Тогда
		глКомментарий(Шаблон("В строке [НомерСтроки] для необоротного актива [НеоборотныйАктив] количество должно быть равно 1"),0,,"!");
		глВсеВыбрано = 0;
	КонецЕсли;
    Возврат глВсеВыбрано;

КонецФункции

// ===============================
Процедура РассчитатьШапку()
	СуммаГрнСНДС = глПересчет(Итог("СуммаСНДС"),Валюта,ДатаДок,Гривня,ДатаДок);
	Если ПустоеЗначение(Договор) = 1 Тогда
	    ПервыйДок = ПолучитьПустоеЗначение("Документ");
	ИначеЕсли Найти("Договор",Договор.Вид()) <> 0 Тогда
	    ПервыйДок = Договор;
	Иначе
		ПервыйДок = ПолучитьПустоеЗначение("Документ");
	КонецЕсли;
	// взаиморасчеты
	ФлагОтгрузки = 1;
	ЗнакОплаты = -1; 
	// если выбран договор, проводим по нему, иначе по пустому договору
	ВремРег = СоздатьОбъект("Регистры");
	глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,ЗнакОплаты,Контрагент, ПервыйДок, Валюта);

КонецПроцедуры

// ===========================
Функция ДвиженияВзаиморасчеты()
	
	// взаиморасчеты
	ФлагОтгрузки = 1;
	ЗнакОплаты = -1;

	тбСуммыПогашения = глПолучитьСуммыДляПогашения(Контекст, Фирма, Валюта);
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег, Фирма, ЗнакОплаты, Контрагент, ПервыйДок, Валюта);
	// Проверяем возможность кредита
	//Если (ВидТорговли = Перечисление.ВидыТорговли.Кредит) И (Константа.РазрешитьПревышениеКредита = Нет) Тогда
	//	глКомментарий("Проверяется возможность кредита",2);
	//	// получим таблицу долгов для определения суммы задолженности
	//	тбДолгиКред = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРег, Фирма,ЗнакОплаты, Контрагент, 0);
	//	ДолгКонтрагента = 0;
	//	Просрочено = 0;
	//	ПросроченныйДолг = 0;
	//	тбДолгиКред.ВыбратьСтроки();
	//	Пока тбДолгиКред.ПолучитьСтроку()=1 Цикл
	//		ДолгКонтрагента = ДолгКонтрагента + глПересчет(тбДолгиКред.ДолгОсн,Гривня,ДатаДок,Контрагент.ВалютаКредита,ДатаДок,);
	//		Если тбДолгиКред.ДолгОсн <= 0 Тогда
	//			Продолжить;
	//		КонецЕсли;
	//		текКредДок = тбДолгиКред.КредДокумент;
	//		ВидДокКред = текКредДок.Вид();
	//		Если глЕстьРеквизитШапки("ВидТорговли",ВидДокКред)=Да Тогда              
	//			// учитываем только документы по торговому кредиту
	//			Если текКредДок.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
	//				Продолжить;
	//			КонецЕсли;
	//		КонецЕсли;
	//		// расчитаем дату оплаты долга по ткущему документу из таблицы долгов
	//		Если глЕстьРеквизитШапки("ДатаОплаты",ВидДокКред)=Да Тогда
	//		    ДатаОплаты = текКредДок.ДатаОплаты;
	//			Если ПустоеЗначение(ДатаОплаты)=1 Тогда
	//			    ДатаОплаты = текКредДок.ДатаДок;
	//			КонецЕсли;
	//		Иначе 
	//			ДатаОплаты = текКредДок.ДатаДок + Контрагент.Глубина.Получить(текКредДок.ДатаДок);
	//		КонецЕсли;                                 
	//		// рассчитаем на сколько просрочен долг
	//		Если ДатаДок > ДатаОплаты Тогда
	//			ПросроченныйДолг = ПросроченныйДолг + тбДолгиКред.ДолгОсн;
	//			Если Просрочено<(ДатаДок-ДатаОплаты) Тогда
	//			    Просрочено = ДатаДок-ДатаОплаты;
	//			КонецЕсли;
	//		КонецЕсли;
	//	КонецЦикла;
	//	ДолгКонтрагента = ДолгКонтрагента + глПересчет(Итог("СуммаСНДС"),Валюта,ДатаДок,Контрагент.ВалютаКредита,ДатаДок,);
	//	СуммаКредита = Контрагент.СуммаКредита.Получить(ДатаДок);
	//	глКомментарий("Долг контрагента составляет "+глФРМ(ДолгКонтрагента,Контрагент.ВалютаКредита,1)+", сумма кредита "+ глФРМ(СуммаКредита,Контрагент.ВалютаКредита,1) +".",3);
	//	Если ПустоеЗначение(СуммаКредита) = 0 Тогда 
	//		Если ДолгКонтрагента > СуммаКредита Тогда
	//			глКомментарий(Шаблон("Сумма накладной вместе с текущим долгом клиента ([глФРМ(ДолгКонтрагента,Контрагент.ВалютаКредита,1)]) превышает сумму кредита ([глФРМ(СуммаКредита,Контрагент.ВалютаКредита,1)]). "),0,,"!");
	//			Возврат 0;
	//		КонецЕсли;
	//	КонецЕсли;
	//	Если Просрочено>0 Тогда
	//	    глКомментарий(Шаблон("Просрочена оплата [глФРМ(ПросроченныйДолг,Гривня,1)] на [Просрочено] дней."),0,,"!");
	//		Возврат 0;
	//	КонецЕсли;
	//	глКомментарий("Отпуск в кредит разрешен",3);
	//КонецЕсли;		       
	глПровестиПоВзаиморасчетам(Контекст, ФлагОтгрузки, ЗнакОплаты, 0, Фирма, тбДолги, тбСуммыПогашения, Валюта,Контрагент, ПервыйДок, ВидТорговли, ДокументОснование);
	НДСПервоеСобытие = 0;
	НДСВтороеСобытие = 0;
	ВсегоВзамГрн = 0; // накапливаем сумму гривнео покрытия
	РегПоставщики=ВремРег.ВзаиморасчетыПоставщиков;
	РегПокупатели=ВремРег.ВзаиморасчетыПокупателей;
	РегПокупатели.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегПокупатели.ПолучитьДвижение() = 1 Цикл
		
		//При оплате наличными формируются 2 движения, надо взять только одно. Ввозьмем приход.
		Если (Константа.ПроводкиПоКассеТолькоОрдерами = Нет) И 
				(ВидТорговли = Перечисление.ВидыТорговли.Нал) И (РегПокупатели.Расход = 1) Тогда
			Продолжить;
		КонецЕсли;
		Если Найти(АвансоваяОтгрузка+ПостОтгрузка+ПостОплата,РегПокупатели.КодОперации) = 0 Тогда
			// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
			Продолжить;
		КонецЕсли;
		
		ВсегоВзамГрн = ВсегоВзамГрн + РегПокупатели.ДолгОсн;
		// проводки по кассе при оплате наличными
		Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
			// сформируем проводки по кассе, если они нужны
			Если Константа.ПроводкиПоКассеТолькоОрдерами = Нет Тогда
				глПроводка(Контекст,Касса.СчетУчета,СчетКонтрагента,РегПокупатели.Долг,"Оплата наличными",, 
					Касса,,, Контрагент,ПервыйДок,, ,,"НК");
			КонецЕсли;
		КонецЕсли;
		// проводки по взаиморасчетам
		Если Валюта = Гривня Тогда
			глПроводка(Контекст,СчетКонтрагента,,РегПокупатели.Долг,"Реализация: необ. активы",, 
				Контрагент,ПервыйДок,, ,,, ,,"НК",1,"Реализация необ. активов",1);					
		Иначе	
			глПроводка(Контекст,СчетКонтрагента,,РегПокупатели.ДолгОсн,"Реализация: необ. активы",, 
				Контрагент,ПервыйДок,, ,,, РегПокупатели.Валюта,РегПокупатели.Долг,"НК",1,"Реализация необ. активов",1);					
		КонецЕсли;	  
		
		Если РегПокупатели.КодОперации = АвансоваяОтгрузка Тогда     					
			// сформируем проводки по НДС
			Если глДелатьПроводкиПоНалогам(РегПокупатели,"НДС") = 1 Тогда
				// для первого события
				глПроводка(Контекст,,"6415",РегПокупатели.НДС,"НДС: первое событие",, 
					,,, ВидНДС,,, ,,"НК",1,"Реализация необ. активов");                                                     
				НДСПервоеСобытие = НДСПервоеСобытие + РегПокупатели.НДС;
			КонецЕсли;	
		// погашение аванса
		ИначеЕсли РегПокупатели.КодОперации = ПостОтгрузка Тогда     					
			Если глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1 Тогда
				Если Валюта=Гривня Тогда
					глПроводка(Контекст,"6811",СчетКонтрагента,РегПокупатели.Долг,"Реализация: необ. активы: погашен авансовый платеж",, 
						Контрагент,ПервыйДок,, Контрагент,ПервыйДок,, ,,"НК");
				Иначе
					глПроводка(Контекст,"6812",СчетКонтрагента,РегПокупатели.ДолгОсн,"Реализация за валюту: необ. активы: погашен авансовый платеж",, 
						Контрагент,ПервыйДок,, Контрагент,ПервыйДок,, РегПокупатели.Валюта,РегПокупатели.Долг,"НК");
				КонецЕсли;
			КонецЕсли;      
			// сформируем проводки по НДС
			Если глДелатьПроводкиПоНалогам(РегПокупатели,"НДС") = 1 Тогда
				// для второго события
				глПроводка(Контекст,,"64.3",РегПокупатели.НДС,"НДС: второе событие",, 
					,,, Контрагент,ПервыйДок,, ,,"НК",1,"Реализация необ. активов");
				// посчитаем НДС предварительной оплаты
				НДСВтороеСобытие = НДСВтороеСобытие + РегПокупатели.НДС;
			КонецЕсли;                                                                        
		КонецЕсли;                                                                        
	КонецЦикла;
	
	НДСВсего = НДСПервоеСобытие + НДСВтороеСобытие;
	// этот коэффициент используется в проводка по доходам для каждого ТМЦ	
	КПерв = ?(НДСВсего=0,0,НДСПервоеСобытие/НДСВсего);
	Возврат 1;
КонецФункции

// ===============================
Процедура РассчитатьРеализацию()
	
	КурсРеализация = ?(ПустоеЗначение(Итог("СуммаБезНДС"))=1,0,ВсегоВзамГрн/Итог("СуммаБезНДС"));
	// таблица значений для разделения проводок по видам деятельности
	ТаблВиды = СоздатьОбъект("ТаблицаЗначений");
	ТаблВиды.НоваяКолонка("ВидДеятельности","Справочник.ВидыДеятельности");
	ТаблВиды.НоваяКолонка("СуммаБезНДС","Число",12,2);
	ТаблВиды.НоваяКолонка("СуммаГрнБезНДС","Число",12,2);

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ТаблВиды.НоваяСтрока();
		ТаблВиды.ВидДеятельности 	= НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок);
		ТаблВиды.СуммаБезНДС 		= СуммаБезНДС;
		ТаблВиды.СуммаГрнБезНДС 	= СуммаБезНДС * КурсРеализация;
		Если НомерСтроки = КоличествоСтрок() Тогда
			// последняя строка
			Если ВсегоВзамГрн - ТаблВиды.Итог("СуммаГрнБезНДС") <> 0 Тогда
				// ошибка округления
			ТаблВиды.НоваяСтрока();
			ТаблВиды.ВидДеятельности 	= НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок);
			ТаблВиды.СуммаБезНДС 		= 0;
			ТаблВиды.СуммаГрнБезНДС 	= ВсегоВзамГрн - ТаблВиды.Итог("СуммаГрнБезНДС");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	// свернем по видам деятельности
	ТаблВиды.Свернуть("ВидДеятельности","СуммаБезНДС,СуммаГрнБезНДС");
КонецПроцедуры //

// ===============================
Процедура ПроводкиШапка()

	Если ВидЛиквидации = Списание Тогда

		Если ТипСписания = Перечисление.ТипыСписанияНеоборАктивов.ВынужденнаяЗаменаЕслиВиновныйУстановлен Тогда
			// списываем на виновное лицо
			глПроводка(Контекст,"37.5","74.6",СуммаВозмещения,"Подлежит возмещению виновным",, 
				Виновный,,, ВидДеятельности,,, ,,"НА");
			Если СуммаВозмещения > Итог("ПервСтоимость")-Итог("Износ") Тогда
				// сумму превышения должны перечислить в бюджет
				// согласно ст 10. Порядка, утвержденного 22.01.96 № 116
				глПроводка(Контекст,"74.6","64.2.6",СуммаВозмещения-(Итог("ПервСтоимость")-Итог("Износ")),"Превышение возмещения над убытком",, 
					ВидДеятельности,,, ВидНДС,,, ,,"НА");
			КонецЕсли;
		КонецЕсли;

	Иначе

		ТаблВиды.ВыбратьСтроки();
		Пока ТаблВиды.ПолучитьСтроку()=1 Цикл
			Если Валюта = Гривня  Тогда
				глПроводка(Контекст,,"74.2",ТаблВиды.СуммаБезНДС,"Реализация: необ. активы: "+ТаблВиды.ВидДеятельности,, 
					,,, ТаблВиды.ВидДеятельности,Подразделение,, ,,"НА",1,"Реализация необ. активов");
			Иначе
				глПроводка(Контекст,,"74.2",ТаблВиды.СуммаГрнБезНДС,"Реализация за валюту: необ. активы: "+ТаблВиды.ВидДеятельности,, 
					,,, ТаблВиды.ВидДеятельности,Подразделение,, Валюта,ТаблВиды.СуммаБезНДС,"НА",1,"Реализация необ. активов");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

// ===============================
Функция КоэффициентСписания()
	// возвращает отношение списываемого кол-ва к остаточному по бухучету
	Перем	Ит, ОстКво;
	
	ОстКво = 0;
			
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ИспользоватьСубконто(ВидыСубконто.НеоборотныеАктивы, НеоборотныйАктив, 2);
	Ит.ИспользоватьСубконто(ВидыСубконто.МестаХранения, МестоХранения, 2);
	Ит.ВыполнитьЗапрос(ТекущийДокумент(),,НеоборотныйАктив.Счет);
	
	ОстКво = Ит.СКД("К");
	ОстКво = ?(ОстКво = 0, 1, ОстКво);
	
	Возврат Кво/ОстКво;
КонецФункции

// ===============================
Процедура ПроводкиОбъектНал()
	// уменьшение балансовой стоимости для групп ОС или НМА 
	Если ЭтоНМА = 0 Тогда
		Если ОбъектныйУчет[НеоборотныйАктив.Группа]=1 Тогда // пообъектно
			БалСтоимость = Ит.СКД(СчетГруппы,,,НеоборотныйАктив) * КоэффициентСписания();
			глПроводка(Контекст,СчетГруппы,,-БалСтоимость, "Реализация: "+НеоборотныйАктив,-Кво, 
				НеоборотныйАктив,,, ,,, ,, "НА");
		КонецЕсли;
	Иначе
		ПервСтоимНМА 	= Ит.СКД("НА1",,	,НеоборотныйАктив);
		ОстКвоНМА 		= Ит.СКД("НА1","К",,НеоборотныйАктив);
		Если (Кво < ОстКвоНМА) И (ОстКвоНМА <> 0) Тогда
			ПервСтоимНМА = Окр(ПервСтоимНМА * (Кво/ОстКвоНМА), 2);
		ИначеЕсли Кво > ОстКвоНМА Тогда
			Кво = ОстКвоНМА;
		КонецЕсли;
		ИзносНМА = Ит.СКК("НА2",,,НеоборотныйАктив);
		БалСтоимость = ПервСтоимНМА - ИзносНМА;
		глПроводка(Контекст,,"НА1",ПервСтоимНМА, "Реализация: "+НеоборотныйАктив,Кво, 
			,,, НеоборотныйАктив,,, ,, "НА");
		глПроводка(Контекст,"НА2",,ИзносНМА, "Реализация: "+НеоборотныйАктив,, 
			НеоборотныйАктив,,, ,,, ,, "НА");
	КонецЕсли;
КонецПроцедуры

// ===============================
// проводки по бухгалтерскому учету при списании
Процедура ПроводкиСписаниеБух(ПСтоимость)

	Если НеоборотныйАктив.МетодРасчетаИзноса = Перечисление.МетодыРасчетаИзноса.ПервыйИПоследнийМесяц Тогда
		// доначисляем 50% износа
		глПроводка(Контекст,СчетЗатрат,СчетИзноса,ПСтоимость - Износ,"Начислен износ",, 
			НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок),Подразделение,ВидЗатрат, НеоборотныйАктив,,,,,"НА");
		// теперь делаем проводку с учетом доначисленного износа
		глПроводка(Контекст,СчетИзноса,СчетУчета,Износ + (ПСтоимость - Износ),"Износ ликвидированных необ. активов",Кво, 
			НеоборотныйАктив,,, Подразделение,МестоХранения,НеоборотныйАктив, ,,"НА");
		ОстСтоимость = 0;
	Иначе
		ВалИзнос = Износ/ПСтоимость * СуммаВал;
		глПроводка(Контекст,СчетИзноса,СчетУчета,Износ,"Износ ликвидированных необ. активов",?(ОстСтоимость = 0,Кво,0), 
			НеоборотныйАктив,,, Подразделение,МестоХранения,НеоборотныйАктив, ВалютаНА, ВалИзнос,"НА");
	КонецЕсли;

	СчетЗатр = ?(ИспользоватьСчетаРасходов = Класс8, "85", "97.6");
	глПроводка(Контекст,СчетЗатр,СчетУчета,ОстСтоимость,"Остат. стоим. ликвид. необ. активов",?(ОстСтоимость <> 0,Кво,0), 
		НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок),Подразделение,ВидЗатрат, Подразделение,МестоХранения,НеоборотныйАктив,ВалютаНА,СуммаВал-ВалИзнос,"НА");
	Если ТипСписания = Перечисление.ТипыСписанияНеоборАктивов.ПоРешениюНалогоплательщикаИлиКМУ Тогда
		Если (НеоборотныйАктив.Производственное = 1) И (ЭтоНМА = 0) 
				И (ОбъектныйУчет[НеоборотныйАктив.Группа]=1) Тогда
			БалСтоимость = Ит.СКД(СчетГруппы,,,НеоборотныйАктив) * КоэффициентСписания();
			ОстСтоимостьНДС = БалСтоимость * ВидНДС.Ставка.Получить(ДатаДок);
		Иначе
			ОстСтоимостьНДС = ОстСтоимость * ВидНДС.Ставка.Получить(ДатаДок);
		КонецЕсли;
		глПроводка(Контекст,СчетЗатр,"64.1.5",ОстСтоимостьНДС,"НДС от остат. стоим. ликвид. необ. активов",, 
			НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок),Подразделение,ВидЗатрат, ВидНДС,,, ,,"НА");
	КонецЕсли;
КонецПроцедуры
    
// ===============================
// проводки по налоговому учету при списании
Процедура ПроводкиСписаниеНал()
	Если ЭтоНМА = 0 Тогда
		Если ОбъектныйУчет[НеоборотныйАктив.Группа]=0 Тогда // по группе
			глПроводка(Контекст,СчетГруппы,,, "Списание: уменьшение колич. остатка группы",-Кво, 
				,,, ,,, ,, "НА");
			Возврат;
		КонецЕсли;
	КонецЕсли;

	// пообъектно
	ПроводкиОбъектНал();
	Если	((ТипСписания <> Перечисление.ТипыСписанияНеоборАктивов.ПоРешениюНалогоплательщикаИлиКМУ) 
			Или
			(НачМесяца(ДатаДок)>='01.01.2003'))
	И (ТипСписания <> Перечисление.ТипыСписанияНеоборАктивов.ПоДругойПричине) Тогда
		// вынужденная замена
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		//Если СубконтоВалРасх <> Константа.НиДоходНиРасход Тогда
		//	глПроводка(Контекст,"ВР","ВР",БалСтоимость,"Списание необ. активов: вал. расходы",, 
		//		,,СубконтоВалРасх, ,,СубконтоВалРасх, ,,"НА");
		//КонецЕсли;
		
		// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
	КонецЕсли;
	
КонецПроцедуры
              
// ===============================
// проводки по бухгалтерскому учету при продаже
Процедура ПроводкиПродажаБух(ПСтоимость)
	СчетЗатр 	= ?(ИспользоватьСчетаРасходов = Класс8, "85", "97.2");

	ВалИзнос = Износ/ПСтоимость * СуммаВал;
	Если ВалютаНА = Гривня Тогда
		глПроводка(Контекст,СчетИзноса,СчетУчета,Износ,"Износ реализованных необ. активов",, 
			НеоборотныйАктив,,, Подразделение,МестоХранения,НеоборотныйАктив,,,"НА");
		глПроводка(Контекст,СчетЗатр,СчетУчета,ОстСтоимость,"Остат. стоим. реализованных необ. активов",Кво, 
			НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок),Подразделение,, Подразделение,МестоХранения,НеоборотныйАктив, , ,"НА");
	Иначе
		глПроводка(Контекст,СчетИзноса,СчетУчета,Износ,"Износ реализованных необ. активов",, 
			НеоборотныйАктив,,, Подразделение,МестоХранения,НеоборотныйАктив,ВалютаНА,ВалИзнос,"НА");
		глПроводка(Контекст,СчетЗатр,СчетУчета,ОстСтоимость,"Остат. стоим. реализованных необ. активов",Кво, 
			НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок),Подразделение,, Подразделение,МестоХранения,НеоборотныйАктив, ВалютаНА, СуммаВал-ВалИзнос,"НА");			
	КонецЕсли;
КонецПроцедуры

// ===============================
// проводки по налоговому учету при продаже
Процедура ПроводкиПродажаНал(ПСтоимость)
	Если НеоборотныйАктив.Производственное = 0 Тогда // непроизводственное
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		//Если СубконтоВалДох <> Константа.НиДоходНиРасход Тогда
		//	глПроводка(Контекст,"ВД","ВД",СумГрнБезНДС,"Реализация необ. активов: вал. доходы",, 
		//		,,СубконтоВалДох, ,,СубконтоВалДох, ,,"НА");
		//КонецЕсли;
		//Если СубконтоВалРасх <> Константа.НиДоходНиРасход Тогда
		//	глПроводка(Контекст,"ВР","ВР",ПСтоимость,"Реализация необ. активов: вал. расходы",, 
		//		,,СубконтоВалРасх, ,,СубконтоВалРасх, ,,"НА");
		//КонецЕсли;
			
		// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		Возврат;
	КонецЕсли;
	// производственное
	Если ЭтоНМА = 0 Тогда
		Если ОбъектныйУчет[НеоборотныйАктив.Группа]=0 Тогда // по группе
			БалСтоимостьГруппы = Ит.СКД(СчетГруппы) ;
			Если СумГрнБезНДС < БалСтоимостьГруппы Тогда
				глПроводка(Контекст,СчетГруппы,,-СумГрнБезНДС,"Реализация необ. активов: стоим. продажи",-Кво, 
					,,, ,,, ,,"НА");
			Иначе
				глПроводка(Контекст,СчетГруппы,,-БалСтоимостьГруппы,"Реализация необ. активов: бал. стоим. группы",-Кво, 
					,,, ,,, ,,"НА");
					
				// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР	
				
				//Если СубконтоВалДох <> Константа.НиДоходНиРасход Тогда
				//	глПроводка(Контекст,"ВД","ВД",СумГрнБезНДС-БалСтоимостьГруппы,"Реализация необ. активов: вал. доходы",, 
				//		,,СубконтоВалДох, ,,СубконтоВалДох, ,,"НА");
				//КонецЕсли;
					
				// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
					
			КонецЕсли;   
			Возврат;
		КонецЕсли;
	КонецЕсли;

	// пообъектно
	ПроводкиОбъектНал();
	
	// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
	//Если СумГрнБезНДС < БалСтоимость Тогда
	//	Если СубконтоВалРасх <> Константа.НиДоходНиРасход Тогда
	//		глПроводка(Контекст,"ВР","ВР",БалСтоимость-СумГрнБезНДС,"Реализация необ. активов: вал. расходы",, 
	//			,,СубконтоВалРасх, ,,СубконтоВалРасх, ,,"НА");
	//	КонецЕсли;
	//Иначе
	//	Если СубконтоВалДох <> Константа.НиДоходНиРасход Тогда
	//		глПроводка(Контекст,"ВД","ВД",СумГрнБезНДС-БалСтоимость,"Реализация необ. активов: вал. доходы",, 
	//			,,СубконтоВалДох, ,,СубконтоВалДох, ,,"НА");
	//	КонецЕсли;
	//КонецЕсли;
	// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
	
КонецПроцедуры

// ===============================
Процедура ПроводкиСтрока()
	// для бухгалтерского учета
	СумГрнБезНДС = глПересчет(СуммаБезНДС,Валюта,ДатаДок,Гривня,ДатаДок);
	
	// для налогового учета
	ЭтоНМА = 0;
	СчетГруппы 	= СчетПоКоду("ОС"+НеоборотныйАктив.Группа);
	СчетУчета 	= НеоборотныйАктив.Счет.		Получить(ТекущийДокумент());
	СчетЗатрат	= НеоборотныйАктив.СчетЗатрат.	Получить(ТекущийДокумент());

	Если Сред(СчетУчета.Код,1,2) = "10" Тогда
		СчетИзноса = СчетПоКоду("131");
	ИначеЕсли Сред(СчетУчета.Код,1,2) = "12" Тогда
	    ЭтоНМА = 1;
		СчетИзноса = СчетПоКоду("133");
		СчетГруппы = СчетПоКоду("НА1");
	Иначе
		СчетИзноса = СчетПоКоду("132");
	КонецЕсли;
	
	// Вначале дооценим/уценим ОС,
	Если (ВалютаНА <> Гривня) или (ПустоеЗначение(ВалютаНА) = 1) Тогда
		ПСтоимость = глПересчет(СуммаВал, ВалютаНА, ДатаДок, Гривня, ДатаДок);
		Разница = ПСтоимость - ПервСтоимость;
		
		Если Разница > 0 Тогда
			глПроводка(Контекст, СчетУчета, СчетПоКоду("714"), Разница, "Ув. перв. стоимости", ,Подразделение, МестоХранения, НеоборотныйАктив, 
			 НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок), Подразделение, ,Валюта,,"НА");
		Иначе
			глПроводка(Контекст, СчетПоКоду("975"), СчетУчета, -Разница, "Уменьш. перв. стоимости", ,НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок), Подразделение,Константа.ВидЗатратНеоперКР, 
			 Подразделение, МестоХранения, НеоборотныйАктив,Валюта,,"НА");			
		КонецЕсли;
	Иначе
		ПСтоимость = СуммаВал;
		Разница = ПСтоимость - ПервСтоимость;		
		Если Разница > 0 Тогда
			глПроводка(Контекст, СчетУчета, СчетПоКоду("714"), Разница, "Ув. перв. стоимости", ,Подразделение, МестоХранения, НеоборотныйАктив, 
			 НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок), Подразделение, ,,,"НА");
		Иначе
			глПроводка(Контекст, СчетПоКоду("975"), СчетУчета, -Разница, "Уменьш. перв. стоимости", ,НеоборотныйАктив.ВидДеятельности.Получить(ДатаДок), Подразделение,Константа.ВидЗатратНеоперКР, 
			 Подразделение, МестоХранения, НеоборотныйАктив,,,"НА");			
		КонецЕсли;
	КонецЕсли;
	
	ОстСтоимость = ПСтоимость - Износ;
	Если ВидЛиквидации = Списание Тогда
		// списание
		ПроводкиСписаниеБух(ПСтоимость);
		Если НеоборотныйАктив.Производственное = 1 Тогда
			// производственное, велось в налоговом учете
			ПроводкиСписаниеНал();
		КонецЕсли;
	Иначе
		// продажа
		ПроводкиПродажаБух(ПСтоимость);
		ПроводкиПродажаНал(ПСтоимость);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ЗаписатьИзмененияПараметров()
    УстановитьРеквизитСправочника(НеоборотныйАктив,"Состояние",Перечисление.СостоянияНеоборАктивов.Выбыл,ТекущийДокумент());
КонецПроцедуры //

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	Списание = Перечисление.ВидыЛиквидацииНеоборАктивов.Списание;
	
	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки()=0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	КонецЦикла;	
	
	Если ВидЛиквидации <> Списание Тогда
	    РассчитатьШапку();
		ДвиженияВзаиморасчеты();
		РассчитатьРеализацию();
	КонецЕсли;
	ПроводкиШапка();
	
	// Используем обычные бухгалтерские итоги
	// Это связано с тем, что все время нужно использовать актуальные остатки по счетам
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.Рассчитать(,ДатаДок,"ОС1;ОС2;ОС3;ОС4;НА1;НА2",,,Фирма);
	
	глТаблицаСчетов.УдалитьСтроки();
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ПроводкиСтрока();
		Операция.ЗаписатьПроводки();
	КонецЦикла;

	глЗаписатьПроводкиВОперацию(Контекст);
	Операция.СуммаОперации = ?(ВидЛиквидации = Списание, 0, Итог("СуммаСНДС"));
  	Операция.Содержание = ?(ВидЛиквидации = Списание, "Списание", "Реализация") + " " + Примечание;
	Операция.Записать();


	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ЗаписатьИзмененияПараметров();
	КонецЦикла;

	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

