// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================
Перем Списание, Таб;
Перем СписокДействий;        
Перем НачальнаяДатаДокумента;
Перем СтараяДата;
                          

// ===============================
Функция УстДоступность()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	Форма.Фирма.Видимость(0);
	Форма.Заголовок(глЗаголовок(Контекст,"Ликвидация (списание, реализация) необоротных активов"));
	// доступность в зависимости от слоя
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если Закл = "Основной" Тогда
		фРеализация = ?(ВидЛиквидации = Списание, 0, 1);
		Форма.ЦенаБезНДС.Видимость(фРеализация);
		Форма.СуммаБезНДС.Видимость(фРеализация);
		Форма.НДС.Видимость(фРеализация);
		Форма.СуммаСНДС.Видимость(фРеализация);
	ИначеЕсли Закл = "Списание" Тогда
		Если ТипСписания = Перечисление.ТипыСписанияНеоборАктивов.ВынужденнаяЗаменаЕслиВиновныйУстановлен Тогда
			Доступность = 1;
		Иначе
			Доступность = 0;
		КонецЕсли;
	    Форма.Виновный.			Доступность(Доступность);
		Форма.СуммаВозмещения.	Доступность(Доступность);
		Форма.ВидДеятельности.	Доступность(Доступность);
	ИначеЕсли Закл = "Реализация" Тогда
		Видимость = 0;
		Если ВидТорговли = Перечисление.ВидыТорговли.Кредит Тогда
			// нет кредита - нет глубины
			Если Контрагент.Глубина.Получить(ДатаДок) > 0 Тогда
				Видимость = 1;
			КонецЕсли;
		КонецЕсли;
		Форма.тДатаОплаты.	Видимость(Видимость);
		Форма.тГлубина.		Видимость(Видимость);
		Форма.Глубина.		Видимость(Видимость);
	КонецЕсли;
КонецФункции

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	СчетКонтрагента = СчетПоКоду(?(Валюта = Гривня, "361", "362"));	
КонецПроцедуры	

// ===============================
Процедура Накладная()
	глУстПропись(Валюта);
	Таб.ПараметрыСтраницы(1); // портрет
	НомДок = Сред(НомерДок,1,3)+"НА/"+Сред(НомерДок,4);
	Таб.ВывестиСекцию("Шапка");
	Ном = 1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
КонецПроцедуры

// ===============================
Процедура АктСписания()
	глУстПропись(Гривня,"украинский");          
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить ("Дата",ДатаДок);
	Расшифровка.Установить ("Фирма",Фирма);
	Расшифровка.Установить("АмортГр1","");
	Расшифровка.Установить("АмортГр2","");
	Расшифровка.Установить("АмортГр3","");
	Расшифровка.Установить("АмортГр4","");
	Расшифровка.Установить("ГлавныйБухгалтер","");
	
	глПолучитьДанные(Расшифровка);

	АмортГр1 = Расшифровка.Получить("АмортГр1");
	АмортГр2 = Расшифровка.Получить("АмортГр2");
	АмортГр3 = Расшифровка.Получить("АмортГр3");
	АмортГр4 = Расшифровка.Получить("АмортГр4");
	Таб.ПараметрыСтраницы(2); // ландшафт
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Сред(НеоборотныйАктив.Счет.Получить(ДатаДок).Код,1,2) = "12" Тогда
			// акт списания только для ОСов
		    Продолжить;
		КонецЕсли;

		Ставка = 0;
		МетодыРасчетаИзноса = Перечисление.МетодыРасчетаИзноса;
		МетодРасчИзнНеобАктива = НеоборотныйАктив.МетодРасчетаИзноса.Получить(ДатаДок);
		Если (МетодРасчИзнНеобАктива = МетодыРасчетаИзноса.УменьшениеОстатка) 
			Или (МетодРасчИзнНеобАктива = МетодыРасчетаИзноса.УскоренноеУменьшениеОстатка) Тогда
			// только для этого метода имеет смысл норма амортизации
			Ставка = НеоборотныйАктив.НормаАмортизации;
		ИначеЕсли (МетодРасчИзнНеобАктива = МетодыРасчетаИзноса.ПервыйМесяц) Тогда 
			Ставка = 1;
		ИначеЕсли (МетодРасчИзнНеобАктива = МетодыРасчетаИзноса.ПервыйИПоследнийМесяц) Тогда
			Ставка = 0.5;
		ИначеЕсли (МетодРасчИзнНеобАктива = МетодыРасчетаИзноса.Налоговый) Тогда
			Ставка = ?(НеоборотныйАктив.Группа = 1,АмортГр1,?(НеоборотныйАктив.Группа = 2,АмортГр2,?(НеоборотныйАктив.Группа = 3,АмортГр3,АмортГр4)));
		КонецЕсли;
		Норма = Строка(Ставка*100) + " %";

		Таб.ВывестиСекцию("Страница1");
		Таб.НоваяСтраница();
		Таб.ВывестиСекцию("Страница2");
		Таб.НоваяСтраница();
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	Если ВидЛиквидации 	= Списание Тогда
		ПрефиксТаблицы 	= "АктСписания";
		СуффиксТаблицы	= "_Укр";
		СуффиксФайла 	= "_ukr";
		ПрефиксФайла 	= "LNAa";
	Иначе
		ПрефиксТаблицы 	= "Накладная";
		СуффиксТаблицы 	= ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");
		СуффиксФайла 	= ?(Константа.ФормыНаУкраинском = Да, "_ukr", "");
		ПрефиксФайла 	= "LNAn";
	КонецЕсли;	
	
	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\"+ПрефиксФайла+СуффиксФайла+".mxl";
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		Таб.ИсходнаяТаблица(ИмяФайлаПечатнойФормы);
	Иначе
		Таб.ИсходнаяТаблица(ПрефиксТаблицы+СуффиксТаблицы);
	КонецЕсли;

	Если ПрефиксТаблицы = "Накладная" Тогда
	    Накладная();
	Иначе
		АктСписания();
	КонецЕсли;
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ:"+ПрефиксТаблицы,"");
	глУстПропись(Гривня); 
КонецПроцедуры

// ===============================
Процедура ИзмСчетКонтрагента()
	Если СчетКонтрагента.Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбраный счет не является счетом учета взаиморасчетов!",1,,"!");
	ИначеЕсли СчетКонтрагента.Валютный = ?(Валюта=Гривня,1,0) Тогда
		глКомментарий("Счет взаиморасчетов не соответствует валюте документа!",1,,"!");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура УстЦенаБезНДС()
	СумПерв = глПересчет(ПервСтоимость-Износ,Гривня,Валюта,ДатаДок,Курс);
	Если СумПерв = 0 Тогда
		ЦенаБезНДС = глПересчет(НеоборотныйАктив.Цена_Прих,Гривня,Валюта,ДатаДок,Курс);
	Иначе
		ЦенаБезНДС = ?(Кво=0,СумПерв,СумПерв/Кво);
	КонецЕсли;
	глВыч_суммы_накл(Контекст,-1);
КонецПроцедуры

// ===============================
Процедура РассчитатьБухгалтерскиеОстатки(ОстПервСтоимость, ОстИзнос, ОстКво, ОстВалСумма, ВалютаНАктива)
	ОстПервСтоимость = 0;
	ОстИзнос = 0;
	ОстКво = 0;
	
	СчетУчета		= НеоборотныйАктив.Счет.Получить(?(Выбран()=1,ТекущийДокумент(),ДатаДок));
	СчетИзноса 		= СчетПоКоду( "13."+Строка( Число(Сред(СчетУчета.Код,1,2))-9 ) );
	
	// определим первичную стоимость, количество и место хранения
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ИспользоватьСубконто(ВидыСубконто.НеоборотныеАктивы, НеоборотныйАктив, 2);
	Если Подразделение.Выбран()=1 Тогда
		Ит.ИспользоватьСубконто(ВидыСубконто.Подразделения, Подразделение, 2);
	Иначе
		Сообщить("Не выбрано подразделение");
		Ит.ИспользоватьСубконто(ВидыСубконто.Подразделения,,,0);
	КонецЕсли;
    Если МестоХранения.Выбран() = 1 Тогда
		Ит.ИспользоватьСубконто(ВидыСубконто.МестаХранения, МестоХранения);
	Иначе
		Ит.ИспользоватьСубконто(ВидыСубконто.МестаХранения);
	КонецЕсли;
	Ит.Опции(0,0);
	Ит.ВключатьСубсчета(-1);
	КонечнаяДата = ?(Выбран()=1,СформироватьПозициюДокумента(ТекущийДокумент(),-1),ДатаДок);
	Если Ит.ВыполнитьЗапрос(КонечнаяДата,КонечнаяДата,СчетУчета) = 0 Тогда
		Предупреждение ("Запрос по бухгалтерским итогам (первоначальная стоимость НА) не выполнен!");
		Возврат;
	КонецЕсли;

	Ит.ВыбратьСубконто(1);
	Если Ит.ПолучитьСубконто(1) = 1 Тогда
		ОстПервСтоимость = Ит.СКД();
		ОстКво = Ит.СКД("К");
		ОстКво = ?(ОстКво = 0, 1, ОстКво);
		Если СчетУчета.Валютный = 1 Тогда
			Ит.ВыбратьВалюты();
			Пока Ит.ПолучитьВалюту() = 1 Цикл
				ОстВалСумма = Ит.СКД("В");
				ВалютаНАктива = Ит.Валюта;
			КонецЦикла;
		КонецЕсли;
		МестоХранения = 0;
		Ит.ВыбратьСубконто(3);
		Пока Ит.ПолучитьСубконто(3)=1 Цикл
			Если (МестоХранения.Выбран()=1) и (Ит.СКД("К") <> 0) Тогда
				Сообщить("Необоротный актив "+НеоборотныйАктив+" по бухгалтерским итогам числится на нескольких местах хранения:
							|""" + МестоХранения + """ и """ + Ит.Субконто(3)+"""!");
			Иначе
				МестоХранения = Ит.Субконто(3);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// определим износ объекта в бухгалтерском учете
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ИспользоватьСубконто(ВидыСубконто.НеоборотныеАктивы, НеоборотныйАктив, 2);
	Ит.Опции(0,0);
	Ит.ВключатьСубсчета(-1);
	Если Ит.ВыполнитьЗапрос(КонечнаяДата,КонечнаяДата,СчетИзноса) = 0 Тогда
		Предупреждение ("Запрос по бухгалтерским итогам (износ НА) не выполнен!");
		Возврат;
	КонецЕсли;

	Ит.ВыбратьСубконто(1);
	Если Ит.ПолучитьСубконто(1) = 1 Тогда
		ОстИзнос = Ит.СКК();
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмКво()
	Перем ОстПервСтоимость, ОстИзнос, ОстКво, ОстВалСумма, ВалютаНАктива;
	
	РассчитатьБухгалтерскиеОстатки(ОстПервСтоимость, ОстИзнос, ОстКво, ОстВалСумма, ВалютаНАктива);
	// реквизиты на формы рассчитываем пропорционально указанному кол-во
	Если ОстКво>0 Тогда
		ПервСтоимость	= ОстПервСтоимость*Кво/ОстКво;
		Износ			= ОстИзнос*Кво/ОстКво;
		ВалютаНА		= ВалютаНАктива;
		СуммаВал		= ОстВалСумма*Кво/ОстКво;
	Иначе
		ПервСтоимость	= 0;
		Износ			= 0;
		ВалютаНА 		= "";
		СуммаВал 		= 0;
	КонецЕсли;

	глВыч_суммы_накл(Контекст);
КонецПроцедуры

// ===============================
Процедура ИзмНеоборотныйАктив()
	Перем ОстПервСтоимость, ОстИзнос, ОстКво, ОстВалСумма, ВалютаНАктива;
	
	РассчитатьБухгалтерскиеОстатки(ОстПервСтоимость, ОстИзнос, ОстКво, ОстВалСумма, ВалютаНАктива);
	
	ПервСтоимость	= ОстПервСтоимость;
	Износ			= ОстИзнос;
	Кво				= ОстКво;
	ВалютаНА		= ВалютаНАктива;
	СуммаВал		= ОстВалСумма;
	
	Если ВидЛиквидации <> Списание Тогда
		УстЦенаБезНДС();
		глВыч_суммы_накл(Контекст);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;
	Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
		ДатаОплаты = ДатаДок + Глубина;	
	Иначе	
		ДатаОплаты = глБанковскаяДата(ДатаДок,Глубина);	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстГлубина()
	// Формирует и показывает дату оплаты
	Если (ВидТорговли = Перечисление.ВидыТорговли.Кредит) И (Контрагент.Выбран() = 1) Тогда
		Если ПустоеЗначение(Глубина) = 1 Тогда
			Глубина = Контрагент.Глубина.Получить(ДатаДок);
		КонецЕсли;	
	Иначе
		Глубина=0;
	КонецЕсли;
	ИзмГлубина();
КонецПроцедуры	

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	Если ВидЛиквидации <> Списание Тогда
		УстГлубина(); 
	КонецЕсли;
КонецПроцедуры
         

// ===============================
Процедура ИзмВидЛиквидации()
	Если ВидЛиквидации <> Списание Тогда
		УстГлубина(); 
		Отпустил = глВосстановитьЗначение(Контекст,"БазОтпустил");
	Иначе
		Отпустил = 0;
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ИзмВидНДС()
	// пересчитаем суммы НДС в строках табличной части
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глВыч_суммы_накл(Контекст,-1);	
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура ИзмВидТорговли(Сообщать = 1)
	Если ВидТорговли.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли;
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
		Если Сообщать = 1 Тогда
			глКомментарий("Нельзя продавать необоротные активы на условиях бартера!",0,,"!");
		КонецЕсли;
		ВидТорговли = 0;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура УстВидТорговли()
	ВидТорговли = ?(Контрагент.Выбран()=1,Контрагент.ВидТорговли,0);      
	Если ПустоеЗначение(ВидТорговли) = 1 Тогда
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
	КонецЕсли;                  
	ИзмВидТорговли(0);
КонецПроцедуры

// ===============================
Функция ПриВыбореОснования(Док,СтарДок=0)
	Если ПустоеЗначение(Док) = 1 Тогда
	    Возврат 0;
	ИначеЕсли Док = СтарДок Тогда
	    Возврат -1;
	КонецЕсли;

	Если глЕстьРеквизитШапки("ВидТорговли",Док.Вид()) = Да Тогда    
		Если ПустоеЗначение(Док.ВидТорговли) = 0 Тогда
			ВидТорговли = Док.ВидТорговли;
			ИзмВидТорговли(0);
		КонецЕсли;
	КонецЕсли;

	Если глЕстьРеквизитШапки("Валюта",Док.Вид()) = Да Тогда    
		Валюта_Прежн 	= Валюта;
		Валюта 			= Док.Валюта;
		Курс_Прежн = Курс;
		Если глЕстьРеквизитШапки("Курс",Док.Вид()) = Да Тогда    
			Курс = Док.Курс;
		Иначе
			Курс = глКурсДляВалюты(Валюта,ДатаДок);
		КонецЕсли;
		Если (Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс) Тогда // надо пересчитать цены
			глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
		КонецЕсли;
		Если Валюта_Прежн <> Валюта Тогда
			СчетКонтрагента = СчетПоКоду(?(Док.Валюта = Гривня, "361", "362"));
		КонецЕсли;
		ИзмВидНДС();
	КонецЕсли;
	Возврат 1;
КонецФункции

// ===============================
Процедура ИзмКонтрагент()
	ДокументОснование 	= 0;
	Договор 			= 0;
	УстВидТорговли();
	Если Контрагент.Выбран() = 1 Тогда
		Если (глВосстановитьЗначение(,"ПодставлятьОсновнойДоговор") = Да) 
				И (ПустоеЗначение(Контрагент.БазДоговор)=0) Тогда
			Если Фирма = Контрагент.БазДоговор.Фирма Тогда
				Договор = Контрагент.БазДоговор;
				ПриВыбореОснования(Договор);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	УстГлубина();		
КонецПроцедуры

// ===============================
Процедура ЗаполнитьПоУмолчанию()
	СубконтоВалДох	= глВосстановитьЗначение(Контекст,	"СубконтоВалДох");
	СубконтоВалРасх	= глВосстановитьЗначение(Контекст,	"СубконтоВалРасх");
	ВидЗатрат		= глВосстановитьЗначение(Контекст,	"ВидЗатрат");
	Подразделение 	= глВосстановитьЗначение(,			"БазПодразделениеПродажи");
	Валюта 			= Гривня;
	Курс			= глКурсДляВалюты(Валюта,ДатаДок);
	Дата_Курса		= ДатаДок;
	СчетКонтрагента = СчетПоКоду("361");
КонецПроцедуры

// ===============================
Функция ПроверкаОснования(Док)	
	Если Док.Вид() = "Счет" Тогда
		Если Док.ЧтоПродаем <> Перечисление.ЧтоПродаем.НеоборотныеАктивы Тогда
			глКомментарий("Для реализации ТМЦ используйте документ ""Расходная Накладная"".",1);
			Возврат 0;
		КонецЕсли;	
	КонецЕсли;
	Возврат 1;
КонецФункции

// ===============================
Процедура ВыборОснования()  
	СтарДоговор 	= Договор;
	СтарОснование 	= ДокументОснование;
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если ПроверкаОснования(ДокументОснование) = 0 Тогда 
		ДокументОснование = СтарОснование;              		
		Возврат;
	КонецЕсли;			
	Если ПриВыбореОснования(ДокументОснование,СтарОснование) = 0 Тогда
		ПриВыбореОснования(Договор,СтарДоговор);
	КонецЕсли;
КонецПроцедуры	


// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	Если Номер = 2 Тогда
		Значение = ?(ВидЛиквидации = Списание,"Списание","Реализация");
		Форма.Закладки.УстановитьЗначение(2,Значение,"Дополнительно");
	КонецЕсли;                          
	ОтображаемыеСлои = "Общий," + Значение;           
	Форма.ИспользоватьСлой(ОтображаемыеСлои,2);
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)

	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
		ИзмВидНДС();
		ФлагСтандОбр = 0;

	ИначеЕсли Рекв = "Отпустил" Тогда
		ФлагСтандОбр = 0;
		КонтФирмы = Фирма;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);

	ИначеЕсли Рекв = "СубконтоВалДох" Тогда
		Если ПустоеЗначение(СубконтоВалДох) = 1 Тогда
			ГрВалДох = СоздатьОбъект("Справочник.ВалДоходыРасходы");
			Если ГрВалДох.НайтиПоНаименованию("Валовi доходи",0,1) = 1 Тогда
				СубконтоВалДох.ИспользоватьРодителя(ГрВалДох.ТекущийЭлемент());
			КонецЕсли;
			ГрВалДох = 0;
		КонецЕсли;

	ИначеЕсли Рекв = "СубконтоВалРасх" Тогда
		Если ПустоеЗначение(СубконтоВалРасх) = 1 Тогда
			ГрВалРасх = СоздатьОбъект("Справочник.ВалДоходыРасходы");
			Если ГрВалРасх.НайтиПоНаименованию("Валовi витрати",0,1) = 1 Тогда
				СубконтоВалРасх.ИспользоватьРодителя(ГрВалРасх.ТекущийЭлемент());
			КонецЕсли;
			ГрВалРасх = 0;
		КонецЕсли;

	ИначеЕсли Рекв = "НеоборотныйАктив" Тогда
        ФлагСтандОбр = 0;
		КонтФирмы = Фирма;
		ОткрытьФорму("Справочник.НеоборотныеАктивы.ФормаСписка",КонтФирмы);
		ИзмНеоборотныйАктив();
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ОбработкаВыбораЗначения(Значение, Рекв, Флаг)
	Если Рекв="Отпустил" Тогда
		Если Значение.Фирма<>Фирма Тогда
			Предупреждение("Можно выбирать только тех сотрудников, которые работают в этой фирме");
		    Флаг = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()

	глПроверкаДатыДок(Контекст,"Открытие");
	НачальнаяДатаДокумента = ДатаДок;
	ПриЗаписиПерепроводить(1);

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
    Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Основной, Общий",2);

	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.		Доступность(0);
//		Форма.кДействия.Доступность(0);
		Форма.кФирма.	Доступность(0);               		
		Форма.кОсн.		Доступность(0);
		Форма.кВалюта.	Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;	

	Валюта_Прежн 	= Валюта;
	Курс_Прежн 		= Курс;  
	СтараяДата 		= ДатаДок;

	Форма.Контрагент.		ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.НеоборотныйАктив.	ВыполнятьФормулуТолькоПриИзменении(1);
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
		Возврат;
	КонецЕсли;
	глЗаполнитьШапку(Контекст);
	ЗаполнитьПоУмолчанию();
	Контрагент 		= глВосстановитьЗначение(,"ОсновнойПокупатель");
	ВидЛиквидации 	= Перечисление.ВидыЛиквидацииНеоборАктивов.Списание;
	ТипСписания		= Перечисление.ТипыСписанияНеоборАктивов.ПоРешениюНалогоплательщикаИлиКМУ;
	ИзмКонтрагент();
КонецПроцедуры
               
// ===============================
Процедура ВводНаОсновании(Док)
	Если ПустоеЗначение(Док) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
		
	Если ПроверкаОснования(Док) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	глЗаполнитьШапкуНаОсн(Контекст,Док);
	ЗаполнитьПоУмолчанию();
	ВидЛиквидации 	= Перечисление.ВидыЛиквидацииНеоборАктивов.Реализация;
	Валюта 			= Док.Валюта;
	Курс 			= Док.Курс;	
	Дата_Курса		= ДатаДок;
	СчетКонтрагента = СчетПоКоду(?(Док.Валюта = Гривня, "361", "362"));
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Автор = глПользователь;
	Если ВидЛиквидации <> Списание Тогда
		ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
		глСохранитьЗначение(Контекст,"Отпустил",Отпустил);
	КонецЕсли;
	глСохранитьЗначение(Контекст,"СубконтоВалДох",	СубконтоВалДох);
	глСохранитьЗначение(Контекст,"СубконтоВалРасх",	СубконтоВалРасх);
	глСохранитьЗначение(Контекст,"ВидЗатрат",		ВидЗатрат);
КонецПроцедуры

// ===============================
// Инициализируем список действий по кнопке "Действия"
Списание = Перечисление.ВидыЛиквидацииНеоборАктивов.Списание;
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");

