Перем Касса;
Перем СчетНДС, СубконтоНДС1, СубконтоНДС2;
Перем СчетТМЦ; // счет и аналитика по ТМЦ
Перем НДСВсего, ВзаиморасчетыГрн; // для исправления ошибок при округлениях
Перем ПересчКво;   
Перем ВремРег;   

Перем ИтогоПоНакладной; //--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)
Перем УстанавливаемыйТипЦен;

// ===============================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Контрагент,"Поставщик");
    глВыбранЛи(СчетКонтрагента,"Счет контрагента");
	Если глВсеВыбрано = 1 Тогда
		Если (глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0)
		И (СчетКонтрагента.ВидСубконто(1) <> ВидыСубконто.Сотрудники) Тогда
			глКомментарий("Счет контрагента ("+СчетКонтрагента+") не является счетом учета взаиморасчетов!",1,,"!");
		    глВсеВыбрано = 0;
		ИначеЕсли (Валюта = Гривня)
		И (СчетКонтрагента.Валютный = 1) Тогда
			глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
			глВсеВыбрано = 0;       
		ИначеЕсли (Валюта <> Гривня)
		И (СчетКонтрагента.Валютный = 0) Тогда
			глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;	
	КонецЕсли;	
	глВыбранЛи(Валюта,"Валюта");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(МестоХранения,"Место хранения");
	глВыбранЛи(ВидТорговли,"Вид торговли");
	глВыбранЛи(ВидТары,"Вид тары");
	глВыбранЛи(СубконтоВалРасх,"Субконто валовых расходов");
	Если НДСнаЗатраты = 0 Тогда
		глВыбранЛи(ВидНДС,"Вид НДС");
	КонецЕсли;
	Если Валюта = Гривня Тогда  
		Если (ЧерезПодотчетноеЛицо = 1) и (СуммаПодотчета > 0) Тогда
			глВыбранЛи(ПодотчетноеЛицо,"Подотчетное лицо");
		КонецЕсли;
	КонецЕсли;
    Если Валюта <> Гривня Тогда
		Если СуммаПодотчета <> 0 Тогда
	        глКомментарий("Нельзя указывать сумму подотчета при валютном приходовании!",0,,"!");
    	    глВсеВыбрано = 0;
		КонецЕсли;
	    Если ВидТорговли <> Перечисление.ВидыТорговли.Предоплата Тогда
			глКомментарий("Приходовать за валюту можно только на условиях предоплаты!",0,,"!");
    		глВсеВыбрано = 0;
		КонецЕсли;
	ИначеЕсли ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Касса = глПолучитьКассу(Фирма,Гривня);

		// накладную за наличные можно создать только за гривни
		Ит = СоздатьОбъект("БухгалтерскиеИтоги");
		Ит.ИспользоватьРазделительУчета(Фирма);
		Ит.ИспользоватьСубконто(ВидыСубконто.НашиДенежныеСчета, Касса, 2);
		Ит.ВыполнитьЗапрос(,ТекущийДокумент(),"30.1",,,,,"С");
		Остаток = Ит.СНД();
		Ит = 0;
		Если Итог("СуммаСНДС") > Остаток Тогда
		    Если Константа.РазрешитьОтрицОстатки = Нет Тогда
			    глКомментарий("В кассе "+Касса+" недостаточно средств для проведения операции! Остаток "+Остаток,0,,"!");
				глВсеВыбрано = 0;
			Иначе
				// разрешены отрицательные остатки,
				// выведем сообщение с другим уровнем детальности
			    глКомментарий("В кассе "+Касса+" недостаточно средств для проведения операции! Остаток "+Остаток,1,,"!");
		    КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	глПроверкаНДСВДокументе(Контекст, Итог("СуммаБезНДС"), Итог("СуммаСНДС"), Итог("НДС"));
	глВсеВыбрано = ?(глВсеВыбрано=0,0,глПроверкаДублейСтрок(Контекст));
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Процедура РассчитатьШапку()   
	// параметры для проводки по НДС
	СчетНДС = СчетПоКоду("6415");
	СубконтоНДС1 = ВидНДС;
	СубконтоНДС2 = 0;
	// налоговый кредит
	Если Константа.НДСпоВходящимНН = Да Тогда
		// проводку по налоговому кредиту сделаем в 
		// документе ЗаписьКнигиПриобретения
		СчетНДС = СчетПоКоду("6442");
		СубконтоНДС1 = Контрагент;
		СубконтоНДС2 = Договор;
	КонецЕсли;
КонецПроцедуры
                         
// ===============================
// Назначение:
//		Отражает движения документа по регистру ВзаиморасчетыПоставщиков
// ===============================
Функция ДвиженияВзаиморасчеты()  
	// расчет итогов по взаиморасчетам
	Если СчетКонтрагента = СчетПоКоду("3721") Тогда
		ПервыйДок = Договор;
	Иначе
		ПервыйДок = ?(Контрагент.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,Договор, Контрагент.БазДоговор); //  + umk заменим договор 
	КонецЕсли;

    ВремРег = СоздатьОбъект("Регистры");
	ФлагОтгрузки = 1; ЗнакОплаты = 1; ФлагВозврата = 0;
	глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,?(ВидТорговли=Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты),Контрагент,ПервыйДок,Валюта);
	тбСуммыПогашения = глПолучитьСуммыДляПогашения(Контекст,Фирма,Валюта);
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,?(ВидТорговли=Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты),Контрагент,ПервыйДок,Валюта);
	
	Если (тбСуммыПогашения.КоличествоСтрок()>1) И (ЧерезПодотчетноеЛицо=1) Тогда
		глКомментарий("Не предусмотрено закрытие подотчета в случае разных ставок НДС. Воспользуйтесь авансовыми отчетами.",0,,"!");
		Возврат 0;
	КонецЕсли;
		
	Если ТранспортныеРасходы > 0 Тогда //--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)		
		ТекТранспортныеРасходы = ТранспортныеРасходы; 	
		Если тбСуммыПогашения.КоличествоСтрок() > 0 Тогда
			ИтСумма = тбСуммыПогашения.Итог("СуммаСНДС");
			Для Инд=1 По тбСуммыПогашения.КоличествоСтрок()  Цикл
					
					тбСуммыПогашения.ПолучитьСтрокуПоНомеру(Инд);
					
					Коэф = тбСуммыПогашения.СуммаСНДС / ИтСумма;
					
					тбСуммыПогашения.СуммаСНДС = тбСуммыПогашения.СуммаСНДС + Коэф * ТранспортныеРасходы;	
					
			КонецЦикла;	
		КонецЕсли;	
	КонецЕсли;
	ИтогоПоНакладной = тбСуммыПогашения.Итог("СуммаСНДС");
	//... УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)	
	
	// проводим по регистрам взаиморасчетов
	Если СчетКонтрагента <>  СчетПоКоду("3721") Тогда
		глПровестиПоВзаиморасчетам(Контекст,ФлагОтгрузки,ЗнакОплаты,ФлагВозврата,Фирма,тбДолги,тбСуммыПогашения,Валюта,Контрагент,ПервыйДок,ВидТорговли,ДокументОснование); 
	КонецЕсли;
	
    // погашение аванса подотчета
	СуммаПогашенияАванса = 0; СуммаАвансаПодотчета = 0;
	Если (ВидТорговли <> Перечисление.ВидыТорговли.Нал) И (ВидТорговли <> Перечисление.ВидыТорговли.Бартер) 
			И (ЧерезПодотчетноеЛицо = 1) И (СуммаПодотчета > 0) Тогда
		ПроцНДС = глПроцентНДС(ВидНДС,ДатаДок); 
		глПогашениеДолга(Контекст, 1, тбДолги, Фирма, Контрагент, Перечисление.ВидыОплаты.Оплата,
			?(ПустоеЗначение(ДокументОснование)=1,ТекущийДокумент(),ДокументОснование), ПервыйДок, Перечисление.РежимыОплаты.ПоСчету, 
			СуммаПодотчета*1, СуммаПодотчета*ПроцНДС/(ПроцНДС+100), Валюта, ВидНДС);
	КонецЕсли;

	// формируем проводки по движениям регистров
	НДСВтороеСобытие   = 0;
	НДСВсего		   = 0;
	ВзаиморасчетыГрн   = 0;	
	РегПоставщики=ВремРег.ВзаиморасчетыПоставщиков;	
	РегПокупатели=ВремРег.ВзаиморасчетыПокупателей;	
	// по регистру поставщиков
	Если (РегПоставщики.ВыбратьДвиженияДокумента(ТекущийДокумент()) = 0)
	И (Итог("СуммаБезНДС") = 0) Тогда
		
		
		// по регистру взаиморасчетов нет движений. Данная ситуация может возникнуть если 
		// сумма по документу 0. В этом случае нужно сделать одну проводку по счету взаиморасчетов
		
		
		//--- УМК Сандомирский В.Ю. (16.10.14) (закоментил) проводки по нулевым ценам ниже в проводках по ТМЦ
		
		//	глПроводка(Контекст,,СчетКонтрагента,0,"Взаиморасчеты с поставщиком.",Итог("Кво"), ,,,
		//	Контрагент,Договор,, ,,"ПХ",1,"Взаиморасчеты",1);
	КонецЕсли;
	
	Пока РегПоставщики.ПолучитьДвижение() = 1 Цикл
		Если (Константа.ПроводкиПоКассеТолькоОрдерами = Нет) И (ВидТорговли = Перечисление.ВидыТорговли.Нал) 
				И (РегПоставщики.Приход = 1) Тогда
			// при оплате наличными формируются 2 движения, надо взять только одно. Возьмем расход, приход пропускаем
			Продолжить;
		КонецЕсли;

		Если Найти(АвансоваяОтгрузка+ПостОтгрузка+АвансоваяОплата+ПостОплата+ПервоеСобытиеБартерПриход+ВтороеСобытиеБартерПриход,РегПоставщики.КодОперации) = 0 Тогда
			// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
			Продолжить;	
		КонецЕсли;
		// главная часть сложной проводки по взаиморасчетам
		Если (РегПоставщики.КодОперации <> ПостОплата) И (РегПоставщики.КодОперации <> АвансоваяОплата) Тогда
			глПроводка(Контекст,,СчетКонтрагента,РегПоставщики.Долг,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,"Бартер: ","")+"Взаиморасчеты с поставщиком.",, ,,,
			Контрагент,ПервыйДок,, ,,"ПХ",1,"Взаиморасчеты",1);
		КонецЕсли;
		ВзаиморасчетыГрн = ВзаиморасчетыГрн + РегПоставщики.ДолгОсн;
		// погашение аванса
		Если ((РегПоставщики.КодОперации = АвансоваяОплата) Или (РегПоставщики.КодОперации = ПостОплата)) 
				И (ЧерезПодотчетноеЛицо = 1) И (СуммаПодотчета > 0) Тогда
			// дополнительные проводки для подотчета
			глПроводка(Контекст,СчетКонтрагента,"3721",РегПоставщики.Долг,"Списано с подотчета сотрудника",, Контрагент,ПервыйДок,,
			ПодотчетноеЛицо,,, ,,"ПХ",1,"Подотчет");
			Если РегПоставщики.КодОперации = АвансоваяОплата Тогда 
				СуммаАвансаПодотчета = СуммаАвансаПодотчета + РегПоставщики.Долг;
			КонецЕсли;
			ВзаиморасчетыГрн = ВзаиморасчетыГрн	 - РегПоставщики.ДолгОсн;
	        Если глДелатьПроводкиПоНалогам(РегПоставщики,"НДС") = 1 Тогда
				НДСВсего = НДСВсего	- РегПоставщики.НДС;			
			КонецЕсли;	
		ИначеЕсли (глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1) И (РегПоставщики.КодОперации = ПостОтгрузка) Тогда
			СуммаПогашенияАванса = СуммаПогашенияАванса + РегПоставщики.Долг;
		КонецЕсли;      
		// проводки по НДС
        Если глДелатьПроводкиПоНалогам(РегПоставщики,"НДС") = 1 Тогда
			НДСВсего = НДСВсего + РегПоставщики.НДС;			
			// проводки по НДС
			Если (ВидТорговли = Перечисление.ВидыТорговли.Нал) И (НДСнаЗатраты=0) Тогда
			    глПроводка(Контекст,СчетНДС,,РегПоставщики.НДС,"НДС",, СубконтоНДС1,СубконтоНДС2,,
		    	,,, ,,"ПХ",1,"Взаиморасчеты");
			ИначеЕсли ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда   					
	        	глПроводка(Контекст,СчетНДС,,РегПоставщики.НДС,"Бартер: НДС",, СубконтоНДС1,СубконтоНДС2,,
				,,, ,,"ПХ",1,"Взаиморасчеты");                                                                         
			Иначе
				Если НДСнаЗатраты = 0 Тогда                             
					Если РегПоставщики.КодОперации = АвансоваяОтгрузка Тогда
				    	глПроводка(Контекст,СчетНДС,,РегПоставщики.НДС,"НДС (первое событие)",, СубконтоНДС1,СубконтоНДС2,,
				    	,,, ,,"ПХ",1,"Взаиморасчеты");                                                                                 
					ИначеЕсли РегПоставщики.КодОперации = ПостОтгрузка Тогда
				    	глПроводка(Контекст,"6441",,РегПоставщики.НДС,"НДС (налоговый кредит)",, Контрагент,ПервыйДок,,
				    	,,, ,,"ПХ",1,"Взаиморасчеты");
					ИначеЕсли (РегПоставщики.КодОперации = АвансоваяОплата) И (ЧерезПодотчетноеЛицо = 1) И (СуммаПодотчета > 0) Тогда
				    	глПроводка(Контекст,СчетНДС,"6441",РегПоставщики.НДС,"НДС (первое событие)",, СубконтоНДС1,СубконтоНДС2,,
				    	Контрагент,ПервыйДок,, ,,"ПХ",1);                                                                                 
					КонецЕсли;	
				Иначе
					// возможно была предоплата, в которой указали сумму НДС.
					Если РегПоставщики.КодОперации = ПостОтгрузка Тогда          
						НДСВтороеСобытие = НДСВтороеСобытие + РегПоставщики.НДС; 
					ИначеЕсли (РегПоставщики.КодОперации = АвансоваяОплата) И (ЧерезПодотчетноеЛицо = 1) И (СуммаПодотчета > 0) Тогда
						НДСВтороеСобытие = НДСВтороеСобытие - РегПоставщики.НДС; 
					КонецЕсли;	
				КонецЕсли;      
			КонецЕсли;
		КонецЕсли;
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		//// проводки по ВД/ВР
        //Если (глДелатьПроводкиПоНалогам(РегПоставщики,"ВД/ВР") = 1) И (СубконтоВалРасх <> Константа.НиДоходНиРасход) Тогда
		//	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
		//    	глПроводка(Контекст,"ВР","ВР",РегПоставщики.СуммаСНДС_НУ-РегПоставщики.НДС,"Бартер: валовые расходы",, Контрагент,Договор,Константа.БартерВалДох,
		//    	Контрагент,Договор,Константа.БартерВалДох, ,,"ПХ",1);             
		//	Иначе					
		//		глПроводка(Контекст,"ВР","ВР",РегПоставщики.СуммаСНДС_НУ-РегПоставщики.НДС,"Вал. расходы (поставщик)",, Контрагент,Договор,СубконтоВалРасх,
		//		Контрагент,Договор,СубконтоВалРасх,,,"ПХ",1);
		//	КонецЕсли;
		//КонецЕсли;
		// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		// дополнительные проводки
		Если (ВидТорговли = Перечисление.ВидыТорговли.Нал) И (Константа.ПроводкиПоКассеТолькоОрдерами = Нет) Тогда
			// по кассе при оплате наличными
    		глПроводка(Контекст,СчетКонтрагента,"30.1",РегПоставщики.Долг,"Оплата наличными",, Контрагент,ПервыйДок,,
    		Касса,,, ,,"ПХ");
		ИначеЕсли (ВидТорговли = Перечисление.ВидыТорговли.Бартер) И (РегПоставщики.КодОперации = ПервоеСобытиеБартерПриход) Тогда
			// для бартерных операций первое событие показываем как аванс в счет встречной поставки
			Сч=?(глВыделятьЛиАвансыПоСчету(СчетКонтрагента)=1,"681","36") + ?(Валюта=Гривня,"1","2");
			глПроводка(Контекст,СчетКонтрагента,Сч,РегПоставщики.Долг,"Бартер: первое событие",, Контрагент,ПервыйДок,,
			Контрагент,ПервыйДок,, ,,"ПХ");						
		КонецЕсли;	
	КонецЦикла;
	// для бартера просмотрим другой регистр		
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
		РегПокупатели.ВыбратьДвиженияДокумента(ТекущийДокумент());
		Пока РегПокупатели.ПолучитьДвижение() = 1 Цикл            
			Если Найти(ПервоеСобытиеБартерПриход+ВтороеСобытиеБартерПриход,РегПокупатели.КодОперации) = 0 Тогда
				// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
				Продолжить;	
			КонецЕсли;      
			ВзаиморасчетыГрн = ВзаиморасчетыГрн + РегПокупатели.ДолгОсн;
			Если (РегПокупатели.КодОперации = ПервоеСобытиеБартерПриход) 
			И (глБартерНаОбщихОснованиях(РегПокупатели.Договор,РегПокупатели.Счет,РегПокупатели.КредДокумент) = 0) Тогда
				// проводки по НДС
				Если глДелатьПроводкиПоНалогам(РегПокупатели,"НДС") = 1 Тогда
    				глПроводка(Контекст,"6441",,РегПокупатели.НДС,"Бартер: НДС (кредит)",, Контрагент,ПервыйДок,,
        			,,, ,,"ПХ",1,"Взаиморасчеты");               
					глПроводка(Контекст,"643","6415",РегПокупатели.НДС,"Бартер: НДС ",, Контрагент,ПервыйДок,,
					ВидНДС,,, ,,"ПХ",1); // налоговые обязательства возникаю ВСЕГДА по первому событию
					НДСВсего = НДСВсего + РегПокупатели.НДС;								
				КонецЕсли;	
				
				// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				//// проводки по ВД/ВР
		        //Если (глДелатьПроводкиПоНалогам(РегПокупатели,"ВД/ВР") = 1) И (Константа.БартерВалДох <> Константа.НиДоходНиРасход) Тогда     					
			    //	глПроводка(Контекст,"ВД","ВД",РегПокупатели.СуммаСНДС_НУ-РегПокупатели.НДС,"Бартер: валовые доходы",, Контрагент,Договор,Константа.БартерВалДох,
			    //	Контрагент,Договор,Константа.БартерВалДох, ,,"ПХ",1);
				//КонецЕсли;	
				// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				
				
			ИначеЕсли РегПокупатели.КодОперации = ВтороеСобытиеБартерПриход Тогда
				// главная часть сложной проводки по взаиморасчетам
				глПроводка(Контекст,,СчетКонтрагента,РегПокупатели.Долг,"Бартер: Взаиморасчеты с поставщиком.",, ,,,
				Контрагент,ПервыйДок,, ,,"ПХ",1,"Взаиморасчеты",1);
				// дополнительные проводки для бартера 
				Если глВыделятьЛиАвансыПоСчету(СчетКонтрагента)=1 Тогда
					// закрываем встречную поставку
					Сч = "371" + ?(Валюта=Гривня,"1","2");
					глПроводка(Контекст,СчетКонтрагента,Сч,РегПокупатели.Долг,"Бартер: закрываем аванс",, Контрагент,ПервыйДок,,
					Контрагент,ПервыйДок,, ,,"ПХ");						                                                       
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;		
	Если НДСнаЗатраты = 1 Тогда
		Если СубконтоВалРасх <> Константа.НиДоходНиРасход Тогда
			// необходимо увеличить ВР на сумму НДС
			глПроводка(Контекст,"ВР","ВР",Итог("НДС"),"Вал. расх. увеличены на сумму НДС, не относящуюся к нал. кредиту",, Контрагент,ПервыйДок,СубконтоВалРасх,
			Контрагент,ПервыйДок,СубконтоВалРасх,,,"ПХ",1);
		КонецЕсли;	
		// если была предоплата ...
		Если НДСВтороеСобытие <> 0 Тогда
			// ... необходимо сторнировать НДС
	    	глПроводка(Контекст,СчетНДС,"6441",-НДСВтороеСобытие,"НДС: Сторно ранее учтенного налогового кредита",, СубконтоНДС1,СубконтоНДС2,,
	    	Контрагент,ПервыйДок,, ,,"ПХ");                                                                                 
		КонецЕсли;					
	КонецЕсли;	
	Если СуммаПогашенияАванса > Макс(0,СуммаАвансаПодотчета) Тогда
		глПроводка(Контекст,СчетКонтрагента,"3711",СуммаПогашенияАванса - Макс(0,СуммаАвансаПодотчета),"Прих: авансовый платеж",, Контрагент,ПервыйДок,,
		Контрагент,ПервыйДок,, ,,"ПХ");				
	КонецЕсли;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
    глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
   	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
	Если (ДавальческоеСырье=1) И 
	((ТМЦ.Счет.Код = "2092") или (ТМЦ.Счет.Код = "289")) Тогда
		// нельзя приходовать ТЗР и двальческое сырье в одном документе
		глКомментарий("Нельзя приходовать ТЗР при приходовании давальческого сырья!",1,,"!");
		глВсеВыбрано = 0;
   	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция РассчитатьСтроку()
	ПересчКво = Кво * Коэффициент;
	СчетТМЦ=?(ДавальческоеСырье=1,ГлПолучитьСчетУчетаТМЦ("ДавМатериалы",ТМЦ),ТМЦ.Счет);
	Если СчетТМЦ.Выбран()=0 Тогда
	    глКомментарий("Не выбран счет, на который приходуем! Строка "+НомерСтроки, 0,,"!");
	    Возврат 0;
	КонецЕсли;
КонецФункции

// ===============================
Процедура ДвиженияПартии() 
Перем ИтогСуммаСНДС, ИтогНДС;	// базы распределения сумм
	глКомментарий("Выполняются движения партий ТМЦ",2);
		// Приходуем не проверяя:	
	ОкрПриходСтоимостьВсего = 0; // для рассчета разницы округления
	ФлагПрихода = 1;
	Если ДавальческоеСырье <> 1 Тогда
		глОчиститьКлючОкр("Взаим");
		глОчиститьКлючОкр("НДС");
		// расчитаем базы распределения 
		глОпределитьБазыРаспределения(Контекст, ИтогСуммаСНДС, ИтогНДС);
		ИтогСуммаСНДС		= глПересчет(ИтогСуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
		ИтогНДС 			= глПересчет(ИтогНДС,      Валюта,ДатаДок,Гривня,ДатаДок);
	КонецЕсли;
	
	ТекТранспортныеРасходы 	= ТранспортныеРасходы; //--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)
	ТекВсегоПоНакладной 	= ИтогоПоНакладной;//--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		МестоХраненияП = ?((глПартионныйУчетПоСкладам = Да) ИЛИ (ПриходМОЛ = 1),?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад),0);
		МестоХраненияБУ = ?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад);// + umk
		МетодРасчетаСебестоимости=глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок);				
		Если (МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему)
		И    (ДавальческоеСырье = 0) // дав. сырье - всегда по партиям
		Тогда
			ПоставщикП = 0;
			ПоставкаП = 0;
			ПрихДокументП = 0;
		Иначе
			ПоставщикП = Контрагент;
			ПоставкаП = ТекущийДокумент();
			ПрихДокументП = ТекущийДокумент();
		КонецЕсли;
		ПриходОстатокТовара = Кво * Ед.Коэффициент;
		
		// движения по регистру Остатки
		
		ТМПЦПрих = ?(ПустоеЗначение(ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляПрихода.Получить(ДатаДок), ТМЦ);
		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда //--- УМК Сандомирский В.Ю. (30.09.14) в остатки тмц в партии ТМЦ для приходования				
			ТМЦОстатков = ТМЦ;	//--- в остатки берем ТМЦ
				
		Иначе
			ТМЦОстатков = ТМПЦПрих; 				
		КонецЕсли;				
					
		глПровестиОстатки(Контекст, ВремРег, Фирма, ?(ПустоеЗначение(Склад) = 1, МестоХранения, Склад), ТМЦОстатков,ВидУпаковки, ПриходОстатокТовара, ФлагПрихода, 0);
		
		ПострСуммаСНДС	= глПересчет(СуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
		ПострНДС		= глПересчет(НДС,      Валюта,ДатаДок,Гривня,ДатаДок);
		
		ПострСуммаСНДС_3721 = ПострСуммаСНДС - ПострНДС;  // + umk
		
		
		Если ((ВидТары <> Перечисление.ВидыТары.Залоговая) Или (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара)) 
		И (ДавальческоеСырье <> 1) Тогда
			// не залоговая тара, округляем с учетом накопленных погрешностей округления
			ПострСуммаСНДС	= глОкрКорр("Взаим", ?(ИтогСуммаСНДС = 0, 0, ВзаиморасчетыГрн * ПострСуммаСНДС / ИтогСуммаСНДС),2);
			ПострНДС		= глОкрКорр("НДС", ?(ИтогНДС = 0, 0, НДСВсего * ПострНДС / ИтогНДС),2);
		КонецЕсли;
		
		ПострСуммаБезНДС 	= ПострСуммаСНДС - ПострНДС;
		
		ПриходСтоимость = ?(НДСнаЗатраты=0,ПострСуммаБезНДС,ПострСуммаСНДС);
		
		// если подоотчетное лицо тогда // +umk
		Если СчетКонтрагента = СчетПоКоду("3721") Тогда
			ПриходСтоимость = ПострСуммаСНДС_3721;
		КонецЕсли;
		
		ПриходПродСтоимость = 0;
		// определим код операции		
		Если ДавальческоеСырье = 1 Тогда
			КодОперации = ПолучениеДавальческогоСырья;
			// сразу сформируем проводку
				
			//ТМПЦПрих = ?(ПустоеЗначение(ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляПрихода.Получить(ДатаДок), ТМЦ);
			//
			//Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 
			//	И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда //--- УМК Сандомирский В.Ю. (30.09.14) в остатки тмц в партии ТМЦ для приходования
			//	
			//	ТМЦОстатков = ТМЦ;	//--- в остатки берем ТМЦ
			//Иначе
			//	ТМЦОстатков = ТМПЦПрих; 
			//		
			//КонецЕсли;
					
			глПроводка(Контекст,СчетТМЦ,,ПриходСтоимость,"Прих:Себестоимость",ПересчКво, МестоХранения,ТМЦОстатков,ТекущийДокумент(),
			Контрагент,Договор,, ,,"ПХ");
			
		ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			КодОперации = ПокупкаУслуги;
			ПриходОстатокТовара = 0;
		Иначе                    
			Если (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара)
			и (ВидТары <> Перечисление.ВидыТары.Покупная) Тогда
				// залоговая или возвратная тара
				Если ВидТары = Перечисление.ВидыТары.Залоговая Тогда
					// залоговая тара
					КодОперации = ПолучениеТарыЗалоговойОтПоставщика;
				Иначе
					// возвратная тара
					КодОперации = ПолучениеТарыВозвратнойОтПоставщика;
				КонецЕсли;
			Иначе
				// ТМЦ или покупная тара
				// с покупной тарой работаем, как с ТМЦ
				КодОперации = Закупка;
			КонецЕсли;
		КонецЕсли;
		// определим счет на который будем приходовать ТМЦ
		СчетП = ТМЦ.Счет;
		Если ДавальческоеСырье = 1 Тогда
			СчетП = ГлПолучитьСчетУчетаТМЦ("ДавМатериалы",ТМЦ);
		ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
			Если ВидТары = Перечисление.ВидыТары.Залоговая Тогда
				СчетП = ГлПолучитьСчетУчетаТМЦ("ТараЗалоговая");
			ИначеЕсли ВидТары = Перечисление.ВидыТары.Возвратная Тогда
				СчетП = ГлПолучитьСчетУчетаТМЦ("ТараВозвратная",ТМЦ);
				ПриходНДС = 0;
			КонецЕсли;
		КонецЕсли;	
		
		Если ТранспортныеРасходы > 0 Тогда //--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)	
			Если перРаспределятьТранспортныеРасходы = 1 Тогда
				КоэффициентУчастия = СуммаСНДС / Итог("СуммаСНДС");
			ИначеЕсли перРаспределятьТранспортныеРасходы = 2 Тогда	
				КоэффициентУчастия = Кво / Итог("Кво");
			КонецЕсли;
			
			Если НомерСтроки = КоличествоСтрок() Тогда //--- последня Строка 
				ПрихСтоимость = ТекВсегоПоНакладной;
				ТекВсегоПоНакладной = 0;
			Иначе
				ПрихСтоимость = глОкрКорр("Взаим",СуммаСНДС + ТранспортныеРасходы * КоэффициентУчастия,2);
				ТекВсегоПоНакладной = ТекВсегоПоНакладной - ПрихСтоимость;
			КонецЕсли;	
		Иначе	
			ПрихСтоимость = ПриходСтоимость;	
		КонецЕсли; //--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)			
				
		глПровестиПартию(Контекст, 1, 0, Фирма, ТМПЦПрих, СчетП, МестоХраненияП, ПоставщикП,					//--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)	ПрихСтоимость
			ПоставкаП, ПрихДокументП, ПриходОстатокТовара, ПрихСтоимость, ПриходПродСтоимость,
			КодОперации, 1, ПрихСтоимость, 0,,,Контрагент,,ДопКво);  // --- Вид упаковки добавлен ??? в оборотах		
			
		Если (ПрихСтоимость > 0) И (СчетКонтрагента <> СчетПоКоду("3721")) Тогда  //--- УМК Сандомирский В.Ю, (16.07.14) подправлена проведение с нулевой ценой не работало после моих же изменений  //--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)	ПрихСтоимость				
			глПроводка(Контекст,СчетП,,ПрихСтоимость,"Прих:Себестоимость",ПриходОстатокТовара, МестоХраненияБУ,ТМПЦПрих,ПоставкаП,	//--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)	ПрихСтоимость
			,,, ,,"ПХ",1,?(СчетП.Забалансовый=1,0,"Взаиморасчеты"));			
		Иначе			
			глПроводка(Контекст,СчетП,СчетКонтрагента ,ПрихСтоимость,"Прих:Себестоимость",ПриходОстатокТовара, МестоХраненияБУ,ТМПЦПрих,ПоставкаП,	//--- УМК Сандомирский В.Ю, при нулевой цене
			Контрагент,Договор,, ,,"ПХ",1,?(СчетП.Забалансовый=1,0,"Взаиморасчеты"));	// + umk додав прибуткову вартість		
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

// ===============================
// Назначение:
//		Отражает движения документа в регистрах 
// ===============================
Функция ДвиженияПартииИзПереработки() 
Перем ИтогСуммаСНДС, ИтогНДС;	// базы распределения сумм
Перем фОшибка;	// возвращаемое значение
	фОшибка = 1;              
	
	глКомментарий("Выполняются движения партий ТМЦ",2);
	
	текПредпочтение = 0;
	тбПартии = 0;
	тбОстатки = 0;
	ИнвСтратегияПродажи = 1;
	спОтбор = СоздатьОбъект("СписокЗначений");
	спОтбор.ДобавитьЗначение(Контрагент, "Контрагент");
	спОтбор.ДобавитьЗначение(СчетПоКоду("2093"), "Счет");
	ОстСуммаБезНДС = Окр(Итог("СуммаБезНДС"),2);
	
	глРассчитатьОстаткиПартий(Контекст, ВремРег, Фирма, спОтбор);
	// таблицу партий формируем с флагом возврата 0, для правильного списания партий при уазанном предпочтении
	глСформироватьТаблицуПартий(Контекст, ВремРег, Фирма, спОтбор, текПредпочтение, 
		тбПартии, тбОстатки, 0, ИнвСтратегияПродажи);
	
	ФлагПрихода = 0;

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		МетодРасчетаСебестоимости=глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок);
		ВсегоСписать = Кво * Коэффициент;		
		ОсталосьСписать		= ВсегоСписать;
		НС=0;
		// находим в тбПартии первую партию, соответсв. текущей строке документа
		Если тбПартии.НайтиЗначение(ТМЦ,НС,"ТМЦ")=1 Тогда
			тбПартии.ПолучитьСтрокуПоНомеру(НС);
		Иначе                                   
			// если такой строки нет, переходим на первую строку таблицы
			тбПартии.ВыбратьСтроки();
			тбПартии.ПолучитьСтроку();
		КонецЕсли;
		Себестоимость = 0;
		
		// обрабатываем все строки тбПартии с соответсв. ТМЦ
		Пока тбПартии.ТМЦ = ТМЦ Цикл                         
			// берем необходимые параметры партии из тбПартии
			МестоХраненияП = тбПартии.МестоХранения;
			ПоставщикП	   = тбПартии.Поставщик;
			ПоставкаП 	   = тбПартии.Поставка;
			ПрихДокументП  = тбПартии.ПрихДокумент;
			СчетП		   = тбПартии.Счет;
			НС =0;
			// находим остаток текущей партии в тбОстатки по ключу
			Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,ТМЦ.Код,СчетП),НС,"Ключ")=1 Тогда
				тбОстатки.ПолучитьСтрокуПоНомеру(НС);
				ОстатокТовара = тбОстатки.ОстатокТовара;
				// если остаток 0, то с текущей партии не списываем
				Если ОстатокТовара = 0 Тогда
					Если тбПартии.ПолучитьСтроку()=0 Тогда
						Прервать;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				// сформируем движения по регистрам и проводки
				// нормальное списание
				СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
				КоэфСписания	= СписываемыйОстатокТовара / ОстатокТовара;
				
				// определим себестоимость текущей списываемой партии
				СписываемаяСтоимость	 = тбОстатки.Стоимость * КоэфСписания;

				глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетПоКоду("2093"), МестоХраненияП, ПоставщикП, 
					ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, 0,
					ВозвратИзДавальческойПереработки,0 ,0, 0);
				тбОстатки.ОстатокТовара = тбОстатки.ОстатокТовара - СписываемыйОстатокТовара;
				тбОстатки.Стоимость = тбОстатки.Стоимость - СписываемаяСтоимость;
				Себестоимость = Себестоимость + СписываемаяСтоимость;
				ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
			КонецЕсли;
			Если ОсталосьСписать = 0 Тогда
				Прервать;
			КонецЕсли;   
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла; 
		
		Если ОсталосьСписать > 0 Тогда
			глСообщитьОбОтсутствииПартии(1, Фирма, ТМЦ, НомерСтроки);
			Если Константа.РазрешитьОтрицОстатки = Нет Тогда
				фОшибка = 0;
			Иначе
				Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
					ПоставщикП = 0;
					ПоставкаП = 0;
					ПрихДокументП = 0;
				Иначе
					ПоставщикП = Контрагент;
					ПоставкаП = ТекущийДокумент();
					ПрихДокументП = ТекущийДокумент();
				КонецЕсли;
				// сформируем движения по регистрам и проводки
				глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетПоКоду("2093"), МестоХраненияП, ПоставщикП, 
					ПоставкаП, ПрихДокументП,ОсталосьСписать, 0, 0,
					ВозвратИзДавальческойПереработки,0 ,0, 0);
				
				глСообщитьОСозданииПартии(ТМЦ, ОсталосьСписать);
			КонецЕсли; 
		КонецЕсли; // ОсталосьСписать > 0

		Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
			ПоставщикП = 0;
			ПоставкаП = 0;
			ПрихДокументП = 0;
		Иначе
			ПоставщикП = Контрагент;
			ПоставкаП = ТекущийДокумент();
			ПрихДокументП = ТекущийДокумент();
		КонецЕсли;

		Если ТМЦСтало.УчетДопКво = 1 Тогда
			ДКво = ДопКво;
		Иначе
			ДКво = 0;
		КонецЕсли;
		Если глПартионныйУчетПоСкладам = Да Тогда
			МестоХраненияП = МестоХранения;
		Иначе
			МестоХраненияП = "";
		КонецЕсли;
		
		глПровестиПартию(Контекст, 1, 0, Фирма, ТМЦСтало, ТМЦСтало.Счет, МестоХраненияП, ПоставщикП, 
			ПоставкаП, ПрихДокументП,Кво*Коэффициент, Себестоимость+СуммаБезНДС, 0,
			ВозвратИзДавальческойПереработки, 1, Себестоимость+СуммаБезНДС, 0,,,,,ДКво);
		Регистр.Остатки.ДвижениеПриход(Фирма, ТМЦСтало, МестоХранения,, Кво*Коэффициент, ДКво, 2, 0,,);

		глПроводка(Контекст, ТМЦСтало.Счет, СчетПоКоду("2093"), Себестоимость, "Приход: себестоимость", Кво*Коэффициент, МестоХранения, ТМЦСтало,, Контрагент, ТМЦ,,,,"МЦ");		
		глПроводка(Контекст, ТМЦСтало.Счет, , ?(НомерСтроки = КоличествоСтрок(), ОстСуммаБезНДС, СуммаБезНДС), "Приход: услуги", 0, МестоХранения, ТМЦСтало,, Контрагент, Договор,,,,"ПХ", 1,"Взаиморасчеты");
		ОстСуммаБезНДС = ОстСуммаБезНДС - СуммаБезНДС;
	КонецЦикла; // строки документа
	Возврат фОшибка;
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю, (Схемы ценообразования) 
Процедура ПересчитатьЦеныПоСхемамЦенообразования(ТекТМЦ,ТекБазЦена)
	СпрЦены = СоздатьОбъект("Справочник.Цены");
	СпрЦены.ИспользоватьДату(ДатаДок,1);	
	СпрЦены.ИспользоватьВладельца(ТекТМЦ);
	СпрЦены.ВыбратьЭлементы();
	Пока СпрЦены.ПолучитьЭлемент() = 1 Цикл			
		Если (ПустоеЗначение(СпрЦены.СхемаЦенообразования) = 0) И ((УстанавливаемыйТипЦен = "") ИЛИ (СпрЦены.КатегорияЦены = УстанавливаемыйТипЦен)) Тогда			
			//Если в ТМЦ в типе цен задана схема ценообразования ФИКСИРОВАННАЯ ЦЕНА, по приходной накладной не записывать цену в этот тип цен, даже если меняется закупочная
			Если СпрЦены.СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена = 2 Тогда
				Продолжить;
			КонецЕсли;
			
		    УстанавливаемаяЦена =  ?(СпрЦены.СхемаЦенообразования.фПредопределенныйЭлементФиксированнаяЦена = 3, СпрЦены.Владелец.Цена_Прод.Получить(ДатаДок), глАвтоПересчетЦены(СпрЦены,ТекБазЦена));
			Если СпрЦены.Цена <> Окр(УстанавливаемаяЦена, 2) Тогда
				УстановитьРеквизитСправочника(СпрЦены.ТекущийЭлемент(), "Цена", УстанавливаемаяЦена, ДатаДок);			
			КонецЕсли;
			Если ПустоеЗначение(УстанавливаемыйТипЦен) = 0 Тогда
				// проверим задано ли для ТМЦ исключение. Если нет, добавим
				СпрИТЦ = СоздатьОбъект("Справочник.ИсключенияПоТипамЦен");
				СпрИТЦ.ИспользоватьВладельца(ТекТМЦ);
				Если СпрИТЦ.НайтиПоРеквизиту("Контрагент", Договор.КонтрагентПокупатель, 0) = 1 Тогда
					Если СпрИТЦ.ПометкаУдаления() = 1 Тогда
						СпрИТЦ.СнятьПометкуУдаления();
					КонецЕсли;
				Иначе
					СпрИТЦ.Новый();
					СпрИТЦ.Владелец = ТекТМЦ;
					СпрИТЦ.Контрагент = Договор.КонтрагентПокупатель;
				КонецЕсли;

				Если СпрИТЦ.КатегорияЦен <> УстанавливаемыйТипЦен Тогда
					СпрИТЦ.КатегорияЦен = УстанавливаемыйТипЦен;
					СпрИТЦ.Записать();
					Сообщить("В исключения по типам цен добавлено правило для контрагента");
				КонецЕсли;				
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;	
		
КонецПроцедуры // ПересчитатьЦеныПоСхемамЦенообразования()

Процедура ДобавитьСообщениеВФильтр(ТЗАдресов, Текст)
	ПравильныйСимволПереноса = Симв(13)+Симв(10);
	
	ТЗАдресов.ВыбратьСтроки();
	Пока ТЗАдресов.ПолучитьСтроку() = 1 Цикл
		Если ТЗАдресов.ФильтрТМЦ.Принадлежит(ТМЦ) = 1 Тогда
			ТЗАдресов.ТекстСообщения = ТЗАдресов.ТекстСообщения + "" + ПравильныйСимволПереноса + Текст;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, (Схемы ценообразования)
Процедура ЗаписатьЦены()
	//Если ИзПереработки = 1 Тогда
	//	Возврат;
	//КонецЕсли;	
	
	ТекстПисьма = "";
	ПравильныйСимволПереноса = Симв(13)+Симв(10);
	
	НачатьТранзакцию();
	КЦен = Константа.ЗакупЦена;
	
	СпрЦ = СоздатьОбъект("Справочник.Цены");
	СпрЦ.ИспользоватьДату(ДатаДок);
	
	СпрЦены = СоздатьОбъект("Справочник.Цены");
	СпрЦены.ИспользоватьДату(ДатаДок);
	
	СпрСвязаныеЭлементыЦенообразования = СоздатьОбъект("Справочник.СвязаныеЭлементыЦенообразования");	
	УстанавливаемыйТипЦен = "";
	Если ПустоеЗначение(Договор) = 0 Тогда
		Если ПустоеЗначение(Договор.ТипЦенУстановки) = 0 Тогда
			УстанавливаемыйТипЦен = Договор.ТипЦенУстановки;
		КонецЕсли;
	КонецЕсли;
	ТЗАдресов = СоздатьОбъект("ТаблицаЗначений");
	ТЗАдресов.НоваяКолонка("Адрес", "Строка");
	ТЗАдресов.НоваяКолонка("ТекстСообщения", "Строка");
	ТЗАдресов.НоваяКолонка("ФильтрТМЦ", "СписокЗначений");
	
	СпрР = СоздатьОбъект("Справочник.РассылкаЭП");
	СпрР.ВыбратьЭлементы();
	Пока СпрР.ПолучитьЭлемент() = 1 Цикл
		Если (СпрР.ПометкаУдаления() = 0) И (СпрР.ФильтрТМЦ <> "") Тогда
			ТЗАдресов.НоваяСтрока();
			ТЗАдресов.Адрес = СокрЛП(СпрР.Наименование);
			ТЗАдресов.ФильтрТМЦ = СоздатьОбъект("СписокЗначений");
			глЗаполнитьСписокТоваров(СпрР.ФильтрТМЦ, ТЗАдресов.ФильтрТМЦ);	
		КонецЕсли;
	КонецЦикла;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		//--- Сообщаем только если есть Авторасчет цен или Авторасчет связанных элементов
		ЦСНДС = ЦенаСНДС;
		НТМЦ = ТМЦ;
		Если ИзПереработки = 1 Тогда
			ЦСНДС = ЦСНДС + Себестоимость / (Кво * Коэффициент);
			НТМЦ = ?(ПустоеЗначение(ТМЦСтало) = 0, ТМЦСтало, ТМЦ);
		КонецЕсли;
		
		Сообщать = 0;
		//Если НТМЦ.АвтоИзменениеЦен.Получить(ДатаДок) = 1 Тогда
		//	Сообщать = 1;
		//ИначеЕсли НТМЦ.АвтоРасчетСвязанныхЭлементов.Получить(ДатаДок) = 1 Тогда
		//	Сообщать = 1;
		//КонецЕсли;

		СпрЦ.ИспользоватьВладельца(НТМЦ);
		ИзмененаПриходнаяЦена = 0;		
		
		Если СпрЦ.НайтиПоРеквизиту("КатегорияЦены", КЦен, 0) = 0 Тогда
			СпрЦ.Новый();
			СпрЦ.Наименование = Строка(КЦен);
			СпрЦ.Владелец = НТМЦ;
			СпрЦ.КатегорияЦены = КЦен;
			СпрЦ.Единица = глВернутьБазовуюЕдиницуТовара(НТМЦ);
			СпрЦ.Записать();
			Ц = 0;
			УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Валюта", Валюта, ДатаДок);
			УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Цена", ЦСНДС, ДатаДок);
			
			//Если Сообщать = 1 Тогда
			//	Если глСписокИсключенийРассылки.НайтиЗначение(глДайПапу(НТМЦ).Код) = 0 Тогда //--- УМК Сандомирский В.Ю, (22.08.14) --- Если нет в исключении 
			//	    ТекстПисьма =   ТекстПисьма + "" + ПравильныйСимволПереноса  
			//					+" Создана закупочная цена " + НТМЦ.Код + " " + СокрЛП(НТМЦ.Наименование) 
			//					+ Формат(ЦСНДС,"Ч15.5") + " " + ПравильныйСимволПереноса ;
			//	КонецЕсли;									
			Сообщить(" Создана закупочная цена " + НТМЦ.Код + " " + СокрЛП(НТМЦ.Наименование) + Формат(ЦСНДС,"Ч15.5") );
			//КонецЕсли;	
			ДобавитьСообщениеВФильтр(ТЗАдресов, " Создана закупочная цена " + НТМЦ.Код + " " + СокрЛП(НТМЦ.Наименование) + Формат(ЦСНДС,"Ч15.5") + " " + ПравильныйСимволПереноса);
			ИзмененаПриходнаяЦена = 1;
		Иначе
			Вал = СпрЦ.Валюта;
			Если (Вал <> Валюта) Тогда
				УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Валюта", Валюта, ДатаДок);
			КонецЕсли;

			Ц = СпрЦ.Цена;
			Если Окр(ЦСНДС  / Коэффициент, 2) <> Ц Тогда			
				УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Цена", ЦСНДС / Коэффициент, ДатаДок);
				
				//Если Сообщать = 1  Тогда
				//	Если глСписокИсключенийРассылки.НайтиЗначение(глДайПапу(НТМЦ).Код) = 0 Тогда //--- УМК Сандомирский В.Ю, (22.08.14) --- Если нет в исключении 
				//		ТекстПисьма =  ТекстПисьма + "" + ПравильныйСимволПереноса   
				//					+ " Изменена закупочная цена " + НТМЦ.Код + " " + СокрЛП(НТМЦ.Наименование) 
				//					+ " С "+ Формат(Ц,"Ч15.5") + " на "  + Формат(ЦСНДС,"Ч15.5") + " " + ПравильныйСимволПереноса ;
				//	КонецЕсли;
				Сообщить(" Изменена закупочная цена " + НТМЦ.Код + " " + СокрЛП(НТМЦ.Наименование) + " С "+ Формат(Ц,"Ч15.5") + " на "  + Формат(ЦСНДС,"Ч15.5") );
				ДобавитьСообщениеВФильтр(ТЗАдресов, " Изменена закупочная цена " + НТМЦ.Код + " " + СокрЛП(НТМЦ.Наименование) + " С "+ Формат(Ц,"Ч15.5") + " на "  + Формат(ЦСНДС,"Ч15.5") + " " + ПравильныйСимволПереноса);
				//КонецЕсли;
				ИзмененаПриходнаяЦена = 1					
			КонецЕсли;
		КонецЕсли;		
		Если ИзПереработки = 0 Тогда
			//--- УМК Сандомирский В.Ю, ( Если (тип Цен прих накладной = тупу цен Базовой цены ) и он изменился  ИзмененаПриходнаяЦена = 1 ) пересчитываем связанные элементы 23.04.14
			Если ИзмененаПриходнаяЦена = 1 Тогда
				Если ТМЦ.АвтоИзменениеЦен.Получить(ДатаДок) = 1 Тогда //--- УМК Сандомирский В.Ю, --- (схемы ценообразования 18.03.14)
					ПересчитатьЦеныПоСхемамЦенообразования(ТМЦ,ЦенаСНДС / Коэффициент);
				КонецЕсли;
				
				//Если ТМЦ.АвтоРасчетСвязанныхЭлементов.Получить(ДатаДок) = 1 Тогда 				//--- Флаг расчета связанных элементов в контексте производственнной базы запускает переоценку СвязаныеЭлементыЦенообразования					
				//	К_Цен = Константа.УМК_ЦенаБазыПересчетаКур; //--- УМК Сандомирский В.Ю. (19.08.14) базовые цены кур
				//	
				//	СпрСвязаныеЭлементыЦенообразования.ИспользоватьВладельца(ТМЦ);
				//	СпрСвязаныеЭлементыЦенообразования.ВыбратьЭлементы();
				//	Пока СпрСвязаныеЭлементыЦенообразования.ПолучитьЭлемент() = 1 Цикл
				//		СвязаныйТМЦ  = СпрСвязаныеЭлементыЦенообразования.СвязаныйТМЦ;
				//				
				//		Если СвязаныйТМЦ.БазоваяКатегорияЦены.Получить(ДатаДок) <> К_Цен Тогда
				//			УстановитьРеквизитСправочника(СвязаныйТМЦ.ТекущийЭлемент(), "БазоваяКатегорияЦены", К_Цен, ДатаДок); //--- Записываем в базовую категорию цен если заранее не поменяли
				//		КонецЕсли;
				//		
				//		СвязаныйКоэф = СпрСвязаныеЭлементыЦенообразования.Коэффициент;
				//		СпрЦены.ИспользоватьВладельца(СвязаныйТМЦ);
				//		
				//		БазоваяЦенаСвязанногоЭлемента = ЦенаСНДС/Коэффициент * СвязаныйКоэф;
				//		
				//		Если СпрЦены.НайтиПоРеквизиту("КатегорияЦены", К_Цен, 0) = 0 Тогда
				//			СпрЦены.Новый();
				//			СпрЦены.Наименование = Строка(К_Цен);
				//			СпрЦены.Владелец = СвязаныйТМЦ;
				//			СпрЦены.КатегорияЦены = К_Цен;
				//			СпрЦены.СхемаЦенообразования = К_Цен.БазоваяСхемаЦенообразования;
				//			СпрЦены.Единица = глВернутьБазовуюЕдиницуТовара(СвязаныйТМЦ);
				//			СпрЦены.Записать();
				//			
				//			УстановитьРеквизитСправочника(СпрЦены.ТекущийЭлемент(), "Валюта", Валюта, ДатаДок);
				//			УстановитьРеквизитСправочника(СпрЦены.ТекущийЭлемент(), "Цена", БазоваяЦенаСвязанногоЭлемента, ДатаДок);
				//			
				//			Если глСписокИсключенийРассылки.НайтиЗначение(глДайПапу(ТМЦ).Код) = 0 Тогда //--- УМК Сандомирский В.Ю, (22.08.14) --- Если нет в исключении 
				//				ТекстПисьма =   ТекстПисьма + "" + ПравильныйСимволПереноса  
				//					+" Создана " + Строка(К_Цен) + " связанного элемента " + СвязаныйТМЦ.Код + " " + СокрЛП(СвязаныйТМЦ.Наименование) 
				//					+ Формат(БазоваяЦенаСвязанногоЭлемента,"Ч15.5") + " " + ПравильныйСимволПереноса ;
				//			КонецЕсли;
				//				
				//			Сообщить(" Создана " + Строка(К_Цен) + " связанного элемента " + СвязаныйТМЦ.Код + " " + СокрЛП(СвязаныйТМЦ.Наименование) 
				//						+ Формат(БазоваяЦенаСвязанногоЭлемента,"Ч15.5") );		
				//				
				//			ПересчитатьЦеныПоСхемамЦенообразования(СвязаныйТМЦ,БазоваяЦенаСвязанногоЭлемента);
				//											
				//		Иначе
				//			Вал = СпрЦены.Валюта;
				//			Если (Вал <> Валюта) Тогда
				//				УстановитьРеквизитСправочника(СпрЦены.ТекущийЭлемент(), "Валюта", Валюта, ДатаДок);
				//			КонецЕсли;
				//
				//			ТекЦена = СпрЦены.Цена;
				//			Если Окр(БазоваяЦенаСвязанногоЭлемента, 2) <> ТекЦена Тогда			
				//				УстановитьРеквизитСправочника(СпрЦены.ТекущийЭлемент(), "Цена", БазоваяЦенаСвязанногоЭлемента, ДатаДок);
				//				
				//				Если глСписокИсключенийРассылки.НайтиЗначение(глДайПапу(ТМЦ).Код) = 0 Тогда //--- УМК Сандомирский В.Ю, (22.08.14) --- Если нет в исключении 
				//					ТекстПисьма =  ТекстПисьма + "" + ПравильныйСимволПереноса   
				//					+ " Изменена " + Строка(К_Цен) + " связанного элемента " + СвязаныйТМЦ.Код + " " + СокрЛП(СвязаныйТМЦ.Наименование) 
				//					+ " С "+ Формат(ТекЦена,"Ч15.5") + " на "  + Формат(БазоваяЦенаСвязанногоЭлемента,"Ч15.5") + " " + ПравильныйСимволПереноса ;
				//				КонецЕсли;
				//				
				//				Сообщить(" Изменена " + Строка(К_Цен) + " связанного элемента " + СвязаныйТМЦ.Код + " " + СокрЛП(СвязаныйТМЦ.Наименование) 
				//						+ " С "+ Формат(ТекЦена,"Ч15.5") + " на "  + Формат(БазоваяЦенаСвязанногоЭлемента,"Ч15.5") );
				//				ПересчитатьЦеныПоСхемамЦенообразования(СвязаныйТМЦ,БазоваяЦенаСвязанногоЭлемента);								
				//			КонецЕсли;
				//		КонецЕсли;										
				//	КонецЦикла;									
				//КонецЕсли;						
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;
	ЗафиксироватьТранзакцию();	

	ТекстПисьмаОкончательный = "" + ПравильныйСимволПереноса + ПравильныйСимволПереноса 
		+ " Приходная накладная : " + СокрЛП(Строка(ТекущийДокумент()))  + ПравильныйСимволПереноса + ПравильныйСимволПереноса	
		+ " Дата документа : " + ДатаДок  + ПравильныйСимволПереноса
		+ " Контрагент : " + Контрагент  + ПравильныйСимволПереноса
		+ " Сумма накладной : " + Формат(Итог("СуммаСНДС"),"Ч15.2") + ПравильныйСимволПереноса + ПравильныйСимволПереноса					
		+ " Пользователь :" + Строка(глПользователь);	
	ТемаПисьма = "Уведомление : Изменение закупочной цены ";
	
	ТЗАдресов.ВыбратьСтроки();
	Пока ТЗАдресов.ПолучитьСтроку() = 1 Цикл
		Если ТЗАдресов.ТекстСообщения <> "" Тогда
			ТекстПисьмаОк = ТекстПисьмаОкончательный + ПравильныйСимволПереноса + ПравильныйСимволПереноса + ТЗАдресов.ТекстСообщения;
			глОтправитьУведомлениеЭП("Справочник.Цены", ТемаПисьма , ТекстПисьмаОк, ТЗАдресов.Адрес);
			
			//Сообщить(ТЗАдресов.Адрес + " // " + ТЗАдресов.ТекстСообщения);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьСписание()
	ТЗСп = СоздатьОбъект("ТаблицаЗначений");
	Если ДатаДок < '21.12.2010' Тогда
		ТЗСп.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
		ТЗСп.НоваяКолонка("Склад", "Справочник.МестаХранения");
		ТЗСп.НоваяКолонка("КвоСписания", "Число", 15, 3);
		ТЗСп.НоваяКолонка("ДатаСписания", "Дата");
		ТЗСп.НоваяКолонка("ДопКвоСписания", "Число", 15, 3);
		ТЗСп.НоваяКолонка("Коэффициент", "Число", 15, 3);
		ТЗСп.НоваяКолонка("Ед", "Справочник.Единицы");
		ТЗСп.НоваяКолонка("", "Справочник.Единицы");
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ПроцСпис = ТМЦ.ПроцСписания.Получить(ДатаДок);
			Если ПроцСпис <> 0 Тогда
			    ТЗСп.НоваяСтрока();
				ТЗСп.ТМЦ = ТМЦ;
				ТЗСп.Ед = Ед;
				ТЗСп.Коэффициент = Коэффициент;
				ТЗСп.ДопКвоСписания = ДопКво * (ПроцСпис / 100);
				ТЗСп.КвоСписания = Кво * (ПроцСпис / 100);
				ТЗСп.ДатаСписания = ДатаДок;
			КонецЕсли;
		КонецЦикла;
		
		Если ТЗСп.КоличествоСтрок() = 0 Тогда
		    Возврат;
		КонецЕсли;	    
	Иначе
		ВыгрузитьТабличнуюЧасть(ТЗСп, "ТМЦ,Склад,КвоСписания,ДопКвоСписания,Коэффициент,Ед");
		ТЗСп.НоваяКолонка("ДатаСписания", "Дата");
		ТЗСп.НоваяКолонка("МестоХранения", "Справочник.МестаХранения");
		
		ТЗСп.ВыбратьСтроки();
		Пока ТЗСп.ПолучитьСтроку() = 1 Цикл
			ТЗСп.ДатаСписания = ДатаДок;
			ТЗСп.МестоХранения = ?(ПустоеЗначение(ТЗСп.Склад) = 1, МестоХранения, Склад);
		КонецЦикла;
		
		ТЗСп.Свернуть("ТМЦ,Коэффициент,Ед,ДатаСписания,МестоХранения,Склад", "КвоСписания,ДопКвоСписания");
	КонецЕсли;
	
	глСформироватьСписаниеПоДатам(ТекущийДокумент(), ТЗСп, Константа.БазПодразделениеПроизводство, 1);
КонецПроцедуры

Процедура ЗакрытьЗаказы()
	ТЗЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗЗ,"Заказ,ТМЦ,ТМЦСтало,Кво,Коэффициент");
	ТЗЗ.ВыбратьСтроки();
	Пока ТЗЗ.ПолучитьСтроку() = 1 Цикл
		Если ИзПереработки = 1 Тогда
			ТЗЗ.ТМЦ = ТЗЗ.ТМЦСтало;
		КонецЕсли;
		ТЗЗ.Кво = ТЗЗ.Кво * ТЗЗ.Коэффициент;
	КонецЦикла;
	ЕстьЗаказы = 0;
	
	ТЗЗ.ВыбратьСтроки();
	Пока ТЗЗ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗЗ.Заказ) = 1 Тогда
			ТЗЗ.Заказ = ?(ДокументОснование.Вид() = "ЗаказПоставщику", ДокументОснование, "");
		КонецЕсли;
		Если ПустоеЗначение(ТЗЗ.Заказ) = 0 Тогда
			ЕстьЗаказы = 1;
		КонецЕсли;
	КонецЦикла;
	
	МинДата = СформироватьПозициюДокумента(ТекущийДокумент());
	МинДок = ТекущийДокумент();
	МинДатаЗаказа = ДатаДок;
	ТЗЗ.ВыбратьСтроки();
	Пока ТЗЗ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗЗ.Заказ) = 0 Тогда
			Если ТЗЗ.Заказ.ДатаДок = МинДатаЗаказа Тогда
				Ч = 0; М = 0; С = 0;
				ТЗЗ.Заказ.ПолучитьВремя(Ч,М,С);
				ВремяЗ = Ч * 3600 + М * 60 + С;
				Ч = 0; М = 0; С = 0;
				МинДок.ПолучитьВремя(Ч,М,С);
				ВремяМин = Ч * 3600 + М * 60 + С;
				Если ВремяЗ > ВремяМин Тогда
					МинДата = СформироватьПозициюДокумента(ТЗЗ.Заказ, 1);
					МинДатаЗаказа = ТЗЗ.Заказ.ДатаДок;
					МинДок = ТЗЗ.Заказ;				    
				КонецЕсли;
			ИначеЕсли ТЗЗ.Заказ.ДатаДок > МинДатаЗаказа Тогда
				МинДата = СформироватьПозициюДокумента(ТЗЗ.Заказ, 1);
				МинДатаЗаказа = ТЗЗ.Заказ.ДатаДок;
				МинДок = ТЗЗ.Заказ;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьЗаказы = 1 Тогда
		СписТМЦ = СоздатьОбъект("СписокЗначений");
		списЗаказов = СоздатьОбъект("СписокЗначений");
		
		ТЗЗ.Выгрузить(СписТМЦ,,, "ТМЦ");
		ТЗЗ.Выгрузить(списЗаказов,,, "Заказ");
	
		Ит = СоздатьОбъект("БухгалтерскиеИтоги");
		Ит.ИспользоватьСубконто(ВидыСубконто.ЗаказыПоставщикам, списЗаказов, 2);
		Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ, СписТМЦ, 2);
		
		Ит.Опции(1);
		Ит.ВыполнитьЗапрос(, МинДата, "ЗП");
		
		ТЗЗ.Свернуть("ТМЦ,Заказ", "Кво");
		ТЗЗ.ВыбратьСтроки();
		Пока ТЗЗ.ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ТЗЗ.Заказ) = 0 Тогда
			    СписываемоеКво = 0;
				Если Ит.ПолучитьСубконто(1, 1, ТЗЗ.Заказ) = 1 Тогда
					Если Ит.ПолучитьСубконто(2, 1, ТЗЗ.ТМЦ) = 1 Тогда
					    СписываемоеКво = Мин(Ит.СКД("К"), ТЗЗ.Кво);
					КонецЕсли;				    
				КонецЕсли;
				
				Если СписываемоеКво > 0 Тогда
					глПроводка(Контекст, ,"ЗП",,,СписываемоеКво,,,,Контрагент, ТЗЗ.Заказ, ТЗЗ.ТМЦ,,,"ЗП");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14) пока не используем
Процедура СформироватьТранспортныеРасходы()
	
	//ТекТранспортныеРасходы = ТранспортныеРасходы;
	//
	//ВыбратьСтроки();
	//
	//Пока ПолучитьСтроку()=1 Цикл
	//		
	//	МетодРасчетаСебестоимости=глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок);
	//	Если (МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему)
	//		И    (ДавальческоеСырье = 0) // дав. сырье - всегда по партиям
	//		Тогда
	//		ПоставщикП = 0;
	//		ПоставкаП = 0;
	//		ПрихДокументП = 0;
	//	Иначе
	//		ПоставщикП = Контрагент;
	//		ПоставкаП = ТекущийДокумент();
	//		ПрихДокументП = ТекущийДокумент();
	//	КонецЕсли;
	//	ТМПЦПрих = ?(ПустоеЗначение(ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляПрихода.Получить(ДатаДок), ТМЦ);
	//	СчетП = ТМЦ.Счет;
	//	
	//	Если ТранспортныеРасходы > 0 Тогда 
	//		Если перРаспределятьТранспортныеРасходы = 1 Тогда
	//			КоэффициентУчастия = СуммаСНДС / Итог("СуммаСНДС");
	//		ИначеЕсли перРаспределятьТранспортныеРасходы = 1 Тогда	
	//			КоэффициентУчастия = Кво / Итог("Кво");
	//		КонецЕсли;
	//		
	//		Если НомерСтроки = КоличествоСтрок() Тогда //--- последня Строка 
	//			ТекТранспорт = ТекТранспортныеРасходы;
	//			ТекТранспортныеРасходы = 0;
	//		Иначе
	//			ТекТранспорт = ТранспортныеРасходы * КоэффициентУчастия;
	//			ТекТранспортныеРасходы = ТекТранспортныеРасходы - ТранспортныеРасходы * КоэффициентУчастия;
	//		КонецЕсли;
	//	КонецЕсли; 	
	//		
	//	глПроводка(Контекст,СчетП,СчетКонтрагента,ТекТранспорт,"Прих:Себестоимость транспорт",, МестоХранения,ТМПЦПрих,ПоставкаП,
	//	Контрагент,Договор,, ,,"ПХ",,"Взаиморасчеты транспорт");
	//
	//КонецЦикла;	
	
	//Если ТранспортныеРасходы > 0 Тогда //--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)
	//	глПогаситьДокументВзаиморасчетов(ТекущийДокумент(), 1, 1, 0, Фирма, Контрагент,
	//	Договор, СтавкаНДСПогашения, Счет, Конт.ТекущийДокумент(), ВалютаПогашения, СуммаСНДС, СуммаСНДСОсн, СуммаНДС, КодОперации,, НеВключаетсяВВДВР, ПриоритетныйКодОперации);
	//КонецЕсли;	
	
КонецПроцедуры // гл


// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);
	
	Если НеФормироватьДвижения = 1 Тогда // Только запишем цены
		ЗаписатьЦены();
		Возврат;
	КонецЕсли;
	
	Если ПроверкаШапки()=0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	РассчитатьШапку();
	Если (ДавальческоеСырье <> 1) Тогда
		Если ДвиженияВзаиморасчеты()=0 Тогда
			глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	Иначе //--- УМК Сандомирский В.Ю, без этого не проводился документ с галочкой давальческое  (20.05.14)  
		ВремРег = СоздатьОбъект("Регистры");	
	КонецЕсли;	

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки()=0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
		Если РассчитатьСтроку() = 0 Тогда
		    глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;
	КонецЦикла;

	Если СтатусВозврата() = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			ПоследнийПост = ТМЦ.ПоследнийПоставщик.Получить(ДатаДок);
			Если ПоследнийПост <> Контрагент Тогда
				УстановитьРеквизитСправочника(ТМЦ, "ПоследнийПоставщик", Контрагент);
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	
	Если ИзПереработки = 1 Тогда
		ДвиженияПартииИзПереработки();
	Иначе
		ДвиженияПартии();
	КонецЕсли;
	
	ЗакрытьЗаказы();
	Если ДавальческоеСырье <> 1 Тогда
		глЗаписатьПроводкиВОперацию(Контекст);  
	Иначе
		глТбОперация.УдалитьСтроки();
	КонецЕсли;	
	ЗаписатьЦены();
	СформироватьСписание();
	
	СформироватьТранспортныеРасходы(); //--- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)	
	
	Операция.СуммаОперации = Итог("СуммаСНДС");
	Операция.Содержание = Примечание;
	
	//Если ( Итог("СуммаБезНДС") = 0 ) И ( Итог("СуммаСНДС") = 0 ) Тогда // --- УМК Сандомирский В.Ю, Транспортные расходы (09.06.14)
	//	
	//Иначе
		Операция.Записать();
	//КонецЕсли;
	
		
	глКомментарий("Окончание",2,Контекст);
	
КонецПроцедуры
