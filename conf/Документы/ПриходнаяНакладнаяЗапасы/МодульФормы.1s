Перем СтараяДата;  
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем Валюта_Прежн, Курс_Прежн;
Перем НачальнаяДатаДокумента;
Перем СписокДействий;    
Перем РегП;
Перем СтруктИзменений;
Перем НДС20;

Перем ПечПродавецИзДоговора; 	//--- УМК Сандомирский В.Ю, (11.12.14)
Перем тзОстаткиДав;				//--- УМК Сандомирский В.Ю, (25.12.14)

Процедура ИзмЦенаОтНДС() Далее
//======================================================================
Процедура ИзмТМЦ() Далее
Процедура ВычЦенаОтНДС() Далее

//======================================================================
Процедура УстановитьСкладПоПервойСтроке()
    Если ПустоеЗначение(ТМЦ.НГруппа) = 0 Тогда
		Если ПустоеЗначение(ТМЦ.НГруппа.МХ) = 0 Тогда
			МестоХранения = ТМЦ.НГруппа.МХ;
		Иначе
			МестоХранения = Фирма.СкладМатериалов;
		КонецЕсли;
	//Иначе
	//	МестоХранения = Фирма.СкладМатериалов;
    КонецЕсли;	
КонецПроцедуры // УстановитьСкладПоПервойСтроке()

// ===============================
Процедура ИзмЧерезПодотчетноеЛицо()
    Если ЧерезПодотчетноеЛицо = 1 Тогда
    	СуммаПодотчета = ?(СуммаПодотчета>0,СуммаПодотчета,Итог("СуммаСНДС"));
    Иначе
    	СуммаПодотчета = 0;
    КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмВидПоставщика()
	СчетКонтрагента = спВидПоставщика.ПолучитьЗначение(спВидПоставщика.ТекущаяСтрока());
	Если СчетКонтрагента = СчетПоКоду("3721") Тогда
		ЧерезПодотчетноеЛицо = 0;
		ВидТорговли = Перечисление.ВидыТорговли.Предоплата;
		ИзмЧерезПодотчетноеЛицо();
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстВидПоставщика()
	Инд = спВидПоставщика.НайтиЗначение(СчетКонтрагента);
	Если Инд<>0 Тогда
	    спВидПоставщика.ТекущаяСтрока(Инд);
	Иначе
		спВидПоставщика.ТекущаяСтрока(1);
	КонецЕсли;
КонецПроцедуры

Процедура ИзмИзПереработки()
	Форма.ТМЦСтало.Видимость(ИзПереработки);
	Форма.Себестоимость.Видимость(ИзПереработки);
	Форма.тОстатокДав.Видимость(ИзПереработки);
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	НачальнаяДатаДокумента = ДатаДок;
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		Если глГруппыДоступаКонтрагенты.Принадлежит(Контрагент) = 0 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// закладки    
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Если ДавальческоеСырье = 0 Тогда
		Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительные");
	КонецЕсли;
	Форма.ИспользоватьСлой("Общий,Основной",2);
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	
	ИзмИзПереработки();
	// в документе нельзя выбирать валюту отличную от гривни, но кнопку выбора оставим ... для единообразия
	Форма.кВалюта.Доступность(0);
	                
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
//		Форма.кДействия.Доступность(0);
		СписокДействий = глПолучитьСписокДействий("
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");	    
		
		Форма.кПодбор.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.кОсн.Доступность(0);
		Форма.кВалюта.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	
	// внешний вид
	спВидПоставщика.ДобавитьЗначение(СчетПоКоду("631"),"Поставщик");
	спВидПоставщика.ДобавитьЗначение(СчетПоКоду("634"),"Поставщик от подотчетников");
	спВидПоставщика.ДобавитьЗначение(СчетПоКоду("3721"),"Подотчетное лицо");
	УстВидПоставщика();
	
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;   
	СтараяДата = ДатаДок;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	глУстВидимостьЦен(Контекст);
	
	Форма.ВидТары.ВыполнятьФормулуТолькоПриИзменении(1);	
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если (ТМЦ = Форма.Параметр) или (ТМЦ.ТМЦДляПрихода.Получить(ДатаДок) = Форма.Параметр) Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений);	
	
	//--- УМК Сандомирский В.Ю, получаю НДС 20 потом надо будет (22.05.14)
	СпрНДС20 = СоздатьОбъект("Справочник.ШкалаСтавок");
	СпрНДС20.НайтиПоКоду("НДС20");
	НДС20 = СпрНДС20.Ставка.Получить(ДатаДок);
	
	//--- УМК Сандомирский В.Ю, ---------------------------- 06.06.14
	Если перРаспределятьТранспортныеРасходы = 1 Тогда
		РаспределятьТранспортныеРасходы1 = 1	
	ИначеЕсли перРаспределятьТранспортныеРасходы = 2 Тогда
		РаспределятьТранспортныеРасходы1 = 2	
	КонецЕсли;
	
	тзОстаткиДав = СоздатьОбъект("ТаблицаЗначений");
	тзОстаткиДав.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	тзОстаткиДав.НоваяКолонка("Остататок","Число",14,2);
	
	Если НазваниеНабораПрав() = "Склады" Тогда
		Форма.ЦенаБезНДС.Видимость(0);
		Форма.ЦенаОтНДС.Видимость(0);
		Форма.ЦенаСНДС.Видимость(0);
		Форма.СуммаОтНДС.Видимость(0);
		Форма.СуммаСНДС.Видимость(0);
		Форма.СуммаБезНДС.Видимость(0);
		Форма.НДС.Видимость(0);
		Форма.тИтого1.Видимость(0);
		Форма.тИтогоНДС.Видимость(0);
		Форма.тИтого.Видимость(0);
		Форма.тТранспортные.Видимость(0);
		Форма.кПечать.Доступность(0);
	КонецЕсли;
	Если НазваниеНабораПрав() = "ПроизводствоПросмотрТабель" Тогда
		Для Инд = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл
			Попытка
				Форма.ПолучитьАтрибут(Метаданные.ОбщийРеквизитДокумента(Инд).Идентификатор).Доступность(0);
			Исключение
			КонецПопытки;
		КонецЦикла;
		Для Инд = 1 По Метаданные.Документ("ПриходнаяНакладнаяЗапасы").РеквизитШапки() Цикл
			Попытка
				Форма.ПолучитьАтрибут(Метаданные.Документ("ПриходнаяНакладнаяЗапасы").РеквизитШапки(Инд).Идентификатор).Доступность(0);
			Исключение
			КонецПопытки;			
		КонецЦикла;
		СписДоступныхРекв = "ПроцСписания,КвоСписания,";
		Для Инд = 1 По Метаданные.Документ("ПриходнаяНакладнаяЗапасы").РеквизитТабличнойЧасти() Цикл
			Атр = Метаданные.Документ("ПриходнаяНакладнаяЗапасы").РеквизитТабличнойЧасти(Инд).Идентификатор;
			Если Найти(СписДоступныхРекв, Атр + ",") = 0 Тогда
				Попытка
					Форма.ПолучитьАтрибут(Атр).Доступность(0);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;		
		Форма.спВидПоставщика.Доступность(0);
		Форма.НомерДок.Доступность(0);
		Форма.ДатаДок.Доступность(0);
	КонецЕсли;
	
	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "Розница") Тогда
		Форма.Проверено.Доступность(0);
	КонецЕсли;
	
	Если Фирма = Константа.БазФирма Тогда
		Форма.НеФормироватьДвижения.Доступность(0);
	Иначе
		Форма.НеФормироватьДвижения.Доступность(1);
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	ОтображаемыеСлои = "Общий," + Значение;           
	//Табличную часть будем показывать только в слоях Основной и Дополнительный
	Форма.ИспользоватьСлой(ОтображаемыеСлои,2);
КонецПроцедуры

// ===============================
Функция УстДоступность()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	НазначитьВид(Контрагент,СчетКонтрагента.ВидСубконто(1));
	Форма.Контрагент.НеИзменятьВид(1);
	// доступность в зависимости от слоя                                   
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		ДостКасса = 1;
	Иначе
		ДостКасса = 0;
	КонецЕсли;

	Если СчетКонтрагента = СчетПоКоду("3721") Тогда
		Форма.тВидТорговли.Доступность(0);
		Форма.ВидТорговли.Доступность(0);
    Иначе
		Если ДавальческоеСырье = 1 Тогда
			Форма.тВидТорговли.Доступность(0);
			Форма.ВидТорговли.Доступность(0);
		Иначе	
			Форма.тВидТорговли.Доступность(1);
			Форма.ВидТорговли.Доступность(1);
		КонецЕсли;	
    КонецЕсли;

	Если ДавальческоеСырье = 1 Тогда
		Форма.тВидТары.Доступность(0);
		Форма.ВидТары.Доступность(0);
	Иначе	
		Форма.тВидТары.Доступность(1);
		Форма.ВидТары.Доступность(1);
	КонецЕсли;	
	
	Если Закл = "Дополнительный" Тогда
		// слой Дополнительный
		Если ((ВидТорговли = Перечисление.ВидыТорговли.Бартер)
		ИЛИ (ДавальческоеСырье = 1)) Тогда
			// для бартера запретим относить НДС на себестоимость
			// нет точной схемы проводок для этого случая
		    Форма.НДСнаЗатраты.Доступность(0);
		Иначе
			Форма.НДСнаЗатраты.Доступность(1);
		КонецЕсли;
		Если (спВидПоставщика.ТекущаяСтрока()>1) Или (ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
			// не доступно для валютного приходования 
			// для приходования за нал не имеет смысла
			Форма.ЧерезПодотчетноеЛицо.Доступность(0);
		Иначе	
			Форма.ЧерезПодотчетноеЛицо.Доступность(1);
		КонецЕсли;	                                   	
		Если ДавальческоеСырье <> 1 Тогда
			Форма.СуммаПодотчета.Видимость(ЧерезПодотчетноеЛицо);
			Форма.ПодотчетноеЛицо.Видимость(ЧерезПодотчетноеЛицо);
			Форма.лПодотчетноеЛицо.Видимость(ЧерезПодотчетноеЛицо);
		КонецЕсли;	
		
	ИначеЕсли Закл = "Основной" Тогда
		фВидимостьКредит = ?(ВидТорговли = Перечисление.ВидыТорговли.Кредит,1,0);
		Форма.тДатаОплаты.Видимость(фВидимостьКредит);
		Форма.тГлубина.Видимость(фВидимостьКредит);
		Форма.Глубина.Видимость(фВидимостьКредит);
		Если СчетКонтрагента.ВидСубконто(1) = ВидыСубконто.Сотрудники Тогда
	    	Форма.ИнфКнопка.Доступность(0);
		Иначе     
	    	Форма.ИнфКнопка.Доступность(1);
		КонецЕсли;	
	КонецЕсли;
	
	Форма.Заголовок(глЗаголовок(Контекст,"Приходная накладная (запасы)"));
	// для всех слоев
	Если (ВидТорговли = Перечисление.ВидыТорговли.Бартер) и (НДСнаЗатраты = 1) Тогда
		НДСнаЗатраты = 0;
	КонецЕсли;
	Форма.ДопКво.Доступность(ТМЦ.УчетДопКво);
	
	Если НазваниеНабораПрав() <> "Склады" Тогда
		Форма.ЦенаОтНДС.Видимость(фОтЦенБезНДС); 	//--- УМК Сандомирский В.Ю, (01.04.14) считаем от цен без НДС
		Форма.ЦенаБезНДС.Видимость(1-фОтЦенБезНДС); //--- УМК Сандомирский В.Ю, (01.04.14) считаем от цен без НДС
		Форма.СуммаОтНДС.Видимость(фОтЦенБезНДС); 	//--- УМК Сандомирский В.Ю, (01.04.14) считаем от цен без НДС
	КонецЕсли;
		
	Если (глПользователь.фПривелегииДатаЗапрета = 1) И  (Выбран() = 1) Тогда  //--- УМК Сандомирский В.Ю. (13.08.14)  возможно менять договор привелегированым
		Форма.кОсн.Доступность(1);
		Форма.кОК.Доступность(1);
	КонецЕсли;
	
	Если ПустоеЗначение(Договор) <> 1 Тогда
		ПечПродавецИзДоговора = Договор.Продавец.Наименование; //--- УМК Сандомирский В.Ю, (11.12.14)
	КонецЕсли;
		
	Возврат "";
КонецФункции  
                  
// ===============================
Процедура ИзмСчетКонтрагента()
	Если ПустоеЗначение(СчетКонтрагента) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбранный счет не является счетом учета взаиморасчетов!",1,,"!");
		СчетКонтрагента = 0;  
	ИначеЕсли СчетКонтрагента.Валютный = 1 Тогда
		глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
		СчетКонтрагента = 0;       
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	ИзмСчетКонтрагента();
КонецПроцедуры	
                   
// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		//Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = ТМЦ.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		//КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		ЦенаСНДС = НоваяЦена;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;
КонецПроцедуры //ПересчетСтроки

Процедура ПерезаполнитьЦеныДокумента(Перезаполнять = "Да", ЗадатьВопрос = 0) 
	
	Если ЗадатьВопрос = 1 Тогда
		Перезаполнять = Вопрос("Перезаполнить цены заново?","Да+Нет");
	КонецЕсли;

	Если Перезаполнять = "Да" Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			// изменим цены
			ЦенаТовара = глВернутьЦену(ТМЦ, КатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
				// получим параметры цены
				ЦенаТовара.ИспользоватьДату(ДатаДок);
				ЦенаЦены   = ЦенаТовара.Цена;
				ВалютаЦены = ЦенаТовара.Валюта;
				ЕдЦены	   = ЦенаТовара.Единица;
				ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
				ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
				ПересчетСтроки(ЦенаЦены);                                                   
			Иначе
				ПересчетСтроки();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры
// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
// ===============================
Процедура ИзмРеквизитШапки(Реквизит)
	// пересчитаем суммы НДС в строках табличной части
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	текОтвет = Вопрос("В документе изменен реквизит """+Реквизит+""". Перезаполнить цены заново?","Да+Нет");
	ПерезаполнитьЦеныДокумента(текОтвет);
	
	Если Реквизит = "ВидНДС" Тогда
		ПересчетСтроки();
	КонецЕсли;
	
КонецПроцедуры 
             
// ===============================
Процедура ИзмВидТары()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("В документе изменен вид тары! Пересчитать суммы ?","Да+Нет") = "Да" Тогда
			текОсновнаяЦена = Константа.ОсновнаяЦена;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл    
				Если ПустоеЗначение(ТМЦ) = 1 Тогда
					Продолжить;
				ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					ПересчетСтроки();
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;
	Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
		ДатаОплаты=ДатаДок + Глубина;	
	Иначе	
		ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстГлубина() 
	// Формирует и показывает дату оплаты и глубину кредита
	Если ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
		Глубина=0;
	Иначе	
		Если ПустоЕзначение(Контрагент) = 0 Тогда
			Если Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) <> 0 тогда
				Если Глубина <> Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) тогда
					Глубина=Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
				КонецЕсли;	
			КонецЕсли;	
			ИзмГлубина();
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры //Выбор Глубины

// ===============================
Процедура ИзмВидТорговли()
	УстГлубина();
КонецПроцедуры         

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ИзмГлубина();
КонецПроцедуры

// ===============================
Процедура ИзмДоговор()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			// вид торговли и валюта есть только в договоре
			Если Договор.Валюта <> Гривня Тогда
				Предупреждение("Нельзя выбирать договор с валютой "+Договор.Валюта+" в качестве договора для документа " + Вид()+".");
				Договор = 0;
				Возврат;
			КонецЕсли;				
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			Если Валюта <> Валюта_Прежн Тогда
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
				КонецЕсли;
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;				
			ВидНДС = Договор.ВидНДС;
			ИзмРеквизитШапки("ВидНДС");
		КонецЕсли;
	КонецЕсли;    
КонецПроцедуры

// ===============================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран()=1 Тогда
		Если Контрагент.Вид()="Контрагенты" Тогда
			Дог = глУстановитьДоговорПоСкладу(Контекст);
			СчетРасчетов = Контрагент.СчетРасчетовБУ.Получить(ДатаДок);
			СчетКонтрагента = ?(ПустоеЗначение(СчетРасчетов)=0,СчетРасчетов, СчетКонтрагента);
			Если ПустоеЗначение(Дог) = 0 Тогда
				Договор = Дог;
				ИзмДоговор();
			КонецЕсли;
			Если Договор.Выбран() = 1 Тогда
			    Если Договор.Контрагент <> Контрагент Тогда
					Договор = 0;
			    КонецЕсли;
			КонецЕсли;
			Если (Константа.ПодставлятьОсновнойДоговор = Да) 
			И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
			И (ПустоеЗначение(Договор)=1) Тогда
				Если Фирма = Контрагент.БазДоговор.Фирма Тогда
					// подставляем БазДоговор в зависимоти от константы
					Договор = Контрагент.БазДоговор;
					ИзмДоговор();					
				КонецЕсли;
			КонецЕсли;
			Если Договор.Выбран() = 1 Тогда               
				Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
					Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
						ВидТорговли = Договор.ВидТорговли;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;	
			Если (ПустоеЗначение(Контрагент.ВидТорговли) = 0)
			И (ПустоеЗначение(ВидТорговли) = 1) Тогда
				Если Контрагент.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
				    ВидТорговли = Контрагент.ВидТорговли;      
				Иначе	
					ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
				КонецЕсли;
			ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;    
			КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
			Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
				КатегорияЦен = Константа.ЗакупЦена;
			КонецЕсли;
			УстГлубина();
			Если ПустоеЗначение(ДокументОснование) = 0 Тогда
				Попытка
					Если ДокументОснование.Контрагент <> Контрагент Тогда
						ДокументОснование = 0;
					КонецЕсли;						
				Исключение КонецПопытки;
			КонецЕсли;	
	    Иначе
			ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			Договор = 0;
			ДокументОснование = 0;
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмДавальческоеСырье()
	НомерПозиции = Форма.Закладки.НайтиЗначение("Дополнительный");
	Если ДавальческоеСырье = 1 Тогда
		ВидТары = Перечисление.ВидыТары.Покупная;
		Если НомерПозиции <> 0 Тогда
			Форма.Закладки.УдалитьЗначение(НомерПозиции);		
		КонецЕсли;
		ВидТорговли = Перечисление.ВидыТорговли.Предоплата;
	Иначе
		Если НомерПозиции = 0 Тогда
			Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительные");
		КонецЕсли;	
	КонецЕсли;	                      
	
КонецПроцедуры	

// ===============================
Процедура ЗаполнитьПоУмолчанию()
	// заполняем все то, что общее для ввода нового и для ввода на основании
	СчетКонтрагента = СчетПоКоду("631");
	УстВидПоставщика();
	//ВидНДС = глВосстановитьЗначение(,"БазНДС");
	ВидНДС = БезНДС;
	СубконтоВалРасх = глВосстановитьЗначение(Контекст,"СубконтоВалРасх", Константа.БазВаловыйРасход);
	ВидТары = Перечисление.ВидыТары.Покупная;
	УстГлубина();
	перРаспределятьТранспортныеРасходы = 1;
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

// ===============================
Функция ИзмСуммаПодотчета(Интерактивно=1)
	Если СуммаПодотчета > Окр(Итог("СуммаСНДС"), 2) Тогда
		глКомментарий("Сумма погашения подотчета не должна превышать сумму накладной",0,,"!");
		Если Интерактивно = 1 Тогда
			СуммаПодотчета = Итог("СуммаСНДС");
		КонецЕсли;
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Закупка");
КонецПроцедуры
                          
// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
	    КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	Если ТипЗначенияСтр(Выб) = "ТаблицаЗначений" Тогда
		Если Выб.ПолучитьПараметрыКолонки(2) = "Наименование" Тогда
			Если ВидНДС = БезНДС Тогда
				фОтЦенБезНДС = 1;
			КонецЕсли;
			Выб.ВыбратьСтроки();
			Пока Выб.ПолучитьСтроку() = 1 Цикл
				НоваяСтрока();
				ТМЦ = Выб.ТМЦ;
				Путь = Выб.Путь;
				ИзмТМЦ();
				Кво = Выб.Кво;
				Если Выб.ЦенаБезНДС = 1 Тогда
					Если (ВидНДС = БезНДС) И (фОтЦенБезНДС = 1) Тогда
						ЦенаОтНДС = Выб.Цена;
						ИзмЦенаОтНДС();
					Иначе
						ЦенаБезНДС = Выб.Цена;
						глВыч_Суммы_Накл(Контекст, -1);
					КонецЕсли;					
				Иначе
					ЦенаСНДС = Выб.Цена;
					глВыч_Суммы_Накл(Контекст, 1);
				КонецЕсли;
				ВычЦенаОтНДС();
			КонецЦикла;			
		Иначе
			НужноУстСклад = 0;
			Если КоличествоСтрок() = 0 Тогда
			    НужноУстСклад = 1;
			КонецЕсли;
			глПриОбработкеПодбора(Выб,Контекст);
			Если (КоличествоСтрок() > 0) И (НужноУстСклад = 1) Тогда
				ПолучитьСтрокуПоНомеру(1);
				УстановитьСкладПоПервойСтроке();
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //Обработка подбора

// ===============================
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да,"_Укр","");
	Таб.ИсходнаяТаблица("Таблица"+СуффиксТаблицы);

	ПечФорма = "Накладная";
	Язык = глЯзык(ПечФорма); 	
	глУстПропись(Валюта,Язык);
	ПечОснование=глСтрокаОснование(Контекст,Договор,ДокументОснование);	
	Таб.ВывестиСекцию("Шапка1");
	Таб.ВывестиСекцию("Шапка2");
	Ном = 1;                
	фЕстьТара = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если (ВидТары <> Перечисление.ВидыТары.Покупная) и (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
			фЕстьТара = 1;
		    Продолжить;
		КонецЕсли;
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;  
	// печать тары	
	ИтСуммаТарыБезНДС = 0;
	ИтСуммаТарыНДС = 0;
	ИтСуммаТарыСНДС = 0;
	Если фЕстьТара = 1 Тогда
		Если ВидТары = Перечисление.ВидыТары.Возвратная Тогда
			ЗагТара = ?(Язык="у","Тара зворотна","Тара возвратная");
		ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			ЗагТара = ?(Язык="у","Тара заставна","Тара залоговая");
		КонецЕсли;
		Таб.ВывестиСекцию("ШапкаТара");
	    Ном = 0;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			    Продолжить;
			КонецЕсли;
			ИтСуммаТарыБезНДС = ИтСуммаТарыБезНДС + СуммаБезНДС;
			ИтСуммаТарыНДС = ИтСуммаТарыНДС + НДС;
			ИтСуммаТарыСНДС = ИтСуммаТарыСНДС + СуммаСНДС;
			Ном = Ном + 1;
			Таб.ВывестиСекцию("СтрокаТара");
		КонецЦикла;
		ИтСуммаТарыБезНДС = Окр(ИтСуммаТарыБезНДС,2);
		ИтСуммаТарыНДС = Окр(ИтСуммаТарыНДС,2);
		ИтСуммаТарыСНДС = Окр(ИтСуммаТарыСНДС,2);
		ПечИтСуммаБезНДС = глФРМТ(ИтСуммаТарыБезНДС,Валюта,0);
		ПечИтСуммаНДС = глФРМТ(ИтСуммаТарыНДС,Валюта,0);
		ПечИтСуммаСНДС = глФРМТ(ИтСуммаТарыСНДС,Валюта,0);
		Таб.ВывестиСекцию("ИтогоТара");
	КонецЕсли;
	глУстПропись(Гривня);
	СуммаГрнПрописью = Формат(Итог("СуммаСНДС"),"ЧПДС");
	Таб.ВывестиСекцию("Дно1");
	Таб.ВывестиСекцию("Дно2");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ:Приходная накладная","");
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст,Рекв);
		ФлагСтандОбр = 0;
		//ИзмРеквизитШапки("ВидНДС"); //--- УМК Сандомирский В.Ю, не менять цены при изменении Вида НДС 22.05.14
 	КонецЕсли;
	
	Если Рекв = "Контрагент" Тогда		//--- УМК Сандомирский В.Ю, (александра попросила ей предопределенный сделать)
		Если Контрагент.Вид() = "Контрагенты" Тогда
			СпрКонтрагентыРодитель = глПользователь.РодительКонтрагентовДляПН.Родитель;
	 		Контрагент.ИспользоватьРодителя(СпрКонтрагентыРодитель);		
	 	КонецЕсли;
	КонецЕсли; //... УМК Сандомирский В.Ю,
 	
	Если Рекв = "ТМЦ" Тогда		//--- УМК Сандомирский В.Ю, (александра попросила ей предопределенный сделать)
		СпрТМЦРодитель = глПользователь.РодительТМЦДляПН.Родитель;
 		ТМЦ.ИспользоватьРодителя(СпрТМЦРодитель);		
	КонецЕсли; //... УМК Сандомирский В.Ю,
	
КонецПроцедуры

// ===============================
Процедура ВводНового(Копируем)
	Если Копируем = 1 Тогда
		ВидНДС = БезНДС;
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;
	
	глУстановитьФирму(Контекст);
	
	Контрагент = глВосстановитьЗначение(,"ОсновнойПоставщик");
	ИзмКонтрагент();
	МестоХранения = глВосстановитьЗначение(Контекст,"СкладМатериалов");
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	
	ЗаполнитьПоУмолчанию();
	
КонецПроцедуры
       
// ===============================
Функция ПроверкаОснования(Док)	
	Если глЕстьРеквизитШапки("Валюта",Док.Вид()) = Да Тогда
		Если Док.Валюта <> Гривня Тогда
			Предупреждение("Для приходования за валюту используйте документ ГТД");
			Возврат 0;
		КонецЕсли;	
	КонецЕсли;	                  
                     
	Возврат 1;
КонецФункции

// ===============================
// основание - счет входящий, договор, остатки взаиморасчетов
Процедура ВводНаОсновании(Док)
	Если ПустоеЗначение(Док) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	   
	
	Если ПроверкаОснования(Док) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	 

	РодительскийДокумент = Док;
	ЗаполнитьПоУмолчанию();
	Фирма = Док.Фирма;
	глЗаполнитьШапкуНаОсн(Контекст,Док);	
	глУстановитьНомер(Контекст);
	
	Если Док.Вид() = "ЗаказПоставщику" Тогда
		Контрагент = Док.Поставщик;
		ИзмКонтрагент();
		ВидТорговли = Перечисление.ВидыТорговли.Предоплата;
		Валюта = Гривня;
		СчетКонтрагента = СчетПоКоду("631");
	ИначеЕсли Док.Вид() <> "ЗаказПоставщикуП" Тогда	    
		Контрагент = Док.Контрагент;
		ВидТорговли = Док.ВидТорговли;
		Валюта = Док.Валюта;
		СчетКонтрагента = СчетПоКоду(?(Док.Валюта = Гривня, "631", "632"));
	КонецЕсли;
	
	Если Док.Вид() = "Договор" Тогда
		Договор = Док;
		Дата_Курса=ДатаДок;
		Курс_Прежн = Курс;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	ИначеЕсли Док.Вид() = "ЗаказПоставщику" Тогда
		Дата_курса = ДатаДок;
		Курс_Прежн = Курс;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	Иначе	
		Если глЕстьРеквизитШапки("Дата_Курса",Док.Вид()) = Да Тогда
			Дата_Курса=Док.Дата_Курса;
		Иначе
			Дата_Курса=Док.ДатаДок;
		КонецЕсли;
		Курс = Док.Курс;
		Валюта_Прежн = Валюта;
		Курс_Прежн = Курс;
	КонецЕсли;		
	МестоХранения = глВосстановитьЗначение(Контекст,"СкладМатериалов");
	Если Док.Вид() = "ЗаказПоставщику" Тогда
		Попытка
			Док.ПолучитьСтрокуПоНомеру(1);
			МестоХранения = Док.ТМЦ.НГруппа.МХ;
		Исключение
			МестоХранения = глВосстановитьЗначение(Контекст,"СкладМатериалов");
		КонецПопытки;
		//Если ПустоеЗначение(Док.Автор.МестоХранения) = 0 Тогда
		//    МестоХранения = Док.Автор.МестоХранения;
		//КонецЕсли;		    
	КонецЕсли;
	Попытка
		ВидНДС = Док.ВидНДС;
	Исключение
		ВидНДС = глВосстановитьЗначение(,"БазНДС");
	КонецПопытки;	
	
	ВидНДС = БезНДС;
	Если (Док.Вид()="СчетВходящий") или (Док.Вид() = "РасходнаяНакладная") или (Док.Вид() = "ЗаказПоставщику") Тогда
		Если Док.Вид() = "СчетВходящий" Тогда
			Если Док.ЧтоПриходуем <> Перечисление.ЧтоПриходуем.ТМЦ Тогда
				Предупреждение("Если приходуются "+Док.ЧтоПриходуем+", необходимо использовать документ Приходная накладная (прочие)");
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;	
		КонецЕсли;
		
		Если Док.Вид() <> "ЗаказПоставщику" Тогда	
			КатегорияЦен = Док.КатегорияЦен;
			Если Док.Договор.Выбран() = 1 Тогда
			    Договор = Док.Договор;
			КонецЕсли;
		Иначе
			КатегорияЦен = Константа.ЗакупЦена;
		КонецЕсли;
		
		Если КоличествоСтрок() = 0 Тогда
			// табл. часть       
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку()=1 Цикл
				НоваяСтрока();
				ТМЦ = Док.ТМЦ;
				ТМЦСтало = Док.ТМЦ;
				Ед = Док.Ед;
				Коэффициент = Док.Коэффициент;
				ЦенаСНДС = Док.ЦенаСНДС;
				Если Док.Вид() = "ЗаказПоставщику" Тогда
					Склад = Док.Склад;
				КонецЕсли;
				Кво = Док.Кво;
				ПроцСписания = глПолучитьПроцентСписания(ТМЦ, глПолучитьСкладКонтекста(Контекст), ДатаДок);
				глИзмПроцСписания(Контекст);
				
				Если Док.Вид() = "ЗаказПоставщику" Тогда
					глВыч_суммы_накл(Контекст, 1);
					Заказ = Док.ТекущийДокумент();
				Иначе
					ЦенаБезНДС = ЦенаСНДС;
					//ЦенаБезНДС = Док.ЦенаБезНДС;
					Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС Тогда
						ЦенаСНДС = Док.ЦенаСНДС;
						глВыч_суммы_накл(Контекст,1);
					Иначе	
						ЦенаБезНДС = Док.ЦенаБезНДС;
						глВыч_суммы_накл(Контекст,-1);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Попытка
		ВидТорговли = Договор.ВидТорговли;
	Исключение КонецПопытки;	

	Если Найти("Договор,Заказ",Договор.Вид()) = 0 Тогда
		// заказом может быть только договор или заказ
	    Договор = 0;
	КонецЕсли;
	
КонецПроцедуры           

// ===============================
Процедура ВыборОснования()  
	// Процедура по кнопке редактирования основания в докумнете
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ПроверкаОснования(ДокументОснование) = 0 Тогда 
			ДокументОснование = СтарОснование;              		
		КонецЕсли;	
		Если (ДокументОснование <> СтарОснование)
		И (ДокументОснование.Вид() <> "РасходыНаПриобретение") Тогда
			ВводНаОсновании(ДокументОснование);	
		КонецЕсли;	
	КонецЕсли;	          
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	

// ===============================
Процедура ПриЗаписи()
	Если глЕстьИзменения(Контекст, СтруктИзменений, , "ПроцСписания,КвоСписания,ДопКвоСписания") = 1 Тогда		
		Автор = глПользователь;
	КонецЕсли;
	ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	глСохранитьЗначение(Контекст,"СубконтоВалРасх",СубконтоВалРасх);
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Если ИзмСуммаПодотчета(0)=0 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Попытка
		АвтоВремяОтключить();
		УстановитьВремя(8,0,0);		    
	Исключение КонецПопытки;
	
	//Выберем все подчинённые списания
	Если ТекущийДокумент().Выбран() = 1 Тогда
		Док = СоздатьОбъект("Документ");
		Док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент());
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Вид() = "СписаниеТМЦ" Тогда
			    Если Док.Проведен() = 1 Тогда
					Если Док.СозданоВручную = 0 Тогда
						Док.СделатьНеПроведенным();
					КонецЕсли;			        
				КонецЕсли;
			ИначеЕсли Док.Вид() = "ОприходованиеИзлишков" Тогда
				Если Док.МестоХранения <> МестоХранения Тогда
					Док.МестоХранения = МестоХранения;
					Док.Записать();
					Док.Провести();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	    
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю, (28.05.14)  при галочке БН в заказе выводить напоминалку 
	СообщитьПроБН = 0;
	Если ПустоеЗначение(ДокументОснование) <> 1 Тогда
		Если ДокументОснование.Вид() = "ЗаказПоставщику" Тогда
			Если ДокументОснование.БН = 1 Тогда
				Сообщить("Проверьте БН !!! по заказу в шапке " + ДокументОснование,"!!!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Заказ.БН = 1 Тогда
			Сообщить("Проверьте БН !!! по заказу в строке - " + НомерСтроки,"!!!");
		КонецЕсли;
	КонецЦикла;
	//... УМК Сандомирский В.Ю, (28.05.14) 
	
	
	//--- УМК Сандомирский В.Ю, (17.10.14)  поверка соответсвия Цендокумента и расчетных с разницами
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		
		РасчЦенаБезНДС = Окр((СуммаБезНДС / Кво),5,1);
		Если РасчЦенаБезНДС <> ЦенаБезНДС Тогда
			Сообщить("строка № " + НомерСтроки + " Расчетная Цена без НДС не соответсвует Цене без НДС в документе, разница = " + Строка(РасчЦенаБезНДС - ЦенаБезНДС) ,"!!!");
		КонецЕсли;
		
		РасчЦенаСНДС = Окр((СуммаСНДС / Кво),5,1);
		Если РасчЦенаСНДС <> ЦенаСНДС Тогда
			Сообщить("строка № " + НомерСтроки + " Расчетная Цена С НДС не соответсвует Цене С НДС в документе, разница = " + Строка(РасчЦенаСНДС - ЦенаСНДС) ,"!!!");
		КонецЕсли;		
	КонецЦикла;	
	
	//... УМК Сандомирский В.Ю, (17.10.14)  поверка соответсвия Цендокумента и расчетных с разницами	

КонецПроцедуры

Процедура ИзмМестоХранения()
	Дог = глУстановитьДоговорПоСкладу(Контекст);
	Если ПустоеЗначение(Дог) = 0 Тогда
		Договор = Дог;
		ИзмДоговор();
	КонецЕсли;
	
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Пересчитать процент списания в строках?", "Да+Нет") = "Да" Тогда
		    ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				ПроцСписания = глПолучитьПроцентСписания(ТМЦ, глПолучитьСкладКонтекста(Контекст), ДатаДок);
				глИзмПроцСписания(Контекст, 1);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ИзмСклад()
	ПроцСписания = глПолучитьПроцентСписания(ТМЦ, глПолучитьСкладКонтекста(Контекст), ДатаДок);
	глИзмПроцСписания(Контекст, 1);	
КонецПроцедуры

Процедура ИзмТМЦ()
	глПриИзмененииТовара(Контекст);
	Если НомерСтроки = 1 Тогда
		УстановитьСкладПоПервойСтроке();
	КонецЕсли;
	Если (Заказ.Выбран() = 1) ИЛИ (ДокументОснование.Вид() = "ЗаказПоставщику") Тогда
		ЗаказВыборка = ?(Заказ.Выбран() = 1, Заказ, ДокументОснование);
		ЗаказВыборка.ВыбратьСтроки();
		Пока ЗаказВыборка.ПолучитьСтроку() = 1 Цикл
			Если ЗаказВыборка.ТМЦ = ТМЦ Тогда
			    Ед = ЗаказВыборка.Ед;
				Коэффициент = ЗаказВыборка.Коэффициент;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура Заполнить()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Из заказов на дату документа");	
	СпМеню.ДобавитьЗначение(2, "Из заказов на текущую дату");
	СпМеню.ДобавитьЗначение(3, "Из заказов ввести дату вручную");
	
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;		
	КонецЕсли;
	Если Зн = 3 Тогда
		ДатаЗап = ТекущаяДата();
		Если ВвестиДату(ДатаЗап,"Введите дату") = 0 Тогда
			Возврат;
		КонецЕсли;
	Иначе
		ДатаЗап = ?(Зн = 1, ДатаДок, ТекущаяДата());
	КонецЕсли;
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьСубконто(ВидыСубконто.ЗаказыПоставщикам, , 1);
	Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ, , 1);
	Ит.ИспользоватьСубконто(ВидыСубконто.Контрагенты, Контрагент, 2);
	Ит.Опции(1);
	Ит.ВыполнитьЗапрос(, ДатаЗап, "ЗП");
	
	Ит.ВыбратьСубконто(1);
	Пока Ит.ПолучитьСубконто(1) = 1 Цикл
		Ит.ВыбратьСубконто(2);
		Пока Ит.ПолучитьСубконто(2) = 1 Цикл
			НоваяСтрока();
			ТМЦ = Ит.Субконто(2);
			ТМЦСтало = Ит.Субконто(2);
			// получим единицу измерения 			
			Заказ = Ит.Субконто(1);
			ИзмТМЦ();
			Заказ.ВыбратьСтроки();
			Пока Заказ.ПолучитьСтроку() = 1 Цикл
				Если Заказ.ТМЦ = ТМЦ Тогда
				    ЦенаСНДС = Заказ.ЦенаСНДС;
					Склад = Заказ.Склад;
					Прервать;
				КонецЕсли;
			КонецЦикла;			
			Кво = Ит.СКД("К") / Коэффициент;
			глИзмПроцСписания(Контекст, 1);
			глВыч_Суммы_Накл(Контекст, 1);
		КонецЦикла;		
	КонецЦикла;
КонецПроцедуры

Процедура ИзмЕдиница()
	К = Коэффициент;
	глИзмЕдин(Контекст);
	Кво = (Кво * К) / Коэффициент;
КонецПроцедуры

Процедура ПосмотретьЗаказ()
	ОткрытьФорму(ДокументОснование);
КонецПроцедуры

Процедура ПосмотретьЗаказТЧ()
	ОткрытьФорму(Заказ);
КонецПроцедуры

Функция ОстатокДав()
	
	Если ИзПереработки = 1 Тогда //--- УМК Сандомирский В.Ю. (25.12.14) изменил читаем из ТЗ которую считаем в свою очередь кнопочкой
		ТекСтрока = "";
		ТекКолонка = "";
		Если тзОстаткиДав.НайтиЗначение(ТМЦ,ТекСтрока,ТекКолонка) = 1 Тогда
			тзОстаткиДав.ПолучитьСтрокуПоНомеру(ТекСтрока);
			Возврат тзОстаткиДав.Остататок;
		КонецЕсли;
		//--- Возврат РегП.СводныйОстаток(Фирма,,Контрагент,ТМЦ,,,,"ОстатокТовара"); //--- Было УМК Сандомирский В.Ю. (25.12.14)
	КонецЕсли;
	
	Возврат "";
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю, (25.04.14) считаем от цен без НДС
Процедура ВычСуммуОтНДС()
	
		СуммаОтНДС = СуммаСНДС / ((1 + НДС20) / 1);    
	
КонецПроцедуры // ВычЦенаОтНДС()

//====================================================================== //--- УМК Сандомирский В.Ю, (25.04.14) считаем от цен без НДС
Процедура ИзмСуммаОтНДС()
	
	СуммаСНДС = СуммаОтНДС * (1 + НДС20) / 1;
	глВыч_Суммы_Накл(Контекст,4);
	
КонецПроцедуры // ИзмСуммаОтНДС()

//======================================================================//--- УМК Сандомирский В.Ю, (01.04.14) считаем от цен без НДС
Процедура ИзмЦенаОтНДС()
	
	ЦенаСНДС = ЦенаОтНДС * (1+ НДС20) / 1;
	глВыч_Суммы_Накл(Контекст,1);
	ВычСуммуОтНДС();
	
КонецПроцедуры // ИзмЦенаОтНДС()

//======================================================================//--- УМК Сандомирский В.Ю, (01.04.14) считаем от цен без НДС
Процедура ВычЦенаОтНДС()
	
		ПроцНДС = глПроцентНДС(ВидНДС,ДатаДок);
		ЦенаОтНДС = ЦенаСНДС / ((100 + ПроцНДС) / 100); 
		ВычСуммуОтНДС();
	
КонецПроцедуры // ВычЦенаОтНДС()

////======================================================================//--- УМК Сандомирский В.Ю, (06.06.14) Транспортные расходы
//Процедура ИзмРаспределятьТранспортныеРасходы()
//	Если РаспределятьТранспортныеРасходы1 = 1 Тогда
//		перРаспределятьТранспортныеРасходы = 1;	
//	ИначеЕсли РаспределятьТранспортныеРасходы1 = 2 Тогда
//		перРаспределятьТранспортныеРасходы = 2;		
//	КонецЕсли;
//	
//КонецПроцедуры // ИзмРаспределятьТранспортныеРасходы()

//======================================================================//--- УМК Сандомирский В.Ю, (16.10.14) Транспортные расходы
Процедура ПроверитьЦены(ФлагНДС)
	
	Если ФлагНДС = 0 Тогда //--- смотрим цены без НДС
		
		РасчЦенаБезНДС = Окр((СуммаБезНДС / Кво),5,1);
		Если РасчЦенаБезНДС <> ЦенаБезНДС Тогда
			Сообщить("Расчетная Цена без НДС не соответсвует Цене без НДС в документе, разница = " + Строка(РасчЦенаБезНДС - ЦенаБезНДС) ,"!");
		КонецЕсли;
		
	Иначе
		
		РасчЦенаСНДС = Окр((СуммаСНДС / Кво),5,1);
		Если РасчЦенаСНДС <> СуммаСНДС Тогда
			Сообщить("Расчетная Цена С НДС не соответсвует Цене С НДС в документе, разница = " + Строка(РасчЦенаСНДС - СуммаСНДС) ,"!");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЦены(0)

//====================================================================== //--- УМК Сандомирский В.Ю, (25.12.14)
Процедура РасчитатьОстаткиДав()
	
	
	Если ИзПереработки = 1 Тогда
		
		ВыгрузитьТабличнуюЧасть(тзОстаткиДав,"ТМЦ");
		тзОстаткиДав.НоваяКолонка("Остататок","Число",14,2);
		тзОстаткиДав.ВыбратьСтроки();
		Пока тзОстаткиДав.ПолучитьСтроку() = 1 Цикл
			тзОстаткиДав.Остататок = РегП.СводныйОстаток(Фирма,,Контрагент,тзОстаткиДав.ТМЦ,,,,"ОстатокТовара");
		КонецЦикла;

	КонецЕсли;

	
КонецПроцедуры // РасчитатьОстаткиДав()

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

//======================================================================
Функция ИтогоБезНДС()
	Если НазваниеНабораПрав() <> "Склады" Тогда
		Возврат "Итого грн: "+Формат(Итог("СуммаСНДС")-Итог("НДС"),"Ч12.2");	
	КонецЕсли;
	Возврат "";
КонецФункции // 

Функция ИтогоНДС()
	Если НазваниеНабораПрав() <> "Склады" Тогда
		Возврат  "Итого НДС: "+Формат(Итог("НДС"),"Ч12.2");
	КонецЕсли;
	Возврат "";
КонецФункции // 

Функция ИтогоСНДС()
	Если НазваниеНабораПрав() <> "Склады" Тогда
		Возврат "Всего грн "+Формат(Итог("СуммаСНДС"),"Ч12.2");
	КонецЕсли;
	Возврат "";
КонецФункции // 

//======================================================================
Функция Транспортные()
	Если НазваниеНабораПрав() <> "Склады" Тогда
		Возврат "Транспорт : "+Формат(ТранспортныеРасходы,"Ч12.2");
	КонецЕсли;
КонецФункции // Транспортные()

//======================================================================
Процедура Импорт()
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	Парам = Контрагент.ШаблонИмпорта;	
	ОткрытьПодбор("Обработка.ИмпортПН", , Парам);
КонецПроцедуры // 

//======================================================================
Процедура ОткрытьФайл()
	ЗапуститьПриложение(СокрЛП(Путь));
КонецПроцедуры // ОткрытьФайл

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|ОбновлениеЦен,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");

РегП = СоздатьОбъект("Регистр.Партии");