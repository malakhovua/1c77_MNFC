Перем СписокДействий;    
Перем НачальнаяДатаДокумента;

Процедура ВидимостьПоВидуОперации()
	Видимость = ?(ВидОперации=2,1,0);
	Форма.ОсновноеСредство.Видимость(Видимость)
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	НачальнаяДатаДокумента = ДатаДок;
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
//		Форма.кДействия.Доступность(0);
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;	
	ВидимостьПоВидуОперации();
КонецПроцедуры

// ======================================
Процедура ИзмФирма()
	Если Сотрудник.Выбран()=1 Тогда
		Если Сотрудник.Фирма <> Фирма Тогда
			Сотрудник = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

// ===============================
Процедура ПриЗаписи()
	Автор = глПользователь;
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры
                      
// ===============================
// Назначение:
//		Проверяет соответствие контрагента, договора и заказа (документа-основания)
Функция ПроверкаСоответствия()
	фСоответствует=1;
	
	Договор = Субконто2;
	Контрагент = Субконто1;
	
	Если ПустоеЗначение(Договор)=0 Тогда
	    Если Договор.Контрагент <> Контрагент Тогда
	        фСоответствует=0;
	    КонецЕсли;
	КонецЕсли;
	
	Если Субконто3.Выбран()=1 Тогда
		Если глЕстьРеквизитШапки("Контрагент",Субконто3.Вид()) = Да Тогда
			Если Субконто3.Контрагент <> Контрагент Тогда
				фСоответствует=0;
			КонецЕсли;
			Если Договор.Выбран()=1 Тогда
				Если глЕстьРеквизитШапки("Договор",Субконто3.Вид()) = Да Тогда
					Если Субконто3.Договор <> Договор Тогда
						фСоответствует=0;
					КонецЕсли;
				// договор может фигурировать в реквизите Заказ бухг документов
				ИначеЕсли глЕстьРеквизитШапки("Заказ",Субконто3.Вид()) = Да Тогда
					Если (Субконто3.Заказ <> Договор) и (Субконто3.Заказ.Вид() = "Договор") Тогда
						фСоответствует=0;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли глЕстьРеквизитМнЧ("Контрагент",Субконто3.Вид()) = Да Тогда
			// Есть ли такая строка ???
			фСоответствует = 0;
			Субконто3.ВыбратьСтроки();
			Пока Субконто3.ПолучитьСтроку()=1 Цикл
				Если (Субконто3.Контрагент = Контрагент) Тогда
					Если глЕстьРеквизитМнЧ("Договор",Субконто3.Вид()) = Да Тогда
					    Если Субконто3.Договор = Договор Тогда
							фСоответствует = 1;
							Прервать;
						КонецЕсли;
					Иначе 
						// договора вообще нет в табличной части, проверим только по контрагенту
						фСоответсвует = 1;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Возврат фСоответствует;
КонецФункции //ПроверкаСоответствия

// ===============================
Процедура ИзмНДС()
	СуммаСНДС = СуммаБезНДС + НДС;
КонецПроцедуры

// ===============================
Процедура ИзмСуммаБезНДС()
	Если ПустоеЗначение(Субконто2) = 0 Тогда
		СтавкаНДС = ?(Субконто2.Вид()="ТМЦ",Субконто2.СтавкаНДС,ВидНДС);
	Иначе
		СтавкаНДС = ВидНДС;
	КонецЕсли;
	НДС = СуммаБезНДС*СтавкаНДС.Ставка.Получить(ДатаДок);
	ИзмНДС();
КонецПроцедуры

// ======================================
Процедура ИзмВидНДС()
	// пересчитаем суммы НДС в строках табличной части
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ИзмСуммаБезНДС()
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура ИзмВалюта()
	Курс = Валюта.Курс.Получить(ДатаДок);
КонецПроцедуры

// ===============================
Процедура ИзмЦенаБезНДС()
	СуммаБезНДС = ЦенаБезНДС*Кво;
	ИзмСуммаБезНДС();
КонецПроцедуры

// ===============================
Процедура ИзмКво()
	ИзмЦенаБезНДС();
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	ВидОперации = 1;
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
	Иначе
		глУстановитьФирму(Контекст);
		МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
		ВидНДС = глВосстановитьЗначение(,"БазНДС");
		Валюта = Гривня;
		ВидДеятельности = глВосстановитьЗначение(,"БазВидДеятельности");
		ИзмВалюта();
	КонецЕсли;
КонецПроцедуры

// ===========================
Функция УстДоступность()
	Форма.Заголовок(глЗаголовок(Контекст,"Авансовый отчет"));
	Если ВаловыеРасходы = Да Тогда
        Форма.СубконтоВалРасх.Доступность(1);
    Иначе
    	Форма.СубконтоВалРасх.Доступность(0);
    КонецЕсли;
    Если Счет.Количественный=1 Тогда
    	Форма.Кво.Доступность(1);
    	Форма.ЦенаБезНДС.Доступность(1);
    Иначе
    	Форма.Кво.Доступность(0);
    	Форма.ЦенаБезНДС.Доступность(0);
		Если (Кво <> 0) или (ЦенаБезНДС <> 0) Тогда
		    Кво = 0; ЦенаБезНДС = 0;
		КонецЕсли;
	КонецЕсли;        

	Если ПустоеЗначение(Счет) = 1 Тогда
		Форма.Субконто1.Доступность(0);
		Форма.Субконто2.Доступность(0);
		Форма.Субконто3.Доступность(0);
	Иначе
		Форма.Субконто1.Доступность(1);
		Форма.Субконто2.Доступность(1);
		Форма.Субконто3.Доступность(1);
	КонецЕсли;	
	
	Форма.Счет.Доступность(1);
	Если ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Запасы Тогда		
		Форма.Субконто1.Доступность(1);
		Форма.Субконто2.Доступность(1);
		Форма.Субконто1.НазначитьТип("Справочник.МестаХранения");
		Форма.Субконто2.НазначитьТип("Справочник.ТМЦ");
		Форма.Счет.Доступность(0);
		Форма.Субконто3.Доступность(0);
	ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Инвестиции Тогда
	ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Затраты Тогда   
		Если Счет.КоличествоСубконто() < 3 Тогда
			Форма.Субконто3.НазначитьТип("Справочник.ВидыЗатрат");
		КонецЕсли;	
	ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Взаиморасчеты Тогда
		Если Счет.КоличествоСубконто() < 3 Тогда
			Форма.Субконто3.НазначитьТип("Документ");
		КонецЕсли;	
	ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Прочее Тогда
	КонецЕсли;
	
    Возврат "";
КонецФункции                 

// ===============================
Процедура СформироватьСодержание()
	Если ПустоеЗначение(Счет) = 0 Тогда
		Если ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Запасы Тогда		    
			Содержание = "Приходование запасов";
		ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Инвестиции Тогда
			Содержание = "Приходование ОС (инвестиции)";
		ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Затраты Тогда   
			Содержание = "Отражение затрат";
		ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Взаиморасчеты Тогда
			Содержание = "Взаиморасчеты";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмСчет()  
	
	Если ПустоеЗначение(Счет) = 0 Тогда
		Если ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Запасы Тогда		    
		ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Инвестиции Тогда
			Если Счет.ВидСубконто(1) <> ВидыСубконто.Инвестиции Тогда
		        Предупреждение("Нельзя использовать счет "+Счет+" как счет учета инвестиций.");
				Счет = 0;										
			КонецЕсли;	
		ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Затраты Тогда   
			Если ИспользоватьСчетаРасходов=Класс8 Тогда
				Если (Лев(Счет.Код,1) <> "8") 
				И (Счет <> СчетПоКоду("231")) Тогда
			        Предупреждение("Нельзя использовать счета "+Счет+" как счет расходов! Разрешенные классы счетов "+
			        "расходов устанавливаются в константе ""Использовать счета расходов"".");
					Счет = 0;										
				КонецЕсли;	
			Иначе         
				Если (Лев(Счет.Код,1) <> "9") 
				И (Счет <> СчетПоКоду("231")) Тогда
			        Предупреждение("Нельзя использовать счета "+Счет+" как счет расходов! Разрешенные классы счетов "+
			        "расходов устанавливаются в константе ""Использовать счета расходов"".");
					Счет = 0;										
				КонецЕсли;	
			КонецЕсли;	
		ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Взаиморасчеты Тогда
			Если Найти("631,632,3772",Строка(Счет.Код)) = 0 Тогда
		        Предупреждение("Нельзя использовать счет "+Счет+" как счет учета взаиморасчетов!");
				Счет = 0;										
			КонецЕсли;	
		ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Прочее Тогда			
			Если Счет.ВидСубконто(1) = ВидыСубконто.Инвестиции Тогда
				// это счет учета инвестиций
		        Предупреждение("Нельзя использовать счет "+Счет+"!");
				Счет = 0;
			ИначеЕсли (Лев(Счет.Код,1) = "8") Тогда           
				// это счета учета затрат
		        Предупреждение("Нельзя использовать счет "+Счет+"!");
				Счет = 0;
			ИначеЕсли (Лев(Счет.Код,1) = "9") Тогда
				// это счета учета затрат
		        Предупреждение("Нельзя использовать счет "+Счет+"!");
				Счет = 0;
			ИначеЕсли Найти("631,632,3772",Строка(Счет.Код)) <> 0 Тогда
				// это счета учета взаиморасчетов
		        Предупреждение("Нельзя использовать счет "+Счет+"!");
				Счет = 0;
			ИначеЕсли Счет.ВидСубконто(2) = ВидыСубконто.ТМЦ Тогда
				// это счет учета ТМЦ			
		        Предупреждение("Нельзя использовать счет "+Счет+"!");
				Счет = 0;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;               
	
	Если ПустоеЗначение(Счет) = 0 Тогда
		Если Счет.КоличествоСубконто() > 0 Тогда
			Форма.Субконто1.НазначитьТип(Счет.ВидСубконто(1));
		КонецЕсли;	
		Если Счет.КоличествоСубконто() > 1 Тогда
			Форма.Субконто2.НазначитьТип(Счет.ВидСубконто(2));
		КонецЕсли;	
		Если Счет.КоличествоСубконто() > 2 Тогда
			Форма.Субконто3.НазначитьТип(Счет.ВидСубконто(3));
		КонецЕсли;	
	КонецЕсли;	
	
	СформироватьСодержание();
КонецПроцедуры
                    
// ===============================
Процедура ИзмСубконто2()
	Если Субконто2.Выбран() = 0 Тогда
	    Возврат;
	КонецЕсли; 
	
	Если Субконто2.Вид() = "ТМЦ" Тогда
		Счет = Субконто2.Счет;
		ИзмСчет();
	КонецЕсли;	   
	
	Если Счет.ВидСубконто(2) = ВидыСубконто.Договора Тогда
		// проверки для заказа либо договора		
		// валюта расчетного счета и валюта заказа должны быть одинаковые
		Если глВалютаДок(Субконто2) <> Валюта Тогда
			глКомментарий("Валюта документа и валюта договора должны совпадать!",1,,"!");
			Субконто2 = 0;
			Возврат;
		КонецЕсли;
		
		Если ПроверкаСоответствия()=0 Тогда
		    Предупреждение("Договор не соответствует контрагенту и документу основания.");
			Субконто2 = 0;
			Возврат;
		КонецЕсли;		
	КонецЕсли; // тип второго субконто
	
	СформироватьСодержание();
КонецПроцедуры
         
// ===============================
Процедура ИзмСубконто3()
КонецПроцедуры

// ===============================
Процедура ИзмНомерСтроки()
	ДатаС = ДатаДок;
	Проводить = Да;
	ВаловыеРасходы = Да;
КонецПроцедуры
                    
// ===============================
Процедура ИзмВидСтроки()
КонецПроцедуры

// ===============================
Процедура ИзмДатаС()
	ДатаПо = ДатаДок;
КонецПроцедуры

// ===============================
Функция ОпределитьГрн(Сумма,Ден)
	Если Ден = 0 Тогда
		Возврат ?(Сумма = 0,"0",Цел(Сумма));
	Иначе
		СтрДен = " " + Валюта.Кратко + ". ";
    	Возврат СокрЛП(?(Цел(Сумма) = 0,"0" + СтрДен, Формат(Цел(Сумма),"Ч15.0") + СтрДен));
	КонецЕсли;
КонецФункции

// ===============================
//Определение копеек из суммы (в строковом представлении)
Функция ОпределитьКоп(Сумма,Ден)
	Если Ден = 1 Тогда
	    СтрДен = ?(Валюта = Гривня," коп. ","");
	Иначе
		СтрДен = "";
	КонецЕсли;
	Сум = (Сумма - Цел(Сумма))*100;
	Возврат СокрЛП(?(Сум < 10,"0"+СокрЛП(Формат(Сум,"Ч2.0"))+СтрДен,Формат(Сум,"Ч2.0")+СтрДен));
КонецФункции

// ===============================
Процедура Печать()
	Если Выбран() = 0 Тогда
		Если Вопрос("Документ должен быть записан. Записать?", "Да+Нет") = "Да" Тогда
			Записать();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да,"_Укр","");
	Таб.ИсходнаяТаблица("Таблица"+СуффиксТаблицы);
	глУстПропись(Валюта);
	Должность = Сотрудник.Должность.Получить(ДатаДок);

	//Расчет таблички в верхней правой части
	ТаблПечать = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблПечать,"Счет, СуммаСНДС, НДС");
	ТаблПечать.Свернуть("1","2,3");
	ТаблПечать.Сортировать("+Счет");
	Если ТаблПечать.КоличествоСтрок() > 5 Тогда
	    глКомментарий("В этом авансовом отчете больше 5 разных корреспонденций счетов, все они не поместились в печатную форму!",1,,"!");
	КонецЕсли;
	КвоЦиклов = Мин(ТаблПечать.КоличествоСтрок(),5);
	Счет372 = ?(Валюта = Гривня,"372.1","372.2");
	Для Ном = 1 По КвоЦиклов Цикл
		СуммаТек = 0;
		СчетИзСписка = ТаблПечать.ПолучитьЗначение(Ном,1);
		СуммаТек = ТаблПечать.ПолучитьЗначение(Ном,2) - ТаблПечать.ПолучитьЗначение(Ном,3);
		Если Ном = 1 Тогда
		    С1 = СчетИзСписка;
		    СМ11 = ОпределитьГрн(СуммаТек,0);
		    СМ12 = ОпределитьКоп(СуммаТек,0);
		ИначеЕсли Ном = 2 Тогда
			С2 = СчетИзСписка;
		    СМ21 = ОпределитьГрн(СуммаТек,0);
		    СМ22 = ОпределитьКоп(СуммаТек,0);
		ИначеЕсли Ном = 3 Тогда
			С3 = СчетИзСписка;
		    СМ31 = ОпределитьГрн(СуммаТек,0);
		    СМ32 = ОпределитьКоп(СуммаТек,0);
		ИначеЕсли Ном = 4 Тогда
			С4 = СчетИзСписка;
		    СМ41 = ОпределитьГрн(СуммаТек,0);
		    СМ42 = ОпределитьКоп(СуммаТек,0);
		ИначеЕсли Ном = 5 Тогда
			С5 = СчетИзСписка;
		    СМ51 = ОпределитьГрн(СуммаТек,0);
		    СМ52 = ОпределитьКоп(СуммаТек,0);
		КонецЕсли;
	КонецЦикла;
    СМ61 = ОпределитьГрн(Итог("НДС"),0);
	СМ62 = ОпределитьКоп(Итог("НДС"),0);
	СМ71 = ОпределитьГрн(Итог("СуммаСНДС"),0);
	СМ72 = ОпределитьКоп(Итог("СуммаСНДС"),0);
	
	// Рассчитаем начальный, конечный остаток и какие суммы были
	// получены и возвращены сотрудником со времени предыдущего авансового отчета
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьРазделительУчета(Фирма);
	Ит.ИспользоватьСубконто(ВидыСубконто.Сотрудники, Сотрудник, 2);
	// найдем предыдущий авансовый отчет
	ПослАО = ПолучитьПустоеЗначение("Документ.АвансовыйОтчет");
	ДокПослАО = СоздатьОбъект("Документ.АвансовыйОтчет");
	ДокПослАО.ОбратныйПорядок(1);
	ДокПослАО.УстановитьФильтр(1,0,1,1,1,1);
	ДокПослАО.ВыбратьДокументы(,ТекущийДокумент());
	Пока ДокПослАО.ПолучитьДокумент() = 1 Цикл
		ТекПослАО = ДокПослАО.ТекущийДокумент();
		Если (ТекПослАО <> ТекущийДокумент()) и (ТекПослАО.Сотрудник = Сотрудник)
		и (ТекПослАО.Валюта = Валюта) Тогда
			ПослАО = ТекПослАО;
			Прервать;
		КонецЕсли;
	КонецЦикла;

    // Выполним запрос с диапазоном дат, не включая предыдущий
	// авансовый запрос и текущий документ
	КонДата = СформироватьПозициюДокумента(ТекущийДокумент(),-1);
	НачДата = ?(ПустоеЗначение(ПослАО) = 1,'01.01.1980',СформироватьПозициюДокумента(ПослАО,1));
	Если Валюта = Гривня Тогда
		Ит.ВыполнитьЗапрос(НачДата,КонДата,Счет372,,,3,,"С");
	Иначе
		Ит.ВыполнитьЗапрос(НачДата,КонДата,Счет372,,Валюта,3,,"В");
	КонецЕсли;

	НачальныйОстаток = 0;
	ВсегоПолучено = 0;
	ВсегоВозвращено = 0;
	Если Валюта = Гривня Тогда
		НачальныйОстаток = Ит.СНД("С") - Ит.СНК("С");
	Иначе
		НачальныйОстаток = Ит.СНД("В") - Ит.СНК("В");
	КонецЕсли;
	Ит.ВыбратьКорСчета();
	Пока Ит.ПолучитьКорСчет() = 1 Цикл
		КодГруппыСчета = Сред(Ит.КорСчет.Код,1,2);
		Если (КодГруппыСчета = "30") Или (КодГруппыСчета = "31") Тогда
			Если Валюта = Гривня Тогда
				ВсегоПолучено = ВсегоПолучено + Ит.КорДО("С");
				ВсегоВозвращено = ВсегоВозвращено + Ит.КорКО("С");
			Иначе
				ВсегоПолучено = ВсегоПолучено + Ит.КорДО("В");
				ВсегоВозвращено = ВсегоВозвращено + Ит.КорКО("В");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	КонечныйОстаток = НачальныйОстаток + ВсегоПолучено - ВсегоВозвращено - Итог("СуммаСНДС");
	
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Ном = 0;
	Пока ПолучитьСтроку() = 1 do
		Ном = Ном+1;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
	Таб.Опции(0,0,0,0,"");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Авансовый отчет","");
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
		ИзмВидНДС();
		ФлагСтандОбр = 0;
	ИначеЕсли (Рекв = "Счет") и (Константа.ИспользоватьСписокКорректныхПроводок = Да) Тогда
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
	    СписокКорректныхПроводок.Установить("Счет", СчетПоКоду("37"));
	    СписокКорректныхПроводок.Установить("Корреспонденция", 0);
		глЗначениеОтбора = СписокКорректныхПроводок;
	ИначеЕсли Рекв = "Сотрудник" Тогда
		ФлагСтандОбр = 0;
		КонтФирмы = Фирма;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);
	ИначеЕсли Рекв = "Субконто2" Тогда
		Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
			Фрм = СоздатьОбъект("СписокЗначений");
			Фрм.ДобавитьЗначение(1,"фРазрешатьПустогоКонтрагента");
			Фрм.ДобавитьЗначение("ДоговораКонтрагентов","ГрафаОтбора");
			ОткрытьФормуМодально("Журнал.ПолныйЖурнал.ДляВыбораДоговоровИСчетов",Фрм,);
			Субконто2 = Фрм.Получить("Документ");                                
			Если ПустоеЗначение(Субконто2) = 0 Тогда
				Если Субконто2.Фирма <> Фирма Тогда
					глКомментарий("Договор принадлежит другой фирме!",1,,"!");
					Субконто2 = ПолучитьПустоеЗначение("Документ");
					СтатусВозврата(0);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			Если ПустоеЗначение(Субконто2) = 0 Тогда
				Субконто1 = Субконто2.Контрагент;    
			КонецЕсли;
			ФлагСтандОбр = 0;
		КонецЕсли;
	ИначеЕсли Рекв = "Субконто3" Тогда
		Если ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Взаиморасчеты Тогда
			спРасшифровка = СоздатьОбъект("СписокЗначений"); 
			спРасшифровка.ДобавитьЗначение(Субконто1,"Контрагент");
			ОткрытьФормуМодально("Журнал.ПолныйЖурнал.ФормаДляВыбора",спРасшифровка,);
	        Субконто3 = спРасшифровка.Получить("ДокументОснование");
			ФлагСтандОбр = 0;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции




// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|ДвиженияДокумента,
	|ОткрытьВЖурнале");