Перем Счет372, ВидЗатраты, ТаблВалРасх;
Перем СуммаНДС, СуммаВалРасх;
Перем Субк1, Субк2, Субк3;
Перем СуммаУчБезНДС;
Перем тбДолгиПоставщиков;	
Перем РегПоставщики;

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(Сотрудник,"Сотрудник");
	глВыбранЛи(Валюта,"Валюта");
	глВыбранЛи(ВидНДС,"Вид НДС");
	Если глВсеВыбрано = 1 Тогда
	    Если (Валюта <> Гривня) и (Итог("НДС") <> 0) Тогда
	        глКомментарий("Нельзя указывать НДС в валютном авансовом отчете!",0,,"!");
			глВсеВыбрано = 0;
	    КонецЕсли;
	КонецЕсли;
	глПроверкаНДСВДокументе(Контекст, (СуммаСНДС-НДС), СуммаСНДС, НДС);
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(Счет,"Счет",НомерСтроки);
	Если ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Взаиморасчеты Тогда
		глВыбранЛи(СуммаСНДС,"Сумма с НДС",НомерСтроки);
	КонецЕсли;	
	глВыбранЛи(ВаловыеРасходы,"Валовые расходы",НомерСтроки);
	Если ВаловыеРасходы = Да Тогда
        глВыбранЛи(СубконтоВалРасх,"Субконто валовых расходов",НомерСтроки);
	КонецЕсли;
	Если глВсеВыбрано = 1 Тогда
		Если (Валюта <> Гривня) И (Счет.ВидСубконто(2) <> ВидыСубконто.Подразделения)
		И (Счет.ВидСубконто(2) <> ВидыСубконто.Договора) Тогда
	    	глКомментарий("Нельзя приходовать от сотрудника за валюту! Строка "+НомерСтроки+".",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Процедура РассчитатьШапку()
	Счет372 = СчетПоКоду(?(Валюта=Гривня,"3721","3722"));
	спКонтрагенты = СоздатьОбъект("СписокЗначений");
	// если во всех строках одна и та же статья валовых расходов, то сформируем одну проводку в шапке
	// также в цикле просуммируем НДС по строкам, которые нужно проводить
	СуммаНДС = 0;
	СуммаВалРасх = 0;
	ТаблВалРасх = СоздатьОбъект("ТаблицаЗначений");
	ТаблВалРасх.НоваяКолонка("СубконтоВалРасх","Справочник.ВалДоходыРасходы");
	ТаблВалРасх.НоваяКолонка("СуммаБезНДС","Число",12,2);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Проводить = Да Тогда
			Если ВидСтроки <> Перечисление.ВидыСтрокАвансовогоОтчета.Взаиморасчеты Тогда
		    	СуммаНДС = СуммаНДС + НДС;
			Иначе	
				Продолжить;
			КонецЕсли;	
		    спКонтрагенты.ДобавитьЗначение(Субконто1);
			Если ВаловыеРасходы = Да Тогда
			    // проверим есть ли в таблице
				Инд = 0;
				Если ТаблВалРасх.НайтиЗначение(СубконтоВалРасх,Инд,"СубконтоВалРасх") = 1 Тогда
				    // нашли
					ТаблВалРасх.ПолучитьСтрокуПоНомеру(Инд);
					ТаблВалРасх.СуммаБезНДС = ТаблВалРасх.СуммаБезНДС + СуммаБезНДС;
				Иначе
					// добавим новую строку
					ТаблВалРасх.НоваяСтрока();
					ТаблВалРасх.СубконтоВалРасх = СубконтоВалРасх;
					ТаблВалРасх.СуммаБезНДС = СуммаБезНДС;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если Валюта <> Гривня Тогда
		глТаблицаСчетов.УдалитьСтроки();
		// переоценим счет 3722
		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = СчетПоКоду("3722");
		глТаблицаСчетов.Субконто1 = Сотрудник;
		глТаблицаСчетов.Субконто2 = 0;
		глТаблицаСчетов.Субконто3 = 0;
		глТаблицаСчетов.Валюта = Валюта;
		// курсовую разницу всегда считаем операционной
		глТаблицаСчетов.ОперационнаяКР = 1;                         
		глТаблицаСчетов.ВидДеятельности = ПолучитьПустоеЗначение("Справочник.ВидыДеятельности");
	КонецЕсли;           
	                                     
	спКонтрагенты = СоздатьОбъект("СписокЗначений");
	
	// Подготовим регистры взаиморасчетов для проведения
	ВремРегистры	= СоздатьОбъект("Регистры");
	РегПоставщики	= ВремРегистры.ВзаиморасчетыПоставщиков;
	РегПоставщики.УстановитьЗначениеФильтра("Фирма",Фирма,2);
	РегПоставщики.УстановитьЗначениеФильтра("Контрагент",спКонтрагенты,2);
	РегПоставщики.УстановитьЗначениеФильтра("Валюта",Валюта,1);
	Если ИтогиАктуальны() = 0 Тогда
		РегПоставщики.ВременныйРасчет();
		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;       
	РегПоставщики.УстановитьЗначениеФильтра("Фирма",Фирма,1);
	РегПоставщики.УстановитьЗначениеФильтра("Контрагент",спКонтрагенты,2);
	РегПоставщики.УстановитьЗначениеФильтра("Валюта",Валюта,1);
	РегПоставщики.ВыгрузитьИтоги(тбДолгиПоставщиков,1,1);
КонецПроцедуры

// ===============================
Процедура ПроводкиШапка()
	Если Валюта=Гривня Тогда
		глПроводка(Контекст,"6415",Счет372,СуммаНДС,"Потрачено по аванс. отчету (НДС)",, ВидНДС,,,
		Сотрудник,,, ,,"АВ");
	КонецЕсли;
	
	// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
	
	//// проводки по валовым расходам, свернутые по статьям
	//ТаблВалРасх.ВыбратьСтроки();
	//Пока ТаблВалРасх.ПолучитьСтроку() = 1 Цикл
	//    СуммаВалРасх = глПересчет(ТаблВалРасх.СуммаБезНДС,Валюта,Гривня,Курс,ДатаДок);
	//	Если ТаблВалРасх.СубконтоВалРасх <> Константа.НиДоходНиРасход Тогда
	//		глПроводка(Контекст,"ВР","ВР",СуммаВалРасх,"Потрачено по аванс. отчету "+глФИО(Сотрудник,1),, ,,ТаблВалРасх.СубконтоВалРасх,
	//		,,ТаблВалРасх.СубконтоВалРасх,,,"АВ");
	//	КонецЕсли;
	//КонецЦикла;
	
	// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
	
	
КонецПроцедуры

// ===============================
Процедура РассчитатьСтроку()
	Если (Счет.Валютный = 1) И (Валюта <> Гривня) и (Проводить = Да) 
	И (глПроверитьСчетВзаиморасчетов(Счет)=0) Тогда
		// переоценим Счет
		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = Счет;
		глТаблицаСчетов.Субконто1 = Субк1;
		глТаблицаСчетов.Субконто2 = Субк2;
		глТаблицаСчетов.Субконто3 = Субк3;
		глТаблицаСчетов.Валюта = Валюта;
		// курсовую разницу всегда считаем операционной
		глТаблицаСчетов.ОперационнаяКР = 1;
		глТаблицаСчетов.ВидДеятельности = ПолучитьПустоеЗначение("Справочник.ВидыДеятельности");
	КонецЕсли;
КонецПроцедуры
               
// ===============================
Процедура ДвиженияОстатки()
	глКомментарий("Выполняются движения остатков ТМЦ",2);
	// Движения делаем вручную
	Регистр.Остатки.ПривязыватьСтроку(НомерСтроки);
	Регистр.Остатки.Фирма = Фирма;
	Регистр.Остатки.ТМЦ = Субконто2;
	Регистр.Остатки.МестоХранения = Субконто1;
	Регистр.Остатки.ФлагУчета = 2;
	Регистр.Остатки.ОстатокТовара = Кво;
	Регистр.Остатки.ДвижениеПриходВыполнить();
КонецПроцедуры
            
// ===============================
Процедура ДвиженияЗатраты() 
	
	Регистр.ПроизводственныеЗатраты.ПривязыватьСтроку(НомерСтроки);
	Регистр.ПроизводственныеЗатраты.Фирма = Фирма;
	Регистр.ПроизводственныеЗатраты.ВидДеятельности = Субконто1;
	Регистр.ПроизводственныеЗатраты.Подразделение = Субконто2;
	Регистр.ПроизводственныеЗатраты.ВидЗатрат = Субконто3;
	
	Регистр.ПроизводственныеЗатраты.Количество = Кво;        

	Если Валюта = Гривня Тогда
		Регистр.ПроизводственныеЗатраты.Сумма = СуммаБезНДС; 
	Иначе     
    	СуммаГрн = глПересчет(СуммаБезНДС,Валюта,Гривня,Курс,ДатаДок);
		Регистр.ПроизводственныеЗатраты.Сумма = СуммаГрн; 
	КонецЕсли;	          
	
	Регистр.ПроизводственныеЗатраты.СуммаДав = 0; 	
	Регистр.ПроизводственныеЗатраты.КодОперации = ОтражениеЗатрат;
	
	Регистр.ПроизводственныеЗатраты.ДвижениеПриходВыполнить();
	
КонецПроцедуры

// ===============================
Процедура ДвиженияПартии() 
	глКомментарий("Выполняются движения партий ТМЦ",2);
	
	// Приходуем не проверяя:
	
	Если глПартионныйУчетПоСкладам = Да Тогда
		МестоХраненияП = Субконто1;
	Иначе
	    МестоХраненияП = 0;
	КонецЕсли;
    
	МетодРасчетаСебестоимости=глПолучитьМетодРасчетаСебестоимости(Субконто2,ДатаДок);				
	Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		ПоставщикП = 0;
		ПоставкаП = 0;
		ПрихДокументП = 0;
	Иначе            
		ПоставщикП = 0;
		ПоставкаП = ТекущийДокумент();
		ПрихДокументП = ТекущийДокумент();
	КонецЕсли;
		

	ПриходОстатокТовара = Кво;
	ПриходСтоимость = глПересчет(СуммаБезНДС,Валюта,ДатаДок,Гривня,ДатаДок,);
	ПриходПродСтоимость = 0;
	ПриходНДС = глПересчет(НДС,Валюта,ДатаДок,Гривня,ДатаДок,);
		    
	Если Субконто2.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		КодОперации = ПокупкаУслуги;
	Иначе                    
		// ТМЦ или покупная тара
		// с покупной тарой работаем, как с ТМЦ
		КодОперации = Закупка;
	КонецЕсли;
		
	Оборот = ПриходСтоимость;
		                              
	СчетТМЦ = Субконто2.Счет;
		
	глПровестиПартию(Контекст, 1, 0, Фирма, Субконто2, СчетТМЦ, МестоХраненияП, ПоставщикП,
		ПоставкаП, ПрихДокументП, ПриходОстатокТовара, ПриходСтоимость, ПриходПродСтоимость, 
		КодОперации, 1, Оборот, 0);

	глПроводка(Контекст,СчетТМЦ,Счет372,ПриходСтоимость,"Прих:Себестоимость",ПриходОстатокТовара, МестоХраненияП,Субконто2,ПоставкаП,
	Сотрудник,,, ,,"АВ");
			
КонецПроцедуры
                 
// ===============================
// Назначение:
//		Проводит строку выписки по регистрам ВзаиморасчетыПокупателей и ВзаиморасчетыПоставщиков
Процедура ВзаиморасчетыСтрока()  
	РежимОплаты = ?(ПустоеЗначение(Субконто3)=1,Перечисление.РежимыОплаты.ПоДоговору,Перечисление.РежимыОплаты.ПоСчету);
	ВидОплаты	= Перечисление.ВидыОплаты.Оплата;
	ЗнакОплаты  = +1;     
	РегВзаиморасчетов  = РегПоставщики;
	СтавкаНДСПогашения = ВидНДС;
	СуммаНДСПогашения  = НДС;
	НеВклВДВР = ?(СубконтоВалРасх = Константа.НиДоходНиРасход,1,0);
	СуммаПогашения = СуммаСНДС;
	глПогашениеДолга(Контекст,ЗнакОплаты,тбДолгиПоставщиков,Фирма,Субконто1,ВидОплаты,
		Субконто3,Субконто2,РежимОплаты,СуммаПогашения, СуммаНДСПогашения,Валюта,СтавкаНДСПогашения, НеВклВДВР, Курс);
	Если Валюта <> Гривня Тогда
		ВалютаПроводки = Валюта;
		СуммаВал = СуммаСНДС;
		СуммаГрн = глПересчет(СуммаСНДС,Валюта,Гривня,ДатаДок);  
	Иначе
		ВалютаПроводки = ПолучитьПустоеЗначение("Справочник.Валюты");
		СуммаВал = 0;
		СуммаГрн = СуммаСНДС;
	КонецЕсли;	
	// первая часть сложной проводки
	ПризнакПроводки = 2;    
	Если Валюта = Гривня Тогда
		глПроводка(Контекст,,Счет372,СуммаГрн,Содержание,, ,,,
		Сотрудник,,, ,,"БК",1,ПризнакПроводки);
	Иначе     
		глПроводка(Контекст,,Счет372,СуммаГрн,Содержание,, ,,,
		Сотрудник,,, ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки);
	КонецЕсли;	          
	Если Константа.ВыделятьАвансы = Да Тогда
		СчетАванса = СчетПоКоду(?(Валюта=Гривня,"3711","3712"));
	Иначе
		СчетАванса = СчетПоКоду(?(Валюта=Гривня,"631","632"));
	КонецЕсли;
	// формирование проводок на основании движений по регистру		
	РегВзаиморасчетов.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегВзаиморасчетов.ПолучитьДвижение() = 1 Цикл
		// выбираем движения только по текущей строке документа
		Если РегВзаиморасчетов.НомерСтроки() = НомерСтроки Тогда
			// проводки по взаиморасчетам
			Если РегВзаиморасчетов.Валюта <> Гривня Тогда
				ВалютаПроводки = РегВзаиморасчетов.Валюта;
				СуммаВал = РегВзаиморасчетов.Долг;
				СуммаГрн = РегВзаиморасчетов.ДолгОсн;
			Иначе
				ВалютаПроводки = ПолучитьПустоеЗначение("Справочник.Валюты");
				СуммаВал = 0;
				СуммаГрн = РегВзаиморасчетов.Долг;
			КонецЕсли;	 
			// вторая часть сложной проводки
			Если РегВзаиморасчетов.КодОперации = АвансоваяОплата Тогда     					
				глПроводка(Контекст,СчетАванса,,СуммаГрн,Содержание,, Субконто1,
				?(ПустоеЗначение(Субконто2)=1,РегВзаиморасчетов.Договор,Субконто2),Субконто3,
				,,, ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки);
			ИначеЕсли РегВзаиморасчетов.КодОперации = ПостОплата Тогда			
				глПроводка(Контекст,Счет,,СуммаГрн,Содержание,, Субконто1,
				?(ПустоеЗначение(Субконто2)=1,РегВзаиморасчетов.Договор,Субконто2),Субконто3,
				,,, ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки);
			ИначеЕсли РегВзаиморасчетов.КодОперации = ВозвратАвансовойОплаты Тогда					
				глПроводка(Контекст,СчетАванса,,СуммаГрн,Содержание,, Субконто1,
				?(ПустоеЗначение(Субконто2)=1,РегВзаиморасчетов.Договор,Субконто2),Субконто3,
				,,, ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки);
			ИначеЕсли РегВзаиморасчетов.КодОперации = ВозвратПостОплаты Тогда										
				глПроводка(Контекст,Счет,,СуммаГрн,Содержание,, Субконто1,
				?(ПустоеЗначение(Субконто2)=1,РегВзаиморасчетов.Договор,Субконто2),Субконто3,
				,,, ВалютаПроводки,СуммаВал,"БК",1,ПризнакПроводки);
			КонецЕсли;    
			Если ((РегВзаиморасчетов.Флаг_НУ = НУ_ВозникновениеНОиВДВР)
			ИЛИ (РегВзаиморасчетов.Флаг_НУ = НУ_СторноНОиВДВР)
			ИЛИ (РегВзаиморасчетов.Флаг_НУ = НУ_ВозникновениеНО)
			ИЛИ (РегВзаиморасчетов.Флаг_НУ = НУ_СторноНО )) Тогда
				Если Константа.НДСпоВходящимНН = Да Тогда
					// проводку по налоговому кредиту сделаем в 
					// документе ЗаписьКнигиПриобретения
					СчетНДС = СчетПоКоду("6442");
					СубконтоНДС1 = Субконто1;
					СубконтоНДС2 = Субконто2;
				Иначе
					// сразу налоговый кредит
					СчетНДС = СчетПоКоду("6415");
					СубконтоНДС1 = ВидНДС;
					СубконтоНДС2 = 0;
				КонецЕсли;
			    глПроводка(Контекст,СчетНДС,"6441",РегВзаиморасчетов.НДС,"НДС",, СубконтоНДС1,СубконтоНДС2,,
			    Субконто1,Субконто2,, ,,"БК",1,ПризнакПроводки);
			КонецЕсли;	
			
			// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			
			//// Делаем проводки по валоывым доходам/расходам, если установлены соотв. флаги в регистре 
			//Если глДелатьПроводкиПоНалогам(РегВзаиморасчетов,"ВД/ВР") = 1 Тогда
			//	Коммент =  "Валовые расходы";
			//	Если ((РегВзаиморасчетов.КодОперации = ВозвратАвансовойОплаты)
        	//	ИЛИ (РегВзаиморасчетов.КодОперации = ВозвратПостОплаты)) Тогда										
			//		Коммент =  Коммент + " , сторно";
			//	КонецЕсли;
			//	глПроводка(Контекст,"ВР","ВР",РегВзаиморасчетов.СуммаСНДС_НУ-РегВзаиморасчетов.НДС,Коммент,
			//	,Субконто1,?(ПустоеЗначение(Субконто2)=1,РегВзаиморасчетов.Договор,Субконто2),СубконтоВалРасх
			//	,Субконто1,?(ПустоеЗначение(Субконто2)=1,РегВзаиморасчетов.Договор,Субконто2),СубконтоВалРасх, ,,"БК",1,0);
			//КонецЕсли;
			
			// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
			
		КонецЕсли;	
	КонецЦикла;	
		
КонецПроцедуры //ВзаиморасчетыСтрока

//================================
//Затраты на ремонт ОС
Процедура ДвиженияЗатратыНаРемонтОС()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ОсновноеСредство) = 0 Тогда
			Регистр.ЗатратыНаРемонтОС.ПривязыватьСтроку(НомерСтроки);
			Регистр.ЗатратыНаРемонтОС.ОсновноеСредство = ОсновноеСредство;
			Регистр.ЗатратыНаРемонтОС.Сумма = СуммаСНДС;
			Регистр.ЗатратыНаРемонтОС.ДвижениеПриходВыполнить();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура ПроводкиСтрока()
	Если ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Запасы Тогда		
		ДвиженияОстатки();
		ДвиженияПартии();
	ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Затраты Тогда   
		Если Валюта = Гривня Тогда
			глПроводкаПоЗатратам(Контекст,Счет,Счет372,СуммаБезНДС,"Аванс. отчет: "+СокрЛП(Содержание),, Субконто1,Субконто2,Субконто3,
			Сотрудник,,, ,, "АВ");
		Иначе     
	    	СуммаГрн = глПересчет(СуммаБезНДС,Валюта,Гривня,Курс,ДатаДок);
			глПроводкаПоЗатратам(Контекст,Счет,Счет372,СуммаГрн,"Аванс. отчет: "+СокрЛП(Содержание),, Субконто1,Субконто2,Субконто3,
			Сотрудник,,, Валюта,СуммаБезНДС, "АВ");
		КонецЕсли;	      
		Если Счет = СчетПоКоду("231") Тогда
			ДвиженияЗатраты();
		КонецЕсли;
	ИначеЕсли ВидСтроки = Перечисление.ВидыСтрокАвансовогоОтчета.Взаиморасчеты Тогда
		ВзаиморасчетыСтрока();
	Иначе	
		Если Валюта = Гривня Тогда
			глПроводка(Контекст,Счет,Счет372,СуммаБезНДС,"Аванс. отчет: "+СокрЛП(Содержание),, Субконто1,Субконто2,Субконто3,
			Сотрудник,,, ,, "АВ");
		Иначе     
	    	СуммаГрн = глПересчет(СуммаБезНДС,Валюта,Гривня,Курс,ДатаДок);
			глПроводка(Контекст,Счет,Счет372,СуммаГрн,"Аванс. отчет: "+СокрЛП(Содержание),, Субконто1,Субконто2,Субконто3,
			Сотрудник,,, Валюта,СуммаБезНДС, "АВ");
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);
	
	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	РассчитатьШапку();
	ПроводкиШапка();
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
		Если Проводить = Нет Тогда
		    Продолжить;
		КонецЕсли;
		РассчитатьСтроку();
		ПроводкиСтрока();
	КонецЦикла;
	глЗаписатьПроводкиВОперацию(Контекст);  	
	Если Валюта <> Гривня Тогда
		глПереоценкаСчетов(Контекст, глТаблицаСчетов, "АВ");
	КонецЕсли;

	Если ВидОперации = 2 Тогда
		ДвиженияЗатратыНаРемонтОС();
	КонецЕсли;
	
	Операция.СуммаОперации = Итог("СуммаСНДС");
	Операция.Содержание = глФИО(Сотрудник,1)+" "+Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры
