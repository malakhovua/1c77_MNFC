Перем Партия;
Перем СС;
//Перем ПоследСтрокаСКоэф;
//Перем ТЗКоэф;
Перем ДОсн;

// ********************
//
// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(МестоХранения,"Склад");
	глВыбранЛи(ДокОснование,"Документ основание");         
	Возврат глВсеВыбрано;
КонецФункции

Процедура Рассчитать()

	ИтКво = 0;
	
	ДОсн.ВыбратьСтроки();
	Пока ДОсн.ПолучитьСтроку() = 1 Цикл
		ИтКво = ИтКво + ДОсн.Кво * ДОсн.Коэффициент;
	КонецЦикла;

	СебестоимостьПрод = ДОсн.Итог("СуммаБезНДС");
	
	// теперь себестоимость распределим по табличной части
	ИтСуммаБезКоэф = 0;
	ИтМассаСКоэф = 0;
	ИтМассаНормаСКоэф = 0;
	НСтрКоэф1 = 0;
	ПоследСтрокаСКоэф = 0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Коэф = 0 Тогда
			ИтСуммаБезКоэф = ИтСуммаБезКоэф + СуммаБезНДС;
		Иначе
			Если Коэф = 1 Тогда
				НСтрКоэф1 = НомерСтроки;
			КонецЕсли;
			//Вес фактически и по норме с пересчетом на коэфф. распределения цены.
			ИтМассаСКоэф = ИтМассаСКоэф + ВесФакт * Коэф;
			ИтМассаНормаСКоэф = ИтМассаНормаСКоэф + ВесНорма*Коэф;
			
			Если ВесФакт <> 0 Тогда
				ПоследСтрокаСКоэф = НомерСтроки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если НСтрКоэф1 = 0 Тогда
		Сообщить("Нет ТМЦ с коэффициентом 1");
		Возврат;
	КонецЕсли;
	
	ЦенаБазовая = (СебестоимостьПрод - ИтСуммаБезКоэф) / ИтМассаСКоэф;
	ЦенаНормаБазовая = (СебестоимостьПрод - ИтСуммаБезКоэф) / ИтМассаНормаСКоэф;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Коэф > 0 Тогда
			ЦенаБезНДС = Окр(ЦенаБазовая * Коэф,2);
			ЦенаНормаБезНДС = Окр(ЦенаНормаБазовая * Коэф,2);
			СуммаБезНДС = ЦенаНормаБезНДС * ВесФакт;
			СуммаБезНДСНорма = ЦенаНормаБезНДС * ВесНорма;
			СуммаБезНДСРазница = СуммаБезНДС - СуммаБезНДСНорма;
			ЦенаРазницаБезНДС = ЦенаБезНДС - ЦенаНормаБезНДС;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьПартию()
	Если Константа.МетодРасчетаСебестоимостиПродукции.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		//Вместо партии используется пустое значение
		Партия = ПолучитьПустоеЗначение("Документ")
	Иначе   
		//Партию получаем из графика формирования партий
		Док = СоздатьОбъект("Документ.ПартияПродукции");
		
		График = ТМЦ.ГрафикФормированияПартий;
		Если ПустоеЗначение(График) = 1 Тогда
			Партия = ТекущийДокумент();
			глКомментарий("Для продукции: "+ТМЦ.Продукция+" не задан график формирования партий",0,,"!");
			Возврат 1;
		КонецЕсли;
		
		Если (График.ЧастотаФормированияПартий = Перечисление.СпособыФормированияПартий.Ежедневно) или (График.ЧастотаФормированияПартий = Перечисление.СпособыФормированияПартий.Ежемесячно) Тогда			
			Если (График.ЧастотаФормированияПартий = Перечисление.СпособыФормированияПартий.Ежемесячно) Тогда
				ДатаПартии = НачМесяца(ДатаДок);
			Иначе
				ДатаПартии = ДатаДок;
			КонецЕсли;
			
			//Проверяем, была ли партия по такому графику формирования
			Док.ВыбратьДокументы(ДатаПартии, ДатаПартии);
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если (Док.ГрафикФормированияПартий = График) Тогда
					Партия = Док.ТекущийДокумент();
					Прервать;  
				КонецЕсли;
			КонецЦикла;   
			
			//Если не нашли партию,то создаем новую
			Если ПустоеЗначение(Партия) = 1 Тогда
				Док.Новый();
				Док.Фирма = Фирма;
				Док.ДатаДок = ДатаПартии;    
				глУстановитьНомер(Док,1);
				Док.ГрафикФормированияПартий = График;
				Док.АвтоВремяНачалоДня();
				Док.Записать();
				Партия = Док.ТекущийДокумент();
			КонецЕсли;
			ДатаПартии = 0;
			
		Иначе // График произвольный	
			//Ищем ближайший документ с указанным графиком
			Док.ОбратныйПорядок(1);
			Док.ВыбратьДокументы(,ТекущийДокумент());
			Пока Док.ПолучитьДокумент() =1 Цикл
				Если (Док.ГрафикФормированияПартий = График) Тогда
					Партия = Док.ТекущийДокумент();
					Прервать;  
				КонецЕсли;
			КонецЦикла;
			
			Если ПустоеЗначение(Партия) = 1 Тогда 
				глКомментарий("Не найдена партия для продукции: "+ТМЦ+" по графику формирования партий: " + График,0,,"!");
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
		Док = 0;
	КонецЕсли;
	
    Возврат 1;
КонецФункции	

Процедура ДвиженияПартии()
	// теперь нужно оприходовать товары на склад
	// по последней строке где есть себестоимость, чтобы ничего не оставалось в производстве по бухгалтерии
	Подр = ДОсн.Подразделение;
	ВыбратьСтроки();
	Разница = СС - Итог("СуммаБезНДС");
	МХ = ?(глПартионныйУчетПоСкладам = Да, МестоХранения, "");
	//ТЗКоэф = СоздатьОбъект("ТаблицаЗначений");
	//ТЗКоэф.НоваяКолонка("Прод", "Справочник.ТМЦ");
	//ТЗКоэф.НоваяКолонка("Кво", "Число", 15, 3);
	//ТЗКоэф.НоваяКолонка("СуммаБезНДС", "Число", 12, 2);
	
	Пока ПолучитьСтроку() = 1 Цикл
		Если Приходовать <> Нет Тогда			
			Если ВесФакт = 0 Тогда
				Продолжить;
			КонецЕсли;
			Если ПолучитьПартию() = 0 Тогда
				Возврат;
			КонецЕсли;
			
			МестоХраненияП = ?(ПустоеЗначение(СкладП) = 1, МестоХранения, СкладП);
			
			//--- УМК Сандомирский В.Ю. (30.09.14) в остатки тмц в партии ТМЦ для приходования
			ТМПЦПрих = ?(ПустоеЗначение(ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляПрихода.Получить(ДатаДок), ТМЦ);
			
			Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 
					И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 			
				
				ТМЦПартии = ТМПЦПрих; 
				ТМЦОстатки = ТМЦ; 
			Иначе	
				ТМЦПартии 	= ТМПЦПрих; 
				ТМЦОстатки 	= ТМПЦПрих;	
			КонецЕсли;
			
			СтоимостьПартии = ЦенаБезНДС*ВесФакт;
			
			Регистр.Остатки.ДвижениеПриход(Фирма, ТМЦОстатки, МестоХраненияП,, ВесФакт,, 2,1,,);													//--- УМК Сандомирский В.Ю. (30.09.14)
			
			Регистр.Партии.ДвижениеПриход(Фирма, ТМЦПартии.Счет, МХ, ТМЦПартии, "", Партия, Партия, ВесФакт, СтоимостьПартии, 0, ВыпускПродукции);	//--- УМК Сандомирский В.Ю. (30.09.14)
			
			Регистр.ВыпускПродукции.Движение(Фирма, ТМПЦПрих.ВидДеятельности, Подр, , ТМЦ, Партия, ВесФакт, 0, СтоимостьПартии, 0);
			
			глПроводка(Контекст, ТМЦПартии.Счет, СчетПоКоду("231"), СтоимостьПартии, "Приход ПФ", ВесФакт, МестоХранения, ТМЦПартии, ,	//--- УМК Сандомирский В.Ю. (30.09.14)
			ТМЦПартии.ВидДеятельности, Подр, ,,,"ПР");
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДвиженияПроизводственныеЗатраты()
	// нужно списать накопленные затраты
	ТЗС = СоздатьОбъект("ТаблицаЗначений");
	ТЗС.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗС.НоваяКолонка("ВидДеятельности", "Справочник.ВидыДеятельности");	
	ТЗС.НоваяКолонка("Подразделение", "Справочник.Подразделения");	
	ТЗС.НоваяКолонка("ВидЗатрат", "Справочник.ВидыЗатрат");
	ТЗС.НоваяКолонка("Заказ", "Документ");
	ТЗС.НоваяКолонка("Кво", "Число", 15, 3);
	ТЗС.НоваяКолонка("Сумма", "Число", 12, 2);

	РегПЗ = СоздатьОбъект("Регистр.ПроизводственныеЗатраты");
	РегПЗ.ВыбратьДвиженияДокумента(ДокОснование);
	Пока РегПЗ.ПолучитьДвижение() = 1 Цикл
		//Регистр.ПроизводственныеЗатраты.ДвижениеПриход(РегПЗ.Фирма, РегПЗ.ВидДеятельности, РегПЗ.Подразделение, РегПЗ.Продукция, РегПЗ.ВидЗатрат, 
		// РегПЗ.Заказ, РегПЗ.Материал, -РегПЗ.Количество, -РегПЗ.Сумма, -РегПЗ.СуммаДав, РегПЗ.КодОперации);
   		Регистр.ПроизводственныеЗатраты.ДвижениеРасход(РегПЗ.Фирма, РегПЗ.ВидДеятельности, РегПЗ.Подразделение, РегПЗ.Продукция, РегПЗ.ВидЗатрат, 
		 РегПЗ.Заказ, РегПЗ.Материал, РегПЗ.Количество, РегПЗ.Сумма, РегПЗ.СуммаДав,, РегПЗ.КодОперации);

		 // теперь сделаем приходное движение на продукцию и тут же расходное
		ТЗС.НоваяСтрока();
		ТЗС.ТМЦ = РегПЗ.Материал;
		ТЗС.Кво = РегПЗ.Количество;
		ТЗС.Заказ = РегПЗ.Заказ;
		ТЗС.ВидДеятельности = РегПЗ.ВидДеятельности;
		ТЗС.Подразделение = РегПЗ.Подразделение;
		ТЗС.ВидЗатрат = РегПЗ.ВидЗатрат;
		ТЗС.Сумма = РегПЗ.Сумма;
	КонецЦикла;
		
КонецПроцедуры

Процедура ДвижениеЗарплата(пСотрудник, пНачисленоЗП)
	
	Если (ПустоеЗначение(пСотрудник)=1) И (пНачисленоЗП=0) Тогда
		Возврат;
	КонецЕсли;
	
	ВидДеятельности = пСотрудник.ВидДеятельности.Получить(ДатаДок);
	Подразделение = пСотрудник.Подразделение;
	
	// оклад, тариф
	глПроводкаПоЗатратам(Контекст, СчетПоКоду("231"), "661",пНачисленоЗП, "Начисление: оклад, тариф",, 
	ВидДеятельности, Подразделение,
	Константа.ВидЗатратЗарплата,  
	пСотрудник, Начмесяца(ДатаДок),, ,,"ЗП");
	
	Регистр.ПроизводственныеЗатраты.ДвижениеПриход(Фирма, ВидДеятельности, Подразделение,,Константа.ВидЗатратЗарплата,,,,пНачисленоЗП ,,,ОтражениеЗатрат);
	
КонецПроцедуры

Процедура СформироватьСписание()
	ТЗСп = СоздатьОбъект("ТаблицаЗначений");
	ТЗСп.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗСп.НоваяКолонка("Склад", "Справочник.МестаХранения");
	ТЗСп.НоваяКолонка("ДатаСписания", "Дата");
	ТЗСп.НоваяКолонка("КвоСписания", "Число", 15, 3);
	ТЗСп.НоваяКолонка("ДопКвоСписания", "Число", 15, 3);
	ТЗСп.НоваяКолонка("Коэффициент", "Число", 15, 3);
	ТЗСп.НоваяКолонка("Ед", "Справочник.Единицы");
	ТЗСп1 = СоздатьОбъект("ТаблицаЗначений");
	ТЗСп1.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗСп1.НоваяКолонка("КвоСписания", "Число", 15, 3);
	ТЗСп1.НоваяКолонка("ДатаСписания", "Дата");
	ТЗСп1.НоваяКолонка("ДопКвоСписания", "Число", 15, 3);
	ТЗСп1.НоваяКолонка("Коэффициент", "Число", 15, 3);
	ТЗСп1.НоваяКолонка("Ед", "Справочник.Единицы");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ДатаДок < '21.12.2010' Тогда
		    ПроцСпис = ТМЦ.ПроцСписания.Получить(ДатаДок);
		Иначе
			ПроцСпис = ПроцСписания;
		КонецЕсли;
		
		Если ?(ДатаДок < '21.12.2010', ПроцСпис, КвоСписания) <> 0 Тогда
		    ТЗСп.НоваяСтрока();
			ТЗСп.ТМЦ = ТМЦ;
			ТЗСп.ДатаСписания = ДатаДок;
			ТЗСп.Склад = ?(ПустоеЗначение(СкладП) = 1, МестоХранения, СкладП);
			ТЗСп.Ед = ТМЦ.ЕдиницаПоУмолчанию;
			ТЗСп.Коэффициент = ТМЦ.ЕдиницаПоУмолчанию.Коэффициент;			
			ТЗСп.КвоСписания = ?(ДатаДок < '21.12.2010', ВесФакт * (ПроцСпис / 100), КвоСписания);
		КонецЕсли;
	КонецЦикла;
	
	Если (ТЗСп.КоличествоСтрок() = 0) ИЛИ (ТЗСп.Итог("КвоСписания") = 0) Тогда
		НачатьТранзакцию();
		Док = СоздатьОбъект("Документ");
		Док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент());
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Вид() = "СписаниеТМЦ" Тогда
				Док.УдалитьСтроки();
				Док.Записать();
			    Док.Удалить(0);
			КонецЕсли;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Иначе
		ТЗСп.Сортировать("Склад,ТМЦ");
		
		СтарСклад = "";
		ТЗСп.ВыбратьСтроки();
		Пока ТЗСп.ПолучитьСтроку() = 1 Цикл
			Если СтарСклад <> ТЗСп.Склад Тогда
				Если ТЗСп1.КоличествоСтрок() <> 0 Тогда
					глСформироватьСписание(ТекущийДокумент(), ТЗСп1, СтарСклад);
				КонецЕсли;
				ТЗСп1.УдалитьСтроки();
			    СтарСклад = ТЗСп.Склад;
			КонецЕсли;
			
			ТЗСп1.НоваяСтрока();
			ТЗСп1.ТМЦ = ТЗСп.ТМЦ;
			ТЗСп1.ДатаСписания = ДатаДок;
			ТЗСп1.Ед = ТЗСп.Ед;
			ТЗСп1.Коэффициент = ТЗСп.Коэффициент;
			ТЗСп1.КвоСписания = ТЗСп.КвоСписания;
		КонецЦикла;
	
		Если ТЗСп1.КоличествоСтрок() <> 0 Тогда
			глСформироватьСписание(ТекущийДокумент(), ТЗСп1, СтарСклад);
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

Процедура ЗаписатьЦены()
	НачатьТранзакцию();
	КЦен = Константа.ЗакупЦена;
	СпрЦ = СоздатьОбъект("Справочник.Цены");
	СпрЦ.ИспользоватьДату(ДатаДок);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл		
		СпрЦ.ИспользоватьВладельца(ТМЦ);
		Если СпрЦ.НайтиПоРеквизиту("КатегорияЦены", КЦен, 0) = 0 Тогда
			СпрЦ.Новый();
			СпрЦ.Наименование = Строка(КЦен);
			СпрЦ.Владелец = ТМЦ;
			СпрЦ.КатегорияЦены = КЦен;
			СпрЦ.Единица = глВернутьБазовуюЕдиницуТовара(ТМЦ);
			СпрЦ.Записать();
			Ц = 0;
			УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Валюта", Гривня, ДатаДок);
			УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Цена", ЦенаБезНДС, ДатаДок);
		Иначе
			Вал = СпрЦ.Валюта;
			Если (Вал <> Гривня) Тогда
				УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Валюта", Гривня, ДатаДок);
			КонецЕсли;

			Ц = СпрЦ.Цена;
			Если ЦенаБезНДС <> Ц Тогда			
				УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Цена", ЦенаБезНДС, ДатаДок);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

Процедура ОбработкаПроведения(Конт = "")
	ДОсн = ?(ПустоеЗначение(Конт) = 1, ДокОснование, Конт);
	
	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;     

	Рассчитать();
	ДвиженияПартии();
	ДвиженияПроизводственныеЗатраты();
	ДвижениеЗарплата(Сотрудник, НачисленоЗП);
	ДвижениеЗарплата(Сотрудник1, НачисленоЗП1);
	СформироватьСписание();
	ЗаписатьЦены();
	
	Операция.Содержание = Примечание;	
	Операция.Записать();
	
КонецПроцедуры
