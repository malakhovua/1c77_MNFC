Перем ТЗ_Фаршей;
Перем ТЗ_Вес_Кутера; 
Перем ТЗ_КэшФаршей;
Перем СтараяДата;              
Перем НачальнаяДатаДокумента;

Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьСлужебныеТЗ()
	
	//--- тз Фаршей 
	ТЗ_Фаршей = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Фаршей.НоваяКолонка("Фарш","Справочник.ТМЦ");
	ТЗ_Фаршей.НоваяКолонка("Норма","Документ.НормыЗатрат");
	ТЗ_Фаршей.НоваяКолонка("Кво");
	
	//--- тз КэшФаршей 
	ТЗ_КэшФаршей = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_КэшФаршей.НоваяКолонка("Фарш","Справочник.ТМЦ");
	ТЗ_КэшФаршей.НоваяКолонка("КвоФарша",		"Число",14);
	ТЗ_КэшФаршей.НоваяКолонка("КвоИзКутеров",	"Число",14);
		
	//--- Запрос и ТЗ по весу кутеров 
	ТЗ_Вес_Кутера = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Вес_Кутера.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	ТЗ_Вес_Кутера.НоваяКолонка("ВесКутера","Число",10);
	ТЗ_Вес_Кутера.НоваяКолонка("ВыходБезПотерь","Число",10);
	ТЗ_Вес_Кутера.НоваяКолонка("Норма","Документ.НормыЗатрат");
 	
	Если глПрямыеЗапросы = 1 Тогда
		
		рс = СоздатьОбъект("ODBCRecordset");
		ТекстЗапроса = "
		|SELECT $НормыЗатрат.Продукция [Продукция $Справочник.ТМЦ]
		|	, $НормыЗатрат.КвоПродукции КвоПродукции
		|	, ТМЦ.ID [ТМЦ $Справочник.ТМЦ]
		|	, $ПоследнееЗначение.ТМЦ.ПроцПотерь(ТМЦ.ID, :ДатаДок) ПроцПотерь
		|	, НормыЗатрат.IDDOC [ТекущийДокумент $Документ.НормыЗатрат]
		|FROM $Документ.НормыЗатрат AS НормыЗатрат
		|	INNER JOIN _1SJOURN AS Журнал ON НормыЗатрат.IDDOC = Журнал.IDDOC
		|	INNER JOIN $Справочник.ТМЦ AS ТМЦ ON $НормыЗатрат.Продукция = ТМЦ.ID
		|WHERE ($НормыЗатрат.фДляЗаказа = 1)
		|	AND ((Журнал.CLOSED & 1) = 1)
		|ORDER BY НормыЗатрат.IDDOC
		|";
		рс.УстановитьТекстовыйПараметр("ДатаДок", ДатаДок);
		ВыборкаНорм = рс.ВыполнитьИнструкцию(ТекстЗапроса);
		ВыборкаНорм.ВыбратьСтроки();
		
		Пока ВыборкаНорм.ПолучитьСтроку() = 1 Цикл
			
			ЭнСтрока 	= "";
			ЭнСтолбец 	= "";
			
			Если ТЗ_Вес_Кутера.НайтиЗначение(ВыборкаНорм.Продукция,ЭнСтрока,ЭнСтолбец) <> 1 Тогда
				ТЗ_Вес_Кутера.НоваяСтрока();
				ТЗ_Вес_Кутера.ТМЦ 			= ВыборкаНорм.Продукция;
				ТЗ_Вес_Кутера.ВесКутера 	= ВыборкаНорм.КвоПродукции - (ВыборкаНорм.КвоПродукции * ВыборкаНорм.ПроцПотерь/100);
				ТЗ_Вес_Кутера.ВыходБезПотерь= ВыборкаНорм.КвоПродукции;
				ТЗ_Вес_Кутера.Норма			= ВыборкаНорм.ТекущийДокумент;
			КонецЕсли;
			
			ЭнСтрока_ 	= "";
			ЭнСтолбец_ 	= "";
			
			Если ТЗ_Фаршей.НайтиЗначение(ВыборкаНорм.Продукция,ЭнСтрока_,ЭнСтолбец_) <> 1 Тогда	
				ТЗ_Фаршей.НоваяСтрока();
				ТЗ_Фаршей.Фарш 	= ВыборкаНорм.Продукция;;
				ТЗ_Фаршей.Кво 	= ВыборкаНорм.КвоПродукции;
				ТЗ_Фаршей.Норма = ВыборкаНорм.ТекущийДокумент;		
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе //Объектные методы
		
		ВыборкаНорм = СоздатьОбъект("Документ.НормыЗатрат");
		ВыборкаНорм.ОбратныйПорядок();
		ВыборкаНорм.УстановитьФильтр(1,0);
		ВыборкаНорм.ВыбратьДокументы();
		
		Пока ВыборкаНорм.ПолучитьДокумент() = 1 Цикл
			
			Если ВыборкаНорм.фДляЗаказа <> 1 Тогда
				Продолжить;
			КонецЕсли;
			
			ЭнСтрока 	= "";
			ЭнСтолбец 	= "";
			
			Если ТЗ_Вес_Кутера.НайтиЗначение(ВыборкаНорм.Продукция,ЭнСтрока,ЭнСтолбец) <> 1 Тогда
				ТЗ_Вес_Кутера.НоваяСтрока();
				ТЗ_Вес_Кутера.ТМЦ 			= ВыборкаНорм.Продукция;
				ТЗ_Вес_Кутера.ВесКутера 	= ВыборкаНорм.КвоПродукции - (ВыборкаНорм.КвоПродукции * ВыборкаНорм.Продукция.ПроцПотерь.Получить(ДатаДок)/100);
				ТЗ_Вес_Кутера.ВыходБезПотерь= ВыборкаНорм.КвоПродукции;
				ТЗ_Вес_Кутера.Норма			= ВыборкаНорм.ТекущийДокумент();
			КонецЕсли;
			
			ЭнСтрока_ 	= "";
			ЭнСтолбец_ 	= "";
			
			Если ТЗ_Фаршей.НайтиЗначение(ВыборкаНорм.Продукция,ЭнСтрока_,ЭнСтолбец_) <> 1 Тогда	
				ТЗ_Фаршей.НоваяСтрока();
				ТЗ_Фаршей.Фарш 	= ВыборкаНорм.Продукция;;
				ТЗ_Фаршей.Кво 	= ВыборкаНорм.КвоПродукции;
				ТЗ_Фаршей.Норма = ВыборкаНорм.ТекущийДокумент();		
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьСлужебныеТЗ

// ==============================================================
Процедура ПриНачалеВыбораЗначения(Идент, Флаг)
	Если (Идент = "Фарш") Тогда
		
		Флаг = 0;
		
		глВыборИзЗаказа = 2; //--- попадаем в фарш
				
		Справ=СоздатьОбъект("Справочник.ТМЦ");
		Справ.НайтиЭлемент(Фарш);
		Справ.ВыборГруппы(0);
		ФлВвода=Справ.Выбрать("Выберите фарш","ДляВыбора");
		Если ФлВвода=1 Тогда
			ТекФарш=Справ.ТекущийЭлемент();
		КонецЕсли;
		
		Если ПустоеЗначение(ТекФарш) <> 1 Тогда
			
			Фарш = ТекФарш;
			
	
			ТекСтр 	= "";
			ТекКол 	= "";
			Если ТЗ_Фаршей.НайтиЗначение(ТекФарш,ТекСтр,ТекКол) = 1 Тогда					
				ТЗ_Фаршей.ПолучитьСтрокуПоНомеру(ТекСтр);		
				Норма = ТЗ_Фаршей.Норма;
				ТекФарш = ТЗ_Фаршей.Фарш;
				ТекСтр 	= "";
				ТекКол 	= "";
				ТекКвоИзКутеров = 0;
				ТекКгФарша		= 0;
				Если ТЗ_КэшФаршей.НайтиЗначение(ТекФарш,ТекСтр,ТекСтр) = 1 Тогда
					ТЗ_КэшФаршей.ПолучитьСтрокуПоНомеру(ТекСтр);
					ТекКвоИзКутеров = ТЗ_КэшФаршей.КвоИзКутеров;
					ТекКгФарша      = ТЗ_КэшФаршей.КвоФарша;
				КонецЕсли;	
				
				Если ВвестиЧисло(ТекКвоИзКутеров,"Введите из КУТЕРОВ Фарша:",14,0) = 1 Тогда
					КвоФаршаИзКутеров = ТекКвоИзКутеров;		
				КонецЕсли;
				
				Если ТекКгФарша = 0 Тогда
					ТекКгФарша = ТекКвоИзКутеров / 100 * ТЗ_Фаршей.Кво;
				КонецЕсли;
				
				Если ВвестиЧисло(ТекКгФарша,"Введите число КГ Фарша:",14,0) = 1 Тогда
						
					ТекСтр 	= "";
					ТекКол 	= "";
					Если ТЗ_КэшФаршей.НайтиЗначение(ТекФарш,ТекСтр,ТекСтр) = 1 Тогда
						ТЗ_КэшФаршей.ПолучитьСтрокуПоНомеру(ТекСтр);
						ТЗ_КэшФаршей.КвоФарша = ТЗ_КэшФаршей.КвоФарша - ТекКгФарша;	
					Иначе
						ТЗ_КэшФаршей.НоваяСтрока();
						ТЗ_КэшФаршей.Фарш = ТекФарш;
						ТЗ_КэшФаршей.КвоИзКутеров = ТекКвоИзКутеров;
						ТЗ_КэшФаршей.КвоФарша = (ТекКвоИзКутеров / 100 * ТЗ_Фаршей.Кво )- ТекКгФарша;		
					КонецЕсли; 
					
					КвоФарша = ТекКгФарша;
					ПроцПотерь    			= Продукция.ПроцПотерь.Получить(ДатаДок);
					КвоКг					= КвоФарша * ((100-ПроцПотерь)/100);
					
				КонецЕсли;
					
			Иначе //--- создаем первую строку с фаршами
				
				Сообщить("Внимание !!! , нормы фарша " + Фарш + " не заданы !" , "!!!");
				
			КонецЕсли;	
				
		КонецЕсли;
		
	ИначеЕсли Идент = "Норма" Тогда
		Флаг = 0;
		Спис = СоздатьОбъект("СписокЗначений");
		Спис.ДобавитьЗначение(Продукция, "ТМЦ");
		Спис.ДобавитьЗначение(1, "ВидВыбора");
		ОткрытьФормуМодально("Журнал.ПолныйЖурнал.ДляПросмотраНорм", Спис);		
		Если ТипЗначенияСтр(Спис) = "Документ" Тогда
			Норма = Спис;
			//ИзмКвоКут();
			Если Норма.Действует = 0 Тогда
			    Предупреждение("Данные нормы затрат не действуют");
				Норма = "";
			КонецЕсли;		
			
			Если Норма.фДляЗаказа = 0 Тогда
			    Предупреждение("Данные нормы затрат не для заданий на производство");
				Норма = "";
			КонецЕсли;		
			
		КонецЕсли;
			
	КонецЕсли;
	
	//--- очистка всех нижних фаршей
	ТекНомерСтроки = НомерСтроки;
	ТекФарш = Фарш;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если НомерСтроки > ТекНомерСтроки Тогда
			Если Фарш = ТекФарш Тогда
				КвоФарша = 0;
				КвоФаршаИзКутеров = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//======================================================================
Процедура ПоказатьСостояниеДляЗадания()
	Таб = СоздатьОбъект("Таблица");
	ИмяФайла = КаталогИБ() + СокрЛП("\zad_pr\") + СокрЛП(НомерДок) + "_" + 
	СтрЗаменить(Строка(ДатаДок), ".", "")+".mxl";
	Таб.Открыть(ИмяФайла);
	Таб.Показать();	
КонецПроцедуры // ПоказатьСостояниеДляЗадания

//====================================================================== 
Процедура ПлюсДата() 
	
	ДатаВыпуска = ДатаДок + ВыбДней;
	
КонецПроцедуры // ПлюсДата()

//====================================================================== //--- УМК Сандомирский В.Ю. (03.06.15)
Функция Печать()

	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");	
	Таб.ИсходнаяТаблица("НаПроизводство"); 
	ТекстПримечание = "ИЗ ФАРША";
	Таб.ВывестиСекцию("Шапка|Основная");
	//Если Итог("КвоФарша") > 0 Тогда
	//	Таб.ПрисоединитьСекцию("Шапка|Фарш");
	//КонецЕсли;	
	Таб.ПовторятьПриПечатиСтроки(4, 4); 	
	СпрДвойник = СоздатьОбъект("Справочник.УМК_ДвойникГруппыТМЦ");	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл		
		Если (КвоКутеров <> 0) ИЛИ (КвоФаршаИзКутеров <> 0) Тогда
			Ном			 		= НомерСтроки;
			ПечПродукция		= ?(ПустоеЗначение(Фарш) = 1, СокрЛП(Строка(Продукция)), СокрЛП(Строка(Фарш)));
			ПечКвоКутеров		= ?(КвоКутеров = 0, КвоФаршаИзКутеров, КвоКутеров);
			ПечФарш				= Фарш;
			ПечФаршИзКутеров	= ?(КвоФаршаИзКутеров=0,"",КвоФаршаИзКутеров);
			ПечКвоФарша			= ?(КвоФарша=0,"",КвоФарша);
			//ПечПримечаниеСтроки = СокрЛП(ПримечаниеСтроки);	
			ПечПримечаниеСтроки = "";	
			ПечКвоБатонов = "";
			Если ПустоеЗначение(Продукция.ТМЦСТакимЖеФаршем) = 0 Тогда
				ПечПримечаниеСтроки = ПечПримечаниеСтроки + ?(ПечПримечаниеСтроки <> "", "
				|", "") + Строка(Продукция.ТМЦСТакимЖеФаршем);
			КонецЕсли;
			Если СпрДвойник.НайтиПоКоду(Продукция.Родитель.Код) = 1 Тогда
				ПечГруппаЗаказник = СокрЛП(СпрДвойник.Наименование);
			КонецЕсли;	
			Таб.ВывестиСекцию("Строка|Основная");
		КонецЕсли;
		//Если Итог("КвоФарша") > 0 Тогда
		//	Таб.ПрисоединитьСекцию("Строка|Фарш");
		//КонецЕсли;		
	КонецЦикла;	
	
	//Если Итог("КвоФарша") > 0 Тогда
	//	Таб.ПараметрыСтраницы(2,,,5,5,5,5,4,,1); 
	//Иначе
	    Таб.ПараметрыСтраницы(1,,,5,5,5,5,4,,1); 
	//КонецЕсли;	
		
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: ЗАДАНИЕ на производство","");
		
КонецФункции

Функция ПечатьСоСхемами()
	Таб = СоздатьОбъект("Таблица");
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	ТЗ.НоваяКолонка("Схема");
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ТЗ.Схема = ТЗ.Продукция.СхемаРасчетаЗП.Получить(ДатаДок);
	КонецЦикла;
	ТЗ.Сортировать("Схема, Продукция");
	СтарСх = "";
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");	
	Таб.ИсходнаяТаблица("НаПроизводство"); 
	ТекстПримечание = "Примечание";
	СпрДвойник = СоздатьОбъект("Справочник.УМК_ДвойникГруппыТМЦ");
	Ном = 1;	
	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если ТЗ.Схема <> СтарСх Тогда
			Если СтарСх <> "" Тогда
				Таб.ВывестиСекцию("Разделитель|Основная");
				Если Итог("КвоФарша") > 0 Тогда
					Таб.ПрисоединитьСекцию("Разделитель|Фарш");					
				КонецЕсли;
			КонецЕсли;
			
			Таб.ВывестиСекцию("ШапкаСхема|Основная");			
			Если Итог("КвоФарша") > 0 Тогда
				Таб.ПрисоединитьСекцию("ШапкаСхема|Фарш");
			КонецЕсли;

			СтарСх = ТЗ.Схема;
			Ном = 1;
		КонецЕсли;
		
		ПечПродукция		= СокрЛП(Строка(ТЗ.Продукция));
		ПечКвоБатонов		= ТЗ.Продукция.КвоБатоновНаВешале;	
		ПечКвоКутеров		= ?(ТЗ.КвоКутеров=0,"",ТЗ.КвоКутеров);
		ПечФарш				= ТЗ.Фарш;
		ПечФаршИзКутеров	= ?(ТЗ.КвоФаршаИзКутеров=0,"",ТЗ.КвоФаршаИзКутеров);
		ПечКвоФарша			= ?(ТЗ.КвоФарша=0,"",ТЗ.КвоФарша);
		ПечПримечаниеСтроки = ТЗ.ПримечаниеСтроки;	
		Если СпрДвойник.НайтиПоКоду(ТЗ.Продукция.Родитель.Код) = 1 Тогда
			ПечГруппаЗаказник = СокрЛП(СпрДвойник.Наименование);
		КонецЕсли;	
		Таб.ВывестиСекцию("Строка|Основная");
		Если Итог("КвоФарша") > 0 Тогда
			Таб.ПрисоединитьСекцию("Строка|Фарш");
		КонецЕсли;
		Ном = Ном + 1;
	КонецЦикла;
	
	//Таб.ПовторятьПриПечатиСтроки(8,8);
	//Если Итог("КвоФарша") > 0 Тогда
	//	Таб.ПараметрыСтраницы(2,,,5,5,5,5,4,,1); 
	//Иначе
	   // Таб.ПараметрыСтраницы(1,,,5,5,5,5,4,,1); 
	//КонецЕсли;	
		
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: ЗАДАНИЕ на производство","");
		
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю. (03.06.15)
Функция ПечатьВесовщикам(Копчености = 0)	
	Если КоличествоСтрок() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ПолучитьСтрокуПоНомеру(1);
	Если ПустоеЗначение(Продукция) = 1 Тогда
		Возврат "";
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "");	
	Таб.ИсходнаяТаблица("БланкВесовщикам"); 
	
	// --- ОпределяемВаренкаКапченка 
	ТекКодРодитель = Продукция.Родитель.Код;
	ВидПечатнойФормыДляЗаданияНаПроизводство = "";
	СпрДвойник = СоздатьОбъект("Справочник.УМК_ДвойникГруппыТМЦ");	
	Если СпрДвойник.НайтиПоКоду(ТекКодРодитель,0) = 1 Тогда
		ВидПечатнойФормыДляЗаданияНаПроизводство 	= СпрДвойник.ВидПечатнойФормыДляЗаданияНаПроизводство;
	Иначе
		Возврат "";
	КонецЕсли;

	Если Копчености = 0 Тогда
		ТекстЗаголовок = "ЗАДАНИЕ № " + НомерДок + "    Дата задания " + ДатаДок + "     Дата выпуска " + ДатаВыпуска + "     " + СокрЛП(Примечание);
		Таб.ВывестиСекцию("Шапка|ЗаменаСырья");
		ТекстЗаголовок = "";
		МаксКвоСтрок = 8;
		Если ВидПечатнойФормыДляЗаданияНаПроизводство = Перечисление.УМК_ФормыПечатиВесовщикам.Варенка Тогда // --- ММО	
			МаксКвоСтрок = 9;
			Таб.ПрисоединитьСекцию("Шапка|ММО");	
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Шапка|ОбщийПром"); //--- ОбщийПром
		Если ВидПечатнойФормыДляЗаданияНаПроизводство = Перечисление.УМК_ФормыПечатиВесовщикам.Варенка Тогда // --- ПромФарша	
			Таб.ПрисоединитьСекцию("Шапка|ПромФарша");	
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Шапка|НаименованиеКолбас"); //--- НаименованиеКолбас
	Иначе
		ТекстЗаголовок = "ЗАДАНИЕ № " + НомерДок + " Дата задания " + ДатаДок + "  Дата выпуска " + ДатаВыпуска + " " + СокрЛП(Примечание) + " Форма копч.";
		МаксКвоСтрок = 11;
		Таб.ВывестиСекцию("Шапка|НаименованиеКолбас"); //--- НаименованиеКолбас
		Таб.Область(1, 1).Текст = ТекстЗаголовок;
	КонецЕсли;	
	
	Таб.ПрисоединитьСекцию("Шапка|КвоКутеров" + ?(Копчености = 0, "", "<")); 		//--- КвоКутеров 
	Таб.ПрисоединитьСекцию("Шапка|Дата"); 		//--- Дата
	Таб.Область(1, 1, 1, Таб.ШиринаТаблицы()).ГоризонтальноеПоложение(1+4);
	
	Таб.ПовторятьПриПечатиСтроки(1, 4); 
	ГруппаСырье = СоздатьОбъект("Справочник.ТМЦ");
	ГруппаСырье.НайтиПоНаименованию("1Сырье", 0, 1);
	
	СпрДвойник = СоздатьОбъект("Справочник.УМК_ДвойникГруппыТМЦ");
	ТПФ = СоздатьОбъект("ТаблицаЗначений");
	ТПФ.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");	
	ТПФ.НоваяКолонка("Кво", "Число", 15, 3);
	ТЗФ = СоздатьОбъект("ТаблицаЗначений");
	ТЗФ.НоваяКолонка("ТМЦ", "Строка");	


	Таб.ПараметрыСтраницы(2,,,5,5,5,5,4,,1); 
	КвоСтрок = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		КвоСтрок = КвоСтрок + ?(КвоКутеров > 1000, 2, 1);
		Если КвоСтрок > МаксКвоСтрок Тогда
			Таб.НоваяСтраница();
			КвоСтрок = ?(КвоКутеров > 1000, 2, 1);
		КонецЕсли;
		//КвоС = Таб.КоличествоСтраниц();
		//ВТабл = Таб.ВысотаТаблицы();

		Ном			 		= НомерСтроки;
		ПечПродукция		= СокрЛП(Строка(Продукция)) + глПравильныйСимволПереноса + ?(Копчености = 0, СокрЛП(ПримечаниеСтроки), Продукция.СхемаРасчетаЗП.Получить(ДатаДок).Примечание);
		ТекстФарш = "";
		Если Копчености = 0 Тогда
			ТекстФарш = ?(Фарш.Выбран() = 1, "Из фарша: " + Строка(Фарш), "");
		КонецЕсли;
		
		Если (КвоКутеров = 0) И (КвоФарша <> 0) Тогда
			ПечКвоКутеров		= ?(КвоФаршаИзКутеров = 0,"", Строка(КвоФаршаИзКутеров));
			ПечКГФарша =  Строка(КвоФарша) + " кг.";
		Иначе
			ПечКвоКутеров		= ?(КвоКутеров = 0, "", КвоКутеров);
			ПечКГФарша = "";
		КонецЕсли;
		ПечФарш				= Фарш;
		ПечФаршИзКутеров	= ?(КвоФаршаИзКутеров=0,"",КвоФаршаИзКутеров);
		ПечКвоФарша			= ?(КвоФарша=0,"",КвоФарша);
		ПечПримечаниеСтроки = ПримечаниеСтроки;
		
		Если СпрДвойник.НайтиПоКоду(Продукция.Родитель.Код) = 1 Тогда
			ПечГруппаЗаказник = СокрЛП(СпрДвойник.Наименование);
		КонецЕсли;
		
		Если Копчености = 0 Тогда
			Таб.ВывестиСекцию("Строка|ЗаменаСырья");
			Если ВидПечатнойФормыДляЗаданияНаПроизводство = Перечисление.УМК_ФормыПечатиВесовщикам.Варенка Тогда // --- ММО	
				Таб.ПрисоединитьСекцию("Строка|ММО");	
			КонецЕсли;
			Таб.ПрисоединитьСекцию("Строка|ОбщийПром"); //--- ОбщийПром
			Если ВидПечатнойФормыДляЗаданияНаПроизводство = Перечисление.УМК_ФормыПечатиВесовщикам.Варенка Тогда // --- ПромФарша	
				Таб.ПрисоединитьСекцию("Строка|ПромФарша");	
			КонецЕсли;
	
			Таб.ПрисоединитьСекцию("Строка|НаименованиеКолбас"); //--- НаименованиеКолбас
		Иначе
			ТекстФарш = "";
		КонецЕсли;
		Если ТекстФарш = "" Тогда
			ТекстФарш = Продукция.ТМЦСТакимЖеФаршем;
		КонецЕсли;		
		
		ТЗФ.УдалитьСтроки();
		КвоСырья = 0;
		Норма.ВыбратьСтроки();
		Пока Норма.ПолучитьСтроку() = 1 Цикл
			Если Копчености = 0 Тогда
				Если Норма.Элемент.ПринадлежитГруппе(ГруппаСырье) = 0 Тогда
					Если Норма.Элемент.НеУчитыватьВОбщемВесе = 0 Тогда
					    КвоСырья = КвоСырья + Норма.Кво * Норма.Коэффициент;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если Норма.Элемент.ПринадлежитГруппе(ГруппаСырье) = 1 Тогда
					Если (Норма.Элемент.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) ИЛИ (Норма.Элемент.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция) Тогда
						ТПФ.НоваяСтрока();
						ТПФ.ТМЦ = Норма.Элемент;
						ТПФ.Кво = (Норма.Кво * Норма.Коэффициент * КвоКутеров) / 100;
					Иначе
						ТЗФ.НоваяСтрока();
						ТЗФ.ТМЦ = Норма.Элемент.ПолнНаименование;
					КонецЕсли;				    
				КонецЕсли;				
			КонецЕсли;
		КонецЦикла;

		Если Копчености = 0 Тогда
			ПоложитьЗамес = "";
			КвоК = ?(КвоКутеров = 0, КвоФаршаИзКутеров, КвоКутеров);
			КвоСырья = Окр(КвоСырья * КвоК / 100, 2);
			Если КвоК <> 0 Тогда
				Замес = Продукция.Замес.Получить(ДатаДок);
				Замес = ?(Замес = 0, Продукция.Замес.Получить(ТекущаяДата()), Замес);
				Если Замес <> 0 Тогда
					Если Замес < КвоК Тогда
						НЧастьЗамеса = Замес;
						КЧастьЗамеса = КвоК % Замес;
					Иначе
						НЧастьЗамеса = КвоК;
						КЧастьЗамеса = 0;
					КонецЕсли;
					ПоложитьЗамес = Строка(Окр(КвоСырья * (НЧастьЗамеса / КвоК), 2)) + " на " + НЧастьЗамеса + 
						?(КЧастьЗамеса = 0, "", ", " + Окр(КвоСырья * (КЧастьЗамеса / КвоК), 2) + " на " + КЧастьЗамеса);
				Иначе
					ПоложитьЗамес = "";
				КонецЕсли;
			КонецЕсли;
			ПоложитьЗамес = "(" + ПоложитьЗамес + ")";
			Если КвоФаршаПродукция <> 0 Тогда
				ПоложитьЗамес = ПоложитьЗамес + ?(ПоложитьЗамес = "()", "", "
				|") + "(" + Строка(КвоФаршаПродукция) + ")";
			КонецЕсли;
			
			
			Таб.ПрисоединитьСекцию("Строка|КвоКутеров"); 		//--- КвоКутеров 
			Таб.ПрисоединитьСекцию("Строка|Дата"); 		//--- Дата
		
			Если КвоКутеров > 1000 Тогда				
				Таб.ВывестиСекцию("ДопСтрока|ЗаменаСырья");
				Если ВидПечатнойФормыДляЗаданияНаПроизводство = Перечисление.УМК_ФормыПечатиВесовщикам.Варенка Тогда // --- ММО	
					Таб.ПрисоединитьСекцию("ДопСтрока|ММО");	
				КонецЕсли;
				Таб.ПрисоединитьСекцию("ДопСтрока|ОбщийПром"); //--- ОбщийПром
				Если ВидПечатнойФормыДляЗаданияНаПроизводство = Перечисление.УМК_ФормыПечатиВесовщикам.Варенка Тогда // --- ПромФарша	
					Таб.ПрисоединитьСекцию("ДопСтрока|ПромФарша");	
				КонецЕсли;
			
				Таб.ПрисоединитьСекцию("ДопСтрока|НаименованиеКолбас"); //--- НаименованиеКолбас
				Таб.ПрисоединитьСекцию("ДопСтрока|КвоКутеров"); 		//--- КвоКутеров 
				Таб.ПрисоединитьСекцию("ДопСтрока|Дата"); 		//--- Дата						
			КонецЕсли;
		Иначе
			Для Инд = ТЗФ.КоличествоСтрок() + 1 По 4 Цикл
				ТЗФ.НоваяСтрока();
			КонецЦикла;
			
			Таб.ВывестиСекцию("СтрокаКоп|НаименованиеКолбас"); //--- НаименованиеКолбас
			Таб.ПрисоединитьСекцию("СтрокаКоп|КвоКутеров<"); 		//--- КвоКутеров 
			Таб.ПрисоединитьСекцию("СтрокаКоп|Дата"); 		//--- Дата				
		КонецЕсли;
	КонецЦикла;	
	
	Если Копчености = 0 Тогда
		Таб.ВывестиСекцию("Дно|ЗаменаСырья");
		Если ВидПечатнойФормыДляЗаданияНаПроизводство = Перечисление.УМК_ФормыПечатиВесовщикам.Варенка Тогда // --- ММО	
			Таб.ПрисоединитьСекцию("Дно|ММО");	
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Дно|ОбщийПром"); //--- ОбщийПром
		Если ВидПечатнойФормыДляЗаданияНаПроизводство = Перечисление.УМК_ФормыПечатиВесовщикам.Варенка Тогда // --- ПромФарша	
			Таб.ПрисоединитьСекцию("Дно|ПромФарша");	
		КонецЕсли;
	
		Таб.ПрисоединитьСекцию("Дно|НаименованиеКолбас"); //--- НаименованиеКолбас
		Таб.ПрисоединитьСекцию("Дно|КвоКутеров"); 		//--- КвоКутеров 
		Таб.ПрисоединитьСекцию("Дно|Дата"); 		//--- Дата		
	Иначе
		ТекстФарш = "";		
		Если ТПФ.КоличествоСтрок() > 0 Тогда
			Таб.ВывестиСекцию("Дно|НаименованиеКолбас");
		КонецЕсли;
		ТПФ.Свернуть("ТМЦ", "Кво");
		ТПФ.ВыбратьСтроки();
		Пока ТПФ.ПолучитьСтроку() = 1 Цикл
			КвоСтрок = КвоСтрок + 1;
			Если КвоСтрок > МаксКвоСтрок Тогда
				Таб.НоваяСтраница();
				КвоСтрок = 1;
			КонецЕсли;			
			ПечГруппаЗаказник = "П/Ф";
			ПечПродукция = ТПФ.ТМЦ;
			ПечКвоКутеров = ТПФ.Кво;
			
			Таб.ВывестиСекцию("Строка|НаименованиеКолбас"); //--- НаименованиеКолбас
			Таб.ПрисоединитьСекцию("Строка|КвоКутеров<"); 		//--- КвоКутеров 
			Таб.ПрисоединитьСекцию("Строка|Дата"); 		//--- Дата			
			Таб.Область(Таб.ВысотаТаблицы(), 4, Таб.ВысотаТаблицы(), 5).РамкаСнизу(3);
		КонецЦикла;		
		//Таб.ВывестиСекцию("Дно|НаименованиеКолбас"); //--- НаименованиеКолбас		
	КонецЕсли;

	Таб.ПараметрыСтраницы(2 - Копчености,,,5,5,5,5,4,,1); 	
	//	
	Таб.Опции(0,0,,);
	Таб.ТолькоПросмотр(1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);	
	
	Таб.Показать("ПЕЧАТЬ: ЗАДАНИЕ на производство","");
		
КонецФункции

//======================================================================
Процедура ИзмНорма()
	
	//Если ПустоеЗначение(Норма) <> 1 Тогда
	//
	//	Фарш 				= Норма.Продукция;
	//	КвоФаршаИзКутеров 	= Норма.КвоПродукции;
	//	КвоКутеров			= 0;
	//
	//КонецЕсли;
	
КонецПроцедуры // ИзмНорма

//======================================================================
Процедура ИзмКвоКутеров()
	
	Если КвоКутеров > 0 Тогда
		
		ТекСтр 	= "";
		ТекКол 	= "";
		Если ТЗ_Вес_Кутера.НайтиЗначение(Продукция,ТекСтр,ТекКол) = 1 Тогда
			
			ТЗ_Вес_Кутера.ПолучитьСтрокуПоНомеру(ТекСтр);
			
			ВесКутера	= ТЗ_Вес_Кутера.ВесКутера;	
			КвоКг 		= КвоКутеров / 100 * ВесКутера;	
			
			КвоФарша	= 0;
			
		Иначе
			Сообщить("Внимание !!! , нормы продукции  " + Продукция + " не заданы !" , "!!!");
		КонецЕсли;
		
		
		
	КонецЕсли;
	
КонецПроцедуры // ИзмКвоКутеров()

Процедура ЗаписатьДопДанные()
	ТЗТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗТМЦ);
	ТЗТМЦ.Сортировать("Фарш,КвоФарша-,КвоКутеров-");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Норма) <> 1 Тогда			
			РазмерКутераФарша = Норма.КвоПродукции;
			КвоФаршаПродукция = 0;
			Если КвоКутеров = 0 Тогда
				// поищем родителя
				Стр = 0;
				//Если ТЗТМЦ.НайтиЗначение(Фарш, Стр, "Фарш") = 1 Тогда
				//	КвоФаршаПродукция = Макс(ТЗТМЦ.ПолучитьЗначение(Стр, "КвоКутеров"), ТЗТМЦ.ПолучитьЗначение(Стр, "КвоФаршаИзКутеров")) * РазмерКутераФарша / 100;
				//КонецЕсли;
				КвоФаршаПродукция = КвоФарша * РазмерКутераФарша / 100;
			Иначе
				КвоФаршаПродукция = КвоКутеров * РазмерКутераФарша / 100;
			КонецЕсли;
			
			ПроцентПотерьПродукция 			= Продукция.ПроцПотерь.Получить(ДатаДок);
			ПоловинаПроцентПотерьПродукция 	= ПроцентПотерьПродукция / 2;
			ВесДляЭкспедиции				= КвоФаршаПродукция * (100 - ПроцентПотерьПродукция / 2) /100;			
		КонецЕсли;
	КонецЦикла;			
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()
	ЗаполнитьСлужебныеТЗ();
	Форма.ИспользоватьСлой("Общий,Основной", 2);	
	СтараяДата = ДатаДок;
	НачальнаяДатаДокумента = ДатаДок;
	ПриЗаписиПерепроводить(1);
	Если ТипЗначенияСтр(Форма.Параметр) = "Число" Тогда
		Если Форма.Параметр = 1 Тогда
			ЗаписатьДопДанные();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриОткрытии

//======================================================================
Функция УстДоступность() 
	
	Если ПустоеЗначение(Фарш) <> 1 Тогда //--- закрываем кутера
		Форма.КвоКутеров.Доступность(0);
	Иначе
		Форма.КвоКутеров.Доступность(1);
	КонецЕсли;
	
	Если КвоКутеров > 0 Тогда //--- закрываем всё про фарши
		Форма.Фарш.Доступность(0);
		//Форма.Норма.Доступность(0);
	Иначе
		Форма.Фарш.Доступность(1);
		//Форма.Норма.Доступность(1);		
	КонецЕсли;

	Возврат "";
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю. (09.07.15)
Процедура ИзмПродукция()
	
	Если ПустоеЗначение(Продукция) <> 1 Тогда
		СпрДвойник = СоздатьОбъект("Справочник.УМК_ДвойникГруппыТМЦ");	
		Если СпрДвойник.НайтиПоКоду(Продукция.Родитель.Код,0) = 1 Тогда
			ДвойникГруппТМЦСтроки =  СпрДвойник.ТекущийЭлемент();
			ПримечаниеСтроки = Продукция.Маркировка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ИзмПродукция()

//====================================================================== //--- УМК Сандомирский В.Ю. (09.07.15)
Процедура ПриЗаписи()
	Если ТекущийДокумент().Выбран() = 0 Тогда
		ВремяСоздания = ТекущееВремя();
		ДатаСоздания = ТекущаяДата();
	КонецЕсли;
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ИзмПродукция();
	КонецЦикла;
	
	ТЗ_ИменаЗаказник = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ_ИменаЗаказник);
	ТЗ_ИменаЗаказник.Свернуть("ДвойникГруппТМЦСтроки","");
	ДвойникиГруппТМЦ = "";
	ТЗ_ИменаЗаказник.ВыбратьСтроки();
	Пока ТЗ_ИменаЗаказник.ПолучитьСтроку() = 1 Цикл
		ДвойникиГруппТМЦ = ДвойникиГруппТМЦ + СокрЛП(Строка(ТЗ_ИменаЗаказник.ДвойникГруппТМЦСтроки)) + ",";
	КонецЦикла;

	ТВоз = СоздатьОбъект("ТаблицаЗначений");
	глСводПоНормам(0, Контекст, "Норма", 1, ТВоз);
	РегО = СоздатьОбъект("Регистр.Остатки");
	Спис = СоздатьОбъект("СписокЗначений");
	ТВоз.Выгрузить(Спис, , , "ТМЦ");
	ТВоз.ВыбратьСтроки();
	Пока ТВоз.ПолучитьСтроку() = 1 Цикл
		ТСп = ТВоз.ТМЦ.ТМЦДляСписания.Получить(ДатаДок); 
		Если ПустоеЗначение(ТСп) = 0 Тогда
			Спис.ДобавитьЗначение(ТСп);
		КонецЕсли;
	КонецЦикла;
	
	РегО.УстановитьЗначениеФильтра("Фирма", Фирма);
	//РегО.УстановитьЗначениеФильтра("МестоХранения", Константа.УМК_СкладЦех);
	РегО.УстановитьЗначениеФильтра("ТМЦ", Спис, 2);	
	Если (ДатаДок < ПолучитьДатуТА()) Тогда
		РегО.ВременныйРасчет(1);
		РассчитатьРегистрыПо(ДатаДок);
	КонецЕсли;
	ТЗОст = СоздатьОбъект("ТаблицаЗначений"); 
	РегО.ВыгрузитьИтоги(ТЗОст, 1, 1);
	ТЗОст.Свернуть("ТМЦ", "ОстатокТовара");
	
	//--- пересчет Кво фарша продукция при записи //--- УМК Сандомирский В.Ю. (13.07.15)
	ЗаписатьДопДанные();
	
	ТВоз.ВыбратьСтроки();
	Пока ТВоз.ПолучитьСтроку() = 1 Цикл
		Стр = 0; ТекОст = 0;
		Если ТЗОст.НайтиЗначение(ТВоз.ТМЦ, Стр, "ТМЦ") = 1 Тогда
			ТекОст = ТЗОст.ПолучитьЗначение(Стр, "ОстатокТовара");
		КонецЕсли;
		ТСп = ТВоз.ТМЦ.ТМЦДляСписания.Получить(ДатаДок);
		Если (ТекОст = 0) И (ПустоеЗначение(ТСп) = 0) Тогда
			Стр = 0;
			Если ТЗОст.НайтиЗначение(ТСп, Стр, "ТМЦ") = 1 Тогда
				ТекОст = ТЗОст.ПолучитьЗначение(Стр, "ОстатокТовара");
			КонецЕсли;
		КонецЕсли;
		
		Если ТекОст < ТВоз.Кво / 100 Тогда
			Сообщить("Для ТМЦ: " + Строка(ТВоз.ТМЦ) + " остаток: " + Строка(ТекОст) + " меньше чем необходимый: " + Строка(ТВоз.Кво / 100));
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры // ПриЗаписи


//======================================================================
Процедура ПечатьСырья()
	ВыбЗначение = 0;
	ВариантыПечати = СоздатьОбъект("СписокЗначений");	
	ВариантыПечати.ДобавитьЗначение(3,"Печать потребности в материалах");
	ВариантыПечати.ДобавитьЗначение(6,"Печать потребности в материалах с продукцией");
	
	Если ВариантыПечати.ВыбратьЗначение(выбЗначение,"",,,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;
	Если (ВыбЗначение = 3) ИЛИ (ВыбЗначение = 6) Тогда
		//ПечатьПотребности();
		глСводПоНормам(ВыбЗначение, Контекст, "Норма", 100);
	КонецЕсли;	
КонецПроцедуры // 

//======================================================================
Функция ПечатьСырьё()
	СпрМХ = СоздатьОбъект("Справочник.МестаХранения");
	СпрМХ.НайтиПоНаименованию("1Склад (СЫПУЧКА)");
	МестоХранения = СпрМХ.ТекущийЭлемент();
	НовоеМестоХранения = Фирма.СкладМатериалов;
	ТЗВ = СоздатьОбъект("ТаблицаЗначений");
	глСводПоНормам(0, Контекст, "Норма", 100, ТЗВ);
	СписокВыведенныхРодителей = СоздатьОбъект("СписокЗначений");
	
	Выводимые = СоздатьОбъект("СписокЗначений");
	ТЗВ.ВыбратьСтроки();
	Пока ТЗВ.ПолучитьСтроку() = 1 Цикл
		глВывестиРодителей(ТЗВ, СписокВыведенныхРодителей, Выводимые);
	КонецЦикла;	
	Родитель = "";
	Выводимые.ВыбратьЗначение(Родитель, "Выберите группу");
				
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ПотребностьСырье");
	Таб.ВывестиСекцию("Шапка");
	
	Ном = 1;
	КвоВсего = 0;
	ТЗВ.ВыбратьСтроки();
	Пока ТЗВ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Родитель) = 0 Тогда
			Если ТЗВ.ТМЦ.ПринадлежитГруппе(Родитель) = 0 Тогда
				Продолжить;					
			КонецЕсли;
		КонецЕсли;
		
		Таб.ВывестиСекцию("Строка");
		
		КвоВсего = КвоВсего + ТЗВ.Кво;
		Ном = Ном + 1;
	КонецЦикла;
	
	Таб.ВывестиСекцию("Дно");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать();
КонецФункции

//======================================================================
Процедура ВвестиПеремещение()
	Если Модифицированность() = 1 Тогда
		Предупреждение("Документ нужно записать!");
	Иначе
		ОткрытьФорму("Документ.Перемещение", , ТекущийДокумент());
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Процедура ПечатьВсе()
	Печать();
	ПечатьВесовщикам();
	ПечатьСоСхемами();
	ПечатьСырьё();
КонецПроцедуры // ПечатьВсе()

//======================================================================
Процедура ПоказатьПечатьВсе(УстВидимость)
	Форма.ИспользоватьСлой("Общий," + ?(УстВидимость = 1, "Печать", "Основной"), 2);
КонецПроцедуры // 

//======================================================================
Процедура НастроитьПечать()
	ПоказатьПечатьВсе(1);
	ВариантПечати = ВосстановитьЗначение("ВариантПечатиЗаданиеНаПроизводство");
	Если ТипЗначенияСтр(ВариантПечати) = "СписокЗначений" Тогда
		Для Инд = 1 По списФормПечати.РазмерСписка() Цикл
			списФормПечати.Пометка(Инд, 0);
		КонецЦикла;
		
		Для Инд = 1 По ВариантПечати.РазмерСписка() Цикл
			Поз = списФормПечати.НайтиЗначение(ВариантПечати.ПолучитьЗначение(Инд));
			Если Поз <> 0 Тогда
				списФормПечати.Пометка(Поз, 1);
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Процедура ПечатьПоНастройке()
	ВариантПечати = ВосстановитьЗначение("ВариантПечатиЗаданиеНаПроизводство");
	Если ТипЗначенияСтр(ВариантПечати) = "СписокЗначений" Тогда
		Для Инд = 1 По ВариантПечати.РазмерСписка() Цикл
			Шаблон("[" + ВариантПечати.ПолучитьЗначение(Инд) + "]");
		КонецЦикла;
	Иначе
		Предупреждение("Настройка печати не найдена");
	КонецЕсли;
КонецПроцедуры // ПечатьПоНастройке

//======================================================================
Процедура СохранитьНастройку()
	СписФорм = СоздатьОбъект("СписокЗначений");
	Для Инд = 1 По списФормПечати.РазмерСписка() Цикл
		Если списФормПечати.Пометка(Инд) = 1 Тогда
			СписФорм.ДобавитьЗначение(списФормПечати.ПолучитьЗначение(Инд));
		КонецЕсли;
	КонецЦикла;
	СохранитьЗначение("ВариантПечатиЗаданиеНаПроизводство", СписФорм);
	ПоказатьПечатьВсе(0);
КонецПроцедуры // СохранитьНастройку

СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");

списФормПечати.ДобавитьЗначение("Печать()", "П. специи");
списФормПечати.ДобавитьЗначение("ПечатьВесовщикам()", "П. весовщик");
списФормПечати.ДобавитьЗначение("ПечатьСоСхемами()", "П. формовка");
списФормПечати.ДобавитьЗначение("ПечатьСырьё()", "П. сырьё");
Для Инд = 1 по списФормПечати.РазмерСписка() Цикл
	списФормПечати.Пометка(Инд, 1);
КонецЦикла;