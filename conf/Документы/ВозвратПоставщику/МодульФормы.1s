Перем СтруктИзменений;
Перем СтараяДата;
Перем Валюта_Прежн, Курс_Прежн;
Перем СписокДействий;        
Перем НачальнаяДатаДокумента;
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
                                 
// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;
	Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
		ДатаОплаты=ДатаДок + Глубина;	
	Иначе	
		ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстГлубина() 
	// Формирует и показывает дату оплаты и глубину кредита
	Если (ВидТорговли = Перечисление.ВидыТорговли.Кредит) И (Контрагент.Выбран() = 1) Тогда
		Если Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) <> 0 тогда
			Если Глубина <> Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) тогда
				Глубина=Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		Глубина=0;
	КонецЕсли;	
	ИзмГлубина();
КонецПроцедуры //Выбор Глубины

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ИзмГлубина();
КонецПроцедуры
                   
// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = ТМЦ.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;
КонецПроцедуры //ПересчетСтроки

// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
Процедура ИзмРеквизитШапки(Реквизит)
	// пересчитаем суммы НДС в строках табличной части
	Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда
		// ничего не изменилось
	    Возврат;     
	Иначе
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	КонецЕсли;
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;
	текОтвет = Вопрос("В документе изменен реквизит """+Реквизит+""". Перезаполнить цены заново?","Да+Нет");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текОтвет = "Да" Тогда
			// изменим цены
			ЦенаТовара = глВернутьЦену(ТМЦ, КатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
				// получим параметры цены
				ЦенаТовара.ИспользоватьДату(ДатаДок);
				ЦенаЦены   = ЦенаТовара.Цена;
				ВалютаЦены = ЦенаТовара.Валюта;
				ЕдЦены	   = ЦенаТовара.Единица;
				ЦенаЦены   = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
				ЦенаЦены   = глПересчет(ЦенаЦены,ВалютаЦены,ДатаДок,Валюта,Курс,Дата_курса);
				ПересчетСтроки(ЦенаЦены);                                                   
			Иначе
				ПересчетСтроки();
			КонецЕсли;
		ИначеЕсли Реквизит = "ВидНДС" Тогда
			ПересчетСтроки();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура ИзмВидТары()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("В документе изменен вид тары! Пересчитать суммы ?","Да+Нет") = "Да" Тогда
			текОсновнаяЦена = Константа.ОсновнаяЦена;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл    
				Если ПустоеЗначение(ТМЦ) = 1 Тогда
					Продолжить;
				ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					ПересчетСтроки();
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмСчетКонтрагента()
	Если ПустоеЗначение(СчетКонтрагента) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбранный счет не является счетом учета взаиморасчетов!",1,,"!");
		СчетКонтрагента = 0;  
	ИначеЕсли СчетКонтрагента.Валютный = 1 Тогда
		глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
		СчетКонтрагента = 0;       
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	ИзмСчетКонтрагента();
КонецПроцедуры	

// ===============================
Процедура ИзмДоговор()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			// вид торговли и валюта есть только в договоре
			Если Договор.Валюта <> Гривня Тогда
				Предупреждение("Нельзя выбирать договор с валютой "+Договор.Валюта+" в качестве договора для документа " + Вид()+".");
				Договор = 0;  
				Возврат;
			КонецЕсли;				
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			Если глЕстьРеквизитШапки("Дата_Курса",Договор.Вид()) = Да Тогда
				Дата_Курса=Договор.Дата_Курса;
			Иначе
				Дата_Курса=Договор.ДатаДок;
			КонецЕсли;                          
			Курс_Прежн = Курс;
			Курс = Договор.Курс;
			Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
				// что-то изменилось, надо пересчитать цены
				глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
			КонецЕсли;
			ВидТорговли = Договор.ВидТорговли;				
			ВидНДС = Договор.ВидНДС;
			ИзмРеквизитШапки("ВидНДС");
		КонецЕсли;
	КонецЕсли;    
КонецПроцедуры   

// ===============================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда
		Если Договор.Выбран()=1 Тогда
			Если Контрагент <> Договор.Контрагент Тогда
			    Договор = 0;
			КонецЕсли;
		КонецЕсли;	
		Дог = глУстановитьДоговорПоСкладу(Контекст);
		
		//Счет учета
		СчетКонтрагента = Контрагент.СчетРасчетовБУ.Получить(ДатаДок);
		
		Если ПустоеЗначение(Дог) = 0 Тогда
			Договор = Дог;
			ИзмДоговор();
		КонецЕсли;
		
		// подставляем БазДоговор в зависимоти от константы
		Если (Константа.ПодставлятьОсновнойДоговор = Да) 
		И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
		И (ПустоеЗначение(Договор)=1) Тогда
			Если Фирма = Контрагент.БазДоговор.Фирма Тогда
				Договор = Контрагент.БазДоговор;            
				ИзмДоговор();
			КонецЕсли;	
		КонецЕсли; 
		Валюта = Гривня;               
		Курс=глКурсДляВалюты(Валюта,Дата_Курса);
		// установим вид торговли		
		Если Договор.Выбран() = 1 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
				Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
					ВидТорговли = Договор.ВидТорговли;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	                      		
		Если (ПустоеЗначение(Контрагент.ВидТорговли) = 0)
		И (ПустоеЗначение(ВидТорговли) = 1) Тогда   
			Если Контрагент.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
			    ВидТорговли = Контрагент.ВидТорговли;      
			Иначе	
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
			ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;               
		// установим категорию цен
		СКатегория = "";
		Если КатегорияЦен.Выбран() = 0 Тогда
			Если ПустоеЗначение(Контрагент.КатегорияЦенПоставщика) = 0 Тогда
				КатегорияЦен = Контрагент.КатегорияЦенПоставщика;        
			Иначе	
				КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
			КонецЕсли;      									
		КонецЕсли;
		Если КатегорияЦен <> СКатегория Тогда
			ИзмРеквизитШапки("КатегорииЦен");
		КонецЕсли;
		УстГлубина();				
		Если (ПустоеЗначение(ДокументОснование) = 0) И (ДокументОснование.Вид() <> "ЗаказПоставщику") Тогда
			Если ДокументОснование.Контрагент <> Контрагент Тогда
				ДокументОснование = 0;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры
                                                     
// ===============================
Процедура ИзмДавальческоеСырье()
	Если ДавальческоеСырье = 1 Тогда
		ВидТары = Перечисление.ВидыТары.Покупная;
	КонецЕсли;	
КонецПроцедуры	

// ===============================
Процедура ИзмМестоХранения()
	Дог = глУстановитьДоговорПоСкладу(Контекст);
	Если ПустоеЗначение(Дог) = 0 Тогда
		Договор = Дог;
		ИзмДоговор();
	КонецЕсли;
	глМестоХранения = МестоХранения;
КонецПроцедуры

// ======================================
Процедура ИзмФирма()
КонецПроцедуры

// ===============================
Процедура ЗаполнитьПоУмолчанию()
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
	ИзмМестоХранения();
	СубконтоВалИзд = глВосстановитьЗначение(Контекст,"СубконтоВалИзд");
   	Если СубконтоВалИзд.Выбран() = 0 Тогда
	    Спр = СоздатьОбъект("Справочник.ВалДоходыРасходы");
	    Если Спр.НайтиПоКоду("2/4/5") = 1 Тогда
	        СубконтоВалИзд = Спр.ТекущийЭлемент();
	    КонецЕсли;
	КонецЕсли;
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	СчетКонтрагента = СчетПоКоду("63.1");
	СчетЗатрат = глВосстановитьЗначение(Контекст,"СчетЗатрат");
    Если ((глПроверитьСчетЗатрат(СчетЗатрат,0,0)=0) 
	ИЛИ (СчетЗатрат.Выбран() = 0)) Тогда
		Если ИспользоватьСчетаРасходов = Класс9 Тогда
		    СчетЗатрат = СчетПоКоду("949");
		Иначе
		    СчетЗатрат = СчетПоКоду("84");
		КонецЕсли;
	КонецЕсли;
	ВидЗатрат = глВосстановитьЗначение(Контекст,"ВидЗатрат");
	Отпустил = глВосстановитьЗначение(Контекст,"БазОтпустил");
	ВидТары = Перечисление.ВидыТары.Покупная;	
	УстГлубина();		
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		глУстановитьНомер(Контекст);
	    Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	Контрагент = глВосстановитьЗначение(,"ОсновнойПоставщик");
	ИзмКонтрагент();
	ЗаполнитьПоУмолчанию();
КонецПроцедуры
                 
// ===============================
Функция ПроверкаОснования(Док)	  
	Если Док.Вид() = "ПриходнаяНакладнаяПрочие" Тогда
	    Предупреждение("Предусмотрен только возврат ТМЦ!");
	    Возврат 0;
	КонецЕсли;
	//Если (Док.Валюта <> Гривня)
	//И (глЕстьРеквизитШапки("Валюта",Док.Вид()) = Да) Тогда
	//	// бухг. приходование по ГТД
	//    Предупреждение("Не предусмотрен возврат ТМЦ, приобретенных по ГТД!");
	//    Возврат 0;
	//КонецЕсли;    
	
	Возврат 1;
КонецФункции

// ===============================
Процедура ВводНаОсновании(Док)
	// основание - приходная накладная
	Если ПустоеЗначение(Док) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	Если ПроверкаОснования(Док) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	РодительскийДокумент = Док;
	Фирма = Док.Фирма;
	глУстановитьНомер(Контекст);
	ЗаполнитьПоУмолчанию();
	глЗаполнитьШапкуНаОсн(Контекст,Док);
	Если Док.Вид() = "Договор" Тогда
		Договор = Док;			    
	КонецЕсли;	
	
	ИзмМестоХранения();
	Контрагент = Док.Контрагент;
	ИзмКонтрагент();
	Если Док.Вид() = "ВозвратнаяНакладная" Тогда
		КатегорияЦен = "";
	КонецЕсли;
	ВидТорговли = Док.ВидТорговли;
	Валюта = Док.Валюта;
	Если глЕстьРеквизитШапки("Дата_Курса",Док.Вид()) = Да Тогда
		Дата_Курса=Док.Дата_Курса;
	Иначе
		Дата_Курса=Док.ДатаДок;
	КонецЕсли;
	Курс = Док.Курс;
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
	СчетКонтрагента = Док.СчетКонтрагента;
	Если глЕстьРеквизитШапки("ДавальческоеСырье",Док.Вид()) = Да Тогда
		ДавальческоеСырье = Док.ДавальческоеСырье;
	КонецЕсли;	
	
	Пер = СоздатьОбъект("Периодический");
	СпрЦ = СоздатьОбъект("Справочник.Цены");
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку()=1 Цикл
		НоваяСтрока();
		ТМЦ = Док.ТМЦ;
		НазначитьТип("Предпочтение","Документ."+Док.Вид());
		//Предпочтение = Док;
		Кво = Док.Кво;
		Ед = Док.Ед;
		Коэффициент = Док.Коэффициент;
		// для возвратной накладной система будет другая
		ЦенаБезНДС = Док.ЦенаБезНДС;
		ЦенаСНДС = Док.ЦенаСНДС;
		СуммаБезНДС = Док.СуммаБезНДС;
		НДС = Док.НДС;
		СуммаСНДС = Док.СуммаСНДС;			
	КонецЦикла;
	
	Если Док.Вид() = "ВозвратнаяНакладная" Тогда
		ДатаДок = Док.ДатаДок;
	КонецЕсли;
КонецПроцедуры
                    
// ===============================
Процедура ВыборОснования()
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	// Процедура по кнопке редактирования основания в докумнете
    
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ПроверкаОснования(ДокументОснование) = 0 Тогда 
			ДокументОснование = СтарОснование;              		
		КонецЕсли;	
		Если (ДокументОснование <> СтарОснование)
		И (ДокументОснование.Вид() <> "РасходыНаПриобретение") Тогда
			ВводНаОсновании(ДокументОснование);	
		КонецЕсли;	
	КонецЕсли;	          
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;	
КонецПроцедуры	

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Закупка");
КонецПроцедуры                          
       
// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
                  
// ===============================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры //Обработка подбора

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	ОтображаемыеСлои = "Общий," + Значение;           
	Если Значение = "Основной" Тогда
		ОтображаемыеСлои = ОтображаемыеСлои + ",ОсновнойТорг";
	КонецЕсли;	
	Форма.ИспользоватьСлой(ОтображаемыеСлои,2);	
КонецПроцедуры

// ===============================
Процедура Печать()
	ПечФорма = "Накладная";
	Язык = глЯзык(ПечФорма); 	
	глУстПропись(Валюта,Язык);

	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да,"_Укр","");
	Таб.ИсходнаяТаблица("Таблица"+СуффиксТаблицы);

	Таб.ВывестиСекцию("Шапка");
	Ном = 1;    
	фЕстьТара = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если (ВидТары <> Перечисление.ВидыТары.Покупная) и (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
			фЕстьТара = 1;
		    Продолжить;
		КонецЕсли;
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;
	// печать тары
	ИтСуммаТарыБезНДС = 0;
	Если фЕстьТара = 1 Тогда
		Если ВидТары = Перечисление.ВидыТары.Возвратная Тогда
			ЗагТара = ?(Язык="у","Тара зворотна","Тара возвратная");
		ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			ЗагТара = ?(Язык="у","Тара заставна","Тара залоговая");
		КонецЕсли;
		Таб.ВывестиСекцию("ШапкаТара");
	    Ном = 0;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			    Продолжить;
			КонецЕсли;
			ИтСуммаТарыБезНДС = ИтСуммаТарыБезНДС + СуммаБезНДС;
			Ном = Ном + 1;
			Таб.ВывестиСекцию("СтрокаТара");
		КонецЦикла;
		ИтСуммаТарыБезНДС = Окр(ИтСуммаТарыБезНДС,2);
		ПечИтСуммаБезНДС = глФРМТ(ИтСуммаТарыБезНДС,Валюта,0);
		Таб.ВывестиСекцию("ИтогоТара");
	КонецЕсли;
	Таб.ВывестиСекцию("Дно");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	Таб.Показать("Возврат поставщику","");
КонецПроцедуры
                    
// ===============================
Процедура ВыборПредпочтения()
	//спОтбор = СоздатьОбъект("СписокЗначений");
	//спСчета=СоздатьОбъект("СписокЗначений");
	//спОтбор.Установить("Счет",спСчета);
	//Если глПартионныйУчетПоСкладам = Да Тогда
	//    спОтбор.Установить("МестоХранения",МестоХранения);
	//КонецЕсли;
	//спОтбор.Установить("Контекст",Контекст);      
	//ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
	
	Ц = глВернутьЦену(ТМЦ, Константа.ЗакупЦена);
	Пер = СоздатьОбъект("Периодический");
	Если ПустоеЗначение(Ц) = 0 Тогда
		СписПН = СоздатьОбъект("СписокЗначений");
		ТПН = СоздатьОбъект("ТаблицаЗначений");
		ТПН.НоваяКолонка("ПН", "Документ.ПриходнаяНакладнаяЗапасы");
		ТПН.НоваяКолонка("ЦенаСНДС", "Число");
		
		Пер.ИспользоватьОбъект("Цена", Ц);
		Пер.ОбратныйПорядок(1);
		Пер.ВыбратьЗначения();
		Пока Пер.ПолучитьЗначение() = 1 Цикл
			Если ПустоеЗначение(Пер.ТекущийДокумент()) = 0 Тогда
				ДокПер = Пер.ТекущийДокумент();
				Если ДокПер.Вид() = "ПриходнаяНакладнаяЗапасы" Тогда
					Если ДокПер.МестоХранения = МестоХранения Тогда
						ТПН.НоваяСтрока();
						ТПН.ПН = Пер.ТекущийДокумент();
						ТПН.ЦенаСНДС = Пер.Значение;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ТПН.Выгрузить(СписПН,,,"ПН");
		Зн = 0; Поз = 0;		
		Если СписПН.ВыбратьЗначение(Зн,,Поз,,2) = 1 Тогда
			ЦенаСНДС = ТПН.ПолучитьЗначение(Поз, "ЦенаСНДС");
			НазначитьТип("Предпочтение", "Документ.ПриходнаяНакладнаяЗапасы");
			Предпочтение = ТПН.ПолучитьЗначение(Поз, "ПН");
			глВыч_суммы_накл(Контекст, 1);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
                      
// ===============================
Процедура ПриНачалеРедактированияСтроки()
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
	Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		Если глГруппыДоступаКонтрагенты.Принадлежит(Контрагент) = 0 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
                          
	// в документе нельзя выбирать валюту отличную от гривни, но кнопку выбора оставим ... для единообразия
	Форма.кВалюта.Доступность(0);
	
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
//		Форма.кДействия.Доступность(0);
		СписокДействий = глПолучитьСписокДействий("
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");	    
		
		Форма.кПодбор.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.кОсн.Доступность(0);
		Форма.кВалюта.Доступность(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;
	
	Форма.ДатаДок.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ВидТары.ВыполнятьФормулуТолькоПриИзменении(1);	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Общий,Основной,ОсновнойТорг",2);
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;
	глМестоХранения = МестоХранения;
	
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
	СтараяДата = ДатаДок;
	глУстВидимостьЦен(Контекст);
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений);
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Автор = глПользователь;
	ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	глСохранитьЗначение(Контекст,"СубконтоВалИзд",СубконтоВалИзд);
	глСохранитьЗначение(Контекст,"СчетЗатрат",СчетЗатрат);
	глСохранитьЗначение(Контекст,"ВидЗатрат",ВидЗатрат);
	Если глЕстьИзменения(Контекст, СтруктИзменений, "") = 1 Тогда		
		Автор = глПользователь;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
		ИзмРеквизитШапки("ВидНДС");
		ФлагСтандОбр = 0;
	ИначеЕсли Рекв = "Отпустил" Тогда
		ФлагСтандОбр = 0;
		КонтФирмы = Фирма;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);
	ИначеЕсли Рекв = "Предпочтение" Тогда
		//Если ((глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.FIFO) 
		//ИЛИ ((глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.LIFO))) Тогда
			ВыборПредПочтения();
		//КонецЕсли;	
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ОбработкаВыбораЗначения(Значение,Рекв,ФлагСтандОбр)
	Если Рекв = "СчетЗатрат" Тогда
	    ФлагСтандОбр = глПроверитьСчетЗатрат(Значение,,0,"Счет затрат");
	КонецЕсли;
КонецПроцедуры 

// ===============================
Функция УстДоступность()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	Форма.Заголовок(глЗаголовок(Контекст,"Возврат поставщику"));
	// доступность в зависимости от слоя
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		ДостКасса = 1;
	Иначе
		ДостКасса = 0;
	КонецЕсли;
	Если Закл = "Основной" Тогда
		Форма.СчетКонтрагента.Доступность(1-ДавальческоеСырье);
		Форма.тСчетКонтрагента.Доступность(1-ДавальческоеСырье);
		Форма.тВидТары.Доступность(1-ДавальческоеСырье);
		Форма.ВидТары.Доступность(1-ДавальческоеСырье);
		Форма.тВидТорговли.Доступность(1-ДавальческоеСырье);
		Форма.ВидТорговли.Доступность(1-ДавальческоеСырье);
		фВидимостьКредит = ?(ВидТорговли = Перечисление.ВидыТорговли.Кредит,1,0);
		Форма.тДатаОплаты.Видимость(фВидимостьКредит);
		Форма.тГлубина.Видимость(фВидимостьКредит);
		Форма.Глубина.Видимость(фВидимостьКредит);
	ИначеЕсли Закл = "Дополнительный" Тогда
		Форма.СубконтоВалИзд.Доступность(1-ДавальческоеСырье);
		Форма.тСубконтоВалИзд.Доступность(1-ДавальческоеСырье);
		Форма.СчетЗатрат.Доступность(1-ДавальческоеСырье);
		Форма.тСчетЗатрат.Доступность(1-ДавальческоеСырье);
		Форма.ВидЗатрат.Доступность(1-ДавальческоеСырье);
		Форма.тВидЗатрат.Доступность(1-ДавальческоеСырье);
	КонецЕсли;	
	
	Если (глПользователь.фПривелегииДатаЗапрета = 1) И  (Выбран() = 1) Тогда  //--- УМК Сандомирский В.Ю. (13.08.14)  возможно менять договор привелегированым
		Форма.кОсн.Доступность(1);
		Форма.кОК.Доступность(1);
	КонецЕсли;
	
    Возврат "";
КонецФункции                                      

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");