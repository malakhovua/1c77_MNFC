Перем ПервыйДок, Касса, Товар, ПересчКво;
Перем НДСДох, СуммаВаловыхИздержек, РазницаБезНДС, РазницаНДС, СуммаВалРасх, СуммаПогашенияАванса;
Перем СчетНДС, СубконтоНДС1, СубконтоНДС2;
Перем СуммаУчБезНДС;	// для партии 
Перем ИтТМЦ;   
Перем ВремРег;
Перем спОтбор;
Перем НДСВсего, ВзаиморасчетыГрн; // для исправления ошибок при округлениях
Перем НеВыполнятьЗаменуТМЦДляСписания;// + umk

// ===========================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(Контрагент,"Контрагент");
	Если ДавальческоеСырье <> 1 Тогда
		глВыбранЛи(СчетЗатрат,"Счет затрат");
		глВыбранЛи(ВидЗатрат,"Вид затрат");   
		глВыбранЛи(СубконтоВалИзд,"Субконто валовых доходов");
	    глВыбранЛи(СчетКонтрагента,"Счет контрагента");
		глВыбранЛи(ВидТорговли,"Вид торговли");
		глВыбранЛи(ВидТары,"Вид тары");
		Если глВсеВыбрано = 1 Тогда
			Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
				глКомментарий("Счет контрагента ("+СчетКонтрагента+") не является счетом учета взаиморасчетов!",1,,"!");
			    глВсеВыбрано = 0;
			ИначеЕсли (Валюта = Гривня)
			И (СчетКонтрагента.Валютный = 1) Тогда
				глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
				глВсеВыбрано = 0;       
			ИначеЕсли (Валюта <> Гривня)
			И (СчетКонтрагента.Валютный = 0) Тогда
				глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
				глВсеВыбрано = 0;
			КонецЕсли;	
		КонецЕсли;	
		Если глВсеВыбрано = 1 Тогда
			Если глПроверитьСчетЗатрат(СчетЗатрат,2,0)=0 Тогда
			    глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	глВыбранЛи(МестоХранения,"Место хранения");
	глВыбранЛи(Валюта,"Валюта");
	Если МестоХранения.ВидСклада = Розничный Тогда
		глКомментарий("Накладная предназначена для возврата ТМЦ с ОПТОВОГО склада, а не РОЗНИЧНОГО (магазина)!",0,,"!");
		глКомментарий("Проверьте параметры места хранения!",2);
		глВсеВыбрано = 0;
	КонецЕсли;
	Если Валюта <> Гривня Тогда
		глКомментарий("Возврат импортированных ТМЦ не предусмотрен!",0,,"!");
		глВсеВыбрано = 0;
	КонецЕсли;
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Касса = Константа.КассаПоУмолчанию;//глПолучитьКассу(Фирма,Валюта); // + umk
		Если Касса = 0 Тогда
			глКомментарий("Для  валюты " + Строка(Валюта) + " не задано ни одной кассы!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	Если глВсеВыбрано = 1 Тогда
		глВсеВыбрано = глПроверкаДублейСтрок(Контекст,1);
		Если глВсеВыбрано = 0 Тогда
			глКомментарий("При возврате поставщику нельзя в разных строках указывать одинаковые ТМЦ (или одну и ту же партию ТМЦ)!",0,,"!");
		КонецЕсли;
	КонецЕсли;
	глПроверкаНДСВДокументе(Контекст, Итог("СуммаБезНДС"), Итог("СуммаСНДС"), Итог("НДС"));
		
	Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
    глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
    Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
    	глКомментарий("Нельзя вернуть услугу (строка "+НомерСтроки+")",0,,"!");
		глВсеВыбрано = 0;
    КонецЕсли; 	
	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
    Возврат глВсеВыбрано;
КонецФункции                                    

// ===============================
// Назначение: возвращает счета учета ТМЦ
// Аргументы: текТМЦ - ТМЦ, счет учета которого необходимо получить
// Возвращает: счет учета
Функция ПолучитьСчетУчетаТМЦ(текТМЦ)
	текСчетУчетаТМЦ = текТМЦ.Счет;
	Если ДавальческоеСырье = 1 Тогда
		текСчетУчетаТМЦ = ГлПолучитьСчетУчетаТМЦ("ДавМатериалы",текТМЦ);
	ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
		Если ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			текСчетУчетаТМЦ = ГлПолучитьСчетУчетаТМЦ("ТараЗалоговая");
		Иначе // возвратная тара
			текСчетУчетаТМЦ = ГлПолучитьСчетУчетаТМЦ("ТараВозвратная",текТМЦ);
		КонецЕсли;
	КонецЕсли;	         
    Возврат текСчетУчетаТМЦ;
КонецФункции //ПолучитьСчетУчетаТМЦ

// возвращает код операции для регистров Партии и Обороты
// ===========================
Функция ПолучитьКодОперации()
	Если ДавальческоеСырье = 1 Тогда
		Возврат ВозвратДавальческогоСырья
	ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
		Если ВидТары = Перечисление.ВидыТары.Покупная Тогда
			Возврат ВозвратПоставщику;
		ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			Возврат ВозвратТарыЗалоговойПоставщику;
		Иначе // возвратная тара
			Возврат ВозвратТарыВозвратнойПоставщику;
		КонецЕсли;
	Иначе // ТМЦ
		Возврат ВозвратПоставщику;
	КонецЕсли; 
КонецФункции

// Наименование: СформироватьДвиженияПартии
// Назначение: рассчитать необходимеы параметры и сформировать движения по регистрам 
// Партии и Обороты. Сформировать проводки.
//		В процессе обработки в процедуре изменятся следующие пареметры:
//															ОсталосьСписать											
//															ОсталосьСуммаСНДСПоСтроке											
//															ОсталосьСуммаБезНДСПоСтроке											
// Параметры: 
// 			тбОстатки - таблица остатков, при списании кол-ва большего, чем есть на складе, этот параметр пустой
//			тбПартии - таблица партий, при списании кол-ва большего, чем есть на складе, этот параметр пустой
//			ОсталосьСписать - количество ТМЦ, которое необходимо списать
// 			ВсегоСписатьПоСтроке - количество ТМЦ, указанное в строке документа в базовых единица
//			ВсегоСуммаСНДСПоСтроке - сумма с НДС указанная в строке документа, пересчитанная по курсу документа в гривни
//			ВсегоСуммаБезНДСПоСтроке - сумма без НДС указанная в строке документа, пересчитанная по курсу документа в гривни
// 			ОсталосьСуммаСНДСПоСтроке - сумма с НДС, которую необходимо списать
//			ОсталосьСуммаБезНДСПоСтроке - сумма без НДС, которую необходимо списать
//			ПоставщикП - поставщик, для проведения по регистрам
//			ПоставкаП - документ поставки, для проведения по регистрам
//			ПрихДокументП - приходный документ, для проведения по регситрам
// ===============================
Процедура СформироватьДвиженияПартии(тбОстатки,тбПартии,ОсталосьСписать,ВсегоСписатьПоСтроке,ВсегоСуммаСНДСПоСтроке,
	ВсегоСуммаБезНДСПоСтроке,ОсталосьСуммаСНДСПоСтроке,ОсталосьСуммаБезНДСПоСтроке,ПоставщикП,ПоставкаП,ПрихДокументП, ТМЦС)
	
	Если ПустоеЗначение(тбОстатки) = 1 Тогда
		ОстатокТовараПоПартии = 0;
		// если надо списать больше чем есть на складе
		СписываемыйОстатокТовара = ОсталосьСписать;	
		// рассчитаем коэфициент списания не по остатку партии, а по остатку по строке документа
		КоэфСписания		 = СписываемыйОстатокТовара / ВсегоСписатьПоСтроке;
		СписываемаяСтоимость = ВсегоСуммаСНДСПоСтроке * КоэфСписания; //СписываемаяСтоимость = ВсегоСуммаБезНДСПоСтроке * КоэфСписания; // +umk уберем типовой механизм. Нужна сумма с НДС
		СписываемаяПродСтоимость = 0;
		// определим сумму реализации текущей списываемой партии
		СуммаРеализацииБезНДС = ОсталосьСуммаБезНДСПоСтроке;
		СуммаРеализацииСНДС	  = ОсталосьСуммаСНДСПоСтроке;
		// доход от продажи 
		Доход = 0;
		// определим счет учета для ТМЦ
		СчетП = ПолучитьСчетУчетаТМЦ(ТМЦС);
	Иначе	                     
		ОстатокТовараПоПартии = тбОстатки.ОстатокТовара;
		// нормальное списание
		СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовараПоПартии);
		КоэфСписания	= СписываемыйОстатокТовара / ОстатокТовараПоПартии;
		КоэфРеализации  = СписываемыйОстатокТовара / ВсегоСписатьПоСтроке;
		// определим себестоимость текущей списываемой партии
		СписываемаяСтоимость	 = СписываемыйОстатокТовара * ЦенаСНДС/Коэффициент; //тбОстатки.Стоимость * КоэфСписания// +umk  берем цену с НДС на количество Лара Н.
		СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
		Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
			// определим сумму реализации текущей списываемой партии
			// если списывается вся сумма указаная в строке документа
			СуммаРеализацииСНДС   = ОсталосьСуммаСНДСПоСтроке;
			СуммаРеализацииБезНДС = ОсталосьСуммаБезНДСПоСтроке;
		Иначе                                                
			// определим сумму реализации текущей списываемой партии
			// если списывется часть суммы указаной в строке документа 
			СуммаРеализацииСНДС	  = Окр(ВсегоСуммаСНДСПоСтроке * КоэфРеализации,2);
			СуммаРеализацииБезНДС = Окр(ВсегоСуммаБезНДСПоСтроке * КоэфРеализации,2);
		КонецЕсли;  
		// доход от продажи 
		Доход = Окр(СуммаРеализацииБезНДС,2) - СписываемаяСтоимость;
		СчетП = тбПартии.Счет;		
	КонецЕсли;	
	// при возврате залоговой тары проверим сумму реализации
	Если ТМЦС.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
		Если ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			Если ПустоеЗначение(Доход) = 0 Тогда
				глКомментарий("При возврате залоговой тары "+ТМЦС+" "+?(НомерСтроки=0,""," в строке "+НомерСтроки)+", сумма возврата ("
				+глФРМ(СуммаРеализацииБезНДС,Валюта,1)+") не должна отличатся от суммы прихода ("+глФРМ(СписываемаяСтоимость,Валюта,1)+").",0);
				СуммаРеализацииБезНДС = СписываемаяСтоимость;
				Доход = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// осталось списать по суммам
	ОсталосьСуммаБезНДСПоСтроке = ОсталосьСуммаБезНДСПоСтроке - СуммаРеализацииБезНДС;
	ОсталосьСуммаСНДСПоСтроке	= ОсталосьСуммаСНДСПоСтроке   - СуммаРеализацииСНДС;
	КодОперации	   = ПолучитьКодОперации();
	МестоХраненияП = ?(глПартионныйУчетПоСкладам = Да,МестоХранения,0);
	глПровестиПартию(Контекст, 0, 1, Фирма, ТМЦС, СчетП, МестоХраненияП, ПоставщикП, 
		ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
		КодОперации,1 ,СуммаРеализацииБезНДС, Доход);
		Если НеПроводитьТМЦ = 0 Тогда
			глПроводка(Контекст,СчетП,,-СуммаРеализацииБезНДС,"Возврат:Себестоимость",-СписываемыйОстатокТовара, МестоХранения,ТМЦС,ПоставкаП,
			,,, ,,"ПХ",1,?(СчетП.Забалансовый=1,0,"Сторно покупки"));
		КонецЕсли;
	Если (ДавальческоеСырье <> 1)
	И (СчетП.Забалансовый <> 1) Тогда
		Если Доход > 0 Тогда
			// отгрузили дороже себестоимости партии
			Если НеПроводитьТМЦ = 0 Тогда
				глПроводка(Контекст,СчетП,"71.9",Доход,"Возврат: доход",, МестоХранения,ТМЦС,ПоставкаП,
				ТМЦС.ВидДеятельности,,, ,,"ВЗ",1,0);
			КонецЕсли;
		ИначеЕсли СчетП.Забалансовый = 0 Тогда
			Если НеПроводитьТМЦ = 0 Тогда
				глПроводкаПоЗатратам(Контекст,СчетЗатрат,СчетП,-Доход,"Возврат: убыток",, ТМЦС.ВидДеятельности,,ВидЗатрат,
				МестоХранения,ТМЦС,ПоставкаП, ,,"ВЗ",1,0);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ПустоеЗначение(тбПартии) = 0 Тогда
		глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость);
	КонецЕсли;	
	ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
КонецПроцедуры

// ===============================
// Назначение:
//		Отражает движения документа в регистрах 
// ===============================
Функция ДвиженияПартии() 
Перем ИтогСуммаСНДС, ИтогНДС;	// базы распределения сумм
Перем фОшибка;	// возвращаемое значение
	фОшибка = 1;              
	
	глКомментарий("Выполняются движения партий ТМЦ",2);
	
	текПредпочтение = 0;
	тбПартии = 0;
	тбОстатки = 0;
	ИнвСтратегияПродажи = 1;
	
	// таблицу партий формируем с флагом возврата 0, для правильного списания партий при уазанном предпочтении
	Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) //--- УМК Сандомирский В.Ю, (03.10.14) 10ый параметр : (0 - текущий товар ТЧ \ 1-Заменять товаром для списания \ 2-Заменять товаром для приходования)
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
		глСформироватьТаблицуПартий(Контекст, ВремРег, Фирма, спОтбор, текПредпочтение, 
			тбПартии, тбОстатки, 0, ИнвСтратегияПродажи,2);
	Иначе
		глСформироватьТаблицуПартий(Контекст, ВремРег, Фирма, спОтбор, текПредпочтение, 
			тбПартии, тбОстатки, 0, ИнвСтратегияПродажи);		
	КонецЕсли;	
		
	ФлагПрихода = 0;

	Если ДавальческоеСырье <> 1 Тогда
		// инициализация алгоритмов корректого распределения
		глОчиститьКлючОкр("Взаим");
		глОчиститьКлючОкр("НДС");
		// расчитаем базы распределения 
		глОпределитьБазыРаспределения(Контекст, ИтогСуммаСНДС, ИтогНДС);
		ИтогСуммаСНДС		= глПересчет(ИтогСуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
		ИтогНДС 			= глПересчет(ИтогНДС,      Валюта,ДатаДок,Гривня,ДатаДок);
		НДСпоВзаиморасчетам	= НДСВсего;
	КонецЕсли;	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		
		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) //--- УМК Сандомирский В.Ю, (03.10.14) 10ый параметр : (0 - текущий товар ТЧ \ 1-Заменять товаром для списания \ 2-Заменять товаром для приходования)
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
		
			ТМЦ_Остатки = ТМЦ;
		
		Иначе	
		
			Если НеВыполнятьЗаменуТМЦДляСписания = 1 Тогда
				ТМЦ_Остатки = ТМЦ;
			Иначе
				ТМЦ_Остатки = ?(ПустоеЗначение(ТМЦ.ТМЦДляСписания.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляСписания.Получить(ДатаДок), ТМЦ);
			КонецЕсли;
			
		КонецЕсли;
			
		ВсегоСписать = Кво * Коэффициент;		
		// движения по регистру Остатки                                                                          
		глПровестиОстатки(Контекст, ВремРег, Фирма, МестоХранения, ТМЦ_Остатки, ВидУпаковки, ВсегоСписать, ФлагПрихода, 1);	
		
		
		// распределим разницу, возникшую при округлении НДС по проводкам так, чтобы 
		// общая сумма проводок по НДС совпала с суммой НДС в табличной части документа
		ПострСуммаСНДС	= глПересчет(СуммаСНДС,Валюта,ДатаДок,Гривня,ДатаДок);
		ПострНДС		= глПересчет(НДС,      Валюта,ДатаДок,Гривня,ДатаДок);
		Если ((ВидТары <> Перечисление.ВидыТары.Залоговая) Или (ТМЦ_Остатки.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара)) 
		И (ДавальческоеСырье <> 1) Тогда
			// не залоговая тара, округляем с учетом накопленных погрешностей округления
			ПострСуммаСНДС	= глОкрКорр("Взаим", ?(ИтогСуммаСНДС = 0, 0, -ВзаиморасчетыГрн * ПострСуммаСНДС / ИтогСуммаСНДС),2);
			ПострНДС		= глОкрКорр("НДС", ?(ИтогНДС = 0, 0, -НДСпоВзаиморасчетам * ПострНДС / ИтогНДС),2);
		КонецЕсли;
		ПострСуммаБезНДС 	= ПострСуммаСНДС - ПострНДС;
		ОсталосьСуммаСНДС	= ПострСуммаСНДС;
		ОсталосьСуммаБезНДС	= ПострСуммаБезНДС;
		ОсталосьСписать		= ВсегоСписать;
		НС=0;
		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) //--- УМК Сандомирский В.Ю, (03.10.14)
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
					
			ТМЦ_Партии =  ?(ПустоеЗначение(ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляПрихода.Получить(ДатаДок), ТМЦ);
			
		Иначе
			
			Если НеВыполнятьЗаменуТМЦДляСписания = 1 Тогда
				ТМЦ_Партии = ТМЦ;
			Иначе
				ТМЦ_Партии = ?(ПустоеЗначение(ТМЦ.ТМЦДляСписания.Получить(ДатаДок)) = 0, ТМЦ.ТМЦДляСписания.Получить(ДатаДок), ТМЦ);
			КонецЕсли;
			
		КонецЕсли;			
					
		МетодРасчетаСебестоимости=глПолучитьМетодРасчетаСебестоимости(ТМЦ_Партии,ДатаДок);	//--- УМК Сандомирский В.Ю, (03.10.14)		
		
		// находим в тбПартии первую партию, соответсв. текущей строке документа
		Если тбПартии.НайтиЗначение(ТМЦ_Партии,НС,"ТМЦ")=1 Тогда
			тбПартии.ПолучитьСтрокуПоНомеру(НС);
		Иначе                                   
			// если такой строки нет, переходим на первую строку таблицы
			тбПартии.ВыбратьСтроки();
			тбПартии.ПолучитьСтроку();
		КонецЕсли;
		// обрабатываем все строки тбПартии с соответсв. ТМЦ
		Пока тбПартии.ТМЦ = ТМЦ_Партии Цикл      				//--- УМК Сандомирский В.Ю, (03.10.14)                   
			текСчетУчетаТМЦ = ПолучитьСчетУчетаТМЦ(ТМЦ_Партии);	//--- УМК Сандомирский В.Ю, (03.10.14)
			// берем необходимые параметры партии из тбПартии
			Если тбПартии.Счет = текСчетУчетаТМЦ Тогда
			    МестоХраненияП = тбПартии.МестоХранения;
				ПоставщикП	   = тбПартии.Поставщик;
				ПоставкаП 	   = тбПартии.Поставка;
				ПрихДокументП  = тбПартии.ПрихДокумент;
				СчетП		   = тбПартии.Счет;
				НС =0;
				// находим остаток текущей партии в тбОстатки по ключу
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,ТМЦ_Партии.Код,СчетП),НС,"Ключ")=1 Тогда   //--- УМК Сандомирский В.Ю, (03.10.14)
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					ОстатокТовара = тбОстатки.ОстатокТовара;
					// если остаток 0, то с текущей партии не списываем
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					// сформируем движения по регистрам и проводки
					СформироватьДвиженияПартии(тбОстатки,тбПартии,ОсталосьСписать,ВсегоСписать,ПострСуммаСНДС
					,ПострСуммаБезНДС,ОсталосьСуммаСНДС,ОсталосьСуммаБезНДС,ПоставщикП,ПоставкаП
					,ПрихДокументП, ТМЦ_Партии);													//--- УМК Сандомирский В.Ю, (03.10.14)
				КонецЕсли;
			КонецЕсли;
			Если ОсталосьСписать = 0 Тогда
				Прервать;
			КонецЕсли;   
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла; 
		
		Если ОсталосьСписать > 0 Тогда
			глСообщитьОбОтсутствииПартии(1, Фирма, ТМЦ_Партии, НомерСтроки);				//--- УМК Сандомирский В.Ю, (03.10.14)
			Если Константа.РазрешитьОтрицОстатки = Нет Тогда
				фОшибка = 0;
			Иначе
				Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
					ПоставщикП = 0;
					ПоставкаП = 0;
					ПрихДокументП = 0;
				Иначе
					ПоставщикП = Контрагент;
					ПоставкаП = ТекущийДокумент();
					ПрихДокументП = ТекущийДокумент();
				КонецЕсли;
				// сформируем движения по регистрам и проводки
				СформироватьДвиженияПартии(,,ОсталосьСписать,ВсегоСписать,ПострСуммаСНДС
				,ПострСуммаБезНДС,ОсталосьСуммаСНДС,ОсталосьСуммаБезНДС,ПоставщикП,ПоставкаП
				,ПрихДокументП, ТМЦ_Партии);												//--- УМК Сандомирский В.Ю, (03.10.14)
				
				глСообщитьОСозданииПартии(ТМЦ_Партии, ОсталосьСписать);						//--- УМК Сандомирский В.Ю, (03.10.14)
			КонецЕсли; 
		КонецЕсли; // ОсталосьСписать > 0
	КонецЦикла; // строки документа
	Возврат фОшибка;
КонецФункции

// ===============================
Процедура ДвиженияВзаиморасчеты()
	// взаиморасчеты
	ФлагОтгрузки = 1;
	ЗнакОплаты = +1;          	                            
	РегПоставщики=ВремРег.ВзаиморасчетыПоставщиков;	
	РегПокупатели=ВремРег.ВзаиморасчетыПокупателей;	
	тбСуммыПогашения = глПолучитьСуммыДляПогашения(Контекст, Фирма, Валюта);
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег, Фирма,ЗнакОплаты, Контрагент, ПервыйДок, Валюта);
	глПровестиПоВзаиморасчетам(Контекст, ФлагОтгрузки, ЗнакОплаты, 1, Фирма, тбДолги, тбСуммыПогашения, Валюта,Контрагент, ПервыйДок, ВидТорговли, ДокументОснование);	
	Если (РегПоставщики.ВыбратьДвиженияДокумента(ТекущийДокумент()) = 0)
	И (Итог("СуммаБезНДС") = 0) Тогда
		// по регистру взаиморасчетов нет движений. Данная ситуация может возникнуть если 
		// сумма по документу 0. В этом случае нужно сделать одну проводку по счету взаиморасчетов
		Если НеПроводитьТМЦ = 0 Тогда
			глПроводка(Контекст,,СчетКонтрагента,РегПоставщики.Долг,"Взаиморасчеты с поставщиком, сторно.",Итог("Кво"), ,,,
			Контрагент,ПервыйДок,, ,,"ПХ",1,"Сторно покупки",1);
		КонецЕсли;		
	КонецЕсли;
	НДСВсего = 0;
	ВзаиморасчетыГрн = 0;	
	Пока РегПоставщики.ПолучитьДвижение() = 1 Цикл
		// погасим взаиморасчеты 

		Если (Константа.ПроводкиПоКассеТолькоОрдерами = Нет)
		И (ВидТорговли = Перечисление.ВидыТорговли.Нал) 
		И (РегПоставщики.Приход = 1) Тогда
			// При оплате наличными формируются 2 движения, надо взять только одно. Ввозьмем приход.
			Продолжить;
		КонецЕсли;
		Если (Найти(ВозвратАвансовойОтгрузки+АвансоваяОтгрузка+ВозвратПостОтгрузки+ПостОтгрузка+ПостОплата
					+ВозвратВтороеСобытиеБартерРасход+ВозвратПервоеСобытиеБартерРасход,РегПоставщики.КодОперации) = 0) Тогда
			// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
			Продолжить;	
		КонецЕсли;        
		ВзаиморасчетыГрн = ВзаиморасчетыГрн + РегПоставщики.ДолгОсн;
		// проводки по взаиморасчетам
		Если НеПроводитьТМЦ = 0 Тогда
			глПроводка(Контекст,,СчетКонтрагента,РегПоставщики.Долг,
			?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,"Бартер: ","")+"Взаиморасчеты с поставщиком сторно.",, ,,,
			Контрагент,ПервыйДок,, ,,"ПХ",1,"Сторно покупки",1);
		КонецЕсли;		
		// погасим аванс
		Если (глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1) И (РегПоставщики.КодОперации = ВозвратАвансовойОтгрузки) Тогда
			Если НеПроводитьТМЦ = 0 Тогда
				глПроводка(Контекст,СчетКонтрагента,"3711",РегПоставщики.Долг,"Сторно: авансовый платеж",, Контрагент,ПервыйДок,,
				Контрагент,ПервыйДок,, ,,"ПХ");		
			КонецЕсли;
		КонецЕсли;                                          		
		// проводки по НДС
		Если глДелатьПроводкиПоНалогам(РегПоставщики,"НДС") = 1 Тогда
			НДСВсего = НДСВсего + РегПоставщики.НДС;			
			Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
				Если НеПроводитьТМЦ = 0 Тогда
					глПроводка(Контекст,СчетНДС,,РегПоставщики.НДС,"НДС сторно",, СубконтоНДС1,СубконтоНДС2,,
					,,, ,,"ВЗ",1,"Сторно покупки");
				КонецЕсли;
			ИначеЕсли ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда 
				Если НеПроводитьТМЦ = 0 Тогда
					глПроводка(Контекст,СчетНДС,,РегПоставщики.НДС,"Бартер: НДС",, СубконтоНДС1,СубконтоНДС2,,
					,,, ,,"ПХ",1,"Сторно покупки");
				КонецЕсли;
			Иначе
				Если РегПоставщики.КодОперации = ВозвратПостОтгрузки Тогда  
					Если НеПроводитьТМЦ = 0 Тогда
						глПроводка(Контекст,СчетНДС,,РегПоставщики.НДС,"НДС сторно",, СубконтоНДС1,СубконтоНДС2,,
						Контрагент,ПервыйДок,, ,,"ВЗ",1,"Сторно покупки");
					КонецЕсли;
				ИначеЕсли РегПоставщики.КодОперации = ВозвратАвансовойОтгрузки Тогда
					Если НеПроводитьТМЦ = 0 Тогда
						глПроводка(Контекст,"6441",,РегПоставщики.НДС,"НДС сторно",, Контрагент,ПервыйДок,,
						Контрагент,ПервыйДок,, ,,"ВЗ",1,"Сторно покупки");   
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		//// проводки по ВД/ВР
        //Если (глДелатьПроводкиПоНалогам(РегПоставщики,"ВД/ВР") = 1) И (СубконтоВалИзд <> Константа.НиДоходНиРасход) Тогда
		//	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
		//    	глПроводка(Контекст,"ВР","ВР",РегПоставщики.СуммаСНДС_НУ-РегПоставщики.НДС,"Возврат: бартер, валовые расходы сторно"+Контрагент.Наименование,, Контрагент,ПервыйДок,Константа.БартерВалДох,
		//    	Контрагент,ПервыйДок,Константа.БартерВалДох, ,,"ВЗ");             
		//	Иначе
		//		глПроводка(Контекст,"ВР","ВР",РегПоставщики.СуммаСНДС_НУ-РегПоставщики.НДС,"Возврат: Валовые издержки сторно",, Контрагент,ПервыйДок,СубконтоВалИзд,
		//		Контрагент,ПервыйДок,СубконтоВалИзд,,,"ВЗ");
		//	КонецЕсли;	
		//КонецЕсли;
		// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		// дополнительные проводки
		Если (ВидТорговли = Перечисление.ВидыТорговли.Нал) И (Константа.ПроводкиПоКассеТолькоОрдерами = Нет) Тогда
			// по кассе при оплате наличными
			Если НеПроводитьТМЦ = 0 Тогда
				глПроводка(Контекст,"301",СчетКонтрагента,-РегПоставщики.Долг,"Возврат: сторно оплаты",, Касса,,,
				Контрагент,ПервыйДок,, ,,"ВЗ");
			КонецЕсли;
		ИначеЕсли (ВидТорговли = Перечисление.ВидыТорговли.Бартер) И (РегПоставщики.КодОперации = ВозвратВтороеСобытиеБартерРасход) Тогда
			// для бартерных операций первое событие показываем как аванс в счет встречной поставки
			Сч=?(глВыделятьЛиАвансыПоСчету(СчетКонтрагента)=1,"681","36") + ?(Валюта=Гривня,"1","2");
			Если НеПроводитьТМЦ = 0 Тогда
				глПроводка(Контекст,СчетКонтрагента,Сч,РегПоставщики.Долг,"Бартер: сторно первого события",, Контрагент,ПервыйДок,,
				Контрагент,ПервыйДок,, ,,"ПХ");	
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;                                            
	// для бартера просмотрим другой регистр		
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
		РегПокупатели.ВыбратьДвиженияДокумента(ТекущийДокумент());
		Пока РегПокупатели.ПолучитьДвижение() = 1 Цикл            
			Если Найти(ВозвратВтороеСобытиеБартерРасход+ВозвратПервоеСобытиеБартерРасход,РегПокупатели.КодОперации) = 0 Тогда
				// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
				Продолжить;	
			КонецЕсли;      
			Если (РегПокупатели.КодОперации = ВозвратВтороеСобытиеБартерРасход) 
			И (глБартерНаОбщихОснованиях(РегПокупатели.Договор,РегПокупатели.Счет,РегПокупатели.КредДокумент) = 0) Тогда
				// проводки по НДС
				Если глДелатьПроводкиПоНалогам(РегПокупатели,"НДС") = 1 Тогда
					Если НеПроводитьТМЦ = 0 Тогда
						глПроводка(Контекст,"6441",,РегПокупатели.НДС,"Бартер: сторно НДС ",, Контрагент,ПервыйДок,,
						,,, ,,"ПХ",1,"Сторно покупки");
						глПроводка(Контекст,"643","6415",РегПокупатели.НДС,"Бартер: сторно НДС ",, Контрагент,ПервыйДок,,
						ВидНДС,,, ,,"ПХ",1,0);
					КонецЕсли;
					НДСВсего = НДСВсего + РегПокупатели.НДС;								
				КонецЕсли;	
				
				// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				//// проводки по ВД/ВР
		        //Если (глДелатьПроводкиПоНалогам(РегПокупатели,"ВД/ВР") = 1) И (Константа.БартерВалДох <> Константа.НиДоходНиРасход) Тогда     					
			    //	глПроводка(Контекст,"ВД","ВД",РегПокупатели.СуммаСНДС_НУ-РегПокупатели.НДС,"Бартер: сторно валовых доходов",, Контрагент,ПервыйДок,Константа.БартерВалДох,
			    //	Контрагент,ПервыйДок,Константа.БартерВалДох, ,,"ПХ",1,0);
				//КонецЕсли;	
				// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				
			ИначеЕсли РегПокупатели.КодОперации = ВозвратПервоеСобытиеБартерРасход Тогда
				// главная часть сложной проводки по взаиморасчетам
				ВзаиморасчетыГрн = ВзаиморасчетыГрн + РегПокупатели.ДолгОсн;
				Если НеПроводитьТМЦ = 0 Тогда
					глПроводка(Контекст,,СчетКонтрагента,РегПокупатели.Долг,"Бартер: Взаиморасчеты с поставщиком сторно.",, ,,,
					Контрагент,ПервыйДок,, ,,"ПХ",1,"Сторно покупки",1);
				КонецЕсли;
				// дополнительные проводки для бартера 
				Если глВыделятьЛиАвансыПоСчету(СчетКонтрагента)=1 Тогда
					// закрываем встречную поставку
					Сч = "371" + ?(Валюта=Гривня,"1","2");
					Если НеПроводитьТМЦ = 0 Тогда
						глПроводка(Контекст,СчетКонтрагента,Сч,РегПокупатели.Долг,"Бартер: сторно второе событие",, Контрагент,ПервыйДок,,
						Контрагент,ПервыйДок,, ,,"ПХ");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры //ДвиженияВзаиморасчеты

// ===============================
Процедура РассчитатьШапку() 

	// взаиморасчеты
	ФлагОтгрузки = 1;
	ЗнакОплаты = +1; 
	
	// взаиморасчеты
	Если ПустоеЗначение(Договор) = 1 Тогда
		ПервыйДок = ПолучитьПустоеЗначение("Документ");
	ИначеЕсли Найти("Договор,Заказ",Договор.Вид()) <> 0 Тогда
		ПервыйДок = Договор;
	Иначе
		ПервыйДок = ПолучитьПустоеЗначение("Документ");
	КонецЕсли;
	
	ПервыйДок = ?(Контрагент.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,Договор, Контрагент.БазДоговор); //  + umk
	
	
	ВремРег = СоздатьОбъект("Регистры");
	глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,ЗнакОплаты,Контрагент, ПервыйДок, Валюта,1);
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда    
		глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,-ЗнакОплаты,Контрагент, ПервыйДок, Валюта,1);
	КонецЕсли;	
	
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчет = СоздатьОбъект("СписокЗначений");
	спПредпочтение = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(спПредпочтение,"Предпочтение");
	
	Если ДавальческоеСырье = 1 Тогда
		// Только давальческое сырье
		спСчет.ДобавитьЗначение(СчетПоКоду("022"));
	Иначе	
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			текСчетУчетаТМЦ = ПолучитьСчетУчетаТМЦ(ТМЦ);
			Если спСчет.НайтиЗначение(текСчетУчетаТМЦ) = 0 Тогда
				спСчет.ДобавитьЗначение(текСчетУчетаТМЦ);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	
	спОтбор.Установить("Счет",спСчет);
	//спОтбор.Установить("ПрихДокумент",спПредпочтение);
	глРассчитатьОстаткиИРезервы(Контекст, ВремРег, спОтбор,1,1,1);	
	// фильтр по складу нужен только для партий
	Если глПартионныйУчетПоСкладам = Да Тогда
	    спОтбор.Установить("МестоХранения", МестоХранения);
	КонецЕсли;
	
	
	Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) 
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
		глРассчитатьОстаткиПартий(Контекст, ВремРег, Фирма, спОтбор,,2);//--- УМК Сандомирский В.Ю, (03.10.14) 6ой параметр : (0 - текущий товар ТЧ \ 1-Заменять товаром для списания \ 2-Заменять товаром для приходования)
	Иначе
		глРассчитатьОстаткиПартий(Контекст, ВремРег, Фирма, спОтбор);//--- УМК Сандомирский В.Ю, (03.10.14) 6ой параметр : (0 - текущий товар ТЧ \ 1-Заменять товаром для списания \ 2-Заменять товаром для приходования)	
	КонецЕсли;
	
	Если Константа.НДСпоВходящимНН = Да Тогда
		// проводку по налоговому кредиту сделаем в
		// документе ЗаписьКнигиПриобретения
		СчетНДС = СчетПоКоду("64.4.2");
		СубконтоНДС1 = Контрагент;
		СубконтоНДС2 = ПервыйДок;
	Иначе
		// сразу налоговый кредит
		СчетНДС = СчетПоКоду("64.1.5");
		СубконтоНДС1 = ВидНДС;
		СубконтоНДС2 = 0;
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);
	
	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	РассчитатьШапку();
	
	Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) //--- УМК Сандомирский В.Ю, (09.10.14) (проверка действует с момента разделения регистров)
				И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
		Если (НеВыполнятьЗаменуТМЦДляСписания = 0) И (глКонтрольНаличияТМЦДляСписания(Контекст) = 1) Тогда //---УМК Сандомирский В.Ю, (09.10.14) контролируем наличие ТМЦДляСписания в ТМЦ табличной части контектста
			//--- если категорично то можно поставить в этом месте 
			//глНеПроводить(Контекст);
		    //Возврат;
		КонецЕсли;
	КонецЕсли;	

	Если ДавальческоеСырье <> 1 Тогда
		ДвиженияВзаиморасчеты();
	КонецЕсли;	
	ВремРег.Актуальность(1);
	Если НеПроводитьТМЦ = 0 Тогда
		Если ДвиженияПартии() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	ВремРег.Актуальность(0);	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
		Товар = ТМЦ;
		ПересчКво = Кво*Коэффициент;
	КонецЦикла;

	Если НеПроводитьТМЦ = 0 Тогда
		глЗаписатьПроводкиВОперацию(Контекст);
	КонецЕсли;
	
	Операция.СуммаОперации = Итог("СуммаСНДС");
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
	
КонецПроцедуры

НеВыполнятьЗаменуТМЦДляСписания =  ?((ПустоеЗначение(Константа.НеВыполнятьЗаменуТМЦДляСписанияВозвратПоставщику)=0) И (ДатаДок>=Константа.НеВыполнятьЗаменуТМЦДляСписанияВозвратПоставщику),1,0); // + umk
