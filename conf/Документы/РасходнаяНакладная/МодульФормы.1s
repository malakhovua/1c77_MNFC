Перем Валюта_Прежн, Курс_Прежн;
Перем СтараяДата;              
Перем СтарВидНДС;
Перем СтарКатегорияЦен;
Перем ФлагБыстраяПродажа;
Перем НачальнаяДатаДокумента;
Перем РегО;
Перем СтруктИзменений;
Перем СписокДействий;
Перем ЭтоНовый;
Перем МаксПроцОткл;
Перем ТЗКонтроля;
Перем мВычитатьВесУпаковки;
Перем КатегорияЦен_Розница;

// ===============================
Перем СпВидыУпаковкиГлобальный; //--- УМК Сандомирский В.Ю. (31.08.14)
Перем СпВидыУпаковкиЛокальный;  //--- УМК Сандомирский В.Ю. (31.08.14)
Перем ПечДокументВзаимозачета;  //--- УМК Сандомирский В.Ю. (04.11.14)
Перем Таб;						//--- УМК Сандомирский В.Ю. (19.02.15)

//====================================================================== УМК Сандомирский В.Ю, (04.11.14)
Процедура ИзмКол() Далее
Процедура ИзмТМЦ() Далее
Процедура УстСкидкаВес() Далее
Процедура ИзмВидУпаковки() Далее    
Процедура ИзмКонтрагент() Далее     //--- УМК Сандомирский В.Ю, (13.02.15)
Процедура ИзмУстановкаСкидок() Далее
Процедура ИзмФ1() Далее
Процедура УстСчетКонтрагента() Далее
Процедура ПриИзмененииРеализацияСотруднику() Далее
Процедура УстановитьВидимостьПоФлагуРеализацияСотруднику() Далее

Функция ПодготовитьТЗПодарков()
	ТЗПодарков = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗПодарков);
	ТЗПодарков.УдалитьСтроки();
	ТЗПодарков.НоваяКолонка("Ключ", "Строка");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ОсновнойТовар) = 0 Тогда
			ТЗПодарков.НоваяСтрока();
			ТЗПодарков.Ключ = ЗначениеВСтрокуВнутр(ОсновнойТовар) + "//" + ЗначениеВСтрокуВнутр(ОсновнойВидУпаковки);
			ТЗПодарков.Кво = Кво;
			ТЗПодарков.СуммаСНДС = СуммаСНДС;
			ТЗПодарков.СуммаБезНДС = СуммаБезНДС;
			ТЗПодарков.НДС = НДС;
		КонецЕсли;
	КонецЦикла;
		
	ТЗПодарков.Свернуть("Ключ", "Кво,СуммаСНДС,СуммаБезНДС,НДС");
	
	Возврат ТЗПодарков;
КонецФункции

Процедура ВывестиЦеныСуммы(Таб, ТаблТМЦ, ТЗПодарков, СБНДС, НеПечататьПодарки, ЭтоСкладская = 0, ПечКво, ПечСуммаБезНДС, ПечСуммаСНДС, ТекстУпак = "",Розница = 0)
	ТекКво = ТаблТМЦ.Кво;
	ТекСуммаБезНДС = ?(Розница = 1,ТаблТМЦ.СуммаСНДС_Розница, 
	                 ?(СБНДС = 1, ТаблТМЦ.СуммаСНДС, ТаблТМЦ.СуммаБезНДС));
	ТекСуммаСНДС =   ?(Розница = 1,ТаблТМЦ.СуммаСНДС_Розница, ТаблТМЦ.СуммаСНДС)          ;

	Поз = 0;
	Если ТЗПодарков.НайтиЗначение(ЗначениеВСтрокуВнутр(ТаблТМЦ.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТаблТМЦ.ВидУпаковки), Поз, "Ключ") = 1 Тогда
		ТЗПодарков.ПолучитьСтрокуПоНомеру(Поз);
		Если (НеПечататьПодарки = 1) И (ЭтоСкладская = 0) Тогда
			//ТекКво = ТекКво + ТЗПодарков.Кво;
			ТекСуммаБезНДС = ТекСуммаБезНДС +  ?(СБНДС = 1, ТЗПодарков.СуммаСНДС, ТЗПодарков.СуммаБезНДС);
			ТекСуммаСНДС = ТекСуммаСНДС + ТЗПодарков.СуммаСНДС;
		ИначеЕсли ЭтоСкладская = 0 Тогда
			ТекстУпак = Строка(ТаблТМЦ.КвоУпаковок) + " упаковок";
		КонецЕсли;		
	КонецЕсли;	
	
	ПечКво = Формат(ТекКво, "Ч12.3");
	ПечСуммаБезНДС = Формат(ТекСуммаБезНДС,"Ч12.2");
	ПечСуммаСНДС = Формат(ТекСуммаСНДС,"Ч12.2");
КонецПроцедуры

//======================================================================
Процедура ПриВыбореОснования()
	ТЗКонтроля = СоздатьОбъект("ТаблицаЗначений");
	Если (ДокументОснование.Выбран() = 1) И (ДокументОснование.Вид() = "УМК_ЗаказКлиента") Тогда
		ДокументОснование.ВыгрузитьТабличнуюЧасть(ТЗКонтроля);
		ТЗКонтроля.Сортировать("ТМЦ,ВидУпаковки");
	КонецЕсли;
КонецПроцедуры // 

//====================================================================== УМК Сандомирский В.Ю. (12.06.14) ЗАПРЕТ РЕДАКТИРОВАНИЯ ЗАПИСАНОГО ДОКУМЕНТА  
Процедура ДоступностьЗаказ()
	Если ((НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") ИЛИ (НазваниеНабораПрав() = "Розница")) И ((ЭтоНовый = 0) ИЛИ (Проведен() = 1)) Тогда
	//((ТекущийДокумент().Проведен() = 1) ИЛИ (ТекущийДокумент().ПометкаУдаления() = 1)) Тогда   //--- если документ проведен то все !!! девочки ничего не могут поменять !!!
		Форма.ТолькоПросмотр(1);
	КонецЕсли;
	// по пользователям 
	Если (ИмяПользователя() = "Ткачева_Е") ИЛИ (ИмяПользователя() = "Ткачева_Е1") Тогда
		Форма.ТолькоПросмотр(0);
	КонецЕсли;
КонецПроцедуры // ДоступностьЗаказ

Процедура ВидимостьДокументаРозница()
	Видимость = ?(ПустоеЗначение(Контрагент.КатегорияЦенРозница.Получить(ДатаДок)) =1,0,1);
	Форма.ЦенаСНДС_Розница.Видимость(Видимость);
	Форма.СуммаСНДС_Розница.Видимость(Видимость);
	Форма.ИтогСуммаСНДС_Розница.Видимость(Видимость);
КонецПроцедуры

Функция ПолучитьКодИзСпецификации(Спец, ТекТМЦ, ТекВидУпаковки, ШтрихКод)	
	Если Спец.КоличествоСтрок() > 0 Тогда
		ТМЦУпаковка = ЗначениеВСтрокуВнутр(ТекТМЦ) + "//" + ЗначениеВСтрокуВнутр(?(ТекВидУпаковки = НетУп, ПолучитьПустоеЗначение("Справочник.ВидыУпаковки"), ТекВидУпаковки));
		Стр = 0;			
		Если Спец.НайтиЗначение(ТМЦУпаковка, Стр, "ТМЦУпаковка") = 1 Тогда
			ШтрихКод = Спец.ПолучитьЗначение(Стр, "КодДляШК");
			Возврат Спец.ПолучитьЗначение(Стр, "КодКлиента");
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
КонецФункции

// ===============================
Функция ВыполнитьПроверкуПечати(ТаблТМЦ, НеПроверятьИсключения = 0)
	МожноПечатать = 0;
	ПрайсКонтрагента = Контрагент.КатегорияЦен.Получить(ДатаДок);
	Спр = СоздатьОбъект("Справочник.ПрайсКонтр");
	Спр.ВыбратьЭлементы();
	Если НеПроверятьИсключения = 0 Тогда
		Если (Спр.НайтиПоРеквизиту("Контрагент",Контрагент,1)) = 1 Тогда
			Если Спр.ПометкаУдаления() = 0 Тогда
				Если Спр.РазрешитьМенятьЦену = Да Тогда
				    МожноПечатать = 2;
				Иначе
					МожноПечатать = 1;
				КонецЕсли;				
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	Если (КатегорияЦен <> ПрайсКонтрагента) и ((НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр"))
		 И (ПустоеЗначение(ПрайсКонтрагента) = 0) Тогда
		Если МожноПечатать = 0 Тогда
			Если НеПроверятьИсключения = 1 Тогда
			    Сообщить("Тип прайса не соотв. контрагенту");
			Иначе
				Предупреждение("Тип прайса не соотв. контрагенту");
			КонецЕсли;			
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Если ((НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр")) И (МожноПечатать <> 2) Тогда
	    ТаблТМЦ.ВыбратьСтроки();
		Пока ТаблТМЦ.ПолучитьСтроку() = 1 Цикл
			Если ТаблТМЦ.НеНачислятьБонус <> Да Тогда
				ЦСНДС = глВернутьЦену(ТаблТМЦ.ТМЦ, КатегорияЦен, ?(ПустоеЗначение(ДатаЦ) = 1, ДатаДок, ДатаЦ), Валюта, ,1);
				ЦСНДС = ЦСНДС + глПолучитьЦенуВУП(ТаблТМЦ, КатегорияЦен, ?(ПустоеЗначение(ДатаЦ) = 1, ДатаДок, ДатаЦ), Валюта, ?(ПустоеЗначение(ДатаЦ) = 1, ДатаДок, ДатаЦ), ТаблТМЦ.ТМЦ);
				Если ПустоеЗначение(ТаблТМЦ.Тара) = 0 Тогда
					БКЦ = ТаблТМЦ.Тара.БазоваяКатегорияЦены.Получить(ДатаДок);
					Если ПустоеЗначение(БКЦ) = 0 Тогда
						ЦТары = глВернутьЦену(ТаблТМЦ.Тара, БКЦ, ?(ПустоеЗначение(ДатаЦ) = 1, ДатаДок, ДатаЦ), Валюта);
						Если ТаблТМЦ.ТМЦ.ТипТовара = Перечисление.ТипыТоваров.Штучный Тогда
							ЦТары = ЦТары * ТаблТМЦ.ТМЦ.Вес;
						КонецЕсли;
						ЦСНДС = ЦСНДС + Окр(ЦТары, 2);
					КонецЕсли;				
				КонецЕсли;
				
				Разница = ?(ТаблТМЦ.ЦенаБезСкидки = 0, ТаблТМЦ.ЦенаСНДС, ТаблТМЦ.ЦенаБезСкидки) - ЦСНДС;
				Разница = ?(Разница < 0, -Разница, Разница);
				Если Разница > 0.05 Тогда
					ТекстСообщения = "В строке: " + Строка(ТаблТМЦ.НомерСтроки) + " цена с НДС: " + Строка(ТаблТМЦ.ЦенаСНДС) + 
						" не соответствует заданной в справочнике: " + ЦСНДС;
					Если НеПроверятьИсключения = 1 Тогда
						Сообщить(ТекстСообщения);
					Иначе
						Предупреждение(ТекстСообщения);
					КонецЕсли;
					Возврат 0;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	Возврат 1;
КонецФункции

// ===============================
Функция УстДоступность()
	ДоступностьЗаказ();  //--- УМК Сандомирский В.Ю. (12.06.14) запрет редактирования проведенного документа 
 	
// ==== alexa
	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") Тогда
	    Форма.КатегорияЦен.Доступность(0);
		Форма.ЦенаБезНДС.Доступность(0);
		Форма.ЦенаСНДС.Доступность(0);
	КонецЕсли; 

	Спр = СоздатьОбъект("Справочник.ПрайсКонтр");
	Спр.ВыбратьЭлементы();
	Если (Спр.НайтиПоРеквизиту("Контрагент",Контрагент,1))=1 Тогда
		Если Спр.ПометкаУдаления() = 0 Тогда
			Форма.КатегорияЦен.Доступность(1);
			Если Спр.РазрешитьМенятьЦену = Да Тогда
			   	Форма.ЦенаБезНДС.Доступность(1);
				Форма.ЦенаСНДС.Доступность(1); 			    
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 

	// Разрешить изменение контрагента Бернацкая
	//Если Контрагент.Код = "75" Тогда
	//   	Форма.ЦенаБезНДС.Доступность(1);
	//	Форма.ЦенаСНДС.Доступность(1); 
	//КонецЕсли;

	// ===== alexa - end
	Если НазваниеНабораПрав() <> "Администратор" Тогда
	    Форма.ВесУп.Доступность(0);
	КонецЕсли;

	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	Форма.Заголовок(глЗаголовок(Контекст,"Расходная накладная"));
	// доступность в зависимости от слоя                                    
	Закл = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		ДостКасса = 1;
	Иначе
		ДостКасса = 0;
	КонецЕсли;
	Если Закл = "Основной" Тогда
		Форма.тКасса.Доступность(ДостКасса);
		Форма.Касса.Доступность(ДостКасса);
		фВидимостьКредит = ?(ВидТорговли = Перечисление.ВидыТорговли.Кредит,1,0);
		Форма.тДатаОплаты.Видимость(фВидимостьКредит);
		Форма.тГлубина.Видимость(фВидимостьКредит);
		Форма.Глубина.Видимость(фВидимостьКредит);
		
		Если ПустоеЗначение(УМК_РН_Родитель) = 1 Тогда
			Форма.кРНРодитель.Видимость(0);
			Форма.тРНРодитель.Видимость(0);
		Иначе
			Форма.кРНРодитель.Видимость(1);
			Форма.тРНРодитель.Видимость(1);
		КонецЕсли;
		
		Если ПустоеЗначение(УМК_РН_Дочерняя) = 1 Тогда
			Форма.тРНДочерняя.Видимость(0);
			Форма.кРНДочерняя.Видимость(0);
		Иначе
			Форма.тРНДочерняя.Видимость(1);
			Форма.кРНДочерняя.Видимость(1);
		КонецЕсли;
		
	КонецЕсли;  
	Если Форма.ТолькоПросмотр()=1 Тогда
		// Если открыли только на просмотр, то надо кнопки сделать недоступными
		Форма.кФирма.Доступность(0);
		Форма.кВалюта.Доступность(0);
		//Форма.кОсн.Доступность(0);
		//Форма.кОК.Доступность(0);
		//Форма.кПровести.Доступность(0);
		//Форма.кДействия.Доступность(0);
		СписокДействий = глПолучитьСписокДействий("
		    |Экспорт_dbf,
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные");	    

		Форма.кДатьСкидку.Доступность(0);
		Форма.кПодбор.Доступность(0);
		Форма.кПредварительно.Доступность(0);
		Форма.кБыстраяПродажа.Видимость(0);
		Форма.КнопкаПоУмолчанию("кЗакрыть");
		Форма.кСортХ.Доступность(0);
		Форма.кСортГ.Доступность(0);
		Если ((НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр")) И (ТекущийДокумент().ПометкаУдаления() = 1) Тогда
			Форма.кПечать.Доступность(0);
			Форма.кПечать1.Доступность(0);
			Форма.кЭкспорт.Доступность(0);
		КонецЕсли;
	Иначе	
		Если ФлагБыстраяПродажа = Да Тогда
			Форма.кПредварительно.Видимость(0);
			Форма.кПровести.Видимость(0);
			Форма.кПечать.Видимость(0);
			Форма.кЗакрыть.Видимость(0);
			Форма.кОК.Видимость(0);
			Форма.кБыстраяПродажа.Видимость(1);
			Форма.КнопкаПоУмолчанию("кБыстраяПродажа");
		Иначе
			Форма.кПровести.Видимость(1);
			Форма.кПечать.Видимость(1);
			Форма.кЗакрыть.Видимость(1);
			Форма.кОК.Видимость(1);
			Форма.кБыстраяПродажа.Видимость(0);
		 	Форма.КнопкаПоУмолчанию("кОК");
		КонецЕсли;
	КонецЕсли;
	Форма.ДопКво.Доступность(ТМЦ.УчетДопКво);
	
	Если ( (НазваниеНабораПрав() = "Администратор") //--- УМК Сандомирский В.Ю. (23.07.14) кнопку видит Саша и Администраторы
			ИЛИ (НазваниеНабораПрав() = "ПроизводствоКасса") 
			ИЛИ (НазваниеНабораПрав() = "ПроизводствоСбыт")) 
			И 	(Закл = "Основной") Тогда 
		Форма.кнПроцентОкругление.Видимость(1);
	Иначе
		Форма.кнПроцентОкругление.Видимость(0);		 	
	КонецЕсли;
	
	Если (глПользователь.фПривелегииДатаЗапрета = 1) И  (Выбран() = 1) Тогда  //--- УМК Сандомирский В.Ю. (13.08.14)  возможно менять договор привелегированым
		Форма.кОсн.Доступность(1);
		Форма.кОК.Доступность(1);
	КонецЕсли;
	                     
	Если ПустоеЗначение(Контрагент.КонтрагентВзаимозачета) = 1 Тогда
		Форма.ФлагКонтрагентВзаимозачета.Доступность(0);
	Иначе
		Форма.ФлагКонтрагентВзаимозачета.Доступность(1);
	КонецЕсли;
		
	ПечДокументВзаимозачета = ДокументВзаимозачета; //--- УМК Сандомирский В.Ю. (04.11.14)
	
	Возврат "";
КонецФункции	// ... УстДоступность

Процедура ПриИзмененииРеализацияСотруднику()
	
	УстановитьВидимостьПоФлагуРеализацияСотруднику();
		
	Если РеализацияСотруднику = 1 Тогда
		ФлагКонтрагентВзаимозачета = 0;
		Контрагент = Константа.СотрудникРП;
	Иначе
		Сотрудник = "";
	КонецЕсли;
	
	УстСчетКонтрагента();
	
	Если ПустоеЗначение(ПериодЗарплаты) = 1 Тогда
		ПериодЗарплаты = НачМесяца(ДобавитьМесяц(ДатаДок,-1))
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьПоФлагуРеализацияСотруднику()
	
	Если РеализацияСотруднику = 1 Тогда
		Форма.Контрагент.Видимость(0);
		Форма.Сотрудник.Видимость(1);
		Форма.НадписьПериодЗарплаты.Видимость(1);
		Форма.ПериодЗарплаты.Видимость(1);
		Форма.ЗакрытьДолгЗП.Видимость(1);
		Форма.ФлагКонтрагентВзаимозачета.Видимость(0);
	Иначе
		Форма.Контрагент.Видимость(1);
		Форма.Сотрудник.Видимость(0);
		Форма.НадписьПериодЗарплаты.Видимость(0);
		Форма.ПериодЗарплаты.Видимость(0);
		Форма.ЗакрытьДолгЗП.Видимость(0);
		Форма.ФлагКонтрагентВзаимозачета.Видимость(1);
	КонецЕсли;
	
КонецПроцедуры	

// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;
	Если Контрагент.ГлубинаВКалендарныхДнях	= 1 Тогда
		ДатаОплаты=ДатаДок + Глубина;	
	Иначе	
		ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстГлубина()
	// Формирует и показывает дату оплаты
	Если (ВидТорговли = Перечисление.ВидыТорговли.Кредит) И (Контрагент.Выбран() = 1) Тогда
		Если Контрагент.Глубина.Получить(ДатаДок) <> 0 тогда    
			Если ПустоеЗначение(Глубина)=1 тогда
				Глубина=Контрагент.Глубина.Получить(ДатаДок);
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		Глубина=0;
	КонецЕсли;	
	ИзмГлубина();
КонецПроцедуры	

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	УстГлубина(); 
КонецПроцедуры
         
// ===============================
// Назначение: Пересчет сумм в строке документа
//		
// Аргументы: НоваяЦена - новая цена для текущей строки документа
//		
Процедура ПересчетСтроки(НоваяЦена=0)
	Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда                                  
			// определим ставку НДС
			Если ВидНДС = ОсновнаяСтавкаНДС Тогда
				СтавкаНДС = ТМЦ.СтавкаНДС;
			Иначе
				СтавкаНДС = ВидНДС;
			КонецЕсли;
			// устанавливаем цену без НДС
			ЦенаБезНДС = НоваяЦена*100/(глПроцентНДС(СтавкаНДС,ДатаДок)+100);
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,-1);
	Иначе                     
		Если ПустоеЗначение(НоваяЦена) = 0 Тогда
			ЦенаСНДС = НоваяЦена;
		КонецЕсли;
		глВыч_Суммы_Накл(Контекст,1);
	КонецЕсли;  
	
КонецПроцедуры //ПересчетСтроки

//Расчет колонки розничная цена, сумма.
Процедура ПересчетЦенаСуммаРозница(Товар, пКатегорияЦен)
	
	Перем ЦенаТовара;
	
	Если (ПустоеЗначение(пКатегорияЦен) = 1) ИЛИ (ПустоеЗначение(Товар)=1) Тогда
		Возврат;
	КонецЕсли;
	
	ЦенаСНДС_Розница = 0;
	ВалДок = Валюта;
	КурсВ = Курс;                                                                     
	КурсИЗ = Дата_курса;
	ДатаКурса = Дата_курса;
	пДатаЦ = глПолучитьДатуЦ(Контекст);
		
	// вычисляем цену
	Если Товар.Вид() = "ТМЦ" Тогда
		ЦенаТовара = глВернутьЦену(Товар, пКатегорияЦен);
	КонецЕсли;

	Если ПустоеЗначение(ЦенаТовара) = 1 Тогда
		// для товара в категории цены нет
		ЦенаЦены = 0;
		ВалютаЦены = Валюта;
		ЕдЦены = Ед;
		Сообщить("Для товара: " + Строка(Товар) + " цена в рознице не задана");
	Иначе
		// получим параметры цены
		ЦенаТовара.ИспользоватьДату(пДатаЦ);
		ЦенаЦены = ЦенаТовара.Цена;
		ВалютаЦены = ЦенаТовара.Валюта;
		ЕдЦены = ЦенаТовара.Единица;		
	КонецЕсли;	
	
	Попытка		              
		Если ПустоеЗначение(Коэффициент) = 1 Тогда
			ЦенаЦены = ЦенаЦены * 1 / ЕдЦены.Коэффициент;
		Иначе     
			ЦенаЦены = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;			
		КонецЕсли;	
	Исключение       
		// если на дату документа у единицы еще не было коэффициента
		ЦенаЦены = 0;
		глКомментарий(Шаблон("У единицы [ЕдЦены] на дату [ДатаДок] не установлен коэффициент."),1);
	КонецПопытки;
	    
	ЦенаЦены = глПересчет(ЦенаЦены,ВалютаЦены,КурсИЗ,ВалДок,КурсВ,ДатаКурса);
	ДДок = пДатаЦ;
	ЦенаЦены = ЦенаЦены + глПолучитьЦенуВУП(Контекст, пКатегорияЦен, ДДок, ВалДок, ДатаКурса, Товар);
	
	ЦенаТары = 0;
	ЦенаТары = глВернутьЦену(Тара, Тара.БазоваяКатегорияЦены.Получить(ДатаДок), ДатаДок, ВалДок) * ?(Ед.Единица = Константа.БазЕдиница, 1, Ед.Вес);
	
	//Акции скидки 
	ЕстьАкция = 0;
	глУстановитьСкидкуПоАкции(Контекст, ЦенаЦены, Товар, ЕстьАкция, пКатегорияЦен);	
	//Конец акции сидки
	
	ЦенаЦены = ЦенаЦены + ЦенаТары;	
   
    ЦенаСНДС_Розница = ЦенаЦены;
	СуммаСНДС_Розница = Кво*ЦенаСНДС_Розница;
    	
	
КонецПроцедуры

// ===============================
// Назначение: пересчитывает суммы в строках документа при изменении реквизитов шапки
//		
// Аргументы: Реквизит - наименование измененного реквизита
//		
Процедура ИзмРеквизитШапки(Реквизит, ИмяРекв = "") 	
	СтарКЦ = КатегорияЦен;
	Если (Реквизит = "Контрагент") ИЛИ (Реквизит = "ДатаДок") Тогда //--- УМК Сандомирский В.Ю. (13.02.15) 
		ИзмКонтрагент();
		УстановкаСкидокТМЦ = глПолучитьДокументУстановкиСкидок(ДатаДок, Контрагент);
	КонецЕсли;
	
	//// пересчитаем суммы НДС в строках табличной части     				//--- УМК Сандомирский В.Ю. (13.02.15)  коментил                                                 
	//Если (СтарВидНДС=ВидНДС) И (СтарКатегорияЦен=КатегорияЦен) Тогда		//--- УМК Сандомирский В.Ю. (13.02.15)  коментил
	//	// ничего не изменилось												//--- УМК Сандомирский В.Ю. (13.02.15)  коментил
	//    Возврат;     														//--- УМК Сандомирский В.Ю. (13.02.15)  коментил
	//Иначе																	//--- УМК Сандомирский В.Ю. (13.02.15)  коментил
		СтарВидНДС		=ВидНДС;
		СтарКатегорияЦен=КатегорияЦен;
	//КонецЕсли; 															//--- УМК Сандомирский В.Ю. (13.02.15)  коментил
	
	Если КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;      
	
	//текОтвет = Вопрос("В документе изменен реквизит """+?(ИмяРекв = "", Реквизит, ИмяРекв)+""". Перезаполнить цены заново?","Да+Нет"); //--- УМК Сандомирский В.Ю. (13.02.15)  коментил
	Если (РодительскийДокумент.Вид() = "ПриходнаяНакладнаяЗапасы") И (Реквизит = "Контрагент") Тогда
		Если Вопрос("Пересчитать цены?", "Да+Нет") = "Нет" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Предупреждение("При измении " + ИмяРекв + " перезаполнены цены ");

	Ф1Округление = Контрагент.Ф1Округление.Получить(ДатаДок);
	КатегорияЦен_Розница = Контрагент.КатегорияЦенРозница.Получить(ДатаДок);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глПриИзмененииТовара(Контекст, 1);
		//Цена, сумма в рознице
		Если ПустоеЗначение(КатегорияЦен_Розница) = 0 Тогда
			ПересчетЦенаСуммаРозница(ТМЦ, КатегорияЦен_Розница)
		КонецЕсли;
	КонецЦикла;
	Если Ф1Округление = 1 Тогда
		ИзмФ1();
	КонецЕсли;	
КонецПроцедуры 
                
// ===============================
Процедура ИзмВидТары()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("В документе изменен вид тары! Пересчитать суммы ?","Да+Нет") = "Да" Тогда
			текОсновнаяЦена = Константа.ОсновнаяЦена;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл    
				Если ПустоеЗначение(ТМЦ) = 1 Тогда
					Продолжить;
				ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
					ПересчетСтроки();
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура Печать(БыстраяПечать=0, А4 = "", ПДФ = 0, Экспорт_xls = 0) Далее

// ===============================
Процедура БыстраяПродажа() // Процедура быстрой продажи
	
	Если Фирма.РС.Выбран()=0 Тогда
		Предупреждение("У фирмы """+СокрЛП(Фирма)+""" не выбран счет по умолчанию. Оформить быструю продажу нельзя.");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	глПроверкаДатыДок(Контекст,"Проведение");
	Если СтатусВозврата()=0 Тогда
	    Возврат;
	КонецЕсли;
	
	АвтоВремяТекущее();
	Записать();          
	
	Попытка

		НачатьТранзакцию();
		
		// счет
		Если глВосстановитьЗначение(,"ПечКолЭкзСчетаПриБыстройПродаже")>=0 Тогда
			Счет = СоздатьОбъект("Документ.Счет");
			Счет.Новый();
			Счет.ДатаДок = ДатаДок;
			Счет.АвтоВремяТекущее();
			
			Счет.Фирма = Фирма;
			Счет.Автор = Автор; 
			
			Счет.Контрагент 		= Контрагент;
			Счет.Договор 			= Договор;
			Счет.Валюта				= Валюта;
			Счет.Курс				= Курс;
			Счет.Дата_курса			= Дата_курса;
			Счет.СрокРезервирования = 1;
			Счет.РСчет 				= Фирма.РС;
			Счет.ВидТорговли 		= ВидТорговли;
			Счет.ВидТары 			= ВидТары;
			Счет.КатегорияЦен 		= КатегорияЦен;
			Счет.ВидНДС 			= ВидНДС;
			Счет.ЧтоПродаем			= Перечисление.ЧтоПродаем.ТМЦ;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()>0 Цикл
				Счет.НоваяСтрока();
				НазначитьВид(Счет.ТМЦ,"ТМЦ");
				Счет.ТМЦ 			= ТМЦ; 
				Счет.Кво 			= Кво;
				Счет.Ед 			= Ед;
				Счет.ЦенаБезНДС 	= ЦенаБезНДС;
				Счет.ЦенаСНДС 		= ЦенаСНДС;
				Счет.Коэффициент 	= Коэффициент;
				Счет.СуммаБезСкидки = СуммаБезСкидки;
				Счет.Скидка 		= Скидка;
				Счет.СуммаБезНДС 	= СуммаБезНДС;
				Счет.СуммаСНДС 		= СуммаСНДС;
				Счет.НДС 			= НДС;
			КонецЦикла;	
			
			глУстановитьНомер(Счет);	// меняем номер
			Счет.Записать();
			Счет.Провести(1);
			
			Если Счет.Проведен()<=0 Тогда
				ОтменитьТранзакцию();
				СтатусВозврата(0);                        
				Возврат;
			КонецЕсли;
			
			ДокументОснование = Счет.ТекущийДокумент();
			Основание		  = СокрЛП(Счет.ПредставлениеВида())+" №"+СокрЛП(Счет.НомерДок)+" от "+Шаблон("[Счет.ДатаДок]");
		КонецЕсли;                                     
		
        Записать();  // записываем
		Провести(1); // проводим
		Если Проведен()<=0 Тогда 
			ДокументОснование = 0;
			Основание = "";
			ОтменитьТранзакцию();
			СтатусВозврата(0);                        
			Возврат;
		КонецЕсли;
		
		// налоговая накладная
		Если глВосстановитьЗначение(,"ПечКолЭкзННПриБыстройПродаже")>=0 Тогда
			Параметр = СоздатьОбъект("СписокЗначений");
			Параметр.ДобавитьЗначение(ТекущийДокумент(),"ДокументОснование");
			ОткрытьФормуМодально("Обработка.ФормированиеНалоговыхДокументов#",Параметр);
			спНалоговые	  = СоздатьОбъект("СписокЗначений");
			фВсеПроведены = 1;
			Док = СоздатьОбъект("Документ");
			Док.ВыбратьПодчиненныеДокументы(ДатаДок,ДатаДок,ТекущийДокумент());
			Пока Док.ПолучитьДокумент()=1 Цикл
				Если Док.Вид() = "НалоговаяНакладная" Тогда
					Если Док.РодительскийДокумент = ТекущийДокумент() Тогда
						Если Док.Провести() = 0 Тогда
							фВсеПроведены=0
						КонецЕсли;
						спНалоговые.ДобавитьЗначение(Док.ТекущийДокумент());
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если фВсеПроведены=0 Тогда
				СделатьНеПроведенным();	// отменяем проведение накладной
				ОтменитьТранзакцию();
				СтатусВозврата(0);                        
				Возврат;
			КонецЕсли;
		КонецЕсли;

		// Приходный ордер
		Если (глВосстановитьЗначение(,"ПечКолЭкзПрихОрдераПриБыстройПродаже")>=0)
		И (ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
			ПКО = СоздатьОбъект("Документ.ПриходныйКассовый");
			ПКО.Новый();
			ПКО.ДатаДок = ДатаДок;
			ПКО.АвтоВремяТекущее();
			
			ПКО.Фирма = Фирма;
			ПКО.Автор = Автор; 

			ПКО.Счет 			= СчетПоКоду(?(Валюта = Гривня, "36.1", "36.2"));
			ПКО.НазначитьТип("Субконто1",ТипЗначенияСтр(Контрагент));
			ПКО.Субконто1 		= Контрагент;
			ПКО.ДокументДоговор = Договор;         
			ПКО.НазначитьТип("Субконто2",ТипЗначенияСтр(Договор));
			ПКО.Субконто2 		= Договор;					
			ПКО.ПринятоОт 		= ?(ПустоеЗначение(Контрагент.ПолнНаименование)=0,Контрагент.ПолнНаименование,Контрагент.Наименование);
			ПКО.ВидОплаты 		= Перечисление.ВидыОплаты.Оплата;
			ПКО.РСчет 			= глПолучитьКассу(Фирма,Валюта);
			ПКО.ВидНДС 			= ВидНДС;
			ПКО.СуммаВал		= Итог("СуммаСНДС");
			ПКО.НДС				= Итог("НДС");
			
			ПКО.ДокументОснование = ТекущийДокумент();
			ПКО.Основание 		  = СокрЛП(ПредставлениеВида())+" №"+СокрЛП(НомерДок)+" от "+Шаблон("[ДатаДок]");
			
			глУстановитьНомер(ПКО);	// меняем номер
			Если Константа.ПроводкиПоКассеТолькоОрдерами = Нет Тогда
				ПКО.НеПроводить = 1;
			КонецЕсли;	            
			ПКО.Записать();
			
			ПКО.Провести(1);
			Если ПКО.Проведен()<=0 Тогда 
				ДокументОснование = 0;
				Основание = "";
				СделатьНеПроведенным();	// отменяем проведение накладной
				ОтменитьТранзакцию();
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
        
		// печатаем счет
		Если глВосстановитьЗначение(,"ПечКолЭкзСчетаПриБыстройПродаже")>0 Тогда
			ОткрытьФорму(Счет.ТекущийДокумент(),"БыстраяПечать");
		КонецЕсли;
		
		// печатаем накладную
		Если глВосстановитьЗначение(,"ПечКолЭкзНакладнойПриБыстройПродаже")>0 Тогда
			Печать(1);
		КонецЕсли;
		
		// печатаем налоговую накладную
		Если глВосстановитьЗначение(,"ПечКолЭкзННПриБыстройПродаже")>0 Тогда
			// Печатаем все налоговые
			Для Инд = 1 по спНалоговые.РазмерСписка() Цикл
				НН = спНалоговые.ПолучитьЗначение(Инд);
				ОткрытьФорму(НН,"БыстраяПечать");
			КонецЦикла;
		КонецЕсли;                     
		
		// печатаем ПКО
		Если (глВосстановитьЗначение(,"ПечКолЭкзПрихОрдераПриБыстройПродаже")>=0)
		И (ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
			ОткрытьФорму(ПКО.ТекущийДокумент(),"БыстраяПечать");
		КонецЕсли;                     
		// фиксируем все изменения
		ЗафиксироватьТранзакцию();
		Форма.Закрыть(0);
	Исключение
		// при возникновении ошибки отменяем все изменения
		// здесь можно выдать сообщение об ошибке
		ОтменитьТранзакцию();
		// сообщение используется для отладки
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
    
КонецПроцедуры	    // БыстраяПродажа    

// ===============================
Процедура ЧастичноПровести()
	фМожноПроводить = 1;
	Если Проведен()=1 Тогда
		Если РежимПроведения=0 Тогда
			фМожноПроводить = 0;
			Предупреждение("Документ "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
			               " полностью проведен. Предварительное проведение невозможно.");
		КонецЕсли;
	ИначеЕсли ДатаДок<ПолучитьДатуТА() Тогда
		фМожноПроводить = 0;
		Предупреждение("Предварительное проведение задним числом невозможно.");
	ИначеЕсли ДатаДок<>РабочаяДата() Тогда
		фМожноПроводить = 0;
		Предупреждение("Дата документа "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
		               " отличается от рабочей даты ("+Формат(РабочаяДата(),"ДДММГГГГ")+"). Предварительное проведение невозможно.");
	КонецЕсли;
				
	Если фМожноПроводить = 1 Тогда
		Провести(3,1);
		Если Проведен() = 1 Тогда
			УстДоступность();
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры
    
// ===============================
Процедура УстСчетКонтрагента()
	
	Если (((СчетКонтрагента.Валютный=1) И (Валюта=Гривня))
	ИЛИ ((СчетКонтрагента.Валютный<>1) И (Валюта<>Гривня))
	ИЛИ (ПустоеЗначение(СчетКонтрагента)=1)) Тогда
		СчетКонтрагента = СчетПоКоду(?(Валюта = Гривня, "36.1", "36.2"));	
	КонецЕсли;
		
КонецПроцедуры
                       
// ===============================
Процедура ИзмСчетКонтрагента()
	Если ПустоеЗначение(СчетКонтрагента) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
		глКомментарий("Выбранный счет не является счетом учета взаиморасчетов!",1,,"!");
		СчетКонтрагента = 0;             
	ИначеЕсли (Валюта = Гривня)
	И (СчетКонтрагента.Валютный = 1) Тогда
		глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
		СчетКонтрагента = 0;       
	ИначеЕсли (Валюта <> Гривня)
	И (СчетКонтрагента.Валютный = 0) Тогда
		глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
		СчетКонтрагента = 0;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ВыборКассы()
	спКассы = глЗаполнитьСпКассы(Фирма,Валюта);
	спКассы.ВыбратьЗначение(Касса,,,,2);
КонецПроцедуры

// ===============================
Процедура ИзмКасса()
	Если Касса.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	Если Валюта <> Касса.Валюта Тогда
		Предупреждение("Выбранная Вами касса должна соответствовать валюте документа!");
		Касса = глПолучитьКассу(Фирма,Валюта);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования валюты в документе
	ОткрытьФормуМодально("Обработка.ИнформацияОВалюте", Контекст);
	УстСчетКонтрагента();
	ИзмКасса();
КонецПроцедуры	
                    
// ===============================
Процедура ИзмВидТорговли()
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Если (Касса.Выбран() = 0) ИЛИ (Касса.Валюта <> Валюта) Тогда
		    Касса = глПолучитьКассу(Фирма,Валюта);
		КонецЕсли;
	Иначе
		Касса = 0;
	КонецЕсли;
	УстГлубина();		
КонецПроцедуры	

// ===============================
Процедура ИзмДоговор()
	Если Договор.Выбран() = 1 Тогда
		Если Договор.Вид() = "Договор" Тогда
			Валюта_Прежн = Валюта;
			Валюта = Договор.Валюта;
			Если Валюта <> Валюта_Прежн Тогда
				Дата_Курса=ДатаДок;
				Курс_Прежн = Курс;
				Курс = глКурсДляВалюты(Валюта,ДатаДок);
				Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
					// что-то изменилось, надо пересчитать цены
					глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
					УстСчетКонтрагента();
				КонецЕсли;
			КонецЕсли;
			
			//ВидТорговли = Договор.ВидТорговли; //--- УМК Сандомирский В.Ю. (26.03.15)
			//ВидНДС = Договор.ВидНДС;		 	 //--- УМК Сандомирский В.Ю. (26.03.15)	
			//ИзмРеквизитШапки("ВидНДС");		 //--- УМК Сандомирский В.Ю. (26.03.15)
			
		Иначе
			Дата_Курса=ДатаДок;
			Курс_Прежн = Курс;
			Курс = глКурсДляВалюты(Валюта,ДатаДок);
			Если ((Валюта_Прежн <> Валюта) Или (Курс_Прежн <> Курс)) Тогда
				// что-то изменилось, надо пересчитать цены
				глУстан_Вал(Контекст, Валюта, Валюта_Прежн, Курс, Курс_Прежн);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;    
	ИзмВидТорговли();
КонецПроцедуры 

// ===============================
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран() = 1 Тогда
		Если Договор.Выбран()=1 Тогда
			Если Контрагент <> Договор.Контрагент Тогда
			    Договор = 0;
			КонецЕсли;
		КонецЕсли;	
		// подставляем БазДоговор в зависимоти от константы
		Если (Константа.ПодставлятьОсновнойДоговор = Да) 
		И (ПустоеЗначение(Контрагент.БазДоговор)=0) 
		И (ПустоеЗначение(Договор)=1) Тогда
			Если Фирма = Контрагент.БазДоговор.Фирма Тогда
				Договор = Контрагент.БазДоговор;
				ИзмДоговор();
			КонецЕсли;
		КонецЕсли;
		Если Договор.Выбран() = 1 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли", Договор.Вид()) = Да Тогда
				Если ПустоеЗначение(Договор.ВидТорговли) = 0 Тогда
					ВидТорговли = Договор.ВидТорговли;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	                      		
		Если (ПустоеЗначение(Контрагент.ВидТорговли) = 0)
		И (ПустоеЗначение(ВидТорговли) = 1) Тогда   
			Если Контрагент.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
			    ВидТорговли = Контрагент.ВидТорговли;      
			Иначе	
				ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(ВидТорговли) = 1 Тогда
			ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		КонецЕсли;                                             		
		УстГлубина();		
		Если ПустоеЗначение(Контрагент.КатегорияЦен.Получить(ДатаДок)) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);
		Иначе	
			КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
	    КонецЕсли;
		
		//Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		//	Если ДокументОснование.Контрагент <> Контрагент Тогда
		//		ДокументОснование = 0;
		//	КонецЕсли;	
		//КонецЕсли;	
		
		Если ПустоеЗначение(Контрагент.КонтрагентВзаимозачета) <> 1 Тогда //--- УМК Сандомирский В.Ю. (04.11.14) 
			ФлагКонтрагентВзаимозачета = 1;
		Иначе
			ФлагКонтрагентВзаимозачета = 0;
		КонецЕсли;
		ДатаЦ = Контрагент.ДатаЦ.Получить(ДатаДок);
		Если ПустоеЗначение(ДатаЦ) = 1 Тогда
			ДатаЦ = ДатаДок;
		КонецЕсли;
		Если Контрагент.СкидкаНаВес <> 0 Тогда // Установим скидку на вес 
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				УстСкидкаВес();
			КонецЦикла;
		КонецЕсли;
		НеИспользоватьСВес = Контрагент.НеИспользоватьСВес;
		КвоЗнаков          = Контрагент.Окр3;
	Иначе
		ВидТорговли = глВосстановитьЗначение(,"ОсновнойВидТорговли");
		Договор = 0;
		ДокументОснование = 0;
	КонецЕсли;                                        
	ИзмВидТорговли(); 
	КатегорияЦен_Розница = Контрагент.КатегорияЦенРозница.Получить(ДатаДок);
	ВидимостьДокументаРозница();

КонецПроцедуры
                     
// ===============================
Процедура ОчиститьЗаказ()
	Если Договор.Выбран() = 1 Тогда
		Договор = 0;
	КонецЕсли;
КонецПроцедуры 

// ===============================
Процедура ЗаполнитьПоУмолчанию()
	СубконтоВалДох = глВосстановитьЗначение(Контекст,"СубконтоВалДох",Константа.БазВаловыйДоход);
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
		Дата_Курса=ДатаДок;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	КонецЕсли;
	Отпустил = глВосстановитьЗначение(,"БазОтпустил");
	// проверим реквизит Отпустил на принадлежность к выбранной фирме
	Если ПустоеЗначение(Отпустил) = 0 Тогда
		Если Отпустил.Фирма <> Фирма Тогда
			Отпустил = 0;
		КонецЕсли;	
	КонецЕсли;	
	МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад",Константа.ОсновнойСклад);  
	Подразделение = глВосстановитьЗначение(,"БазПодразделениеПродажи");
	// проверим реквизит Подразделение на принадлежность к выбранной фирме
	Если ПустоеЗначение(Подразделение) = 0 Тогда
		Если Подразделение.Владелец <> Фирма Тогда
			Подразделение = 0;
		КонецЕсли;	
	КонецЕсли;	
	Если ПустоеЗначение(Отпустил) = 0 Тогда
		Если Отпустил.Фирма <> Фирма Тогда
			Отпустил = 0;
		КонецЕсли;	
	КонецЕсли;	
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	УстСчетКонтрагента();
	ВидТары = Перечисление.ВидыТары.Залоговая;
	УстГлубина();       
КонецПроцедуры

// ===============================
Процедура ВводНового(ПризнакКопирования)
	
	Если ПустоеЗначение(Константа.ДатаДокументовПринудительная) <> 1 Тогда //--- УМК Сандомирский В.Ю, принудительная дата создания документов (13.06.14)
		ДатаДок = Константа.ДатаДокументовПринудительная;
	КонецЕсли;
	
	ИтогоВесК = 0;
	Если ПризнакКопирования = 1 Тогда
		 
		ДокументВзаимозачета = ""; 				//--- УМК Сандомирский В.Ю, (25.02.15) !!! Очищаем взаимоасчет иначе он удалиться потом а он ваще к другой РН привязан
		
		глУстановитьНомер(Контекст);
		Проверено = 0;
		Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
	ИзмКонтрагент();
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	
	СчетЗатратСкидкиНаВес = Константа.СчетЗатратСкидкиНаВес;
	ВидЗатратСкидкиНаВес = Константа.ВидЗатратСкидкиНаВес;
	
	ЗаполнитьПоУмолчанию();
КонецПроцедуры

// ===============================
Процедура ПриВводеНаОсновании(Док)
	РодительскийДокумент = Док;
	Фирма = Док.Фирма;
	глУстановитьНомер(Контекст);
	ЗаполнитьПоУмолчанию();     
	глЗаполнитьШапкуНаОсн(Контекст,Док);
	Если глЕстьРеквизитШапки("Контрагент",Док.Вид()) = Да Тогда
		Контрагент = Док.Контрагент;
		КатегорияЦен_Розница = Контрагент.КатегорияЦенРозница.Получить(ДатаДок);
		СДатаЦ = Дата(0);
		Если Док.Вид() = "ПриходнаяНакладнаяЗапасы" Тогда
			Если Док.Договор.Выбран() = 1 Тогда
				Если (ПустоеЗначение(Док.Договор.КонтрагентПокупатель) = 0) Тогда
					Контрагент = Док.Договор.КонтрагентПокупатель;
					СДатаЦ = Док.ДатаДок;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ИзмКонтрагент();
		Если СДатаЦ <> Дата(0) Тогда
			ДатаЦ = СДатаЦ;
		КонецЕсли;
	КонецЕсли;		
	Если Найти("Договор,Заказ",Договор.Вид()) = 0 Тогда
		// заказом может быть только договор или заказ
	    Договор = 0;
	КонецЕсли;
	Если глЕстьРеквизитШапки("Валюта",Док.Вид()) = Да Тогда
		Валюта = Док.Валюта;
		Если Док.Вид() = "Договор" Тогда
			Дата_Курса = ДатаДок;
			Курс	   = глКурсДляВалюты(Валюта,ДатаДок);
		Иначе
			Курс = Док.Курс;	
			Если глЕстьРеквизитШапки("Дата_Курса",Док.Вид()) = Да Тогда
				Дата_Курса=Док.Дата_Курса;
			Иначе
				Дата_Курса=Док.ДатаДок;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;
	УстСчетКонтрагента();
	ИзмВидТорговли();
	Если (Док.Вид()="Счет") 
		или (Док.Вид()="ЗаказКлиента") 
		или (Док.Вид() = "ВозвратнаяНакладная") 
		или (Док.Вид() = "ПриходнаяНакладнаяЗапасы") Тогда
	    
		//--- УМК Сандомирский В.Ю, (дата приходки в расхордку)
		Если Док.Вид() = "ПриходнаяНакладнаяЗапасы" Тогда
			ДатаДок = Док.ДатаДок;
			ДокументОснование = "";
		КонецЕсли;
		//... УМК Сандомирский В.Ю, (дата приходки в расхордку)
		
		// табл. часть
	    Док.ВыбратьСтроки();                                         
		Пока Док.ПолучитьСтроку()=1 Цикл
			НоваяСтрока();
			ТМЦ 			= Док.ТМЦ;
			Ед 				= Док.Ед;
			Коэффициент 	= Док.Коэффициент;
			Если Контрагент <> Док.Контрагент Тогда
				глПриИзмененииТовара(Контекст, 1);
			Иначе
				ЦенаБезНДС 		= Док.ЦенаБезНДС;
				ЦенаСНДС 		= Док.ЦенаСНДС;				
			КонецЕсли;
			Кво 			= Окр(Док.Кво, 2 + КвоЗнаков);
			Попытка
				ДопКво		= Док.ДопКво;
			Исключение
			КонецПопытки;
			Если (Док.Вид() = "ВозвратнаяНакладная") или (Док.Вид() = "ПриходнаяНакладнаяЗапасы") Тогда
				СуммаБезНДС		= Док.СуммаБезНДС;
				НДС				= Док.НДС;
				СуммаСНДС		= Док.СуммаСНДС;
				СуммаБезСкидки  = Док.СуммаБезНДС;
				Скидка          = 0;				
			Иначе
				глВыч_Суммы_Накл(Контекст,1);
				Набор			= Док.Набор;
				СуммаБезСкидки	= Док.СуммаБезСкидки;
				Скидка          = Док.Скидка;
				глВыч_Суммы_Накл(Контекст,2);
			КонецЕсли;
			
			Если Док.Вид()="ЗаказКлиента" тогда
				свес = Док.свес;
				Если (свес<>0) И (Контрагент.СкидкаНаВес <> 0) Тогда
					свес = Контрагент.СкидкаНаВес;	
				КонецЕсли;
				кол = Док.кол;				
				ВидУпаковки = Док.ВидУпаковки;
			Иначе
				Кол = Кво;
			КонецЕсли;
		КонецЦикла;
	
	ИначеЕсли Док.Вид()="УМК_ЗаказКлиента" Тогда //--- УМК Сандомирский В.Ю, (04.11.14) --- ввод на основании заказа клиента Тогда	
		
		Если Число(Док.Маршрут.Код) <> 0 Тогда
			Маршрут = Док.Маршрут;
		КонецЕсли;
		ДатаЦ = Док.ДатаЦ;		
		ДатаУКШ = Док.ДатаУКШ;
		//--- заполняем только тем товаром которого еще нет в других РН
		
		КатегорияЦен = Контрагент.КатегорияЦен.Получить(ДатаДок);		
		Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
			КатегорияЦен = Константа.ОсновнаяКатегорияЦен;
		КонецЕсли;
		
		ДатаДок = Док.ДатаДок;		
		Если ПустоеЗначение(Константа.ДатаДокументовПринудительная) <> 1 Тогда //--- УМК Сандомирский В.Ю, принудительная дата создания документов (19.02.15)
			ДатаДок = Константа.ДатаДокументовПринудительная;
		КонецЕсли;		
		ДокументОснование = Док;
		УстановкаСкидокТМЦ = глПолучитьДокументУстановкиСкидок(ДатаДок, Контрагент);

		ИтКвоФакт = Док.Итог("КвоФакт");
		Ф1Округление = Контрагент.Ф1Округление.Получить(ДатаДок);
		// табл. часть
	    Док.ВыбратьСтроки();                                         
		Пока Док.ПолучитьСтроку()=1 Цикл			
			Если (Док.КвоФакт = 0) И (ИтКвоФакт <> 0) И (Док.СтрокаВзвешена = Да) Тогда
				Сообщить("Для ТМЦ: " + Строка(Док.ТМЦ) + " в строке: " + Строка(Док.НомерСтроки) + " взвешенное количество = 0. Строка пропущена.");
			Иначе
				НоваяСтрока();
				ТМЦ 			= Док.ТМЦ;
				ИзмТМЦ();
				Ед 				= Док.Ед;
				Коэффициент 	= Док.Коэффициент;	
				ВидУпаковки 	= ?(ПустоеЗначение(Док.ВидУпаковкиН) = 1, Док.ВидУпаковки, Док.ВидУпаковкиН);
				ТекВидУпаковки  = ВидУпаковки;
				Тара			= Док.Тара;
				КвоТары			= Док.КвоТары;
				КоличествоКлиента	= Док.КоличествоКлиента;
				ИзмВидУпаковки();
				СоздатьПеремещение = Док.СоздатьПеремещение;
				КвоНаборов = Док.КвоНаборов;
				Набор = Док.Набор;
				ШКEDI = Док.ШКEDI;
				ККEDI = Док.ККEDI;
				АртикулEDI = Док.АртикулEDI;
				
				Если Док.КвоФакт <> 0 Тогда
					Кол = Док.КвоФакт;
					ИзмКол();
				Иначе
					Кол = 0;
					Кво = 0;
				КонецЕсли;				
				ДопКво 	= 0;
				
				Если (ПустоеЗначение(ВидУпаковки) = 0) И (ВидУпаковки <> НетУп) Тогда
					РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВидУпаковки);
					Если ПустоеЗначение(РВУ) = 0 Тогда
						Если ПустоеЗначение(РВУ.ТМЦПодарок) = 0 Тогда
							Если Док.КвоУпаковок = 0 Тогда
								Сообщить("Необходимо заполнить количество упаковок в строке: " + (Док.НомерСтроки) + " для ТМЦ: " + Строка(Док.ТМЦ) + " вид упаковки: " + Строка(Док.ВидУпаковки));
								СтатусВозврата(0);
								Предупреждение("При вводе есть ошибки. Читайте сообщения внизу");
								Возврат;
							КонецЕсли;
							
							Кол = Кол - РВУ.ВычитатьВес * Док.КвоУпаковок;
							ИзмКол();
							КвоУпаковок = Док.КвоУпаковок;
							
							НоваяСтрока();
							ТМЦ = РВУ.ТМЦПодарок;
							ОсновнойТовар = Док.ТМЦ;
							ОсновнойВидУпаковки = ТекВидУпаковки;
							ИзмТМЦ();
							ВидУпаковки = РВУ.ВУПодарок;
							ИзмВидУпаковки();
							ЦенаСНДС = 0.01;
							ЦенаБезСкидки = 0.01;
							глВыч_суммы_накл(Контекст, 1);
							Кол = РВУ.ВычитатьВес * Док.КвоУпаковок;
							КвоУпаковок = Док.КвоУпаковок;
							НеНачислятьБонус = Да;
							ИзмКол();
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;	
			
			Если (Док.фБылНапечатан = 0) И (Док.Итог("фБылНапечатан") > 0) Тогда
				фДозаказ = 1;
			КонецЕсли;
		КонецЦикла;		
		Если Ф1Округление = 1 Тогда
			ИзмФ1();
		КонецЕсли;		
	ИначеЕсли Док.Вид() = "Заказ" Тогда
		Если (ПустоеЗначение(Док.Контрагент)=1) Тогда
			глКомментарий("Расходную накладную можно вводить только на основании заказа от контрагента!",0,,"!!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;	
		Если Док.ПереработкаДавальческогоСырья=1 Тогда
			глКомментарий("Для отгрузки давальческой продукции используется документ ""Оказание услуг""!",0,,"!!");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		// шапка
		Договор = Док;
	    // табл. часть
	    Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			Если Док.Продукция.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
				Продолжить;
			КонецЕсли;
			Если ПустоеЗначение(Док.Кво) = 1 Тогда
				Продолжить;
			КонецЕсли;
			глДобавитьТоварВДокумент(Контекст,Док.Продукция,Док.Кво,);
			Ед 			= Док.Ед;
			глИзмЕдин(Контекст);
		КонецЦикла;
	ИначеЕсли Док.Вид() = "ВыпускПродукции" Тогда
		// заполним реквизиты шапки, которые еще не заполнены          
		ДокументОснование = ПолучитьПустоеЗначение("Документ");
		Контрагент = глВосстановитьЗначение(,"ОсновнойПокупатель");
		ИзмКонтрагент();
		КатегорияЦен = глВосстановитьЗначение(,"ОсновнаяКатегорияЦен");
		// заполним табличную часть
		тбВыпускПродукции = СоздатьОбъект("ТаблицаЗначений");
		Док.ВыгрузитьТабличнуюЧасть(тбВыпускПродукции);
		// попробуем определить Договор/Заказ
	    тбВыпускПродукции.ВыбратьСтроки();
		Пока тбВыпускПродукции.ПолучитьСтроку() = 1 Цикл
			Если Договор <> тбВыпускПродукции.Заказ Тогда
				Если тбВыпускПродукции.НомерСтроки <> 1 Тогда
					// в табличной части несколько заказов, договор не заполняем
					Договор = ПолучитьПустоеЗначение("Документ");
					Прервать;
				Иначе
					Договор = тбВыпускПродукции.Заказ;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;		
		Если ПустоеЗначение(Договор) = 0 Тогда
			// можно определить контрагента
			Контрагент = Договор.Контрагент;
			ИзмКонтрагент();
		КонецЕсли;
		тбВыпускПродукции.Свернуть("Продукция,Ед,Коэффициент","Кво");
		// заполним табличную часть
	    тбВыпускПродукции.ВыбратьСтроки();
		Пока тбВыпускПродукции.ПолучитьСтроку() = 1 Цикл
			глДобавитьТоварВДокумент(Контекст,тбВыпускПродукции.Продукция,тбВыпускПродукции.Кво,);
			Ед 			= тбВыпускПродукции.Ед;
			глИзмЕдин(Контекст);
		КонецЦикла;		
	КонецЕсли;
	Если ДокументОснование.Вид() <> "УМК_ЗаказКлиента" Тогда
		УстановкаСкидокТМЦ = глПолучитьДокументУстановкиСкидок(ДатаДок, Контрагент);
		ИзмУстановкаСкидок();
	КонецЕсли;
	
	//Цена, сумма розница.
	Если ПустоеЗначение(КатегорияЦен_Розница) = 0 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ПересчетЦенаСуммаРозница(ТМЦ, КатегорияЦен_Розница)
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры                      

// ===============================
Функция ПроверкаОснования(Док)	
	Если Док.Вид()="Счет" Тогда
		Если Док.ЧтоПродаем = Перечисление.ЧтоПродаем.НеоборотныеАктивы Тогда
			Предупреждение("Для реализации основных средств используйте документ ЛиквидацияНеоборАктивов");
			Возврат 0;
		КонецЕсли;
	ИначеЕсли Док.Вид() = "УМК_ЗаказКлиента" Тогда
		Если ПустоеЗначение(Док.ВидЗатрат) = 0 Тогда
			Предупреждение("На основании этого заказа нужно вводить списание");
			Возврат 0;
		КонецЕсли;		
	КонецЕсли;
	Возврат 1;
КонецФункции

// ===============================
// основание - счет, договор, остатки взаиморасчетов
Процедура ВводНаОсновании(Док)        
	Если ПустоеЗначение(Док) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	   
	
	Если ПроверкаОснования(Док) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	 
	Если (Док.Вид() = "ПриходнаяНакладнаяЗапасы") ИЛИ (Док.Вид() = "ВозвратнаяНакладная") Тогда
		КвоЗнаков = 1;	    
	КонецЕсли;

	ПриВводеНаОсновании(Док);
КонецПроцедуры
           
// ===============================
Процедура ВыборОснования()  
	// Процедура по кнопке редактирования основания в докумнете
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	
	глРасшифровка = 0;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", Контекст);
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ПроверкаОснования(ДокументОснование) = 0 Тогда 
			ДокументОснование = СтарОснование;              		
		КонецЕсли;	
		Если (ДокументОснование <> СтарОснование)
		И (ДокументОснование.Вид() <> "РасходыНаПриобретение") Тогда
			ПриВводеНаОсновании(ДокументОснование);	
		КонецЕсли;	
	КонецЕсли;	          
	Если Договор <> СтарДоговор Тогда
		ИзмДоговор();
	КонецЕсли;
	ПриВыбореОснования();	
КонецПроцедуры	

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры

// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("&каталог");
	Варианы.ДобавитьЗначение("&прайс");
	Варианы.ДобавитьЗначение("&штрих-код");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"ТМЦ","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура КонтрольЗаказа()
	Если (ТЗКонтроля.КоличествоСтрок() > 0) И (Кол > 0) Тогда
		КвоВЗаказе = 0;
		Стр = 0;
		Если ТЗКонтроля.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
			ТЗКонтроля.ПолучитьСтрокуПоНомеру(Стр);
			Пока ТЗКонтроля.ТМЦ = ТМЦ Цикл
				Если ТЗКонтроля.ВидУпаковки = ВидУпаковки Тогда
					КвоВЗаказе = КвоВЗаказе + ?((Ед.Единица = Константа.ЕдиницаШтучногоТовара) И (ТЗКонтроля.КвоШт <> 0), ТЗКонтроля.КвоШт, ТЗКонтроля.КвоПересчет);
				КонецЕсли;
				Стр = Стр + 1;
				Если Стр > ТЗКонтроля.КоличествоСтрок() Тогда
					Прервать;
				Иначе
					ТЗКонтроля.ПолучитьСтрокуПоНомеру(Стр);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Разница = Кол - КвоВЗаказе;
		Разница = ?(Разница < 0, -Разница, Разница);
		ПроцентРазницы = Окр(Разница / Кол * 100, 2);
		Если ПроцентРазницы > МаксПроцОткл Тогда
			Предупреждение("Уточните количество данного товара в заказе. В заказе: " + Строка(КвоВЗаказе));
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры // КонтрольЗаказа

// ===============================
Процедура ИзмКво()
	Кол = Кво / (1-свес*0.01);	
	ВесУп = глПолучитьВесУп(ТМЦ,Кол, ВидУпаковки,ДатаДок); //--- УМК Сандомирский В.Ю. (06.11.14) 
	КонтрольЗаказа();
	глВыч_Суммы_Накл(Контекст);
	СуммаСНДС_Розница = ЦенаСНДС_Розница*Кво;
КонецПроцедуры

// ===============================
Процедура ИзмКол()
	ВесУп = глПолучитьВесУп(ТМЦ,Кол, ВидУпаковки,ДатаДок); //--- УМК Сандомирский В.Ю. (06.11.14) 

	Если Кол = 0 Тогда
		Кол = Кво / (1-свес*0.01);
		Возврат;
	КонецЕсли;
	
	ВычитатьВес = ?((СоздатьПеремещение <> Да) ИЛИ (Контроль = Да), 1, 0);
	Если ТМЦ.ВычитатьВесУпаковки.Получить(ДатаДок) = 1 Тогда
		ВычитатьВес = 1;
	КонецЕсли;
	
	ВычитатьВес = ВычитатьВес*мВычитатьВесУпаковки; // +umk
		
	КолДляРасчета = Кол - ВесУп * ВычитатьВес;
	Кво	=	Окр(КолДляРасчета - (КолДляРасчета * (свес*0.01)), КвоЗнаков+2);
	глВыч_Суммы_Накл(Контекст);
    СуммаСНДС_Розница = ЦенаСНДС_Розница*Кво;
	КонтрольЗаказа();	
КонецПроцедуры

// ===============================
Процедура УстСкидкаВес()
	Если ТМЦ.Выбран()=1 Тогда
		Если НеИспользоватьСВес = 1 Тогда
			свес = 0;
		Иначе
			свес = глПолучитьСкидкуНаВес(ВидУпаковки, ТМЦ, ДатаДок);  //--- УМК Сандомирский В.Ю. (06.11.14)
			Если (свес <> 0) И (Контрагент.СкидкаНаВес <> 0) Тогда
				свес = Контрагент.СкидкаНаВес;	
			КонецЕсли;
			//В приоритете скидка на вес из документа установка скидок на вес контрагента.
			СкидкаВесКонтрагент = глПолучитьСкидкуНаВесКонтрагента(ТМЦ, ВидУпаковки, Контрагент, ДатаДок);
			свес = ?(СкидкаВесКонтрагент = 0, свес, СкидкаВесКонтрагент);
		КонецЕсли;
		ИзмКол();
	КонецЕсли;		
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	
	глПриОбработкеПодбора(Выб,Контекст);
	ПересчетЦеныРозница = ?(ПустоеЗначение(КатегорияЦен_Розница) = 0,1,0);
	
	ВыбратьСтроки();// --- УМК Сандомирский В.Ю. (11.06.15) еонтроль на запрет продажи "нет без упаковки"
	Пока ПолучитьСтроку() = 1 Цикл	
		//++(
		//Если ТМЦ <> Выб Тогда
		//	Продолжить;
		//КонецЕсли;
		//++)
		
		Если (ТМЦ.НетБезУпаковки = 1) И ((ПустоеЗначение(ВидУпаковки) = 1) ИЛИ (ВидУпаковки = НетУп)) Тогда 
			ВидУпаковки = ТМЦ.ВидУпаковкиПоУмолчанию;
			ИзмВидУпаковки();
			УстСкидкаВес();
		КонецЕсли;
		
		Если ПересчетЦеныРозница = 1 Тогда
            ПересчетЦенаСуммаРозница(ТМЦ, КатегорияЦен_Розница); 		
		КонецЕсли;
		
	КонецЦикла;// ... УМК Сандомирский В.Ю. (11.06.15)	
		
КонецПроцедуры //Обработка подбора

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)
	
	ОтображаемыеСлои = "Общий," + Значение;           
	Если Значение = "Основной" Тогда
		ОтображаемыеСлои = ОтображаемыеСлои + ",ОсновнойТорг";
	КонецЕсли;	
	Форма.ИспользоватьСлой(ОтображаемыеСлои,2);	
	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") Тогда
		Форма.кДатьСкидку.Видимость(0);
	КонецЕсли;
	
	Форма.тСхемаРБ.Видимость(0);
	Форма.СхемаРБ.Видимость(0);
	
	Форма.ФлРучногоИзмСхемыРБ.Видимость(0); 		//--- УМК Сандомирский В.Ю, (26.05.2014) 
	
	Если (Значение = "Дополнительный") И (НазваниеНабораПрав() = "Администратор") Тогда
		Форма.тСхемаРБ.Видимость(1);
		Форма.СхемаРБ.Видимость(1);
		
		Форма.ФлРучногоИзмСхемыРБ.Видимость(1);  	//--- УМК Сандомирский В.Ю, (26.05.2014)
			
	КонецЕсли;
	
	Если (Значение = "Дополнительный") Тогда    	//--- УМК Сандомирский В.Ю, (17.06.14) новый реквизит Авто 
		
		фОтображатьТранспорт = ?(ДатаДок >= Константа.УМК_ДатаНачалаРаботыАвтотранспорта, 1, 0);   
		//Форма.Автомобиль.Видимость(1-фОтображатьТранспорт);
		Форма.УМК_Автомобиль.Видимость(фОтображатьТранспорт);
		Форма.кнУдалитьАвто.Видимость(фОтображатьТранспорт);		
	
	КонецЕсли;	    //... УМК Сандомирский В.Ю, (17.06.14) новый реквизит Авто 
	
КонецПроцедуры

// ===============================
Функция ПолучитьЦенуВУПСтр(ТаблТМЦ)
	Если (ТаблТМЦ.ВидУпаковки.Код = "0") ИЛИ (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) Тогда
		Возврат "";
	Иначе
		ЦВ = глПолучитьЦенуВУП(ТаблТМЦ, КатегорияЦен, ДатаДок, Валюта, ДатаДок, ТаблТМЦ.ТМЦ);
		Если ЦВ = 0 Тогда
			Возврат " б/ц";
		КонецЕсли;
	КонецЕсли;
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю. (19.02.15) Печать акции из документа Акция УМК
Процедура ПечатьНовинки(ЕстьКодыКлиента)	
	ДокНовинки = СоздатьОбъект("Документ.УМК_Новинки");
	ДокНовинки.ОбратныйПорядок(1);
	ДокНовинки.ВыбратьДокументы();
	Пока ДокНовинки.ПолучитьДокумент() = 1 Цикл
		Если ДокНовинки.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДокНовинки.ДатаДок > ДатаДок Тогда //--- УМК Сандомирский В.Ю. (16.06.15)
			Продолжить;
		КонецЕсли;
		
		ТекстШапкаНовинки = "";
		Если ПустоеЗначение(ДокНовинки.СроковоеПолеДоСписка_1) <> 1 Тогда
			ТекстШапкаНовинки = ТекстШапкаНовинки + СокрЛП(ДокНовинки.СроковоеПолеДоСписка_1) + глПравильныйСимволПереноса;	
		КонецЕсли;
		Если ПустоеЗначение(ДокНовинки.СроковоеПолеДоСписка_2) <> 1 Тогда
			ТекстШапкаНовинки = ТекстШапкаНовинки + СокрЛП(ДокНовинки.СроковоеПолеДоСписка_2) + глПравильныйСимволПереноса;	
		КонецЕсли;
		Если ПустоеЗначение(ДокНовинки.СроковоеПолеДоСписка_3) <> 1 Тогда
			ТекстШапкаНовинки = ТекстШапкаНовинки + СокрЛП(ДокНовинки.СроковоеПолеДоСписка_3);	
		КонецЕсли;
		Если ТекстШапкаНовинки <> "" Тогда
			Таб.ВывестиСекцию("НовинкиШапка" + ?(ЕстьКодыКлиента = 0, "|Основная<",""));
			Если ЕстьКодыКлиента = 0 Тогда
				Таб.ПрисоединитьСекцию("НовинкиШапка" + "|Основная>");
			КонецЕсли;				
		КонецЕсли;
				
		ДокНовинки.ВыбратьСтроки();
		Пока ДокНовинки.ПолучитьСтроку() = 1 Цикл
			
			ТекстНоменклатураНовинки 	= СокрЛП(ДокНовинки.ТМЦ.ПолнНаименование);				
			ТекстЦенаНовинки 			= глВернутьЦену(ДокНовинки.ТМЦ, КатегорияЦен, ДатаДок);	
			
			Если ТекстЦенаНовинки > 0 Тогда
				ТекстЦенаНовинки = Формат(ТекстЦенаНовинки,"Ч14.2");	
			Иначе
				ТекстЦенаНовинки = "";	
			КонецЕсли;
				
			ТекстКоментарийНовинки	 	= СокрЛП(ДокНовинки.СтрКоментарий);
			Таб.ВывестиСекцию("НовинкиСтрока" + ?(ЕстьКодыКлиента = 0, "|Основная<",""));
			Если ЕстьКодыКлиента = 0 Тогда
				Таб.ПрисоединитьСекцию("НовинкиСтрока" + "|Основная>");
			КонецЕсли;				
		КонецЦикла;
			
		ТекстДноНовинки = "";		
		Если ПустоеЗначение(ДокНовинки.СроковоеПолеПослеСписка_1) <> 1 Тогда
			ТекстДноНовинки = ТекстДноНовинки + СокрЛП(ДокНовинки.СроковоеПолеПослеСписка_1) + глПравильныйСимволПереноса;	
		КонецЕсли;
		Если ПустоеЗначение(ДокНовинки.СроковоеПолеПослеСписка_2) <> 1 Тогда
			ТекстДноНовинки = ТекстДноНовинки + СокрЛП(ДокНовинки.СроковоеПолеПослеСписка_2) + глПравильныйСимволПереноса;	
		КонецЕсли;
		Если ПустоеЗначение(ДокНовинки.СроковоеПолеПослеСписка_3) <> 1 Тогда
			ТекстДноНовинки = ТекстДноНовинки + СокрЛП(ДокНовинки.СроковоеПолеПослеСписка_3);	
		КонецЕсли;
		Если ТекстДноНовинки <> "" Тогда
			Таб.ВывестиСекцию("НовинкиДно" + ?(ЕстьКодыКлиента = 0, "|Основная<",""));
			Если ЕстьКодыКлиента = 0 Тогда
				Таб.ПрисоединитьСекцию("НовинкиДно" + "|Основная>");
			КонецЕсли;				
		КонецЕсли;
		Прервать; //--- больше не нужно 		
	КонецЦикла;		
КонецПроцедуры //... УМК Сандомирский В.Ю. (19.02.15) Печать акции из документа Акция УМК 

// ===============================
Процедура Печать(БыстраяПечать=0, А4 = "", ПДФ = 0, Экспорт_xls = 0)	
	
	ИмяФайла = "РН_" + СокрЛП(НомерДок) + "_" + Строка(ДатаДок);
	Розница = ?(ПустоеЗначение(КатегорияЦен_Розница) = 0,1,0);
	
	Если ПустоеЗначение(Константа.ДатаПечатиПринудительная) = 1 Тогда //--- УМК Сандомирский В.Ю, (11.06.14) 
		ПечДатаДок = ДатаДок;	
	Иначе
		ПечДатаДок = Константа.ДатаПечатиПринудительная;
	КонецЕсли; //... УМК Сандомирский В.Ю, (11.06.14) 
		
	Если Константа.УМК_ДатаНачалаРаботыАвтотранспорта <= ДатаДок Тогда //--- УМК Сандомирский В.Ю. (17.06.2014)  автомобиль оп новому 	
		ПечАвтомобиль = УМК_Автомобиль;
		Если ПустоеЗначение(Автомобиль) <> 1 Тогда
			ПечАвтомобиль = СокрЛП(Автомобиль);
		КонецЕсли;	
	Иначе
		ПечАвтомобиль = СокрЛП(Автомобиль);
	КонецЕсли; //... УМК Сандомирский В.Ю. (17.06.2014) 
	
	Если Контрагент.ФирмаДляРН.Выбран() = 1 Тогда
		Фир = Контрагент.ФирмаДляРН;
		СБНДС = 1;
		ИмяСекцииНазвания = "НазваниеАльт";
	Иначе
		Фир = Фирма;
		СБНДС = 0;
		ИмяСекцииНазвания = "Название";
	КонецЕсли;
	                                              
	НеПечататьПодарки = Контрагент.Родитель.ВыделятьПодаркиВОтдельнуюНакладную;
	ТЗПодарков = ПодготовитьТЗПодарков();

	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") Тогда						//--- УМК Сандомирский В.Ю, РОЛИ "ЗАКАЗ" нельзя печатать непроведенные документы (13.06.14)
		Если (ТекущийДокумент().Проведен() = 0) Тогда
			Предупреждение("Нельзя печатать не проведенные РН");
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	ТаблТара = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТара);
	ТаблТара.Свернуть("Тара", "КвоТары");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара Тогда
			ЦенаДляПроверки = глПолучитьЦенуВУП(Контекст, КатегорияЦен, ДатаДок, Валюта, Дата_курса, ТМЦ);
			Если ЦенаСНДС = ЦенаДляПроверки Тогда
				Если Вопрос("В строке: " + НомерСтроки  + " указана только цена вак. уп. либо нулевая цена. Продолжить печать?", "Да+Нет") = "Нет" Тогда
					Возврат;
				Иначе
					Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") Тогда	//--- УМК Сандомирский В.Ю, (с правами заказ запрещена печать документа с нулевой ценой) 29.04.14 г.	
						Возврат;
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Таб = СоздатьОбъект("Таблица");
	СуффиксТаблицы = ?(Константа.ФормыНаУкраинском = Да, "_Укр", "") + А4 + ?(Итог("КоличествоКлиента") = 0, "", "_Шт");
	
	Таб.ИсходнаяТаблица("Накладная"+СуффиксТаблицы);
    
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,Тара,ВидУпаковки,Набор,Кво,Ед,Коэффициент,ЦенаБезНДС,ЦенаСНДС,ЦенаБезСкидки,СуммаБезСкидки,Скидка,СуммаБезНДС,НДС,СуммаСНДС,ВесУп,Кол,
	|СоздатьПеремещение,Контроль,КоличествоКлиента,НеНачислятьБонус,КомментСтр,ОсновнойТовар,ОсновнойВидУпаковки, КвоУпаковок, ЦенаСНДС_Розница,СуммаСНДС_Розница");
	ТаблТМЦ.НоваяКолонка("КодКлиента");
	ТаблТМЦ.НоваяКолонка("ШтрихКод");
	Спец = глПолучитьКодыИзСпецификации(Контрагент, ДатаДок, 0);
	ЕстьКодыКлиента = 0;

	Если Спец.КоличествоСтрок() <> 0 Тогда
		ТаблТМЦ.ВыбратьСтроки();
		Пока ТаблТМЦ.ПолучитьСтроку() = 1 Цикл			
			ТаблТМЦ.КодКлиента = ПолучитьКодИзСпецификации(Спец, ТаблТМЦ.ТМЦ, ТаблТМЦ.ВидУпаковки, ТаблТМЦ.ШтрихКод);
			Если СокрЛП(ТаблТМЦ.КодКлиента) <> "" Тогда
				ЕстьКодыКлиента = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ТЗВУП = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗВУП,"ВидУпаковки,Кво,ВесУп,Кол");
	ТЗВУП.НоваяКолонка("ВУПС", "Строка");
	ТЗВУП.ВыбратьСтроки();
	Пока ТЗВУП.ПолучитьСтроку() = 1 Цикл
		Если (ПустоеЗначение(ТЗВУП.ВидУпаковки) = 1) ИЛИ (ТЗВУП.ВидУпаковки = НетУп) Тогда
			ТЗВУП.ВУПС = "Нет";
		Иначе
			ТЗВУП.ВУПС = "В/уп.";
		КонецЕсли;		
	КонецЦикла;
	ТЗВУП.НоваяКолонка("КолВоПечати", "Число", 12, 3);

	Адрес = глПолучитьТекстАдреса(Договор, Контрагент);
	
	ПечФорма = "Накладная";
	Язык = глЯзык(ПечФорма); 	
	глУстПропись(Валюта,Язык);
	ПечОснование="";
	//ПечОснование=глСтрокаОснование(Контекст,Договор,ДокументОснование);
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = ?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);
	
	МаксКвоЭкз = 2; //--- УМК Сандомирский В.Ю, Нина попросила 2 экз , было 3 (27.05.14)
	
	Если ВвестиЧисло(МаксКвоЭкз, "Количество экземпляров", 1,0) = 0 Тогда
	    Возврат;
	КонецЕсли;
	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") Тогда
	    МаксКвоЭкз = Макс(МаксКвоЭкз, 2);
	КонецЕсли;
	ВсеТара = 0;
	ВыводитьСК = Контрагент.ВыводитьСК;

	ЕдВеса = Константа.ЕдиницаВеса;
	Если ВыполнитьПроверкуПечати(ТаблТМЦ) = 0 Тогда
		Возврат;
	КонецЕсли;
	    
	ЭтоСкладская = 0;
	Для Инд = 1 По МаксКвоЭкз+ВыводитьСК Цикл
		Если Инд <> 1 Тогда
		    Таб.НоваяСтраница();
		КонецЕсли;
		
		Если (ВыводитьСК = 1) И (Инд = МаксКвоЭкз + ВыводитьСК) Тогда
			Если ВсеТара = 1 Тогда
				Продолжить;
			КонецЕсли;
		    Таб.ИсходнаяТаблица("Складская");
			ЭтоСкладская = 1;
		КонецЕсли;
				
		//--- УМК Сандомирский В.Ю. (03.11.14) 
		Если Контрагент.Родитель = Фирма.УМК_ПапкаБезШапки Тогда
			Таб.ВывестиСекцию(?(Инд >= МаксКвоЭкз, "РН_БезШапки", "Счет_БезШапки") + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
			Если ЕстьКодыКлиента = 0 Тогда
				Таб.ПрисоединитьСекцию(?(Инд >= МаксКвоЭкз, "РН_БезШапки", "Счет_БезШапки") + "|Основная>");
			КонецЕсли;		
		Иначе
			Таб.ВывестиСекцию(ИмяСекцииНазвания + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
			Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
				Таб.ПрисоединитьСекцию(ИмяСекцииНазвания + "|Основная>");
			КонецЕсли;		
			Таб.ВывестиСекцию(?(Инд >= МаксКвоЭкз, "РН", "Счет") + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
			Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
				Таб.ПрисоединитьСекцию(?(Инд >= МаксКвоЭкз, "РН", "Счет") + "|Основная>");
			КонецЕсли;
		КонецЕсли;
		
		Ном = 1;     
		ВСоставе = 0;
		фЕстьТара = 0;
		ИтВес = 0; ИтСуммаТары = 0; ИтНДСТары = 0; ИтСуммаТарыБН = 0;
		ЕдВеса = Константа.ЕдиницаВеса;
		
		ТаблТМЦ.ВыбратьСтроки();
		Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
			ВычитатьВес = ?((ТаблТМЦ.СоздатьПеремещение <> Да) ИЛИ (ТаблТМЦ.Контроль = Да), 0, 1);
			Если ТаблТМЦ.ТМЦ.ВычитатьВесУпаковки.Получить(ДатаДок) = 1 Тогда
				ВычитатьВес = 1;
			КонецЕсли;
			
			ВычитатьВес = ВычитатьВес*мВычитатьВесУпаковки; // +umk
			
			//Если ТаблТМЦ.Набор.Выбран()=1 Тогда
			//	Если (ПустоеЗначение(ВСоставе)=1) или (ВСоставе<>ТаблТМЦ.Набор) Тогда
			//		Таб.ВывестиСекцию("ВСоставе" + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
			//		Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
			//			Таб.ПрисоединитьСекцию("ВСоставе" + "|Основная>");
			//		КонецЕсли;					
			//		ВСоставе=ТаблТМЦ.Набор;
			//	КонецЕсли;
			//Иначе
			//	Если ПустоеЗначение(ВСоставе)=0 Тогда
					ВСоставе=0;
			//	КонецЕсли;
			//КонецЕсли;
			Если (ВидТары <> Перечисление.ВидыТары.Покупная) и (ТаблТМЦ.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
				ИтСуммаТары = ИтСуммаТары + ТаблТМЦ.СуммаБезСкидки;
				ИтНДСТары = ИтНДСТары + ТаблТМЦ.НДС;
				ИтСуммаТарыБН = ИтСуммаТарыБН + ТаблТМЦ.СуммаБезНДС;
				фЕстьТара = 1;
			    Продолжить;
			ИначеЕсли (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) и (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга) Тогда
			    ИтВес = ИтВес + ТаблТМЦ.Кво * ?(ТаблТМЦ.Ед.Единица = ЕдВеса, 1, ТаблТМЦ.ТМЦ.Вес);
			КонецЕсли;
			Если ТаблТМЦ.Ед.Единица = ЕдВеса Тогда
				КолвоПечати = ТаблТМЦ.Кол + ТаблТМЦ.ВесУп * ВычитатьВес;
			Иначе
				КолвоПечати = ТаблТМЦ.Кол * ТаблТМЦ.ТМЦ.Вес + ТаблТМЦ.ВесУп * ВычитатьВес;
			КонецЕсли;
			Если ЭтоСкладская = 1 Тогда
				ТЗВУП.НоваяСтрока();
				Если (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 1) ИЛИ (ТаблТМЦ.ВидУпаковки = НетУп) Тогда
					ТЗВУП.ВУПС = "Нет";
				Иначе
					ТЗВУП.ВУПС = "В/уп.";
				КонецЕсли;				
				ТЗВУП.КолВоПечати = КолвоПечати;
			КонецЕсли;
			
			ПечЦенаБезНДС = ?(Розница = 1, Формат( ТаблТМЦ.ЦенаСНДС_Розница, "Ч12.2"), 
			Формат(?(СБНДС = 1, ТаблТМЦ.СуммаСНДС/ТаблТМЦ.Кво, ТаблТМЦ.ЦенаБезНДС) - (ТаблТМЦ.Скидка/ТаблТМЦ.Кво),"Ч12.2"));
            
			ПечКво = ""; ПечСуммаБезНДС = ""; ПечСуммаСНДС = ""; ТекстУпак = "";
			
			ВывестиЦеныСуммы(Таб, ТаблТМЦ, ТЗПодарков, СБНДС, НеПечататьПодарки, ЭтоСкладская, ПечКво, ПечСуммаБезНДС, ПечСуммаСНДС, ТекстУпак,Розница);
			
			ПечЦенаСНДС = ?(Розница = 1, ПечЦенаБезНДС,
			Формат(ТаблТМЦ.ЦенаСНДС,"Ч12.2")); // --- УМК Сандомирский В.Ю. (27.06.14) было  Формат((ТаблТМЦ.СуммаСНДС)/(ТаблТМЦ.Кво),"Ч12.2") --- что давало не такую цену как на экране			
			
			// для части контрагентов не печатаем подарки
			Если (ПустоеЗначение(ТаблТМЦ.ОсновнойТовар) = 0) Тогда
				ТекстУпак = Строка(ТаблТМЦ.КвоУпаковок) + " шт по " + СокрЛП(Формат(ТаблТМЦ.Кво / ТаблТМЦ.КвоУпаковок, "Ч12.3"));
				Если (НеПечататьПодарки = 1) И (ЭтоСкладская = 0) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			ТекИмяСекции = "Строка" + ?((ТекстУпак = "") ИЛИ (ЭтоСкладская = 1), "", "Подарок") + ?((ВыводитьСК = 1) И (Инд = МаксКвоЭкз + ВыводитьСК) И (ТаблТМЦ.ВидУпаковки <> НетУп) И (ПустоеЗначение(ТаблТМЦ.ВидУпаковки) = 0), "Ж", "");
			Таб.ВывестиСекцию(ТекИмяСекции + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
			Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
				Таб.ПрисоединитьСекцию(ТекИмяСекции + "|Основная>");
			КонецЕсли;
			Ном = Ном+1;
		КонецЦикла;
		Если Ном = 1 Тогда
		    ВсеТара = 1;
		КонецЕсли;
		ПечСуммаСНДС = ?(Розница = 1, Формат(Итог("СуммаСНДС_Розница")-ИтСуммаТары,"Ч12.2"), Формат(Итог("СуммаСНДС")-ИтСуммаТары,"Ч12.2"));
		Если СБНДС = 1 Тогда
			ПечСуммаБезНДС = ПечСуммаСНДС;
			ПечНДС = Формат(0, "Ч12.2");
		Иначе
			ПечСуммаБезНДС = ?(Розница = 1, ПечСуммаСНДС, Формат(Итог("СуммаБезНДС")-ИтСуммаТарыБН,"Ч12.2"));
			ПечНДС = ?(Розница = 1, Формат(0, "Ч12.2"), Формат(Итог("НДС")-ИтНДСТары,"Ч12.2"));			
		КонецЕсли;		
		
		ИтВесБСК = глИтКол(Контекст, 1);
		Если НЕ ((ВыводитьСК = 1) И (Инд = МаксКвоЭкз + ВыводитьСК)) Тогда
			Таб.ВывестиСекцию("ИтогоБезНДС" + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
			Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
				Таб.ПрисоединитьСекцию("ИтогоБезНДС" + "|Основная>");
			КонецЕсли;				
			Таб.ВывестиСекцию("ИтогоНДС" + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
			Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
				Таб.ПрисоединитьСекцию("ИтогоНДС" + "|Основная>");
			КонецЕсли;
			Таб.ВывестиСекцию("ИтогоСНДС" + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
			Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
				Таб.ПрисоединитьСекцию("ИтогоСНДС" + "|Основная>");
			КонецЕсли;				
		КонецЕсли;			

		Если (ВыводитьСК = 1) И (Инд = МаксКвоЭкз + ВыводитьСК) Тогда
			Если ВсеТара = 0 Тогда
				ТЗВУП.Свернуть("ВУПС" ,"Кво,КолВоПечати");
				ТЗВУП.Сортировать("ВУПС");
				ТЗВУП.ВыбратьСтроки();
				Пока ТЗВУП.ПолучитьСтроку() = 1 Цикл
					ТекстВУП = ?(ТЗВУП.НомерСтроки = 1, "По видам упаковки: ", "");
					Таб.ВывестиСекцию("ВУП" + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
					Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
						Таб.ПрисоединитьСекцию("ВУП" + "|Основная>");
					КонецЕсли;					
				КонецЦикла;
			КонецЕсли;		    
		КонецЕсли;
		
		// печать тары
		ИтНДСТары = 0;
		ИтСуммаТарыБН = 0;
		Если фЕстьТара = 1 Тогда
			Если ВидТары = Перечисление.ВидыТары.Возвратная Тогда
				ЗагТара = ?(Язык="у","Тара зворотна","Тара возвратная");
			ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
				ЗагТара = ?(Язык="у","Тара заставна","Тара залоговая");
			КонецЕсли;
			Таб.ВывестиСекцию("ШапкаТара" + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
			Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
				Таб.ПрисоединитьСекцию("ШапкаТара" + "|Основная>");
			КонецЕсли;
		    Ном = 0;
			ТаблТМЦ.ВыбратьСтроки();
			Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
				Если (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
				    Продолжить;
				КонецЕсли;
				Ном = Ном + 1;
				Таб.ВывестиСекцию("СтрокаТара" + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
				Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
					Таб.ПрисоединитьСекцию("СтрокаТара" + "|Основная>");
				КонецЕсли;				
			КонецЦикла;
			ИтСуммаТары = Окр(ИтСуммаТары,2);
			ПечИтСумма = глФРМТ(ИтСуммаТары,Валюта,0);
			Таб.ВывестиСекцию("ИтогоТара"+ ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
			Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
				Таб.ПрисоединитьСекцию("ИтогоТара"+ "|Основная>");
			КонецЕсли;				
		КонецЕсли;

		Ном = 1;
		Если ЭтоСкладская = 0 Тогда
			ТаблТара.ВыбратьСтроки();
			Пока ТаблТара.ПолучитьСтроку() = 1 Цикл
				Если ПустоеЗначение(ТаблТара.Тара) = 0 Тогда
					Если ТаблТара.Тара.Родитель.Код = "32337" Тогда
						Таб.ВывестиСекцию("СтрокаТ" + ?((ЕстьКодыКлиента = 0), "|Основная<",""));
						Если (ЕстьКодыКлиента = 0) Тогда
							Таб.ПрисоединитьСекцию("СтрокаТ|Основная>");
							Ном = Ном + 1;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		
	//	Если (ЕстьСкидка = 1) И (Итог("Скидка") <> 0) Тогда
	//		Таб.ВывестиСекцию("ИтогоСкидка");
	//	КонецЕсли;
	//	Таб.ВывестиСекцию("Пробел");
		
		ПечКонстантаАкция = Константа.УМК_ТекстАкции.Получить(ДатаДок);	
		Если ПустоеЗначение(Константа.УМК_АкционныйТовар.Получить(ДатаДок)) <> 1 Тогда			
			АкционныйТовар = Константа.УМК_АкционныйТовар.Получить(ДатаДок);			
			ПечКонстантаАкция = СокрЛП(ПечКонстантаАкция)  + глПравильныйСимволПереноса 
					 + СокрЛП(АкционныйТовар.ПолнНаименование) + " за ціною : " + глВернутьЦену(АкционныйТовар, КатегорияЦен, ДатаДок) + " грн.";										
		КонецЕсли;
		Таб.ВывестиСекцию("Дно"+?(Инд >= МаксКвоЭкз, "", "С") + ?((ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0), "|Основная<",""));
		Если (ЕстьКодыКлиента = 0) И (ЭтоСкладская = 0) Тогда
			Таб.ПрисоединитьСекцию("Дно"+?(Инд >= МаксКвоЭкз, "", "С") + "|Основная>");
		КонецЕсли;

		Ном = 1;
		Если ЭтоСкладская = 1 Тогда
			ТаблТара.ВыбратьСтроки();
			Пока ТаблТара.ПолучитьСтроку() = 1 Цикл
				Если ПустоеЗначение(ТаблТара.Тара) = 0 Тогда
					Если ТаблТара.Тара.Родитель.Код = "32337" Тогда
						Таб.ВывестиСекцию("СтрокаТ");
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		
		
		//--- УМК Сандомирский В.Ю. (19.02.15) Печать акции из документа Акция УМК		
		Если Инд >= МаксКвоЭкз Тогда		
			//--- Пропускаем			
		Иначе			
			ПечатьНовинки(ЕстьКодыКлиента);
		КонецЕсли;		
		//... УМК Сандомирский В.Ю. (19.02.15) Печать акции из документа Акция УМК		
	КонецЦикла;	
	
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Если БыстраяПечать = 1 Тогда
		Таб.КоличествоЭкземпляров(глВосстановитьЗначение(,"ПечКолЭкзНакладнойПриБыстройПродаже"));
		Таб.Напечатать(0);
	ИначеЕсли ПДФ = 1 Тогда
		Таб.ПараметрыСтраницы(2);
		Для Инд = 1 По Таб.ШиринаТаблицы() Цикл
			Таб.Область(, Инд, , Инд).ШиринаСтолбца(Таб.Область(, Инд, , Инд).ШиринаСтолбца() * 0.82);
		КонецЦикла;
		ТД = СоздатьОбъект("ТабличныйДокумент");
		ТД.ЗагрузитьИзТаблицы(Таб);
		ФорматФайла = ".pdf";
		ИмяФайла = ИмяФайла +"." + ФорматФайла;
		ИмяКаталога = Константа.ПутьЭкспортаРН;
		Если ФС.ВыбратьФайл(1,ИмяФайла,ИмяКаталога,"Сохранять PDF","Файлы PDF { (*." + ФорматФайла + ")|*." + ФорматФайла, "*." + ФорматФайла) = 1 Тогда
			//Таб.Записать(СокрЛП(ИмяКаталога) + ИмяФайла, 1);
			Конвертер = СоздатьОбъект("Йоксель.ГрафическийКонвертер.PDF");
			Конвертер.Документ = ТД;
			Конвертер.ПолеСверху = 10;
			Конвертер.ПолеСнизу = 10;
			Конвертер.ПолеСлева = 10;
			Конвертер.ПолеСправа = 10;					
			Конвертер.ЗаписатьВФайл(СокрЛП(ИмяКаталога) + ИмяФайла);
		КонецЕсли;		
	Иначе	
		Таб.ТолькоПросмотр(1);
		Таб.Опции(0,0,,);

		Если Экспорт_xls = 1 Тогда
			глЭкспорт_xls(Таб, Контрагент, ИмяФайла, Фирма);
		Иначе
			Таб.Показать("ПЕЧАТЬ: Накладная","");
		КонецЕсли;

		глУстПропись(Гривня); 
		
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура КомПечать(Экспорт_xls = 0)
	
	ИмяФайла = "РН_" + СокрЛП(НомерДок) + "_" + Строка(ДатаДок);
	ПечДатаДок = ДатаДок;
	
	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") Тогда						//--- УМК Сандомирский В.Ю, РОЛИ "ЗАКАЗ" нельзя печатать непроведенные документы (13.06.14)
		Если (ТекущийДокумент().Проведен() = 0) Тогда
			Предупреждение("Нельзя печатать не проведенные РН");
			Возврат;
		КонецЕсли;
	КонецЕсли;		
		
	Если Константа.УМК_ДатаНачалаРаботыАвтотранспорта <= ДатаДок Тогда //--- УМК Сандомирский В.Ю. (17.06.2014)  автомобиль оп новому 	
		ПечАвтомобиль = УМК_Автомобиль;
		Если ПустоеЗначение(Автомобиль) <> 1 Тогда
			ПечАвтомобиль = СокрЛП(Автомобиль);
		КонецЕсли;	
	Иначе
		ПечАвтомобиль = СокрЛП(Автомобиль);
	КонецЕсли; //... УМК Сандомирский В.Ю. (17.06.2014) 
	
	Если Контрагент.ФирмаДляРН.Выбран() = 1 Тогда
		Фир = Контрагент.ФирмаДляРН;
		СБНДС = 1;
		ИмяСекцииНазвания = "НазваниеАльт";
	Иначе
		Фир = Фирма;
		СБНДС = 0;
		ИмяСекцииНазвания = "Название";
	КонецЕсли;
	НеПечататьПодарки = Контрагент.Родитель.ВыделятьПодаркиВОтдельнуюНакладную;
	ТЗПодарков = ПодготовитьТЗПодарков();

	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("КомПечать");
    
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ,"ТМЦ,Тара,ВидУпаковки,Набор,Кво,Ед,Коэффициент,ЦенаБезСкидки,ЦенаБезНДС,ЦенаСНДС,СуммаБезСкидки,Скидка,
	|СуммаБезНДС,НДС,СуммаСНДС,ВесУп,Кол,СоздатьПеремещение,Контроль,КомментСтр,ОсновнойТовар,ОсновнойВидУпаковки, КвоУпаковок, ЦенаСНДС_Розница, СуммаСНДС_Розница");
	
	Адрес = глПолучитьТекстАдреса(Договор, Контрагент);
	
	ПечФорма = "Накладная";
	Язык = глЯзык(ПечФорма); 	
	глУстПропись(Валюта,Язык);
	ПечОснование="";
	//ПечОснование=глСтрокаОснование(Контекст,Договор,ДокументОснование);
	ЕстьСкидка = ?(Константа.ИспользоватьСкидку <> Да, 0, 1);
	ОтЦеныСНДС = ?(Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС, 1, 0);
	
	МаксКвоЭкз = 1; //--- УМК Сандомирский В.Ю, Нина попросила 2 экз , было 3 (27.05.14)
	
	ЕдВеса = Константа.ЕдиницаВеса;
	ИтВесБСК = глИтКол(Контекст, 1);
	    
	Для Инд = 1 По МаксКвоЭкз Цикл
		//--- УМК Сандомирский В.Ю. (03.11.14)
		Таб.ВывестиСекцию(ИмяСекцииНазвания);
		Таб.ВывестиСекцию("РН");
		
		Ном = 1;     
		ВСоставе = 0;
		фЕстьТара = 0;
		ИтВес = 0; ИтСуммаТары = 0; ИтНДСТары = 0; ИтСуммаТарыБН = 0;
		ЕдВеса = Константа.ЕдиницаВеса;
		
		ТаблТМЦ.ВыбратьСтроки();
		Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
			ВычитатьВес = ?((ТаблТМЦ.СоздатьПеремещение <> Да) ИЛИ (ТаблТМЦ.Контроль = Да), 0, 1);
			Если ТаблТМЦ.ТМЦ.ВычитатьВесУпаковки.Получить(ДатаДок) = 1 Тогда
				ВычитатьВес = 1;
			КонецЕсли;
			
			ВычитатьВес = ВычитатьВес*мВычитатьВесУпаковки; // +umk
			
			//Если ТаблТМЦ.Набор.Выбран()=1 Тогда
			//	Если (ПустоеЗначение(ВСоставе)=1) или (ВСоставе<>ТаблТМЦ.Набор) Тогда
			//		ВСоставе=ТаблТМЦ.Набор;
			//	КонецЕсли;
			//Иначе
			//	Если ПустоеЗначение(ВСоставе)=0 Тогда
					ВСоставе=0;
			//	КонецЕсли;
			//КонецЕсли;
			Если (ВидТары <> Перечисление.ВидыТары.Покупная) и (ТаблТМЦ.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
				ИтСуммаТары = ИтСуммаТары + ТаблТМЦ.СуммаБезСкидки;
				ИтНДСТары = ИтНДСТары + ТаблТМЦ.НДС;
				ИтСуммаТарыБН = ИтСуммаТарыБН + ТаблТМЦ.СуммаБезНДС;
				фЕстьТара = 1;
			    Продолжить;
			ИначеЕсли (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) и (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Услуга) Тогда
			    ИтВес = ИтВес + ТаблТМЦ.Кво * ?(ТаблТМЦ.Ед.Единица = ЕдВеса, 1, ТаблТМЦ.ТМЦ.Вес);
			КонецЕсли;
			Если ТаблТМЦ.Ед.Единица = ЕдВеса Тогда
				КолвоПечати = ТаблТМЦ.Кол + ТаблТМЦ.ВесУп * ВычитатьВес;
			Иначе
				КолвоПечати = ТаблТМЦ.Кол * ТаблТМЦ.ТМЦ.Вес + ТаблТМЦ.ВесУп * ВычитатьВес;
			КонецЕсли;

			ПечКво = ""; ПечСуммаБезНДС = ""; ПечСуммаСНДС = ""; ТекстУпак = "";
			ВывестиЦеныСуммы(Таб, ТаблТМЦ, ТЗПодарков, СБНДС, НеПечататьПодарки, 0, ПечКво, ПечСуммаБезНДС, ПечСуммаСНДС, ТекстУпак);
			ПечЦенаБезНДС = Формат(?(СБНДС = 1, ТаблТМЦ.СуммаСНДС/ТаблТМЦ.Кво, ТаблТМЦ.ЦенаБезНДС)*ТаблТМЦ.Коэффициент-(ТаблТМЦ.Скидка/ТаблТМЦ.Кво),"Ч12.2");
			
			ПечЦенаСНДС = Формат(ТаблТМЦ.ЦенаСНДС,"Ч12.2"); // --- УМК Сандомирский В.Ю. (27.06.14) было  Формат((ТаблТМЦ.СуммаСНДС)/(ТаблТМЦ.Кво),"Ч12.2") --- что давало не такую цену как на экране			
			
			// для части контрагентов не печатаем подарки
			Если (ПустоеЗначение(ТаблТМЦ.ОсновнойТовар) = 0) Тогда
				ТекстУпак = Строка(ТаблТМЦ.КвоУпаковок) + " шт по " + СокрЛП(Формат(ТаблТМЦ.Кво / ТаблТМЦ.КвоУпаковок, "Ч12.3"));
				Если (НеПечататьПодарки = 1) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			ТекИмяСекции = "Строка" + ?(ТекстУпак = "", "", "Подарок");
			Таб.ВывестиСекцию(ТекИмяСекции);
			Ном = Ном+1;
		КонецЦикла;
		Если Ном = 1 Тогда
		    ВсеТара = 1;
		КонецЕсли;
		ПечСуммаСНДС = Формат(Итог("СуммаСНДС")-ИтСуммаТары,"Ч12.2");
		Если СБНДС = 1 Тогда
			ПечСуммаБезНДС = ПечСуммаСНДС;
			ПечНДС = Формат(0, "Ч12.2");
		Иначе
			ПечСуммаБезНДС = Формат(Итог("СуммаБезНДС")-ИтСуммаТарыБН,"Ч12.2");
			ПечНДС = Формат(Итог("НДС")-ИтНДСТары,"Ч12.2");			
		КонецЕсли;		
		
		Таб.ВывестиСекцию("ИтогоБезНДС");
		Таб.ВывестиСекцию("ИтогоНДС");
		Таб.ВывестиСекцию("ИтогоСНДС");

		// печать тары
		ИтНДСТары = 0;
		ИтСуммаТарыБН = 0;
		Если фЕстьТара = 1 Тогда
			Если ВидТары = Перечисление.ВидыТары.Возвратная Тогда
				ЗагТара = ?(Язык="у","Тара зворотна","Тара возвратная");
			ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
				ЗагТара = ?(Язык="у","Тара заставна","Тара залоговая");
			КонецЕсли;
			Таб.ВывестиСекцию("ШапкаТара");
		    Ном = 0;
			ТаблТМЦ.ВыбратьСтроки();
			Пока ТаблТМЦ.ПолучитьСтроку()=1 Цикл
				Если (ТаблТМЦ.ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
				    Продолжить;
				КонецЕсли;
				Ном = Ном + 1;
				Таб.ВывестиСекцию("СтрокаТара");
			КонецЦикла;
			ИтСуммаТары = Окр(ИтСуммаТары,2);
			ПечИтСумма = глФРМТ(ИтСуммаТары,Валюта,0);
			Таб.ВывестиСекцию("ИтогоТара");
		КонецЕсли;
		
	КонецЦикла;	
	
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,,);
	
	Если Экспорт_xls = 1 Тогда
		глЭкспорт_xls(Таб, Контрагент, ИмяФайла, Фирма);
	Иначе
		Таб.Показать("ПЕЧАТЬ: Накладная","");
	КонецЕсли;
	
	глУстПропись(Гривня); 
	
КонецПроцедуры // КомПечать

// ===============================
Процедура ДатьСкидку()
	Перем ВыбЗначение, ВыбПроцент, ВыбСумма;
	ВариантыСкидок = СоздатьОбъект("СписокЗначений");
	ВариантыСкидок.ДобавитьЗначение(1,"Процентом по накладной");
	ВариантыСкидок.ДобавитьЗначение(2,"Суммой по накладной");
	ВариантыСкидок.ДобавитьЗначение(3,"Процентом по строке");
	ВариантыСкидок.ДобавитьЗначение(4,"Суммой по строке");

	Если ВариантыСкидок.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;

	Если (ВыбЗначение = 1) или (ВыбЗначение = 3) Тогда
		Если ВвестиЧисло(ВыбПроцент,"Введите процент:",6,2) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	ИначеЕсли (ВыбЗначение = 2) или (ВыбЗначение = 4) Тогда
		Если ВвестиЧисло(ВыбСумма,"Введите сумму:",12,2) <> 1 Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;

	Если ВыбЗначение = 1 Тогда
	    // процентом по накладной
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Скидка = Окр(СуммаБезСкидки * ВыбПроцент / 100,2);
			глВыч_Суммы_Накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли ВыбЗначение = 2 Тогда
		// суммой по накладной
		ОсталосьРаспределить = ВыбСумма;

		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если НомерСтроки = КоличествоСтрок() Тогда
			    // в последнюю строку - то что осталось
				Скидка = ОсталосьРаспределить;
			Иначе
				// пропорционально
				Коэф = ?(Итог("СуммаБезСкидки") = 0,0,СуммаБезСкидки/Итог("СуммаБезСкидки"));
				Скидка = Окр(ВыбСумма * Коэф,2);
				ОсталосьРаспределить = ОсталосьРаспределить - Скидка;
			КонецЕсли;
			глВыч_Суммы_Накл(Контекст,2);
		КонецЦикла;
	ИначеЕсли ВыбЗначение = 3 Тогда
		// процентом по строке
		Скидка = Окр(СуммаБезСкидки * ВыбПроцент / 100,2);
		глВыч_Суммы_Накл(Контекст,2);
	ИначеЕсли ВыбЗначение = 4 Тогда
		// суммой по строке
		Скидка = ВыбСумма;
		глВыч_Суммы_Накл(Контекст,2);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета=СоздатьОбъект("СписокЗначений");
	спСчета.ДобавитьЗначение(ТМЦ.Счет);
	спОтбор.Установить("Счет",спСчета);
	Если глПартионныйУчетПоСкладам = Да Тогда
	    спОтбор.Установить("МестоХранения",МестоХранения);
	КонецЕсли;
	спОтбор.Установить("Контекст",Контекст);      
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры
                      
// ===============================
Процедура ПриНачалеРедактированияСтроки()
//	Если ПустоеЗначение(Предпочтение)=1 Тогда			// --- УМК Сандомирский В.Ю. (26.11.14) убрал с формы предпочтение
//		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
//		Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
//	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
//	Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");     // --- УМК Сандомирский В.Ю. (26.11.14) убрал с формы предпочтение
//	Предпочтение=ПолучитьПустоеЗначение("Справочник.Контрагенты");
КонецПроцедуры

// ===============================
Процедура ИзмфОстаткиНаДокумент()
	Если фОстаткиНаДокумент = 1 Тогда
		РегО = СоздатьОбъект("Регистр.Остатки");
		Если ТекущийДокумент().Выбран() = 1 Тогда
			Если СравнитьТА() = -1 Тогда
				РегО.ВременныйРасчет(1);
			    РассчитатьРегистрыНа(ТекущийДокумент());
			КонецЕсли;		    
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

Процедура ИзмУстановкаСкидок()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глПриИзмененииТовара(Контекст, 1);
	КонецЦикла;	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии() 
	ЭтоНовый = 1 - ТекущийДокумент().Выбран();
	Если ТипЗначенияСтр(Форма.Параметр) = "Число" Тогда
		Если Форма.Параметр = 10 Тогда
			ЭтоНовый = 1;
		КонецЕсли;
	КонецЕсли;		
	Если НазваниеНабораПрав() = "УдаленныйДоступ" Тогда
		Если глГруппыДоступаКонтрагенты.Принадлежит(Контрагент) = 0 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	Форма.ДатаДок.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ВидТары.ВыполнятьФормулуТолькоПриИзменении(1);	
	Форма.ВидТорговли.ВыполнятьФормулуТолькоПриИзменении(1);	
	//Форма.ЦенаСНДС.ВыполнятьФормулуТолькоПриИзменении(1);
	Если НазваниеНабораПрав() = "Администратор" Тогда
		Форма.кОчиститьУстСкидок.Доступность(1);
		Форма.УстановкаСкидокТМЦ.Доступность(1);
	КонецЕсли;
                        
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="Строка" Тогда
			Если ВРег(Форма.Параметр)="БЫСТРАЯ ПРОДАЖА" Тогда
				ФлагБыстраяПродажа = Да;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	МаксПроцОткл = Константа.МаксПроцОтклоненияЗаказа;
	
	Если Константа.ИспользоватьСкидку <> Да Тогда
		Форма.СуммаБезСкидки.Видимость(0);
		Форма.Скидка.Видимость(0);
		Форма.кДатьСкидку.Доступность(0);
	КонецЕсли;

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
	Форма.ИспользоватьСлой("Общий,Основной,ОсновнойТорг",2);
	
	Если Константа.ПоказыватьОстаткиТМЦ = Нет Тогда
	    Форма.тОстатокПолный.Видимость(0);
	    Форма.тОстатокПоСкладу.Видимость(0);
	КонецЕсли;

	Валюта_Прежн = Валюта;
	Курс_Прежн = Курс;  
	СтараяДата = ДатаДок;
	СтарВидНДС		 = ВидНДС;
	СтарКатегорияЦен = КатегорияЦен;
	глУстВидимостьЦен(Контекст);
	Если ПустоеЗначение(ВидТары) = 1 Тогда
	    ВидТары=Перечисление.ВидыТары.Залоговая;
	КонецЕсли;
	
	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр")  ИЛИ (НазваниеНабораПрав() = "Розница") Тогда
		Форма.кДатьСкидку.Видимость(0);
		Форма.Проверено.Доступность(0);
	КонецЕсли;
	
	фОстаткиНаДокумент = ВосстановитьЗначение("ОстаткиНаДокумент");
	ИзмфОстаткиНаДокумент();
	
//	ДоступностьЗаказ();  
// ==== alexa
  
// ===== alexa - end	
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ТМЦ = Форма.Параметр Тогда
			    АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	глЗагрузитьДокументВСтруктуру(Контекст, СтруктИзменений);
	Если (НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр") Тогда
		Форма.кЭкспортФ.Видимость(0);	    
	КонецЕсли;	
	
	//--- Строю глобальный список видов упаковки //--- УМК Сандомирский В.Ю. (31.08.14)
	СпВидыУпаковкиГлобальный = глПолучитьСписокУпаковкиГлобальный();
	ПриВыбореОснования();
	Если (НазваниеНабораПрав() <> "Администратор") И (НазваниеНабораПрав() <> "ПроизводствоКасса") Тогда
		Форма.ДатаЦ.Доступность(0);
		Форма.НеНачислятьБонус.Доступность(0);
		Форма.ОсновнойТовар.Видимость(0);
	КонецЕсли;	
	
	КатегорияЦен_Розница = Контрагент.КатегорияЦенРозница.Получить(ДатаДок);
	ВидимостьДокументаРозница();
	
	УстановитьВидимостьПоФлагуРеализацияСотруднику();
	
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	глДобавитьТоварПоШтрихКоду(Контекст,Событие,Данные);
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()	
	Если ТекущийДокумент().Выбран() = 0 Тогда
		глПроверкаДатыДок(Контекст,"Запись");
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю. (11.06.15) проверка на "нет без упаковки"
	ТекстПредупреждения = "";
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ТМЦ.НетБезУпаковки = 1 Тогда
			
			Если ПустоеЗначение(ВидУпаковки) = 1 Тогда
				ТекстПредупреждения = ТекстПредупреждения + глПравильныйСимволПереноса + " в строке " + НомерСтроки + " " + ТМЦ + " не выпускается без упаковки !" 	;		
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Если ТекстПредупреждения <> "" Тогда
		Предупреждение(ТекстПредупреждения);
		//СтатусВозврата(0);
		//Возврат;
	КонецЕсли;
	//... УМК Сандомирский В.Ю. (11.06.15) проверка на "нет без упаковки"
	
	//--- УМК Сандомирский В.Ю, (12.11.14) удаляем строки с пустым количеством
	ФлагПустоеКоличество = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Кво = 0 Тогда
			Сообщить(" В строке " + НомерСтроки + " не заполнено количество !!! (внесите количество или удалите строку)","!!!");
			ФлагПустоеКоличество = 1;
		КонецЕсли;
	КонецЦикла;	
	Если ФлагПустоеКоличество = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	//... УМК Сандомирский В.Ю, (12.11.14) удаляем строки с пустым количеством
	
	
	//--- УМК Сандомирский В.Ю. (25.05.15) логика флажков "Контрагент взаиморасчет" и "В долг"
	Если (ФлагКонтрагентВзаимозачета = 1) И (ФлагВДолг = 0) И ((НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр")) Тогда
		Предупреждение("Установите флажок ""В долг""");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	//... УМК Сандомирский В.Ю. (25.05.15)
	
	//--- УМК Сандомирский В.Ю. (29.05.15) 
	Если ((НазваниеНабораПрав() = "Заказ") ИЛИ (НазваниеНабораПрав() = "ВесовщикСыр")) И (ДатаДок < ТекущаяДата()) Тогда
		Предупреждение("Нельзя записывать документ ранее текущей даты " + ТекущаяДата());
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	//... УМК Сандомирский В.Ю. (29.05.15)
	
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ);
	
	Если ВыполнитьПроверкуПечати(ТаблТМЦ, 1) = 0 Тогда
	    СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	ВыбратьСтроки();
	ИтогоВес = 0;
	ЕдВеса = Константа.ЕдиницаВеса;
	
	//--- УМК Сандомирский В.Ю, (10.04.15)		
	Если ПустоеЗначение(УМК_РН_Родитель) = 1 Тогда
		ИтогоВес = глИтКол(Контекст, 1);
	
		//ВыбратьСтроки();
		//Пока ПолучитьСтроку() = 1 Цикл
		//	ВычитатьВес = 1 - ТМЦ.ВычитатьВесУпаковки.Получить(ДатаДок);
		//	ВычитатьВес = ?(СоздатьПеремещение = Да, 0, ВычитатьВес);
		//	Если Ед.Единица = ЕдВеса Тогда
		//		ИтогоВес = ИтогоВес + Кол + ВесУп * ВычитатьВес;
		//	Иначе
		//		ИтогоВес = ИтогоВес + Кол * ТМЦ.Вес + ВесУп * ВычитатьВес;
		//	КонецЕсли;
		//КонецЦикла;		
	Иначе  //--- есть родительская РН но непонятно открыта она или нет поэтому через попытку 		
		Если ТекущийДокумент().ПометкаУдаления() <> 1 Тогда		
			ИтогоВес = глИтКол(Контекст, 1);
		
			//ВыбратьСтроки();
			//Пока ПолучитьСтроку() = 1 Цикл
			//	ВычитатьВес = 1 - ТМЦ.ВычитатьВесУпаковки.Получить(ДатаДок);
			//	ВычитатьВес = ?(СоздатьПеремещение = Да, 0, ВычитатьВес);
			//	Если Ед.Единица = ЕдВеса Тогда
			//		ИтогоВес = ИтогоВес + Кол + ВесУп * ВычитатьВес;
			//	Иначе
			//		ИтогоВес = ИтогоВес + Кол * ТМЦ.Вес + ВесУп * ВычитатьВес;
			//	КонецЕсли;
			//КонецЦикла;
		КонецЕсли;		
		Попытка		
			//УМК_РН_РодительИтогоВес = глИтКол(УМК_РН_Родитель, 1);
			//УМК_РН_Родитель.ВыбратьСтроки();
			//Пока УМК_РН_Родитель.ПолучитьСтроку() = 1 Цикл	
			//	ВычитатьВес = 1 - УМК_РН_Родитель.ТМЦ.ВычитатьВесУпаковки.Получить(ДатаДок);
			//	ВычитатьВес = ?(УМК_РН_Родитель.СоздатьПеремещение = Да, 0, ВычитатьВес);
			//	Если УМК_РН_Родитель.Ед.Единица = ЕдВеса Тогда
			//		УМК_РН_РодительИтогоВес = УМК_РН_РодительИтогоВес + УМК_РН_Родитель.Кол + УМК_РН_Родитель.ВесУп * ВычитатьВес;
			//	Иначе
			//		УМК_РН_РодительИтогоВес = УМК_РН_РодительИтогоВес + УМК_РН_Родитель.Кол * УМК_РН_Родитель.ТМЦ.Вес + УМК_РН_Родитель.ВесУп * ВычитатьВес;
			//	КонецЕсли;		
			//КонецЦикла;
			
			УМК_РН_РодительОбъект = СоздатьОбъект("Документ.РасходнаяНакладная");
			УМК_РН_РодительОбъект.НайтиДокумент(УМК_РН_Родитель);
			УМК_РН_РодительОбъект.ИтогоВес = глИтКол(УМК_РН_Родитель, 1) + ИтогоВес;
	
			УМК_РН_РодительОбъект.Записать();			
		Исключение  		
			Сообщить(ОписаниеОшибки());		
		КонецПопытки;	
		
		ИтогоВес = 0;		
	КонецЕсли;
	
	//--- УМК Сандомирский В.Ю, (10.04.15)
	Если ПустоеЗначение(УМК_РН_Дочерняя) <> 1 Тогда		
		Если УМК_РН_Дочерняя.ПометкаУдаления() <> 1 Тогда  //--- УМК Сандомирский В.Ю, (22.04.15)
		
			УМК_РН_Дочерняя.ВыбратьСтроки();
			Пока УМК_РН_Дочерняя.ПолучитьСтроку() = 1 Цикл	
				ВычитатьВес = 1 - УМК_РН_Дочерняя.ТМЦ.ВычитатьВесУпаковки.Получить(ДатаДок);
				ВычитатьВес = ?(УМК_РН_Дочерняя.СоздатьПеремещение = Да, 0, ВычитатьВес);
				ВычитатьВес = ВычитатьВес*?(ПустоеЗначение(Константа.НеВычитатьВесУпаковкиВРН)=1,1,?(УМК_РН_Дочерняя.ДатаДок>=Константа.НеВычитатьВесУпаковкиВРН,0,1));//+umk
				Если УМК_РН_Дочерняя.Ед.Единица = ЕдВеса Тогда
					ИтогоВес = ИтогоВес + УМК_РН_Дочерняя.Кол + УМК_РН_Дочерняя.ВесУп * ВычитатьВес;
				Иначе
					ИтогоВес = ИтогоВес + УМК_РН_Дочерняя.Кол * УМК_РН_Дочерняя.ТМЦ.Вес + УМК_РН_Дочерняя.ВесУп * ВычитатьВес;
				КонецЕсли;		
			КонецЦикла;	
		
		КонецЕсли;		
	КонецЕсли;
	
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	СтрокаРеквизитовШапки = "";
	глРеквизитыШапкиДокумента(Контекст, СтрокаРеквизитовШапки);							//--- УМК Сандомирский В.Ю, (Добавил непроверяемые поля) 07.04.14
	Если глЕстьИзменения(Контекст, СтруктИзменений, СтрокаРеквизитовШапки) = 1 Тогда		
		Автор = глПользователь;															//... УМК Сандомирский В.Ю, (Добавил непроверяемые поля) 07.04.14
	КонецЕсли;
	
	ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Контрагент, 0);
	глСохранитьЗначение(Контекст,"СубконтоВалДох",СубконтоВалДох);
	
	Если (ДатаДок > ТекущаяДата()) и (ТекущийДокумент().Выбран() = 0) Тогда
	    Попытка
			АвтоВремяОтключить();
			УстановитьВремя(0,1,0);
		Исключение КонецПопытки;
	ИначеЕсли (ДатаДок = ТекущаяДата()) и (ТекущийДокумент().Выбран() = 0) Тогда
		ВремяЗаписи = Константа.ВремяЗаписиРН;
		ПозТире = Найти(ВремяЗаписи, "-");
		Если ПозТире <> 0 Тогда
			Начало = Лев(ВремяЗаписи, ПозТире-1);
			НВремя = Число(Лев(Начало, 2)) * 3600 + Число(Прав(Начало, 2)) * 60;			
			Конец = Сред(ВремяЗаписи, ПозТире+1);
			КЧасы = Число(Лев(Конец, 2));
			КМинуты = Число(Прав(Конец, 2));
			КВремя = КЧасы * 3600 + КМинуты * 60;			
		Иначе
			НВремя = 10 * 3600;
			КВремя = 18 * 3600;
			КЧасы = 18;
			КМинуты = 0;
		КонецЕсли;
		Ч = 0; М = 0; С = 0;
		ТекущееВремя(Ч,М,С);
		ТекВр = Ч*3600+М*60+С;
		Попытка
			Если (ТекВр >= НВремя) и (ТекВр <= КВремя) Тогда
			    УстановитьВремя(КЧасы, КМинуты, 0);
			Иначе
				УстановитьВремя(Ч,М,С);
			КонецЕсли;
		Исключение КонецПопытки;			
	ИначеЕсли (ТекущийДокумент().Выбран() = 1) и (Проведен() = 0) Тогда
		АвтоВремяНачалоДня();
	КонецЕсли;	
	
	Если ( (НазваниеНабораПрав() = "Администратор") 			//--- УМК Сандомирский В.Ю, (23.07.14) Для РН Александры концом дня
			ИЛИ (НазваниеНабораПрав() = "ПроизводствоКасса")
			ИЛИ (НазваниеНабораПрав() = "ПроизводствоСбыт")) 
			И (Проведен() = 0) 
			И (МестоХранения = Константа.СкладДляСписанияЭтикеток) Тогда		
		АвтоВремяКонецДня(); 
	КонецЕсли;

	// проверим цены
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара Тогда
			ЦенаДляПроверки = глПолучитьЦенуВУП(Контекст, КатегорияЦен, ДатаДок, Валюта, Дата_курса, ТМЦ);
			Если ЦенаСНДС = ЦенаДляПроверки Тогда				
				Предупреждение("В строке: " + НомерСтроки  + " указана только цена вак. уп. либо нулевая цена");			
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустоеЗначение(Контрагент.КонтрагентВзаимозачета) = 1 Тогда //--- УМК Сандомирский В.Ю. (24.11.14) принудительная очистка флага
		ФлагКонтрагентВзаимозачета = 0;
	КонецЕсли;		
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,ФлагСтандОбр)
	Если Рекв = "ВидНДС" Тогда
	    глВыбратьНДС(Контекст);
		ИзмРеквизитШапки("ВидНДС");
		ФлагСтандОбр = 0;
	ИначеЕсли Рекв="Отпустил" Тогда
		КонтФирмы = Фирма;
		ФлагСтандОбр = 0;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);
	//ИначеЕсли Рекв = "Предпочтение" Тогда   // --- УМК Сандомирский В.Ю. (26.11.14) убрал с формы предпочтение
	//	Если ((глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.FIFO) 
	//	ИЛИ ((глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.LIFO))) Тогда
	//		ВыборПредПочтения();
	//	КонецЕсли;	
	//	ФлагСтандОбр = 0;
	ИначеЕсли Рекв="Касса" Тогда
		ВыборКассы();		
		ФлагСтандОбр = 0;
	ИначеЕсли (Рекв="Автомобиль") И (Константа.УМК_ДатаНачалаРаботыАвтотранспорта > ДатаДок) Тогда   //--- УМК Сандомирский В.Ю, (01.07.14) 
		ФлагСтандОбр = 0;
		СпрНА = СоздатьОбъект("Справочник.НеоборотныеАктивы");
		Если СпрНА.НайтиПоКоду("00000000001") = 1 Тогда
			Спис = СоздатьОбъект("СписокЗначений");
			СпрНА.ИспользоватьРодителя(СпрНА.ТекущийЭлемент());
			СпрНА.ВыбратьЭлементы();
			Пока СпрНА.ПолучитьЭлемент() = 1 Цикл
				Если СпрНА.ЭтоГруппа() = 0 Тогда
				    Спис.ДобавитьЗначение(СпрНА.ТекущийЭлемент());
				КонецЕсли;				
			КонецЦикла;
			
			СтрАвто = "";
			Если Спис.ВыбратьЗначение(СтрАвто,,,,2) = 1 Тогда
			    Автомобиль = СтрАвто.Наименование;
			КонецЕсли;
		КонецЕсли;
	
	ИначеЕсли Рекв="УМК_Автомобиль" Тогда	//--- УМК Сандомирский В.Ю, (17.06.14) Выбор автомобилей списком как раньше 
		ФлагСтандОбр = 0;
		СпрАуто = СоздатьОбъект("Справочник.УМК_Автомобили");
		Спис = СоздатьОбъект("СписокЗначений");
		СпрАуто.ВыбратьЭлементы();
		Пока СпрАуто.ПолучитьЭлемент() = 1 Цикл
			
			Спис.ДобавитьЗначение(СпрАуто.ТекущийЭлемент());
						
		КонецЦикла;
		
		СтрАвто = "";
		Если Спис.ВыбратьЗначение(СтрАвто,,,,2) = 1 Тогда
		    УМК_Автомобиль = СтрАвто;
		КонецЕсли;

	ИначеЕсли (Рекв = "Экспедитор") Тогда
		ФлагСтандОбр = 0;
		СпрНА = СоздатьОбъект("Справочник.Экспедитор");
		Если СпрНа.Выбрать("Выберите " + ?(Рекв = "Водитель", "водителя", "экспедитора"), "ФормаСписка") = 1 Тогда
			УстановитьАтрибут(Рекв, Строка(СпрНА.ТекущийЭлемент()));
		КонецЕсли;
		
	ИначеЕсли (Рекв = "ВидУпаковки") Тогда //--- УМК Сандомирский В.Ю, (31.08.14) 
		глВыбратьВидУпаковки(Контекст, ФлагСтандОбр, СпВидыУпаковкиГлобальный, 1);
	КонецЕсли;	
КонецПроцедуры
    
// ===============================
Процедура ИзмТМЦ()
	
	Если ТМЦ.НетБезУпаковки = 1 Тогда // --- УМК Сандомирский В.Ю. (11.06.15)
		ВидУпаковки = ТМЦ.ВидУпаковкиПоУмолчанию;		
	Иначе
		ВидУпаковки = "";
	КонецЕсли;
	глПриИзмененииТовара(Контекст);
	ПересчетЦенаСуммаРозница(ТМЦ, КатегорияЦен_Розница); 
	УстСкидкаВес();
КонецПроцедуры

// ===============================
Процедура ИзмВидУпаковки()
	
	УстСкидкаВес();
	глПриИзмененииТовара(Контекст, 1);	
	ПересчетЦенаСуммаРозница(ТМЦ, КатегорияЦен_Розница)
		
КонецПроцедуры

// ===============================
Процедура ИзмНеИспользоватьСВес()
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("Пересчитать скидку на вес в документе?", "Да+Нет") = "Да" Тогда
		    ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				УстСкидкаВес();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмТриЗнака()
	Если КвоЗнаков = 0 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Кво = Окр(Кво, 2);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// =============================== // --- УМК Сандомирский В.Ю, (20.11.14)
Процедура ЭкспортФилиалы()	
	// --- УМК Сандомирский В.Ю, (21.11.14) закоментил
	//Если ПустоеЗначение(Контрагент.СхемаЭкспортаУпаковок) = 1 Тогда // --- УМК Сандомирский В.Ю, (20.11.14)
	//	Предупреждение(" У контрагента " + Контрагент  + " не заполнена СХЕМА ЭКСПОРТА УПАКОВОК");
	//	Возврат;
	//КонецЕсли;
	
	Если СокрЛП(Контрагент.ПутьДляЭкспортаРН) = "" Тогда
		Предупреждение("У контрагента не задан путь для экспорта РН");
		Возврат;
	КонецЕсли;
	
	Если Модифицированность() = 1 Тогда
	    Если Вопрос("Документ необходимо сохранить. Сохранить сейчас?", "Да+Нет") = "Нет" Тогда
			Возврат;
		Иначе
			ПриЗаписи();
			Записать();
	    КонецЕсли;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
		Возврат;
	КонецЕсли;	
	
	//Попытка
	//	глРасшифровка.УдалитьВсе();
	//Исключение
	//	глРасшифровка = СоздатьОбъект("СписокЗначений");
	//КонецПопытки;
	//глФлагРасшифровки = 5;
	//глРасшифровка.Установить("КонтекстДокумента", Контекст);	
	//ОткрытьФорму("Обработка.УМК_ЭкспортРНвФилиалы");
	
	ОткрытьФорму(Контрагент.СхемаЭкспортаУпаковок, Контекст);
КонецПроцедуры

Процедура ВывестиШапкуТаблицы(Таб, ПоДатеУКШ = 0)
	ТекДата = ?((ДатаУКШ = Дата(0)) ИЛИ (ПоДатеУКШ = 0), ДатаДок, ДатаУКШ);
	
	НомерЗаказа = ""; ДатаВх = ""; ДатаНа = "";	
	Если (ПустоеЗначение(ДокументОснование) = 0) И (ДокументОснование.Вид() = "УМК_ЗаказКлиента") Тогда
		НомерЗаказа = ДокументОснование.НомерЗаказа;
		ДатаВх = Формат(ДокументОснование.ДатаВх, "ДДДММГГГГ");
		ДатаНа = Формат(ДокументОснование.ДатаНа, "ДДДММГГГГ");
	КонецЕсли;
	Таб.ВывестиСекцию("Шапка");
КонецПроцедуры

// =============================== 
Процедура Экспор_до()
	Если (Ф1 = 0) И (Контрагент.РазрешитьЭкспортФ2 = 0) Тогда
		Предупреждение("Экспорт возможен только для РН по Ф1 либо для отдельных контрагентов");
		Возврат;
	КонецЕсли;
	Если Выгружена = 1 Тогда
		Предупреждение("Накладная уже выгружена");
		Возврат;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
	    Если Вопрос("Документ необходимо сохранить. Сохранить сейчас?", "Да+Нет") = "Нет" Тогда
			Возврат;
		Иначе
			ПриЗаписи();
			Записать();
	    КонецЕсли;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Экспорт");
	ВывестиШапкуТаблицы(Таб);	

	Спец = глПолучитьКодыИзСпецификации(Контрагент, ДатаДок, 0);

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ШтрихКод = "";
		КодКлиента = ПолучитьКодИзСпецификации(Спец, ТМЦ, ВидУпаковки, ШтрихКод);
		
		Род = глВернутьВерхнегоРодителя(ВидУпаковки);
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;

	ИмяКонтрагента = СтрЗаменить(Строка(Контрагент), ",", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, ".", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, """", "");
	
	ИмяФайла = СокрЛП(Константа.ПутьЭкспортаРН) + СокрЛП(НомерДок) + "_" + 
		СтрЗаменить(Строка(ДатаДок), ".", "") + "_" + ИмяКонтрагента + ".mxl";
	Таб.Записать(ИмяФайла);
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
	    Сообщить("Экспорт выполнен успешно");
		Выгружена = 1;        
	Иначе
		Сообщить("Экспорт не удался");
		Выгружена = 0;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьСтроку(ТЗ_Оставляем)
	ТЗ_Оставляем.НоваяСтрока();
	ТЗ_Оставляем.ТМЦ 			= ТМЦ;
	ТЗ_Оставляем.Предпочтение 	= Предпочтение;
	ТЗ_Оставляем.Кво			= Кво;
	ТЗ_Оставляем.Коэффициент	= Коэффициент;
	ТЗ_Оставляем.Ед				= Ед;
	ТЗ_Оставляем.ЦенаБезНДС		= ЦенаБезНДС;
	ТЗ_Оставляем.ЦенаСНДС		= ЦенаСНДС;
	ТЗ_Оставляем.СуммаБезСкидки	= СуммаБезСкидки;
	ТЗ_Оставляем.Скидка			= Скидка;
	ТЗ_Оставляем.СуммаБезНДС	= СуммаБезНДС;
	ТЗ_Оставляем.СуммаСНДС		= СуммаСНДС;
	ТЗ_Оставляем.НДС			= НДС;
	ТЗ_Оставляем.Набор			= Набор;
	ТЗ_Оставляем.КвоНаборов 	= КвоНаборов;
	ТЗ_Оставляем.свес			= свес;
	ТЗ_Оставляем.СоздатьПеремещение = СоздатьПеремещение;
	ТЗ_Оставляем.Контроль		= Контроль;
	ТЗ_Оставляем.кол			= кол;
	ТЗ_Оставляем.ВУПТ			= ВУПТ;
	ТЗ_Оставляем.ВесУп			= ВесУп;
	ТЗ_Оставляем.ДопКво			= ДопКво;
	ТЗ_Оставляем.ВидУпаковки	= ВидУпаковки;
	ТЗ_Оставляем.ЦенаУпаковки	= ЦенаУпаковки;
	ТЗ_Оставляем.СуммаУпаковки	= СуммаУпаковки;
	ТЗ_Оставляем.фДозаказ		= фДозаказ;			
	ТЗ_Оставляем.ЦенаБезСкидки	= ЦенаБезСкидки;
	ТЗ_Оставляем.НеНачислятьБонус	= НеНачислятьБонус;
	ТЗ_Оставляем.Тара			= Тара;
	ТЗ_Оставляем.КвоТары		= КвоТары;
	ТЗ_Оставляем.КоличествоКлиента = КоличествоКлиента;
	ТЗ_Оставляем.КвоУпаковок 	= КвоУпаковок;		
КонецПроцедуры

// =============================== // --- УМК Сандомирский В.Ю, (25.03.15)
Процедура Экспор_после()
	ТекДата = ?(ДатаУКШ = Дата(0), ДатаДок, ДатаУКШ);
	
	Если (Ф1 = 0) И (Контрагент.РазрешитьЭкспортФ2 = 0) Тогда
		Предупреждение("Экспорт возможен только для РН по Ф1 либо для отдельных контрагентов");
		Возврат;
	КонецЕсли;
	Если Выгружена = 1 Тогда
		Предупреждение("Накладная уже выгружена");
		Возврат;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
	    Если Вопрос("Документ необходимо сохранить. Сохранить сейчас?", "Да+Нет") = "Нет" Тогда
			Возврат;
		Иначе
			ПриЗаписи();
			Записать();
	    КонецЕсли;
	КонецЕсли;
	Если Модифицированность() = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Экспорт");
	
	ПечВидДок = "РН-";
	ВывестиШапкуТаблицы(Таб, 1);
	
	ЕстьОшибки = 0;
	
	ТекстПисьма = ""; //--- УМК Сандомирский В.Ю. (02.03.15)  текст письма
	
	ТЗ_Оставляем 	= СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ_Оставляем);
	ТЗ_Оставляем.УдалитьСтроки();
	
	ТЗ_Новая 		= СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ_Новая);
	ТЗ_Новая.УдалитьСтроки();

	Фл_ушла = 0;
	БылиОшибкиНоВыгрузилиВсеравно = 0;
	НеКонтролироватьДекл = Константа.НеКонтролироватьДекл.Получить(ТекДата);
	Спец = глПолучитьКодыИзСпецификации(Контрагент, ТекДата, 0);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если НеНачислятьБонус = Да Тогда
			Фл_ушла = 0;
		ИначеЕсли ТМЦ.ЕстьКодС.Получить(ТекДата) = 1 Тогда  //--- УМК Сандомирский В.Ю. (27.02.15) 			
			Фл_ушла = 1;			
			//РасчетнаяДекларируемаяЦена = ТМЦ.Цена_Прод.Получить(ТекДата) + ?(ПустоеЗначение(ВидУпаковки)=1,0,Константа.УМК_ЦенаВУП_Ф1);
			РасчетнаяДекларируемаяЦена = ?(ПустоеЗначение(ВидУпаковки)=1, ТМЦ.Цена_Прод.Получить(ТекДата), ТМЦ.Цена_ПродУп.Получить(ТекДата));	
			Если (ЦенаСНДС > РасчетнаяДекларируемаяЦена) И (ТМЦ.ПечататьВДекларацию.Получить(ТекДата) = 1) Тогда				
				ПечУпаковка = ""; //--- УМК Сандомирский В.Ю. (22.05.15) 
				Если (ПустоеЗначение(ВидУпаковки) <> 1) И (ВидУпаковки <> НетУп) Тогда
					ПечУпаковка = "Упаковка: " + СокрЛП(Строка(ВидУпаковки));
				КонецЕсли;	//... УМК Сандомирский В.Ю. (22.05.15) 				
				Если (Контрагент.фРазрешитьПревышениеДеклЦен = 1) ИЛИ (НеКонтролироватьДекл = Да) Тогда
					//--- норм					
					БылиОшибкиНоВыгрузилиВсеравно = 1;					
					ТекстПисьма =   ТекстПисьма + "" +  глПравильныйСимволПереноса
										+  глПравильныйСимволПереноса + " ТМЦ - " + ТМЦ + ПечУпаковка +  " Цена с НДС " + ЦенаСНДС + " больше декларируемой цены " + РасчетнаяДекларируемаяЦена + "Выгружена т.к. у контрагента разрешено превышение";	//--- УМК Сандомирский В.Ю. (02.03.15) 					
					Сообщить("В строке " + НомерСтроки +  " ТМЦ - " + ТМЦ +  " Цена с НДС " + ЦенаСНДС + " больше декларируемой цены " + РасчетнаяДекларируемаяЦена);					
				Иначе					
					Фл_ушла = 0;					
					ТекстПисьма =   ТекстПисьма + "" +  глПравильныйСимволПереноса
										+  глПравильныйСимволПереноса + " ТМЦ - " + ТМЦ + ПечУпаковка +  " Цена с НДС " + ЦенаСНДС + " больше декларируемой цены " + РасчетнаяДекларируемаяЦена;	//--- УМК Сандомирский В.Ю. (02.03.15) 								
					Сообщить("В строке " + НомерСтроки +  " ТМЦ - " + ТМЦ +  " Цена с НДС " + ЦенаСНДС + " больше декларируемой цены " + РасчетнаяДекларируемаяЦена);				
				КонецЕсли;	
			Иначе				
				//--- норм				
			КонецЕсли;			
		Иначе			
			Фл_ушла = 0;
			Сообщить("В строке " + НомерСтроки + " ТМЦ - " + ТМЦ + " не стоит признак ""есть код синхронизации"" ");				
		КонецЕсли;
	
		СтрБлок = ТМЦ.БлокироватьВыписку.Получить(ТекДата);
		Если Сред(СтрБлок, НомерДняНедели(ТекДата), 1) = "1" Тогда
			Сообщить("По ТМЦ: " + Строка(ТМЦ) + " в строке: " + Строка(НомерСтроки) + " выписка блокирована по дню недели");			
			Фл_ушла = 0;
		КонецЕсли;
		
		//---
		Если Фл_ушла = 1 Тогда
			Если (ПустоеЗначение(ВидУпаковки) = 1) ИЛИ (ВидУпаковки = НетУп) Тогда
				КодPLU = 0;
				СрокГодности = ТМЦ.СрокГодности;
				ЕдиницаИзмерения = ТМЦ.ЕдиницаИзмерения.Идентификатор();
			Иначе
				РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВидУпаковки);
				Если ПустоеЗначение(РВУ) = 0 Тогда
					КодPLU = РВУ.КодPLU;
					СрокГодности = РВУ.СрокГодности;
					ЕдиницаИзмерения = РВУ.ЕдиницаИзмерения.Идентификатор();
					Если ПустоеЗначение(РВУ.ТМЦПодарок) = 0 Тогда
						Фл_ушла = 0;
					КонецЕсли;
				Иначе
					КодPLU = "";
					СрокГодности = "";
					ЕдиницаИзмерения = "";
					Сообщить("Не удалось получить разрешенный вид упаковки для вида упаковки: " + Строка(ВидУпаковки) + " для ТМЦ: "  + Строка(ТМЦ) + " в строке: " + НомерСтроки);					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Фл_ушла = 1 Тогда
			ПечДляПечати = глПолучитьДляПечатиУпаковки(ТМЦ,ВидУпаковки, ТекДата);
			Род = глВернутьВерхнегоРодителя(ВидУпаковки);			
			ШтрихКод = "";
			КодКлиента = ПолучитьКодИзСпецификации(Спец, ТМЦ, ВидУпаковки, ШтрихКод);
			
			Таб.ВывестиСекцию("Строка");
			ЗаполнитьСтроку(ТЗ_Оставляем);
		Иначе			
			ЗаполнитьСтроку(ТЗ_Новая);
		КонецЕсли;		
	КонецЦикла;
	
	Если ТЗ_Новая.КоличествоСтрок() = КоличествоСтрок() Тогда //--- УМК Сандомирский В.Ю. (26.03.15) ничего не выгрузилось --- сообщаем
		Предупреждение("Ничего не выгрузилось",10);
	КонецЕсли;
	
	ИмяКонтрагента = СтрЗаменить(Строка(Контрагент), ",", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, ".", "");
	ИмяКонтрагента = СтрЗаменить(ИмяКонтрагента, """", "");
	
	ИмяФайла = СокрЛП(Константа.ПутьЭкспортаРН) + СокрЛП(НомерДок) + "_" + 
		СтрЗаменить(Строка(ТекДата), ".", "") + "_" + ИмяКонтрагента + ".mxl";
	Таб.Записать(ИмяФайла);
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
		
		Если ТЗ_Новая.КоличествоСтрок() = КоличествоСтрок() Тогда
			Сообщить("Экспорт выполнен , но ничего не выгрузилось","!");
		Иначе
			Сообщить("Экспорт выполнен успешно");		
		КонецЕсли;
		
		Выгружена = 1;        
	Иначе
		Сообщить("Экспорт не удался");
		Выгружена = 0;
		Возврат;				//--- УМК Сандомирский В.Ю. (02.03.15) лишний раз ничего не делаем потому что экспорт неудался
	КонецЕсли;
	
	
	Если ТекстПисьма <> "" Тогда	//--- УМК Сандомирский В.Ю. (02.03.15) 
				
		ТекстПисьмаОкончательный = "" + глПравильныйСимволПереноса + глПравильныйСимволПереноса 
					+ " Расходная накладная : " 		+ СокрЛП(Строка(ТекущийДокумент()))  + глПравильныйСимволПереноса + глПравильныйСимволПереноса	
					+ " Дата документа : " 				+ ТекДата + глПравильныйСимволПереноса
					+ " Родитель контрагента : " 		+ Контрагент.Родитель + глПравильныйСимволПереноса  //--- УМК Сандомирский В.Ю. (22.05.15) 
					+ " Контрагент : " 					+ Контрагент  + глПравильныйСимволПереноса
					+ " Тип цен накладной : " 			+ КатегорияЦен + глПравильныйСимволПереноса			//--- УМК Сандомирский В.Ю. (22.05.15) 
					+ " Сумма накладной : " 			+ Формат(Итог("СуммаСНДС"),"Ч15.2") + глПравильныйСимволПереноса + глПравильныйСимволПереноса					
					+ " Пользователь :" 				+ Строка(глПользователь);
						
		ТекстПисьмаОкончательный = ТекстПисьмаОкончательный + глПравильныйСимволПереноса + глПравильныйСимволПереноса + ТекстПисьма;
		
		Если БылиОшибкиНоВыгрузилиВсеравно = 1 Тогда
			ТемаПисьма = "Уведомление (Выгружена): не совпадение деклариуемой цены и цены в накладной при ЭКСПОРТЕ в ф1 ";	
		Иначе	
			ТемаПисьма = "Уведомление : не совпадение деклариуемой цены и цены в накладной при ЭКСПОРТЕ в ф1 ";	
		КонецЕсли;
		
		глОтправитьУведомлениеЭП("ДекларированныеЭкспорт", ТемаПисьма , ТекстПисьмаОкончательный);
			
	КонецЕсли;
			
	Если ТЗ_Новая.КоличествоСтрок() > 0   Тогда
			
		Если ТЗ_Новая.КоличествоСтрок() < КоличествоСтрок() Тогда
		
			ДокНоваяРН = СоздатьОбъект("Документ.РасходнаяНакладная");
			ДокНоваяРН.Новый();
			
			//--- копируем общие реквзиты
			Для Инд = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл
				Рекв = Метаданные.ОбщийРеквизитДокумента(Инд).Идентификатор;
				ДокНоваяРН.УстановитьАтрибут(Рекв, ТекущийДокумент().ПолучитьАтрибут(Рекв));
			КонецЦикла;
		
			//--- копируем реквизиты шапки
			Для Инд = 1 По Метаданные.Документ("РасходнаяНакладная").РеквизитШапки() Цикл
				Рекв = Метаданные.Документ("РасходнаяНакладная").РеквизитШапки(Инд).Идентификатор;
				ДокНоваяРН.УстановитьАтрибут(Рекв,ТекущийДокумент().ПолучитьАтрибут(Рекв));				
			КонецЦикла;
			
			Если ПустоеЗначение(Контрагент.КонтрагентДляФ2) = 0 Тогда
				ДокНоваяРН.Контрагент = Контрагент.КонтрагентДляФ2;
				ДокНоваяРН.Договор= Контрагент.КонтрагентДляФ2.БазДоговор;
			КонецЕсли;
			
			ДокНоваяРН.ЗагрузитьТабличнуюЧасть(ТЗ_Новая);
			ДокНоваяРН.Ф1 = 0;
			
			
			ДокНоваяРН.ИтогоВес 	= 0; //--- Обнуляем вес
			ДокНоваяРН.ИтогоВесК 	= 0; //--- Обнуляем перевес
			
			ТекСекунды 	= 0;
			ТекМинуты  	= 0;
			ТекЧасы	 	= 0;
			
			ДокНоваяРН.ДатаДок = ДатаДок;
			ПолучитьВремя(ТекЧасы,ТекМинуты,ТекСекунды);	
			
			ДокНоваяРН.АвтоВремяОтключить();
			ДокНоваяРН.УстановитьВремя(ТекЧасы,ТекМинуты,ТекСекунды);	
			
			ДокНоваяРН.УМК_РН_Родитель = ТекущийДокумент();
			ДокНоваяРН.Записать();
			
			ОткрытьФорму(ДокНоваяРН.ТекущийДокумент(), 10);
			
			//--- заполняем тек док оставшимися и доченюю лепим
			ЗагрузитьТабличнуюЧасть(ТЗ_Оставляем);
			УМК_РН_Дочерняя = ДокНоваяРН.ТекущийДокумент();
			Записать();			
		КонецЕсли;			
	КонецЕсли;		
КонецПроцедуры

// =============================== // --- УМК Сандомирский В.Ю, (25.03.15)
Процедура Экспор()	
	Если Константа.УМК_АвтоРазбиватьРН = Да Тогда
		Экспор_после();
	Иначе
		Экспор_до();
	КонецЕсли;	
КонецПроцедуры // 

// ===============================
Процедура ИзмФ1()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глВыч_Суммы_Накл(Контекст,1);
	КонецЦикла;
КонецПроцедуры

// =============================== //--- УМК Сандомирский В.Ю. (12.11.14)  //--- спрятал не "активные" при выводе списка
Процедура ЗаполнитьТУ()
	СпЗн = СоздатьОбъект("СписокЗначений");
	СпрВУ = СоздатьОбъект("Справочник.ВидыУпаковки");
	СпрВУ.ВыбратьЭлементы();
	Пока СпрВУ.ПолучитьЭлемент() = 1 Цикл
		
		Если СпрВУ.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СпрВУ.Активна = Перечисление.ДаНет.Да Тогда
			СпЗн.ДобавитьЗначение(СпрВУ.ТекущийЭлемент());
		КонецЕсли;
			
	КонецЦикла;
	Зн = "";
	Если СпЗн.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ВидУпаковки = Зн;
		ИзмВидУпаковки();
	КонецЦикла;
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (26.05.14) при выборе схемы руками оставляем пометку 
Процедура ИзмСхемаРБ()
	ФлРучногоИзмСхемыРБ = 1;
КонецПроцедуры // ИзмСхемаРБ

//====================================================================== //--- УМК Сандомирский В.Ю. (26.05.14) при выборе водителя заполнять закрепленный авто
Процедура ИзмВодитель()
	Если (ПустоеЗначение(Водитель) <> 1) И (ПустоеЗначение(УМК_Автомобиль) = 1) Тогда
		УМК_Автомобиль = Водитель.ЗакрепленныйАвтомобиль;
	КонецЕсли;	
КонецПроцедуры // ИзмВодитель

//====================================================================== //--- УМК Сандомирский В.Ю. (23.07.14) процент округления
Процедура ПроцентОкруглениеТЧ()
	ОткрытьФормуМодально("Обработка.УМК_ГрупповаяНаценкаОкругление",Контекст);
КонецПроцедуры // ПроцентОкруглениеТЧ()

//====================================================================== //--- УМК Сандомирский В.Ю. (28.11.14)
Процедура ОткрытьЗаказ(ФлагПросмотра)	
	Если ПустоеЗначение(ДокументОснование) <>  1 Тогда
		ТекДокументОснование = СоздатьОбъект("Документ");
		ТекДокументОснование.НайтиДокумент(ДокументОснование);
		ОткрытьФорму(ТекДокументОснование.ТекущийДокумент(),,ФлагПросмотра); //--- 1 = просмотр 0 = редактирование
	КонецЕсли; 
КонецПроцедуры // ОткрытьЗаказ

//====================================================================== //--- УМК Сандомирский В.Ю. (09.02.15) бывает что заказ уже распечатан но потом в него внесли еще -- т.е. был дозаказ
Функция БылДозаказ()
	Если ДокументОснование.Вид() = "УМК_ЗаказКлиента" Тогда
		Если ДокументОснование.Итог("фБылНапечатан") > 0  Тогда
			Если ДокументОснование.КоличествоСтрок() <> ДокументОснование.Итог("фБылНапечатан") Тогда
				Возврат "Был дозаказ";
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
КонецФункции // БылДозаказ()

//====================================================================== //--- УМК Сандомирский В.Ю. (25.03.15)
//====================================================================== //--- УМК Сандомирский В.Ю. (10.04.15)
Процедура ОткрытьРНРодитель(ФлагПросмотра)	
	Если ПустоеЗначение(УМК_РН_Родитель) <>  1 Тогда
		ТекДокументОснование = СоздатьОбъект("Документ");
		ТекДокументОснование.НайтиДокумент(УМК_РН_Родитель);
		ОткрытьФорму(ТекДокументОснование.ТекущийДокумент(),,ФлагПросмотра); //--- 1 = просмотр 0 = редактирование
	КонецЕсли; 
КонецПроцедуры // ОткрытьЗаказ

//====================================================================== //--- УМК Сандомирский В.Ю. (10.04.15)
Процедура ОткрытьРНДочерняя(ФлагПросмотра)	
	Если ПустоеЗначение(УМК_РН_Дочерняя) <>  1 Тогда
		ТекДокументОснование = СоздатьОбъект("Документ");
		ТекДокументОснование.НайтиДокумент(УМК_РН_Дочерняя);
		ОткрытьФорму(ТекДокументОснование.ТекущийДокумент(),,ФлагПросмотра); //--- 1 = просмотр 0 = редактирование
	КонецЕсли; 
КонецПроцедуры // ОткрытьЗаказ

//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	Если фДозаказ = 1 Тогда
		ТекстПлана = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])()()(BRUSH["+глПолучитьЦвет(255,191,193)+"])";
	Иначе
		ТекстПлана = "(BRUSH_S[" + глПолучитьЦвет(255,255,198) + "])"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	КонецЕсли;
	
	Возврат  ТекстПлана;	
КонецФункции

//======================================================================
Процедура ДобавитьСтрокуЗ(Товар, ВидУп)
	НоваяСтрока();
	ТМЦ = Товар;	
	ИзмТМЦ();
	ВидУпаковки = ВидУп;
	ИзмВидУпаковки();
	Кво = 1;
	ИзмКол();
КонецПроцедуры // гл

//======================================================================
Процедура ЗаполнитьДляЭкспорта()
	Если КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
			УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	СписокВыбТМЦ = глПрочитатьФильтр("" + КаталогИБ() + "filter_set1.txt");	
	СписокВыбТМЦИсключение = глПрочитатьФильтр("" + КаталогИБ() + "filter_set2.txt");
		
	СпрУМК_РазрешенныеВидыУпаковкиТМЦ = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
	
	СписУпаковок = СоздатьОбъект("СписокЗначений");	
	
	ТекстЗапроса = "";
	Запрос = глПолучитьЗапросПоТоварамДляЗаказа(СписокВыбТМЦ, СписокВыбТМЦИсключение, ТекстЗапроса);
	ДатаЗаказа = ДатаДок;
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	Пока Запрос.Группировка(1) = 1 Цикл			
		Если ПустоеЗначение(Запрос.Товар) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Запрос.Товар.Уровень() = 1 Тогда
			Продолжить;	
		КонецЕсли;			
		
		Если Запрос.Товар.ЭтоГруппа() = 0 Тогда
			СпрУМК_РазрешенныеВидыУпаковкиТМЦ.ИспользоватьВладельца(Запрос.Товар.ТекущийЭлемент());
			СпрУМК_РазрешенныеВидыУпаковкиТМЦ.ВыбратьЭлементы();
			Пока СпрУМК_РазрешенныеВидыУпаковкиТМЦ.ПолучитьЭлемент() = 1 Цикл
				ДобавитьСтрокуЗ(Запрос.Товар, СпрУМК_РазрешенныеВидыУпаковкиТМЦ.ВидУпаковки);
			КонецЦикла;
			Если Запрос.Товар.НетБезУпаковки = 0 Тогда
				ДобавитьСтрокуЗ(Запрос.Товар, НетУп);
			КонецЕсли;				
		КонецЕсли;				
	КонецЦикла;		
КонецПроцедуры // ЗаполнитьДляЭкспорта()

//======================================================================
Процедура СортГ()
	глСортироватьТабличнуюЧасть(Контекст);
КонецПроцедуры // СортГ()

//======================================================================
Процедура СортХ()
	ТаблТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблТМЦ);
	
	глСортироватьТаблицуПоСкладу(ТаблТМЦ, Контекст);
КонецПроцедуры // СорТХ

//======================================================================
Функция ЯщикиПовидам()
	СтрЯщики = "";
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	ТЗ.Свернуть("Тара", "КвоТары");
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗ.Тара) = 0 Тогда
			Если ТЗ.Тара.Родитель.Код = "32337" Тогда
				СтрЯщики = СтрЯщики + ?(СтрЯщики = "", "", "; ") + Строка(ТЗ.Тара) + " - " + Строка(ТЗ.КвоТары);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрЯщики;
КонецФункции // ЯщикиПовидам

//======================================================================
Функция СуммаБезСкидки()
	Возврат Окр(ЦенаБезСкидки * Кво, 2);
КонецФункции // СуммаБезСкидки

//======================================================================
Функция Разница()
	Возврат Окр(ЦенаСНДС * Кво, 2) - Окр(ЦенаБезСкидки * Кво, 2);
КонецФункции // СуммаБезСкидки

//======================================================================
Функция ВывестиИтогоБезСкидки()
	СуммаБезСкд = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		СуммаБезСкд = СуммаБезСкд + ?(ЦенаБезСкидки = ЦенаСНДС, СуммаСНДС, ЦенаБезСкидки * Кво);
	КонецЦикла;
	
	Разница = Окр(СуммаБезСкд - Итог("СуммаСНДС"), 3);
	Возврат "Без скидки: "+ Формат(СуммаБезСкд, "Ч12.2") + ", разн.: " +  Формат(Разница, "Ч12.2")
КонецФункции // 

//======================================================================
Процедура ИзмЦена(Зн)
	глВыч_суммы_накл(Контекст, Зн);
	Если ПустоеЗначение(УстановкаСкидокТМЦ) = 1 Тогда
		ЦенаБезСкидки = ЦенаСНДС;
	КонецЕсли;
КонецПроцедуры // ИзмЦена()

//======================================================================
Функция ВернутьОкруглениеФ1()
	ОкФ1 = Контрагент.Ф1Округление.Получить(ДатаДок);
	Возврат ?(ОкФ1 = 0, "", "Окр. как в Ф1");
КонецФункции // 

Процедура ИзмПоказатьНаборы()
	Форма.Набор.Видимость(фПоказатьНаборы);
КонецПроцедуры

Процедура ИзмПоказатьEDI() 
	Форма.ШКEDI.Видимость(фПоказатьEDI);
	Форма.ККEDI.Видимость(фПоказатьEDI);
	Форма.АртикулEDI.Видимость(фПоказатьEDI);	
КонецПроцедуры

//email - отправка печатной фоомы документа
Процедура ПечатьНаEmail()
	
	Варианты= СоздатьОбъект("СписокЗначений");
	Варианты.ДобавитьЗначение("&Печать");
	Варианты.ДобавитьЗначение("&Печать_А4");
	Варианты.ДобавитьЗначение("&Ком_Печать");
	Результат = 0;
	Если Варианты.ВыбратьЗначение(,,Результат,,1)=1 Тогда
		Если Результат = 1 Тогда
			Печать(,,,1);
		ИначеЕсли Результат = 2 Тогда
			Печать(, "_А4",,1);
		ИначеЕсли Результат = 3 Тогда
			КомПечать(1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |Экспорт_dbf,
    |ТоварныйСостав,
	|ОбновлениеЦен,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");
ЭтоНовый = 0;
ТЗКонтроля = СоздатьОбъект("ТаблицаЗначений");
мВычитатьВесУпаковки = ?(ПустоеЗначение(Константа.НеВычитатьВесУпаковкиВРН)=1,1,?(ДатаДок>=Константа.НеВычитатьВесУпаковкиВРН,0,1));