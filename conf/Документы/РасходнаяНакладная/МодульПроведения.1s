Перем ПересчКво, ПервыйДок, ПоЗаказу;
Перем Товар;
Перем СчетНДС,СубконтоНДС1,СубконтоНДС2; // для бартера
Перем ВремРег;       
Перем спОтбор;
Перем НДСПервоеСобытие, НДСВтороеСобытие, ВзаиморасчетыГрн; // для исправления ошибок при округлениях
Перем АвансВал,АвансОсн; // для погашения аванса в валюте
Перем ТЗСписываемыеПриПродаже;
Перем СписДляУстановкиЦен, ГруппаДляУстЦ;
Перем ТЗДляПер, ДатаНачалаФормированияПеремещенийПоМаркировке;
Перем ТЗПер, СписСписаний;
Перем СписыватьМатериалУпаковки; // + umk
Перем СписыватьМатериалУпаковкиИсключения; // + umk
Перем КассовыйМетодБонусы; // + umk
Перем СписыватьСкидкиНаВесВУчете; // + umk
Перем ТЗСкидкиНаВес;// + umk

Перем СписТМЦ; //--- УМК Сандомирский В.Ю, (09.10.14) 

//======================================================================
Процедура ДополнитьСписываемыеПроПродажеМатериаламиУпаковки(Владелец, ИмяСпр, ТМЦ_ВУ, ФормаУпаковки)
	СпрМатериалыУпаковки = СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковок" + ИмяСпр);
	СпрМатериалыУпаковки.ИспользоватьВладельца(Владелец);
	СпрМатериалыУпаковки.ВыбратьЭлементы();
	Пока СпрМатериалыУпаковки.ПолучитьЭлемент() = 1 Цикл
		
		Если СпрМатериалыУпаковки.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СпрМатериалыУпаковки.Неактивен.Получить(ДатаДок) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Материал = СпрМатериалыУпаковки.Материал.Получить(ДатаДок);
		Если ПустоеЗначение(Материал) = 0 Тогда
			Если (СписыватьМатериалУпаковкиИсключения = 1) И (Материал.ИсключитьИзСписанияВПеремещении = 0) Тогда
				Продолжить; // Если списывать только исключения, тогда добавляем только с признаком  "ИсключитьИзСписанияВПеремещении"
			КонецЕсли;
			ПозСт = 0;
			КвоДляТаблицы = 0;
			Если ИмяСпр = "Форм" Тогда
				КвоДляТаблицы = (СпрМатериалыУпаковки.НормаСписания.Получить(ДатаДок)  / Владелец.Кратность / ТМЦ_ВУ.ВесУпаковки.Получить(ДатаДок)) * Кво;
			Иначе
				КоличествоСписать = СпрМатериалыУпаковки.НормаСписания.Получить(ДатаДок)*Ед.Коэффициент; //На базовую ед
				КвоДляТаблицы = КоличествоСписать * Кво; //Приведем к базовой ед. 
			КонецЕсли;
			Если КвоДляТаблицы <> 0 Тогда
				ТЗСписываемыеПриПродаже.НоваяСтрока();
				ТЗСписываемыеПриПродаже.ТМЦ 		= Материал;				//--- УМК Сандомирский В.Ю. (26.03.15)
				ТЗСписываемыеПриПродаже.ДляТМЦ		= ТМЦ;
				ТЗСписываемыеПриПродаже.ФормаУпаковки = ФормаУпаковки;
				ТЗСписываемыеПриПродаже.ДляУпаковки	= ВидУпаковки;				
				ТЗСписываемыеПриПродаже.Количество = КвоДляТаблицы;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // гл

// ===========================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	//глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(Контрагент,"Контрагент");
	глВыбранЛи(СчетКонтрагента,"Счет контрагента");
	Если глВсеВыбрано = 1 Тогда
		Если глПроверитьСчетВзаиморасчетов(СчетКонтрагента) = 0 Тогда
			глКомментарий("Счет контрагента ("+СчетКонтрагента+") не является счетом учета взаиморасчетов!",1,,"!");
			глВсеВыбрано = 0;
		ИначеЕсли (Валюта = Гривня)
		И (СчетКонтрагента.Валютный = 1) Тогда
			глКомментарий("Нельзя выбирать валютный счет, если валюта документа "+Гривня+" !",1,,"!");
			глВсеВыбрано = 0;       
		ИначеЕсли (Валюта <> Гривня)
		И (СчетКонтрагента.Валютный = 0) Тогда
			глКомментарий("Нельзя выбирать не валютный счет, если валюта документа "+Валюта+" !",1,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;	
	КонецЕсли;	
	глВыбранЛи(МестоХранения,"Место хранения");
	глВыбранЛи(Валюта,"Валюта");
	глВыбранЛи(ВидТорговли,"Вид торговли");
	глВыбранЛи(ВидТары,"Вид тары");
	глВыбранЛи(СубконтоВалДох,"Субконто валовых доходов");
	глВыбранЛи(Подразделение,"Подразделение сбыта");
	глВыбранЛи(ВидНДС,"Вид НДС");
	глВсеВыбрано = ?(глВсеВыбрано = 0, 0, глПроверкаДублейСтрок(Контекст));
	Если Валюта <> Гривня Тогда
		Если ВидТорговли <> Перечисление.ВидыТорговли.Предоплата Тогда
			глКомментарий("Продавать за валюту можно только на условиях предоплаты!",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;               		
		Если ВидНДС = ОсновнаяСтавкаНДС Тогда
			// это явная ошибка, запрещаем проведение 
			глКомментарий("При продаже за валюту нельзя указывать НДС!",0,,"!");
			глВсеВыбрано = 0;
		ИначеЕсли ВидНДС <> ЛьготнаяСтавкаНДС Тогда
			// просто предупредим, но жестко не запрещаем
			глКомментарий("Отгрузка за валюту вероятно должна проходить по ставке НДС """+ЛьготнаяСтавкаНДС+"""!",2)
		КонецЕсли;	
	КонецЕсли;    
	Если МестоХранения.ВидСклада = Розничный Тогда
		глКомментарий("Накладная предназначена для отгрузки ТМЦ с ОПТОВОГО склада, а не РОЗНИЧНОГО (магазина)!",0,,"!");
		глКомментарий("Проверьте параметры склада!",2);
		глВсеВыбрано = 0;
	КонецЕсли;
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		глВыбранЛи(Касса,"Касса");
	КонецЕсли;
	глПроверкаНДСВДокументе(Контекст, Итог("СуммаБезНДС"), Итог("СуммаСНДС"), Итог("НДС"));
	
	Если Контрагент.ПроверятьВодителя.Получить(ДатаДок) = 1 Тогда
		ТолькоТара = 1;
		Если ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Если ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара Тогда
					ТолькоТара = 0;						    
				КонецЕсли;
			КонецЦикла;
		Иначе
			ТолькоТара = 0;
		КонецЕсли;
		Если ТолькоТара = 1 Тогда
			глВыбранЛи(Водитель, "Водитель");
		КонецЕсли;	
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(ТМЦ,"ТМЦ",НомерСтроки);
	глВыбранЛи(ТМЦ.ВидДеятельности,"Вид деятельности в карточке ТМЦ",НомерСтроки);  
	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,ТМЦ,НомерСтроки,1)=Да, глВсеВыбрано, 0);
	ЕстьКалькулируемыеУслуги = 0;
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		Если глПолучитьНормы(ТМЦ,,1,ДатаДок,ПоЗаказу,,1)=1 Тогда // калькулируемая услуга
			ЕстьКалькулируемыеУслуги = 1;
			Если глВсеВыбрано = 1 Тогда
				Если (ТМЦ.ВидДеятельности.ПозаказноеПроизводство = Да) И (ПустоеЗначение(ПоЗаказу) = 1) Тогда
					глКомментарий("В строке "+НомерСтроки+" выбрана услуга, в карточке которой указан вид деятельности с позаказным производством!",0,,"!");
					глВсеВыбрано = 0;                         
				ИначеЕсли (ТМЦ.ВидДеятельности.ПозаказноеПроизводство = Нет) И (ПустоеЗначение(ПоЗаказу) = 0) Тогда
					глКомментарий("В строке "+НомерСтроки+" выбрана услуга, в карточке которой указан вид деятельности с непозаказным производством!",0,,"!");
					глВсеВыбрано = 0;                         
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ЕстьКалькулируемыеУслуги = 1 Тогда
		глВыбранЛи(ПодразделениеПроизв,"Подразделение производства");
		глПроверитьТипПодразделения(ПодразделениеПроизв,"подразделения производства");
	КонецЕсли;	
	
	// проверим цены //--- УМК Сандомирский В.Ю, --- не даем проводить накладную с нулевой ценой (28.04.14)
	Если ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара Тогда
		ЦенаДляПроверки = глПолучитьЦенуВУП(Контекст, КатегорияЦен, ДатаДок, Валюта, Дата_курса, ТМЦ);
		Если ?(ЦенаБезСкидки = 0, ЦенаСНДС, ЦенаБезСкидки) = ЦенаДляПроверки Тогда
			Если НазваниеНабораПрав() = "Заказ" Тогда			
				глВсеВыбрано = 0;			
			КонецЕсли;				
		КонецЕсли;
	КонецЕсли;
	
	Возврат глВсеВыбрано;
КонецФункции

//======================================================================
Функция  УМК_ПроверкаСтроки()	
	глВсеВыбрано = 1;
	
	//// проверим цены //--- УМК Сандомирский В.Ю, --- не даем проводить накладную с нулевой ценой (28.04.14)
	//Если НазваниеНабораПрав() = "Заказ" Тогда			
	//	Если ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара Тогда
	//		ЦенаДляПроверки = глПолучитьЦенуВУП(Контекст, КатегорияЦен, ДатаДок, Валюта, Дата_курса, ТМЦ);
	//		Если ЦенаСНДС = ЦенаДляПроверки Тогда			
	//			Сообщить("В строке: " + Строка(НомерСтроки) + " указана нулевая цена");
	//			глВсеВыбрано = 0;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	
	Если глВсеВыбрано = 1 Тогда
		Если ТМЦ.ПринадлежитГруппе(ГруппаДляУстЦ) = 1 Тогда
			СписДляУстановкиЦен.НоваяСтрока();
			СписДляУстановкиЦен.ТМЦ = ТМЦ;
			СписДляУстановкиЦен.Ед = Ед;
			СписДляУстановкиЦен.Цена = ЦенаСНДС;
		КонецЕсли;
	КонецЕсли;
	
	глПроверитьОграниченияНаОтгрузкуПоКонтрагенту(Контекст);
	
	Возврат глВсеВыбрано;	
КонецФункции // УМК_ПроверкаСтроки

// ===============================
Процедура РассчитатьШапку(ЧастичноПровести = 0)
	ТЗДляПер = СоздатьОбъект("ТаблицаЗначений");
	ТЗДляПер.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗДляПер.НоваяКолонка("ТМЦМарк", "Справочник.ТМЦ");
	ТЗДляПер.НоваяКолонка("ВидУпаковки_", "Справочник.ВидыУпаковки"); // + umk
	ТЗДляПер.НоваяКолонка("Кво", "Число", 15, 3);
	
	СуммаГрнСНДС = глПересчет(Итог("СуммаСНДС"),Валюта,ДатаДок,Гривня,ДатаДок);
	// определяем заказ в документе для проводок по услугам
	ПоЗаказу = глПолучитьЗаказ(Договор);
	//ПоЗаказу = глПолучитьЗаказ(ПолучитьПустоеЗначение("Документ.Договор"));
	// если выбран договор, проводим по нему, иначе по пустому договору
	Если ПустоеЗначение(Договор) = 1 Тогда
		ПервыйДок = ПолучитьПустоеЗначение("Документ.Договор");
	ИначеЕсли Найти("Договор,Заказ",Договор.Вид()) <> 0 Тогда
		ПервыйДок = Договор;
	Иначе
		ПервыйДок = ПолучитьПустоеЗначение("Документ");
	КонецЕсли;
	
	ПервыйДок = ?(Контрагент.УчетВРазрезеДоговоров.Получить(ДатаДок)= 1,Договор, Контрагент.БазДоговор); //  + umk
		
	Если (Константа.НДСпоВходящимНН = Да) и (Валюта = Гривня) Тогда
		// проводку по налоговому кредиту сделаем в
		// документе ЗаписьКнигиПриобретения
		СчетНДС = СчетПоКоду("64.4.2");
		СубконтоНДС1 = Контрагент;
		СубконтоНДС2 = ПервыйДок;
	Иначе
		// сразу налоговый кредит
		СчетНДС = СчетПоКоду("64.1.5");
		СубконтоНДС1 = ВидНДС;
		СубконтоНДС2 = 0;
	КонецЕсли;
	// взаиморасчеты
	ФлагОтгрузки = 1;
	ЗнакОплаты = -1; 
	// партии
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета = СоздатьОбъект("СписокЗначений");
	ВремРег = СоздатьОбъект("Регистры");
	
	СписТМЦ = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписТМЦ, "ТМЦ");
	
	ТЗСписываемыеПриПродаже.ВыбратьСтроки();
	Пока ТЗСписываемыеПриПродаже.ПолучитьСтроку() = 1 Цикл
		СписТМЦ.ДобавитьЗначение(ТЗСписываемыеПриПродаже.ТМЦ);
		спСчета.ДобавитьЗначение(ТЗСписываемыеПриПродаже.ТМЦ.Счет);
	КонецЦикла;
	
	спОтбор.Установить("Товар", СписТМЦ);
	
	Если ПустоеЗначение(ЧастичноПровести) = 1 Тогда
		// взаиморасчеты
		// при частичном проведении регистры взаиморасчетов и партий не понадобятся
		глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма, ЗнакОплаты, Контрагент, ПервыйДок, Валюта, 1);
		Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда    
			глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,Фирма,-ЗнакОплаты, Контрагент, ПервыйДок, Валюта, 1);
		КонецЕсли;	
		// партии
		// сформируем список счетов для отбора	
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если спСчета.НайтиЗначение(ТМЦ.Счет) = 0 Тогда
				спСчета.ДобавитьЗначение(ТМЦ.Счет);
			КонецЕсли;	
		КонецЦикла;	
		спОтбор.Установить("Счет",спСчета);
		Если глПартионныйУчетПоСкладам = Да Тогда
			спОтбор.Установить("МестоХранения", МестоХранения);
		КонецЕсли;
		Если Договор.Вид()="Заказ" Тогда
			спОтбор.Установить("ПрихДокумент",Договор);
		КонецЕсли;
		глРассчитатьОстаткиПартий(Контекст, ВремРег, Фирма, спОтбор, 1);		
	КонецЕсли;
	спОтбор.Установить("МестоХранения",);
	
	// фильтр по складу нужен только для партий
	глРассчитатьОстаткиИРезервы(Контекст, ВремРег, спОтбор,1,1,,,1);
	Если глПартионныйУчетПоСкладам = Да Тогда
		спОтбор.Установить("МестоХранения", МестоХранения);
	КонецЕсли;
	
	// сформируем таблицу того, что нужно допереместить, потому что его не хватает.
	Если ДатаДок >= ДатаНачалаФормированияПеремещенийПоМаркировке Тогда
		// нужно будет сформировать перемещения на продукцию с такой же маркировкой
		ТОстатков = СоздатьОбъект("ТаблицаЗначений"); 
		ВремРег.Остатки.ВыгрузитьИтоги(ТОстатков, 1);
		ТОстатков.Свернуть("ТМЦ", "ОстатокТовара");
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Стр = 0;
			Если ТЗПер.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 0 Тогда
				ОдинаковаяМаркировка = ТМЦ.ОдинаковаяПрРазныеМаркИ.Получить(ДатаДок); 				
				Если ПустоеЗначение(ОдинаковаяМаркировка) = 0 Тогда
					Если ТМЦ.НеФормироватьПеремещениеИзРН.Получить(ДатаДок) = 0 Тогда
						Стр = 0;
						КвоНеХватает = 0;
						Если ТОстатков.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 0 Тогда
							КвоНеХватает = ?(СписыватьСкидкиНаВесВУчете = 1 ,кол,Кво)* Коэффициент;
						Иначе
							КвоНеХватает = Макс(0, ?(СписыватьСкидкиНаВесВУчете = 1 ,кол,Кво) * Коэффициент - ТОстатков.ПолучитьЗначение(Стр, "ОстатокТовара"));
						КонецЕсли;
						Если КвоНеХватает > 0 Тогда
							ТЗДляПер.НоваяСтрока();
							ТЗДляПер.ТМЦ = ТМЦ;
							ТЗДляПер.ТМЦМарк = ОдинаковаяМаркировка;
							ТЗДляПер.ВидУпаковки_ = ВидУпаковки; // + umk
							ТЗДляПер.Кво = КвоНеХватает;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

// возвращает код операции для регистров Партии и Обороты
// ===========================
Функция ПолучитьКодОперации(СчетТМЦ=0)
	
	Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара Тогда
		Если ВидТары = Перечисление.ВидыТары.Покупная Тогда
			Возврат Продажа;
		ИначеЕсли ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			Возврат ПередачаТарыЗалоговойПокупателю;
		Иначе // Возвратная тара
			Возврат ПередачаТарыВозвратнойПокупателю;
		КонецЕсли;
	ИначеЕсли ПустоеЗначение(СчетТМЦ) = 0 Тогда
		Если СчетТМЦ.Забалансовый = 0 Тогда
			Возврат Продажа;
		Иначе	
			глКомментарий("Не определился код операции для ТМЦ "+ТМЦ+".",0,,"!");
			Возврат 0;
		КонецЕсли;	
	Иначе	
		Возврат Продажа;						
	КонецЕсли;
КонецФункции

// формирует проводки по списанию ТМЦ
// ===============================
Процедура ПроводкиТовар(СписываемыйТМЦ,СчетП,СчетПТары,СписываемыйОстаток,СписываемаяСтоимость,ПоставкаП,ПрихДокументП, СписаниеСкидок=0)
	Если (ВидТары = Перечисление.ВидыТары.Залоговая)
	И (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
		СубконтоДебетТары1 = ?(СчетПТары=СчетПоКоду("2843"),Контрагент,МестоХранения);
		СубконтоКредитТары1 = ?(СчетП=СчетПоКоду("2843"),Контрагент,МестоХранения);
		// проводки для тары
		глПроводка(Контекст,СчетПТары,СчетП,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток, СубконтоДебетТары1,СписываемыйТМЦ,ПоставкаП,
		СубконтоКредитТары1,СписываемыйТМЦ,ПоставкаП, ,,"НК",1,0);
	Иначе	
		// проводки для обычного ТМЦ
		СчРеал = глСчетРеализации(СписываемыйТМЦ);
		// проводки по реализации ...
		Если СписываемыйТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			// услуг
			глПроводка(Контекст,СчРеал,СчетП,СписываемаяСтоимость,"Реализация: услуги",СписываемыйОстаток,ТМЦ.ВидДеятельности,ПодразделениеПроизв,,
			ТМЦ.ВидДеятельности,ПодразделениеПроизв,, ,,"ОУ",1,0);
		Иначе	    
			// обычных ТМЦ 
			Если ВидТорговли = Перечисление.ВидыТорговли.Давал Тогда
				глПроводка(Контекст,"2093",СчетП,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток,Контрагент,ТМЦ,,
				МестоХранения,СписываемыйТМЦ,ПоставкаП, ,,"НК",1,0);				
			Иначе
				Если ((СписываемыйТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция) Или (СписываемыйТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Товар) 
				Или (ИспользоватьСчетаРасходов = Класс9)) И (СписаниеСкидок=0) Тогда
					глПроводка(Контекст,СчРеал,СчетП,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток,СписываемыйТМЦ.ВидДеятельности,Подразделение,,
					МестоХранения,СписываемыйТМЦ,ПоставкаП, ,,"НК",1,0);
				ИначеЕсли СписаниеСкидок = 1 Тогда// + umk
                    глПроводкаПоЗатратам(Контекст,СчетЗатратСкидкиНаВес,СчетП,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток, СписываемыйТМЦ.ВидДеятельности,Подразделение,ВидЗатратСкидкиНаВес,
					МестоХранения,СписываемыйТМЦ,ПоставкаП, ,, "НК",1,0);				
				Иначе
					глПроводкаПоЗатратам(Контекст,СчРеал,СчетП,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток, СписываемыйТМЦ.ВидДеятельности,Подразделение,Константа.ВидЗатратСебестРеалПроизвЗапасов,
					МестоХранения,СписываемыйТМЦ,ПоставкаП, ,, "НК",1,0);
				КонецЕсли;
				// для возвратной тары сделаем проводку по забалансовому счету
				Если (ВидТары = Перечисление.ВидыТары.Возвратная)
				И (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
					глПроводка(Контекст,СчетПТары,,СписываемаяСтоимость,"Себестоимость",СписываемыйОстаток, Контрагент,СписываемыйТМЦ,,
					,,, ,,"НК",1,0);
				КонецЕсли;				
			КонецЕсли;
		КонецЕсли;	
	Конецесли;
КонецПроцедуры

// Наименование: СформироватьДвиженияПартии
// Назначение: рассчитать необходимеы параметры и сформировать движения по регистрам 
// Партии и Обороты. Сформировать проводки.
//		В процессе обработки в процедуре изменятся следующие пареметры:
//															ОсталосьСписать											
//															ОсталосьСуммаСНДСПоСтроке											
//															ОсталосьСуммаБезНДСПоСтроке											
// Параметры: 
// 			тбОстатки - таблица остатков, при списании кол-ва большего, чем есть на складе, этот параметр пустой
//			тбПартии - таблица партий, при списании кол-ва большего, чем есть на складе, этот параметр пустой
//			ОсталосьСписать - количество ТМЦ, которое необходимо списать
// 			ВсегоСписатьПоСтроке - количество ТМЦ, указанное в строке документа в базовых единица
//			ВсегоСуммаСНДСПоСтроке - сумма с НДС указанная в строке документа, пересчитанная по курсу документа в гривни
//			ВсегоСуммаБезНДСПоСтроке - сумма без НДС указанная в строке документа, пересчитанная по курсу документа в гривни
// 			ОсталосьСуммаСНДСПоСтроке - сумма с НДС, которую необходимо списать
//			ОсталосьСуммаБезНДСПоСтроке - сумма без НДС, которую необходимо списать
//			ПоставщикП - поставщик, для проведения по регистрам
//			ПоставкаП - документ поставки, для проведения по регистрам
//			ПрихДокументП - приходный документ, для проведения по регситрам
// ===============================
Функция СформироватьДвиженияПартии(тбОстатки,тбПартии,ОсталосьСписать,ВсегоСписатьПоСтроке,ВсегоСуммаСНДСПоСтроке,
	ВсегоСуммаБезНДСПоСтроке,ОсталосьСуммаСНДСПоСтроке,ОсталосьСуммаБезНДСПоСтроке,ПоставщикП,ПоставкаП,ПрихДокументП, Признак, СписываемыйДопОстаток,
	СписываемаяСуммаУпаковки, ФлагОборота = 1, Товар = "", ФирмаПрихода = "", СкладПрихода = "", ФормаУпаковки = "", ССЦенаУпаковки = 0, 
	КодОперации = 0, СписаниеСкидок = 0)
	
	Если ПустоеЗначение(тбОстатки) = 1 Тогда
		ОстатокТовараПоПартии = 0;
		// если надо списать больше чем есть на складе
		СписываемыйОстатокТовара = ОсталосьСписать;	
		// рассчитаем коэфициент списания не по остатку партии, а по остатку по строке документа
		КоэфСписания = СписываемыйОстатокТовара / ВсегоСписатьПоСтроке;
		СписываемаяСтоимость = ВсегоСуммаСНДСПоСтроке * КоэфСписания;
		СписываемаяПродСтоимость = 0;
		// определим сумму реализации текущей списываемой партии
		СуммаРеализацииБезНДС = ОсталосьСуммаБезНДСПоСтроке;
		СуммаРеализацииСНДС = ОсталосьСуммаСНДСПоСтроке;
		СчетП = ?(ПустоеЗначение(Товар) = 1, ТМЦ.Счет, Товар.Счет);
	Иначе	                                          
		ОстатокТовараПоПартии = тбОстатки.ОстатокТовара;
		// нормальное списание
		СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовараПоПартии);
		КоэфСписания = СписываемыйОстатокТовара / ОстатокТовараПоПартии;
		
		КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписатьПоСтроке;
		// определим себестоимость текущей списываемой партии используя коэфициент списания 
		СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
		СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
		Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
			// определим себестоимость текущей списываемой партии используя 
			// если списывается вся сумма указаная в строке документа
			СуммаРеализацииСНДС = ОсталосьСуммаСНДСПоСтроке;
			СуммаРеализацииБезНДС = ОсталосьСуммаБезНДСПоСтроке;
		Иначе                                                
			// определим себестоимость текущей списываемой партии используя 
			// если списывется часть суммы указаной в строке документа 
			СуммаРеализацииСНДС = Окр(ВсегоСуммаСНДСПоСтроке * КоэфРеализации,2);
			СуммаРеализацииБезНДС = Окр(ВсегоСуммаБезНДСПоСтроке * КоэфРеализации,2);
		КонецЕсли;  
		СчетП = тбПартии.Счет;		
	КонецЕсли;
	
	
	// доход от продажи 
	Доход = СуммаРеализацииСНДС - СписываемаяСтоимость;
	// осталось списать по суммам
	ОсталосьСуммаБезНДСПоСтроке = ОсталосьСуммаБезНДСПоСтроке - СуммаРеализацииБезНДС;
	ОсталосьСуммаСНДСПоСтроке = ОсталосьСуммаСНДСПоСтроке - СуммаРеализацииСНДС;
	КодОперации	= ?(КодОперации=0,ПолучитьКодОперации(СчетП),КодОперации);
	Если КодОперации = 0 Тогда
		глКомментарий("Невозможно определить код операции!",0,,"!");		
		Возврат 0;
	КонецЕсли;	
	МестоХраненияП = ?(глПартионныйУчетПоСкладам = Да,МестоХранения,0);
	Если ПустоеЗначение(ФирмаПрихода) = 0 Тогда
		СкладПриходаП = ?((глПартионныйУчетПоСкладам = Да) ИЛИ (ФирмаПрихода.ПартионныйУчетПоСкладам = 1), СкладПрихода, 0);
	Иначе
		СкладПриходаП = ?(глПартионныйУчетПоСкладам = Да, СкладПрихода, 0);
	КонецЕсли;
	Если (ВидТары <> Перечисление.ВидыТары.Покупная)
	и (ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
		// залоговая и возвратная тара:
		// списываем с балансового счета
		глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП, 
		ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
		КодОперации,1 ,СуммаРеализацииБезНДС, Доход, , Признак,,ЧерезКого, СписываемыйДопОстаток, ,,,ФормаУпаковки);
		// и приходуем на забалансовый счет
		Если ВидТары = Перечисление.ВидыТары.Залоговая Тогда
			СчетПТары = ГлПолучитьСчетУчетаТМЦ("ТараЗалоговая",ТМЦ);
		Иначе
			СчетПТары = СчетПоКоду("ТВ");
			// для возвратной тары проводки по НДС не делаются
			СуммаРеализацииСНДС = СуммаРеализацииБезНДС;
		КонецЕсли;
		// Параметры проведения для возвратной тары
		МестоХраненияП = Контрагент;
		ПрихДокументП = ТекущийДокумент();
		СписываемаяПродСтоимость = СуммаСНДС;
		глПровестиПартию(Контекст, 1, 0, Фирма, ТМЦ, СчетПТары, МестоХраненияП, ПоставщикП, 
		ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
		КодОперации,0 ,0, 0, Признак,,,ЧерезКого,СписываемыйДопОстаток,,ФирмаПрихода, СкладПриходаП, ФормаУпаковки);
	ИначеЕсли ФлагОборота = 0 Тогда
		глПровестиПартию(Контекст, 0, 0, Фирма, Товар, СчетП, МестоХраненияП, ПоставщикП, 
		ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
		КодОперации, ФлагОборота ,СуммаРеализацииСНДС, Доход, , Признак,,ЧерезКого, СписываемыйДопОстаток,,ФирмаПрихода, СкладПриходаП, ФормаУпаковки);
	Иначе		
		Если ВидТорговли = Перечисление.ВидыТорговли.Давал Тогда
			Доход = 0;
			СуммаРеализацииСНДС = 0;
			КодОперации = ПередачаВДавальческуюПереработку;
			ФлагОборота = 0;
		Иначе
			ФлагОборота = 1;
		КонецЕсли;   
		
		
		//--- УМК Сандомирский В.Ю. (05.03.15) исправление ошибки со списываемыми этикетками
		Если (ПустоеЗначение(ТМЦ) = 1) И (ПустоеЗначение(ТЗСписываемыеПриПродаже.ТМЦ) <> 1) Тогда //--- УМК Сандомирский В.Ю. (05.03.15) исправление ошибки со списываемыми этикетками
			ТМЦПартии 	= ТЗСписываемыеПриПродаже.ТМЦ;
			СчетП 		= ТЗСписываемыеПриПродаже.ТМЦ.Счет;	//--- УМК Сандомирский В.Ю. (14.03.15) 
		Иначе
			ТМЦПартии = ТМЦ;	
		КонецЕсли;
		
		
		глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦПартии, СчетП, МестоХраненияП, ПоставщикП,   				//--- УМК Сандомирский В.Ю. (05.03.15) исправление ошибки со списываемыми этикетками
		ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
		КодОперации, ФлагОборота ,СуммаРеализацииСНДС, Доход, , Признак,,ЧерезКого, СписываемыйДопОстаток,СписываемаяСуммаУпаковки,ФирмаПрихода, СкладПриходаП, ФормаУпаковки, 
		ССЦенаУпаковки * СписываемыйОстатокТовара);
		Если ВидТорговли = Перечисление.ВидыТорговли.Давал Тогда
			//Проведем по оборотам
			КодОперации = ПередачаВДавальческуюПереработку;
			Регистр.Обороты.ПривязыватьСтроку(НомерСтроки);
			Регистр.Обороты.Фирма = Фирма;
			Регистр.Обороты.Счет = "2093";
			Регистр.Обороты.ТМЦ = ТМЦПартии;
			Регистр.Обороты.Поставщик = ПоставщикП;
			Регистр.Обороты.Покупатель = Контрагент;
			Регистр.Обороты.КаналПродаж = Контрагент.КаналПродаж;
			Регистр.Обороты.ВидДеятельности = ТМЦПартии.ВидДеятельности;
			Регистр.Обороты.КодОперации = КодОперации;
			Регистр.Обороты.Партия		 = ПоставкаП;
			Регистр.Обороты.Признак	 = Признак;
			Регистр.Обороты.ВидУпаковки = НетУп;
			Регистр.Обороты.ПриходКво = - СписываемыйОстатокТовара;
			Регистр.Обороты.ПриходСум = - СписываемаяСтоимость;
			Регистр.Обороты.РасходКво = 0;
			Регистр.Обороты.РасходСум = 0;
			Регистр.Обороты.ДвижениеВыполнить();			
			глПровестиПартию(Контекст, 1, 0, Фирма, ТМЦПартии, СчетПоКоду("2093"), Контрагент, ПоставщикП, 
			ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
			КодОперации, 0,0, 0, , Признак,,ЧерезКого,СписываемыйДопОстаток,,,,ФормаУпаковки);
		КонецЕсли;			
	КонецЕсли; 
	
	//--- УМК Сандомирский В.Ю. (05.03.15) исправление ошибки со списываемыми этикетками
	Если (ПустоеЗначение(ТМЦ) = 1) И (ПустоеЗначение(ТЗСписываемыеПриПродаже.ТМЦ) <> 1) Тогда //--- УМК Сандомирский В.Ю. (05.03.15) исправление ошибки со списываемыми этикетками
		ТМЦПартии 	= ТЗСписываемыеПриПродаже.ТМЦ;
		СчетП 		= ТЗСписываемыеПриПродаже.ТМЦ.Счет;	//--- УМК Сандомирский В.Ю. (14.03.15) 
	Иначе
		ТМЦПартии = ТМЦ;	
	КонецЕсли;
	
	ПроводкиТовар(?(ПустоеЗначение(Товар) = 1, ТМЦПартии, Товар),СчетП,СчетПТары,СписываемыйОстатокТовара,
	                СписываемаяСтоимость,ПоставкаП,ПрихДокументП, СписаниеСкидок);		//--- УМК Сандомирский В.Ю. (05.03.15) исправление ошибки со списываемыми этикетками												
	
	Если ПустоеЗначение(тбПартии) = 0 Тогда
		глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость);
	КонецЕсли;
	ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
	Возврат 1;
КонецФункции

// ===============================
Процедура ДвижениеНормативныеЗатраты(СтатьяКалькуляции, Материал, СписываемоеКво, СписываемаяСумма)
	Регистр.НормативныеЗатраты.ПривязыватьСтроку(НомерСтроки);
	Регистр.НормативныеЗатраты.Фирма = Фирма;
	Регистр.НормативныеЗатраты.ВидДеятельности = ТМЦ.ВидДеятельности;
	Регистр.НормативныеЗатраты.Подразделение = ПодразделениеПроизв;
	Регистр.НормативныеЗатраты.Продукция = ТМЦ;
	Регистр.НормативныеЗатраты.СтатьяКалькуляции = СтатьяКалькуляции;
	Регистр.НормативныеЗатраты.Заказ = ПоЗаказу;
	Регистр.НормативныеЗатраты.Материал = Материал;
	Регистр.НормативныеЗатраты.ТипЗатрат = НормыНаВыпуск;
	Регистр.НормативныеЗатраты.Количество = СписываемоеКво;
	Регистр.НормативныеЗатраты.Сумма = СписываемаяСумма; 
	Регистр.НормативныеЗатраты.ДвижениеВыполнить();
КонецПроцедуры

// ===============================
Процедура ДвижениеВыпускПродукции(КвоПродукции,КвоБрака,СуммаПродукции,СуммаДавПродукции,Партия) 
	Регистр.ВыпускПродукции.ПривязыватьСтроку(НомерСтроки);
	Регистр.ВыпускПродукции.Фирма = Фирма;
	Регистр.ВыпускПродукции.ВидДеятельности = ТМЦ.ВидДеятельности;
	Регистр.ВыпускПродукции.Подразделение = ПодразделениеПроизв;
	Регистр.ВыпускПродукции.Заказ = ПоЗаказу;
	Регистр.ВыпускПродукции.Продукция = ТМЦ;
	Регистр.ВыпускПродукции.Партия = Партия; 
	Регистр.ВыпускПродукции.Количество = КвоПродукции;  
	Регистр.ВыпускПродукции.КоличествоБрака = КвоБрака;  
	Регистр.ВыпускПродукции.Сумма = СуммаПродукции; 
	Регистр.ВыпускПродукции.СуммаДав = СуммаДавПродукции; 
	Регистр.ВыпускПродукции.ДвижениеВыполнить();
КонецПроцедуры      

// ===============================
Процедура ДвиженияСтрокаПроизводство(тбНормы,СебестоимостьПродукции)
	
	СебестоимостьПродукции = 0;
	Если ПустоеЗначение(ПоЗаказу) = 0 Тогда
		Партия = ПоЗаказу;
	ИначеЕсли Константа.МетодРасчетаСебестоимостиПроизводственныхЗапасов.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		Партия = ПолучитьПустоеЗначение("Документ");
	Иначе
		Партия = ТекущийДокумент();
	КонецЕсли;
	
	СуммаМатЗатратПоПродукции = 0;	//Сумма материальных затрат по нормам на продукцию
	СуммаНеМатЗатратПоПродукции = 0;//Сумма нематериальных затрат по нормам на продукцию
	СуммаВозврОтходовПоПродукции = 0;//Сумма возвратных отходов по нормам на продукцию
	
	тбНормы.ВыбратьСтроки();
	Пока тбНормы.ПолучитьСтроку() = 1 Цикл
		// показываем нормативные затраты
		ДвижениеНормативныеЗатраты(тбНормы.СтатьяКалькуляции,тбНормы.Материал,тбНормы.Кво * ?(тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.ВозвратныйОтход,-1,1),тбНормы.Сумма);
		
		Если тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.ВозвратныйОтход Тогда
			СуммаВозврОтходовПоПродукции = СуммаВозврОтходовПоПродукции + тбНормы.Сумма;
		ИначеЕсли (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Материал)
		или (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат) Тогда
			СуммаМатЗатратПоПродукции = СуммаМатЗатратПоПродукции + тбНормы.Сумма;
		ИначеЕсли (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.СтатьяКалькуляции) Тогда
			СуммаНеМатЗатратПоПродукции = СуммаНеМатЗатратПоПродукции + тбНормы.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	// Определяем себестоимость заданного количества продукции
	Если Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоПлановойСебестоимости  Тогда
		//Плановую себестоимость берем из справочинка ТМЦ, УчетнаяЦена
		СебестоимостьПродукции = ТМЦ.УчетнаяЦена.Получить(ДатаДок) * Кво;
	ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоНормативнойСебестоимости  Тогда
		//Считаем себестоимость как общую сумму затрат по нормативам
		СебестоимостьПродукции = СуммаМатЗатратПоПродукции + СуммаНеМатЗатратПоПродукции - СуммаВозврОтходовПоПродукции;
	ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоСебестоимостиФактическогоСостава  Тогда
		//Считаем себестоимость как фактические материальные затраты + плановые прочие затраты по нормативам
		СебестоимостьПродукции = СуммаНеМатЗатратПоПродукции - СуммаВозврОтходовПоПродукции;
	ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.БезСебестоимости Тогда
		СебестоимостьПродукции = 0;
	КонецЕсли;
	//Движения по ВЫПУСКУ ПРОДУКЦИИ
	ДвижениеВыпускПродукции(Кво,0,СебестоимостьПродукции,0,Партия);
КонецПроцедуры //ДвиженияСтрокаПроизводство

Процедура ДвиженияПартии_ДопМатериалы(тбПартии, тбОстатки, ТЗСписания, фОшибка, КодОперации = 0, СписаниеСкидок = 0)
	ТЗСписания.ВыбратьСтроки();
	Пока ТЗСписания.ПолучитьСтроку()=1 Цикл
		СписДопКво = 0;
		МетодРасчетаСебестоимости = глПолучитьМетодРасчетаСебестоимости(ТЗСписания.ТМЦ,ДатаДок);
		ВсегоСписать			  = ТЗСписания.Количество;
		
		Если ВсегоСписать = 0 Тогда //--- УМК Сандомирский В.Ю. (07.11.14) был какойто бок при проведении
			Продолжить;
		КонецЕсли;
		
		ОсталосьСписать			  = ВсегоСписать;
		//ВидТМЦ = ТЗСписания.ТМЦ.ВидТМЦ;//"другие оборотные активы";
		//СчетДоходов = "71.2";
		Признак = "";//ТЗСписания.ДляУпаковки;
		
		НС=0;   
		Если тбПартии.НайтиЗначение(ТЗСписания.ТМЦ,НС,"ТМЦ")=1 Тогда
			тбПартии.ПолучитьСтрокуПоНомеру(НС);
		Иначе
			// если такой строки нет, переходим на первую строку таблицы
			тбПартии.ВыбратьСтроки();
			тбПартии.ПолучитьСтроку();
		КонецЕсли;
		// обрабатываем все строки тбПартии с соответсв. номером строки документа
		Пока тбПартии.ТМЦ = ТЗСписания.ТМЦ Цикл
			// берем необходимые параметры партии из тбПартии
			Если тбПартии.ТМЦ.Счет = тбПартии.Счет Тогда
				МестоХраненияП = тбПартии.МестоХранения;
				ПоставщикП = тбПартии.Поставщик;
				ПоставкаП = тбПартии.Поставка;
				ПрихДокументП = тбПартии.ПрихДокумент;
				СчетП = тбПартии.Счет;
				НС =0;                               
				// находим остаток текущей партии в тбОстатки по ключу
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,ТЗСписания.ТМЦ.Код,СчетП),НС,"Ключ")=1 Тогда
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					ОстатокТовара = тбОстатки.ОстатокТовара;
					// если остаток 0, то с текущей партии не списываем
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					// сформируем движения по регистрам и проводки
					Если СформироватьДвиженияПартии(тбОстатки,тбПартии,ОсталосьСписать,ВсегоСписать,0
					,0,0,0,ПоставщикП,ПоставкаП,ПрихДокументП, Признак, СписДопКво,0,0,ТЗСписания.ТМЦ,,,ТЗСписания.ФормаУпаковки,,КодОперации,СписаниеСкидок) = 0 Тогда
						фОшибка = 0;
					Иначе
						СписДопКво = 0;
					КонецЕсли;					
				КонецЕсли;
			КонецЕсли;
			Если ОсталосьСписать = 0 Тогда
				Прервать;
			КонецЕсли;   
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла; 
		Если ОсталосьСписать > 0 Тогда
			глСообщитьОбОтсутствииПартии(0, Фирма, ТЗСписания.ТМЦ, 0);
			Если Константа.РазрешитьОтрицОстатки = Нет Тогда
				фОшибка = 0;
			Иначе				
				глСообщитьОСозданииПартии(ТМЦ, ОсталосьСписать);
				ПрихДокументП = ?(МетодРасчетаСебестоимости<>Перечисление.МетодыРасчетаСебестоимости.ПоСреднему
				,ТекущийДокумент(),0);           
				// сформируем движения по регистрам и проводки
				Если СформироватьДвиженияПартии(,,ОсталосьСписать,ВсегоСписать,,,,,,
				,ПрихДокументП, Признак,СписДопКво,0,0,ТЗСписания.ТМЦ,,,ТЗСписания.ФормаУпаковки,,КодОперации,СписаниеСкидок) = 0 Тогда
					фОшибка = 0;
				КонецЕсли;	
			КонецЕсли; 
		КонецЕсли; // ОсталосьСписать > 0
	КонецЦикла; // строки документа
	// - umk по упаковке
	
КонецПроцедуры

// ===============================
Функция ДвиженияПартии() 
	Перем фОшибка;	// возвращаемое значение
	Перем ИтогСуммаСНДС, ИтогНДС;	// базы распределения сумм
	Если (ВидТорговли = Перечисление.ВидыТорговли.Давал) и (ДатаДок < '01.03.2010') Тогда
		Возврат 1;
	КонецЕсли;
	
	фОшибка = 1;              
	
	глКомментарий("Выполняются движения партий ТМЦ",2);
	Предпочтение = 0;
	тбПартии = 0;
	тбОстатки = 0;
	ИнвСтратегияПредпочтения = 0;
	ИнвСтратегияПродажи = 0;
	ФирмаПрихода = Контрагент.ФирмаПрихода.Получить(ДатаДок);
	СкладПрихода = Контрагент.МестоХранения.Получить(ДатаДок);
	глСформироватьТаблицуПартий(Контекст, ВремРег,Фирма, спОтбор, Предпочтение, 
	тбПартии, тбОстатки, ИнвСтратегияПредпочтения, ИнвСтратегияПродажи);
	
	// инициализация алгоритмов корректого распределения
	глОчиститьКлючОкр("Взаим");
	глОчиститьКлючОкр("НДС");
	глОчиститьКлючОкр("НДСперв");
	// нужно изменить стоимоть ТМЦ в соответствии курсом аванса
	кАванса = ?(ПустоеЗначение(Итог("СуммаБезНДС"))=1,0,АвансВал/Итог("СуммаБезНДС")); // часть аванса в себестоимости
	Если кАванса<>0 Тогда
		КурсАванса = ?(ПустоеЗначение(АвансВал*глКратностьДляВалюты(Валюта,ДатаДок))=1,0,АвансОсн/АвансВал*глКратностьДляВалюты(Валюта,ДатаДок));
	Иначе
		КурсАванса = глКурсДляВалюты(Валюта,ДатаДок);
	КонецЕсли;                           
	// расчитаем базы распределения 
	глОпределитьБазыРаспределения(Контекст, ИтогСуммаСНДС, ИтогНДС);
	ИтогСуммаСНДС		= глПересчет(ИтогСуммаСНДС	* кАванса,		Валюта,КурсАванса,	Гривня,ДатаДок) 
	+ глПересчет(ИтогСуммаСНДС	* (1 - кАванса),Валюта,ДатаДок,		Гривня,ДатаДок);
	ИтогНДС 			= глПересчет(ИтогНДС		* кАванса,		Валюта,КурсАванса,	Гривня,ДатаДок) 
	+ глПересчет(ИтогНДС		* (1 - кАванса),Валюта,ДатаДок,		Гривня,ДатаДок);
	НДСпоВзаиморасчетам	= НДСПервоеСобытие + НДСВтороеСобытие;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		ССЦенаУпаковки = 0;
		Если (ПустоеЗначение(ВидУпаковки) = 0) И (ВидУпаковки <> НетУп) Тогда
			РВУ = глПолучитьРазрешенныйВидУпаковки(ТМЦ, ВидУпаковки);
			Если ПустоеЗначение(РВУ) = 1 Тогда
				Сообщить("Не удалось получить разрешенный вид упаковки: " + Строка(ВидУпаковки) + " для Товара: " + Строка(ТМЦ) + " № строки: " + НомерСтроки, "!!!");
				ССЦенаУпаковки = 0;
			Иначе
				ССЦенаУпаковки = РВУ.Себестоимость.Получить(ДатаДок);
			КонецЕсли;			
		КонецЕсли;
		СписДопКво = ДопКво;  
		Признак = ?(ПустоеЗначение(ВидУпаковки) = 1, НетУп, ВидУпаковки);					//--- Вид упаковки для партии
		МетодРасчетаСебестоимости = глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок);
		ВсегоСписать			  = Кво * Коэффициент;
		ОсталосьСписать			  = ВсегоСписать;
		// Сумму по строке пересчитываем по курсу документа с учетом аванса в гривни 
		ПострСуммаСНДС	= глПересчет(СуммаСНДС 	* кАванса,		Валюта,КурсАванса,	Гривня,ДатаДок) 
		+ глПересчет(СуммаСНДС	* (1 - кАванса),Валюта,ДатаДок,		Гривня,ДатаДок);
		ПострНДС		= глПересчет(НДС 		* кАванса,		Валюта,КурсАванса,	Гривня,ДатаДок) 
		+ глПересчет(НДС		* (1 - кАванса),Валюта,ДатаДок,		Гривня,ДатаДок);
		Если (ВидТары <> Перечисление.ВидыТары.Залоговая) Или (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			// не залоговая тара, округляем с учетом накопленных погрешностей округления
			ПострСуммаСНДС	= глОкрКорр("Взаим", ?(ИтогСуммаСНДС = 0, 0, ВзаиморасчетыГрн * ПострСуммаСНДС / ИтогСуммаСНДС),2);
			ПострНДС		= глОкрКорр("НДС", ?(ИтогНДС = 0, 0, НДСпоВзаиморасчетам * ПострНДС / ИтогНДС),2);
			ПострНДСПерв	= глОкрКорр("НДСперв", ?(НДСпоВзаиморасчетам = 0, 0, НДСПервоеСобытие * ПострНДС / НДСпоВзаиморасчетам),2);
		Иначе
			ПострНДСПерв	= 0;
		КонецЕсли;
		ПострСуммаБезНДС 	= ПострСуммаСНДС - ПострНДС;
		ОсталосьСуммаСНДС	= ПострСуммаСНДС;
		ОсталосьСуммаБезНДС	= ПострСуммаБезНДС;
		// Формирование проводок по реализации
		// вторая часть сложной проводки по доходам
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция Тогда
			ВидТМЦ = "продукция";
			СчетДоходов = "70.1"
		ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Товар Тогда
			ВидТМЦ = "запасы";
			СчетДоходов = "70.2"
		ИначеЕсли ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			ВидТМЦ = "услуги";
			СчетДоходов = "70.3"
		Иначе
			ВидТМЦ = "другие оборотные активы";
			СчетДоходов = "71.2"
		КонецЕсли;
		// сразу сделаем проводки по доходам, при формировании они сами свернуться
		Если (ВидТары <> Перечисление.ВидыТары.Залоговая) Или (ТМЦ.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара) Тогда
			// залоговая тара не проходит по взаиморасчетам
			глПроводка(Контекст,,СчетДоходов,ПострСуммаСНДС,"Реализация: "+ВидТМЦ,, ,,,
			ТМЦ.ВидДеятельности,Подразделение,МестоХранения, ,,"НК",1,"Реализация");
		КонецЕсли;
		Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
			// одновременно и отгрузка и оплата, налоговые обязательства показываем на всю сумму
			глПроводка(Контекст,СчетДоходов,,ПострНДС,"НДС: оплата наличными:",, ТМЦ.ВидДеятельности,Подразделение,МестоХранения,
			,,, ,,"НК",1,"НДС первого события");
		Иначе       
			// в случае бартера и предоплаты НДС состоит из части по первому событию и остального, 			
			// проводка для первого события
			глПроводка(Контекст,СчетДоходов,,ПострНДСПерв,"НДС: "+СокрЛП(ВидТМЦ)+": первое событие",, ТМЦ.ВидДеятельности,Подразделение,МестоХранения,
			,,, ,,"НК",1,"НДС первого события");                  
			// проводка для второго события
			глПроводка(Контекст,СчетДоходов,,ПострНДС - ПострНДСПерв,"НДС: "+СокрЛП(ВидТМЦ)+": второе событие",, ТМЦ.ВидДеятельности,Подразделение,МестоХранения,
			,,, ,,"НК",1,"НДС второго события");
		Конецесли;		   
		// проводки и движения по услугам отдельно
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			тбНормы = 0; СуммаУчБезНДС = 0;
			// получаем нормы
			Если глПолучитьНормы(ТМЦ,Ед,Кво,ДатаДок,ПоЗаказу,тбНормы) = 1 Тогда 
				// калькулируемая услуга
				ДвиженияСтрокаПроизводство(тбНормы,СуммаУчБезНДС);
				Доход = ОсталосьСуммаБезНДС - СуммаУчБезНДС;
				СчетУч = СчетПоКоду("231");
			Иначе
				Доход = 0;
				СчетУч = ТМЦ.Счет;
			КонецЕсли;
			ПроводкиТовар(ТМЦ,СчетУч,0,ОсталосьСписать,СуммаУчБезНДС,ТекущийДокумент(),ТекущийДокумент());	
			глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетУч,
			0,0, ТекущийДокумент(), ТекущийДокумент(), ОсталосьСписать, ОсталосьСуммаБезНДС, 
			0, ПродажаУслуги, 1, ОсталосьСуммаСНДС,Доход,,Признак,,,СписДопКво, , ФирмаПрихода, СкладПрихода);
			Продолжить;
		КонецЕсли;
		НС=0;   
		// находим в тбПартии первую партию, соответсв. текущей строке документа
		Если тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента")=1 Тогда
			тбПартии.ПолучитьСтрокуПоНомеру(НС);
		Иначе
			// если такой строки нет, переходим на первую строку таблицы
			тбПартии.ВыбратьСтроки();
			тбПартии.ПолучитьСтроку();
		КонецЕсли;
		// обрабатываем все строки тбПартии с соответсв. номером строки документа
		Пока тбПартии.НомерСтрокиДокумента = НомерСтроки Цикл
			// берем необходимые параметры партии из тбПартии
			Если тбПартии.ТМЦ.Счет = тбПартии.Счет Тогда
				МестоХраненияП = тбПартии.МестоХранения;
				ПоставщикП = тбПартии.Поставщик;
				ПоставкаП = тбПартии.Поставка;
				ПрихДокументП = тбПартии.ПрихДокумент;
				СчетП = тбПартии.Счет;
				// проверяем соответствие партиии заказу
				Если глПартияСоответствуетЗаказу(ПрихДокументП,Договор,1)=0 Тогда
					Если тбПартии.ПолучитьСтроку()=0 Тогда
						Прервать;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				НС =0;                               
				// находим остаток текущей партии в тбОстатки по ключу
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,ТМЦ.Код,СчетП),НС,"Ключ")=1 Тогда
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					ОстатокТовара = тбОстатки.ОстатокТовара;
					// если остаток 0, то с текущей партии не списываем
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					// сформируем движения по регистрам и проводки
					Если СформироватьДвиженияПартии(тбОстатки,тбПартии,ОсталосьСписать,ВсегоСписать,ПострСуммаСНДС
					,ПострСуммаБезНДС,ОсталосьСуммаСНДС,ОсталосьСуммаБезНДС,ПоставщикП,ПоставкаП
					,ПрихДокументП, Признак, СписДопКво, СуммаУпаковки,, ,ФирмаПрихода, СкладПрихода,, ССЦенаУпаковки) = 0 Тогда // --- УМК Сандомирский В.Ю. (10.02.15) добавил сумму упаковки для оборотов
						фОшибка = 0;
					Иначе
						СписДопКво = 0;
					КонецЕсли;					
				КонецЕсли;
			КонецЕсли;
			Если ОсталосьСписать = 0 Тогда
				Прервать;
			КонецЕсли;   
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла; 
		Если ОсталосьСписать > 0 Тогда
			глСообщитьОбОтсутствииПартии(0, Фирма, ТМЦ, НомерСтроки);
			Если Константа.РазрешитьОтрицОстатки = Нет Тогда
				фОшибка = 0;
			Иначе				
				глСообщитьОСозданииПартии(ТМЦ, ОсталосьСписать);
				ПрихДокументП = ?(МетодРасчетаСебестоимости<>Перечисление.МетодыРасчетаСебестоимости.ПоСреднему
				,ТекущийДокумент(),0);           
				// сформируем движения по регистрам и проводки
				Если СформироватьДвиженияПартии(,,ОсталосьСписать,ВсегоСписать,ПострСуммаСНДС
				,ПострСуммаБезНДС,ОсталосьСуммаСНДС,ОсталосьСуммаБезНДС,,
				,ПрихДокументП, Признак,СписДопКво,СуммаУпаковки,,,ФирмаПрихода, СкладПрихода,, ССЦенаУпаковки) = 0 Тогда
					фОшибка = 0;
				КонецЕсли;	
			КонецЕсли; 
		КонецЕсли; // ОсталосьСписать > 0
	КонецЦикла; // строки документа
	
	// списание материалов упаковки
	ДвиженияПартии_ДопМатериалы(тбПартии, тбОстатки, ТЗСписываемыеПриПродаже, фОшибка);
	
	// списание скидки 
	ДвиженияПартии_ДопМатериалы(тбПартии, тбОстатки, ТЗСкидкиНаВес, фОшибка, СписаниеСкидокНаВес, 1);
	
	Возврат фОшибка;
	
КонецФункции //ДвиженияПартии()

//==============================+umk
Функция СебестоимостьРеализованойПартииТовара(Номенклатура)
	
	СтоимостьЕд = 0;
	Стоимость = 0;
	Количество = 0;
	
	
	Рег = СоздатьОбъект("Регистр.Партии");
	Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());

	
	Пока Рег.ПолучитьДвижение() =1 Цикл
		Если (Рег.Приход = 0) И (Рег.ТМЦ = Номенклатура) Тогда
			Стоимость = Стоимость + Рег.Стоимость;
			Количество =Количество + Рег.ОстатокТовара;
		КонецЕсли;
	КонецЦикла;
	
	Если Количество <> 0 Тогда
		СтоимостьЕд = Стоимость / Количество;
	КонецЕсли;
	
	Возврат СтоимостьЕд;

КонецФункции

//=============================== + umk Товары в рознице передача
Процедура  ДвижениеТоварыВРознице()
	
	Если КатегорияЦен.Розница = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если (ДатаДок < Константа.ДатаНачалаВеденияУчетаВРознице) ИЛИ (ПустоеЗначение(Константа.ДатаНачалаВеденияУчетаВРознице) = 1) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаЦен = ?(ПустоеЗначение(ДатаЦ) = 0, ДатаЦ,ДатаДок); 
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл		
		
		Регистр.ТоварыВРознице.ПривязыватьСтроку(НомерСтроки);
		Регистр.ТоварыВРознице.Организация = Контрагент.ФирмаПрихода.Получить(ДатаДок);
		Регистр.ТоварыВРознице.МестоХранения =  Контрагент.МестоХранения.Получить(ДатаДок);
		Регистр.ТоварыВРознице.Номенклатура =  ТМЦ;
		Регистр.ТоварыВРознице.Кол =  Кво*Ед.Коэффициент;
		Регистр.ТоварыВРознице.СтоимостьПродажи = СуммаСНДС;
		Регистр.ТоварыВРознице.Себестоимость =  ?(ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Продукция, 
		глЦенаНоменклатурыСУпаковкой(ТМЦ, ВидУпаковки, Ед, Константа.ОсновнаяКатегорияЦен,ДатаЦен, Тара), //Если продукция, то по основной цене (вид - прайс) с упаковкой
		СебестоимостьРеализованойПартииТовара(ТМЦ))*Кво*Ед.Коэффициент;//Иначе по цене списанной партии;
		Регистр.ТоварыВРознице.ДвижениеПриходВыполнить();
		
	КонецЦикла;
	
	
КонецПроцедуры

// ===============================
Процедура ДвиженияРезерв();	
	Если ДокументОснование.Вид()="УМК_ЗаказКлиента" Тогда //--- УМК Сандомирский В.Ю. (31.03.15) 		
		//--- УМК Сандомирский В.Ю. (01.04.15) Движения по регистру резерв 
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаРаботыРезервов) <> 1) 
		И (Константа.УМК_ДатаНачалаРаботыРезервов <= ДатаДок)  Тогда 	
			
			глКомментарий("Выполняется снятие резерва на продаваемые ТМЦ",2);
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				НС = 0;
				
				Если ПустоеЗначение(ВидУпаковки) = 1 Тогда
					ТекВидУпаковки = НетУп;
				Иначе
					ТекВидУпаковки = ВидУпаковки;
				КонецЕсли;
				
				//ТекущийРезерв = ВремРег.Резервы.Остаток(Фирма,ТМЦ,ДокументОснование,ТекВидУпаковки,"Резерв");
				
				//СписываемыйРезерв = Мин(ТекущийРезерв,Кво);
				
				//Если СписываемыйРезерв > 0 Тогда
				Регистр.Резервы.ПривязыватьСтроку(НомерСтроки);
				Регистр.Резервы.Фирма			= Фирма;
				Регистр.Резервы.ТМЦ				= ТМЦ;  
				Регистр.Резервы.ВидУпаковки		= ТекВидУпаковки;  
				Если ДокументОснование.ДатаДок >= '01.06.2016' Тогда
					Регистр.Резервы.ФормаУпаковки	= глПолучитьФормуУпаковки(ТекВидУпаковки, ТМЦ, ДокументОснование.ДатаДок);
				КонецЕсли;
				Регистр.Резервы.ДокументРезерва = ДокументОснование;
				
				Регистр.Резервы.Резерв			= Кво * Коэффициент;
				
				Если ТМЦ.УчетДопКво = 1 Тогда
					//ТекущийДопКво = ВремРег.Резервы.Остаток(Фирма,ТМЦ,ДокументОснование,ТекВидУпаковки,"ДопКво");
					//СписываемыйДопКво = Мин(ТекущийДопКво,ДопКво);
					Регистр.Резервы.ДопКво		= ДопКво;//СписываемыйДопКво;
				Иначе
					Регистр.Резервы.ДопКво		= 0;
				КонецЕсли;
				
				Регистр.Резервы.ДвижениеРасходВыполнить();
				//КонецЕсли;
			КонецЦикла;			
		КонецЕсли;		
	КонецЕсли;	
КонецПроцедуры        

// ===============================
Процедура ДвиженияОстатки()	        
	глКомментарий("Выполняются движения остатков ТМЦ",2);
	
	// определим документ по которому зарезервированы ТМЦ
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ДокументОснование.Вид() = "Счет" Тогда
			РезервПоСчету = ДокументОснование;
		КонецЕсли;	
	КонецЕсли;
	ФирмаПрихода = Контрагент.ФирмаПрихода.Получить(ДатаДок);
	СкладПрихода = Контрагент.МестоХранения.Получить(ДатаДок);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл       
		Если ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			Продолжить;
		КонецЕсли;
		ВсегоСписать = Кво * Коэффициент;
		// движения по регистру Остатки
		глПровестиОстатки(Контекст, ВремРег, Фирма, МестоХранения, ТМЦ, ВидУпаковки, ВсегоСписать, 0, 0,,, 1, РезервПоСчету,,,,,,,ФирмаПрихода, СкладПрихода);
	КонецЦикла;
	
	//Материалы упаковки
	ТЗСписываемыеПриПродаже.ВыбратьСтроки();
	Пока ТЗСписываемыеПриПродаже.ПолучитьСтроку() = 1 Цикл
		ВсегоСписать = ТЗСписываемыеПриПродаже.Количество;
		// движения по регистру Остатки
		СкладДляСписания = ?(ПустоеЗначение(ТЗСписываемыеПриПродаже.ТМЦ.СкладСписания.Получить(ДатаДок)) =0, ТЗСписываемыеПриПродаже.ТМЦ.СкладСписания.Получить(ДатаДок), Константа.СкладДляСписанияЭтикеток);
		глПровестиОстатки(Контекст, ВремРег, Фирма, СкладДляСписания, ТЗСписываемыеПриПродаже.ТМЦ, ,ВсегоСписать, 0, 0,,, 1, РезервПоСчету,,,1,,
		ТЗСписываемыеПриПродаже.ДляТМЦ, ТЗСписываемыеПриПродаже.ДляУпаковки);
	КонецЦикла;
	
	//Скидки на вес
	ТЗСкидкиНаВес.ВыбратьСтроки();
	Пока ТЗСкидкиНаВес.ПолучитьСтроку() = 1 Цикл
		ВсегоСписать = ТЗСкидкиНаВес.Количество;
		// движения по регистру Остатки
		глПровестиОстатки(Контекст, ВремРег, Фирма, МестоХранения, ТЗСкидкиНаВес.ТМЦ, ТЗСкидкиНаВес.ВидУпаковки, ВсегоСписать, 0, 0,,, 1, РезервПоСчету,,,1,,
		ТЗСкидкиНаВес.ДляТМЦ, ТЗСкидкиНаВес.ДляУпаковки);
	КонецЦикла;
	
КонецПроцедуры

// ===============================
// Назначение:
//		Отражает движения документа в регистрах
// ===============================
Функция ДвиженияВзаиморасчеты()
	// взаиморасчеты
	ФлагОтгрузки = 1;
	ЗнакОплаты = -1; 
	// + umk
	КонтрагентРасчетов = Контрагент;// + umk
	
	// + umk
	//Если КассовыйМетодБонусы = 1 Тогда	
	//	ОсновнойПартнер = глОсновнойКонтрагентИерархии(Контрагент.Родитель,Контрагент);
	//	Если ПустоеЗначение(ОсновнойПартнер) = 0 Тогда
	//		КонтрагентРасчетов = ОсновнойПартнер;
	//	КонецЕсли;
	//КонецЕсли;
	// - umk
	
	тбСуммыПогашения = глПолучитьСуммыДляПогашения(Контекст, Фирма, Валюта);
	тбДолги 		 = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег, Фирма, ?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты), КонтрагентРасчетов, ПервыйДок, Валюта);
	// Проверяем возможность кредита 
	//Если (ВидТорговли = Перечисление.ВидыТорговли.Кредит ) 
	//	И (Константа.РазрешитьПревышениеКредита = Нет) Тогда
	//	глКомментарий("Проверяется возможность кредита",2);
	//	// получим таблицу долгов для определения суммы задолженности
	//	тбДолгиКред = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРег, Фирма,ЗнакОплаты, Контрагент, 0);
	//	ДолгКонтрагента = 0;
	//	Просрочено = 0;
	//	ПросроченныйДолг = 0;
	//	тбДолгиКред.ВыбратьСтроки();
	//	Пока тбДолгиКред.ПолучитьСтроку()=1 Цикл
	//		Если тбДолгиКред.ДолгОсн <= 0 Тогда
	//			Продолжить;
	//		КонецЕсли;
	//		текКредДок = тбДолгиКред.КредДокумент;
	//		ВидДокКред = текКредДок.Вид();
	//		Если глЕстьРеквизитШапки("ВидТорговли",ВидДокКред)=Да Тогда              
	//			// учитываем только документы по торговому кредиту
	//			Если текКредДок.ВидТорговли <> Перечисление.ВидыТорговли.Кредит Тогда
	//				Продолжить;
	//			КонецЕсли;
	//		КонецЕсли;
	//		ДолгКонтрагента = ДолгКонтрагента + глПересчет(тбДолгиКред.ДолгОсн,Гривня,ДатаДок,Контрагент.ВалютаКредита,ДатаДок,);
	//		// расчитаем дату оплаты долга по ткущему документу из таблицы долгов
	//		Если глЕстьРеквизитШапки("ДатаОплаты",ВидДокКред)=Да Тогда
	//		    ДатаОплаты = текКредДок.ДатаОплаты;
	//			Если ПустоеЗначение(ДатаОплаты)=1 Тогда
	//			    ДатаОплаты = текКредДок.ДатаДок;
	//			КонецЕсли;
	//		Иначе 
	//			ДатаОплаты = текКредДок.ДатаДок + Контрагент.Глубина.Получить(текКредДок.ДатаДок);
	//		КонецЕсли;                                 
	//		// рассчитаем на сколько просрочен долг
	//		Если ДатаДок > ДатаОплаты Тогда
	//			ПросроченныйДолг = ПросроченныйДолг + тбДолгиКред.ДолгОсн;
	//			Если Просрочено<(ДатаДок-ДатаОплаты) Тогда
	//			    Просрочено = ДатаДок-ДатаОплаты;
	//			КонецЕсли;
	//		КонецЕсли;
	//	КонецЦикла;
	//	ДолгКонтрагента = ДолгКонтрагента + глПересчет(Итог("СуммаСНДС"),Валюта,ДатаДок,Контрагент.ВалютаКредита,ДатаДок,);
	//	СуммаКредита = Контрагент.СуммаКредита.Получить(ДатаДок);
	//	глКомментарий("Долг контрагента составляет "+глФРМ(ДолгКонтрагента,Контрагент.ВалютаКредита,1)+", сумма кредита "+ глФРМ(СуммаКредита,Контрагент.ВалютаКредита,1) +".",3);
	//	Если ПустоеЗначение(СуммаКредита) = 0 Тогда 
	//		Если ДолгКонтрагента > СуммаКредита Тогда
	//			глКомментарий(Шаблон("Сумма накладной вместе с текущим долгом клиента ([глФРМ(ДолгКонтрагента,Контрагент.ВалютаКредита,1)]) превышает сумму кредита ([глФРМ(СуммаКредита,Контрагент.ВалютаКредита,1)]). "),0,,"!");
	//			Возврат 0;
	//		КонецЕсли;
	//	КонецЕсли;
	//	Если Просрочено>0 Тогда
	//	    глКомментарий(Шаблон("Просрочена оплата [глФРМ(ПросроченныйДолг,Гривня,1)] на [Просрочено] дней."),0,,"!");
	//		Возврат 0;
	//	КонецЕсли;
	//	глКомментарий("Отпуск ТМЦ в кредит разрешен",3);
	//КонецЕсли;
	Если (тбСуммыПогашения.Итог("СуммаСНДС") = 0) И (Итог("СуммаСНДС") = 0) Тогда
		//Если тбДолги.КоличествоСтрок() = 0 Тогда
		//	тбДолги.ПолучитьСтрокуПоНомеру(1);
		//	Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, Контрагент, Договор, ВидНДС, тбДолги.Счет, тбДолги.КредДокумент, Валюта, 0.01, 0.01, ПостОтгрузка, 0, 0, 1);
		//	Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, Контрагент, Договор, ВидНДС, тбДолги.Счет, тбДолги.КредДокумент, Валюта, -0.01, -0.01, ПостОтгрузка, 0, 0, 1);
		//Иначе			
		Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, КонтрагентРасчетов, ПервыйДок, ВидНДС, ТекущийДокумент(), ТекущийДокумент(), Валюта, 0.01, 0.01, АвансоваяОтгрузка, 0, 0, 1);
		Регистр.ВзаиморасчетыПокупателей.ДвижениеПриход(Фирма, КонтрагентРасчетов, ПервыйДок, ВидНДС, ТекущийДокумент(), ТекущийДокумент(), Валюта, -0.01, -0.01, АвансоваяОтгрузка, 0, 0, 1);
		//КонецЕсли;		
	Иначе
		глПровестиПоВзаиморасчетам(Контекст, ФлагОтгрузки, ЗнакОплаты, 0, Фирма, тбДолги, тбСуммыПогашения, Валюта,КонтрагентРасчетов, ПервыйДок, ВидТорговли, ДокументОснование);
	КонецЕсли;
	
	
	РегПоставщики=ВремРег.ВзаиморасчетыПоставщиков;	
	РегПокупатели=ВремРег.ВзаиморасчетыПокупателей;	
	РегПокупатели.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегПокупатели.ПолучитьДвижение() = 1 Цикл
		Если (Константа.ПроводкиПоКассеТолькоОрдерами = Нет)
		И (ВидТорговли = Перечисление.ВидыТорговли.Нал) 
		И (РегПокупатели.Расход = 1) Тогда
			// При оплате наличными формируются 2 движения, надо взять только одно. Ввозьмем приход.
			Продолжить;
		КонецЕсли;
		Если (Найти(АвансоваяОтгрузка+ПостОтгрузка+ПервоеСобытиеБартерРасход+ВтороеСобытиеБартерРасход+ПостОплата,РегПокупатели.КодОперации) = 0) Тогда
			// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
			Продолжить;	
		КонецЕсли;      
		// проводки по взаиморасчетам
		Если Валюта = Гривня Тогда
			глПроводка(Контекст,СчетКонтрагента,,РегПокупатели.Долг,"Реализация",, КонтрагентРасчетов,ПервыйДок,,
			,,, ,,"НК",1,"Реализация",1);					
		Иначе	
			глПроводка(Контекст,СчетКонтрагента,,РегПокупатели.ДолгОсн,"Реализация",, КонтрагентРасчетов,ПервыйДок,,
			,,, РегПокупатели.Валюта,РегПокупатели.Долг,"НК",1,"Реализация",1);					
		КонецЕсли;	  
		ВзаиморасчетыГрн = ВзаиморасчетыГрн + РегПокупатели.ДолгОсн;
		// погашение аванса
		Если (РегПокупатели.КодОперации = ПостОтгрузка) И (глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1) Тогда
			Если Валюта=Гривня Тогда
				глПроводка(Контекст,"6811",СчетКонтрагента,РегПокупатели.Долг,"Реализация: погашен авансовый платеж",, КонтрагентРасчетов,ПервыйДок,,
				КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,0);
			Иначе
				глПроводка(Контекст,"6812",СчетКонтрагента,РегПокупатели.ДолгОсн,"Реализация за валюту: погашен авансовый платеж",, КонтрагентРасчетов,ПервыйДок,,
				КонтрагентРасчетов,ПервыйДок,, РегПокупатели.Валюта,РегПокупатели.Долг,"НК",1,0);
			КонецЕсли;
			// погашение аванса покупателя
			АвансВал = АвансВал + РегПокупатели.Долг;
			АвансОсн = АвансОсн + РегПокупатели.ДолгОсн;
		КонецЕсли;
		// проводки по НДС
		Если глДелатьПроводкиПоНалогам(РегПокупатели,"НДС") = 1 Тогда
			Если (РегПокупатели.КодОперации = АвансоваяОтгрузка) Или (РегПокупатели.КодОперации = ПервоеСобытиеБартерРасход) Тогда     					
				// для первого события
				глПроводка(Контекст,,"6415",РегПокупатели.НДС,"НДС: первое событие",, ,,,
				ВидНДС,,, ,,"НК",1,"НДС первого события",1);                                                     
				НДСПервоеСобытие = НДСПервоеСобытие + РегПокупатели.НДС;
			ИначеЕсли РегПокупатели.КодОперации = ВтороеСобытиеБартерРасход Тогда     					
				// для второго события
				глПроводка(Контекст,,"6415",РегПокупатели.НДС,"НДС: второе событие",, ,,,
				ВидНДС,,, ,,"НК",1,"НДС второго события",1);
				// посчитаем НДС предварительной оплаты
				НДСВтороеСобытие = НДСВтороеСобытие + РегПокупатели.НДС;
			ИначеЕсли РегПокупатели.КодОперации = ПостОтгрузка Тогда     					
				// для второго события
				глПроводка(Контекст,,"643",РегПокупатели.НДС,"НДС: второе событие",, ,,,
				КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,"НДС второго события",1);
				// посчитаем НДС предварительной оплаты
				НДСВтороеСобытие = НДСВтороеСобытие + РегПокупатели.НДС;
			КонецЕсли;                                                                        
		КонецЕсли;       
		
		// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		//// сформируем проводки по ВД/ВР
		//Если глДелатьПроводкиПоНалогам(РегПокупатели,"ВД/ВР") = 1 Тогда
		//	Если СубконтоВалДох <> Константа.НиДоходНиРасход Тогда
		//		глПроводка(Контекст,"ВД","ВД",РегПокупатели.СуммаСНДС_НУ-РегПокупатели.НДС,"Валовые доходы",, Контрагент,ПервыйДок,СубконтоВалДох,
		//		Контрагент,ПервыйДок,СубконтоВалДох, ,,"НК",1,0);
		//	КонецЕсли;
		//КонецЕсли;
		// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
		
		// дополнительные проводки для отдельных видов торговли
		Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
			// сформируме проводки по кассе, если они нужны
			Если Константа.ПроводкиПоКассеТолькоОрдерами = Нет Тогда
				глПроводка(Контекст,Касса.СчетУчета,СчетКонтрагента,РегПокупатели.Долг,"Оплата наличными",, Касса,,,
				КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,0);
			КонецЕсли;
		ИначеЕсли ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
			Если РегПокупатели.КодОперации = ПервоеСобытиеБартерРасход Тогда     					
				// первое событие по бартеру показываем как аванс в счет встречной поставки
				Если глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1 Тогда
					Сч = ?(Валюта=Гривня, "3711", "3712");
				Иначе
					Сч = ?(Валюта=Гривня, "631", "632");
				КонецЕсли;        
				глПроводка(Контекст,Сч,СчетКонтрагента,РегПокупатели.Долг,"Бартер: первое событие",, КонтрагентРасчетов,ПервыйДок,,
				КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,0);
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	// для бартера просмотрим другой регистр		
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер Тогда
		РегПоставщики.ВыбратьДвиженияДокумента(ТекущийДокумент());
		Пока РегПоставщики.ПолучитьДвижение() = 1 Цикл
			Если Найти(ПервоеСобытиеБартерРасход+ВтороеСобытиеБартерРасход,РегПоставщики.КодОперации) = 0 Тогда
				// для формирования проводок по взаиморасчетам нам нужны только эти коды операций
				Продолжить;	
			КонецЕсли;      
			// первая часть сложной проводки по доходам
			Если Валюта = Гривня Тогда
				глПроводка(Контекст,СчетКонтрагента,,РегПоставщики.Долг,"Реализация",, КонтрагентРасчетов,ПервыйДок,,
				,,, ,,"НК",1,"Реализация",1);					
			Иначе	
				глПроводка(Контекст,СчетКонтрагента,,РегПоставщики.ДолгОсн,"Реализация",, КонтрагентРасчетов,ПервыйДок,,
				,,, РегПоставщики.Валюта,РегПоставщики.Долг,"НК",1,"Реализация",1);					
			КонецЕсли;	     			
			ВзаиморасчетыГрн = ВзаиморасчетыГрн + РегПоставщики.ДолгОсн;
			Если РегПоставщики.КодОперации = ПервоеСобытиеБартерРасход Тогда     					
			ИначеЕсли РегПоставщики.КодОперации = ВтороеСобытиеБартерРасход Тогда			                    
				// сформируем проводки по НДС
				Если глДелатьПроводкиПоНалогам(РегПоставщики,"НДС") = 1 Тогда
					глПроводка(Контекст,СчетНДС,"64.4.1",РегПоставщики.НДС,"НДС: второе событие",, СубконтоНДС1,СубконтоНДС2,,
					КонтрагентРасчетов,ПервыйДок,, ,,"НК");
					// для второго события
					глПроводка(Контекст,,"64.3",РегПоставщики.НДС,"НДС: второе событие",, ,,,
					КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,"НДС второго события",1);
					// посчитаем НДС предварительной оплаты
					НДСВтороеСобытие = НДСВтороеСобытие + РегПоставщики.НДС;
				КонецЕсли;	       
				// закрываем долг по бартеру
				Если глВыделятьЛиАвансыПоСчету(СчетКонтрагента) = 1 Тогда
					Сч = ?(Валюта=Гривня, "6811", "6812");
					глПроводка(Контекст,Сч,СчетКонтрагента,РегПоставщики.Долг,"Бартер: второе событие: погашение аванса",, КонтрагентРасчетов,ПервыйДок,,
					КонтрагентРасчетов,ПервыйДок,, ,,"НК",1,0);
				КонецЕсли;
				
				// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				//// сформируем проводки по ВД/ВР для бартера, если суммы не относятся только к НДС
				//Если глДелатьПроводкиПоНалогам(РегПоставщики,"ВД/ВР") = 1 Тогда
				//	Если Константа.БартерВалРасх <> Константа.НиДоходНиРасход Тогда
				//		глПроводка(Контекст,"ВР","ВР",РегПоставщики.СуммаСНДС_НУ-РегПоставщики.НДС,"Бартер: валовые издержки",, Контрагент,ПервыйДок,Константа.БартерВалРасх,
				//		Контрагент,ПервыйДок,Константа.БартерВалРасх, ,,"НК",1,0);
				//	Конецесли;
				//Конецесли;	
				// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
				
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	Возврат 1;
КонецФункции //ДвиженияРегистров

//====================================================================== //--- УМК Сандомирский В.Ю, (04.11.14)
Процедура СформироватьВзаимозачет()
	
	Если (ПустоеЗначение(Контрагент.КонтрагентВзаимозачета) = 1) Тогда //--- УМК Сандомирский В.Ю. (24.11.14) принудительная очистка флага
		ФлагКонтрагентВзаимозачета = 0;
	КонецЕсли;	
	
	Если (ФлагКонтрагентВзаимозачета = 1) И (Контрагент.КонтрагентВзаимозачета.Вид() = "Контрагенты") Тогда
		
		ДокВзаимозачета = СоздатьОбъект("Документ.УМК_ПерезачетСписком");
		
		Если ПустоеЗначение(ДокументВзаимозачета) = 1 Тогда
			ДокВзаимозачета.Новый();
			ДокВзаимозачета.ДатаДок 				= ДатаДок;	//--- в день документа оплаты
			ТекстСообщение = "Создана ";
			ДокВзаимозачета.Автор = глПользователь;
		Иначе
			ДокВзаимозачета.НайтиДокумент(ДокументВзаимозачета);	
			Если ДокВзаимозачета.ПометкаУдаления() = 1 Тогда
				ДокВзаимозачета.СнятьПометкуУдаления();
			КонецЕсли;
			
			ТекстСообщение = "Перезаписана ";
			
			Если ДокВзаимозачета.ДатаДок <> ДатаДок Тогда
				ДокВзаимозачета.Удалить(0);
				ДокВзаимозачета.Новый();	
				ДокВзаимозачета.ДатаДок = ДатаДок;
				ТекстСообщение = "перенесен в другую дату : ";
			КонецЕсли;	
			
		КонецЕсли;	
		
		ДокВзаимозачета.ДокументОснование 	= ТекущийДокумент();
		ДокВзаимозачета.Валюта 				= Гривня;
		ДокВзаимозачета.Курс				= 1;
		ДокВзаимозачета.Кратность			= 1;
		ДокВзаимозачета.ВидНДС				= ВидНДС;
		//ДокВзаимозачета.Автор = глПользователь;
		ДокВзаимозачета.Фирма = Фирма;
		ДокВзаимозачета.Примечание = "Автоматически из док " + ТекущийДокумент();
		
		ДокВзаимозачета.УдалитьСтроки();
		
		ДокВзаимозачета.НоваяСтрока();
		ДокВзаимозачета.ПлюсМинус 				= Перечисление.ПлюсМинус.Минус;
		
		
		ДокВзаимозачета.ВидКонтрагентаОткуда 		= Перечисление.ВидыКлиентов.Покупатель;
		ДокВзаимозачета.СчетОткуда 				= СчетПоКоду("361");
		ДокВзаимозачета.КонтрагентОткуда 		= Контрагент;
		ДокВзаимозачета.ДоговорКонтрагентаОткуда= ПервыйДок;
		ДокВзаимозачета.СуммаВал 				= Итог("СуммаСНДС");
		ДокВзаимозачета.СуммаГрн 				= Итог("СуммаСНДС");
		ДокВзаимозачета.СуммаВалОткуда 			= Итог("СуммаСНДС");
		ДокВзаимозачета.СуммаГрнОткуда 			= Итог("СуммаСНДС");
		
		
		ДокВзаимозачета.НоваяСтрока();
		ДокВзаимозачета.ПлюсМинус 				= Перечисление.ПлюсМинус.Плюс;
		ДокВзаимозачета.ВидКонтрагентаКуда   	= Перечисление.ВидыКлиентов.Поставщик;
		ДокВзаимозачета.СчетКуда 				= СчетПоКоду("631");
		ДокВзаимозачета.КонтрагентКуда 		= Контрагент.КонтрагентВзаимозачета;
		ДокВзаимозачета.СуммаВал 				= Итог("СуммаСНДС");
		ДокВзаимозачета.СуммаГрн 				= Итог("СуммаСНДС");
		ДокВзаимозачета.СуммаВалКуда 			= Итог("СуммаСНДС");
		ДокВзаимозачета.СуммаГрнКуда 			= Итог("СуммаСНДС");
		
		ДокВзаимозачета.Записать();
		
		ДокументВзаимозачета = ДокВзаимозачета.ТекущийДокумент();
		
		ОткрытьФормуМодально(ДокВзаимозачета.ТекущийДокумент(), 1);
		
		Сообщить(ТекстСообщение + " перезачет " + Строка(ДокВзаимозачета));		
		
	ИначеЕсли (ФлагКонтрагентВзаимозачета = 0) И (ПустоеЗначение(ДокументВзаимозачета)<>1) Тогда
		
		ДокВзаимозачета = СоздатьОбъект("Документ.УМК_ПерезачетСписком");
		ДокВзаимозачета.НайтиДокумент(ДокументВзаимозачета);	
		Если ДокВзаимозачета.ПометкаУдаления() = 0 Тогда
			ДокВзаимозачета.Удалить(0);
		КонецЕсли;
		
		ДокументВзаимозачета = "";
		
	КонецЕсли;	
	
КонецПроцедуры // СформироватьВзаимозачет

//======================================================================
Процедура СформироватьПеремещение()
	Если ТЗПер.КоличествоСтрок() + ТЗДляПер.КоличествоСтрок() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	ДокПер = СоздатьОбъект("Документ.Перемещение");	
	Если СписСписаний.РазмерСписка() > 0 Тогда
		ДокПер.НайтиДокумент(СписСписаний.ПолучитьЗначение(1));
		ДокПер.СнятьПометкуУдаления();
	Иначе
		ДокПер.Новый();
		ДокПер.Фирма = Фирма;
		ДокПер.ДатаДок = ДатаДок;
		глУстановитьНомер(ДокПер, 1);			
	КонецЕсли;
	ДокПер.ДатаДок = ДатаДок;			
	ДокПер.МестоХранения = МестоХранения;
	ДокПер.НовоеМестоХранения = МестоХранения;
	ДокПер.ДокументОснование = ТекущийДокумент();
	ДокПер.СписыватьМатериал = 1;// + umk
	ДокПер.ВидТМЦ = 1;
	ДокПер.Автор = глПользователь;
	ДокПер.Примечание = "Создан автоматически";
	ДокПер.УдалитьСтроки();
	ТЗПер.ВыбратьСтроки();
	Пока ТЗПер.ПолучитьСтроку() = 1 Цикл
		ДокПер.НоваяСтрока();
		ОдинаковаяМарк = ТЗПер.ТМЦ.ОдинаковаяПрРазныеМаркИ.Получить(ДатаДок);
		ДокПер.ТМЦ = ?(ПустоеЗначение(ОдинаковаяМарк) = 1, ТЗПер.ТМЦ, ОдинаковаяМарк);
		ДокПер.Счет = ТЗПер.ТМЦ.Счет;
		ДокПер.Стало = ТЗПер.ТМЦ;
		ДокПер.СталоСчет = ТЗПер.ТМЦ.Счет;
		ДокПер.Кво = ТЗПер.Количество;
		ДокПер.ВидУпаковки = НетУп; 
		ДокПер.ВидУпаковкиСтало = ТЗПер.ВидУпаковки;
	КонецЦикла;
	ТЗДляПер.ВыбратьСтроки();
	Пока ТЗДляПер.ПолучитьСтроку() = 1 Цикл
		ДокПер.НоваяСтрока();
		ДокПер.ТМЦ = ТЗДляПер.ТМЦМарк;
		ДокПер.Счет = ДокПер.ТМЦ.Счет;
		ДокПер.Стало = ТЗДляПер.ТМЦ;
		ДокПер.СталоСчет = ДокПер.Стало.Счет;
		ДокПер.Кво = ТЗДляПер.Кво;
		ДокПер.ВидУпаковки = НетУп; 
		//ДокПер.ВидУпаковкиСтало = НетУп;
		ДокПер.ВидУпаковкиСтало = ТЗДляПер.ВидУпаковки_; //+umk
	КонецЦикла;
	
	Ч = 0; М = 0; С = 0;
	ТекущийДокумент().ПолучитьВремя(Ч,М,С);
	ДокПер.Записать();
	ДокПер.УстановитьВремя(Ч, М, С-1);
	ДокПер.Записать();
	ОткрытьФормуМодально(ДокПер.ТекущийДокумент(), 1);
	
	ЗафиксироватьТранзакцию();
	Сообщить("Создано Перемещение: " + Строка(ДокПер));
КонецПроцедуры // гл

//======================================================================
Процедура СформироватьТЗПеремещения()
	ТЗПер = СоздатьОбъект("ТаблицаЗначений");	
	ТЗПер.НоваяКолонка("ТМЦ");
	ТЗПер.НоваяКолонка("ВидУпаковки");
	ТЗПер.НоваяКолонка("Количество");
	ТЗПер.НоваяКолонка("ДопКво");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ОдинаковаяМаркировка = ТМЦ.ОдинаковаяПрРазныеМаркИ.Получить(ДатаДок); 
		Если ((СоздатьПеремещение = Да) И (((ПустоеЗначение(ВидУпаковки) = 0) И (ВидУпаковки <> НетУп))  ИЛИ (ПустоеЗначение(ОдинаковаяМаркировка) = 0))) ИЛИ
		((ДатаДок >= '23.02.2019') И (ДатаДок < ДатаНачалаФормированияПеремещенийПоМаркировке) И (ПустоеЗначение(ОдинаковаяМаркировка) = 0) И ((ПустоеЗначение(ВидУпаковки) = 1) ИЛИ (ВидУпаковки = НетУп))) Тогда
			ТЗПер.НоваяСтрока();
			ТЗПер.ТМЦ = ТМЦ;
			ТЗПер.ВидУпаковки = ВидУпаковки;
			ТЗПер.Количество = ?(СписыватьСкидкиНаВесВУчете = 1 ,кол,Кво);
			ТЗПер.ДопКво = ДопКво;
		КонецЕсли;
	КонецЦикла;
	
	НачатьТранзакцию();
	Док = СоздатьОбъект("Документ");	
	СписСписаний = СоздатьОбъект("СписокЗначений");
	Док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент());
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если (Док.Вид() = "Перемещение") Тогда
			Док.Удалить(0);
			СписСписаний.ДобавитьЗначение(Док.ТекущийДокумент());
		КонецЕсли;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры // 

//======================================================================
Процедура ДобавитьСтрокуСписНоменклатурыПриПродаже(СПриПродаже, ТМЦ_, кво_) // + umk 
	
	ТЗСписываемыеПриПродаже.НоваяСтрока();
	ТЗСписываемыеПриПродаже.ТМЦ = ?(ПустоеЗначение(СПриПродаже.ТМЦДляСписания.Получить(ДатаДок)) = 0, СПриПродаже.ТМЦДляСписания.Получить(ДатаДок), СПриПродаже);
	ТЗСписываемыеПриПродаже.ДляТМЦ = ТМЦ_;
	ПроцПотерь = (1 - ТМЦ_.ПроцПотерь.Получить(ДатаДок)/100);
	Если ПроцПотерь = 0 Тогда
		ПроцПотерь = 1;
	КонецЕсли;
	
	ТЗСписываемыеПриПродаже.Количество = (кво_ / ПроцПотерь) * СПриПродаже.НормаКГФарша.Получить(ДатаДок);
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения(ЧастичноПровести = 0)
	глКомментарий("Начало",2,Контекст);
	Если ПроверкаШапки()=0 Тогда
		глНеПроводить(Контекст);
		Возврат;
	КонецЕсли;
	
	// + umk
	СписыватьМатериалУпаковки = ПустоеЗначение(Константа.СписыватьМатериалУпаковкиВПеремещении);
	СчетЗатратСкидкиНаВес = ?(ПустоеЗначение(СчетЗатратСкидкиНаВес) = 0,СчетЗатратСкидкиНаВес, Константа.СчетЗатратСкидкиНаВес);
	ВидЗатратСкидкиНаВес = ?(ПустоеЗначение(ВидЗатратСкидкиНаВес) = 0,ВидЗатратСкидкиНаВес, Константа.ВидЗатратСкидкиНаВес);
	
	Если ДатаДок < Константа.СписыватьМатериалУпаковкиВПеремещении Тогда
		СписыватьМатериалУпаковки = 1;
	КонецЕсли;
	
	//материалы-исключения
	Если (ПустоеЗначение(Константа.СписыватьМатериалыИсключенияВНакладной) = 0) И
	(ДатаДок > Константа.СписыватьМатериалыИсключенияВНакладной) Тогда
		СписыватьМатериалУпаковки = 1;
		СписыватьМатериалУпаковкиИсключения = 1 
	КонецЕсли;
	// - umk
	
	ГруппаДляУстЦ = Константа.ГруппаПродукцииДляЗаписиЦен;
	СписДляУстановкиЦен = СоздатьОбъект("ТаблицаЗначений");	
	СписДляУстановкиЦен.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	СписДляУстановкиЦен.НоваяКолонка("Ед", "Справочник.Единицы");
	СписДляУстановкиЦен.НоваяКолонка("Цена", "Число");
	
	//--- УМК Сандомирский В.Ю, (проверка строки во время проведения проведением, могут быть запреты проведения) 29.04.14 г.
	// проверим цены
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если УМК_ПроверкаСтроки()=0 Тогда
			глТбОперация.УдалитьСтроки();
			глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	НДСПервоеСобытие = 0;
	НДСВтороеСобытие = 0;     
	АвансВал = 0; // в валюте
	АвансОсн = 0; // в основной валюте                      
	ВзаиморасчетыГрн = 0;
	
	
	ТЗСписываемыеПриПродаже = СоздатьОбъект("ТаблицаЗначений");
	ТЗСписываемыеПриПродаже.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗСписываемыеПриПродаже.НоваяКолонка("ДляТМЦ", "Справочник.ТМЦ");
	ТЗСписываемыеПриПродаже.НоваяКолонка("ДляУпаковки", "Справочник.ВидыУпаковки");
	ТЗСписываемыеПриПродаже.НоваяКолонка("ФормаУпаковки", "Справочник.ФормыУпаковки");
	ТЗСписываемыеПриПродаже.НоваяКолонка("Количество", "Число", 15, 3);
	
	ТЗСкидкиНаВес = СоздатьОбъект("ТаблицаЗначений");
	ТЗСкидкиНаВес.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗСкидкиНаВес.НоваяКолонка("ВидУпаковки", "Справочник.ВидыУпаковки");
	ТЗСкидкиНаВес.НоваяКолонка("ДляТМЦ", "Справочник.ТМЦ");
	ТЗСкидкиНаВес.НоваяКолонка("ДляУпаковки", "Справочник.ВидыУпаковки");
	ТЗСкидкиНаВес.НоваяКолонка("ФормаУпаковки", "Справочник.ФормыУпаковки");
	ТЗСкидкиНаВес.НоваяКолонка("Количество", "Число", 15, 3);
	
	//--- УМК Сандомирский В.Ю. (12.09.14) подготовка ТЗ с товарами , списываемыми при продаже (этикетки и упаковки)
	
	
	Если СписыватьМатериалУпаковки = 1 Тогда // + umk
		
		//--- Этикетка
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл		
			СПриПродаже = ТМЦ.ТМЦСписанияПриПродаже.Получить(ДатаДок);
			
			Если ((ПустоеЗначение(СПриПродаже) = 0) И (СписыватьМатериалУпаковкиИсключения = 0)) //1-е условие списание
			    ИЛИ ((ПустоеЗначение(СПриПродаже) = 0) И (СписыватьМатериалУпаковкиИсключения = 1) И(СПриПродаже.ИсключитьИзСписанияВПеремещении = 1))  Тогда //2-е условие, материалы-исключения
				ДобавитьСтрокуСписНоменклатурыПриПродаже(СПриПродаже, ТМЦ, Кво);
			КонецЕсли;
			
			Если ПустоеЗначение(Тара) = 0 Тогда
				Если ПустоеЗначение(Тара.БазоваяКатегорияЦены.Получить(ДатаДок)) = 0 Тогда
					ТЗСписываемыеПриПродаже.НоваяСтрока();
					ТЗСписываемыеПриПродаже.ТМЦ = Тара;
					ТЗСписываемыеПриПродаже.ДляТМЦ = ТМЦ;
					ПроцПотерь = 1;
					
					ТЗСписываемыеПриПродаже.Количество = КвоТары;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаГрупУпаковок) <> 1) 		//--- УМК Сандомирский В.Ю. (24.09.14) списываем материалы упаковки 
		И (Константа.УМК_ДатаНачалаГрупУпаковок <= ДатаДок)  Тогда						
			Если (ПустоеЗначение(Константа.УМК_ДатаНачалаСписанияМатериаловУпаковки) <> 1)  //--- УМК Сандомирский В.Ю. (13.02.15) списываем материалы упаковки  по константе УМК_ДатаНачалаСписанияМатериаловУпаковки	
			И (Константа.УМК_ДатаНачалаСписанияМатериаловУпаковки <= ДатаДок)  Тогда 					
				//--- Упаковка
				СпрРазрешенныеВидыУпаковокТМЦ 	= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ"); 
				ВыбратьСтроки();
				Пока ПолучитьСтроку() = 1 Цикл					
					Если (ПустоеЗначение(ТМЦ) <> 1) И (ПустоеЗначение(ВидУпаковки) <> 1) Тогда
						СпрРазрешенныеВидыУпаковокТМЦ.ИспользоватьВладельца(ТМЦ);
						Если СпрРазрешенныеВидыУпаковокТМЦ.НайтиПоРеквизиту("ВидУпаковки",ВидУпаковки,0) = 1  Тогда
							ФормаУп = СпрРазрешенныеВидыУпаковокТМЦ.ФормаУпаковки.Получить(ДатаДок);
							ДополнитьСписываемыеПроПродажеМатериаламиУпаковки(СпрРазрешенныеВидыУпаковокТМЦ, "", "", ФормаУп);
							Если ПустоеЗначение(ФормаУп) = 0 Тогда
								ДополнитьСписываемыеПроПродажеМатериаламиУпаковки(СпрРазрешенныеВидыУпаковокТМЦ.ФормаУпаковки.Получить(ДатаДок), "Форм", СпрРазрешенныеВидыУпаковокТМЦ, ФормаУп);
							КонецЕсли;
						КонецЕсли;		
					КонецЕсли;		
				КонецЦикла;		
			КонецЕсли;    //... УМК Сандомирский В.Ю. (13.02.15)	
		КонецЕсли;
		ТЗСписываемыеПриПродаже.Свернуть("ТМЦ,ДляТМЦ,ДляУпаковки,ФормаУпаковки", "Количество");
		
	КонецЕсли; // - umk по материалам упаковки. 
	
	//Таблица скидок ТМЦ
	Если СписыватьСкидкиНаВесВУчете = 1 Тогда
		
		ВыбратьСтроки();
		
		Пока ПолучитьСтроку() = 1 Цикл
			
			Если кол <= Кво Тогда
				Продолжить;
			КонецЕсли;
			
			ТЗСкидкиНаВес.НоваяСтрока();
			ТЗСкидкиНаВес.Количество = Кол - Кво;
			ТЗСкидкиНаВес.ТМЦ = ТМЦ;
			ТЗСкидкиНаВес.ВидУпаковки = ВидУпаковки;
			
		КонецЦикла;
		
	КонецЕсли;// - umk по скидкам на вес. 
	
	Если ТипЗначенияСтр(ЧастичноПровести) <> "Число" Тогда
		ЧастичноПровести = 0;
	КонецЕсли;
	
	Если глВсеВыбрано = 1 Тогда
		СформироватьТЗПеремещения(); // сформируем таблицу того, что уже перемещаем явно
		РассчитатьШапку(ЧастичноПровести);		
		Если (ПустоеЗначение(Константа.УМК_ДатаНачалаПартииОстатки) <> 1) //--- УМК Сандомирский В.Ю, (09.10.14) (проверка действует с момента разделения регистров)
		И (Константа.УМК_ДатаНачалаПартииОстатки <= ДатаДок)  Тогда 
			Если глКонтрольНаличияТМЦДляСписания(Контекст) = 1 Тогда //---УМК Сандомирский В.Ю, (09.10.14) контролируем наличие ТМЦДляСписания в ТМЦ табличной части контектста
				//--- если категорично то можно поставить в этом месте 
				//глНеПроводить(Контекст);
				//Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ВремРег.Актуальность(1);	
		СформироватьПеремещение();
	КонецЕсли;	
	
	ДвиженияОстатки();      
	Если глВсеВыбрано = 1 Тогда
		ВремРег.Актуальность(0);
	КонецЕсли;
	
	Если ЧастичноПровести = 1 Тогда
		Если РежимПроведения<>1 Тогда
			РежимПроведения=1;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	Если ВидТорговли <> Перечисление.ВидыТорговли.Давал Тогда
		Если ДвиженияВзаиморасчеты() = 0 Тогда	
			глТбОперация.УдалитьСтроки();
			глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;
	Иначе
		АвансВал = 0;
	КонецЕсли;
	Если ДвиженияПартии() = 0 Тогда
		глТбОперация.УдалитьСтроки();
		глНеПроводить(Контекст);
		Возврат;
	КонецЕсли;	    
	
	ДвиженияРезерв();
	
	Если ДатаДок < '01.03.2010' Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если ПроверкаСтроки()=0 Тогда
				глТбОперация.УдалитьСтроки();
				глНеПроводить(Контекст);
				Возврат;
			КонецЕсли;
			
			Регистр.План.ТМЦ = ТМЦ;
			Регистр.План.Контрагент = Контрагент;
			Регистр.План.Кол = Кво*Коэффициент;
			Регистр.План.ДвижениеРасходВыполнить();
			
			Если ВидТорговли = Перечисление.ВидыТорговли.Давал Тогда		
				КодОперации = ПередачаВДавальческуюПереработку;
				глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, ТМЦ.Счет, МестоХранения, "", 
				"", "", Кво*Коэффициент, СуммаБезНДС, 0, КодОперации, 0, 0, 0, , "",,);
				
				//Проведем по оборотам
				Регистр.Обороты.ПривязыватьСтроку(НомерСтроки);
				Регистр.Обороты.Фирма = Фирма;
				Регистр.Обороты.Счет = "2093";
				Регистр.Обороты.ТМЦ = ТМЦ;
				Регистр.Обороты.Поставщик = "";
				Регистр.Обороты.Покупатель = Контрагент;
				Регистр.Обороты.КаналПродаж = Контрагент.КаналПродаж;
				Регистр.Обороты.ВидДеятельности = ТМЦ.ВидДеятельности;
				Регистр.Обороты.КодОперации = КодОперации;
				Регистр.Обороты.Партия		 = "";
				Регистр.Обороты.ВидУпаковки = НетУп;
				Регистр.Обороты.Признак	 = "";
				Регистр.Обороты.ПриходКво = - Кво*Коэффициент;
				Регистр.Обороты.ПриходСум = - СуммаБезНДС;
				Регистр.Обороты.РасходКво = 0;
				Регистр.Обороты.РасходСум = 0;
				Регистр.Обороты.ДвижениеВыполнить();			
				глПровестиПартию(Контекст, 1, 0, Фирма, ТМЦ, СчетПоКоду("2093"), Контрагент, "", 
				"", "", Кво*Коэффициент, СуммаБезНДС, 0, КодОперации, 0, 0, 0, , "",,);
				глПроводка(Контекст,"2093",ТМЦ.Счет,СуммаБезНДС,"Себестоимость",Кво*Коэффициент,Контрагент,ТМЦ,,
				МестоХранения,ТМЦ,"", ,,"НК",1,0);				
				
			КонецЕсли;			
		КонецЦикла;	
	КонецЕсли;
	
	глНачислитьБонусы(Контекст, Контрагент, Договор, 1);	
	глНачислитьБонусыПоТМЦ(Контекст);
	глЗаполнитьРеетсрАвтоперевозок(Контекст);//--- УМК Сандомирский В.Ю, (19.06.14) заполнение реестра Автоперевозок	
	//глОборотыУпаковок(Контекст,1); //--- УМК Сандомирский В.Ю, (10.02.14) оборот суммы упаковок // --- 1 расход //--- 2 Возврат
	
	Если (ФлагКонтрагентВзаимозачета = 1) ИЛИ 
	((ФлагКонтрагентВзаимозачета = 0) И (ПустоеЗначение(ДокументВзаимозачета)<>1)) Тогда //--- УМК Сандомирский В.Ю, (04.11.14)		
		СформироватьВзаимозачет();			
	КонецЕсли;
	
	РежимПроведения=0;	
	глЗаписатьПроводкиВОперацию(Контекст);
	Операция.СуммаОперации = Итог("СуммаСНДС");
	Операция.Содержание = Примечание;
	Если (ФлагКонтрагентВзаимозачета = 1) И (Контрагент.КонтрагентВзаимозачета.Вид() = "Сотрудники") Тогда
		// нужно закрыть взаиморасчеты по покупателям и выполнить перезачёт на контрагента
		Регистр.ВзаиморасчетыПокупателей.ДвижениеРасход(Фирма, Контрагент, ПервыйДок, ВидНДС, ДокументОснование, ТекущийДокумент(), Валюта,
		Итог("СуммаСНДС"), Итог("СуммаСНДС"), ПерезачетВзаиморасчетов, Итог("СуммаСНДС"), Итог("НДС"), 1);
		
		глПроводка(Контекст,СчетПоКоду("661"),"361",Итог("СуммаСНДС") ,"Взаимозачет на зарплату",0 , Контрагент.КонтрагентВзаимозачета, НачМесяца(ДатаДок),,
		Контрагент,ПервыйДок,, ,,"ЗП",0,0);
	КонецЕсли;
	
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
	
	//--- УМК Сандомирский В.Ю. (26.05.15) --- отправка сообщений о техотходах
	Если (ФлагКонтрагентВзаимозачета = 0) И (ФлагВДолг = 1) И (ОтправленоСообщение = 0 )Тогда	
		ТемаПисьма = "Произведите взаимозачет, отгружены техотходы из " + СокрЛП(Строка(ТекущийДокумент()));
		ТекстПисьмаОкончательный = "Произведите взаимозачет, отгружены техотходы из " + СокрЛП(Строка(ТекущийДокумент())) + " контрагенту : " + СокрЛП(Строка(Контрагент)) + " на сумму: " + Формат(Итог("СуммаСНДС"),"Ч12.2");
		глОтправитьУведомлениеЭП("ОтгруженыТехотходы", ТемаПисьма , ТекстПисьмаОкончательный);	
		ОтправленоСообщение = 1;
	КонецЕсли;
	
	// + umk
	ДвижениеТоварыВРознице();
	// - umk
	
	НачатьТранзакцию();
	Если СтатусВозврата() = 1 Тогда
		глУстановитьЦеныПоСписку(Контекст, СписДляУстановкиЦен, Валюта);
	КонецЕсли;
	глСортироватьТабличнуюЧасть(Контекст);
	
	ЗафиксироватьТранзакцию();	
КонецПроцедуры

// ===============================
Процедура ОбработкаУдаленияПроведения()	
	Если глСвертка <> "Истина" Тогда //--- УМК Сандомирский В.Ю. (13.03.15) в время свертки ниче не делаем , прсто помечаем			
		РежимПроведения=0;
		
		глЗаполнитьРеетсрАвтоперевозок(Контекст,1);//--- УМК Сандомирский В.Ю, (23.10.14) удаление из реестра Автоперевозок		
		//--- УМК Сандомирский В.Ю. (04.11.14) Удаляем документ взаимозачетов если есть
		Если ПустоеЗначение(ДокументВзаимозачета) <> 1 Тогда
			ДокВзаимозачета = СоздатьОбъект("Документ.УМК_ПерезачетСписком");
			ДокВзаимозачета.НайтиДокумент(ДокументВзаимозачета);
			Если ДокВзаимозачета.Проведен() = 1 Тогда
				ДокВзаимозачета.СделатьНеПроведенным();		
			КонецЕсли;
			ДокВзаимозачета.Удалить(0);
		КонецЕсли;
		
		//--- УМК Сандомирский В.Ю, (10.04.15)		
		Если ПустоеЗначение(УМК_РН_Родитель) <> 1 Тогда			
			//--- есть родительская РН но непонятно открыта она или нет поэтому через попытку 
			ЕдВеса = Константа.ЕдиницаВеса;
			
			Попытка //--- пересчитать родительскую накладну.			
				УМК_РН_РодительИтогоВес = 0;
				УМК_РН_Родитель.ВыбратьСтроки();
				Пока УМК_РН_Родитель.ПолучитьСтроку() = 1 Цикл	
					ВычитатьВес = 1 - УМК_РН_Родитель.ТМЦ.ВычитатьВесУпаковки.Получить(ДатаДок);
					//			ВычитатьВес = ?(УМК_РН_Родитель.СоздатьПеремещение <>  Да, 0, ВычитатьВес);		//++ 2015.11.20
					
					Если УМК_РН_Родитель.Ед.Единица = ЕдВеса Тогда
						УМК_РН_РодительИтогоВес = УМК_РН_РодительИтогоВес + УМК_РН_Родитель.Кол + УМК_РН_Родитель.ВесУп * ВычитатьВес;
					Иначе
						УМК_РН_РодительИтогоВес = УМК_РН_РодительИтогоВес + УМК_РН_Родитель.Кол * УМК_РН_Родитель.ТМЦ.Вес + УМК_РН_Родитель.ВесУп * ВычитатьВес;
					КонецЕсли;		
				КонецЦикла;
				
				УМК_РН_РодительОбъект = СоздатьОбъект("Документ.РасходнаяНакладная");
				УМК_РН_РодительОбъект.НайтиДокумент(УМК_РН_Родитель);
				УМК_РН_РодительОбъект.ИтогоВес = УМК_РН_РодительИтогоВес;
				
				УМК_РН_РодительОбъект.Записать();				
			Исключение 			
				Сообщить(ОписаниеОшибки());			
			КонецПопытки;						
			ИтогоВес = 0;			
		КонецЕсли;	
	КонецЕсли;
	
	НачатьТранзакцию();
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если (СоздатьПеремещение = Да) ИЛИ (ДатаДок >= '23.02.2019') Тогда
			СписДок = СоздатьОбъект("СписокЗначений");
			
			Док = СоздатьОбъект("Документ");
			ДокП = СоздатьОбъект("Документ.Перемещение");
			Док.ВыбратьПодчиненныеДокументы(,, ТекущийДокумент());
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если (Док.Вид() = "Перемещение") И (Док.Проведен() = 1) Тогда
					СписДок.ДобавитьЗначение(Док.ТекущийДокумент());
				КонецЕсли;
			КонецЦикла;
			
			Для Инд = 1 По СписДок.РазмерСписка() Цикл
				ДокП.НайтиДокумент(СписДок.ПолучитьЗначение(Инд));
				ДокП.СделатьНеПроведенным();					
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ЗафиксироватьТранзакцию();	
КонецПроцедуры

ДатаНачалаФормированияПеремещенийПоМаркировке = '01.06.2019';
СписыватьМатериалУпаковки = 0;// + umk
СписыватьМатериалУпаковкиИсключения = 0;// + umk
КассовыйМетодБонусы = ?((ПустоеЗначение(Константа.КассовыйМетодРасчетаБонусов)=0) И (ДатаДок>=Константа.КассовыйМетодРасчетаБонусов),1,0); // + umk
СписыватьСкидкиНаВесВУчете = ?((ПустоеЗначение(Константа.СписыватьСкидкиНаВесВУчете)=0) И (ДатаДок>=Константа.СписыватьСкидкиНаВесВУчете),1,0); // + umk

