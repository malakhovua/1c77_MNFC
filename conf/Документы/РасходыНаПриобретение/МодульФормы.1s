Перем НачальнаяДатаДокумента;

// ======================================
Процедура ИзмНДС()
	СуммаСНДС = СуммаБезНДС + НДС;
КонецПроцедуры 

// ======================================
Процедура ИзмВидНДС()
	НДС = СуммаБезНДС * ВидНДС.Ставка.Получить(ДатаДок);
	ИзмНДС();
КонецПроцедуры 

// ======================================
Процедура ИзмСуммаБезНДС()
	НДС = СуммаБезНДС * ВидНДС.Ставка.Получить(ДатаДок);
	ИзмНДС();
КонецПроцедуры 

// ======================================
Процедура ИзмСуммаБезНДСВал()
	СуммаБезНДС = глПересчет(СуммаБезНДСВал, Валюта, Гривня, Курс, ДатаДок);
	ИзмСуммаБезНДС();
КонецПроцедуры 

// ======================================
Процедура ИзмВалюта()
	Курс = Валюта.Курс.Получить(ДатаДок);
	ИзмСуммаБезНДСВал();
КонецПроцедуры 
            
// ======================================
Процедура ИзмСубконто2()
	Если ПустоеЗначение(Субконто2) = 1 Тогда
		Возврат;
	КонецЕсли;	
	Если Субконто2.Вид() = "ТМЦ" Тогда
		Если Субконто2.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			глКомментарий("Нельзя выбирать услугу!",1);
			Субконто2 = 0;
		ИначеЕсли Субконто2.ВидТМЦ = Перечисление.ВидыТМЦ.Набор Тогда
			глКомментарий("Нельзя выбирать набор!",1);
			Субконто2 = 0;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры 

// ======================================
Процедура ИзмСчет()
	Если ПустоеЗначение(Счет) = 1 Тогда
		Возврат;
	КонецЕсли;
	// можно выбирать только счет взаиморасчетов, произвольный коичественный счет 
	// или счет учета налогов, для включения суммы непрямых налогов
	Если (Счет.Количественный = 0) 
	И (глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 0) 
	И (Счет.ПринадлежитГруппе(СчетПоКоду("64"))  = 0) 
	И (глЭтоСчетТЗР(Счет) = 0) Тогда
		глКомментарий("Нельзя выбирать счет "+Счет+" !",1);
		Счет = 0;           
		Возврат;        
	КонецЕсли;
	Для Инд = 1 По 3 Цикл
		НазначитьТип("Субконто"+Инд,Счет.ВидСубконто(Инд));
	КонецЦикла;            
	Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда   
		НазначитьТип("Субконто1","Справочник.Контрагенты");
		НазначитьТип("Субконто2","Документ");
		Субконто2 = ПолучитьПустоеЗначение("Документ");
	КонецЕсли;	
	Если Счет.Количественный=0 Тогда
		Кво = 0;  
	Иначе
		Субконто2 = ПолучитьПустоеЗначение();
		Субконто3 = ПолучитьПустоеЗначение();
	КонецЕсли;  
	
	// Для счетов, по которым нет аналитики по контрагентам и заказам НДС вообще не должен быть
	Если (Счет.ВидСубконто(1)<>ВидыСубконто.Контрагенты) или (Счет.ВидСубконто(2)<>ВидыСубконто.Договора) Тогда
		Спр = СоздатьОбъект("Справочник.ШкалаСтавок");
		Если Спр.НайтиПоКоду("БезНДС") = 1 Тогда
	    	ВидНДС = Спр.ТекущийЭлемент();
		КонецЕсли; 
	Иначе
		ВидНДС = глВосстановитьЗначение(,"БазНДС");
	КонецЕсли;
	ИзмВидНДС();      
	
	Если Счет.Валютный=0 Тогда
		Валюта = Гривня;
		ИзмВалюта();
		СуммаБезНДСВал = 0;
		ИзмСуммаБезНДСВал();
	КонецЕсли;
КонецПроцедуры 

// ===============================
Процедура ИзмСпособРаспределения()
	Если ПриходнаяНакладная.Вид() = "ПриходнаяНакладнаяПрочие" Тогда
		Если (ПриходнаяНакладная.ЧтоПриходуем <> Перечисление.ЧтоПриходуем.ТМЦ) 
		И (СпособРаспределения = Перечисление.СпособыРаспределенияДополнительныхРасходов.ПоВесу) Тогда
			Предупреждение("Если приходуются "+ПриходнаяНакладная.ЧтоПриходуем+", распределение затрат по весу невозможно.");
			ПриходнаяНакладная = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмДатаДок()
КонецПроцедуры

// ===============================
Процедура ИзмПриходнаяНакладная()          
	Если ПустоеЗначение(ПриходнаяНакладная) = 0 Тогда
		Если ПриходнаяНакладная.Фирма <> Фирма Тогда
			глКомментарий("Нельзя выбирать приходну накладаную, выписанную на другую фирму",1);
			ПриходнаяНакладная = 0;
			Возврат;
		ИначеЕсли глЕстьРеквизитШапки("ДавальческоеСырье", ПриходнаяНакладная.Вид()) = Да Тогда
			Если ПриходнаяНакладная.ДавальческоеСырье = 1 Тогда
				глКомментарий("Нельзя выбирать приходну накладаную на давальческое сырье.",1);
				ПриходнаяНакладная = 0;
				Возврат;
			КонецЕсли;
		КонецЕсли;	
		ИзмСпособРаспределения();
	КонецЕсли;	
КонецПроцедуры

// ======================================
Процедура ПриРедактированииНовойСтроки()
	ВидНДС = глВосстановитьЗначение(,"БазНДС");
	Валюта = Гривня;
	Курс = Валюта.Курс.Получить(ДатаДок);
	УказанаПредварительнаяОплата = Нет;        
КонецПроцедуры

// ===============================
// Назначение:
//		Проверяет соответствие контрагента, договора и Документа-основания
Функция ПроверкаСоответствия(Контрагент,Договор,ДокументОснование)
	фСоответствует=1;
	
	Если (ПустоеЗначение(Договор)=0) и (ПустоеЗначение(Контрагент)=0) Тогда
	    Если Договор.Контрагент <> Контрагент Тогда
	        фСоответствует=0;
	    КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(ДокументОснование)=0 Тогда
		Если ПустоеЗначение(Контрагент)=0 Тогда
			Если глЕстьРеквизитШапки("Контрагент",ДокументОснование.Вид()) = Да Тогда
				Если ДокументОснование.Контрагент <> Контрагент Тогда
					фСоответствует=0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ПустоеЗначение(Договор)=0 Тогда
			Если глЕстьРеквизитШапки("Договор",ДокументОснование.Вид()) = Да Тогда
				Если ДокументОснование.Договор <> Договор Тогда
					фСоответствует=0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат фСоответствует;
КонецФункции //ПроверкаСоответствия

// ======================================
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Если Рекв = "ВидНДС" Тогда
	    Флаг = 0;
		глВыбратьНДС(Контекст,,Счет.Валютный);
		ИзмВидНДС();
	ИначеЕсли Рекв = "Субконто2" Тогда
		Если Счет.ВидСубконто(2) = ВидыСубконто.Договора Тогда
			Фрм = СоздатьОбъект("СписокЗначений");
			Фрм.ДобавитьЗначение(Субконто1,"Контрагент");
			Фрм.ДобавитьЗначение(1,"фРазрешатьПустогоКонтрагента");
			Фрм.ДобавитьЗначение("ДоговораКонтрагентов","ГрафаОтбора");
			ОткрытьФормуМодально("Журнал.ПолныйЖурнал.ДляВыбораДоговоровИСчетов",Фрм,);
			Субконто2 = Фрм.Получить("Документ");                                
			Если ПустоеЗначение(Субконто2) = 0 Тогда
				Если Субконто2.Фирма <> Фирма Тогда
					глКомментарий("Договор принадлежит другой фирме!",1,,"!");
					Субконто2 = ПолучитьПустоеЗначение("Документ");
					СтатусВозврата(0);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			Если ПустоеЗначение(Субконто2) = 0 Тогда
				Субконто1 = Субконто2.Контрагент;    
			КонецЕсли;
			Флаг = 0;
			ДокументДоговор = Субконто2;
		КонецЕсли;
	ИначеЕсли Рекв = "Субконто3" Тогда
		Если (Счет.ВидСубконто(3) = ВидыСубконто.Партии) и (Счет.ВидСубконто(1) = ВидыСубконто.МестаХранения) Тогда
			глМестоХранения = Субконто1;
		КонецЕсли;
	ИначеЕсли Рекв = "СубконтоВалРасх" Тогда
		Если ПустоеЗначение(СубконтоВалРасх) = 1 Тогда
			ГрВалРасх = СоздатьОбъект("Справочник.ВалДоходыРасходы");
			Если ГрВалРасх.НайтиПоНаименованию("Валовi витрати",0,1) = 1 Тогда
				СубконтоВалРасх.ИспользоватьРодителя(ГрВалРасх.ТекущийЭлемент());
			КонецЕсли;
			ГрВалРасх = 0;
		КонецЕсли;
	ИначеЕсли Рекв = "ДокументОснование" Тогда
		ФлагСтандОбр = 0;
		Фрм = СоздатьОбъект("СписокЗначений");
		Фрм.ДобавитьЗначение(Субконто1,"Контрагент");
		Фрм.ДобавитьЗначение("СчетаКонтрагентов","ГрафаОтбора");
		Фрм.ДобавитьЗначение(1,"фРазрешатьПустогоКонтрагента");
		ОткрытьФормуМодально("Журнал.ПолныйЖурнал.ДляВыбораДоговоровИСчетов",Фрм,);
		ВремДокументОснование = Фрм.Получить("Документ");
		Если ПустоеЗначение(ВремДокументОснование) = 0 Тогда
			Если ВремДокументОснование.Фирма <> Фирма Тогда
				глКомментарий("Документ-основание принадлежит другой фирме!",1,,"!");
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;

		Если ПроверкаСоответствия(Субконто1,Субконто2,ВремДокументОснование)=0 Тогда
			Предупреждение("Документ основание не соответствует Договору.");
		Иначе
			ДокументОснование = ВремДокументОснование;
		КонецЕсли;
		
		Если ПустоеЗначение(ДокументОснование) = 0 Тогда
			Если ПустоеЗначение(Субконто1)=1 Тогда
				Субконто1 = ДокументОснование.Контрагент;
			КонецЕсли;
			Если ПустоеЗначение(Субконто2)=1 Тогда
				Попытка
					Субконто2 = ДокументОснование.Договор;
				Исключение КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
		Флаг = 0;
	КонецЕсли;
КонецПроцедуры 

// ======================================
Процедура ПриОткрытии()
	НачальнаяДатаДокумента = ДатаДок;
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	ПриЗаписиПерепроводить(1);
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
//		Форма.кДействия.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;	
	глПроверкаДатыДок(Контекст,"Открытие");                                    
	ПриходнаяНакладная.ВидыДляВыбора("ПриходнаяНакладнаяЗапасы,ПриходнаяНакладнаяПрочие,ПриходнаяНакладнаяГТД");	
	Если ПустоеЗначение(СпособРаспределения) = 1 Тогда
		СпособРаспределения = Перечисление.СпособыРаспределенияДополнительныхРасходов.ПоСумме;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	Автор = глПользователь;
	глПроверкаДатыДок(Контекст,"Запись");
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
			// нам нужны только счета 36 и 63
			ОтборСчетаКонтрагент = ?(ПустоеЗначение(ДокументОснование)=1, Субконто1, 0);			
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

// ======================================
Процедура ВводНаОсновании(Док)
	Фирма = Док.Фирма;
	глУстановитьНомер(Контекст);
	ПриходнаяНакладная = Док;
	ИзмПриходнаяНакладная();	
КонецПроцедуры 

// ======================================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования=1 Тогда
		глУстановитьНомер(Контекст);
		ИзмПриходнаяНакладная();		
		Возврат;
	КонецЕсли;                         
	глУстановитьФирму(Контекст);
КонецПроцедуры 

// ===============================
Функция УстДоступность()
	Форма.Заголовок(глЗаголовок(Контекст,"Расходы на приобретение"));
	Форма.Кво.Доступность(Счет.Количественный);
	Форма.Валюта.Доступность(Счет.Валютный);
	Форма.Курс.Доступность(0);
	Форма.СуммаБезНДСВал.Доступность(Счет.Валютный);
	Форма.СуммаБезНДС.Доступность(1-Счет.Валютный);
	// Для счетов, по которым нет аналитики по контрагентам и заказам НДС вообще не должен быть
	Если (Счет.ВидСубконто(1)<>ВидыСубконто.Контрагенты) или (Счет.ВидСубконто(2)<>ВидыСубконто.Договора) Тогда
		// кроме счетов учета налогов и ТЗР
		Если (глЭтоСчетТЗР(Счет) = 0) и (Счет.ПринадлежитГруппе(СчетПоКоду("64")) = 0) Тогда
			Форма.СуммаБезНДС.Доступность(0);
		КонецЕсли;
		Форма.НДС.Доступность(0);
		Форма.ВидНДС.Доступность(0);
	Иначе
		Форма.СуммаБезНДС.Доступность(1);
		Форма.НДС.Доступность(1);
		Форма.ВидНДС.Доступность(1);
	КонецЕсли;	
	Если ((глСчетаУчетаТоваров.Принадлежит(Число(Счет.Код)) = 1)
	ИЛИ (глСчетаУчетаЗапасов.Принадлежит(Число(Счет.Код)) = 1)
	ИЛИ (глСчетаУчетаПродукции.Принадлежит(Число(Счет.Код)) = 1)) Тогда
		Форма.СуммаСНДС.Доступность(0);
	Иначе
		Форма.СуммаСНДС.Доступность(1);
	КонецЕсли;			
	Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
		Форма.ДокументОснование.Доступность(1);
	Иначе
		Форма.ДокументОснование.Доступность(0);
	КонецЕсли;	
	Возврат "";
КонецФункции                                                                   


//====================================================================== УМК Сандомирский В.Ю. (*) //--- заголовок FormEx_ПланРаскраски
Функция Раскраска()
	ТекстПлана = "(BRUSH_S[" + Строка(100*255*100) + "])()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	Возврат  ТекстПлана;	
КонецФункции



// ===============================
// Инициализируем список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные");