Перем тбОприходованныеТМЦ, РазницаБезНДС, РазницаНДС;
Перем СчетНДС, СубконтоНДС1, СубконтоНДС2, СуммаО, СуммаГрнО;
Перем РеквТовар;                     
Перем тбПриходнаяНакладная;
Перем фНДСНаЗатраты;

Перем тбВтороеСобытие; 
Перем тбТовары; 
Перем тбПартии;

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
	глВыбранЛи(Фирма,"Фирма");
	глВыбранЛи(ПриходнаяНакладная,"Приходная накладная");
	глВыбранЛи(СпособРаспределения,"Способ распределения");
	Если глВсеВыбрано=1 Тогда
		Если ПриходнаяНакладная.Проведен()=0 Тогда
			глКомментарий("Выбранная приходная накладная не проведена!",0,,"!");
			глВсеВыбрано = 0;
		ИначеЕсли ПриходнаяНакладная.Итог("СуммаБезНДС")=0 Тогда
			глКомментарий("Итоговая сумма без НДС в выбранной приходной накладной равна 0. Невозможно распределять расходы.",0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	глПроверкаНДСВДокументе(Контекст, Итог("СуммаБезНДС"), Итог("СуммаСНДС"), Итог("НДС"));
    Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
	Перем фСчетаПоставщиковПокупателей;
	фСчетаПоставщиковПокупателей = глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код));
    глВсеВыбрано = 1;                                       
    глВыбранЛи(Счет,"Сумма без НДС",СуммаБезНДС);
    глВыбранЛи(Счет,"Счет",НомерСтроки);
	глВыбранЛи(ВидНДС,"Вид НДС",НомерСтроки);
	Если глВсеВыбрано = 1 Тогда
		Для Инд = 1 По Счет.КоличествоСубконто() Цикл
			Если (фСчетаПоставщиковПокупателей = 1)
			И (Инд = 2) Тогда
				// Субконто Договор может быть пустым
				Продолжить;
			КонецЕсли;
			глВыбранЛи(ПолучитьАтрибут("Субконто"+Инд),"Субконто "+Инд,НомерСтроки);
		КонецЦикла;
		Если Счет.Валютный=1 Тогда
	    	глВыбранЛи(Валюта,"Валюта",НомерСтроки);
			Если (глВсеВыбрано = 1) 
			И (ВидНДС <> неНДС) 
			И (фСчетаПоставщиковПокупателей = 1) Тогда				
				// взаиморасчеты с поставщиком жестко ведутся по ставке безНДС, НДС уплачивается таможне
				глКомментарий("В строке "+НомерСтроки+" списание валютной задолженности на себестоимость должно проходить по ставке НДС """+неНДС+"""!",0,,"!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;   
		Если Счет.Количественный=1 Тогда	    	
    		глВыбранЛи(Кво,"Кво",НомерСтроки);
		КонецЕсли;		
		Если Счет.ВидСубконто(2) = ВидыСубконто.Договора Тогда
	    	глВыбранЛи(СубконтоВалРасх,"Субконто валовых расходов",НомерСтроки);
		КонецЕсли;
	КонецЕсли;
    Возврат глВсеВыбрано;
КонецФункции
                                                      
// Функция предназначена ТОЛЬКО для строк в которых укзан счет валютный счет вазиморасчетов
// Назначение: пересчитывает гривневую сумму с учетом курса аванса
// Параметры: 	Сумма 		- сумма в алюте
//				СуммаОсн 	- гривневая сумма по текущему курсу
// ===========================
Функция ПересчитатьСуммуПоАвансу(Сумма,СуммаОсн)
	Перем НоваяСумма;
	НоваяСумма = СуммаОсн;
	// если валютный счет взаиморасчетов, то необходимо откорректировать сумму 
	// с учетом возможного аванса в валюте
	Если (глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1)
	И (Счет.Валютный = 1) Тогда 
		// найдем нужную строку в таблице авансов
		текКонтрагентДоговор = ЗначениеВСтроку(Субконто1)+"|"+ЗначениеВСтроку(Субконто2);
		текНомСтр = 0;
		Если тбВтороеСобытие.НайтиЗначение(текКонтрагентДоговор,текНомСтр,"КонтрагентДоговор") = 1 Тогда
			тбВтороеСобытие.ПолучитьСтрокуПоНомеру(текНомСтр);
			СтавкаНДС = ВидНДС.Ставка.Получить(ДатаДок);
			// нужно изменить стоимоть в таблице в соответствии курсом авансом
			кАванса = ?(СуммаБезНДСВал = 0,0,тбВтороеСобытие.СуммаПоставщика*((100+СтавкаНДС)/100)/СуммаБезНДСВал); // часть аванса в себестоимости
			Если кАванса<>0 Тогда
			    КурсАванса = ?(ПустоеЗначение(тбВтороеСобытие.СуммаПоставщика)=1,0,тбВтороеСобытие.СуммаПоставщикаОсн/тбВтороеСобытие.СуммаПоставщика);
			Иначе
				КурсАванса = 0;
			КонецЕсли;							
		КонецЕсли;	
		НоваяСумма = Сумма* кАванса * КурсАванса + СуммаОсн* (1 - кАванса);		
	КонецЕсли;			              
	Возврат НоваяСумма;
КонецФункции

// ======================================
Процедура ОпределитьАналитикуПоТМЦ()
	Товар = тбПриходнаяНакладная.ПолучитьЗначение(тбПриходнаяНакладная.НомерСтроки,РеквТовар);	
	СчетТМЦ = Товар.Счет;
	// определим субконто по счету ТМЦ
	Если СчетТМЦ.КоличествоСубконто() = 3 Тогда
		Если Товар.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
	    	тбОприходованныеТМЦ.Субконто1 = Товар.ВидДеятельности; 
	    	тбОприходованныеТМЦ.Субконто3 = Товар.ВидЗатрат;
		Иначе	
			тбОприходованныеТМЦ.Субконто1 = ПриходнаяНакладная.МестоХранения;
			Если глЕстьРеквизитШапки("ЧтоПриходуем", ПриходнаяНакладная.Вид()) = Да Тогда
				Если ПриходнаяНакладная.ЧтоПриходуем = Перечисление.ЧтоПриходуем.БланкиСтрогойОтчетности Тогда
				    тбОприходованныеТМЦ.Субконто2 = Товар.Субконто;
				КонецЕсли;	
			Иначе
			    тбОприходованныеТМЦ.Субконто2 = Товар;
			КонецЕсли;    
			Партия = 0;
		    Если глПолучитьМетодРасчетаСебестоимости(Товар,ПриходнаяНакладная.ДатаДок) <> Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
				Партия = ПриходнаяНакладная;
			КонецЕсли;
			тбОприходованныеТМЦ.Субконто3 = Партия;
		КонецЕсли;	
	ИначеЕсли СчетТМЦ.КоличествоСубконто() = 2 Тогда
		Если глЕстьРеквизитШапки("ЧтоПриходуем", ПриходнаяНакладная.Вид()) = Нет Тогда
			Если Товар.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		    	тбОприходованныеТМЦ.Субконто1 = Товар.ВидДеятельности; 
		    	тбОприходованныеТМЦ.Субконто3 = Товар.ВидЗатрат;
			Иначе	
				тбОприходованныеТМЦ.Субконто1 = ПриходнаяНакладная.МестоХранения;
		    	тбОприходованныеТМЦ.Субконто2 = Товар;
			КонецЕсли;	
		ИначеЕсли ПриходнаяНакладная.ЧтоПриходуем = Перечисление.ЧтоПриходуем.БланкиСтрогойОтчетности Тогда
			// 33 счет
			тбОприходованныеТМЦ.Субконто1 = ПриходнаяНакладная.МестоХранения;
			тбОприходованныеТМЦ.Субконто2 = Товар.Субконто;
		ИначеЕсли ПриходнаяНакладная.ЧтоПриходуем = Перечисление.ЧтоПриходуем.ПрочиеНеоборотныеАктивы Тогда
			// прочие необоротные активы сразу на 18 счет
			тбОприходованныеТМЦ.Субконто1 = ПриходнаяНакладная.МестоХранения;
			тбОприходованныеТМЦ.Субконто2 = Товар;
		КонецЕсли;
		тбОприходованныеТМЦ.Субконто3 = 0;
	Иначе
		Если глЕстьРеквизитШапки("ЧтоПриходуем", ПриходнаяНакладная.Вид()) = Нет Тогда
			Если Товар.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
		    	тбОприходованныеТМЦ.Субконто1 = Товар.ВидДеятельности; 
			Иначе	
		    	тбОприходованныеТМЦ.Субконто1 = 0;
			КонецЕсли;	
		Иначе	
			тбОприходованныеТМЦ.Субконто1 = Товар;
		КонецЕсли;	
		тбОприходованныеТМЦ.Субконто2 = 0;
		тбОприходованныеТМЦ.Субконто3 = 0;
	КонецЕсли;
КонецПроцедуры 

// ======================================
Процедура РассчитатьСтрокуПоСумме()
	Перем ОкрСуммаБезНДС, ОкрНДС;                 
	ОкрСуммаБезНДС = 0;         
	ОкрНДС = 0;
	// сумму указанного в текущей строке документа конкретного расхода распределим
	// между всеми ТМЦ в табличной части ПриходнойНакладной пропорционально сумме без НДС
	тбОприходованныеТМЦ = 0;
	тбОприходованныеТМЦ = СоздатьОбъект("ТаблицаЗначений");
	тбОприходованныеТМЦ.НоваяКолонка("СуммаДопРасхода","Число",12,2);
	тбОприходованныеТМЦ.НоваяКолонка("СуммаДопРасходаВал","Число",12,2);
	тбОприходованныеТМЦ.НоваяКолонка("Субконто1");
	тбОприходованныеТМЦ.НоваяКолонка("Субконто2");
	тбОприходованныеТМЦ.НоваяКолонка("Субконто3");
	СтавкаНДС = ВидНДС.Ставка.Получить(ДатаДок);
	// пересчитаем сумму в стороке с учетом возможного аванса в валюте
	текСуммаСНДС = ПересчитатьСуммуПоАвансу(СуммаБезНДСВал*(100+СтавкаНДС)/100,СуммаСНДС);
	текСуммаБезНДС = ?(фНДСНаЗатраты = 1, текСуммаСНДС, ПересчитатьСуммуПоАвансу(СуммаБезНДСВал,СуммаБезНДС));
	тбПриходнаяНакладная.ВыбратьСтроки();
	Пока тбПриходнаяНакладная.ПолучитьСтроку()=1 Цикл
		Товар = тбПриходнаяНакладная.ПолучитьЗначение(тбПриходнаяНакладная.НомерСтроки,РеквТовар);		
		тбОприходованныеТМЦ.НоваяСтрока();                  
		Коэф = тбПриходнаяНакладная.СуммаБезНДС/тбПриходнаяНакладная.Итог("СуммаБезНДС");
		// если нет права на налоговый кредит, то и НДС по дополнительным расходам отнесем на себестоимость
		тбОприходованныеТМЦ.СуммаДопРасхода = Окр(текСуммаБезНДС * Коэф, 2);
		Если Товар.Вид() = "ТМЦ" Тогда
			// только если это ТМЦ
			тбТовары.НоваяСтрока();
			тбТовары.Товар = Товар;
			тбТовары.СуммаБезНДС = Окр(текСуммаБезНДС * Коэф, 2);
			ОкрСуммаБезНДС = ОкрСуммаБезНДС + Окр(текСуммаБезНДС * Коэф, 2);
			тбТовары.СуммаНДС = Окр(НДС * Коэф, 2);		
			ОкрНДС = ОкрНДС + Окр(НДС * Коэф, 2);
		КонецЕсли;
		тбОприходованныеТМЦ.СуммаДопРасходаВал = Окр(СуммаБезНДСВал * Коэф, 2);
		ОпределитьАналитикуПоТМЦ();
	КонецЦикла;
	// если возникли ошибки округлений, то дельту - в последнюю строку
	тбОприходованныеТМЦ.ПолучитьСтрокуПоНомеру(тбОприходованныеТМЦ.КоличествоСтрок());                                                                                                                 
	тбОприходованныеТМЦ.СуммаДопРасхода = тбОприходованныеТМЦ.СуммаДопРасхода + (текСуммаБезНДС - тбОприходованныеТМЦ.Итог("СуммаДопРасхода"));
	тбОприходованныеТМЦ.СуммаДопРасходаВал = тбОприходованныеТМЦ.СуммаДопРасходаВал + (СуммаБезНДСВал - тбОприходованныеТМЦ.Итог("СуммаДопРасходаВал"));
	// если возникли ошибки округлений, то дельту - в последнюю строку
	Если тбТовары.КоличествоСтрок() > 0 Тогда
		тбТовары.ПолучитьСтрокуПоНомеру(тбТовары.КоличествоСтрок());
		тбТовары.СуммаБезНДС = тбТовары.СуммаБезНДС + (текСуммаБезНДС - ОкрСуммаБезНДС);
		тбТовары.СуммаНДС = тбТовары.СуммаНДС + (НДС - ОкрНДС);			
	КонецЕсли;
	СчетНДС = СчетПоКоду("6415");
	СубконтоНДС1 = ВидНДС;
	СубконтоНДС2 = 0;
	Если Счет.ВидСубконто(2) = ВидыСубконто.Договора Тогда
		Если фНДСНаЗатраты <> 1 Тогда
			// налоговый кредит
			Если (Константа.НДСпоВходящимНН = Да) и (Валюта = Гривня) Тогда
				// проводку по налоговому кредиту сделаем в документе ЗаписьКнигиПриобретения
				СчетНДС = СчетПоКоду("6442");
				СубконтоНДС1 = Субконто1;
				СубконтоНДС2 = Субконто2;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если (Валюта <> Гривня) 
	И (глПроверитьСчетВзаиморасчетов(Счет)=0) Тогда
		// переоценим валютный счет
		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = Счет;
		глТаблицаСчетов.Субконто1 = Субконто1;
		глТаблицаСчетов.Субконто2 = Субконто2;
		глТаблицаСчетов.Субконто3 = Субконто3;
		глТаблицаСчетов.Валюта = Валюта;
		глТаблицаСчетов.ОперационнаяКР = 1;
		глТаблицаСчетов.ВидДеятельности = ПолучитьПустоеЗначение("Справочник.ВидыДеятельности");		
	КонецЕсли;
КонецПроцедуры 

// ======================================
Процедура РассчитатьСтрокуПоВесу()    
	Перем ОкрСуммаБезНДС, ОкрНДС;                 
	ОкрСуммаБезНДС = 0;         
	ОкрНДС = 0;
	// сумму указанного в текущей строке документа конкретного расхода распределим
	// между всеми ТМЦ в табличной части ПриходнойНакладной пропорционально сумме без НДС
	тбОприходованныеТМЦ = 0;
	тбОприходованныеТМЦ = СоздатьОбъект("ТаблицаЗначений");
	тбОприходованныеТМЦ.НоваяКолонка("СуммаДопРасхода","Число",12,2);
	тбОприходованныеТМЦ.НоваяКолонка("СуммаДопРасходаВал","Число",12,2);
	тбОприходованныеТМЦ.НоваяКолонка("Субконто1");
	тбОприходованныеТМЦ.НоваяКолонка("Субконто2");
	тбОприходованныеТМЦ.НоваяКолонка("Субконто3");                
	// определим общий вес ТМЦ	
	ИтогВес = 0;
	тбПриходнаяНакладная.ВыбратьСтроки();
	Пока тбПриходнаяНакладная.ПолучитьСтроку()=1 Цикл
		Товар = тбПриходнаяНакладная.ПолучитьЗначение(тбПриходнаяНакладная.НомерСтроки,РеквТовар);
		ИтогВес = ИтогВес + (Товар.Вес  * тбПриходнаяНакладная.Кво * тбПриходнаяНакладная.Коэффициент);
		Если Товар.Вес = 0 Тогда                                                                                                                                         
			глКомментарий("Вес ТМЦ "+Товар+" равен 0. На этот ТМЦ затраты распределены не будут.",2);
		КонецЕсли;			
	КонецЦикла;	                                    
	СтавкаНДС = ВидНДС.Ставка.Получить(ДатаДок);
	// пересчитаем сумму в стороке с учетом возможного аванса в валюте
	текСуммаСНДС = ПересчитатьСуммуПоАвансу(СуммаБезНДСВал*(100+СтавкаНДС)/100,СуммаСНДС);
	текСуммаБезНДС = ?(фНДСНаЗатраты = 1, текСуммаСНДС, ПересчитатьСуммуПоАвансу(СуммаБезНДСВал,СуммаБезНДС));
	ИтогВес = ?(ИтогВес = 0,1,ИтогВес);	         	
	// распределим суммы по весу
	тбПриходнаяНакладная.ВыбратьСтроки();
	Пока тбПриходнаяНакладная.ПолучитьСтроку()=1 Цикл
		тбОприходованныеТМЦ.НоваяСтрока();
		Товар = тбПриходнаяНакладная.ПолучитьЗначение(тбПриходнаяНакладная.НомерСтроки,РеквТовар);
		Коэф = (Товар.Вес  * тбПриходнаяНакладная.Кво * тбПриходнаяНакладная.Коэффициент)/ИтогВес;
		Если Товар.Вид() = "ТМЦ" Тогда
			// только если это ТМЦ или услуга
			тбТовары.НоваяСтрока();
			тбТовары.Товар = Товар;    
			тбТовары.СуммаБезНДС = Окр(текСуммаБезНДС * Коэф, 2);
			ОкрСуммаБезНДС = ОкрСуммаБезНДС + Окр(текСуммаБезНДС * Коэф, 2);
			тбТовары.СуммаНДС = Окр(НДС * Коэф, 2);		
			ОкрНДС = ОкрНДС + Окр(НДС * Коэф, 2);
		КонецЕсли;
		// если нет права на налоговый кредит, то и НДС по дополнительным расходам отнесем на себестоимость
		тбОприходованныеТМЦ.СуммаДопРасхода = Окр(текСуммаБезНДС * Коэф, 2);
		тбОприходованныеТМЦ.СуммаДопРасходаВал = Окр(СуммаБезНДСВал * Коэф, 2);
		ОпределитьАналитикуПоТМЦ();
	КонецЦикла;
	// если возникли ошибки округлений, то дельту - в последнюю строку
	тбОприходованныеТМЦ.ПолучитьСтрокуПоНомеру(тбОприходованныеТМЦ.КоличествоСтрок());
	// если документ трговый, то НДС не относим на себестоимость
	тбОприходованныеТМЦ.СуммаДопРасхода = тбОприходованныеТМЦ.СуммаДопРасхода + (текСуммаБезНДС - тбОприходованныеТМЦ.Итог("СуммаДопРасхода"));
	тбОприходованныеТМЦ.СуммаДопРасходаВал = тбОприходованныеТМЦ.СуммаДопРасходаВал + (СуммаБезНДСВал - тбОприходованныеТМЦ.Итог("СуммаДопРасходаВал"));
	// если возникли ошибки округлений, то дельту - в последнюю строку
	Если тбТовары.КоличествоСтрок() > 0 Тогда
		тбТовары.ПолучитьСтрокуПоНомеру(тбТовары.КоличествоСтрок());
		тбТовары.СуммаБезНДС = тбТовары.СуммаБезНДС + (текСуммаБезНДС - ОкрСуммаБезНДС);
		тбТовары.СуммаНДС = тбТовары.СуммаНДС + (НДС - ОкрНДС);			
	КонецЕсли;
	СчетНДС = СчетПоКоду("6415");
	СубконтоНДС1 = ВидНДС;
	СубконтоНДС2 = 0;
	Если Счет.ВидСубконто(2) = ВидыСубконто.Договора Тогда
		Если фНДСНаЗатраты <> 1 Тогда
			// налоговый кредит
			Если (Константа.НДСпоВходящимНН = Да) и (Валюта = Гривня) Тогда
				// проводку по налоговому кредиту сделаем в документе ЗаписьКнигиПриобретения
				СчетНДС = СчетПоКоду("6442");
				СубконтоНДС1 = Субконто1;
				СубконтоНДС2 = Субконто2;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если (Валюта <> Гривня)
	И (глПроверитьСчетВзаиморасчетов(Счет)=0) Тогда
		// переоценим валютный счет
		глТаблицаСчетов.НоваяСтрока();
		глТаблицаСчетов.Счет = Счет;
		глТаблицаСчетов.Субконто1 = Субконто1;
		глТаблицаСчетов.Субконто2 = Субконто2;
		глТаблицаСчетов.Субконто3 = Субконто3;
		глТаблицаСчетов.Валюта = Валюта;
		глТаблицаСчетов.ОперационнаяКР = 1;
		глТаблицаСчетов.ВидДеятельности = ПолучитьПустоеЗначение("Справочник.ВидыДеятельности");
	КонецЕсли;
КонецПроцедуры 

// ===============================
Функция ДвиженияПартии()
	Перем фОшибка;	// возвращаемое значение
	фОшибка = 1;              
	
	тбТабличнаяЧасть = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(тбТабличнаяЧасть);
	// партии
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета = СоздатьОбъект("СписокЗначений");
	спМестаХранения = СоздатьОбъект("СписокЗначений");
	спТМЦ = СоздатьОбъект("СписокЗначений");
	спПредпочтение = СоздатьОбъект("СписокЗначений");
	// сформируем список счетов для отбора	
	тбТабличнаяЧасть.ВыбратьСтроки();
	Пока тбТабличнаяЧасть.ПолучитьСтроку() = 1 Цикл                
		Если ((глСчетаУчетаТоваров.Принадлежит(Число(тбТабличнаяЧасть.Счет.Код)) = 1)
		ИЛИ (глСчетаУчетаЗапасов.Принадлежит(Число(тбТабличнаяЧасть.Счет.Код)) = 1)
		ИЛИ (глСчетаУчетаПродукции.Принадлежит(Число(тбТабличнаяЧасть.Счет.Код)) = 1)) Тогда
			// сформируем список счетов
			Если спСчета.НайтиЗначение(тбТабличнаяЧасть.Счет) = 0 Тогда
				спСчета.ДобавитьЗначение(тбТабличнаяЧасть.Счет);
			КонецЕсли;
			// сформируем список складов
			Если глПартионныйУчетПоСкладам = Да Тогда
				Если спМестаХранения.НайтиЗначение(тбТабличнаяЧасть.Субконто1) = 0 Тогда
					спМестаХранения.ДобавитьЗначение(тбТабличнаяЧасть.Субконто1);
				КонецЕсли;	
			КонецЕсли;				    
			// сформируем список ТМЦ
			спТМЦ.ДобавитьЗначение(тбТабличнаяЧасть.Субконто2);
			// сформируем список предпочтений
			спПредпочтение.ДобавитьЗначение(?(ПустоеЗначение(тбТабличнаяЧасть.Субконто3)=1,"",тбТабличнаяЧасть.Субконто3));
		Иначе
			спТМЦ.ДобавитьЗначение("");
			спПредпочтение.ДобавитьЗначение("");
		КонецЕсли;	
	КонецЦикла;		
	Если ПустоеЗначение(спТМЦ)=1 Тогда
		фОшибка = 0;
	КонецЕсли;
	спОтбор.Установить("Счет",спСчета);
    спОтбор.Установить("Товар", спТМЦ);
	ВремРег = СоздатьОбъект("Регистры");
	глРассчитатьОстаткиИРезервы(Контекст, ВремРег, спОтбор,1,1,1);
    спОтбор.Установить("МестоХранения", спМестаХранения);
	глРассчитатьОстаткиПартий(Контекст, ВремРег, Фирма, спОтбор);
	// параметры движения по регситру Партии
	тбПартии = 0;
	тбОстатки = 0;
	ИнвСтартегияПредпочтения  = 0;
	ИнвСтратегияПродажи = 0;
	// парметры движения по регистру Остатки
	ФлагПрихода = 0;
	ФлагВозврата = 0;
	ФлагПеремещения = 2;
	глСформироватьТаблицуПартий(Контекст, ВремРег,Фирма, спОтбор, спПредпочтение, 
		тбПартии, тбОстатки, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
	ВремРег.Актуальность(1);			
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ((глСчетаУчетаТоваров.Принадлежит(Число(Счет.Код)) = 0)
		И (глСчетаУчетаЗапасов.Принадлежит(Число(Счет.Код)) = 0)
		И (глСчетаУчетаПродукции.Принадлежит(Число(Счет.Код)) = 0)) Тогда
			Продолжить;
		КонецЕсли;	
		ВсегоСписаноКво = 0;
		ВсегоСписаноСум = 0;
		ВсегоСписаноНДС = 0;
		ВсегоСписать = Кво;		
		// движения по регистру Остатки                                                                          
		глПровестиОстатки(Контекст, ВремРег, Фирма, Субконто1, Субконто2,, ВсегоСписать, ФлагПрихода, ФлагВозврата,,ФлагПеремещения, 1);
		ОсталосьСписать = ВсегоСписать;
		НС=0;
		// находим в тбПартии первую партию, соответсв. текущей строке документа
		Если тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента")=1 Тогда
			тбПартии.ПолучитьСтрокуПоНомеру(НС);
		Иначе                                                                     
			// если такой строки нет, переходим на первую строку таблицы
			тбПартии.ВыбратьСтроки();
			тбПартии.ПолучитьСтроку();
		КонецЕсли;
		// обрабатываем все строки тбПартии с соответсв. номером строки документа
		Пока тбПартии.НомерСтрокиДокумента = НомерСтроки Цикл
			// берем необходимые параметры партии из тбПартии
			Если тбПартии.ТМЦ.Счет = тбПартии.Счет Тогда
				МестоХраненияП = тбПартии.МестоХранения;
				ПоставщикП = тбПартии.Поставщик;
				ПоставкаП = тбПартии.Поставка;
				ПрихДокументП = тбПартии.ПрихДокумент;
				СчетП = тбПартии.Счет;
				НС =0;
				// находим остаток текущей партии в тбОстатки по ключу
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,Субконто2.Код,СчетП),НС,"Ключ")=1 Тогда
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					ОстатокТовара = тбОстатки.ОстатокТовара;
					// если остаток 0, то с текущей партии не списываем
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
					КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
					КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписать;
					// рассчитаем себестоимость текущей списываемой партии				
					СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
					СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
					// для записи в строку документа
					ВсегоСписаноКво = ВсегоСписаноКво + СписываемыйОстатокТовара;
					ВсегоСписаноСум = ВсегоСписаноСум + СписываемаяСтоимость;
					СписываемыйНДС = 0;                      
					КодОперации = СписаниеИзлишков;
					Регистр.Партии.ПривязыватьСтроку(НомерСтроки);
					// Списываем
					глПровестиПартию(Контекст, 0, 0, Фирма, Субконто2, СчетП, МестоХраненияП, ПоставщикП, 
						ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
						КодОперации, 0 ,0, 0);
					СтавкаНДС = ?(ВидНДС.Ставка.Получить(ДатаДок) = 0, 0, Субконто2.СтавкаНДС.Ставка.Получить(ДатаДок));
					НДС = СуммаБезНДС * СтавкаНДС;					
					глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость);
					ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
				КонецЕсли;
			КонецЕсли;
			Если ОсталосьСписать = 0 Тогда
				Прервать;
			КонецЕсли;   
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ОсталосьСписать > 0 Тогда
			глСообщитьОбОтсутствииПартии(0, Фирма, Субконто2, НомерСтроки);
			фОшибка = 0;
		КонецЕсли; 
		// запишем себестоимость в колонку ...
		СуммаБезНДС = ВсегоСписаноСум;
		ЦенаБезНДС = ?(ВсегоСписаноКво=0, 0, СуммаБезНДС/Кво);
		СтавкаНДС = ?(ВидНДС.Ставка.Получить(ДатаДок) = 0, 0, Субконто2.СтавкаНДС.Ставка.Получить(ДатаДок));
		НДС = СуммаБезНДС * СтавкаНДС;
		СуммаСНДС = СуммаБезНДС + НДС;
	КонецЦикла; // строки документа
	ВремРег.Актуальность(0);
	Возврат фОшибка;
КонецФункции

// ======================================
Процедура ПроводкиСтрока()
Перем Партия, СчетТМЦ;
	
	// --- УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР

	//// валовые расходы
	//Если (Счет.ВидСубконто(2) = ВидыСубконто.Договора) И (СубконтоВалРасх <> Константа.НиДоходНиРасход) Тогда
	//	глПроводка(Контекст,"ВР","ВР",РазницаБезНДС,"Вал. расходы",, Субконто1,Субконто2,СубконтоВалРасх,
	//	Субконто1,Субконто2,СубконтоВалРасх,,,"РП");
	//	Если фНДСНаЗатраты = 1 Тогда
	//		// необходимо увеличить ВР на сумму НДС
	//		глПроводка(Контекст,"ВР","ВР",НДС,"Вал. расх. увеличены на сумму НДС, не относящуюся к нал. кредиту",, Субконто1,Субконто2,СубконтоВалРасх,
	//		Субконто1,Субконто2,СубконтоВалРасх,,,"РП");
	//	КонецЕсли;
	//КонецЕсли;
	
	// ... УМК Сандомирский В.Ю, (30.07.14) убираем проводки по ВЛ , ВД\ВР
	
	Если глВыделятьЛиАвансыПоСчету(Счет) = 1 Тогда
	    // погасим авансовый платеж
		// сумма погашения аванса не должна превышать сумму отгрузки
		Если Валюта = Гривня Тогда
			СуммаПогашенияАванса = Мин(СуммаГрнО, СуммаСНДС);
			глПроводка(Контекст,Счет,СчетПоКоду("3711"),СуммаПогашенияАванса,"Расходы на приобретение: погашен авансовый платеж",, Субконто1,Субконто2,Субконто3,
			Субконто1,Субконто2,, ,,"РП");
		Иначе
			СуммаПогашенияАванса = Мин(СуммаО, СуммаБезНДСВал);
			КурсПогашенияАванса = ?(СуммаО=0, 1, СуммаГрнО / СуммаО);
			СуммаПогашенияАвансаГрн = СуммаПогашенияАванса*КурсПогашенияАванса;
			глПроводка(Контекст,Счет,СчетПоКоду("3712"),СуммаПогашенияАвансаГрн,"Расходы на приобретение: погашен авансовый платеж",, Субконто1,Субконто2,Субконто3,
			Субконто1,Субконто2,, Валюта,СуммаПогашенияАванса,"РП");
		КонецЕсли;
	КонецЕсли;
	Если (Счет.Количественный = 0) И (фНДСНаЗатраты <> 1) Тогда
		// разбиваем на "первое/второе" событие
		глПроводка(Контекст,СчетНДС,Счет,РазницаНДС,"Расходы на приобретение: НДС (первое событие)",, СубконтоНДС1,СубконтоНДС2,,
		Субконто1,Субконто2,Субконто3, ,,"РП");
		глПроводка(Контекст,"6441",Счет,НДС-РазницаНДС,"Расходы на приобретение: НДС (второе событие)",, Субконто1,Субконто2,,
		Субконто1,Субконто2,Субконто3, ,,"РП");
	КонецЕсли;
	// теперь собственно увеличение стоимости приобретенных ТМЦ
	ВалютаПроводки = 0;
	Если Валюта <> Гривня Тогда
		ВалютаПроводки = Валюта;
	КонецЕсли;
	Если Счет.Количественный = 1 Тогда 
		// спишем по регистру Остатки		
		глКомментарий("Выполняются движения остатков ТМЦ",2);
		// чтобы не увеличивать количество приобретенных ТМЦ и в то же время списать 
		// указанное нам кол-во с корр. счета, воспользуемся сложной проводкой
		Операция.НоваяПроводка();
		Операция.Кредит.Счет = Счет;
		Операция.Кредит.Субконто(1,Субконто1);
		Операция.Кредит.Субконто(2,Субконто2);
		Операция.Кредит.Субконто(3,Субконто3);
		// по кредиту полная сумма и полное кол-во
		Операция.Сумма = СуммаБезНДС;
		Операция.Количество = Кво;
		Операция.Валюта = ВалютаПроводки;
		Операция.ВалСумма = СуммаБезНДСВал;
		Операция.Комментарий = "Расходы на приобретение: дооценка себест.";
		Операция.НомерЖурнала = "РП";
		Операция.НашаФирма = Фирма;
		тбПриходнаяНакладная.ВыбратьСтроки();
		Пока тбПриходнаяНакладная.ПолучитьСтроку()=1 Цикл
			тбОприходованныеТМЦ.ПолучитьСтрокуПоНомеру(тбПриходнаяНакладная.НомерСтроки);
			Товар = тбПриходнаяНакладная.ПолучитьЗначение(тбПриходнаяНакладная.НомерСтроки,РеквТовар);	
			СчетТМЦ = Товар.Счет;			
			Операция.НоваяКорреспонденция();
			Операция.Дебет.Счет = СчетТМЦ;
			Операция.Дебет.Субконто(1,тбОприходованныеТМЦ.Субконто1);
			Операция.Дебет.Субконто(2,тбОприходованныеТМЦ.Субконто2);
			Операция.Дебет.Субконто(3,тбОприходованныеТМЦ.Субконто3);
			Операция.Сумма = тбОприходованныеТМЦ.СуммаДопРасхода;
			Операция.Комментарий = "Расходы на приобретение: дооценка себест.";
			Операция.НомерЖурнала = "РП";
			Операция.НашаФирма = Фирма;
		КонецЦикла;
	Иначе
		// корр счет не количественный, достаточно обычных проводок
		тбПриходнаяНакладная.ВыбратьСтроки();
		Пока тбПриходнаяНакладная.ПолучитьСтроку()=1 Цикл
			тбОприходованныеТМЦ.ПолучитьСтрокуПоНомеру(тбПриходнаяНакладная.НомерСтроки);
			Товар = тбПриходнаяНакладная.ПолучитьЗначение(тбПриходнаяНакладная.НомерСтроки,РеквТовар);	
			СчетТМЦ = Товар.Счет;	
			глПроводка(Контекст,СчетТМЦ,Счет,тбОприходованныеТМЦ.СуммаДопРасхода,"Расходы на приобретение: дооценка себест.",Кво, тбОприходованныеТМЦ.Субконто1,тбОприходованныеТМЦ.Субконто2,тбОприходованныеТМЦ.Субконто3,
			Субконто1,Субконто2,Субконто3, ВалютаПроводки,тбОприходованныеТМЦ.СуммаДопРасходаВал,"РП");
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры                                                                    

// ======================================
Процедура РасчитатьРегистрыВзаиморасчетов()
Перем тбДолгиПоставщиков,тбДолгиПокупателей;
	// создадим таблицу для хранения сумм предварительной отгрузки
	тбВтороеСобытие = СоздатьОбъект("ТаблицаЗначений");
	тбВтороеСобытие.НоваяКолонка("Контрагент");
	тбВтороеСобытие.НоваяКолонка("Договор");
	// суммы второго события по поставщику
	тбВтороеСобытие.НоваяКолонка("СуммаПоставщика","Число",15,2);
	тбВтороеСобытие.НоваяКолонка("СуммаПоставщикаОсн","Число",15,2);
	тбВтороеСобытие.НоваяКолонка("НДСПоставщика","Число",15,2);
	// суммы второго события по покупателю
	тбВтороеСобытие.НоваяКолонка("СуммаПокупателя","Число",15,2);
	тбВтороеСобытие.НоваяКолонка("НДСПокупателя","Число",15,2);
	// служебная, используется для поиска по паре контрагент/договор
	тбВтороеСобытие.НоваяКолонка("КонтрагентДоговор"); 
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 0 Тогда
			// нам нужны только счета 36 и 63
		    Продолжить;
		КонецЕсли;
		текКонтрагентДоговор = ЗначениеВСтроку(Субконто1)+"|"
			+ЗначениеВСтроку(?(ПустоеЗначение(Субконто2)=1,ПолучитьПустоеЗначение("Документ"),Субконто2));
		Если тбВтороеСобытие.НайтиЗначение(текКонтрагентДоговор,,"КонтрагентДоговор") = 1 Тогда
		    Продолжить; // уже есть такая строка
		КонецЕсли;
		тбВтороеСобытие.НоваяСтрока();
		тбВтороеСобытие.Контрагент = Субконто1;
		тбВтороеСобытие.Договор = Субконто2;
		тбВтороеСобытие.КонтрагентДоговор = текКонтрагентДоговор;
	КонецЦикла;
	спКонтрагенты = СоздатьОбъект("СписокЗначений");
	тбВтороеСобытие.Выгрузить(спКонтрагенты,,,"Контрагент");
	ВремРег = СоздатьОбъект("Регистры");
	спКонтрагентов = СоздатьОбъект("СписокЗначений");
	спДоговоров = СоздатьОбъект("СписокЗначений");
	тбСуммыПогашения = глСоздатьТбСуммыПогашения();
	тбВтороеСобытие.ВыбратьСтроки();
	Пока тбВтороеСобытие.ПолучитьСтроку() = 1 Цикл
		Если спКонтрагентов.НайтиЗначение(Субконто1) = 0 Тогда
			спКонтрагентов.ДобавитьЗначение(Субконто1);
		КонецЕсли;	
		Если спДоговоров.НайтиЗначение(Субконто2) = 0 Тогда
			спДоговоров.ДобавитьЗначение(Субконто2);
		КонецЕсли;	
	КонецЦикла;	                                                                                                                                                                
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 0 Тогда
		    Продолжить;
		КонецЕсли;
		тбДолги = тбДолгиПоставщиков;
		ФлагОтгрузки = 1;	
		ЗнакОплаты = 1;
		ФлагВозврата = 0;	                                        
		СтавкаНДСПогашения = ВидНДС;
		СуммаНДС = НДС;
		тбСуммыПогашения.УдалитьСтроки();
		тбСуммыПогашения.НоваяСтрока();               
		тбСуммыПогашения.СтавкаНДС = СтавкаНДСПогашения;
		Если Валюта = Гривня Тогда
			тбСуммыПогашения.СуммаНДС = СуммаНДС;
			тбСуммыПогашения.СуммаСНДС = СуммаСНДС;
		Иначе                     
			тбСуммыПогашения.СуммаНДС = СуммаБезНДСВал*ВидНДС.Ставка.Получить(ДатаДок);
			тбСуммыПогашения.СуммаСНДС = СуммаБезНДСВал + тбСуммыПогашения.СуммаНДС;
		КонецЕсли;
		тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег, Фирма,ЗнакОплаты,Субконто1,Субконто2,Валюта);
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, Фирма, тбДолги, тбСуммыПогашения, Валюта,Субконто1,Субконто2, , ДокументОснование);
	КонецЦикла; // по строкам документа
	// теперь, после проведения, знаем суммы второго события
	РегВзаим = СоздатьОбъект("Регистр.ВзаиморасчетыПоставщиков");
	РегВзаим.ВыбратьДвиженияДокумента(ТекущийДокумент());
	Пока РегВзаим.ПолучитьДвижение() = 1 Цикл
		Если ПустоеЗначение(РегВзаим.Фирма) = 1 Тогда
		    Продолжить;
		КонецЕсли;
		// отбираем движения, связанные со вторым событием
		Если (РегВзаим.КодОперации = ПостОплата) или (РегВзаим.КодОперации = ПостОтгрузка) 
		или (РегВзаим.КодОперации = ВтороеСобытиеБартерПриход) или (РегВзаим.КодОперации = ВтороеСобытиеБартерРасход)
		или (РегВзаим.КодОперации = ВозвратПостОплаты) или (РегВзаим.КодОперации = ВозвратПостОтгрузки) Тогда
			 // суммы берем по модулю
			текСуммаО = Макс(РегВзаим.Долг, -РегВзаим.Долг);
			текСуммаООсн = Макс(РегВзаим.ДолгОсн, -РегВзаим.ДолгОсн); // и здесь суммы берем по модулю
			текНДСО = Макс(РегВзаим.НДС, -РегВзаим.НДС);
			текКонтрагентДоговор = ЗначениеВСтроку(РегВзаим.Контрагент)+"|"+ЗначениеВСтроку(РегВзаим.Договор);
			текНомСтр = 0;
			Если тбВтороеСобытие.НайтиЗначение(текКонтрагентДоговор,текНомСтр,"КонтрагентДоговор") = 1 Тогда
				тбВтороеСобытие.ПолучитьСтрокуПоНомеру(текНомСтр);
				// поставщики
				тбВтороеСобытие.СуммаПоставщика = тбВтороеСобытие.СуммаПоставщика + текСуммаО;
				тбВтороеСобытие.СуммаПоставщикаОсн = тбВтороеСобытие.СуммаПоставщикаОсн + текСуммаООсн;
				тбВтороеСобытие.НДСПоставщика = тбВтороеСобытие.НДСПоставщика + текНДСО;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	тбВтороеСобытие.Свернуть("Контрагент,Договор,КонтрагентДоговор","СуммаПоставщика,СуммаПоставщикаОсн,НДСПоставщика,СуммаПокупателя,НДСПокупателя");
КонецПроцедуры                             
                 
// ===============================
Функция РассчитатьСтроку()
	глКомментарий("Обработка строки "+НомерСтроки,3);
	СуммаГрнСНДС = СуммаСНДС;
	СуммаГрнНДС = НДС;
	// пересчитаем сумму в стороке с учетом возможного аванса в валюте
	текСуммаБезНДС = ПересчитатьСуммуПоАвансу(СуммаБезНДСВал,СуммаБезНДС);
	// рассчитаем сумму предварительной оплаты, сумму возьмем из таблицы
    Инд = 0;
	текКонтрагентДоговор = ЗначениеВСтроку(Субконто1)+"|"
		+ЗначениеВСтроку(?(ПустоеЗначение(Субконто2)=1,ПолучитьПустоеЗначение("Документ"),Субконто2));
	Если тбВтороеСобытие.НайтиЗначение(текКонтрагентДоговор,Инд,"КонтрагентДоговор") = 1 Тогда
	    тбВтороеСобытие.ПолучитьСтрокуПоНомеру(Инд);
		СтавкаНДС = ВидНДС.Ставка.Получить(ДатаДок);
	    // поставщик
		СуммаО = Мин(тбВтороеСобытие.СуммаПоставщика,СуммаБезНДСВал*(100+СтавкаНДС)/100);
		СуммаГрнО = Мин(тбВтороеСобытие.СуммаПоставщикаОсн,СуммаСНДС);
		НДСО = Мин(тбВтороеСобытие.НДСПоставщика,НДС);
		// и сразу откорректируем в таблице, чтобы сумма осталась верной для следующих строк
		тбВтороеСобытие.СуммаПоставщикаОсн = тбВтороеСобытие.СуммаПоставщикаОсн - СуммаГрнО;
		тбВтороеСобытие.СуммаПоставщика = тбВтороеСобытие.СуммаПоставщика - СуммаО;
		тбВтороеСобытие.НДСПоставщика = тбВтороеСобытие.НДСПоставщика - НДСО;
	КонецЕсли;		
	НДСГрнО = НДСО;
	РазницаНДС = Макс(СуммаГрнНДС - НДСГрнО, 0);                 
	СтавкаНДС = ВидНДС.Ставка.Получить(ДатаДок);
	Если глКонтрагентПлательщикНПнаОО(тбВтороеСобытие.Контрагент,тбВтороеСобытие.Договор,ДокументОснование,ТекущийДокумент()) = 1 Тогда
		// контрагент - плательщик налога на прибыль на общих основаниях
		РазницаБезНДС = Макс(0, текСуммаБезНДС - (СуммаГрнО - НДСГрнО));
	Иначе
		РазницаБезНДС = текСуммаБезНДС;
	КонецЕсли;
	Если (НДС > 0) и (глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 0) Тогда
	    глКомментарий("Сумму НДС можно указывать только для счетов поставщиков и покупателей (строка "+НомерСтроки+")",0,,"!");
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции                  

// ======================================
Процедура УвеличениеСебестоимостиПартии()        
	МестоХраненияП = ?(глПартионныйУчетПоСкладам = Да,ПриходнаяНакладная.МестоХранения,0);
	тбТовары.ВыбратьСтроки();
	Пока тбТовары.ПолучитьСтроку() = 1 Цикл
		МетодРасчетаСебестоимости=глПолучитьМетодРасчетаСебестоимости(тбТовары.Товар,ДатаДок);
		Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
			ПоставщикП = 0;
			ПоставкаП = 0;
			ПрихДокументП = 0;
		Иначе
			ПоставщикП = ПриходнаяНакладная.Контрагент;
			ПоставкаП = ПриходнаяНакладная;
			ПрихДокументП = ПриходнаяНакладная;
		КонецЕсли;		
		ПриходСтоимость = тбТовары.СуммаБезНДС;
		ПриходНДС = тбТовары.СуммаНДС;
	    СчетП = тбТовары.Товар.Счет;
		Оборот = ПриходСтоимость;
		Если тбТовары.Товар.ВидТМЦ = Перечисление.ВидыТМЦ.Услуга Тогда
			КодОперации = ПокупкаУслуги;
		Иначе                          
			// тара или ТМЦ
			Если (тбТовары.Товар.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) 
			И (глЕстьРеквизитШапки("ВидТары",ПриходнаяНакладная.Вид()) = Да)Тогда
				Если ПриходнаяНакладная.ВидТары <> Перечисление.ВидыТары.Покупная Тогда
					// залоговая или возвратная тара
					Если ПриходнаяНакладная.ВидТары = Перечисление.ВидыТары.Залоговая Тогда
						// залоговая тара
						КодОперации = ПолучениеТарыЗалоговойОтПоставщика;
					Иначе
						// возвратная тара
						КодОперации = ПолучениеТарыВозвратнойОтПоставщика;
					КонецЕсли;
				Иначе
					// ТМЦ или покупная тара, с покупной тарой работаем, как с ТМЦ
					КодОперации = Закупка;
				КонецЕсли;						
			КонецЕсли;
		КонецЕсли;
		глПровестиПартию(Контекст, 1, 0, Фирма, тбТовары.Товар, СчетП, МестоХраненияП, ПоставщикП,
			ПоставкаП, ПрихДокументП, 0, ПриходСтоимость, 0, 
			КодОперации, 1, Оборот, 0);   
	КонецЦикла; // цикл по ТМЦ
КонецПроцедуры                    

// ======================================
Процедура ОбработкаПроведения()
	глКомментарий("Начало",2,Контекст);

	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;              
	Если глЕстьРеквизитМнЧ("ТМЦ", ПриходнаяНакладная.Вид()) = Да Тогда
		РеквТовар = "ТМЦ";
	КонецЕсли;
	фНДСНаЗатраты = 0;
	Если глЕстьРеквизитШапки("НДСНаЗатраты", ПриходнаяНакладная.Вид()) = Да Тогда
		фНДСНаЗатраты = ПриходнаяНакладная.НДСНаЗатраты;
	КонецЕсли;
	тбПриходнаяНакладная = СоздатьОбъект("ТаблицаЗначений");
	ПриходнаяНакладная.ВыгрузитьТабличнуюЧасть(тбПриходнаяНакладная);
	Если СпособРаспределения = Перечисление.СпособыРаспределенияДополнительныхРасходов.ПоВесу Тогда
		// определим общий вес ТМЦ	
		ИтогВес = 0;
		тбПриходнаяНакладная.ВыбратьСтроки();
		Пока тбПриходнаяНакладная.ПолучитьСтроку()=1 Цикл
			Товар = тбПриходнаяНакладная.ПолучитьЗначение(тбПриходнаяНакладная.НомерСтроки,РеквТовар);
			ИтогВес = ИтогВес + (Товар.Вес  * тбПриходнаяНакладная.Кво * тбПриходнаяНакладная.Коэффициент);
		КонецЦикла;	 
		Если ИтогВес = 0 Тогда
			глКомментарий("По всем ТМЦ в документе "+ПриходнаяНакладная+" не указан вес. Измените способ распределения.",1);		
			глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	тбТовары = СоздатьОбъект("ТаблицаЗначений");
	тбТовары.НоваяКолонка("Товар");
	тбТовары.НоваяКолонка("СуммаБезНДС","Число",16,3);
	тбТовары.НоваяКолонка("СуммаНДС","Число",16,3);
	глТаблицаСчетов.УдалитьСтроки();
	РасчитатьРегистрыВзаиморасчетов();
	Если ДвиженияПартии() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;            
	КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;		    
		Если СпособРаспределения = Перечисление.СпособыРаспределенияДополнительныхРасходов.ПоВесу Тогда
			РассчитатьСтрокуПоВесу();			
		Иначе
			РассчитатьСтрокуПоСумме();			
		КонецЕсли;	                                                                                                                             
		Если глСчетаПоставщиковПокупателей.Принадлежит(Число(Счет.Код)) = 1 Тогда
			РассчитатьСтроку();
		КонецЕсли;		
		ПроводкиСтрока();    		
	КонецЦикла;
	Если ПриходнаяНакладная.Вид() <> "ПриходнаяНакладнаяПрочие" Тогда
		УвеличениеСебестоимостиПартии();
	КонецЕсли;	
	глЗаписатьПроводкиВОперацию(Контекст);  
	Если глТаблицаСчетов.КоличествоСтрок() > 0 Тогда
	    глПереоценкаСчетов(Контекст, глТаблицаСчетов, "ПХ");
	КонецЕсли;
	
	Операция.СуммаОперации = Итог("СуммаСНДС");
	Операция.Содержание = Примечание;
	Операция.Записать();
	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры

// ======================================
Процедура ОбработкаУдаленияПроведения()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Счет.Количественный = 1 Тогда 
			СуммаБезНДС = 0;
			НДС = 0;
			СуммаСНДС = 0;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
