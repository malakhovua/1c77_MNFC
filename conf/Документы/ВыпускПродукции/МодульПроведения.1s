Перем тбОстатки,тбОстаткиПоПартиям,тбПродукции,тбПартии,тбМатериалы,тбИспользованиеПолуфабрикатов;
Перем спСчета,спМатериалыДляОстатков,спСклады;
Перем СуммаПоПродукции,СуммаДавПоПродукции,СуммаПоМатериалу,СуммаДавПоМатериалу;
Перем ФОшибка;    
Перем ТБСС;
Перем СтарУрн;
Перем ТДляКутеров;
Перем ТМЦ_ПромпереработкаФарша;//+ umk

//======================================================================
Функция ПроверкаПозднихСписаний()	
	ВсеНорм = 1;
	
	//--- УМК Сандомирский В.Ю. (17.10.14) проверяем существуют ли списания позже єтого выпуска
  	ТекЧасыВыпуска		= "";
	ТекМинутыВыпуска	= "";
	ТекСекундыВыпуска	= "";
	ПолучитьВремя(ТекЧасыВыпуска,ТекМинутыВыпуска,ТекСекундыВыпуска);
	
	
	Док = СоздатьОбъект("Документ");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Док.ВыбратьПодчиненныеДокументы(ДатаДок,,Заказ);
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.ПометкаУдаления() = 1 Тогда
			    Продолжить;
			КонецЕсли;
			Если Док.Вид() = "СписаниеТМЦВПроизводство" Тогда			
				//--- УМК Сандомирский В.Ю, (17.10.14) 
				ТекЧасы		= "";
				ТекМинуты	= "";
				ТекСекунды	= "";
				Док.ПолучитьВремя(ТекЧасы,ТекМинуты,ТекСекунды);	
				
				Если ДатаДок < Док.ДатаДок Тогда
					ВсеНорм = 0;    //--- Списание позже выпуска по дате
				ИначеЕсли (ДатаДок = Док.ДатаДок) И (ТекЧасыВыпуска < ТекЧасы) Тогда 	
					ВсеНорм = 0;    //--- Списание позже выпуска по часам
				ИначеЕсли (ДатаДок = Док.ДатаДок) И (ТекЧасыВыпуска = ТекЧасы) И (ТекМинутыВыпуска < ТекМинуты) Тогда
					ВсеНорм = 0;    //--- Списание позже выпуска по минутам	
				ИначеЕсли (ДатаДок = Док.ДатаДок) И (ТекЧасыВыпуска = ТекЧасы) И (ТекМинутыВыпуска = ТекМинуты) И (ТекСекундыВыпуска < ТекСекунды) Тогда
					ВсеНорм = 0;    //--- Списание позже выпуска по секундам	
				КонецЕсли;		
			
				
				Если ВсеНорм = 0  Тогда
					Сообщить("В строке " + НомерСтроки + " есть списание позже текущего выпуска ( " 
					+ Док 
					+ " время : " + Формат(ТекЧасы,"Ч(0)2") 
					+ ":" + Формат(ТекМинуты,"Ч(0)2") 
					+ ":" + Формат(ТекСекунды,"Ч(0)2")
					+ " ) " + "Время текущего выпуска : " 
					+ Формат(ТекЧасыВыпуска,"Ч(0)2") 
					+ ":" + Формат(ТекМинутыВыпуска,"Ч(0)2") 
					+ ":" + Формат(ТекСекундыВыпуска,"Ч(0)2"));
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;		
	КонецЦикла;
	
	Возврат  ВсеНорм;	
КонецФункции // ПроверкаПозднихСписаний

// ===========================
Функция ПроверкаШапки()
    глВсеВыбрано = 1;
	глПроверкаДатыДок(Контекст,"Проведение");
    глВыбранЛи(Фирма,"Фирма");
	
	Если глВсеВыбрано = 1 Тогда
		Если ПустоеЗначение(Подразделение)=1 Тогда
			глКомментарий("Не заполнен реквизит ""Подразделение""!", 0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
		Если ПустоеЗначение(ВидДеятельности)=1 Тогда
			глКомментарий("Не заполнен реквизит ""Вид деятельности""!", 0,,"!");
			глВсеВыбрано = 0;
		КонецЕсли;
		Если глВсеВыбрано = 0 Тогда
			глКомментарий("Неправильно отражены затраты! Реквизиты ""Вид деятельности"" и ""Подразделение"" должны быть обязательно заполнены.",3);
		КонецЕсли;
	КонецЕсли;
			
	глПроверитьТипПодразделения(Подразделение);
	глВыбранЛи(МестоХраненияПродукции,"Место хранения продукции");
	
	Если СписыватьМатериалы = 1 Тогда                             
		глВыбранЛи(МестоХраненияВозвратныхОтходов,"Место хранения возвратных отходов");
		глВыбранЛи(МестоХраненияМатериалов,"Место хранения материалов");
		глВыбранЛи(МестоХраненияПолуфабрикатов,"Место хранения полуфабрикатов");
	КонецЕсли;
    
	Если Итог("КвоБрак") > 0 Тогда  
		Если ПустоеЗначение(Константа.МестоХраненияБрака) = 1 Тогда
			глКомментарий("Не заполнена константа ""Место хранения брака""!",0,,"!");
	    	глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
  	глВсеВыбрано = ?(глВсеВыбрано = 0, 0,глПроверкаДублейСтрок(Контекст,1));  	
  	  	
    Возврат глВсеВыбрано;
КонецФункции

// ===========================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
	Урн = Продукция.УровеньПередела.Получить(ДатаДок);
   	Если НомерСтроки <> 1 Тогда
		Если Урн <> СтарУрн Тогда
			Сообщить("В документе есть продукция с разными уровнями передела. Уровень в строке: " + Строка(НомерСтроки) + " отличается от уровня в предыдущей строке");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
   	СтарУрн = Урн;
	глВыбранЛи(Продукция,"Продукция",НомерСтроки);     
	глВсеВыбрано = ?(глПроверкаТовараВДокументе(Контекст,Продукция,НомерСтроки,1)=Да, глВсеВыбрано, 0);
	глВсеВыбрано = ?(глВсевыбрано = 0,0,глПроверитьАналитикуПоЗатратам(Подразделение, ВидДеятельности, Заказ, Продукция,,,,,НомерСтроки,1));	
    Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПолучитьПартию(Партия)
	Если ПустоеЗначение(тбПродукции.Заказ) = 0 Тогда
		//В качестве партии используется Заказ
		//Если (тбПродукции.Заказ.Вид() <>  "Заказ") и (Константа.МетодРасчетаСебестоимостиПродукции.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему) Тогда
		Если (Константа.МетодРасчетаСебестоимостиПродукции.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему) Тогда
			Партия = ПолучитьПустоеЗначение("Документ");
		Иначе
			Партия = тбПродукции.Заказ;
		КонецЕсли;
	ИначеЕсли Константа.МетодРасчетаСебестоимостиПродукции.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		//Вместо партии используется пустое значение
		Партия = ПолучитьПустоеЗначение("Документ")
	Иначе   
		//Партию получаем из графика формирования партий
		Док = СоздатьОбъект("Документ.ПартияПродукции");
		
		График = тбПродукции.Продукция.ГрафикФормированияПартий;
		Если ПустоеЗначение(График) = 1 Тогда
			глКомментарий("Для продукции: "+тбПродукции.Продукция+" не задан график формирования партий",0,,"!");
			Возврат 0;
		КонецЕсли;
		
		Если (График.ЧастотаФормированияПартий = Перечисление.СпособыФормированияПартий.Ежедневно) или (График.ЧастотаФормированияПартий = Перечисление.СпособыФормированияПартий.Ежемесячно) Тогда
			
			Если (График.ЧастотаФормированияПартий = Перечисление.СпособыФормированияПартий.Ежемесячно) Тогда
				ДатаПартии = НачМесяца(ДатаДок);
			Иначе
				ДатаПартии = ДатаДок;
			КонецЕсли;
			
			//Проверяем, была ли партия по такому графику формирования
			Док.ВыбратьДокументы(ДатаПартии, ДатаПартии);
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если (Док.ГрафикФормированияПартий = График) Тогда
					Партия = Док.ТекущийДокумент();
					Прервать;  
				КонецЕсли;
			КонецЦикла;   
			
			//Если не нашли партию,то создаем новую
			Если ПустоеЗначение(Партия) = 1 Тогда
				Док.Новый();
				Док.Фирма = Фирма;
				Док.ДатаДок = ДатаПартии;    
				глУстановитьНомер(Док,1);
				Док.ГрафикФормированияПартий = График;
				Док.АвтоВремяНачалоДня();
				Док.Записать();
				Партия = Док.ТекущийДокумент();
			КонецЕсли;
			ДатаПартии = 0;
			
		Иначе // График произвольный	
			//Ищем ближайший документ с указанным графиком
			Док.ОбратныйПорядок(1);
			Док.ВыбратьДокументы(,ТекущийДокумент());
			Пока Док.ПолучитьДокумент() =1 Цикл
				Если (Док.ГрафикФормированияПартий = График) Тогда
					Партия = Док.ТекущийДокумент();
					Прервать;  
				КонецЕсли;
			КонецЦикла;
			
			Если ПустоеЗначение(Партия) = 1 Тогда 
				глКомментарий("Не найдена партия для продукции: "+тбПродукции.Продукция+" по графику формирования партий: " + График,0,,"!");
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
		Док = 0;
	КонецЕсли;
    Возврат 1;
КонецФункции	

// ===============================
//Вызывается рекурсивно
//Добавляется материал в спМатериалы, счет в спСчета из норм затрат
Функция ДобавитьСтрокуВТаблицуПродукции(Продукция,НаЗаказ,Единица,Коэф,Кво,КвоБрака,Уровень,ИДПродукции = 0)
Перем ИД;

	тбНормы = СоздатьОбъект("ТаблицаЗначений");
	////Если Заказ не задан, глПолучитьНормы вернет ПоЗаказу полученное из ТМЦ на ДатаДок
	//Если глПолучитьНормы(Продукция,Единица,Кво,ДатаДок,НаЗаказ,тбНормы) = 0 Тогда
	//	Возврат 0;
	//КонецЕсли;
	
	тбПродукции.НоваяСтрока();
	тбПродукции.НСтр = НомерСтроки;
	тбПродукции.Продукция = Продукция;
	тбПродукции.Заказ = НаЗаказ;
	тбПродукции.Кво = Кво * Коэф;
	тбПродукции.КвоГППриемки = КвоГППриемки;  
	тбПродукции.ДопКво = ДопКво;
	тбПродукции.КвоБрака = КвоБрака * Коэф;
	тбПродукции.Уровень = Уровень;
	тбПродукции.Нормы = тбНормы;     
	тбПродукции.ИД = тбПродукции.НомерСтроки;     
	
	ИД = тбПродукции.ИД;
	Если ИДПродукции <> 0 Тогда
		тбИспользованиеПолуфабрикатов.НоваяСтрока();
		тбИспользованиеПолуфабрикатов.ИДПродукции     = ИДПродукции;
		тбИспользованиеПолуфабрикатов.ИДПолуфабриката = ИД;
		тбИспользованиеПолуфабрикатов.Полуфабрикат    = Продукция;
	КонецЕсли;
	
	тбНормы.ВыбратьСтроки();
	Пока тбНормы.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тбНормы.Материал) = 0 Тогда  //тбНормы.Материал = ВозвратныйОтход или Материал или Продукция или Полуфабрикат
			//Добавляем ТМЦ из норм на продукцию в СПИСОК МАТЕРИАЛОВ для регистра остатков
			глДобавитьЗначениеБезПовторения(спМатериалыДляОстатков,тбНормы.Материал);
			
		    Если Не ((тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.ВозвратныйОтход) Или 
			((ПроизводитьПолуфабрикаты = 1) И (тбНормы.Материал.ВидТМЦ <> Перечисление.ВидыТМЦ.Материал) 
			  И (тбНормы.Материал.ВидТМЦ <> Перечисление.ВидыТМЦ.Товар) И (тбНормы.Материал.ВидТМЦ <> Перечисление.ВидыТМЦ.Тара))
			  И ( (ТолькоНедостающие = 0) ИЛИ (тбНормы.Материал.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат)) ) Тогда
				
				//Если производим полуфабрикаты то в СПИСОК МАТЕРИАЛОВ для регистра партий добавляем только материалы,
				//т.к. по полуфабрикатам и продукции не надо будет проверять остатки по партиям
				
				// добавляем пару (Материал,Предпочтение) без повторения
				// в качестве предпочтения выступает заказ
				фНашли = 0;
				
				тбМатериалы.ВыбратьСтроки();
				Пока тбМатериалы.ПолучитьСтроку() = 1 Цикл
				    Если (тбМатериалы.Материал = тбНормы.Материал) и (тбМатериалы.Предпочтение = тбПродукции.Заказ)
					и (тбМатериалы.НСтр = тбПродукции.НСтр) Тогда
					    фНашли = 1;
						Прервать;
					КонецЕсли;
				КонецЦикла;
                Если фНашли = 0 Тогда
					// если такой пары в списках еще нет
					тбМатериалы.НоваяСтрока();
					тбМатериалы.Материал = тбНормы.Материал;
					тбМатериалы.Предпочтение = тбПродукции.Заказ;
					тбМатериалы.НСтр = тбПродукции.НСтр;
				КонецЕсли;
				
				//Добавляем счет учета сырья (в том числе и давальческого) в СПИСОК СЧЕТОВ 
				глДобавитьЗначениеБезПовторения(СпСчета,тбНормы.Материал.Счет);
				Если (глЭтоДавальческийЗаказ(тбПродукции.Заказ) =1) Тогда
					СчетДав = глПолучитьСчетУчетаТМЦ("Дав",тбНормы.Материал);
					глДобавитьЗначениеБезПовторения(СпСчета,СчетДав);
				КонецЕсли;  
		    КонецЕсли;
			
			//Если в продукцию входят ПОЛУФАБРИКАТЫ, получаем нормы для них 
			Если (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат)
			И (ПроизводитьПолуфабрикаты = 1) Тогда
				Уровень = Уровень + 1;      
				Если ДобавитьСтрокуВТаблицуПродукции(тбНормы.Материал,Заказ,0,1,тбНормы.Кво,0,Уровень,ИД) = 0 Тогда
					Возврат 0;
				КонецЕсли;
				тбНормыПолуфабриката = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	тбНормы = 0;
	
	Возврат 1;
КонецФункции //ДобавитьСтрокуТаблицыПродукция

// ===============================
//Добавляем производимый полуфабрикат в тбПартии, иначе не сможем его списать
Процедура ДобавитьПолуфабрикатВТбПартии(Поставщик,Партия,СчетП,Склад,Стоимость,ПродСтоимость,ОстатокТовара)
	
	фНашли = 0; НомСтр = 0;	
	тбМатериалы.ВыбратьСтроки();
	Пока тбМатериалы.ПолучитьСтроку() = 1 Цикл
		Если (тбМатериалы.Материал = тбПродукции.Продукция) и (тбМатериалы.Предпочтение=тбПродукции.Заказ) 
		и (тбМатериалы.НСтр = тбПродукции.НСтр)	Тогда
			фНашли = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
    
	Если фНашли = 0 Тогда
		// если такой пары в списках еще нет
		тбМатериалы.НоваяСтрока();
		тбМатериалы.Материал = тбПродукции.Продукция;
		тбМатериалы.Предпочтение = тбПродукции.Заказ;
		тбМатериалы.НСтр = тбПродукции.НСтр;
	КонецЕсли;
    НомСтр = тбМатериалы.НомерСтроки;
	
	тбПартии.НоваяСтрока();
	тбПартии.НомерСтрокиДокумента = НомСтр;
	тбПартии.ТМЦ=тбПродукции.Продукция;
	тбПартии.Поставщик = Поставщик;
	тбПартии.ПрихДокумент=Партия;
	тбПартии.Поставка=Партия;
	тбПартии.Счет=СчетП;
	тбПартии.МестоХранения=Склад;
	
	Ключ = глПолучитьКлючТбОстатков(Партия,тбПартии.Поставка,Строка(тбПродукции.Продукция.Код),СчетП,Склад);
	НС = 0;
	Если тбОстаткиПоПартиям.НайтиЗначение(Ключ, НС, "Ключ") = 0 Тогда
		тбОстаткиПоПартиям.НоваяСтрока();
		тбОстаткиПоПартиям.Ключ				= Ключ;
		//тбОстаткиПоПартиям.ТМЦ			= тбПродукции.Продукция;
		//тбОстаткиПоПартиям.МестоХранения	= Склад;
		//тбОстаткиПоПартиям.ПрихДокумент	= Партия;
		тбОстаткиПоПартиям.Стоимость		= Стоимость;
		тбОстаткиПоПартиям.ПродСтоимость	= ПродСтоимость;
		тбОстаткиПоПартиям.ОстатокТовара	= ОстатокТовара;
		тбОстаткиПоПартиям.ОстатокТовараВрт	= 0;
	Иначе   
		тбОстаткиПоПартиям.ПолучитьСтрокуПоНомеру(НС); 
		тбОстаткиПоПартиям.Стоимость		= тбОстаткиПоПартиям.Стоимость + Стоимость;
		тбОстаткиПоПартиям.ПродСтоимость	= тбОстаткиПоПартиям.ПродСтоимость + ПродСтоимость;
		тбОстаткиПоПартиям.ОстатокТовара	= тбОстаткиПоПартиям.ОстатокТовара + ОстатокТовара;
		тбОстаткиПоПартиям.ОстатокТовараВрт	= 0;
	КонецЕсли;
    
	тбПартии.Сортировать("НомерСтрокиДокумента");
	
КонецПроцедуры

// ===============================
Процедура ДвиженияПроизводственныеЗатраты(Материал, ВидЗатрат, СписываемоеКво,СписываемаяСумма,СписываемаяСуммаДав,КодОперации)
	Если тбПродукции.НСтр <> 0 Тогда
		Регистр.ПроизводственныеЗатраты.ПривязыватьСтроку(тбПродукции.НСтр);
	КонецЕсли;
						
	Регистр.ПроизводственныеЗатраты.Фирма 			= Фирма;
	Регистр.ПроизводственныеЗатраты.ВидДеятельности = ВидДеятельности;
	Регистр.ПроизводственныеЗатраты.Подразделение	= Подразделение;
	Регистр.ПроизводственныеЗатраты.Продукция		= тбПродукции.Продукция;
	Регистр.ПроизводственныеЗатраты.ВидЗатрат		= ВидЗатрат;
	Регистр.ПроизводственныеЗатраты.Заказ			= тбПродукции.Заказ;
	Регистр.ПроизводственныеЗатраты.Материал		= Материал;
	
	Регистр.ПроизводственныеЗатраты.Количество		= СписываемоеКво;
	Регистр.ПроизводственныеЗатраты.Сумма			= СписываемаяСумма; 
	Регистр.ПроизводственныеЗатраты.СуммаДав		= СписываемаяСуммаДав; 
	Регистр.ПроизводственныеЗатраты.КодОперации		= КодОперации;
	
	Регистр.ПроизводственныеЗатраты.ДвижениеПриходВыполнить();
КонецПроцедуры

// ===============================
Процедура ДвиженияНормативныеЗатраты(СтатьяКалькуляции, Материал, СписываемоеКво, СписываемаяСумма)
	Если тбПродукции.НСтр <> 0 Тогда
		Регистр.НормативныеЗатраты.ПривязыватьСтроку(тбПродукции.НСтр);
	КонецЕсли;
						
	Регистр.НормативныеЗатраты.Фирма = Фирма;
	Регистр.НормативныеЗатраты.ВидДеятельности = ВидДеятельности;
	Регистр.НормативныеЗатраты.Подразделение = Подразделение;
	Регистр.НормативныеЗатраты.Продукция = тбПродукции.Продукция;
	Регистр.НормативныеЗатраты.СтатьяКалькуляции = СтатьяКалькуляции;
	Регистр.НормативныеЗатраты.Заказ = тбПродукции.Заказ;
	Регистр.НормативныеЗатраты.Материал = Материал;
	Регистр.НормативныеЗатраты.ТипЗатрат = НормыНаВыпуск;
	
	Регистр.НормативныеЗатраты.Количество = СписываемоеКво;
	Регистр.НормативныеЗатраты.Сумма = СписываемаяСумма; 
	
	Регистр.НормативныеЗатраты.ДвижениеВыполнить();
КонецПроцедуры

// ===============================
Процедура ДвиженияПартии(ВсегоСписатьКво=0,ТМЦ, Склад, ВиртуальноеСписание=0) 
	ВсегоСписаноКво = 0;
	ВсегоСписаноСум = 0;
	ВсегоСписаноДав = 0;
	
	ОсталосьСписать = ВсегоСписатьКво;
	НС=0;
	// ищем номер пары (Материал,Предпочтение) в списках
	тбМатериалы.ВыбратьСтроки();
	Пока тбМатериалы.ПолучитьСтроку() = 1 Цикл
		Если (тбМатериалы.Материал = ТМЦ) и (тбМатериалы.Предпочтение = тбПродукции.Заказ) 
		и (тбМатериалы.НСтр = тбПродукции.НСтр)	Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Позиция = тбМатериалы.НомерСтроки;
	
	// тбПартии.НомерСтрокиДокумента совпадает с позицией в спМатериалы
	Если тбПартии.НайтиЗначение(Позиция,НС,"НомерСтрокиДокумента")=1 Тогда
		тбПартии.ПолучитьСтрокуПоНомеру(НС);
	Иначе
		тбПартии.ВыбратьСтроки();
		тбПартии.ПолучитьСтроку();
	КонецЕсли;
	
	// инициализация алгоритмов корректого распределения
	глОчиститьКлючОкр("СписываемаяСтоимость");
	глОчиститьКлючОкр("СписываемаяПродСтоимость");
	
	Пока тбПартии.НомерСтрокиДокумента = Позиция Цикл
		
		МестоХраненияП = тбПартии.МестоХранения;
		ПоставщикП = тбПартии.Поставщик;
		ПоставкаП = тбПартии.Поставка;
		ПрихДокументП = тбПартии.ПрихДокумент;
		СчетП = тбПартии.Счет;
		
		//Пропускаем партии по другим складам
		Если МестоХраненияП <> Склад  Тогда
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
		    Продолжить;
		КонецЕсли;
		// проверяем соответствие партиии заказу
		Если глПартияСоответствуетЗаказу(ПрихДокументП,тбПродукции.Заказ)=0 Тогда
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		//Если давальческий заказ - пропускаем партии поставленные другими контрагентами
		Если (глЭтоДавальческийЗаказ(тбПродукции.Заказ) = 1) Тогда
		    Если (СчетП.Забалансовый = 1) и (ПоставщикП <> тбПродукции.Заказ.Контрагент) Тогда
				Если тбПартии.ПолучитьСтроку()=0 Тогда
					Прервать;
				КонецЕсли;
		    	Продолжить;
			КонецЕсли;
		ИначеЕсли  СчетП.Забалансовый = 1 Тогда
			//По недавальческому заказу можно списывать только собственное сырье
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
			Продолжить;
		ИначеЕсли СчетП<>тбПартии.ТМЦ.Счет Тогда
			// для недавальческого заказа не совпадает счет учета
			Если тбПартии.ПолучитьСтроку()=0 Тогда
				Прервать;
			КонецЕсли;
		    Продолжить;
		КонецЕсли;
		
		НС = 0;
		Если тбОстаткиПоПартиям.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,ТМЦ.Код,СчетП,Склад),НС,"Ключ") = 1 Тогда
			тбОстаткиПоПартиям.ПолучитьСтрокуПоНомеру(НС);
			ОстатокТовара = ?(ВиртуальноеСписание=0, тбОстаткиПоПартиям.ОстатокТовара, тбОстаткиПоПартиям.ОстатокТовараВрт);
			
			Если ОстатокТовара = 0 Тогда
				Если тбПартии.ПолучитьСтроку() = 0 Тогда
					Прервать;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			
			СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
			
			Если ВиртуальноеСписание = 0 Тогда
				КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
				
				СписываемаяСтоимость     = глОкрКорр("СписываемаяСтоимость",тбОстаткиПоПартиям.Стоимость * КоэфСписания,2);
				СписываемаяПродСтоимость = глОкрКорр("СписываемаяПродСтоимость",тбОстаткиПоПартиям.ПродСтоимость * КоэфСписания,2);
				СписываемаяДавСтоимость  = 0;
				//для партий давальческой продукции СписываемаяПродСтоимость - не давальческая себестоимость
				Если СчетП.Забалансовый = 1 Тогда 
				    СписываемаяДавСтоимость = СписываемаяСтоимость - СписываемаяПродСтоимость;
				КонецЕсли;
				
				ВсегоСписаноКво = ВсегоСписаноКво + СписываемыйОстатокТовара;
				ВсегоСписаноСум = ВсегоСписаноСум + СписываемаяСтоимость;
				ВсегоСписаноДав = ВсегоСписаноДав + СписываемаяДавСтоимость;
				
				//Списываем партию оприходовавшую материал, полуфабрикат
				КодОперации = СписаниеВПроизводство;
				глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП, 
					ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
					КодОперации, 0 ,0, 0,тбПродукции.НСтр);       
					
				//Формируем ПРОВОДКИ через глЗаписатьПроводки() ***************************************
				Если СчетП.Забалансовый <> 1 Тогда //Списываем собственные материалы/полуфабрикаты/продукцию
				    Если (Лев(СокрЛП(СчетП),2) = "25") или (Лев(СокрЛП(СчетП),2) = "26") Тогда  //списываем собственные полуфабрикаты
						Сод = "Списание собственных полуфабрикатов в производство: уч. сумма";
					Иначе                           
						Сод = "Списание собственных материалов в производство: уч. сумма";
					КонецЕсли; 
					глПроводкаПоЗатратам(Контекст,"231",СчетП,СписываемаяСтоимость,Сод,СписываемыйОстатокТовара, ВидДеятельности,Подразделение,ТМЦ.ВидЗатрат,
					МестоХраненияП,ТМЦ,ПрихДокументП, ,,"СП",1);
					
					Если (глЭтоДавальческийЗаказ(тбПродукции.Заказ) =1) Тогда  // Списывается на давальческую продукцию
						глПроводка(Контекст,"ДВ",,СписываемаяСтоимость,"Списание собственного сырья в производство: уч. сумма",СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
						,,, ,,"СП",1);
					КонецЕсли;
					
				ИначеЕсли СокрЛП(СчетП) = "022" Тогда //Списываем давальческие материалы
					
					глПроводка(Контекст,"ДВ",СчетП,СписываемаяСтоимость,"Списание давальческих материалов в производство: уч. сумма",СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
					МестоХраненияП,ТМЦ,ПрихДокументП, ,,"СП",1); 
					
				ИначеЕсли (СокрЛП(СчетП) = "0235") или (СокрЛП(СчетП) = "0236") Тогда //Списываем давальческие полуфабрикаты/продукцию
					//Полная себестоимость
					глПроводка(Контекст,"ДВ",СчетП,СписываемаяСтоимость,"Списание давальческих полуфабрикатов в производство: давальческая часть суммы",СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
					МестоХраненияП,ТМЦ,ПрихДокументП, ,,"СП",1);
					
					//Недавальческая часть            
					глПроводка(Контекст,"231","232",СписываемаяПродСтоимость,"Списание давальческих полуфабрикатов в производство: недавальческая часть суммы",СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
					МестоХраненияП,ТМЦ,ПрихДокументП, ,,"СП",1);
				КонецЕсли;
				
				глУчестьСписание(тбОстаткиПоПартиям,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость);
			
			Иначе
				тбОстаткиПоПартиям.ОстатокТовараВрт = тбОстаткиПоПартиям.ОстатокТовараВрт - СписываемыйОстатокТовара;
			КонецЕсли;
			
			ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
			
		КонецЕсли;
		
		Если ОсталосьСписать = 0 Тогда
			Прервать;
		КонецЕсли;   
		
		Если тбПартии.ПолучитьСтроку()=0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если ВиртуальноеСписание = 1 Тогда
		ВсегоСписатьКво = ОсталосьСписать;
		Возврат;
	КонецЕсли;
	
	Если ОсталосьСписать > 0 Тогда
		глСообщитьОбОтсутствииПартии(0, Фирма, ТМЦ, тбПродукции.НСтр);
		Если Константа.РазрешитьОтрицОстатки = Нет Тогда
			фОшибка = 1;
			Возврат;
		Иначе     
			//Создаем СВОЮ партию по учетной себестоимости
			СписываемыйОстатокТовара = ОсталосьСписать;
			СписываемаяСтоимость = ТМЦ.УчетнаяЦена.Получить(ДатаДок) * СписываемыйОстатокТовара;
			СписываемаяПродСтоимость = 0;		
			СчетП = ТМЦ.Счет;
			
			Если глПартионныйУчетПоСкладам = Да Тогда
				МестоХраненияП = Склад;
			Иначе
				МестоХраненияП = 0;
			КонецЕсли;
			
			ПоставщикП = 0;
			Если глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
				ПоставкаП = 0;
				ПрихДокументП = 0;
			Иначе             
				ПоставкаП = ТекущийДокумент();
				ПрихДокументП = ТекущийДокумент();
			КонецЕсли;			
			
			КодОперации = СписаниеВПроизводство;
			//Формируем ДВИЖЕНИЯ по списанию
			глПровестиПартию(Контекст, 0, 0, Фирма, ТМЦ, СчетП, МестоХраненияП, ПоставщикП, 
				ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
				КодОперации, 0 ,0, 0,тбПродукции.НСтр);       
				
			//Формируем ПРОВОДКИ по списанию
			Если (Лев(СокрЛП(СчетП),2) = "25") или (Лев(СокрЛП(СчетП),2) = "26") Тогда  //списываем собственные полуфабрикаты
				Сод = "Списание собственных полуфабрикатов в производство: уч. сумма";
			Иначе                           
				Сод = "Списание собственных материалов в производство: уч. сумма";
			КонецЕсли; 
			глПроводкаПоЗатратам(Контекст,"231",СчетП,СписываемаяСтоимость,Сод,СписываемыйОстатокТовара, ВидДеятельности,Подразделение,ТМЦ.ВидЗатрат,
			МестоХраненияП,ТМЦ,ПрихДокументП, ,,"СП",1);
			
			Если (глЭтоДавальческийЗаказ(тбПродукции.Заказ) =1) Тогда  // Списывается на давальческую продукцию
				глПроводка(Контекст,"ДВ",,СписываемаяСтоимость,"Списание собственного сырья в производство: уч. сумма",СписываемыйОстатокТовара, ВидДеятельности,Подразделение,,
				,,, ,,"СП",1);
			КонецЕсли;
			
			ВсегоСписаноКво = ВсегоСписаноКво + СписываемыйОстатокТовара;
			ВсегоСписаноСум = ВсегоСписаноСум + СписываемаяСтоимость;
			глСообщитьОСозданииПартии(ТМЦ, СписываемыйОстатокТовара);
		КонецЕсли;
	КонецЕсли;

	// получаем себестоимость списанного материала, полуфабриката
	Если ВсегоСписаноКво = 0 Тогда            
	    // рассчитываем себестоимость из справочника ТМЦ
	    СуммаПоМатериалу = 0;
		СуммаДавПоМатериалу = 0;
	Иначе
		СуммаПоМатериалу = ВсегоСписаноСум;
		СуммаДавПоМатериалу = ВсегоСписаноДав;
	КонецЕсли;

	//Накапливаем общую учетную стоимость использованного собственного и давальческого сырья
	СуммаПоПродукции = СуммаПоПродукции + СуммаПоМатериалу;
	СуммаДавПоПродукции = СуммаДавПоПродукции + СуммаДавПоМатериалу;
	
КонецПроцедуры

// ===============================
Процедура ДвиженияВыпускПродукции(КвоПродукции,КвоБрака,СуммаПродукции,СуммаДавПродукции,Партия, ПереработкаФарша = 0) 
	
	Регистр.ВыпускПродукции.ПривязыватьСтроку(тбПродукции.НСтр);
	Регистр.ВыпускПродукции.Фирма = Фирма;
	Регистр.ВыпускПродукции.ВидДеятельности = ВидДеятельности;
	Регистр.ВыпускПродукции.Подразделение = Подразделение;
	Регистр.ВыпускПродукции.Заказ = тбПродукции.Заказ;
	Регистр.ВыпускПродукции.Продукция = ?(ПереработкаФарша = 1,ТМЦ_ПромпереработкаФарша,тбПродукции.Продукция); // + umk
	Регистр.ВыпускПродукции.Партия = Партия; 
	Регистр.ВыпускПродукции.Количество = КвоПродукции;  
	Регистр.ВыпускПродукции.КоличествоБрака = ?(ПереработкаФарша = 1,0, КвоБрака);  
	Регистр.ВыпускПродукции.Сумма = СуммаПродукции; 
	Регистр.ВыпускПродукции.СуммаДав = СуммаДавПродукции; 
	Регистр.ВыпускПродукции.ДвижениеВыполнить();
	
КонецПроцедуры      

//================================
// ===============================
Процедура ДвиженияПлановыйВыпускПродукции(КвоПродукции,КвоБрака,СуммаПродукции,СуммаДавПродукции,Партия, ПереработкаФарша = 0) 
	
	Регистр.ПлановыйВыпускПродукции.ПривязыватьСтроку(тбПродукции.НСтр);
	Регистр.ПлановыйВыпускПродукции.Фирма = Фирма;
	Регистр.ПлановыйВыпускПродукции.ВидДеятельности = ВидДеятельности;
	Регистр.ПлановыйВыпускПродукции.Подразделение = Подразделение;
	Регистр.ПлановыйВыпускПродукции.Заказ = тбПродукции.Заказ;
	Регистр.ПлановыйВыпускПродукции.Продукция = тбПродукции.Продукция; // + umk
	Регистр.ПлановыйВыпускПродукции.Партия = Партия; 
	Регистр.ПлановыйВыпускПродукции.Количество = КвоПродукции;  
	Регистр.ПлановыйВыпускПродукции.КоличествоБрака = ?(ПереработкаФарша = 1,0, КвоБрака);  
	Регистр.ПлановыйВыпускПродукции.Сумма = СуммаПродукции; 
	Регистр.ПлановыйВыпускПродукции.СуммаДав = СуммаДавПродукции; 
	Регистр.ПлановыйВыпускПродукции.ДвижениеВыполнить();
	
КонецПроцедуры      

// Проходим по всем строкам таблицы Продукции и по таблице Норм 
// ===============================
Функция ДвиженияИПроводки()
	Перем Партия;    
	Перем фВозврат;	// возвращаемое значение
	фВозврат = 1;              
	
	тбНормы = СоздатьОбъект("ТаблицаЗначений");
	тбПартии = 0;
	//При списании материалов нужно проверить их наличие
	Если (СписыватьМатериалы = 1) ИЛИ (ТолькоНедостающие = 1) Тогда
		спОтбор = СоздатьОбъект("СписокЗначений");
		спМатериалы = СоздатьОбъект("СписокЗначений");
		тбМатериалы.Выгрузить(спМатериалы,,,"Материал");
		спОтбор.Установить("Товар", спМатериалы);
		спОтбор.Установить("Счет", спСчета);  
		спПредпочтения = СоздатьОбъект("СписокЗначений");
		тбМатериалы.Выгрузить(спПредпочтения,,,"Предпочтение");
		
		спОтборОстатки = СоздатьОбъект("СписокЗначений");
		спОтборОстатки.Установить("Товар", спМатериалыДляОстатков);
		
		Если глПартионныйУчетПоСкладам = Да Тогда
			спОтбор.Установить("МестоХранения", спСклады);
		КонецЕсли;
		
		ВремРег = СоздатьОбъект("Регистры");
		ВремРег.Актуальность(1);
		глРассчитатьОстаткиИРезервы(Контекст, ВремРег, спОтборОстатки,1,1,1);
		глРассчитатьОстаткиПартий(Контекст, ВремРег, Фирма, спОтбор);
		
		тбОстаткиПоПартиям = 0;
		ИнвСтартегияПредпочтения  = 0;
		ИнвСтратегияПродажи = 1;   //Списываем сначала давальческое сырье
		 
		глСформироватьТаблицуПартий(Контекст, ВремРег,Фирма, спОтбор, спПредпочтения, 
		тбПартии, тбОстаткиПоПартиям, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
		
		тбОстаткиПоПартиям.НоваяКолонка("ОстатокТовараВрт","Число",15,3);
		тбОстаткиПоПартиям.ВыбратьСтроки();
		Пока тбОстаткиПоПартиям.ПолучитьСтроку() = 1 Цикл
			тбОстаткиПоПартиям.ОстатокТовараВрт = тбОстаткиПоПартиям.ОстатокТовара;
		КонецЦикла;
				
		спОтбор = 0;  
		спОтборОстатки = 0;
	КонецЕсли;
	
	Если ТолькоНедостающие = 1 Тогда
		тбПрод = СоздатьОбъект("ТаблицаЗначений");
		тбПродукции.Выгрузить(тбПрод,,,"Продукция,Кво,ИД");
		тбПрод.Сортировать("ИД");
		тбИспользованиеПолуфабрикатов.Сортировать("ИДПродукции,Полуфабрикат*");
		
		//Сортируем таблицу ПРОДУКЦИИ в порядке возрастания глубины передела
		тбПродукции.Сортировать("НСтр+,Уровень+");
		
		тбПродукции.ВыбратьСтроки();
		Пока тбПродукции.ПолучитьСтроку() = 1 Цикл
	
			// Списание имеющихся полуфабрикатов  с уровнем передела > 0
			Если тбПродукции.Уровень > 0 Тогда
				
				// определим количество к выпуску
				НС = 0;
				Если тбПрод.НайтиЗначение(тбПродукции.ИД,НС,"ИД") = 1 Тогда
					тбПрод.ПолучитьСтрокуПоНомеру(НС);
					ОсталосьКвоПродукции = тбПрод.Кво;                     
				Иначе
					ОсталосьКвоПродукции = тбПродукции.Кво;                     
				КонецЕсли;
				
				// пытаемся списать существующие партии полуфабриката
				ДвиженияПартии(ОсталосьКвоПродукции,тбПродукции.Продукция, МестоХраненияПолуфабрикатов, 1);
				
				// корректируем текущее количество выпуска и нормы
				тбПродукции.Кво = ОсталосьКвоПродукции;
				тбНормы = СоздатьОбъект("ТаблицаЗначений");
				Если глПолучитьНормы(тбПродукции.Продукция,,тбПродукции.Кво,ДатаДок,тбПродукции.Заказ,тбНормы) = 0 Тогда
					Продолжить;
				КонецЕсли;
				тбПродукции.Нормы = тбНормы;     
				
				НС = 0;
				Если тбИспользованиеПолуфабрикатов.НайтиЗначение(тбПродукции.ИД,НС,"ИДПродукции") = 0 Тогда
				    Продолжить;
				КонецЕсли;
				тбИспользованиеПолуфабрикатов.ПолучитьСтрокуПоНомеру(НС);
				
				Пока тбИспользованиеПолуфабрикатов.ИДПродукции = тбПродукции.ИД Цикл
					НС = 0;
					Если тбНормы.НайтиЗначение(тбИспользованиеПолуфабрикатов.Полуфабрикат,НС,"Материал") = 1 Тогда
						тбНормы.ПолучитьСтрокуПоНомеру(НС);
						НС = 0;
						Если тбПрод.НайтиЗначение(тбИспользованиеПолуфабрикатов.ИДПолуфабриката,НС,"ИД") = 1 Тогда
							тбПрод.ПолучитьСтрокуПоНомеру(НС);
							тбПрод.Кво = Мин(тбПрод.Кво, тбНормы.Кво);
						КонецЕсли;    
					КонецЕсли;                                              
					
					Если тбИспользованиеПолуфабрикатов.ПолучитьСтроку() = 0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;  
	КонецЕсли;
	
	//Сортируем таблицу ПРОДУКЦИИ в порядке убывания глубины передела
	тбПродукции.Сортировать("НСтр+,Уровень-");
	
	тбПродукции.ВыбратьСтроки();
	Пока тбПродукции.ПолучитьСтроку() = 1 Цикл

		Если тбПродукции.Кво = 0 Тогда
		    Продолжить;
		КонецЕсли;
		
		Партия = ПолучитьПустоеЗначение("Документ");
		Если ПолучитьПартию(Партия) = 0 Тогда
			фВозврат = 0;
		КонецЕсли;
		
		// инициализация алгоритмов корректого распределения
		глОчиститьКлючОкр("СебестоимостьПродукции");
		глОчиститьКлючОкр("СебестоимостьДавПродукции");
		глОчиститьКлючОкр("СебестоимостьБрака");
		глОчиститьКлючОкр("СебестоимостьДавБрака");
		глОчиститьКлючОкр("НеДавСебестоимостьБрака");
		
		СуммаПоМатериалу = 0; 			//Собственная часть учетной стоимости материала (полуфабриката)
		СуммаДавПоМатериалу = 0; 		//Давальческая часть учетной стоимости материала (полуфабриката)
		СуммаПоПродукции = 0; 			//Сумма использованного собственного сырья при выпуске продукции
		СуммаДавПоПродукции = 0; 		//Сумма давальческого сырья использованного для выпуска продукции
		СуммаМатЗатратПоПродукции = 0;	//Сумма материальных затрат по нормам на продукцию
		СуммаНеМатЗатратПоПродукции = 0;//Сумма нематериальных затрат по нормам на продукцию
		СуммаВозврОтходовПоПродукции = 0;//Сумма возвратных отходов по нормам на продукцию
		
		тбНормы = тбПродукции.Нормы;
		тбНормы.ВыбратьСтроки();     
		
		//Цикл по НОРМАМ ЗАТРАТ на выпускаемую продукцию, полуфабрикат
		Пока тбНормы.ПолучитьСтроку() = 1 Цикл
			Если СписыватьМатериалы = 1 Тогда
				//ВОЗВРАТНЫЙ ОТХОД  
				Если тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.ВозвратныйОтход Тогда
					СчетП = тбНормы.Материал.Счет;
					
					//Приходуем возвратный отходы по ОСТАТКАМ
					
					// движения по регистру Остатки                                                                          
					глПровестиОстатки(Контекст, ВремРег, Фирма, МестоХраненияВозвратныхОтходов, тбНормы.Материал, ,тбНормы.Кво, 1,0,0,1,,,тбПродукции.НСтр);
					
					//Приходуем возвратный отходы по ПАРТИЯМ как собственные, не зависимо от того давальческое сырье или нет
					//В качестве партии используем текущий документ т.к. возвратные отходы не являются продукцией, а просто обычными материалами.
					глПровестиПартию(Контекст, 1, 0, Фирма, тбНормы.Материал, СчетП, МестоХраненияВозвратныхОтходов,,ТекущийДокумент(),ТекущийДокумент(),
					тбНормы.Кво, -тбНормы.Сумма, 0, ВыпускПродукции, 0 ,0, 0); //СписываемыйНДС, КодОперации, , 0 ,0, 0);
					       
					//Отражаем в регистре ПРОИЗВОДСТВЕННЫЕ ЗАТРАТЫ, как затрату с отрицательной суммой
					ДвиженияПроизводственныеЗатраты(тбНормы.Материал,тбНормы.Материал.ВидЗатрат,-тбНормы.Кво,тбНормы.Сумма,0,ОтражениеЗатрат);
					
					//Делаем ПРОВОДКУ по приходованию возвратного отходов
					глПроводка(Контекст,СчетП,"231",-тбНормы.Сумма,"Возвратный отход, полученный при выпуске продукции",тбНормы.Кво, МестоХраненияВозвратныхОтходов,тбНормы.Материал, ТекущийДокумент(),
					ВидДеятельности,Подразделение,, ,,"СП");
					
					Если (глЭтоДавальческийЗаказ(тбПродукции.Заказ) = 1) Тогда	
						глПроводка(Контекст,,"ДВ",-тбНормы.Сумма,"Возвратный отход, полученный при выпуске продукции",тбНормы.Кво, ,,,
						ВидДеятельности,Подразделение,, ,,"СП");
					КонецЕсли;
					
				//МАТЕРИАЛ или ПОЛУФАБРИКАТ
				ИначеЕсли (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Материал) 
				или (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат) Тогда
				    
					Если (тбНормы.Материал.ВидТМЦ = Перечисление.ВидыТМЦ.Материал) 
					 Или (тбНормы.Материал.ВидТМЦ = Перечисление.ВидыТМЦ.Товар)
					 Или (тбНормы.Материал.ВидТМЦ = Перечисление.ВидыТМЦ.Тара) Тогда
						Склад = МестоХраненияМатериалов;		
					Иначе //Полуфабрикат
						Склад = МестоХраненияПолуфабрикатов;		
					КонецЕсли;
					
					фОшибка = 0;
					//Списываем материалы по ОСТАТКАМ и по ПАРТИЯМ
					глПровестиОстатки(Контекст, ВремРег, Фирма, Склад, тбНормы.Материал, ,тбНормы.Кво, 0,0,0,1,1,,тбПродукции.НСтр);
					
					//формируем ПРОВОДКИ и движения, Накапливаем СуммаПоПродукции,СуммаДавПоПродукции
					//Получаем СуммаПоМатериалу и СуммаДавПоМатериалу
					ДвиженияПартии(тбНормы.Кво,тбНормы.Материал, Склад);   
					Если фОшибка = 1 Тогда
						фВозврат = 0;
					КонецЕсли;
					
					//Отражаем ПРОИЗВОДСТВЕННЫІЕ ЗАТРАТЫ
					ДвиженияПроизводственныеЗатраты(тбНормы.Материал,тбНормы.Материал.ВидЗатрат,тбНормы.Кво,СуммаПоМатериалу,СуммаДавПоМатериалу,ОтражениеЗатрат);
				
				//СТАТЬИ КАЛЬКУЛЯЦИИ	
				ИначеЕсли (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.СтатьяКалькуляции) Тогда
					
				КонецЕсли;
			КонецЕсли; //СписыватьМатериалы = 1 
			
			ДвиженияНормативныеЗатраты(тбНормы.СтатьяКалькуляции,тбНормы.Материал,тбНормы.Кво * ?(тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.ВозвратныйОтход,-1,1),тбНормы.Сумма);
			
			//ВОЗВРАТНЫЙ ОТХОД  
			Если тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.ВозвратныйОтход Тогда
				//СУММУ берем из нормативов
				СуммаВозврОтходовПоПродукции = СуммаВозврОтходовПоПродукции + тбНормы.Сумма;
			//МАТЕРИАЛ или ПОЛУФАБРИКАТ
			ИначеЕсли (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Материал) 
			или (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат) Тогда
				СуммаМатЗатратПоПродукции = СуммаМатЗатратПоПродукции + тбНормы.Сумма;
				
			ИначеЕсли (тбНормы.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.СтатьяКалькуляции) Тогда
				СуммаНеМатЗатратПоПродукции = СуммаНеМатЗатратПоПродукции + тбНормы.Сумма;
			КонецЕсли;
			
		КонецЦикла;  
		глЗаписатьПроводкиВОперацию(Контекст);
		
		//Полуфабрикаты с уровнем передела > 0 приходуются на МестоХраненияПолуфабрикатов
		Если тбПродукции.Уровень > 0 Тогда
		    СкладПродукции = МестоХраненияПолуфабрикатов;
		Иначе                                   
			СкладПродукции = МестоХраненияПродукции;
		КонецЕсли;
		
		//Полуфабрикаты с уровнем передела > 0 приходуются на МестоХраненияПолуфабрикатов для БУ + umk
		Если тбПродукции.Уровень > 0 Тогда
		    СкладПродукцииБУ = МестоХраненияПолуфабрикатов;
		Иначе                                   
			СкладПродукцииБУ = МестоХраненияПродукции;
		КонецЕсли;
		
		
		//ФОРМИРУЕМ ПАРТИИ продукции
		СебестоимостьПродукции = 0;  //Себестоимость заданного количества продукции
		СебестоимостьДавПродукции = 0; //Давальческая составляющая себестоимости продукции
		
		//Определяем СУММУ проводок по ПРИХОДОВАНИЮ
		
		Если Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоПлановойСебестоимости  Тогда
			//Плановую себестоимость берем из справочинка ТМЦ, УчетнаяЦена
			СебестоимостьПродукции = тбПродукции.Продукция.УчетнаяЦена.Получить(ДатаДок) * тбПродукции.Кво;
		ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоНормативнойСебестоимости  Тогда
			//Считаем себестоимость как общую сумму затрат по нормативам
			СебестоимостьПродукции = СуммаМатЗатратПоПродукции + СуммаНеМатЗатратПоПродукции + СуммаВозврОтходовПоПродукции;
		ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоСебестоимостиФактическогоСостава  Тогда
			//Считаем себестоимость как фактические материальные затраты + плановые прочие затраты по нормативам
			СебестоимостьПродукции = СуммаПоПродукции + СуммаНеМатЗатратПоПродукции + СуммаВозврОтходовПоПродукции;
			Стр = 0;
			Если ТБСС.НайтиЗначение(тбПродукции.Продукция, Стр, "Продукция") = 1 Тогда
				СебестоимостьПродукции = ТБСС.ПолучитьЗначение(Стр, "Сумма");
			КонецЕсли;
		ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.БезСебестоимости Тогда	
			СебестоимостьПродукции = 0;
		Иначе
			глКомментарий("Для расчета себестоимости продукции, необходимо заполнить константу ""Способ приходования продукции""!",0,,"!");
	    	фВозврат = 0;
		КонецЕсли;	
		
		СебестоимостьПродукции = глОкрКорр("СебестоимостьПродукции",СебестоимостьПродукции,2);
		
		Если (глЭтоДавальческийЗаказ(тбПродукции.Заказ) = 1) Тогда	
			//Кроме полной себестоимости, определяем давальческую
			Если Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоПлановойСебестоимости  Тогда
				//Плановую себестоимость полностью давальческая  
				СебестоимостьДавПродукции = СебестоимостьПродукции;
			ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоНормативнойСебестоимости  Тогда
				//Давальческая себестоимость - материальная часть нормативных затрат
				СебестоимостьДавПродукции = СуммаМатЗатратПоПродукции;
			ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоСебестоимостиФактическогоСостава  Тогда
				//Давальческая часть - сумма фактически списанных давальческих материалов (полуфабрикатов)
				СебестоимостьДавПродукции = СуммаДавПоПродукции;
			ИначеЕсли Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.БезСебестоимости Тогда	
				//Себестоимость = 0
				СебестоимостьДавПродукции = 0;
			КонецЕсли;
		КонецЕсли;
		
		СебестоимостьДавПродукции = глОкрКорр("СебестоимостьДавПродукции",СебестоимостьДавПродукции,2);
		
		//Определяем базу для расчета количества выпущенной продукции // + umk
		Если (ПустоеЗначение(Константа.ДатаНачалаУчетаВыпускаПродукцииПоФакту) = 0) И (ДатаДок>Константа.ДатаНачалаУчетаВыпускаПродукцииПоФакту) Тогда 
            ПересчКвоПродукции = ?(Эксперимент = 1, тбПродукции.Кво, тбПродукции.КвоГППриемки);	//учет по факту 	
		Иначе
			ПересчКвоПродукции = тбПродукции.Кво; // иначе по плану
		КонецЕсли;
		
		// планируемый выпуск продукции
		ДвиженияПлановыйВыпускПродукции(тбПродукции.Кво,тбПродукции.КвоБрака,СебестоимостьПродукции,СебестоимостьДавПродукции,Партия);// + umk
		
		Если ПересчКвоПродукции = 0 Тогда
			Продолжить; 
		КонецЕсли;
		
		ПересчКвоБрака = тбПродукции.КвоБрака;
		
		Если ПересчКвоПродукции = 0 Тогда
			СебестоимостьБрака = 0;
			СебестоимостьДавБрака = 0;
		Иначе
			СебестоимостьБрака    = глОкрКорр("СебестоимостьБрака",СебестоимостьПродукции * ПересчКвоБрака / ПересчКвоПродукции,2);
			СебестоимостьДавБрака = глОкрКорр("СебестоимостьДавБрака",СебестоимостьДавПродукции * ПересчКвоБрака / ПересчКвоПродукции,2);
		КонецЕсли;
		
		Если (глЭтоДавальческийЗаказ(тбПродукции.Заказ) = 1) Тогда
			Поставщик = тбПродукции.Заказ.Контрагент;
			СчетП = глПолучитьСчетУчетаТМЦ("Дав",тбПродукции.Продукция);
			НеДавСебестоимостьПродукции = СебестоимостьПродукции - СебестоимостьДавПродукции;
			НеДавСебестоимостьБрака = ?(ПересчКвоПродукции=0,0, глОкрКорр("НеДавСебестоимостьБрака",НеДавСебестоимостьПродукции * ПересчКвоБрака / ПересчКвоПродукции,2));
		Иначе
			Поставщик = "";
			СчетП = тбПродукции.Продукция.Счет;
			НеДавСебестоимостьПродукции = 0;  //Не давальческая часть себестоимости продукции
			НеДавСебестоимостьБрака = 0;  //Не давальческая часть себестоимости брака
		КонецЕсли;
		
		//Приходуем продукцию по регистрам ОСТАТКИ и ПАРТИИ
		
		// регистр остатки
		Если (Эксперимент = 1) И ((ПересчКвоПродукции - ПересчКвоБрака - тбПродукции.КвоГППриемки)>0) Тогда// + umk
			глПровестиОстатки(Контекст, ВремРег, Фирма, МестоХраненияПромпереработка, ТМЦ_ПромпереработкаФарша, ,ПересчКвоПродукции - ПересчКвоБрака - тбПродукции.КвоГППриемки, 1, 0,ПроизводитьПолуфабрикаты,1,,,тбПродукции.НСтр, тбПродукции.ДопКво);
			Если тбПродукции.КвоГППриемки <> 0 Тогда 	
				глПровестиОстатки(Контекст, ВремРег, Фирма, СкладПродукции, тбПродукции.Продукция, ,тбПродукции.КвоГППриемки , 1, 0,ПроизводитьПолуфабрикаты,1,,,тбПродукции.НСтр, тбПродукции.ДопКво);
			КонецЕсли;
		Иначе// - umk
			глПровестиОстатки(Контекст, ВремРег, Фирма, СкладПродукции, тбПродукции.Продукция, ,ПересчКвоПродукции - ПересчКвоБрака, 1, 0,ПроизводитьПолуфабрикаты,1,,,тбПродукции.НСтр, тбПродукции.ДопКво);
		КонецЕсли;
		
		Если глПартионныйУчетПоСкладам = Нет Тогда
		    СкладПродукции = ПолучитьПустоеЗначение("Справочник");
		КонецЕсли;
		
		//регистр партии 
		Если (Эксперимент = 1) И ((ПересчКвоПродукции - ПересчКвоБрака - тбПродукции.КвоГППриемки)>0) Тогда// + umk
			глПровестиПартию(Контекст, 1, 0, Фирма, ТМЦ_ПромпереработкаФарша, ТМЦ_ПромпереработкаФарша.Счет, СкладПродукции, Поставщик, Партия, //Склад д.б. пустой как для продукции
			Партия, ПересчКвоПродукции - ПересчКвоБрака - тбПродукции.КвоГППриемки, ((СебестоимостьПродукции - СебестоимостьБрака)/(ПересчКвоПродукции - ПересчКвоБрака)) * (ПересчКвоПродукции - ПересчКвоБрака - тбПродукции.КвоГППриемки), НеДавСебестоимостьПродукции - НеДавСебестоимостьБрака,
			ВыпускПродукции, 0 ,0, 0,тбПродукции.НСтр);
			Если тбПродукции.КвоГППриемки <> 0 Тогда 
				глПровестиПартию(Контекст, 1, 0, Фирма, тбПродукции.Продукция, СчетП, СкладПродукции, Поставщик, Партия, 
				Партия, тбПродукции.КвоГППриемки , ((СебестоимостьПродукции - СебестоимостьБрака)/(ПересчКвоПродукции - ПересчКвоБрака)) * тбПродукции.КвоГППриемки, НеДавСебестоимостьПродукции - НеДавСебестоимостьБрака,
				ВыпускПродукции, 0 ,0, 0,тбПродукции.НСтр);
			КонецЕсли;
		Иначе // - umk
			глПровестиПартию(Контекст, 1, 0, Фирма, тбПродукции.Продукция, СчетП, СкладПродукции, Поставщик, Партия, 
			Партия, ПересчКвоПродукции - ПересчКвоБрака , СебестоимостьПродукции - СебестоимостьБрака, НеДавСебестоимостьПродукции - НеДавСебестоимостьБрака,
			ВыпускПродукции, 0 ,0, 0,тбПродукции.НСтр);
		КонецЕсли;
			
		//Добавим в тбПартии, чтобы производимый полуфабрикат можно было сразу списать на производство продукции	
		Если (ПроизводитьПолуфабрикаты = 1) И (СписыватьМатериалы = 1) Тогда
			//В качестве Поставки берем Партию
		    ДобавитьПолуфабрикатВТбПартии(Поставщик,Партия,СчетП,СкладПродукции,СебестоимостьПродукции - СебестоимостьБрака,НеДавСебестоимостьПродукции - НеДавСебестоимостьБрака,ПересчКвоПродукции - ПересчКвоБрака );
		КонецЕсли;    
		
		Если (Эксперимент = 1) И ((ПересчКвоПродукции - тбПродукции.КвоГППриемки)>0) Тогда //Движения по ПРОМПЕРЕРАБОТКЕ + umk
			//Промпереработка фаршп
			ДвиженияВыпускПродукции(ПересчКвоПродукции - тбПродукции.КвоГППриемки,ПересчКвоБрака,(СебестоимостьПродукции/ПересчКвоПродукции)*(ПересчКвоПродукции - тбПродукции.КвоГППриемки),СебестоимостьДавПродукции,Партия,1);
			//То что принято на склад как продукция
			Если тбПродукции.КвоГППриемки <> 0 Тогда
				ДвиженияВыпускПродукции(тбПродукции.КвоГППриемки,ПересчКвоБрака,(СебестоимостьПродукции/ПересчКвоПродукции)*тбПродукции.КвоГППриемки, СебестоимостьДавПродукции, Партия);
			КонецЕсли;
		Иначе // - umk
			//Движения по ВЫПУСКУ ПРОДУКЦИИ
			ДвиженияВыпускПродукции(ПересчКвоПродукции,ПересчКвоБрака,СебестоимостьПродукции,СебестоимостьДавПродукции,Партия);  
		КонецЕсли;
		
		Если (Эксперимент = 1) И (глЭтоДавальческийЗаказ(тбПродукции.Заказ) = 0) И ((ПересчКвоПродукции - тбПродукции.КвоГППриемки - ПересчКвоБрака)>0) Тогда //Движения по ПРОМПЕРЕРАБОТКЕ и Недавальческий заказ + umk
			глПроводка(Контекст, ТМЦ_ПромпереработкаФарша.Счет, "231",
			((СебестоимостьПродукции - СебестоимостьБрака)/(ПересчКвоПродукции - ПересчКвоБрака))*(ПересчКвоПродукции - тбПродукции.КвоГППриемки - ПересчКвоБрака),"Производство продукции",ПересчКвоПродукции - тбПродукции.КвоГППриемки - ПересчКвоБрака, МестоХраненияПромпереработка,ТМЦ_ПромпереработкаФарша,Партия,  
			ВидДеятельности,Подразделение,, ,,"СП");
			Если тбПродукции.КвоГППриемки <> 0 Тогда
				глПроводка(Контекст, тбПродукции.Продукция.Счет, "231",((СебестоимостьПродукции - СебестоимостьБрака)/(ПересчКвоПродукции - ПересчКвоБрака)) * (тбПродукции.КвоГППриемки),"Производство продукции",тбПродукции.КвоГППриемки, СкладПродукцииБУ,тбПродукции.Продукция,Партия,  
				ВидДеятельности,Подразделение,, ,,"СП");	
			КонецЕсли;
		Иначе // - umk
			//ПРОВОДКИ по ПРОИЗВОДСТВУ ПРОДУКЦИИ
			//Недавальческий заказ
			Если (глЭтоДавальческийЗаказ(тбПродукции.Заказ) = 0) Тогда
				глПроводка(Контекст,тбПродукции.Продукция.Счет,"231",СебестоимостьПродукции - СебестоимостьБрака,"Производство продукции",ПересчКвоПродукции - ПересчКвоБрака, СкладПродукцииБУ,тбПродукции.Продукция,Партия,  
				ВидДеятельности,Подразделение,, ,,"СП"); 
			Иначе //Давальческий заказ
				СчетДав = глПолучитьСчетУчетаТМЦ("Дав",тбПродукции.Продукция);
				глПроводка(Контекст,СчетДав,"ДВ",СебестоимостьПродукции - СебестоимостьБрака,"Производство продукции по давальческому заказу",ПересчКвоПродукции - ПересчКвоБрака, СкладПродукцииБУ,тбПродукции.Продукция,Партия,  
				ВидДеятельности,Подразделение,, ,,"СП"); 
				
				глПроводка(Контекст,"232","231",НеДавСебестоимостьПродукции - НеДавСебестоимостьБрака ,"Производство продукции по давальческому заказу", ПересчКвоПродукции - ПересчКвоБрака, СкладПродукцииБУ,тбПродукции.Продукция,Партия,  
				ВидДеятельности,Подразделение,, ,,"СП"); 
			КонецЕсли;
		КонецЕсли;
		
		//Приходуем БРАК
		Если ПересчКвоБрака > 0 Тогда
			СкладБрака = Константа.МестоХраненияБрака;    
			глПровестиОстатки(Контекст, ВремРег, Фирма, СкладБрака, тбПродукции.Продукция, ,ПересчКвоБрака, 1, 0,0,1,,,тбПродукции.НСтр);
			
			глПровестиПартию(Контекст, 1, 0, Фирма, тбПродукции.Продукция, СчетП, СкладБрака,,Партия, 
			Партия, ПересчКвоБрака , СебестоимостьБрака, НеДавСебестоимостьБрака,
				ВыпускПродукции, 0 ,0, 0);
				
			//ПРОВОДКИ по ПРОИЗВОДСТВУ БРАКА 
			//Недавальческий заказ
			Если (глЭтоДавальческийЗаказ(тбПродукции.Заказ) = 0) Тогда
				глПроводка(Контекст,тбПродукции.Продукция.Счет,"231",СебестоимостьБрака,"Приходование брака",ПересчКвоБрака, СкладБрака,тбПродукции.Продукция,Партия,  
					ВидДеятельности,Подразделение,, ,,"СП"); 
				//Давальческий заказ
			Иначе                                                              
				СчетДав = глПолучитьСчетУчетаТМЦ("Дав",тбПродукции.Продукция);
				глПроводка(Контекст,СчетДав,"ДВ",СебестоимостьБрака,"Приходование брака при производстве по давальческому заказу",ПересчКвоБрака, СкладБрака,тбПродукции.Продукция,Партия, 
					ВидДеятельности,Подразделение,, ,,"СП"); 
					
				глПроводка(Контекст,"232","231",НеДавСебестоимостьБрака,"Приходование брака при производстве по давальческому заказу", ПересчКвоБрака, СкладБрака,тбПродукции.Продукция,Партия, 
					ВидДеятельности,Подразделение,, ,,"СП"); 
			КонецЕсли;
					
		КонецЕсли;
			
	КонецЦикла; //тбПродукции.ПолучитьСтроку() = 1 
	
	Если СписыватьМатериалы = 1 Тогда
		ВремРег.Актуальность(0);	
	КонецЕсли;
	Возврат фВозврат;
КонецФункции

Процедура ЗаписатьЦены()
	НачатьТранзакцию();
	КЦен = Константа.ЗакупЦена;
	СпрЦ = СоздатьОбъект("Справочник.Цены");
	СпрЦ.ИспользоватьДату(ДатаДок);
	РегП = СоздатьОбъект("Регистр.Партии");
	РегП.ВыбратьДвиженияДокумента(ТекущийДокумент());
	
	Пока РегП.ПолучитьДвижение() = 1 Цикл
		ТМЦУст = РегП.ТМЦ;		
		СпрЦ.ИспользоватьВладельца(ТМЦУст);
		ЦенаУст = РегП.Стоимость / ?(РегП.ОстатокТовара = 0, 1, РегП.ОстатокТовара);
		Если СпрЦ.НайтиПоРеквизиту("КатегорияЦены", КЦен, 0) = 0 Тогда
			СпрЦ.Новый();
			СпрЦ.Наименование = Строка(КЦен);
			СпрЦ.Владелец = ТМЦУст;
			СпрЦ.КатегорияЦены = КЦен;
			СпрЦ.Единица = глВернутьБазовуюЕдиницуТовара(ТМЦУст);
			СпрЦ.Записать();
			Ц = 0;
			УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Валюта", Гривня, ДатаДок);
			УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Цена", ЦенаУст, ДатаДок);
		Иначе
			Вал = СпрЦ.Валюта;
			Если (Вал <> Гривня) Тогда
				УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Валюта", Гривня, ДатаДок);
			КонецЕсли;

			Ц = СпрЦ.Цена;
			Если ЦенаУст <> Ц Тогда			
				УстановитьРеквизитСправочника(СпрЦ.ТекущийЭлемент(), "Цена", ЦенаУст, ДатаДок);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

Процедура СформироватьСписание()
	// выберем приходные движения, сформированные списаниями
	ПолучитьСтрокуПоНомеру(1);
	Зак = Заказ;

	ТЗСп = СоздатьОбъект("ТаблицаЗначений");
	ТЗСп.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗСп.НоваяКолонка("ТМЦИсх", "Справочник.ТМЦ");
	ТЗСп.НоваяКолонка("ДатаСписания", "Дата");
	ТЗСп.НоваяКолонка("Склад", "Справочник.МестаХранения");
	ТЗСп.НоваяКолонка("КвоСписания", "Число");
	ТЗСп.НоваяКолонка("ДопКвоСписания", "Число");
	ТЗСп.НоваяКолонка("Коэффициент", "Число");
	ТЗСп.НоваяКолонка("Ед", "Справочник.Единицы");
	ТЗСп.НоваяКолонка("КвоПрод", "Число");
	ТЗСп.НоваяКолонка("КвоФарша", "Число");
	списПрод = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(списПрод, "Продукция,Кво");	
	УжеДобавлено = СоздатьОбъект("СписокЗначений");
	
	Док = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(,,Зак);
	Пока Док.ПолучитьДокумент() = 1 Цикл		
		Если (Док.Вид() = "СписаниеТМЦВПроизводство") И ((Док.Проведен() = 1) ИЛИ (Док.ДатаДок <= Константа.УМК_ДатаСвертки)) Тогда //--- УМК Сандомирский В.Ю. (12.08.14)  смотрим непроведенные до свертки
			Стр = 0;			
			Если списПрод.НайтиЗначение(Док.ПродукцияШ, Стр, "Продукция") <> 0 Тогда
				списПрод.ПолучитьСтрокуПоНомеру(Стр);
				ТМЦПриПродаже = списПрод.Продукция.ТМЦСписанияПриПродаже.Получить(ДатаДок);				
				
			    Док.ВыбратьСтроки();
				Пока Док.ПолучитьСтроку() = 1 Цикл
					Если (Док.ТМЦ.СписыватьПриВыпуске.Получить(Зак.ДатаДок) = 1) Тогда
						ТМЦДляСписания = Док.ТМЦ.ТМЦДляСписания.Получить(ДатаДок);
						ТМЦДляСписания = ?(ПустоеЗначение(ТМЦДляСписания) = 0, ТМЦДляСписания, Док.ТМЦ);
						ТМЦДляПроверки = ?(ДатаДок >= Константа.ДНачСписанияНС, ТМЦДляСписания, Док.ТМЦ);
						Если ТМЦДляПроверки <> ТМЦПриПродаже Тогда
							Если Док.ТМЦ.НеУчитыватьВОбщемВесе = 1 Тогда
								Если УжеДобавлено.НайтиЗначение(ЗначениеВСтрокуВнутр(Док.ПродукцияШ) + "//" + ЗначениеВСтрокуВнутр(ТМЦДляСписания)) <> 0 Тогда
									Продолжить;
								Иначе
									УжеДобавлено.ДобавитьЗначение(ЗначениеВСтрокуВнутр(Док.ПродукцияШ) + "//" + ЗначениеВСтрокуВнутр(ТМЦДляСписания));
								КонецЕсли;
							КонецЕсли;
						    ТЗСп.НоваяСтрока();
							ТЗСп.ТМЦ = ТМЦДляСписания;
							ТЗСп.ТМЦИсх = Док.ТМЦ;
							ТЗСп.ДатаСписания = ДатаДок - Док.ТМЦ.КвоДнейДоВыпуска.Получить(Зак.ДатаДок);
							//ТЗСп.КвоСписания = Док.Кво;
							ПроцПотерь = (1 - списПрод.Продукция.ПроцПотерь.Получить(ДатаДок)/100);
							Если ПроцПотерь = 0 Тогда
								ПроцПотерь = 1;
							КонецЕсли;
							Если Док.ТМЦ.БазаДляНормы = Перечисление.БазаДляНормы.Продукция Тогда
								ТЗСп.КвоПрод = списПрод.Кво;
							Иначе
								ТЗСп.КвоПрод = ?(Док.ТМЦ.НеУчитыватьВОбщемВесе = 1, (списПрод.Кво / ПроцПотерь), Док.Кво * Док.Коэффициент);
							КонецЕсли;
							ТЗСп.Склад = Док.МестоХранения;
		//					ТЗСп.ДопКвоСписания = Док.;
							ТЗСп.Коэффициент = Док.Коэффициент;
							ТЗСп.Ед = Док.Ед;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;			    
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТЗСп.ВыбратьСтроки();
	Пока ТЗСп.ПолучитьСтроку() = 1 Цикл
		ТЗСп.КвоСписания = ?(ТЗСп.ТМЦ.НеУчитыватьВОбщемВесе = 1, ТЗСп.КвоПрод * ТЗСп.ТМЦИсх.НормаКГФарша.Получить(ДатаДок), ТЗСп.КвоПрод);
	КонецЦикла;
	
//	ТЗСп.Свернуть("ТМЦ,ТМЦИсх,Коэффициент,Ед,ДатаСписания,Склад,КвоПрод", "КвоСписания,ДопКвоСписания");
	ТЗСп.Свернуть("ТМЦ,Коэффициент,Ед,ДатаСписания,Склад", "КвоСписания,ДопКвоСписания");

	//Если ТЗСп.Итог("КвоСписания") = 0 Тогда
	//	Возврат;
	//КонецЕсли;		
	
	глСформироватьСписаниеПоДатам(ТекущийДокумент(), ТЗСп, Подразделение);
КонецПроцедуры

Процедура ДобавитьДанныеОСписанияхВСтроки()
	ДокСп = СоздатьОбъект("Документ");
	ТЗЗак = СоздатьОбъект("ТаблицаЗначений");
	ТЗТек = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗЗак, "Заказ,Кво");
	ВыгрузитьТабличнуюЧасть(ТЗТек);	
	
	ТЗТек.НоваяКолонка("Ключ", "Строка");
	ТЗТек.ВыбратьСтроки(); 
	Пока ТЗТек.ПолучитьСтроку() = 1 Цикл
		ТЗТек.Ключ = ЗначениеВСтрокуВнутр(ТЗТек.Заказ) + "//" + ЗначениеВСтрокуВнутр(ТЗТек.Продукция);
		ТЗТек.ДатаСписания = Дата(0);
		ТЗТек.ФаршВетчина = "";
	КонецЦикла;
	
	ТЗОстПФ = СоздатьОбъект("ТаблицаЗначений");
	СписПФ = СоздатьОбъект("СписокЗначений");
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	СпрТМЦ.ВыбратьЭлементыПоРеквизиту("ВидТМЦ", Перечисление.ВидыТМЦ.Полуфабрикат, 0, 0);
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		Если СпрТМЦ.УровеньПередела.Получить(ДатаДок) = 1 Тогда
			СписПФ.ДобавитьЗначение(СпрТМЦ.ТекущийЭлемент());
		КонецЕсли;
	КонецЦикла;

	ТЗЗак.Свернуть("Заказ", "Кво");
	РегОст = СоздатьОбъект("Регистр.Остатки");
	РегОст.УстановитьЗначениеФильтра("ТМЦ", СписПФ, 2);
	Позиция = СформироватьПозициюДокумента(ДатаДок, 9,59,59,1);
	Если Позиция < ПолучитьТА() Тогда
		РегОст.ВременныйРасчет(1);
		РассчитатьРегистрыПо(Позиция);
	КонецЕсли;
	РегОст.ВыгрузитьИтоги(ТЗОстПФ, 1);
	ТЗОстПФ.Свернуть("ТМЦ", "ОстатокТовара");
	Чт = 0; Мт = 0; Ст = 0;
	ПолучитьВремя(Чт, Мт, Ст);
	ВремяТек = Чт * 3600 + Мт * 60 + Ст;	
	
	ТЗЗак.ВыбратьСтроки();
	Пока ТЗЗак.ПолучитьСтроку() = 1 Цикл
		ДокСп.УстановитьФильтр(1,0);
		ДокСп.ВыбратьПодчиненныеДокументы(, ДатаДок, ТЗЗак.Заказ);
		Пока ДокСп.ПолучитьДокумент() = 1 Цикл
			Если ДокСп.Вид() = "СписаниеТМЦВПроизводство" Тогда
				Ч = 0; М = 0; С = 0;				
				ДокСп.ПолучитьВремя(Ч, М, С);				
				ВремяС = Ч * 3600 + М * 60 + С;
				
				Если (ВремяС < ВремяТек) ИЛИ (ДокСП.ДатаДок < ДатаДок) Тогда
					Стр = 0;
					Если ТЗТек.НайтиЗначение(ЗначениеВСтрокуВнутр(ТЗЗак.Заказ) + "//" + ЗначениеВСтрокуВнутр(ДокСП.ПродукцияШ), Стр, "Ключ") = 1 Тогда
						ТЗТек.ПолучитьСтрокуПоНомеру(Стр);
						Если (ДокСП.ДатаДок < ДатаДок) ИЛИ (Ч < 10) Тогда
							ТЗТек.ДатаСписания = ДокСП.ДатаДок;
						КонецЕсли;
						
						ДокСп.ВыбратьСтроки();
						Пока ДокСп.ПолучитьСтроку() = 1 Цикл
							Если (ДокСП.ТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) Тогда
								СтрП = 0;
								Если ТЗОстПФ.НайтиЗначение(ДокСП.ТМЦ, СтрП, "ТМЦ") = 1 Тогда
									Если ТЗОстПФ.ПолучитьЗначение(СтрП, "ОстатокТовара") > 0 Тогда
										ТЗТек.ФаршВетчина = ДокСП.ТМЦ;
										Прервать;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	
	ЗагрузитьТабличнуюЧасть(ТЗТек);
КонецПроцедуры

// ===============================
Процедура ОбработкаПроведения()
	ТДляКутеров = СоздатьОбъект("ТаблицаЗначений");
	ТДляКутеров.НоваяКолонка("Продукция", "Справочник.ТМЦ");
	глКомментарий("Начало",2,Контекст);
	глТбОперация.УдалитьСтроки();
	Если КоличествоСтрок() = 0 Тогда
		глНеПроводить(Контекст, "В документе не указано ни одного вида продукции");
		Возврат;
	КонецЕсли;
	
	//+umk
	Если  (Эксперимент = 1) И  (ПустоеЗначение(ТМЦ_ПромпереработкаФарша) = 1) Тогда
		глНеПроводить(Контекст, "Не задана константа ТМЦ_ПромпереработкаФарша");
		Возврат;	
	КонецЕсли;
	
	//список МЕСТ ХРАНЕНИЯ для фильтрации при проверке остатков и партий 
	спСклады = СоздатьОбъект("СписокЗначений");
	спСклады.ДобавитьЗначение(МестоХраненияМатериалов);
	спСклады.ДобавитьЗначение(МестоХраненияПолуфабрикатов);
	
	//список МАТЕРИАЛОВ по всем продукциям и полуфабрикатам для фильтрации по остаткам и партиям
	тбМатериалы = СоздатьОбъект("ТаблицаЗначений");
	тбМатериалы.НоваяКолонка("Материал","Справочник.ТМЦ");
	тбМатериалы.НоваяКолонка("Предпочтение");
	тбМатериалы.НоваяКолонка("НСтр","Число",4,0);
		
	спМатериалыДляОстатков = СоздатьОбъект("СписокЗначений");
	спПредпочтения = СоздатьОбъект("СписокЗначений");
	спСчета = СоздатьОбъект("СписокЗначений");
	
	//Таблица ПРОДУКЦИИ содержит информацию о продукции и полуфабрикатах всех уровней из которых она состоит 
	тбПродукции = СоздатьОбъект("ТаблицаЗначений");
	тбПродукции.НоваяКолонка("НСтр","Число",4,0);
	тбПродукции.НоваяКолонка("Продукция","Справочник.ТМЦ");
	тбПродукции.НоваяКолонка("Заказ");
	тбПродукции.НоваяКолонка("Кво","Число",14,3);
	тбПродукции.НоваяКолонка("КвоГППриемки","Число",14,3); // + umk
	тбПродукции.НоваяКолонка("ДопКво","Число",14,3);
	тбПродукции.НоваяКолонка("КвоБрака","Число",14,3);
	тбПродукции.НоваяКолонка("Уровень","Число",3,0);
	тбПродукции.НоваяКолонка("Нормы");
	тбПродукции.НоваяКолонка("ИД","Число",10,0);
	
	//Таблица использования полуфабрикатов
	тбИспользованиеПолуфабрикатов = СоздатьОбъект("ТаблицаЗначений");
	тбИспользованиеПолуфабрикатов.НоваяКолонка("ИДПродукции",    "Число",10,0);
	тбИспользованиеПолуфабрикатов.НоваяКолонка("ИДПолуфабриката","Число",10,0);
	тбИспользованиеПолуфабрикатов.НоваяКолонка("Полуфабрикат");
	
	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		
		//Для ПФ Количество Факт приравняем к количеству// + umk
		Если (ПустоеЗначение(Константа.ДатаНачалаУчетаВыпускаПродукцииПоФакту) = 0) И (ДатаДок>Константа.ДатаНачалаУчетаВыпускаПродукцииПоФакту)  
			И(Продукция.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат) И (НеИзменятьКвоФакт<>Да) Тогда
			КвоГППриемки = Кво;
		КонецЕсли;
		
		Если ПроверкаСтроки() = 0 Тогда
		    глНеПроводить(Контекст);
		    Возврат;
		КонецЕсли;
	КонецЦикла;  

	Если ПроверкаПозднихСписаний() = 0 Тогда //--- УМК Сандомирский В.Ю. (17.10.14) 
	    глНеПроводить(Контекст);
	    Возврат;
	КонецЕсли;
		
	СписЗак = СоздатьОбъект("СписокЗначений");
	СписТМЦ = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписЗак, "Заказ");
	ВыгрузитьТабличнуюЧасть(СписТМЦ, "Продукция");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ, СписТМЦ, 1);
	Ит.ИспользоватьСубконто(ВидыСубконто.Договора, СписЗак, 1);
	Ит.Опции(1);
	Ит.ВыполнитьЗапрос(,ТекущийДокумент(), "ОЖ");
	
	РегМЗ = СоздатьОбъект("Регистр.ПроизводственныеЗатраты");
	Если Константа.СпособПриходованияПродукции = Перечисление.СпособыПриходованияПродукции.ПоСебестоимостиФактическогоСостава Тогда
		СписПрод = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(СписПрод, "Продукция");
		РегМЗ.УстановитьЗначениеФильтра("Фирма", Фирма, 2);
		РегМЗ.УстановитьЗначениеФильтра("Подразделение", Подразделение, 2);
		РегМЗ.УстановитьЗначениеФильтра("ВидДеятельности", ВидДеятельности, 2);
		ПолучитьСтрокуПоНомеру(1);
		РегМЗ.УстановитьЗначениеФильтра("Заказ", Заказ, 2);
		РегМЗ.УстановитьЗначениеФильтра("Продукция", СписПрод, 2);
		ТБСС = СоздатьОбъект("ТаблицаЗначений");
		
		Если ИтогиАктуальны() = 0 Тогда
			РегМЗ.ВременныйРасчет(1);
			РассчитатьРегистрыНа(ТекущийДокумент());			
		КонецЕсли;
		РегМЗ.ВыгрузитьИтоги(ТБСС, 1);

		ТБСС.Свернуть("Продукция", "Сумма");
		ТБСС.НоваяКолонка("Коэф", "Число");
		ТБСС.НоваяКолонка("КвоВып", "Число");

		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Стр = 0;
			Если ТБСС.НайтиЗначение(Продукция, Стр, "Продукция") = 1 Тогда
				ТБСС.УстановитьЗначение(Стр, "КвоВып", Кво);
			КонецЕсли;			
		КонецЦикла;

		ТБСС.ВыбратьСтроки();
		Пока ТБСС.ПолучитьСтроку() = 1 Цикл
			ТБСС.Сумма = 0;
			СКД = 0;
			Если Ит.ПолучитьСубконто(1,1, ТБСС.Продукция) = 1 Тогда
				СКД = Ит.СКД("К");
			КонецЕсли;
			
			ТБСС.Коэф = ?(СКД = 0, 1, Мин(1, ТБСС.КвоВып/СКД));
		КонецЦикла;

		РегМЗ.ВыбратьИтоги();
		Пока РегМЗ.ПолучитьИтог() = 1 Цикл
			Стр = 0;
			Если ТБСС.НайтиЗначение(РегМЗ.Продукция, Стр, "Продукция") = 1 Тогда
				ТБСС.ПолучитьСтрокуПоНомеру(Стр);
			    Коэф = ТБСС.Коэф;
				ТБСС.Сумма = ТБСС.Сумма + РегМЗ.Сумма*Коэф;
			КонецЕсли;
			
			//--- УМК Сандомирский В.Ю. (24.06.14) учет производственных затрат в кутерах
					
			Кутер = "";
			//Если (ПустоеЗначение(Константа.УМК_ДатаНачалаУчетаЗатратПоКутерам) <> 1) И (Константа.УМК_ДатаНачалаУчетаЗатратПоКутерам < ДатаДок) Тогда
			//	Кутер = КвоКутеров * тбНормы.Кво / тбНормы.Итог("Кво") ;
			//КонецЕсли;	
			
			//... УМК Сандомирский В.Ю. (24.06.14) учет производственных затрат в кутерах
			
			Регистр.ПроизводственныеЗатраты.ДвижениеРасход(РегМЗ.Фирма, РегМЗ.ВидДеятельности, РегМЗ.Подразделение, РегМЗ.Продукция, РегМЗ.ВидЗатрат, РегМЗ.Заказ, РегМЗ.Материал, 
			 РегМЗ.Количество*Коэф, РегМЗ.Сумма*Коэф, РегМЗ.СуммаДав*Коэф,РегМЗ.Кутер*Коэф, ФормирСебестоимости);	//--- УМК Сандомирский В.Ю. (24.06.14) учет производственных затрат в кутерах				 
			 
		КонецЦикла;		
	КонецЕсли;
	
	//Создаем таблицу ПРОДУКЦИИ
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		//Если ПроизводитьПолуфабрикаты = 1 вызывается рекурсивно
		Если ДобавитьСтрокуВТаблицуПродукции(Продукция,Заказ,Ед,Коэффициент,Кво,КвоБрак,0) = 0 Тогда
			глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;		
		Если ПустоеЗначение(Заказ) = 0 Тогда
			
			//Определяем базу для расчета количества выпущенной продукции // + umk
			//Если (ПустоеЗначение(Константа.ДатаНачалаУчетаВыпускаПродукцииПоФакту) = 0) И (ДатаДок>Константа.ДатаНачалаУчетаВыпускаПродукцииПоФакту) Тогда 
			//	КвоПродукции = ?(Эксперимент = 1, Кво, КвоГППриемки);		
			//Иначе
				КвоПродукцииОЖ = Кво; // ожидаемое количество продукции 
			//КонецЕсли;
				
			СКД = 0;
			Если Ит.ПолучитьСубконто(1,1, Продукция) = 1 Тогда
			    Если Ит.ПолучитьСубконто(2,1, Заказ) = 1 Тогда
					СКД = Ит.СКД("К");
				КонецЕсли;
			КонецЕсли;
			
			Если СКД < КвоПродукцииОЖ Тогда
			    Сообщить("По заказу выпущено продукции: " + Строка(КвоПродукцииОЖ) + " продукции к выпуску: " + Строка(СКД) + " в строке: " + НомерСтроки,"!!!");
			КонецЕсли;
			глПроводка(Контекст,,"ОЖ",,"Списание ожидаемой продукци",Мин(КвоПродукцииОЖ, СКД),,,,
			Заказ,Продукция,, ,,"ПР");		    
		КонецЕсли;
	КонецЦикла; 
	
	Если ДвиженияИПроводки() = 0 Тогда
		глНеПроводить(Контекст);
		Возврат;
	КонецЕсли;	
	
	// установим закупочные цены
	ЗаписатьЦены();	
	СформироватьСписание();

	//Операция.СуммаОперации = Итог("СуммаБезНДС");
	Операция.Содержание = Примечание;	
	Операция.Записать();
	Если СтатусВозврата() = 1 Тогда
		ДобавитьДанныеОСписанияхВСтроки();
	КонецЕсли;

	глКомментарий("Окончание",2,Контекст);
КонецПроцедуры                                       

ТМЦ_ПромпереработкаФарша = Константа.ТМЦ_ПромпереработкаФарша;//+ umk