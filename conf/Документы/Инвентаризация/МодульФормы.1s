Перем СтарДатаДок;      
Перем НачальнаяДатаДокумента;
Перем СписокПечати;
Перем Д1, Д2;
Перем Дат1, Дат2;
Перем ЕстьСРЗП;
Перем СпВидыУпаковкиГлобальный; //--- УМК Сандомирский В.Ю. (31.08.14)
Перем ТЧТаблицаИсх;
Перем ТЗ_Остатки, ТЗ_Излишки, ТЗ_Партии, ПолучатьСписание; //--- 
Перем УчитыватьУпаковку;
Перем ОбработатьОкончаниеРедактирования;
Перем ТЗОстатки, ТЗОстаткиДляСписания, ТЗОстаткиДляПрихода;
Перем ГруппаПродукцииДляЗаписиЦен;
Перем ПроверятьУсловиеПоФирме;
Перем ИсхЦены;
Перем ТипЦенИсключения;
Перем ОсновнаяФирма;

//======================================================================
Процедура ОбработатьОкончаниеРедактирования() Далее
Процедура РассчитатьСтроку(Конт, РассчитыватьЦенуПрод = 0, ИзОткрытия = 0) Далее
Процедура ИзмВидУпаковки() Далее

//======================================================================
Процедура ОбновитьИтоги()
	ТЗИтоги.УдалитьСтроки();
	Для Инд = 1 По списВидимостьКолонок.РазмерСписка() Цикл
		Если списВидимостьКолонок.Пометка(Инд) = 1 Тогда
			Рекв = Метаданные.Документ("Инвентаризация").РеквизитТабличнойЧасти(списВидимостьКолонок.ПолучитьЗначение(Инд)); 
			Если списВидимостьКолонок.ПолучитьЗначение(Инд) = "ЦенаПродавца" Тогда
				ТЗИтоги.НоваяСтрока();
				ТЗИтоги.Реквизит = "Сумма продавца";				
				ВыбратьСтроки();
				Пока ПолучитьСтроку() = 1 Цикл
					ТЗИтоги.Итог = ТЗИтоги.Итог + ЦенаПродавца * КвоПоФакту;
				КонецЦикла;				
			Иначе
				Попытка
					Если Найти(Рекв.Идентификатор, "Сумма") <> 0 Тогда
						ТЗИтоги.НоваяСтрока();
						ТЗИтоги.Реквизит = Рекв.Синоним;
						ТЗИтоги.Итог = Итог(Рекв.Идентификатор);
					КонецЕсли;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // ОбновитьИтоги()

//======================================================================
Процедура ОбновитьОстатки()
	Если списСклады.РазмерСписка() = 0 Тогда
		ТЗОстатки.УдалитьСтроки();
		Возврат;
	КонецЕсли;
	
	РегОст = СоздатьОбъект("Регистр.Остатки");
	РегОст.УстановитьЗначениеФильтра("Фирма", Фирма);
	РегОст.УстановитьЗначениеФильтра("МестоХранения", списСклады, 2);
	Если КонДата < ПолучитьДатуТА() Тогда
		РегОст.ВременныйРасчет(1);
		РассчитатьРегистрыПо(КонДата);
	КонецЕсли;
	РегОст.ВыгрузитьИтоги(ТЗОстатки, , 1);	
	
	Если фУчитыватьВидУпаковки = 0 Тогда
		ТЗОстатки.Свернуть("ТМЦ", "ОстатокТовара");
	Иначе
		ТЗОстатки.Свернуть("ТМЦ,ВидУпаковки", "ОстатокТовара");
		ТЗОстатки.НоваяКолонка("Ключ");
		ТЗОстатки.ВыбратьСтроки();
		Пока ТЗОстатки.ПолучитьСтроку() = 1 Цикл
			ТЗОстатки.Ключ = ЗначениеВСтрокуВнутр(ТЗОстатки.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТЗОстатки.ВидУпаковки);
		КонецЦикла;
	КонецЕсли;
	
	ТЗОстаткиДляПрихода = СоздатьОбъект("ТаблицаЗначений");
	ТЗОстаткиДляПрихода.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗОстаткиДляПрихода.НоваяКолонка("ОстатокТовара", "Числ");
	ТЗОстаткиДляСписания = СоздатьОбъект("ТаблицаЗначений");
	ТЗОстаткиДляПрихода.Выгрузить(ТЗОстаткиДляСписания);
	
	ТЗОстатки.ВыбратьСтроки();
	Пока ТЗОстатки.ПолучитьСтроку() = 1 Цикл
		СТМЦ = ТЗОстатки.ТМЦ.ТМЦДляСписания.Получить(ДатаДок);
		ПТМЦ = ТЗОстатки.ТМЦ.ТМЦДляПрихода.Получить(ДатаДок);
		Если ПустоеЗначение(СТМЦ) = 0 Тогда
			ТЗОстаткиДляСписания.НоваяСтрока();
			ТЗОстаткиДляСписания.ТМЦ = СТМЦ;
			ТЗОстаткиДляСписания.ОстатокТовара = ТЗОстатки.ОстатокТовара;
		КонецЕсли;
		Если (ПустоеЗначение(ПТМЦ) = 0) И (ПТМЦ <> СТМЦ) Тогда
			ТЗОстаткиДляПрихода.НоваяСтрока();
			ТЗОстаткиДляПрихода.ТМЦ = ПТМЦ;
			ТЗОстаткиДляПрихода.ОстатокТовара = ТЗОстатки.ОстатокТовара;
		КонецЕсли;		
	КонецЦикла;
	
	ТЗОстаткиДляПрихода.Свернуть("ТМЦ", "ОстатокТовара");
	ТЗОстаткиДляСписания.Свернуть("ТМЦ", "ОстатокТовара");
КонецПроцедуры // ОбновитьОстатки

Функция Остаток()
	Остаток = 0;
	Если Форма.фОстВыбранныхСкладов.Видимость() = 1 Тогда
		Если (ПустоеЗначение(ТМЦ) = 0) И (ТЗОстатки.КоличествоСтрок() > 0) Тогда
			// остаток в строке состоит из ТМЦ + остаток по ТМЦ для списания для этого товара + остаток по ТМЦ для прихода для этого товара + 
			// остаток в ТМЦ, где этот товар выступает ТМЦ для прихода + остаток, где этот товар выступает ТМЦ для списания			
			Стр = 0;
			Если фУчитыватьВидУпаковки = 1 Тогда
				Ключ = ЗначениеВСтрокуВнутр(ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ВидУпаковки);
				
				Если ТЗОстатки.НайтиЗначение(Ключ, Стр, "Ключ") = 1 Тогда
					Остаток = ТЗОстатки.ПолучитьЗначение(Стр, "ОстатокТовара");
				КонецЕсли;			
			Иначе
				Если ТЗОстатки.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
					Остаток = ТЗОстатки.ПолучитьЗначение(Стр, "ОстатокТовара");
				КонецЕсли;							
			КонецЕсли;
			//+ umk 03/03/23 уберем эту часть
			// теперь ищем остаток по ТМЦ для списания и ТМЦ для прихода для этого товара
			//ТМЦС = ТМЦ.ТМЦДляСписания.Получить(ДатаДок);
			//ТМЦП = ТМЦ.ТМЦДляПрихода.Получить(ДатаДок);
			//Если ПустоеЗначение(ТМЦС) = 0 Тогда
			//	Стр = 0;
			//	Если ТЗОстатки.НайтиЗначение(ТМЦС, Стр, "ТМЦ") = 1 Тогда
			//		Остаток = Остаток + ТЗОстатки.ПолучитьЗначение(Стр, "ОстатокТовара");
			//	КонецЕсли;				
			//КонецЕсли;
			//Если (ПустоеЗначение(ТМЦП) = 0) И (ТМЦС <> ТМЦП) Тогда
			//	Стр = 0;
			//	Если ТЗОстатки.НайтиЗначение(ТМЦП, Стр, "ТМЦ") = 1 Тогда
			//		Остаток = Остаток + ТЗОстатки.ПолучитьЗначение(Стр, "ОстатокТовара");
			//	КонецЕсли;				
			//КонецЕсли;			
			//
			// ищем остатки тех ТМЦ, для которых это ТМЦ выступает ТМЦ для списания или ТМЦ для прихода
			//Стр = 0;
			//Если ТЗОстаткиДляПрихода.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
			//	Остаток = Остаток + ТЗОстаткиДляПрихода.ПолучитьЗначение(Стр, "ОстатокТовара");
			//КонецЕсли;			
			//Стр = 0;
			//Если ТЗОстаткиДляСписания.НайтиЗначение(ТМЦ, Стр, "ТМЦ") = 1 Тогда
			//	Остаток = Остаток + ТЗОстаткиДляСписания.ПолучитьЗначение(Стр, "ОстатокТовара");
			//КонецЕсли;			
		КонецЕсли;		
	КонецЕсли;
	
	Возврат Формат(Остаток, "Ч0");
КонецФункции

//======================================================================
Функция ДатаПоследнейРН(КТМЦ = "", ДатаС = "", Принудительно = 0, ВернутьЦену = 0)
	Если Принудительно = 0 Тогда
		Если Форма.кДатаПослРН.Видимость() = 0 Тогда
			Возврат "";
		КонецЕсли;
	КонецЕсли;
	Если ВернутьЦену = 1 Тогда
		ДатаЦ = 0;
	Иначе
		ДатаЦ = ДатаС;
	КонецЕсли;

	ТМ = ?(КТМЦ = "", ТМЦ, КТМЦ);
	Док = СоздатьОбъект("Документ");
	Док.УстановитьФильтр(1,0);
	Док.ОбратныйПорядок(1);
	Док.ВыбратьПоЗначению(, ?(БратьЦеныНаДату = Дата(0), ДатаДок, БратьЦеныНаДату), "ТМЦРН", ТМ);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		БратьИзЦеныСНДС = 0;
		Если (ПроверятьУсловиеПоФирме = 1) Тогда
			Если Док.Вид() = "ОприходованиеИзлишков" Тогда
				Если (Док.Фирма <> Фирма) ИЛИ (Док.МестоХранения <> МестоХранения) Тогда
					Продолжить;
				КонецЕсли;
			ИначеЕсли Док.Вид() = "ВводОстатковТМЦ" Тогда
				Если (Док.Фирма <> Фирма) ИЛИ (Док.МестоХранения <> МестоХранения) ИЛИ ((Док.Фирма = ОсновнаяФирма) И (Док.ВидОстатков <> 2)) Тогда
					Продолжить;
				КонецЕсли;
			ИначеЕсли (Док.Контрагент.ФирмаПрихода.Получить(Док.ДатаДок) <> Фирма) ИЛИ (Док.Контрагент.МестоХранения.Получить(Док.ДатаДок) <> МестоХранения) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ДатаЦ = Док.ДатаДок;
		Если ВернутьЦену = 1 Тогда
			ДатаЦ = 0;
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку() = 1 Цикл
				Если Док.ТМЦ = КТМЦ Тогда
					Если Док.Вид() = "ВводОстатковТМЦ" Тогда
						ДатаЦ = ?(Док.ЦенаСНДС = 0, Док.СуммаСНДС / ?(Док.Кво = 0, 1, Док.Кво), Док.ЦенаСНДС);
					ИначеЕсли Док.Вид() = "ОприходованиеИзлишков" Тогда
						ДатаЦ = Док.ЦенаБезНДС;
					ИначеЕсли Док.Вид() = "ПереоценкаРозницы" Тогда
						ДатаЦ = Док.НоваяЦена;
					Иначе
						ДатаЦ = Док.ЦенаСНДС;
					КонецЕсли;
					
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Прервать;
	КонецЦикла;

	Возврат ДатаЦ;	
КонецФункции // гл

Функция ВернутьЦену(Конт, Знач ДатаЦ)
	НужнаЦена = 1;
	Если ДатаЦеныИзПоследнейРН = 1 Тогда
		Если Конт.ТМЦ.БратьЦенуНаДатуПоследнейРН = 1 Тогда
			//ДатаЦ = ДатаПоследнейРН(Конт.ТМЦ, ДатаЦ, 1);
			Ц = ДатаПоследнейРН(Конт.ТМЦ, ДатаЦ, 1, 1);
			НужнаЦена = 0;
		КонецЕсли;		
	КонецЕсли;
	Если НужнаЦена = 1 Тогда
		Ц = глВернутьЦену(Конт.ТМЦ, ТипЦен, ДатаЦ,, КонтрагентДляИсключенияЦены);
	КонецЕсли;
	
	Попытка
		Если ПустоеЗначение(Конт.ВидУпаковки) = 0 Тогда
			Ц = Ц + глПолучитьЦенуВУП(Конт, ТипЦен, ДатаЦ, Гривня, ДатаЦ, Конт.ТМЦ);
		КонецЕсли;
	Исключение
	КонецПопытки;
	Если НужнаЦена = 1 Тогда
		ЕстьАкция = 0;
		глУстановитьСкидкуПоАкции(Контекст, Ц, Конт.ТМЦ, ЕстьАкция, ТипЦен);
	КонецЕсли;
	
	Возврат Ц;
КонецФункции

//======================================================================
Процедура ЗаполнитьДопПоля()
	ТЧТаблицаИсх.Ключ = ЗначениеВСтрокуВнутр(ТЧТаблицаИсх.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТЧТаблицаИсх.ВидУпаковки);	
	ТЧТаблицаИсх.РГРВУ = ТЧТаблицаИсх.ТМЦ.ГруппировкаРазрешенныхВидовУпаковки;
	ТЧТаблицаИсх.Группа = ТЧТаблицаИсх.ТМЦ.Родитель;	
КонецПроцедуры //

//======================================================================
Процедура ОбновитьТЧИсх()
	ВыгрузитьТабличнуюЧасть(ТЧТаблицаИсх);
	ТЧТаблицаИсх.НоваяКолонка("Ключ");
	ТЧТаблицаИсх.НоваяКолонка("РГРВУ");
	ТЧТаблицаИсх.НоваяКолонка("Группа");
	ТЧТаблицаИсх.ВыбратьСтроки();
	Пока ТЧТаблицаИсх.ПолучитьСтроку() = 1 Цикл
		ЗаполнитьДопПоля();
	КонецЦикла;	
КонецПроцедуры // 

//======================================================================
Процедура СвернутьТаблицу(ТЗ, СВУ = 0, ДопКолонки = "")
	ТЗ.Свернуть("ТМЦ," + ?(СВУ = 1, "ВидУпаковки,","") + "СхемаРасчетаЗП,Ед,Партия,Коэффициент,ПримечаниеС,РаспределятьВСписания,ДляП,фРасчетноеКвоПоФакту,ТМЦДляСписания,ТМЦДляПрихода,ЦенаПродавца" + ДопКолонки, 
		"КвоПоУчету,КвоПоФакту,КвоПоФакту1,КвоПоФакту2,КвоПоФакту3,Разница,СуммаПоУчету,СуммаПоФакту,СуммаРазницы,НачОст,НачОстСумма,Приход,ПриходСумма,Расход,РасходСумма,СписаниеБП");
	ТЗ.НоваяКолонка("ЦенаБезНДС", "Число", 12, 2);
КонецПроцедуры // 

//======================================================================
Процедура ОтобразитьТабличнуюЧасть(Принудительно = 0, СчитатьЦенуПрод = 0, ИзОткрытия = 0)
	Если (УчитыватьУпаковку = 0) ИЛИ (фУчитыватьВидУпаковки = 1) Тогда
		ЗагрузитьТабличнуюЧасть(ТЧТаблицаИсх);
	Иначе // нужно свернуть таблицу
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ТЧТаблицаИсх.Выгрузить(ТЗ);
		ТЗ.Свернуть("ТМЦ,СхемаРасчетаЗП,Ед,Партия,Коэффициент", "КвоПоУчету,КвоПоФакту,КвоПоФакту1,КвоПоФакту2,КвоПоФакту3,Разница,СуммаПоУчету,СуммаПоФакту,СуммаРазницы,НачОст,НачОстСумма,Приход,ПриходСумма,Расход,РасходСумма,СписаниеБП");
		ЗагрузитьТабличнуюЧасть(ТЗ);
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			РассчитатьСтроку(Контекст, СчитатьЦенуПрод, ИзОткрытия);
			// также проставим фКво и всё остальное
			Поз = 0;
			Если ТЧТаблицаИсх.НайтиЗначение(ЗначениеВСтрокуВнутр(ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ПолучитьПустоеЗначение("Справочник.ВидыУпаковки")), Поз, "Ключ") = 1 Тогда
				ТЧТаблицаИсх.ПолучитьСтрокуПоНомеру(Поз);
				фРасчетноеКвоПоФакту = ТЧТаблицаИсх.фРасчетноеКвоПоФакту;
				ТМЦДляСписания = ТЧТаблицаИсх.ТМЦДляСписания;
				ТМЦДляПрихода = ТЧТаблицаИсх.ТМЦДляПрихода;
				ПримечаниеС = ТЧТаблицаИсх.ПримечаниеС;
				РаспределятьВСписания = ТЧТаблицаИсх.РаспределятьВСписания;
				ЦенаПродавца = ТЧТаблицаИсх.ЦенаПродавца; 
				Ед = ТЧТаблицаИсх.Ед;
				СхемаРасчетаЗП = ТЧТаблицаИсх.СхемаРасчетаЗП;
				Коэффициент = ТЧТаблицаИсх.Коэффициент;
				ДляП = ТЧТаблицаИсх.ДляП;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры // гл

// ======================================
Процедура ИзмТипИнвентаризации()
	Если ТипИнвентаризации <> глВосстановитьЗначение(Контекст,"ТипИнвентаризации") Тогда
		Если КоличествоСтрок()>0 Тогда
			Рез = Вопрос("Тип инвентаризации был изменен. Удалить строки?","Да+Нет");
			Если Рез ="Да" Тогда
				УдалитьСтроки();
			Иначе
				ТипИнвентаризации = глВосстановитьЗначение(Контекст,"ТипИнвентаризации");
				ТипыИнвентаризации.ТекущаяСтрока(ТипыИнвентаризации.НайтиЗначение(ТипИнвентаризации));
				Возврат;
			КонецЕсли;
		КонецЕсли;
		глСохранитьЗначение(Контекст,"ТипИнвентаризации",ТипИнвентаризации);
	КонецЕсли;
	Если ТипИнвентаризации=1 Тогда
		НазначитьВид(МестоХранения,"Контрагенты");
		Форма.МестоХранения.НеИзменятьВид(1);
	ИначеЕсли ТипИнвентаризации=2 Тогда
		НазначитьВид(МестоХранения,"МестаХранения");
		Форма.МестоХранения.НеИзменятьВид(1);
	Иначе
		МестоХранения = 0;
	КонецЕсли;
КонецПроцедуры

// ======================================
Функция УстДоступность()
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
    Если глПартионныйУчетПоСкладам = Да Тогда
		Форма.Партия.Доступность(1);
	Иначе     
		Форма.Партия.Доступность(0);
	КонецЕсли;	
	Слой = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Если Слой = "Основной" Тогда
		Форма.МестоХранения.Доступность(1);
		Форма.МестоХранения.Видимость(1);
		Форма.тМестоХранения.Видимость(1);
		Если ТипИнвентаризации = 2 Тогда
			Форма.тМестоХранения.Заголовок("Место хран.:"); 
		Иначе
		    Форма.тМестоХранения.Заголовок("Контрагент:"); 
		КонецЕсли;
	КонецЕсли;
	Если КвоПоУчету=0 Тогда
		// Точную цену вычислить невозможно, разрешим ввод вручную
		//Форма.ЦенаБезНДС.Доступность(1);
		Форма.КвоПоФакту.Доступность(1);
		Форма.СуммаПоФакту.Доступность(0);
	Иначе
		// иначе редактируем только количество по факту
		//Форма.ЦенаБезНДС.Доступность(0);
		Форма.КвоПоФакту.Доступность(1);
		Форма.СуммаПоФакту.Доступность(0);
	КонецЕсли;
	Форма.Заголовок(глЗаголовок(Контекст,"Акт инвентаризации ТМЦ"));
		
	Форма.ВидУпаковки.Видимость(фУчитыватьВидУпаковки);				//--- УМК Сандомирский В.Ю,
	//Форма.ТМЦДляСписания.Видимость(фПоказыватьТМЦДляСписания);		//--- УМК Сандомирский В.Ю, (23.09.14) //--- закоментил 06.10.14
	Форма.ТМЦДляПрихода.Видимость(фПоказыватьТМЦДляПриходования);		//--- УМК Сандомирский В.Ю, (06.10.14)
	
	//Форма.Партия.Видимость(1-фСкрытьВторуюСтроку);
	//Форма.НачОстСумма.Видимость(1-фСкрытьВторуюСтроку);
	//Форма.ПриходСумма.Видимость(1-фСкрытьВторуюСтроку);
	//Форма.РасходСумма.Видимость(1-фСкрытьВторуюСтроку);
	//Форма.СуммаПоУчету.Видимость(1-фСкрытьВторуюСтроку);
	//Форма.СуммаПоФакту.Видимость(1-фСкрытьВторуюСтроку);
	//Форма.СуммаРазницы.Видимость(1-фСкрытьВторуюСтроку);
	
	Для к=1 По списВидимостьКолонок.РазмерСписка() Цикл
		ТекСтр = "";
		НаименованиеРеквизита = списВидимостьКолонок.ПолучитьЗначение(к,ТекСтр);		
		ТекВидимость = списВидимостьКолонок.Пометка(к);
		
//		Если Форма.ПолучитьАтрибут(НаименованиеРеквизита).Видимость() <> ТекВидимость Тогда
			Форма.ПолучитьАтрибут(НаименованиеРеквизита).Видимость(ТекВидимость);
			Если НаименованиеРеквизита = "ЦенаПродавца" Тогда
				Форма.СуммаПрод.Видимость(ТекВидимость);
				Форма.ОтклонениеПрод.Видимость(ТекВидимость);
			КонецЕсли;
//		КонецЕсли;
	КонецЦикла;
	ОбработатьОкончаниеРедактирования();	

	Форма.КвоПоФакту.Доступность(1);
	Для Инд = 1 По 3 Цикл
		Если Итог("КвоПоФакту"+Инд) <> 0 Тогда
			Форма.КвоПоФакту.Доступность(0);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат "";
КонецФункции 

// ======================================
Процедура РассчитатьСтроку(Конт, РассчитыватьЦенуПрод = 0, ИзОткрытия = 0)
	Конт.Разница = Конт.КвоПоФакту - Конт.КвоПоУчету;
	Если РассчитыватьСуммыОтЦены = 1 Тогда
		//Если Конт.ЦенаБезНДС = 0 Тогда
		Если ИзОткрытия  = 1 Тогда
			Конт.ЦенаБезНДС = ВернутьЦену(Конт, ?(БратьЦеныНаДату = Дата(0), ДатаДок, БратьЦеныНаДату));
		КонецЕсли;
		//КонецЕсли;		
		Если РассчитыватьЦенуПрод = 1 Тогда
			Конт.ЦенаПродавца = Конт.ЦенаБезНДС; 
		КонецЕсли;
		Конт.НачОстСумма = Конт.НачОст * Конт.ЦенаБезНДС;
		Конт.СуммаПоУчету = Конт.КвоПоУчету * Конт.ЦенаБезНДС;
		Конт.ПриходСумма = Конт.Приход * Конт.ЦенаБезНДС;
		Конт.РасходСумма = Конт.Расход * Конт.ЦенаБезНДС;		
		Конт.СуммаПоФакту = Конт.ЦенаБезНДС * Конт.КвоПоФакту;
		Конт.СуммаРазницы = Конт.ЦенаБезНДС * Конт.Разница;		
	Иначе
		Если Конт.КвоПоУчету = 0 Тогда
			// попробуем вычислить цену
			Если Конт.ЦенаБезНДС = 0 Тогда
				Если Конт.НачОст <> 0 Тогда
				    Конт.ЦенаБезНДС = Конт.НачОстСумма/Конт.НачОст;
				ИначеЕсли Конт.Приход <> 0 Тогда
				    Конт.ЦенаБезНДС = Конт.ПриходСумма/Конт.Приход;
				ИначеЕсли Конт.Расход <> 0 Тогда
				    Конт.ЦенаБезНДС = Конт.РасходСумма/Конт.Расход;
				КонецЕсли;
				Если Конт.ЦенаБезНДС < 0 Тогда
				    Конт.ЦенаБезНДС = -Конт.ЦенаБезНДС;
				КонецЕсли;
			КонецЕсли;
			Если РассчитыватьЦенуПрод = 1 Тогда
				Конт.ЦенаПродавца = Конт.ЦенаБезНДС; 
			КонецЕсли;
			// Точную цену вычислить невозможно, рассчитаем от цены, введенной вручную
			Конт.СуммаПоФакту = Конт.ЦенаБезНДС * Конт.КвоПоФакту;
			Конт.СуммаРазницы = Конт.ЦенаБезНДС * Конт.Разница;
		Иначе
			//ТочнаяЦена = ?(КвоПоУчету>0, СуммаПоУчету/КвоПоУчету, 0);
			ТочнаяЦена = ?(Конт.КвоПоУчету <> 0, Конт.СуммаПоУчету/Конт.КвоПоУчету, 0);
		    Конт.ЦенаБезНДС = ТочнаяЦена;
			Если РассчитыватьЦенуПрод = 1 Тогда
				Конт.ЦенаПродавца = Конт.ЦенаБезНДС; 
			КонецЕсли;			
			Конт.ЦенаБезНДС = ?(Конт.ЦенаБезНДС < 0, -Конт.ЦенаБезНДС, Конт.ЦенаБезНДС);
			Конт.СуммаПоФакту = ТочнаяЦена * Конт.КвоПоФакту;
			Конт.СуммаРазницы = ТочнаяЦена * Конт.Разница;
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры 
                        
// ======================================
Процедура ИзмМестоХранения()       
	Если МестоХранения.Выбран()=0 Тогда
		ИзмТипИнвентаризации();
	    Возврат;
	КонецЕсли;
	Если МестоХранения.Вид() = "МестаХранения" Тогда
		Если  ((МестоХранения.Тип = Склады) и (МестоХранения.ВидСклада = Розничный) и (МестоХранения.СуммовойУчет = 1)) Тогда 
			Предупреждение("Нельзя указывать РОЗНИЧНЫЙ склад (магазин) с суммовым учетом!");
		    МестоХранения = глВосстановитьЗначение(Контекст,"МестоХранения");
			ИзмТипИнвентаризации();
		КонецЕсли;
	КонецЕсли;
	Если МестоХранения <> глВосстановитьЗначение(Контекст,"МестоХранения") Тогда
		Если КоличествоСтрок()>0 Тогда
			Рез = Вопрос("Место хранения было изменено. Удалить строки?","Да+Нет");
			Если Рез ="Да" Тогда
				УдалитьСтроки();
			КонецЕсли;
		КонецЕсли;
		глСохранитьЗначение(Контекст,"МестоХранения",МестоХранения);
	КонецЕсли;
КонецПроцедуры 

// ======================================
Процедура ИзмФирма()
	Если Фирма <> глВосстановитьЗначение(Контекст,"Фирма") Тогда
		Если КоличествоСтрок()>0 Тогда
			Рез = Вопрос("Фирма была изменена. Удалить строки?","Да+Нет");
			Если Рез ="Да" Тогда
				УдалитьСтроки();
			Иначе
				Фирма = глВосстановитьЗначение(Контекст,"Фирма");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		глСохранитьЗначение(Контекст,"Фирма",Фирма);
	КонецЕсли;
	Если Фирма <> Константа.БазФирма Тогда
		ПроверятьУсловиеПоФирме = 1;
	КонецЕсли;	
КонецПроцедуры 

// ======================================
Процедура ИзмПартия()
КонецПроцедуры 

//====================================================================== //--- УМК Сандомирский В.Ю. (23.09.14)
Процедура ЗаполнитьТМЦДляСписания(Конт)
	Если ПустоеЗначение(Конт.ТМЦ) = 0 Тогда		
		ТСпис = Конт.ТМЦ.ТМЦДляСписания.Получить(ДатаДок); 
		Если ПустоеЗначение(ТСпис) = 1 Тогда
			КонтТМЦДляСписания = Конт.ТМЦ;
		Иначе
			КонтТМЦДляСписания = ТСпис;
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры // ЗаполнитьТМЦДляСписания

//====================================================================== //--- УМК Сандомирский В.Ю. (06.10.14)
Процедура ЗаполнитьТМЦДляПрихода(Конт)
	Если ПустоеЗначение(Конт.ТМЦ) = 0 Тогда		
		ТПрих = Конт.ТМЦ.ТМЦДляПрихода.Получить(ДатаДок); 
		Если ПустоеЗначение(ТПрих) = 1 Тогда
			Конт.ТМЦДляПрихода = Конт.ТМЦ;
		Иначе
			Конт.ТМЦДляПрихода = ТПрих;
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры // ЗаполнитьТМЦДляПриходования

// ======================================
Процедура ИзмТМЦ()
	Если глПроверкаТовараВДокументе(Контекст,ТМЦ) = Нет Тогда
		ТМЦ = глВосстановитьЗначение(Контекст,"ТМЦ");
	Иначе
		Если ТМЦ.Выбран()=1 Тогда
			Если ПустоеЗначение(Ед) = 1 Тогда
				глУстановкаБазЕд(Контекст,ТМЦ,ТМЦ.ЕдиницаПоУмолчанию.Единица);
			ИначеЕсли ТМЦ <> Ед.Владелец Тогда
				глУстановкаБазЕд(Контекст,ТМЦ,ТМЦ.ЕдиницаПоУмолчанию.Единица);
			КонецЕсли;
			// если партия этого ТМЦ уже есть, не будем ее трогать
			Если ЕстьСРЗП = 1 Тогда
				СхемаРасчетаЗП = ТМЦ.СхемаРасчетаЗП.Получить(ДатаДок).Примечание;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьТМЦДляСписания(Контекст); //--- УМК Сандомирский В.Ю. (23.09.14) для ТМЦ для списания
	ЗаполнитьТМЦДляПрихода(Контекст);  //--- УМК Сандомирский В.Ю. (07.10.14) для ТМЦ для прихода
	СхемаРасчетаЗП = ТМЦ.СхемаРасчетаЗП.Получить(ДатаДок).Примечание;
КонецПроцедуры 

// ======================================
Процедура ИзмЕд(Конт)
	СтарыйКоэффициент = Конт.Коэффициент;
	Конт.Коэффициент = Конт.Ед.Коэффициент;
	Конт.КвоПоУчету = Конт.КвоПоУчету * СтарыйКоэффициент / Конт.Коэффициент;
	Конт.КвоПоФакту = Конт.КвоПоФакту * СтарыйКоэффициент / Конт.Коэффициент;
	Конт.КвоПоФакту1 = Конт.КвоПоФакту1 * СтарыйКоэффициент / Конт.Коэффициент;
	Конт.КвоПоФакту2 = Конт.КвоПоФакту2 * СтарыйКоэффициент / Конт.Коэффициент;
	Конт.КвоПоФакту3 = Конт.КвоПоФакту3 * СтарыйКоэффициент / Конт.Коэффициент;
	Конт.Приход = Конт.Приход * СтарыйКоэффициент / Конт.Коэффициент;
	Конт.Расход = Конт.Расход * СтарыйКоэффициент / Конт.Коэффициент;
	Конт.НачОст = Конт.НачОст * СтарыйКоэффициент / Конт.Коэффициент;
	Конт.СписаниеБП = Конт.СписаниеБП * СтарыйКоэффициент / Конт.Коэффициент;
	Конт.ЦенаБезНДС = Конт.ЦенаБезНДС * Конт.Коэффициент / СтарыйКоэффициент;
	РассчитатьСтроку(Конт);
КонецПроцедуры 

Процедура РассчитатьФактКво(Конт)
	// изменилось к-во по факту. Нужно заполнить одно из других количеств
	//Если Конт.КвоПоФакту <> 0 Тогда
	//	Если Конт.КвоПоФакту2 <> 0 Тогда
	//		Конт.КвоПоФакту2 = Конт.КвоПоФакту;
	//	ИначеЕсли Конт.КвоПоФакту3 <> 0 Тогда
	//		Конт.КвоПоФакту3 = Конт.КвоПоФакту;
	//	Иначе
	//		Конт.КвоПоФакту1 = Конт.КвоПоФакту;
	//	КонецЕсли;
	//Иначе
	//	Конт.КвоПоФакту1 = 0;
	//	Конт.КвоПоФакту2 = 0;
	//	Конт.КвоПоФакту3 = 0;		
	//КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ИзмКвоПоФакту()
	РассчитатьФактКво(Контекст);
	РассчитатьСтроку(Контекст);
КонецПроцедуры 

// ======================================
Процедура ИзмСуммаПоФакту()
	РассчитатьСтроку(Контекст);
КонецПроцедуры 

// ======================================
Процедура ИзмСуммаПоУчету()
	РассчитатьСтроку(Контекст);
КонецПроцедуры 

// ======================================
Процедура ИзмЦенаБезНДС()
	РассчитатьСтроку(Контекст);
КонецПроцедуры 

//======================================================================
Процедура РассчитатьСтрокуФ(Конт)
	Конт.КвоПоФакту = Конт.КвоПоФакту1 + Конт.КвоПоФакту2 + Конт.КвоПоФакту3;
	РассчитатьСтроку(Конт);
КонецПроцедуры //

// ======================================
Процедура ВводНового(ПризнакКопирования)
	Если ПризнакКопирования = 1 Тогда
		Если Вопрос("Копировать табличную часть?", "Да+Нет") = "Нет" Тогда
			УдалитьСтроки();
		КонецЕсли;		
		глУстановитьНомер(Контекст);
		Возврат;
	КонецЕсли;
	глУстановитьФирму(Контекст);
	ИзмФирма();
	//МестоХранения = глВосстановитьЗначение(Контекст,"ОсновнойСклад");
	//ИзмМестоХранения();
	МестоХранения.ВидыДляВыбора("МестаХранения");
	ТипИнвентаризации = 2;
	ИзмТипИнвентаризации();
	
	фУчитыватьВидУпаковки = ?(ДатаДок >= Константа.ДатаНачалаРаботыСУпаковкой, 1, 0);   //--- УМК Сандомирский В.Ю.	
КонецПроцедуры 

// ===============================
Процедура Рассчитать() Далее

// ======================================
Процедура ИзмДатаДок()
	Если ДатаДок <> СтарДатаДок Тогда
		Если КоличествоСтрок() > 0 Тогда
			Если Вопрос("При изменении даты табличная часть будет пересчитана. Продолжить?","Да+Нет") = "Нет" Тогда
				ДатаДок = СтарДатаДок;
				Возврат;
			КонецЕсли;
			Рассчитать();
		КонецЕсли;
		СтарДатаДок = ДатаДок;
	КонецЕсли;
	УчитыватьУпаковку = ?(Константа.ДатаНачалаРаботыСУпаковкой <= ДатаДок, 1, 0);
	//УстановкаСкидокТМЦ = глПолучитьДокументУстановкиСкидок(ДатаДок, КонтрагентДляИсключенияЦены);	
КонецПроцедуры

// ===============================
Функция ОтборПоСчету(Счет)
	Если ПустоеЗначение(Счет) = 1 Тогда
		Возврат 0;
	ИначеЕсли Счет.Забалансовый = 1 Тогда
		Возврат 0;
	Иначе         
		Возврат 1;
	КонецЕсли;	
КонецФункции	

// ===============================
Функция ПолучитьМетодРасчетаСебестоимости(Товар,МетодТ,МетодЗ,МетодП) 
	Если ПустоеЗначение(Товар) = 1 Тогда
	    глКомментарий("Недостаточно параметров в функции глПолучитьМетодРасчетаСебестоимости()!",,,"!");
		Возврат "";
	КонецЕсли;	
	
	Если глСчетаУчетаТоваров.Принадлежит(Число(Товар.Счет.Код))=1 Тогда
		Возврат МетодТ;
	ИначеЕсли глСчетаУчетаЗапасов.Принадлежит(Число(Товар.Счет.Код))=1 Тогда
		Возврат МетодЗ;
	ИначеЕсли (глСчетаУчетаПродукции.Принадлежит(Число(Товар.Счет.Код))=1) Тогда
		Возврат МетодП;
	КонецЕсли;	
	
КонецФункции //глПолучитьМетодРасчетаСебестоимости

// ===============================
Функция ЭтоИнв(Док)
	Если ПустоеЗначение(Док) = 1 Тогда
		Возврат 0;
	КонецЕсли;
//	Сообщить(Док);
	
	Если (Док.Вид() = "СписаниеТМЦ") ИЛИ (Док.Вид() = "ОприходованиеИзлишков") Тогда
		Если ПустоеЗначение(Док.ДокОснование) = 0 Тогда
			Если Док.ДокОснование.Вид() = "Инвентаризация" Тогда
				//Сообщить("Учтено: " + Док);
				Возврат 1;
			КонецЕсли;
		Иначе
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
КонецФункции

// ===============================
Процедура ЗаполнитьКоличество(Запр, Конт)
	Конт.КвоПоУчету = Запр.КонКол;
	Конт.НачОст = Запр.НачКол;
	Конт.Приход = Запр.ПрихКол;
	Конт.Расход = Запр.РасхКол;
КонецПроцедуры

// ===============================
Процедура ДобавитьСуммыПоДатам(Запр, Конт)	
	Пока Запр.Группировка("День") = 1 Цикл
		Цена = ВернутьЦену(Конт, Запр.НачалоПериода());
		
		Конт.ПриходСумма = Конт.ПриходСумма + Запр.ПрихКол * Цена;
		Конт.РасходСумма = Конт.РасходСумма + Запр.РасхКол * Цена;
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура ПосчитатьСуммы(Запрос, ЗапрОст = "", Конт)
	Если ПустоеЗначение(ТипЦен) = 1 Тогда
		Конт.СуммаПоУчету = ?(Запрос.КонКол = 0, 0, (Запрос.КонСтоим / Запрос.КонКол) * Конт.КвоПоУчету);
		Конт.НачОстСумма = ?(Запрос.НачКол = 0, 0, (Запрос.НачСтоим / Запрос.НачКол) * Конт.НачОст);
		Конт.ПриходСумма = ?(Запрос.ПрихКол = 0, 0, (Запрос.ПрихСтоим / Запрос.ПрихКол) * Конт.Приход);
		Конт.РасходСумма = ?(Запрос.РасхКол = 0, 0, (Запрос.РасхСтоим / Запрос.РасхКол) * Конт.Расход);
	Иначе
		Если БратьЦеныНаДату <> Дата(0) Тогда
			Цена = ВернутьЦену(Конт, БратьЦеныНаДату);
			Конт.СуммаПоУчету = Цена * Конт.КвоПоУчету;
			Конт.НачОстСумма = Цена * Конт.НачОст;
			Конт.ПриходСумма = Цена * Конт.Приход;
			Конт.РасходСумма = Цена * Конт.Расход;
		Иначе
			// нужно делать группировку по датам
			Конт.СуммаПоУчету = ВернутьЦену(Конт, Дат2) * Конт.КвоПоУчету;
			Конт.НачОстСумма = ВернутьЦену(Конт, Дат1) * Конт.НачОст;
			Конт.ПриходСумма = 0;
			Конт.РасходСумма = 0;
			
			// Теперь по датам
			Если ЗапрОст = "" Тогда
				ДобавитьСуммыПоДатам(Запрос, Конт);
			Иначе
				ДобавитьСуммыПоДатам(ЗапрОст, Конт);
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработатьДобавлениеСтроки(ЗапрОст, Запрос, ТЗ, ЭтоСписание = 0)
	Ключ = ЗначениеВСтрокуВнутр(ЗапрОст.ИзмТовар) + "//" + ЗначениеВСтрокуВнутр(?(УчитыватьУпаковку = 1, ЗапрОст.ИзмВидУпаковки, ПолучитьПустоеЗначение("Справочник.ВидыУпаковки")));
	
	Стр = 0;
	Если ТЗ.НайтиЗначение(Ключ, Стр, "Ключ") = 0 Тогда
		ТЗ.НоваяСтрока();
		ТЗ.ТМЦ = ЗапрОст.ИзмТовар;
		Если УчитыватьУпаковку = 1 Тогда
			ТЗ.ВидУпаковки = ЗапрОст.ИзмВидУпаковки;
		КонецЕсли;
		ТЗ.Ключ = Ключ;
		Если ЕстьСРЗП = 1 Тогда
			ТЗ.СхемаРасчетаЗП = ТЗ.ТМЦ.СхемаРасчетаЗП.Получить(ДатаДок).Примечание;
		КонецЕсли;
		ТЗ.Ед = глВернутьБазовуюЕдиницуТовара(ТЗ.ТМЦ);
		ТЗ.Коэффициент = ТЗ.Ед.Коэффициент;
	Иначе
		ТЗ.ПолучитьСтрокуПоНомеру(Стр);
	КонецЕсли;
	ТЗ.ГруппТ = ТЗ.ТМЦ.Родитель;
	
	Если ЭтоСписание = 0 Тогда
		ЗаполнитьКоличество(ЗапрОст, ТЗ);
		Запрос.ВНачалоВыборки();
		Поз = ?(ПустоеЗначение(ТипЦен) = 1, Запрос.Получить(ЗапрОст.ИзмТовар), Запрос.Получить(ЗапрОст.ИзмТовар, ));
		Если Поз = 1 Тогда
			ПосчитатьСуммы(Запрос, ЗапрОст, ТЗ);							
		КонецЕсли;		
	Иначе
		ТЗ.СписаниеБП = ЗапрОст.ПрихКол - ЗапрОст.РасхКол;
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьТекСтроку()	
	КвоПоУчету = 0; СуммаПоУчету=0; НачОст = 0; Приход = 0;
	Расход = 0; НачОстСумма = 0; ПриходСумма = 0; РасходСумма = 0;
	СписаниеБП = 0;
	
	//--- По таблице остатки
	НашлиСтрокуТЗ_Остатки = 0;
	ТЗ_Остатки.ВыбратьСтроки();
	Пока ТЗ_Остатки.ПолучитьСтроку() = 1 Цикл
		
		Если фУчитыватьВидУпаковки = 1 Тогда
			Если (ТЗ_Остатки.ТМЦ = ТМЦ) И (ТЗ_Остатки.ВидУпаковки = ВидУпаковки)  Тогда
				НашлиСтрокуТЗ_Остатки = 1;
				Прервать;				
			КонецЕсли;
		Иначе
			Если ТЗ_Остатки.ТМЦ = ТМЦ Тогда
				НашлиСтрокуТЗ_Остатки = 1;
				Прервать;	
			КонецЕсли;
		КонецЕсли;
			
	КонецЦикла;
	
	Если НашлиСтрокуТЗ_Остатки = 1 Тогда
		ЗаполнитьКоличество(ТЗ_Остатки, Контекст);	 
	КонецЕсли;
	
	//--- По таблице партии
	НашлиСтрокуТЗ_Партии = 0;
	НомСтроки = "";
	НомКолонки = "";
	Если ТЗ_Партии.НайтиЗначение(ТМЦ,НомСтроки,НомКолонки)  = 1 Тогда
		ТЗ_Партии.ПолучитьСтрокуПоНомеру(НомСтроки);
		ПосчитатьСуммы(ТЗ_Партии, ТЗ_Остатки, Контекст);
	КонецЕсли;

	//--- По таблице излишки
	Если ПолучатьСписание = 1 Тогда
		НашлиСтрокуТЗ_Излишки = 0;
		ТЗ_Излишки.ВыбратьСтроки();
		Пока ТЗ_Излишки.ПолучитьСтроку() = 1 Цикл
			
			Если фУчитыватьВидУпаковки = 1 Тогда
				Если (ТЗ_Излишки.ТМЦ = ТМЦ) И (ТЗ_Излишки.ВидУпаковки = ВидУпаковки)  Тогда
					НашлиСтрокуТЗ_Излишки = 1;
					Прервать;				
				КонецЕсли;
			Иначе
				Если ТЗ_Излишки.ТМЦ = ТМЦ Тогда
					НашлиСтрокуТЗ_Излишки = 1;
					Прервать;	
				КонецЕсли;
			КонецЕсли;
				
		КонецЦикла;
		
		Если НашлиСтрокуТЗ_Излишки = 1 Тогда
			СписаниеБП = ТЗ_Излишки.ПрихКол - ТЗ_Излишки.РасхКол; 
		КонецЕсли;			
	КонецЕсли;

	ЗаполнитьТМЦДляСписания(Контекст); //--- УМК Сандомирский В.Ю. (23.09.14)		
	РассчитатьСтроку(Контекст);		
КонецПроцедуры // ЗаполнитьТекСтроку()

// =============================== УМК Сандомирский В.Ю. (11.08.14) Прямые запросы
Процедура ЗаполнитьПоРегистрамDBF(Рассчитать=0, ТолькоСтроку = 0, ПересчитатьЦену = 0)
	ТекстУсл = "";
	Если ГруппаТ.Выбран() = 1 Тогда
	    ТекстУсл = "Условие (ИзмТовар в ГруппаТ);";
		Если списТовар.РазмерСписка() <> 0 Тогда
			Если ВсеКроме = 1 Тогда
			    ТекстУсл = ТекстУсл + глПравильныйСимволПереноса + "Условие (НЕ(ИзмТовар в списТовар));";
			Иначе
				ТекстУсл = ТекстУсл + глПравильныйСимволПереноса + "Условие (ИзмТовар в списТовар);";
			КонецЕсли;		
		КонецЕсли;
	Иначе
		Если списТовар.РазмерСписка() <> 0 Тогда
			Если ВсеКроме = 1 Тогда
			    ТекстУсл = "Условие (НЕ (ИзмТовар в списТовар));";
			Иначе
				ТекстУсл = "Условие (ИзмТовар в списТовар);";
			КонецЕсли;		
		КонецЕсли;
	КонецЕсли;
	
	//Если ТекстУсл <> "" Тогда
	//    ТекстУсл = "
	//	|Условие (" + ТекстУсл + ");";
	//КонецЕсли;
	
	Запрос=СоздатьОбъект("Запрос");
	Если (ДатаДок >= ПолучитьДатуТА()) и (ПустоеЗначение(ДокКонца) = 1) Тогда
		ТекстЗапроса = "
			|Период с Д1;";
	Иначе 
		ТекстЗапроса = "
			|Период с Д1 по Д2;";
	КонецЕсли;
	
	ДДок = Мин(ДатаДок, ПолучитьДатуТА());
	//ТекстЗапроса="
	//|ПЕРИОД С НачДата По ДДок;";
	глУстДатыОтчета(Д1, Д2, ДокНачала, ДокКонца, НачДата, ДатаДок);
	Если ТипЗначенияСтр(Д1) = "Документ" Тогда
		Дат1 = Д1.ДатаДок;
	Иначе
		Дат1 = Д1;
	КонецЕсли;
	Если ТипЗначенияСтр(Д2) = "Документ" Тогда
		Дат2 = Д2.ДатаДок;
	Иначе
		Дат2 = Д2;
	КонецЕсли;
	УсловиеПеремещения = ""; УсловиеСписания = ""; ОбщееУсловие = "";
	Если НеЗаполнятьПеремещения = 1 Тогда
		УсловиеПеремещения = "(ТекДок.Вид() <> ""Перемещение"")";
	КонецЕсли;
	Если НеЗаполнятьСписания = 1 Тогда
		УсловиеСписания = "((ТекДок.Вид() <> ""СписаниеТМЦВПроизводство"") И (ИзмТовар.СписыватьПриВыпуске.Получить(ТекДок.ДатаДок) = 1))";
	КонецЕсли;
	Если НеЗаполнятьСписания + НеЗаполнятьПеремещения > 0 Тогда
		ОбщееУсловие = " когда (" + УсловиеПеремещения + ?((УсловиеСписания <> "") И (УсловиеПеремещения <> ""), " И ", "") + УсловиеСписания + ")";
	КонецЕсли;
	
	Если МестоХранения.Выбран() =  1 Тогда
		ТекстЗ = ТекстЗапроса+"
		|ИзмТовар=Регистр.Остатки.ТМЦ;
		|ИзмВидУпаковки=Регистр.Остатки.ВидУпаковки;
		|ИзмФирма=Регистр.Остатки.Фирма;
		|Склад = Регистр.Остатки.МестоХранения;    
		|ТекДок = Регистр.Остатки.ТекущийДокумент;
		|Кол=Регистр.Остатки.ОстатокТовара;
		|Группировка ИзмТовар Без групп;"
		+ 
		?(УчитыватьУпаковку = 1, "
		|Группировка ИзмВидУпаковки Без групп;", "")  
		+ 
		?(ПустоеЗначение(ТипЦен) = 1, "", "
		|Группировка День;") + "
		|Функция КонКол=КонОст(Кол);
		|Функция НачКол=НачОст(Кол);
		|Функция ПрихКол=Приход(Кол)" + ОбщееУсловие + "; 
		|Функция РасхКол=Расход(Кол)" + ОбщееУсловие + ";
		|Условие (ИзмФирма=Фирма);
		|Условие (Склад = МестоХранения);" + 
		?(ТолькоСтроку = 1,"
		|Условие (ИзмТовар = ТМЦ);",ТекстУсл);
		
		ЗапрОст = СоздатьОбъект("Запрос");
		Если ЗапрОст.Выполнить(ТекстЗ) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если (ПустоеЗначение(НачДата1) = 0) И (ПустоеЗначение(КонДата) = 0) Тогда
		КДата = Мин(КонДата, ПолучитьДатуТА());
		НДата = Мин(КДата, НачДата1);
		Д1_1 = Дата(0); Д2_1 = Дата(0);
		глУстДатыОтчета(Д1_1, Д2_1, ДокНачалаБП, ДокКонцаБП, НДата, КДата);
		
		ТекстЗ = "
		|Период С Д1_1 ПО Д2_1;
		|ИзмТовар=Регистр.Остатки.ТМЦ;
		|ИзмВидУпаковки=Регистр.Остатки.ВидУпаковки;
		|ИзмФирма=Регистр.Остатки.Фирма;
		|Склад = Регистр.Остатки.МестоХранения;    
		|Кол=Регистр.Остатки.ОстатокТовара;
		|ТекДок = Регистр.Остатки.ТекущийДокумент;
		|Группировка ИзмТовар Без групп;" + 
		?(УчитыватьУпаковку = 1,"
		|Группировка ИзмВидУпаковки Без групп;", "") + "
		|Функция ПрихКол=Приход(Кол) КОГДА (ЭтоИнв(ТекДок) = 1);
		|Функция РасхКол=Расход(Кол) КОГДА (ЭтоИнв(ТекДок) = 1);
		|Условие (ИзмФирма=Фирма);
		|Условие (Склад = МестоХранения);" + 
		?(ТолькоСтроку = 1,"
		|Условие (ИзмТовар = ТМЦ);",ТекстУсл);
		
		ЗапрСписание = СоздатьОбъект("Запрос");
		Если ЗапрСписание.Выполнить(ТекстЗ) = 0 Тогда
			Возврат;
		КонецЕсли;
		ПолучатьСписание = 1;
	Иначе
		ПолучатьСписание = 0;
	КонецЕсли;
	
	Если ДопКво = 1 Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|ИзмТовар=Регистр.Партии.ТМЦ,Регистр.Остатки.ТМЦ;
		|ИзмФирма=Регистр.Партии.Фирма,Регистр.Остатки.Фирма;
		|УчетДопКво = Регистр.Партии.ТМЦ.УчетДопКво,Регистр.Остатки.ТМЦ.УчетДопКво;
		|ТекДок = Регистр.Партии.ТекущийДокумент;
		|Склад=Регистр.Партии.МестоХранения;    
		|ИзмКонтрагент=Регистр.Партии.МестоХранения,Регистр.Остатки.МестоХранения;
		|ИзмСтоимость=Регистр.Партии.Стоимость;
		|Кол=Регистр.Остатки.ДопКво;
		|Группировка ИзмТовар Без групп;" + 
		?(ПустоеЗначение(ТипЦен) = 1, "", "
		|Группировка День;") + "
		|Функция КонКол=КонОст(Кол);
		|Функция КонСтоим=КонОст(ИзмСтоимость);
		|Функция НачКол=НачОст(Кол);
		|Функция НачСтоим=НачОст(ИзмСтоимость);
		|Функция ПрихКол=Приход(Кол)" + ОбщееУсловие + "; 
		|Функция ПрихСтоим=Приход(ИзмСтоимость)" + ОбщееУсловие + "; 
		|Функция РасхКол=Расход(Кол)" + ОбщееУсловие + "; 
		|Функция РасхСтоим=Расход(ИзмСтоимость)" + ОбщееУсловие + "; 
		|Условие (ИзмФирма=Фирма);
		|Условие (УчетДопКво = 1);" + 
		?(ТолькоСтроку = 1,"
		|Условие (ИзмТовар = ТМЦ);",ТекстУсл);
	Иначе
		ТекстЗапроса=ТекстЗапроса+"
		|ИзмТовар=Регистр.Партии.ТМЦ;
		|ИзмФирма=Регистр.Партии.Фирма;
		|ТекДок = Регистр.Партии.ТекущийДокумент;
		|Счет=Регистр.Партии.Счет;    
		|Склад=Регистр.Партии.МестоХранения;    
		|Поставщик=Регистр.Партии.Поставщик;
		|Поставка=Регистр.Партии.Поставка;
		|ИзмКонтрагент=Регистр.Партии.МестоХранения;
		|ИзмСтоимость=Регистр.Партии.Стоимость;
		|Кол=Регистр.Партии.ОстатокТовара;
		|Группировка ИзмТовар Без групп;" + 
		?(ПустоеЗначение(ТипЦен) = 1, "", "
		|Группировка День;") + "
		|Функция КонКол=КонОст(Кол);
		|Функция КонСтоим=КонОст(ИзмСтоимость);
		|Функция НачКол=НачОст(Кол);
		|Функция НачСтоим=НачОст(ИзмСтоимость);
		|Функция ПрихКол=Приход(Кол)" + ОбщееУсловие + "; 
		|Функция ПрихСтоим=Приход(ИзмСтоимость)" + ОбщееУсловие + "; 
		|Функция РасхКол=Расход(Кол)" + ОбщееУсловие + "; 
		|Функция РасхСтоим=Расход(ИзмСтоимость)" + ОбщееУсловие + "; 
		|Условие (ИзмФирма=Фирма);" + 
		?(ТолькоСтроку = 1,"
		|Условие (ИзмТовар = ТМЦ);",ТекстУсл);
		Если ТипИнвентаризации=2 Тогда
			ТекстЗапроса=ТекстЗапроса+"	
			|Условие (ОтборПоСчету(Счет) = 1);";
		Иначе
			ТекстЗапроса=ТекстЗапроса+"	
			|Условие (Склад = Поставщик);";
			//|Условие (ОтборПоСчету(Счет) = 0);";
		КонецЕсли;		
	КонецЕсли;
	
	Флаг=Запрос.Выполнить(ТекстЗапроса);
	Если Флаг=0 Тогда
		Предупреждение("Запрос по регистру Партии не выполнился!");
		Возврат;
	КонецЕсли;
	
	МетодТ = Константа.МетодРасчетаСебестоимостиТоваров.Получить(ДатаДок);
	МетодЗ = Константа.МетодРасчетаСебестоимостиПроизводственныхЗапасов.Получить(ДатаДок);
	МетодП = Константа.МетодРасчетаСебестоимостиПродукции.Получить(ДатаДок);

	Если ТолькоСтроку = 1 Тогда
		Рассчитать = 1;
	КонецЕсли;
	
//	Если ТолькоСтроку = 1 Тогда
//		КвоПоУчету = 0; СуммаПоУчету=0; НачОст = 0; Приход = 0;
//		Расход = 0; НачОстСумма = 0; ПриходСумма = 0; РасходСумма = 0;
//		СписаниеБП = 0;
//		
//		Получено = 1;
//		Если УчитыватьУпаковку = 1 
//		Если (фУчитыватьВидУпаковки = 0) И (ПустоеЗначение(ТипЦен) = 1) Тогда
//			Получено = ЗапрОст.Получить(ТМЦ);
//		ИначеЕсли (фУчитыватьВидУпаковки = 1) И (ПустоеЗначение(ТипЦен) = 1) Тогда
//			Получено = ЗапрОст.Получить(ТМЦ, ВидУпаковки);
//		ИначеЕсли (фУчитыватьВидУпаковки = 0) (УчитыватьУпаковку = 1) И (ПустоеЗначение(ТипЦен) = 1) Тогда
//			Получено = ЗапрОст.Получить(ТМЦ, );
//		Если (фУчитыватьВидУпаковки = 0) И (ПустоеЗначение(ТипЦен) = 0) Тогда
//			Получено = ЗапрОст.Получить(ТМЦ, );
//		ИначеЕсли (фУчитыватьВидУпаковки = 1) И (ПустоеЗначение(ТипЦен) = 0) Тогда
//			Получено = ЗапрОст.Получить(ТМЦ, ВидУпаковки, );
//		ИначеЕсли (фУчитыватьВидУпаковки = 0) (УчитыватьУпаковку = 1) И (ПустоеЗначение(ТипЦен) = 0) Тогда
//			Получено = ЗапрОст.Получить(ТМЦ, , );			
//		Иначе
//			Получено = 0;
//		КонецЕсли;
//		
//		Если ?(фУчитыватьВидУпаковки = 1, ЗапрОст.Получить(ТМЦ,ВидУпаковки), ЗапрОст.Получить(ТМЦ)) = 1 Тогда
//		    ЗаполнитьКоличество(ЗапрОст, Контекст);
//			Если ПустоеЗначение(ТипЦен) = 1 Тогда
//				Получено = Запрос.Получить(ТМЦ);
//			Иначе
//				Получено = Запрос.Получить(ТМЦ,);
//			КонецЕсли;
//
//			Если Получено = 1 Тогда
//				ПосчитатьСуммы(Запрос, ЗапрОст, Контекст);							
//			КонецЕсли;
//		КонецЕсли;	
//		
//		//--- УМК Сандомирский В.Ю. (06.01.15) исправление ошибки Рита увидела что не заполняются ... Списание Общь
//			
//		Если ПолучатьСписание = 1 Тогда  
//			ЗапрСписание.ВНачалоВыборки();
//			Если ?(фУчитыватьВидУпаковки = 1, ЗапрСписание.Получить(ТМЦ,ВидУпаковки), ЗапрСписание.Получить(ТМЦ)) = 1 Тогда
//			    СписаниеБП = ЗапрСписание.ПрихКол - ЗапрСписание.РасхКол;
//			КонецЕсли;			
//		КонецЕсли;		
//		ЗаполнитьТМЦДляСписания(Контекст); //--- УМК Сандомирский В.Ю. (23.09.14)		
//		РассчитатьСтроку(Контекст);
//	Иначе
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ТЧТаблицаИсх.Выгрузить(ТЗ);
		
		// --- УМК Сандомирский В.Ю. (04.07.15)
		//Если УчитыватьУпаковку = 1 Тогда
		//	ТЗ.Свернуть("ТМЦ,ВидУпаковки,СхемаРасчетаЗП,Ед,Партия,Коэффициент,ПримечаниеС,ДляП,фРасчетноеКвоПоФакту", "КвоПоУчету,КвоПоФакту,Разница,СуммаПоУчету,СуммаПоФакту,СуммаРазницы,НачОст,НачОстСумма,Приход,ПриходСумма,Расход,РасходСумма,СписаниеБП");			
		//Иначе	
		//	ТЗ.Свернуть("ТМЦ,СхемаРасчетаЗП,Ед,Партия,Коэффициент,ПримечаниеС,ДляП,фРасчетноеКвоПоФакту", "КвоПоУчету,КвоПоФакту,Разница,СуммаПоУчету,СуммаПоФакту,СуммаРазницы,НачОст,НачОстСумма,Приход,ПриходСумма,Расход,РасходСумма,СписаниеБП");
		//КонецЕсли;		
		
		Если ТЗ.КоличествоСтрок() > 0 Тогда
		    ТЗ.Заполнить(0,,,"КвоПоУчету,Разница,СуммаПоУчету,СуммаРазницы,НачОст,НачОстСумма,Приход,ПриходСумма,Расход,РасходСумма,СписаниеБП");
		КонецЕсли;		
		ТЗ.НоваяКолонка("ГруппТ", "Справочник.ТМЦ");
			
		Если Рассчитать = 0 Тогда
			Пока ЗапрОст.Группировка("ИзмТовар") = 1 Цикл
				Если ЗапрОст.ИзмТовар.Выбран()=0 Тогда
					Продолжить;
				КонецЕсли; 
				                              
				Если УчитыватьУпаковку = 0 Тогда
					ОбработатьДобавлениеСтроки(ЗапрОст, Запрос, ТЗ, 0);
				Иначе
					Пока ЗапрОст.Группировка("ИзмВидУпаковки") = 1 Цикл
						ОбработатьДобавлениеСтроки(ЗапрОст, Запрос, ТЗ, 0);
					КонецЦикла;					
				КонецЕсли;				
			КонецЦикла;
			Если ПолучатьСписание = 1 Тогда
				Пока ЗапрСписание.Группировка(1) = 1 Цикл
					Если УчитыватьУпаковку = 1 Тогда
						ОбработатьДобавлениеСтроки(ЗапрСписание, Запрос, ТЗ, 1);
					Иначе
						Пока ЗапрСписание.Группировка(2) = 1 Цикл
							ОбработатьДобавлениеСтроки(ЗапрСписание, Запрос, ТЗ, 1);
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;			
	
			ТЗ.Сортировать("ГруппТ,ТМЦ");
			ТЗ.Выгрузить(ТЧТаблицаИсх);
			ТЧТаблицаИсх.ВыбратьСтроки();
			Пока ТЧТаблицаИсх.ПолучитьСтроку() = 1 Цикл
				ЗаполнитьДопПоля();
				ЗаполнитьТМЦДляСписания(ТЧТаблицаИсх); 	//--- УМК Сандомирский В.Ю. (23.09.14)
				ЗаполнитьТМЦДляПрихода(ТЧТаблицаИсх); 	//--- УМК Сандомирский В.Ю. (06.10.14)
				РассчитатьСтроку(ТЧТаблицаИсх, ПересчитатьЦену, 1);
				Если ПересчитатьЦену = 0 Тогда
					Стр = 0;
					Если ИсхЦены.НайтиЗначение(ТЧТаблицаИсх.Ключ, Стр, "Ключ") = 1 Тогда
						ТЧТаблицаИсх.ЦенаПродавца = ИсхЦены.ПолучитьЗначение(Стр, "ЦенаПродавца");
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ОтобразитьТабличнуюЧасть(1, 1);
		Иначе
			ТЧТаблицаИсх.ВыбратьСтроки();
			Пока ТЧТаблицаИсх.ПолучитьСтроку() = 1 Цикл
				Если ТолькоСтроку = 1 Тогда
					Если (ТЧТаблицаИсх.ТМЦ <> ТМЦ) ИЛИ ((фУчитыватьВидУпаковки = 1) И (ВидУпаковки <> ТЧТаблицаИсх.ВидУпаковки))  Тогда						
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				ТЧТаблицаИсх.КвоПоУчету = 0; ТЧТаблицаИсх.СуммаПоУчету = 0;
				ТЧТаблицаИсх.Приход = 0; ТЧТаблицаИсх.Расход = 0; ТЧТаблицаИсх.НачОст = 0; ТЧТаблицаИсх.НачОстСумма = 0; ТЧТаблицаИсх.ПриходСумма = 0; ТЧТаблицаИсх.РасходСумма = 0; ТЧТаблицаИсх.СписаниеБП = 0;
				Запрос.ВНачалоВыборки();
				// ВНИМАНИЕ!!! При изменении значения глПартионныйУчетПоСкладам 
				// необходимо изменить переметры вызова метода Получить()
				Если ПустоеЗначение(ТипЦен) = 1 Тогда
					Получено = Запрос.Получить(ТЧТаблицаИсх.ТМЦ);
				Иначе
					Получено = Запрос.Получить(ТЧТаблицаИсх.ТМЦ,);
				КонецЕсли;

				Если Получено = 1 Тогда
					Если ((глПолучитьМетодРасчетаСебестоимости(Запрос.ИзмТовар,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.FIFO) 
					ИЛИ ((глПолучитьМетодРасчетаСебестоимости(Запрос.ИзмТовар,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.LIFO))) Тогда
						Запрос.ВНачалоВыборки();
						Если Запрос.Получить(ТЧТаблицаИсх.ТМЦ,ТЧТаблицаИсх.Партия) = 1 Тогда							
							ЗапрОст.ВНачалоВыборки();
							Если ЗапрОст.Получить(ТЧТаблицаИсх.ТМЦ) = 1 Тогда
								ЗаполнитьКоличество(ЗапрОст, ТЧТаблицаИсх);
								ПосчитатьСуммы(Запрос, ЗапрОст, ТЧТаблицаИсх);
							КонецЕсли;							
						КонецЕсли;	
					Иначе
						Если ПустоеЗначение(МестоХранения) = 1 Тогда
							ЗаполнитьКоличество(Запрос, ТЧТаблицаИсх);
							ПосчитатьСуммы(Запрос, "", ТЧТаблицаИсх);
						Иначе
							ЗапрОст.ВНачалоВыборки();
							Получено = 0;
							Если (УчитыватьУпаковку = 1) И (ПустоеЗначение(ТипЦен) = 1) Тогда
								Получено = ЗапрОст.Получить(ТЧТаблицаИсх.ТМЦ, ТЧТаблицаИсх.ВидУпаковки);
							ИначеЕсли (УчитыватьУпаковку = 1) И (ПустоеЗначение(ТипЦен) = 0) Тогда
								Получено = ЗапрОст.Получить(ТЧТаблицаИсх.ТМЦ, ТЧТаблицаИсх.ВидУпаковки, );
							ИначеЕсли (УчитыватьУпаковку = 0) И (ПустоеЗначение(ТипЦен) = 1) Тогда
								Получено = ЗапрОст.Получить(ТЧТаблицаИсх.ТМЦ);
							ИначеЕсли (УчитыватьУпаковку = 0) И (ПустоеЗначение(ТипЦен) = 0) Тогда
								Получено = ЗапрОст.Получить(ТЧТаблицаИсх.ТМЦ, );
							КонецЕсли;

							Если Получено = 1 Тогда
								ЗаполнитьКоличество(ЗапрОст, ТЧТаблицаИсх);
								ПосчитатьСуммы(Запрос, ЗапрОст, ТЧТаблицаИсх);
							КонецЕсли;							
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;
				
				Если ПолучатьСписание = 1 Тогда
					ЗапрСписание.ВНачалоВыборки();
					Если ?(УчитыватьУпаковку = 1, ЗапрСписание.Получить(ТЧТаблицаИсх.ТМЦ, ТЧТаблицаИсх.ВидУпаковки), ЗапрСписание.Получить(ТЧТаблицаИсх.ТМЦ)) = 1 Тогда
					    ТЧТаблицаИсх.СписаниеБП = ЗапрСписание.ПрихКол - ЗапрСписание.РасхКол;
					КонецЕсли;		    
				КонецЕсли;

				ЗаполнитьДопПоля();
				ЗаполнитьТМЦДляСписания(ТЧТаблицаИсх); 	//--- УМК Сандомирский В.Ю. (23.09.14)
				ЗаполнитьТМЦДляПрихода(ТЧТаблицаИсх); 	//--- УМК Сандомирский В.Ю. (06.10.14)				
				РассчитатьСтроку(ТЧТаблицаИсх, ПересчитатьЦену, 1);
			КонецЦикла;
			ОтобразитьТабличнуюЧасть(1, 1);
			//--- УМК Сандомирский В.Ю. (06.10.14) --- ЗАКОММЕНТИЛ по задаче "Не удалять при расчете пустые строки"
		КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (11.08.14) Прямые запросы
Процедура ЗаполнитьПоРегистрам(Рассчитать=0, ТолькоСтроку = 0, ПересчитатьЦену = 0)	
	ЗаполнитьПоРегистрамDBF(Рассчитать,ТолькоСтроку, ПересчитатьЦену);
КонецПроцедуры

//====================================================================== УМК Сандомирский В.Ю. (11.09.14) кнопка Зпролнить --- выбор :"Дополнить родителями ТМЦ оприходования\списания" изменена (06.10.14)
Процедура ДополнитьРодителямиТМЦОприходованияСписания();	
	//--- УМК Сандомирский В.Ю. (06.10.14)  дозаполняем только ТМУ для приходования
	//---Вариант от 06.10.14
	Состояние("Обработка справочника ТМЦ");
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	ВременныйСписокТоваров 	= СоздатьОбъект("ТаблицаЗначений");
	ВременныйСписокТоваров.НоваяКолонка("ТМЦ","Справочник.ТМЦ");
	ТЗ_Строки 				= СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ_Строки, "ТМЦ");
	ТЗ_Строки.ВыбратьСтроки();
	Пока ТЗ_Строки.ПолучитьСтроку() = 1 Цикл		
		//--- Второй из ТМЦ для приходования этого ТМЦ
		Если ПустоеЗначение(ТЗ_Строки.ТМЦ.ТМЦДляПрихода.Получить(ДатаДок)) <> 1  Тогда
 			ВременныйСписокТоваров.НоваяСтрока();
			ВременныйСписокТоваров.ТМЦ = ТЗ_Строки.ТМЦ.ТМЦДляПрихода.Получить(ДатаДок);		
		КонецЕсли;
			
		//--- Третий где это ТМЦ может быть ТМЦ-ом для приходования
		СпрТМЦ.ВыбратьЭлементы();
		Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
			Если СпрТМЦ.ТМЦДляПрихода.Получить(ДатаДок) = ТЗ_Строки.ТМЦ Тогда
				ВременныйСписокТоваров.НоваяСтрока();
				ВременныйСписокТоваров.ТМЦ = СпрТМЦ.ТекущийЭлемент();	
			КонецЕсли;
		КонецЦикла;			
	КонецЦикла;
	
	ВременныйСписокТоваров.Свернуть("ТМЦ","");
	ВременныйСписокТоваров.ВыбратьСтроки();
	Пока ВременныйСписокТоваров.ПолучитьСтроку() = 1 Цикл		
		НомерСтр 		= "";
		НомерКолонки 	= "";
		Если ТЗ_Строки.НайтиЗначение(ВременныйСписокТоваров.ТМЦ,НомерСтр,НомерКолонки) = 0 Тогда
			НоваяСтрока();
			ТМЦ = ВременныйСписокТоваров.ТМЦ;
			ИзмТМЦ();
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры // ДополнитьРодителямиТМЦОприходованияСписания();	

//======================================================================
Процедура ДополнитьВидыУпаковки()
	ТЗТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ТЧТаблицаИсх.ВыгрузитьТабличнуюЧасть(ТЗТМЦ);
	ТЗТМЦ.НоваяКолонка("ТМЦУпаковка", "Строка");
	ТЗТМЦ.ВыбратьСтроки();
	Пока ТЗТМЦ.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗТМЦ.ВидУпаковки) = 0 Тогда
			ТЗТМЦ.ТМЦУпаковка = ЗначениеВСтрокуВнутр(ТЗТМЦ.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТЗТМЦ.ВидУпаковки);
		КонецЕсли;
	КонецЦикла;
	УжеЕстьУпаковка = СоздатьОбъект("ТаблицаЗначений");
	УжеЕстьУпаковка.Загрузить(ТЗТМЦ);
	ТЗТМЦ.НоваяКолонка("Ключ");
	ТЗТМЦ.НоваяКолонка("КодУп");
	
	ТЗТМЦ.УдалитьСтроки();	
	СтарТМЦ = "";	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ТМЦ <> СтарТМЦ Тогда
			СписУп = глПолучитьСписокВидовУпаковкиДляТМЦ(ТМЦ, 1);
			Если СписУп.РазмерСписка() = 0 Тогда
				СписУп.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.ВидыУпаковки"));
			КонецЕсли;
			
			Для ИндСпис = 1 По СписУп.РазмерСписка() Цикл
				ТекВидУп = СписУп.ПолучитьЗначение(ИндСпис);
				ТекВидУп = ?(ТекВидУп = НетУп, ПолучитьПустоеЗначение("Справочник.ВидыУпаковки"), ТекВидУп);
				
				ТЗТМЦ.НоваяСтрока();				
				// поищем, возможно упаковка уже есть
				ТЗТМЦ.Ключ = ЗначениеВСтрокуВнутр(ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТекВидУп);
				Стр = 0;
				Если УжеЕстьУпаковка.НайтиЗначение(ТЗТМЦ.Ключ, Стр, "ТМЦУпаковка") = 1 Тогда
					Для Инд = 1 По Метаданные.Документ("Инвентаризация").РеквизитТабличнойЧасти() Цикл
						ИмяРекв = Метаданные.Документ("Инвентаризация").РеквизитТабличнойЧасти(Инд).Идентификатор; 
						ТЗТМЦ.УстановитьЗначение(ТЗТМЦ.НомерСтроки, ИмяРекв, УжеЕстьУпаковка.ПолучитьЗначение(Стр, ИмяРекв));
					КонецЦикла;					
				Иначе
					ТЗТМЦ.ТМЦ = ТМЦ;
					ТЗТМЦ.Партия = Партия;
					ТЗТМЦ.Ед = Ед;
					ТЗТМЦ.Коэффициент = Коэффициент;
					ТЗТМЦ.ЦенаБезНДС = ЦенаБезНДС;
					ТЗТМЦ.ЦенаПродавца = ЦенаПродавца;
					ТЗТМЦ.ПримечаниеС = ПримечаниеС;
					ТЗТМЦ.РаспределятьВСписания = РаспределятьВСписания;
					ТЗТМЦ.СписаниеБП = СписаниеБП;
					ТЗТМЦ.ДляП = ДляП;
					ТЗТМЦ.СхемаРасчетаЗП = СхемаРасчетаЗП;
					ТЗТМЦ.ТМЦДляСписания = ТМЦДляСписания;
					ТЗТМЦ.ТМЦДляПрихода = ТМЦДляПрихода;
					ТЗТМЦ.фРасчетноеКвоПоФакту = "";
				КонецЕсли;
				ТЗТМЦ.ВидУпаковки = ТекВидУп;
				ТЗТМЦ.КодУп = ТекВидУп.Код;
			КонецЦикла;
			
			СтарТМЦ = ТМЦ;
		КонецЕсли;
	КонецЦикла;

	ТЗТМЦ.Сортировать("ТМЦ,КодУп");
	ТЗТМЦ.Выгрузить(ТЧТаблицаИсх);
	ЗагрузитьТабличнуюЧасть(ТЗТМЦ);
КонецПроцедуры // 

//======================================================================
Процедура ЗаполнитьИзПеремещения()
	Ч = 0;
	Если ВвестиЧисло(Ч, "Введите номер колонки Количество", 1, 0) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если (Ч > 3) И (Ч < 1) Тогда
		Предупреждение("Число должно быть между 1 и 3");
		Возврат;
	КонецЕсли;
	
	ДокП = СоздатьОбъект("Документ.Перемещение");
	Если ДокП.Выбрать("Выберите перемещение") = 1 Тогда
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(ТЗ);
		Если фУчитыватьВидУпаковки = 1 Тогда
			ТЗ.НоваяКолонка("ТМЦУпаковка");
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				ТЗ.ТМЦУпаковка = ЗначениеВСтрокуВнутр(ТЗ.ТМЦ) + "//" + ?((ПустоеЗначение(ТЗ.ВидУпаковки) = 1) ИЛИ (ТЗ.ВидУпаковки = НетУп), ЗначениеВСтрокуВнутр(ПолучитьПустоеЗначение("Справочник.ВидыУпаковки")), 
					ЗначениеВСтрокуВнутр(ТЗ.ВидУпаковки));
			КонецЦикла;
		КонецЕсли;
		
		СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
		
		ДокП.ВыбратьСтроки();
		Пока ДокП.ПолучитьСтроку() = 1 Цикл
			СпрТМЦ.НайтиЭлемент(ДокП.Стало);
			Ключ = ЗначениеВСтрокуВнутр(СпрТМЦ.ТекущийЭлемент()) + "//" + ?((ПустоеЗначение(ДокП.ВидУпаковкиСтало) = 1) ИЛИ (ДокП.ВидУпаковкиСтало = НетУп), ЗначениеВСтрокуВнутр(ПолучитьПустоеЗначение("Справочник.ВидыУпаковки")), 
				ЗначениеВСтрокуВнутр(ДокП.ВидУпаковкиСтало));
			
			Стр = 0;
			Если фУчитыватьВидУпаковки = 1 Тогда				
				ТЗ.НайтиЗначение(Ключ, Стр, "ТМЦУпаковка");
			Иначе
				ТЗ.НайтиЗначение(СпрТМЦ.ТекущийЭлемент(), Стр, "ТМЦ");
			КонецЕсли;
			Если Стр = 0 Тогда
				Если фУчитыватьВидУпаковки = 1 Тогда
					Сообщить("Не найден товар: " + Строка(ДокП.ТМЦ) + " упаковка: " + Строка(ДокП.ВидУпаковкиСтало));
				Иначе
					Сообщить("Не найден товар: " + Строка(ДокП.ТМЦ));
				КонецЕсли;
			Иначе
				ТЗ.ПолучитьСтрокуПоНомеру(Стр);				
			КонецЕсли;
			
			Если Стр <> 0 Тогда
				ТЗ.УстановитьЗначение(Стр, "КвоПоФакту" + Ч, ТЗ.ПолучитьЗначение(Стр, "КвоПоФакту" + Ч) + ДокП.Кво);
				РассчитатьСтрокуФ(ТЗ);
			КонецЕсли;
			
			Стр = 0;			
			Если ТЧТаблицаИсх.НайтиЗначение(Ключ, Стр, "Ключ") = 1 Тогда
				ТЧТаблицаИсх.УстановитьЗначение(Стр, "КвоПоФакту" + Ч, ТЧТаблицаИсх.ПолучитьЗначение(Стр, "КвоПоФакту" + Ч) + ДокП.Кво);
				ТЧТаблицаИсх.ПолучитьСтрокуПоНомеру(Стр);
				РассчитатьСтрокуФ(ТЧТаблицаИсх);
			КонецЕсли;
		КонецЦикла;
		
		ЗагрузитьТабличнуюЧасть(ТЗ);
	КонецЕсли;
КонецПроцедуры // ЗаполнитьИзПеремещения()

// ======================================
Процедура Заполнить()	
	//Если (МестоХранения.Выбран() = 0) и (ТипИнвентаризации = 2)  Тогда
	//    Предупреждение("Не выбран склад, на котором делается инвентаризация!");
	//	Возврат;
	//КонецЕсли;
	Если КоличествоСтрок() > 0 Тогда
		СпМеню = СоздатьОбъект("СписокЗначений");
		СпМеню.ДобавитьЗначение(1, "Полностью");
		СпМеню.ДобавитьЗначение(2, "Обновить строку");
		СпМеню.ДобавитьЗначение(3, "Дополнить родителями ТМЦ для приходования");
		СпМеню.ДобавитьЗначение(4, "Дополнить разрешенными видами упаковки");
		СпМеню.ДобавитьЗначение(5, "Заполнить из перемещения количество");
		СпМеню.ДобавитьЗначение(6, "Подбор");
		Зн = 1;
		Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Зн = 1;	    
	КонецЕсли;
	
	Если Зн = 1 Тогда
		ПересчитатьЦену = 0;
		Если Вопрос("Пересчитать цену продавца?", "Да+Нет") = "Да" Тогда
			ПересчитатьЦену = 1;
		Иначе
			ТЧТаблицаИсх.Выгрузить(ИсхЦены,,,"Ключ,ЦенаПродавца");
		КонецЕсли;
		
		Если КоличествоСтрок() > 0 Тогда
			Рез = Вопрос("Удалить строки?","Да+Нет+Отмена");
			Если Рез ="Да" Тогда
				УдалитьСтроки();
				ТЧТаблицаИсх.УдалитьСтроки();
			ИначеЕсли Рез = "Отмена" Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		//Если Выбран() = 0 Тогда
		//	Если Вопрос("Документ не записан. Записать?", "Да+Нет") = "Да" Тогда
		//		Записать();
		//	Иначе
		//		Возврат;
		//	КонецЕсли;
		//КонецЕсли;
	    глПроверкаАктуальностиОтчета(Константа.ДатаНачалаРаботы,ДатаДок,Фирма,1);
		
		ЗаполнитьПоРегистрам(,,ПересчитатьЦену);
	ИначеЕсли Зн = 2 Тогда
		ЗаполнитьПоРегистрам(,1);
	ИначеЕсли Зн = 3 Тогда
		ДополнитьРодителямиТМЦОприходованияСписания();	
	ИначеЕсли Зн = 4 Тогда
		ДополнитьВидыУпаковки();
	ИначеЕсли Зн = 5 Тогда
		ЗаполнитьИзПеремещения();
	ИначеЕсли Зн = 6 Тогда
		глПодбор(Контекст, "ТМЦ", "ДляПодбораЗаказ");
	КонецЕсли;
КонецПроцедуры 
                                    
// ======================================
Процедура РассчитатьПоБухгалтерии()
	Перем ИтОстаток;
	
	СписокТМЦ = СоздатьОбъект("СписокЗначений"); // список ТМЦ для запроса
	СписокПартий = СоздатьОбъект("СписокЗначений"); // список партий для запроса
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если СписокТМЦ.Принадлежит(ТМЦ) = 0 Тогда
		    СписокТМЦ.ДобавитьЗначение(ТМЦ);
		КонецЕсли;
		Если СписокПартий.Принадлежит(Партия) = 0 Тогда
		    СписокПартий.ДобавитьЗначение(Партия);
		КонецЕсли;
	КонецЦикла; 
	
	ИтОстаток = СоздатьОбъект("БухгалтерскиеИтоги");
	ИтОстаток.ИспользоватьРазделительУчета(Фирма);
	ИтОстаток.ИспользоватьСубконто(ВидыСубконто.МестаХранения,МестоХранения,2);
	ИтОстаток.ИспользоватьСубконто(ВидыСубконто.ТМЦ,СписокТМЦ,1);
	ИтОстаток.ИспользоватьСубконто(ВидыСубконто.Партии,СписокПартий,1);
	Если (МестоХранения.Тип = Склады) и (МестоХранения.ВидСклада = Розничный) Тогда
		// розничный склад - запрос только по счету 28.2
		СчОстатков = "28.2";
	Иначе
		// иначе по всем
		СчОстатков = "";
	КонецЕсли;
	ИтОстаток.Опции(0,0);
	ИтОстаток.ВключатьСубсчета(-1);
	// определим дату для запроса
	Дат = ДатаДок;
	Если (Выбран() = 1) И (Модифицированность() = 0) Тогда
		Дат = ТекущийДокумент();
	КонецЕсли;
	ИтОстаток.ВыполнитьЗапрос(Дат,,СчОстатков,,,,,"СК");
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		КвоПоУчету = 0;
		СуммаПоУчету = 0;
		Если ИтОстаток.ПолучитьСубконто(1,,МестоХранения)=1 Тогда
			Если ИтОстаток.ПолучитьСубконто(2,,ТМЦ)=1 Тогда
				Если ИтОстаток.ПолучитьСубконто(3,,Партия)=1 Тогда
					ИтОстаток.ВыбратьСчета();
					Пока ИтОстаток.ПолучитьСчет()=1 Цикл
						Если (СчОстатков<>"28.2") и ((ИтОстаток.Счет=СчетПоКоду("28.2"))
						или (ИтОстаток.Счет=СчетПоКоду("28.3")) или (ИтОстаток.Счет=СчетПоКоду("28.5"))) Тогда
							// если инвентаризация не на розничном складе, тогда пропустим счета
							// 28.2 "Товары в рознице"; 28.3 "Товары на комиссии"; 28.5 "Торг. наценка"
							Продолжить;
						КонецЕсли;
						КвоПоУчету = КвоПоУчету + ИтОстаток.СНД("К") / Коэффициент;
						СуммаПоУчету = СуммаПоУчету + ИтОстаток.СНД("С");
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		РассчитатьСтроку(Контекст);
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура Рассчитать()
	ЗаполнитьПоРегистрам(1);
КонецПроцедуры

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСчета=СоздатьОбъект("СписокЗначений");
	спСчета.ДобавитьЗначение(ТМЦ.Счет);
	спОтбор.Установить("Счет",спСчета);
	Если (глПартионныйУчетПоСкладам = Да)
	И (ТипИнвентаризации<>1) Тогда
	    спОтбор.Установить("МестоХранения",МестоХранения);
	КонецЕсли;
	спОтбор.Установить("Контекст",Контекст);      
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры
                      
// ===============================
Процедура ПриНачалеРедактированияСтроки()
	глСохранитьЗначение(Контекст,"ТМЦ",ТМЦ);
	глСохранитьЗначение(Контекст,"Ед",Ед);
	Если ПустоеЗначение(Партия)=1 Тогда
		Форма.Партия.НазначитьТип("Справочник.Контрагенты");
		Партия=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	Форма.Партия.НазначитьТип("Справочник.Контрагенты");
	Партия=ПолучитьПустоеЗначение("Справочник.Контрагенты");
	глСохранитьЗначение(Контекст,"ТМЦ","");
	глСохранитьЗначение(Контекст,"Ед","");
КонецПроцедуры

// ======================================
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Если (Рекв="ПредседательКомиссии") или (Рекв="ЧленКомиссии1") или (Рекв="ЧленКомиссии2") 
			или (Рекв="ЧленКомиссии3") или (Рекв="ПровелПроверку") Тогда
		КонтФирмы = Фирма;
		Флаг = 0;
		ОткрытьФорму("Справочник.Сотрудники.ДляВыбора",КонтФирмы);
	ИначеЕсли Рекв = "Партия" Тогда  
		Если ((глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.FIFO) 
		ИЛИ ((глПолучитьМетодРасчетаСебестоимости(ТМЦ,ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.LIFO))) Тогда
			ВыборПредпочтения();
		КонецЕсли;	
		Флаг = 0;       
	ИначеЕсли (Рекв = "ВидУпаковки") Тогда //--- УМК Сандомирский В.Ю, (31.08.14) 
		глВыбратьВидУпаковки(Контекст, Флаг, СпВидыУпаковкиГлобальный, 1);		
	КонецЕсли;
КонецПроцедуры 

// ======================================
Процедура ИзмФСкрыть()	
	ПозицияВСписке = списВидимостьКолонок.НайтиЗначение("Партия");
	списВидимостьКолонок.Пометка(ПозицияВСписке,1-фСкрытьВторуюСтроку);	
	ПозицияВСписке = списВидимостьКолонок.НайтиЗначение("НачОстСумма");
	списВидимостьКолонок.Пометка(ПозицияВСписке,1-фСкрытьВторуюСтроку);	
	ПозицияВСписке = списВидимостьКолонок.НайтиЗначение("ПриходСумма");
	списВидимостьКолонок.Пометка(ПозицияВСписке,1-фСкрытьВторуюСтроку);	
	ПозицияВСписке = списВидимостьКолонок.НайтиЗначение("РасходСумма");
	списВидимостьКолонок.Пометка(ПозицияВСписке,1-фСкрытьВторуюСтроку);	
	ПозицияВСписке = списВидимостьКолонок.НайтиЗначение("СуммаПоУчету");
	списВидимостьКолонок.Пометка(ПозицияВСписке,1-фСкрытьВторуюСтроку);	
	ПозицияВСписке = списВидимостьКолонок.НайтиЗначение("СуммаПоФакту");
	списВидимостьКолонок.Пометка(ПозицияВСписке,1-фСкрытьВторуюСтроку);
	ПозицияВСписке = списВидимостьКолонок.НайтиЗначение("СуммаРазницы");
	списВидимостьКолонок.Пометка(ПозицияВСписке,1-фСкрытьВторуюСтроку);	
КонецПроцедуры

// ======================================
Процедура ПриОткрытии()
	СсылкаИнвентаризация = "";
	ТЗЗагрузки = "";
	ТекРасшифровка = "";
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		Если ПустоеЗначение(Форма.Параметр.Получить("ИмяАтрибута")) = 1 Тогда
			ТЗЗагрузки = Форма.Параметр.Получить("ТЗТМЦ");
			СпРасш= Форма.Параметр.Получить("Расшифровка");
			СсылкаИнвентаризация = Форма.Параметр.Получить("СсылкаИнвентаризация");
			Если ТипЗначенияСтр(СпРасш) = "СписокЗначений" Тогда
				ТекРасшифровка = ЗначениеВСтрокуВнутр(СпРасш);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаДатыДок(Контекст,"Открытие");
	ПриЗаписиПерепроводить(1);
	УчитыватьУпаковку = ?(Константа.ДатаНачалаРаботыСУпаковкой <= ДатаДок, 1, 0);
	Если ПустоеЗначение(СсылкаИнвентаризация) = 0 Тогда
		Если ТипЗначенияСтр(СсылкаИнвентаризация) = "Документ" Тогда
			Для Инд = 1 По Метаданные.Документ("Инвентаризация").РеквизитШапки() Цикл
				ИмяАтр = Метаданные.Документ("Инвентаризация").РеквизитШапки(Инд).Идентификатор;
				Если (ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений") И (ИмяАтр = "Расшифровка") Тогда
					Продолжить;
				КонецЕсли;
				
				УстановитьАтрибут(ИмяАтр, СсылкаИнвентаризация.ПолучитьАтрибут(ИмяАтр));
			КонецЦикла;
			Примечание = СсылкаИнвентаризация.Примечание;
			
			// фильтр по ТМЦ не копируем
			списТовар.УдалитьВсе();
		КонецЕсли;
		Если ТекРасшифровка <> "" Тогда
			Расшифровка = ТекРасшифровка;
		КонецЕсли;
	КонецЕсли;
		
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кОК.Доступность(0);
		Форма.кЗаписать.Доступность(0);
		Форма.кРассчитать.Доступность(0);
		Форма.кЗаполнить.Доступность(0);
		
		Форма.кФирма.Доступность(0);               		
		Форма.КнопкаПоУмолчанию("кЗакрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("кОК");
	КонецЕсли;	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный",	"Дополнительно");
	Форма.Закладки.ДобавитьЗначение("Видимость",		"Видимость колонок талицы");
	Форма.ИспользоватьСлой("Основной,Общий",2);
	СтарДатаДок = ДатаДок;
	ИзмДатаДок();
	ТипыИнвентаризации.ДобавитьЗначение(1,"по заказчику");
	ТипыИнвентаризации.ДобавитьЗначение(2,"по складу");
	Если ПустоеЗначение(ТипИнвентаризации)=1 Тогда
		ТипИнвентаризации = 1;
		ТипыИнвентаризации.ТекущаяСтрока(1);
	Иначе
		ТипыИнвентаризации.ТекущаяСтрока(ТипыИнвентаризации.НайтиЗначение(ТипИнвентаризации));
	КонецЕсли;
	глСохранитьЗначение(Контекст,"МестоХранения",МестоХранения);
	глСохранитьЗначение(Контекст,"Фирма",Фирма);
	глСохранитьЗначение(Контекст,"ТипИнвентаризации",ТипИнвентаризации);
	ИзмТипИнвентаризации();
	глЗаполнитьСписокТоваров(СтрФильтр, списТовар);
	глЗаполнитьСписокТоваров(СтрФильтрСкладов, списСклады, 2, "МестаХранения");
	ОбновитьОстатки();
	
	Форма.СхемаРасчетаЗП.Видимость(ЕстьСРЗП);
	
	//--- УМК Сандомирский В.Ю. (16.10.14) флажки на списке видимость колонок
	
	// Проверяем сохранился ли список с предыдущего раза
	Если ПустоеЗначение(СтрНастройкиВидимостиКолонок) = 0 Тогда
		// Восстанавливаем из строки элементы списка
		СписокФлажков = СоздатьОбъект("СписокЗначений");
		СписокФлажков.ИзСтрокиСРазделителями(СтрНастройкиВидимостиКолонок);
		// Проходим каждый элемент реквизита СписокДокументов и выставляем пометки
		Для к=1 По списВидимостьКолонок.РазмерСписка() Цикл
			Попытка
				списВидимостьКолонок.Пометка(к,СписокФлажков.ПолучитьЗначение(к));
			Исключение КонецПопытки;
		КонецЦикла;
		// Если переменная СписокДоков пустая (возможно первый сеанс), 
		// то отмечаем все элементы
	Иначе
		Для к=1 По списВидимостьКолонок.РазмерСписка() Цикл	
			списВидимостьКолонок.Пометка(к,1);	
		КонецЦикла;		
		фСкрытьВторуюСтроку = 1;	
		ИзмФСкрыть();		
	КонецЕсли;
	
	// установим видимость колонок
	Для Инд = 1 По 3 Цикл
		Поз = списВидимостьКолонок.НайтиЗначение("КвоПоФакту" + Инд);
		Если Поз <> 0 Тогда
			ВидимостьКол = списВидимостьКолонок.Пометка(Поз);
			Если ВидимостьКол = 1 Тогда
				Если Инд = 1 Тогда
					фКво1 = 1;
				ИначеЕсли Инд = 2 Тогда
					фКво2 = 1;
				Иначе
					фКво3 = 1;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если (ТипЗначенияСтр(Форма.Параметр) = "ТаблицаЗначений") ИЛИ (ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений") Тогда //--- УМК Сандомирский В.Ю. (18.06.15) формирование перемещения из отчета по заказам Поставщикам		
		//--- заполним по умолчанию склад откуда - складом оболочка
		Если (ПустоеЗначение(ТЗЗагрузки) = 0) ИЛИ (ТипЗначенияСтр(Форма.Параметр) = "ТаблицаЗначений") Тогда
			Если (ПустоеЗначение(ТЗЗагрузки) = 0) Тогда
				ЗагрузитьТабличнуюЧасть(ТЗЗагрузки);
			Иначе
				ЗагрузитьТабличнуюЧасть(Форма.Параметр);
			КонецЕсли;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				ИзмТМЦ();
			КонецЦикла;
		ИначеЕсли ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
			фУчитыватьВидУпаковки = 1;
			ТЗ = СоздатьОбъект("ТаблицаЗначений");
			ВыгрузитьТабличнуюЧасть(ТЗ);
			ИзмВидУпаковки();
			ТЗ.НоваяКолонка("Ключ");
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				ТЗ.Ключ = ЗначениеВСтрокуВнутр(ТЗ.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТЗ.ВидУпаковки);
			КонецЦикла;
			
			ТЗТМЦ = Форма.Параметр.Получить("ТЗТМЦ");
			ИмяАтр = Форма.Параметр.Получить("ИмяАтрибута");
			ТЗТМЦ.ВыбратьСтроки();
			Пока ТЗТМЦ.ПолучитьСтроку() = 1 Цикл
				Ключ = ЗначениеВСтрокуВнутр(ТЗТМЦ.ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ТЗТМЦ.ВидУпаковки); 
				Стр = 0;
				Если ТЗ.НайтиЗначение(Ключ, Стр, "Ключ") = 0 Тогда
					ТЗ.НоваяСтрока();
					ТЗ.ТМЦ = ТЗТМЦ.ТМЦ;
					ТЗ.ВидУпаковки = ТЗТМЦ.ВидУпаковки;
					ТЗ.СхемаРасчетаЗП = Строка(ТЗ.ТМЦ.СхемаРасчетаЗП.Получить(ДатаДок).Примечание);
					ТЗ.Ед = ТЗ.ТМЦ.ЕдиницаПоУмолчанию;
					ТЗ.Коэффициент = ТЗ.Ед.Коэффициент;
				Иначе
					ТЗ.ПолучитьСтрокуПоНомеру(Стр);
				КонецЕсли;
				
				ТЗ.УстановитьЗначение(ТЗ.НомерСтроки, ИмяАтр, ТЗТМЦ.Кво);
				//ТЗ.КвоПоФакту = ТЗ.ПолучитьЗначение(ТЗ.НомерСтроки, ИмяАтр);
				ТЗ.КвоПоФакту = ТЗ.КвоПоФакту1 + ТЗ.КвоПоФакту2 + ТЗ.КвоПоФакту3;
				ТЗ.Разница = ТЗ.КвоПоФакту - ТЗ.КвоПоУчету;
			КонецЦикла;
			
			ЗагрузитьТабличнуюЧасть(ТЗ);
		КонецЕсли;
		Если ПустоеЗначение(СсылкаИнвентаризация) = 0 Тогда
			ВыгрузитьТабличнуюЧасть(списТовар,"ТМЦ");
		КонецЕсли;
	КонецЕсли;	
	
	//... УМК Сандомирский В.Ю. (16.10.14) флажки на списке видимость колонок
	СпВидыУпаковкиГлобальный = глПолучитьСписокУпаковкиГлобальный();
	ОбновитьТЧИсх();

	Если Фирма <> Константа.БазФирма Тогда
		ПроверятьУсловиеПоФирме = 1;
	КонецЕсли;	
	ОтобразитьТабличнуюЧасть(1,,1);
КонецПроцедуры 

// ======================================
Процедура ПриЗаписи()
	глПроверкаДатыДок(Контекст,"Запись");
	ЗагрузитьТабличнуюЧасть(ТЧТаблицаИсх);
	Автор = глПользователь;
	Если глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	глЗаписатьСписокТоваров(СтрФильтр, списТовар);
	глЗаписатьСписокТоваров(СтрФильтрСкладов, списСклады, 2);

	//--- УМК Сандомирский В.Ю. (16.10.14) флажки на списке видимость колонок
	// Создадим ещё один список значений для сохранения отметок
	СписокФлажков = СоздатьОбъект("СписокЗначений");
	// Используем цикл для сохраняем отметки каждого элемента
	// из списка списВидимостьКолонок в список СписокФлажков
	Для к=1 По списВидимостьКолонок.РазмерСписка() Цикл
		СписокФлажков.ДобавитьЗначение(списВидимостьКолонок.Пометка(к));
	КонецЦикла;
	// Преобразуем элементы списка в строку
	СтрНастройкиВидимостиКолонок = СписокФлажков.ВСтрокуСРазделителями();	
	//--- УМК Сандомирский В.Ю. (16.10.14) флажки на списке видимость колонок	
КонецПроцедуры

// ======================================
Процедура ПриВыбореЗакладки(Ном,Значен);
	Форма.ИспользоватьСлой(Значен+", Общий",2);
КонецПроцедуры  

// ======================================
Процедура ОбработкаВыбораЗначения(Значение, Рекв, Флаг)
	Если (Рекв="ПредседательКомиссии") или (Рекв="ЧленКомиссии1") или (Рекв="ЧленКомиссии2") 
			или (Рекв="ЧленКомиссии3") или (Рекв="ПровелПроверку") Тогда
		Если Значение.Фирма<>Фирма Тогда
			Предупреждение("Можно выбирать только тех сотрудников, которые работают в этой фирме");
		    Флаг = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ======================================
Процедура ПечатьАкта(ИсхТаблица = "Таблица_Укр")
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица(ИсхТаблица);
	глУстПропись(Гривня,"у");

	ХвостБУ = ?(ИсхТаблица = "Акт", "БУ", "");
	КоличествоНаименований = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()>0 Цикл
		КоличествоНаименований = КоличествоНаименований + 1;
	КонецЦикла;
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Опции(0,0,0,0);
	Таб.ВывестиСекцию("Шапка");
	Если ТипИнвентаризации=1 Тогда     
		Таб.ВывестиСекцию("ШапкаПоКонтрагенту");		
		печМОЛ = "";
	ИначеЕсли ТипИнвентаризации=2 Тогда
		Таб.ВывестиСекцию("ШапкаПоСкладу");
		печМОЛ = МестоХранения.МОЛ;
	КонецЕсли;
	Таб.ВывестиСекцию("ШапкаДалее");
	ВыбратьСтроки();
	Пока ПолучитьСтроку()>0 Цикл
		ПечПартия = "("+Партия+")";
		
		Если (ТМЦ.фИра.Получить(ДатаДок) = 1) И (ИсхТаблица <> "Акт") Тогда	// --- УМК Сандомирский В.Ю. (02.10.14) 
			Таб.ВывестиСекцию("СтрокаИра");
		Иначе
			Таб.ВывестиСекцию("Строка" + ?(ПустоеЗначение(ВидУпаковки) = 1, ХвостБУ, ""));
		КонецЕсли;			
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
	Таб.ТолькоПросмотр(1);
	Таб.ПараметрыСтраницы(,,,,,,,5,5);
	Таб.Показать("Акт инвентаризации №"+Строка(НомерДок)+" от "+Строка(ДатаДок));
	глУстПропись(Гривня,"р");
КонецПроцедуры

// ======================================
Процедура ПечатьИнвентаризационнаяОпись(ТолькоФакт = 0, ТР = 0)
	Если ТР = 0 Тогда
		ТипРазницы = "вх.ост+прих.";
	Иначе
		ТипРазницы = "вх.ост+расх.";	    
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	
	Если ТолькоФакт = 23 Тогда //--- УМК Сандомирский В.Ю, (05.12.14)
		Таб.ИсходнаяТаблица("ОписьОболочка");
	Иначе
		Таб.ИсходнаяТаблица("Опись");
	КонецЕсли;
	
	глУстПропись(Гривня,"у");
	
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.ВывестиСекцию("Шапка|Основная" + ?(фУчитыватьВидУпаковки = 0, "<", ""));
	Если фУчитыватьВидУпаковки = 0 Тогда
		Таб.ПрисоединитьСекцию("Шапка|Основная>");
	КонецЕсли;
	Если ТолькоФакт = 21 Тогда
	    Таб.ПрисоединитьСекцию("Шапка|ПроцПотерь");
	КонецЕсли;
	Если ТолькоФакт = 3 Тогда
	    Таб.ПрисоединитьСекцию("Шапка|ОстЗак");
		Ит = СоздатьОбъект("БухгалтерскиеИтоги");
		списТМЦ = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(списТМЦ, "ТМЦ");
		Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ, списТМЦ, 1);
		Ит.ИспользоватьСубконто(ВидыСубконто.ЗаказыПоставщикам, , 1);
		Ит.Опции(1,0);
		Ит.ВыполнитьЗапрос(,ДатаДок, "ЗП");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка|Примечание");
	
	ТСхемы = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТСхемы,"СхемаРасчетаЗП,НачОст, Приход, Расход, КвоПоУчету, КвоПоФакту, КвоПоФакту1, КвоПоФакту2, КвоПоФакту3, СписаниеБП, Разница");
	ТСхемы.Свернуть("СхемаРасчетаЗП", "НачОст, Приход, Расход, КвоПоУчету, КвоПоФакту, КвоПоФакту1, КвоПоФакту2, КвоПоФакту3, СписаниеБП, Разница");
	
	Таб.Опции(0,0, Таб.ВысотаТаблицы(), 9);
	КоличествоНаименований = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ((КвоПоФакту=0) и (ТолькоФакт = 4)) или ((КвоПоФакту = 0) и (КвоПоУчету = 0) и (ТолькоФакт = 3)) Тогда
			Продолжить;
		КонецЕсли;		
		Если ТолькоФакт = 3 Тогда
			СписРасш = СоздатьОбъект("СписокЗначений");
			Если Ит.ПолучитьСубконто(1,1, ТМЦ) = 1 Тогда
			    ОстВЗаказах = Ит.СКД("К");
				Ит.ВыбратьСубконто(2);
				Пока Ит.ПолучитьСубконто(2) = 1 Цикл
					Если Ит.СКД("К") <> 0 Тогда
					    СписРасш.ДобавитьЗначение(Ит.Субконто(2));
					КонецЕсли;					
				КонецЦикла;
			Иначе
				ОстВЗаказах = 0;
			КонецЕсли;
		КонецЕсли;
		КоличествоНаименований = КоличествоНаименований + 1;
		текНомерСтроки = КоличествоНаименований;
		//Если КвоПоФакту <> 0 Тогда
		//	Если ЦенаБезНДС = Окр(СуммаПоФакту/КвоПоФакту, 2) Тогда
		//	    ЦенаБезНДС = СуммаПоФакту/КвоПоФакту;
		//	КонецЕсли;		    
		//ИначеЕсли (КвоПоУчету <> 0) и (КвоПоФакту = 0) Тогда
		//	Если ЦенаБезНДС = Окр(СуммаПоУчету/КвоПоУчету, 2) Тогда
		//		ЦенаБезНДС = СуммаПоУчету/КвоПоУчету;
		//	КонецЕсли;
		//КонецЕсли;		
		
		Если ТР = 0 Тогда
			ПроцРазницы = ?(НачОст+Приход = 0, 0, Разница/(НачОст+Приход)) * 100;
		Иначе
			ПроцРазницы = ?(Расход = 0, 0, Разница/Расход) * 100;
		КонецЕсли;
		
		
		Если ТМЦ.фИра.Получить(ДатаДок) = 1 Тогда	// --- УМК Сандомирский В.Ю. (02.10.14) 
			тСтрока = "СтрокаИра";
		Иначе
			тСтрока = "Строка";
		КонецЕсли;
		
		Таб.ВывестиСекцию(тСтрока + "|Основная" + ?(фУчитыватьВидУпаковки = 0, "<", ""));
		Если фУчитыватьВидУпаковки = 0 Тогда
			Таб.ПрисоединитьСекцию(тСтрока + "|Основная>");
		КонецЕсли;

		Если ТолькоФакт = 21 Тогда
		    Таб.ПрисоединитьСекцию(тСтрока+ "|ПроцПотерь");
		КонецЕсли;
		Если ТолькоФакт = 3 Тогда
			Таб.ПрисоединитьСекцию(тСтрока+ "|ОстЗак");
		КонецЕсли;		
		Таб.ПрисоединитьСекцию(тСтрока+ "|Примечание");
	КонецЦикла;
	
	Если ЕстьСРЗП = 1 Тогда
		ТСхемы.Сортировать("СхемаРасчетаЗП");
		Таб.ВывестиСекцию("Схемы|Основная" + ?(фУчитыватьВидУпаковки = 0, "<", ""));
		Если фУчитыватьВидУпаковки = 0 Тогда
			Таб.ПрисоединитьСекцию("Схемы|Основная>");
		КонецЕсли;
		ТСхемы.ВыбратьСтроки();
		Пока ТСхемы.ПолучитьСтроку() = 1 Цикл
			Если ТР = 0 Тогда
				ПроцРазницы = ?(ТСхемы.НачОст+ТСхемы.Приход = 0, 0, ТСхемы.Разница/(ТСхемы.НачОст+ТСхемы.Приход)) * 100;
			Иначе
				ПроцРазницы = ?(ТСхемы.Расход = 0, 0, ТСхемы.Разница/ТСхемы.Расход) * 100;
			КонецЕсли;
			
			Таб.ВывестиСекцию("Схема|Основная" + ?(фУчитыватьВидУпаковки = 0, "<", ""));
			Если фУчитыватьВидУпаковки = 0 Тогда
				Таб.ПрисоединитьСекцию("Схема|Основная>");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если ТР = 0 Тогда
		ПроцРазницы = ?(Итог("НачОст")+Итог("Приход") = 0, 0, Итог("Разница")/(Итог("НачОст")+Итог("Приход"))) * 100;			
	Иначе
		ПроцРазницы = ?(Итог("Расход") = 0, 0, Итог("Разница")/Итог("Расход")) * 100;
	КонецЕсли;
	
	Таб.ВывестиСекцию("Дно|Основная" + ?(фУчитыватьВидУпаковки = 0, "<", ""));
	Если фУчитыватьВидУпаковки = 0 Тогда
		Таб.ПрисоединитьСекцию("Дно|Основная>");
	КонецЕсли;
	Если ТолькоФакт = 21 Тогда
	    Таб.ПрисоединитьСекцию("Дно|ПроцПотерь");
	КонецЕсли;
	Если ТолькоФакт = 3 Тогда
		Таб.ПрисоединитьСекцию("Дно|ОстЗак");
	КонецЕсли;			
	Таб.ПрисоединитьСекцию("Дно|Примечание");

	Таб.ПараметрыСтраницы(2,,,,,,,5,,1);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Инвентаризационная опись № "+НомерДок+" от "+ДатаДок);
КонецПроцедуры

Функция ОтчетПоТоварам(ТМ, ОткрытьДиалог = 5, БП = 0)
	// все настройки помещаем в список
	глРасшифровка = СоздатьОбъект("СписокЗначений");
    глРасшифровка.Установить("Объект", "ОстаткиТМЦ");
    
	Если БП = 0 Тогда
		глРасшифровка.Установить("Дата1", НачДата);
	    глРасшифровка.Установить("Дата2", ДатаДок);
		глРасшифровка.Установить("ДокНачала", ДокНачала);
	    глРасшифровка.Установить("ДокКонца", ДокКонца);		
	Иначе
		глРасшифровка.Установить("Дата1", НачДата1);
	    глРасшифровка.Установить("Дата2", КонДата);
		глРасшифровка.Установить("фТолькоСп", 1);
		глРасшифровка.Установить("фТолькоСпПоИнв", 1);
	КонецЕсли;
	
	глРасшифровка.Установить("ВыбФирма", Фирма);
	глРасшифровка.Установить("ВыбМестоХранения", МестоХранения);          
	глРасшифровка.Установить("ВыбНоменклатура", ТМ);
	
	глРасшифровка.Установить("ВидОтчета", 		1);
	глРасшифровка.Установить("ПоказатьОстатки", 	1);
	глРасшифровка.Установить("ЦенаТовара", 		1); 
	глРасшифровка.Установить("ЦенаИзСправочника", "");

	глРасшифровка.Установить("ДеталПоСкладам", 	1); 
	глРасшифровка.Установить("ДеталПоДокументам", 1);
	глРасшифровка.Установить("фБезГрупп", 1);
	глРасшифровка.Установить("фДопКво", 1);	
	глРасшифровка.Установить("фВыводитьВидУпаковки", фУчитыватьВидУпаковки);
	Если ОткрытьДиалог = 5 Тогда
	    глОбновить = 1;
	Иначе
		глОбновить = 2;
	КонецЕсли;	
	глФлагРасшифровки = 1;
	ОткрытьФорму("Отчет.ОстаткиТМЦ");
	глФлагРасшифровки = 0;
	глРасшифровка.УдалитьВсе();
	
	Возврат "";
КонецФункции

//======================================================================
Процедура ВывестиБлокБланка(Запрос, Таб, Хвост, СЦенами, КвоФакт, ВидУпак)
	Если Запрос.ТМЦ.фИра.Получить(ДатаДок) = 1 Тогда
		Таб.ВывестиСекцию("СтрокаИра" + Хвост + "|Основная");
	Иначе	
		Таб.ВывестиСекцию("Строка" + Хвост + "|Основная");
	КонецЕсли;
	
	Если СЦенами = 1 Тогда
		Цена = глВернутьЦену(Запрос.ТМЦ, КатегорияЦен, ДатаДок, Гривня, КонтрагентДляИсключенияЦены);
		ЕстьАкция = 0;
		глУстановитьСкидкуПоАкции(Контекст, Цена, Запрос.ТМЦ, ЕстьАкция, КатегорияЦен);
		
		Если Запрос.ТМЦ.фИра.Получить(ДатаДок) = 1 Тогда
			Таб.ПрисоединитьСекцию("СтрокаИра|Цена");
		Иначе	
			Таб.ПрисоединитьСекцию("Строка|Цена");
		КонецЕсли;		
	КонецЕсли;	
	
	Если КвоФакт = 1 Тогда		
		ПечКво = КвоПоФакту;
		
		Если Запрос.ТМЦ.фИра.Получить(ДатаДок) = 1 Тогда
			Таб.ПрисоединитьСекцию("СтрокаИра|ФактКво");
		Иначе	
			Таб.ПрисоединитьСекцию("Строка|ФактКво");
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры // 

Процедура ПечатьБланк(СГруппами, СЦенами = 0,КвоФакт = 0)
	СписТМЦ = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписТМЦ, "ТМЦ");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|ТМЦ = Справочник.ТМЦ.ТекущийЭлемент;
	|Функция Счётчик = Счётчик();
	|Группировка ТМЦ упорядочить по ТМЦ.Наименование" + ?(СГруппами = 1,""," без групп") + ";
	|Условие(ТМЦ в СписТМЦ);
	|"//}}ЗАПРОС
	;
	Хвост = ?(фУчитыватьВидУпаковки = 1, "У", "");
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Бланк");
	Таб.ВывестиСекцию("Шапка" + Хвост + "|Основная");
	Если СЦенами = 1 Тогда
		Таб.ПрисоединитьСекцию("Шапка" + Хвост + "|Цена");
	КонецЕсли;
	Пока Запрос.Группировка(1) = 1 Цикл
		Если Запрос.ТМЦ.ЭтоГруппа() = 1 Тогда
			Таб.ВывестиСекцию("Группа|Основная");
		Иначе
			Если фУчитыватьВидУпаковки = 1 Тогда
				СписокУпаковок = глПолучитьСписокВидовУпаковкиДляТМЦ(Запрос.ТМЦ, 0);
				Для Инд = 1 По СписокУпаковок.РазмерСписка() Цикл
					ВывестиБлокБланка(Запрос, Таб, Хвост, СЦенами, КвоФакт, СписокУпаковок.ПолучитьЗначение(Инд));
				КонецЦикла;
			Иначе
				ВывестиБлокБланка(Запрос, Таб, Хвост, СЦенами, КвоФакт, "");
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	Таб.ПараметрыСтраницы(1,,,,,,,5,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Бланк инв.");
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (07.10.14)
Процедура ПечатьБланкПустой(ТипБланка)	
	Хвост = ?(фУчитыватьВидУпаковки = 1, "У", "");
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("БланкПустой" + ?(ТипБланка = 38, "ПР", ""));
	Таб.ВывестиСекцию("Шапка" + Хвост);
	Если ТипБланка = 38 Тогда
		ТекстЗапроса = 
		"//{{ЗАПРОС(Производство)
		|Период с НачДата1 по КонДата;
		|Продукция = Регистр.ПроизводственныеЗатраты.Продукция;
		|Материал = Регистр.ПроизводственныеЗатраты.Материал;
		|Количество = Регистр.ПроизводственныеЗатраты.Количество;
		|Функция КоличествоПриход = Приход(Количество);
		|Группировка Материал без групп;
		|Группировка Продукция упорядочить по Продукция.Наименование без групп;
		|Условие(Материал в списМ);
		|"//}}ЗАПРОС
		;
		
		списМ = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(списМ, "ТМЦ");
		
		Запрос = СоздатьОбъект("Запрос");
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл		
		СтрСписания = "";
		ПечТМЦ = ТМЦ;
		ВидУпак = ВидУпаковки;
		Если ТипБланка = 38 Тогда
			Запрос.ВНачалоВыборки();
			Если Запрос.Получить(ТМЦ, ) = 1 Тогда
				Пока Запрос.Группировка(2) = 1 Цикл
					СтрСписания = СтрСписания + ?(СтрСписания = "", "", ", ") + Строка(Запрос.Продукция);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если ТМЦ.фИра.Получить(ДатаДок) = 1 Тогда
			Таб.ВывестиСекцию("СтрокаИра" + Хвост);
		Иначе	
			Таб.ВывестиСекцию("Строка" + Хвост);
		КонецЕсли;	
	КонецЦикла;	

	Таб.ПараметрыСтраницы(,,,,,,,5,,1);	
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Бланк инв.");
КонецПроцедуры

Процедура ПечатьБланкКвоФакт()	
	Хвост = ?(фУчитыватьВидУпаковки = 1, "У", "");
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("БланкКво");
	Таб.ВывестиСекцию("Шапка" + Хвост + "|Основная");
	Таб.ПрисоединитьСекцию("Шапка|ФактКво");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл		
		Если ТМЦ.фИра.Получить(ДатаДок) = 1 Тогда
			Таб.ВывестиСекцию("СтрокаИра" + Хвост + "|Основная");
		Иначе	
			Таб.ВывестиСекцию("Строка" + Хвост + "|Основная");
		КонецЕсли;
				
		ПечКво = КвоПоФакту;		
		Если ТМЦ.фИра.Получить(ДатаДок) = 1 Тогда
			Таб.ПрисоединитьСекцию("СтрокаИра|ФактКво");
		Иначе	
			Таб.ПрисоединитьСекцию("Строка|ФактКво");
		КонецЕсли;	
			
	КонецЦикла;
	Таб.ПараметрыСтраницы(,,,,,,,5);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Бланк инв.");
КонецПроцедуры

//======================================================================
Процедура ПечатьБланкДляРозницы(СГруппами, ЦенаИзДок = 0)
	СписТМЦ = СоздатьОбъект("СписокЗначений");
	ВыгрузитьТабличнуюЧасть(СписТМЦ, "ТМЦ");
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ);
	ТЗ.Сортировать("ТМЦ,ВидУпаковки");
	
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|ТМЦ = Справочник.ТМЦ.ТекущийЭлемент;
	|КодРРО = Справочник.ТМЦ.ТекущийЭлемент.КодРРО;
	|Функция Счётчик = Счётчик();
	|Группировка ТМЦ упорядочить по ТМЦ.Наименование" + ?(СГруппами = 1,""," без групп") + ";
	|Условие(ТМЦ в СписТМЦ);
	|"//}}ЗАПРОС
	;
	Хвост = ?(фУчитыватьВидУпаковки = 1, "У", "");
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("БланкРозница");
	Если фУчитыватьВидУпаковки = 0 Тогда
		Таб.ВывестиСекцию("Шапка|Основная<");
		Таб.ПрисоединитьСекцию("Шапка|Основная>");
	Иначе
		Таб.ВывестиСекцию("Шапка");
	КонецЕсли;
	
	БылиЗначимыеТМЦ = 0;
	Пока Запрос.Группировка(1) = 1 Цикл
		Если Запрос.ТМЦ.ЭтоГруппа() = 1 Тогда
			Если (БылиЗначимыеТМЦ = 1) И (СГруппами = 1) Тогда
				Для Инд = 1 По 3 Цикл
					Если фУчитыватьВидУпаковки = 0 Тогда
						Таб.ВывестиСекцию("Пустая|Основная<");
						Таб.ПрисоединитьСекцию("Пустая|Основная>");
					Иначе
						Таб.ВывестиСекцию("Пустая");
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			БылиЗначимыеТМЦ = 0;
			Если фУчитыватьВидУпаковки = 0 Тогда
				Таб.ВывестиСекцию("Группа|Основная<");
				Таб.ПрисоединитьСекцию("Группа|Основная>");
			Иначе
				Таб.ВывестиСекцию("Группа");
			КонецЕсли;			
		Иначе
			БылиЗначимыеТМЦ = 1;
			Если ЦенаИзДок = 0 Тогда
				Ц = глВернутьЦену(Запрос.ТМЦ, ТипЦен, ДатаДок, Гривня, КонтрагентДляИсключенияЦены);
				//ЕстьАкция = 0;	
				//глУстановитьСкидкуПоАкции(Контекст, Ц, Конт.ТМЦ, ЕстьАкция, ТипЦен);				
			КонецЕсли;
			
			Если (фУчитыватьВидУпаковки = 1) ИЛИ (ЦенаИзДок = 1) Тогда
				Стр = 0;
				ТЗ.НайтиЗначение(Запрос.ТМЦ, Стр, "ТМЦ");
				ТЗ.ПолучитьСтрокуПоНомеру(Стр);
				Если ЦенаИзДок = 1 Тогда
					Ц = ТЗ.ЦенаБезНДС;
				КонецЕсли;
				
				Если фУчитыватьВидУпаковки = 1 Тогда
					Пока ТЗ.ТМЦ = Запрос.ТМЦ Цикл
						Если ЦенаИзДок = 0 Тогда
							Цена = Ц;
							Если (ПустоеЗначение(ТЗ.ВидУпаковки) = 0) И (ТЗ.ВидУпаковки <> НетУп) Тогда
								Цена = Ц + глПолучитьЦенуУпаковки(ТЗ.ТМЦ, ТЗ.ВидУпаковки, ДатаДок, ТипЦен);
							КонецЕсли;
							ЕстьАкция = 0;
							глУстановитьСкидкуПоАкции(Контекст, Цена, ТЗ.ТМЦ, ЕстьАкция, ТипЦен);
						Иначе
							Цена = Ц;
						КонецЕсли;
						
						Если ПустоеЗначение(ТЗ.ВидУпаковки) = 0 Тогда
							РВУ = глПолучитьРазрешенныйВидУпаковки(Запрос.ТМЦ, ТЗ.ВидУпаковки);
							Если ПустоеЗначение(РВУ) = 0 Тогда
								ПечВидУпаковки = ?(ПустоеЗначение(РВУ.ДляПечати.Получить(ДатаДок)) = 1, РВУ.ВидУпаковки, РВУ.ДляПечати.Получить(ДатаДок));
							Иначе
								ПечВидУпаковки = ?(ПустоеЗначение(ТЗ.ВидУпаковки.ДляПечати) = 1, ТЗ.ВидУпаковки, ТЗ.ВидУпаковки.ДляПечати);
							КонецЕсли;
						Иначе
							ПечВидУпаковки = "";
						КонецЕсли;
						
						Таб.ВывестиСекцию("Строка");
						Стр = Стр + 1;
						Если Стр > ТЗ.КоличествоСтрок() Тогда
							Прервать;
						Иначе
							ТЗ.ПолучитьСтрокуПоНомеру(Стр);
						КонецЕсли;						
					КонецЦикла;					
				КонецЕсли;				
			КонецЕсли;
			
			Если фУчитыватьВидУпаковки = 0 Тогда
				Цена = Ц;
				ЕстьАкция = 0;
				глУстановитьСкидкуПоАкции(Контекст, Цена, ТЗ.ТМЦ, ЕстьАкция, ТипЦен);
				
				Таб.ВывестиСекцию("Строка|Основная<");
				Таб.ПрисоединитьСекцию("Строка|Основная>");
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;

	Если (БылиЗначимыеТМЦ = 1) И (СГруппами = 1) Тогда
		Для Инд = 1 По 3 Цикл
			Если фУчитыватьВидУпаковки = 0 Тогда
				Таб.ВывестиСекцию("Пустая|Основная<");
				Таб.ПрисоединитьСекцию("Пустая|Основная>");
			Иначе
				Таб.ВывестиСекцию("Пустая");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Таб.ПараметрыСтраницы(1,,,,,,,5,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Бланк розница");
КонецПроцедуры // ПечатьБланкДляРозницы(Зн)

//======================================================================
Процедура ПечатьВидимых()
	// вначале собираем все атрибуты
	// проверяем есть ли атрибут в списке видимых колонок. Если да, то печататься или нет, берём из списка.
	// Для вычисляемых атрибутов создадим список с их именами и процедурами для расчёта
	АтрибутыПечати = СоздатьОбъект("СписокЗначений");	
	СписШаблонов = СоздатьОбъект("СписокЗначений");
	СписШаблонов.ДобавитьЗначение("ГруппировкаВидов", "ГруппировкаВидовУпаковки()");
	СписШаблонов.ДобавитьЗначение("фОстВыбранныхСкладов", "Остаток()");
	СписШаблонов.ДобавитьЗначение("тНормаКгФарша", "НормаКГФарша()");
	СписШаблонов.ДобавитьЗначение("кДатаПослРН", "ДатаПоследнейРН()");
	СписШаблонов.ДобавитьЗначение("ОтклонениеРасхода", "ОтклонениеРасхода()");
	СписШаблонов.ДобавитьЗначение("СуммаПрод", "СуммаПрод()");
	СписШаблонов.ДобавитьЗначение("ОтклонениеПрод", "ОтклонениеПрод()");
	СписПечатьВсегда = "ТМЦ," + ?(фУчитыватьВидУпаковки = 1, "ВидУпаковки,", "");
	
	ФормаРасш = СоздатьОбъект("РасширениеФормы"); 
	ФормаРасш.УстановитьФорму(Форма);
	Для Инд = 0 По ФормаРасш.КоличествоАтрибутов() - 1 Цикл
		//Сообщить(ФормаРасш.ПолучитьАтрибут(Инд).Идентификатор);
		ИмяАтр = ФормаРасш.ПолучитьАтрибут(Инд).Идентификатор; 
		
		Если (ИмяАтр <> "") И (Найти(СписПечатьВсегда, ИмяАтр + ",") = 0) Тогда
			Если ФормаРасш.ПолучитьАтрибут(Инд).Видимость = 1 Тогда
				Представление = "";
				Поз = списВидимостьКолонок.НайтиЗначение(ИмяАтр); 
				Если Поз <> 0 Тогда
					списВидимостьКолонок.ПолучитьЗначение(Поз, Представление);
					АтрибутыПечати.ДобавитьЗначение(ИмяАтр, Представление);
				ИначеЕсли Метаданные.Документ("Инвентаризация").РеквизитТабличнойЧасти(ИмяАтр).Выбран() = 1 Тогда
					АтрибутыПечати.ДобавитьЗначение(ИмяАтр, Метаданные.Документ("Инвентаризация").РеквизитТабличнойЧасти(ИмяАтр).Синоним);
				ИначеЕсли (ИмяАтр = "СуммаПрод") ИЛИ (ИмяАтр = "ОтклонениеПрод") Тогда
					АтрибутыПечати.ДобавитьЗначение(ИмяАтр, ?(ИмяАтр = "СуммаПрод", "Сумма прод.", "Откл. прод."));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	АтрибутыПечати.ДобавитьЗначение("ОтклонениеРасхода", "Откл. расхода");
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ШаблонПечати");
	Таб.ВывестиСекцию("Шапка|Основная");
	Если фУчитыватьВидУпаковки = 1 Тогда
		Таб.ПрисоединитьСекцию("Шапка|ВидУпаковки");
	КонецЕсли;
	Для Инд = 1 По АтрибутыПечати.РазмерСписка() Цикл
		Атрибут = "";
		АтрибутыПечати.ПолучитьЗначение(Инд, Атрибут);
		Таб.ПрисоединитьСекцию("Шапка|Атрибут");
	КонецЦикла;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Таб.ВывестиСекцию("Строка|Основная");
		Если фУчитыватьВидУпаковки = 1 Тогда
			Таб.ПрисоединитьСекцию("Строка|ВидУпаковки");
		КонецЕсли;
		Для Инд = 1 По АтрибутыПечати.РазмерСписка() Цикл
			Атрибут = АтрибутыПечати.ПолучитьЗначение(Инд); 
			Поз = СписШаблонов.НайтиЗначение(Атрибут); 
			Если Поз = 0 Тогда
				Значение = ПолучитьАтрибут(Атрибут);
			Иначе
				Предст = "";
				СписШаблонов.ПолучитьЗначение(Поз, Предст);
				Значение = Шаблон("[" + Предст + "]");
			КонецЕсли;
			Таб.ПрисоединитьСекцию("Строка|Атрибут");
		КонецЦикла;		
	КонецЦикла;
	
	Таб.ПараметрыСтраницы(,,,,,,,5);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Печать все");
КонецПроцедуры // ПечатьВидимых()

//======================================================================
Процедура ОтчетПоРезервам()
	глРасшифровка = СоздатьОбъект("СписокЗначений");
    глРасшифровка.Установить("Объект", "Резервы");
    
	// все настройки помещаем в список
	глРасшифровка.Установить("Дата1", 			КонДата);
    глРасшифровка.Установить("Дата2", 			КонДата); 
	
	глРасшифровка.Установить("ДокНачала", 	ДокКонца);
    глРасшифровка.Установить("ДокКонца", 		"");
	
	глРасшифровка.Установить("ВыбФирма", 			Фирма);
	глРасшифровка.Установить("ВыбНоменклатура", 	ТМЦ); 
	глРасшифровка.Установить("ВыбВидУпаковки",	ВидУпаковки);   //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
	глРасшифровка.Установить("ВыбФормаУпаковки",	);   //--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
	глРасшифровка.Установить("ВыбПокупатель", 	);
	глРасшифровка.Установить("ВыбДоговор", 		);
	
	глРасшифровка.Установить("ВыбЗаказ", 			); 	// --- УМК Сандомирский В.Ю, (29.05.15)
	
	глРасшифровка.Установить("ТолькоПросроченныйРезерв", 0);	

	глРасшифровка.Установить("фНачОст", 			1);
	глРасшифровка.Установить("фПриход", 			1);
	глРасшифровка.Установить("фРасход", 			1);
	глРасшифровка.Установить("фКонОст", 			1);
	глРасшифровка.Установить("фДопКво", 			0);
	
	глРасшифровка.Установить("фВыводитьПримечания", 0); 			// --- УМК Сандомирский В.Ю. (02.06.15) выводить блок примечаний вначале перед таблицей
	глРасшифровка.Установить("фВыводитьПримечанияСтрок", 0); 	// --- УМК Сандомирский В.Ю. (02.06.15) выводить блок примечаний вначале перед таблицей

	Группировки = СоздатьОбъект("СписокЗначений");
	Группировки.ДобавитьЗначение("ДокументРезерва", "Документ резерва");
	Группировки.ДобавитьЗначение("Номенклатура", 	"Номенклатура");
	Группировки.ДобавитьЗначение("ВидУпаковки",   	"Вид упаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
	Группировки.ДобавитьЗначение("ФормаУпаковки",   "Форма упаковки");		//--- УМК Сандомирский В.Ю. (04.04.15) + группировка ВидУпаковки
	Группировки.ДобавитьЗначение("ГруппировкаРазрешенныхВидовУпаковки", "Группировка видов упаковки"); //--- УМК Сандомирский В.Ю. (29.05.15) + группировка ГруппировокВидУпаковки
	Группировки.ДобавитьЗначение("Покупатель",  	"Покупатель");
	Группировки.ДобавитьЗначение("Договор",   		"Договор");	
	Группировки.ДобавитьЗначение("Документ", 	    "Документ движения");
	Группировки.Пометка(Группировки.РазмерСписка(), 1);
	
	глРасшифровка.Установить("Группировки",	Группировки);	
	глРасшифровка.Установить("фБезГрупп",		1);	
	
	глРасшифровка.Установить("СписокПериодов", 1);
	
	глФлагРасшифровки = 1;
	глОбновить = 0;
	ОткрытьФорму("Отчет.Резервы");
	глФлагРасшифровки = 0;
КонецПроцедуры // ОтчетПоРезервам

//======================================================================
Процедура ОткрытьЗаказыСРасшифровкой()
	Спис = ЗначениеИзСтрокиВнутр(Расшифровка);
	Если ТипЗначенияСтр(Спис) = "СписокЗначений" Тогда
		Таб = СоздатьОбъект("Таблица");
		Спис.Установить("СсылкаИнвентаризация", ТекущийДокумент());
		Спис.Установить("Дата1", НачДата);
		Спис.Установить("Дата2", ДатаДок);
		глОбработкаЯчейкиТаблицы(Спис, 1, Таб, "");
	Иначе
		Предупреждение("В документе нет настроек для открытия отчёта");
	КонецЕсли;
КонецПроцедуры // ОткрытьЗаказыСРасшифровкой();

// ======================================
Процедура ВыборВариантаПечати()
	Перем Значение;
	
    Если СписокПечати.ВыбратьЗначение(Значение,,,,1) = 0 Тогда
		Возврат;
    КонецЕсли;
	
	Если (Значение = 1) ИЛИ (Значение = 11) Тогда
		ПечатьАкта(?(Значение = 11, "Акт", ""));
	ИначеЕсли (Значение = 5) или (Значение = 6) или (Значение = 7) или (Значение = 8) Тогда
		ОтчетПоТоварам(ТМЦ, Значение, ?(Значение > 6, 1, 0));
	ИначеЕсли (Значение = 30) ИЛИ (Значение = 38) Тогда
		ПечатьБланкПустой(Значение);
	ИначеЕсли (Значение = 31) или (Значение = 32) или (Значение = 33) Тогда
		ПечатьБланк(?(Значение = 30, 0, 1), ?((Значение = 32) ИЛИ (Значение = 33), 1, 0));
	ИначеЕсли (Значение = 34) Тогда 	
		ПечатьБланкКвоФакт();
	ИначеЕсли (Значение = 35) ИЛИ (Значение = 36) ИЛИ (Значение = 37) Тогда 	
		ПечатьБланкДляРозницы(?(Значение >= 36, 1, 0), ?(Значение = 37, 1, 0));
	ИначеЕсли Значение = 9 Тогда
		ПечатьВидимых();
	ИначеЕсли Значение = 51 Тогда
		ОтчетПоРезервам();
	ИначеЕсли Значение = 10 Тогда
		ОткрытьЗаказыСРасшифровкой();
	Иначе
		Если ТипИнвентаризации = 1 Тогда
			глКомментарий("Инвентаризационная опись предназначена для инвентаризации по складу или материально ответственному лицу!", 0);
			Возврат;
		КонецЕсли;
		ПечатьИнвентаризационнаяОпись(Значение, ?(Значение = 22,1,0));
	КонецЕсли;
	
КонецПроцедуры

//Процедура ОтчетПоЗаказам()
//КонецПроцедуры

Процедура ОбработкаЯчейкиТаблицы(Зн, Флаг, Таб, Адр)
	Если ТипЗначенияСтр(Зн) = "Справочник" Тогда
		ОтчетПоТоварам(Зн, , Найти(Адр, ?(фУчитыватьВидУпаковки = 1, "C17", "C16")));
		Флаг = 0;
	ИначеЕсли ТипЗначенияСтр(Зн) = "СписокЗначений" Тогда
		Если Зн.Получить("Формирование Инвентаризация") = 1 Тогда
			глОбработкаЯчейкиТаблицы(Зн, Флаг, Таб, Адр);
			Возврат;
		КонецЕсли;
		Док = "";
		Если ЗН.ВыбратьЗначение(Док,,,,1) = 0 Тогда
			Возврат;
		КонецЕсли;
		//Д = СоздатьОбъект("Документ");
		//Д.НайтиДокумент(Док);
		ОткрытьФорму(Док);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьФакт()
	Если КоличествоСтрок() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СпМеню = СоздатьОбъект("СписокЗначений");	
	СпМеню.ДобавитьЗначение(1, "К-во факт = к-во по учёту");
	СпМеню.ДобавитьЗначение(0, "К-во факт = 0");
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн, , , , 1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Вопрос("Заполнить фактическое количество заново?", "Да+Нет") = "Нет" Тогда
		Возврат;
	КонецЕсли;
	ТЧТаблицаИсх.ВыбратьСтроки();
	Пока ТЧТаблицаИсх.ПолучитьСтроку() = 1 Цикл
		ТЧТаблицаИсх.КвоПоФакту = ?(Зн = 0, 0, ТЧТаблицаИсх.КвоПоУчету);
		РассчитатьФактКво(ТЧТаблицаИсх);
		ТЧТаблицаИсх.СуммаПоФакту = ТЧТаблицаИсх.СуммаПоУчету;
		РассчитатьСтроку(ТЧТаблицаИсх);
	КонецЦикла;
	ОтобразитьТабличнуюЧасть(1);
КонецПроцедуры

Процедура ДобавитьВСписок(Элт, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	Если ТипЗначенияСтр(Элт) = "ТаблицаЗначений" Тогда
		Элт.ВыбратьСтроки();
		Пока Элт.ПолучитьСтроку() <> 0 Цикл
			Найдено = 0;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл				
				Если (Элт.Элемент = ТМЦ) И 
				 ((Элт.Уп = ВидУпаковки) ИЛИ ((ПустоеЗначение(Элт.Уп) = 1) И (ВидУпаковки = НетУп))
				 	ИЛИ ((ПустоеЗначение(ВидУпаковки) = 1) И (Элт.Уп = НетУп))) Тогда
				 	ПолучитьСтрокуПоНомеру(НомерСтроки);
				 	АктивизироватьСтроку(НомерСтроки);
				 	Найдено = 1;
				 	Прервать;
				КонецЕсли;				
			КонецЦикла;
			Если Найдено = 0 Тогда
				НоваяСтрока();
				ТМЦ = Элт.Элемент;
				ВидУпаковки = Элт.Уп;
				ИзмТМЦ();
				ОбновитьТЧИсх();				
			КонецЕсли;
			
			Если фКво1 + фКво2 + фКво3 <> 0 Тогда				
				Если фКво1 = 1 Тогда
					КвоПоФакту1 = КвоПоФакту1 + Элт.Кг;
				ИначеЕсли фКво2 = 1 Тогда
					КвоПоФакту2 = КвоПоФакту2 + Элт.Кг;
				Иначе
					КвоПоФакту3 = КвоПоФакту3 + Элт.Кг;
				КонецЕсли;
				
				РассчитатьСтрокуФ(Контекст)
			Иначе
				КвоПоФакту = КвоПоФакту + Элт.Кг;
				ИзмКвоПоФакту();
			КонецЕсли;
			
			глСохранитьЗначение(Контекст,"ТМЦ",ТМЦ);
			глСохранитьЗначение(Контекст,"Ед",Ед);			
			Если (фУчитыватьВидУпаковки = 1) ИЛИ (УчитыватьУпаковку = 0) Тогда // есть упаковка или она вообще не учитывается. Просто перезаполним ТЧИсх
				ОбновитьТЧИсх();
			Иначе
				ОбработатьОкончаниеРедактирования = 1;
				ОбработатьОкончаниеРедактирования();
			КонецЕсли;
		КонецЦикла;			
	ИначеЕсли Элт.Вид() = "Инвентаризация" Тогда
		Элт.ВыбратьСтроки();
		Пока Элт.ПолучитьСтроку() = 1 Цикл
			ДобавитьВСписок(Элт.ТМЦ, списТовар);
		КонецЦикла;
	ИначеЕсли Элт.Вид() = "ТМЦ" Тогда
		ДобавитьвСписок(Элт, списТовар);
	ИначеЕсли Элт.Вид() = "МестаХранения" Тогда
		РСп = списСклады.РазмерСписка();
		ДобавитьвСписок(Элт, списСклады);
		Если списСклады.РазмерСписка() <> РСп Тогда
			ОбновитьОстатки();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		РСп = списСклады.РазмерСписка();
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
		Если списСклады.РазмерСписка() <> РСп Тогда
			ОбновитьОстатки();
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры
                       
Процедура ОбработкаСписаний()
	Если (ПустоеЗначение(НачДата1) = 1) ИЛИ (ПустоеЗначение(КонДата) = 1) Тогда
		Предупреждение("Нужно выбрать общий период");
	КонецЕсли;

	Если Вопрос("Будут помечены на удаление все списания и оприходования, выполненные другими инвентаризациям в общем периоде. Продолжить?", "Да+Нет") = "Нет" Тогда
		Возврат;	    
	КонецЕсли;
	
	НачатьТранзакцию();
	ДокИнв = СоздатьОбъект("Документ.Инвентаризация");
	ДокП = СоздатьОбъект("Документ");
	ДокИнв.ВыбратьДокументы(НачДата1, КонДата);
	Пока ДокИнв.ПолучитьДокумент() = 1 Цикл
		Если (ПустоеЗначение(ДокИнв.НачДата1) = 1) ИЛИ (ПустоеЗначение(ДокИнв.КонДата) = 1) Тогда
			ДокП.ВыбратьПодчиненныеДокументы(,,ДокИнв.ТекущийДокумент());
			Пока ДокП.ПолучитьДокумент() = 1 Цикл
				Если (ДокП.Вид() = "СписаниеТМЦ") ИЛИ (ДокП.Вид() = "ОприходованиеИзлишков") Тогда
				    ДокП.Удалить(0);
					Сообщить(ДокП);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;		
	КонецЦикла;
	Если Вопрос("Сохранить?", "Да+Нет") = "Да" Тогда
	    ЗафиксироватьТранзакцию();
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;
КонецПроцедуры

Процедура ЗапДляП() 	//--- УМК Сандомирский В.Ю. (05.07.14) добавлено Авто
	ПЧ = Да;
	Если ВвестиЗначение(ПЧ, "Введите значение", "Перечисление.УМК_ДаНетАвто") = 1 Тогда
	    ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ПЧ = Перечисление.УМК_ДаНетАвто.Авто Тогда	
				Если Разница < 0 Тогда
					ДляП = Перечисление.ДаНет.Да;
				Иначе
					ДляП = Перечисление.ДаНет.Нет;
				КонецЕсли; 
			Иначе
				ДляП = ПЧ;
			КонецЕсли;
		КонецЦикла;
		
		Если (УчитыватьУпаковку = 1) и (фУчитыватьВидУпаковки = 0) Тогда
			ТКопия = СоздатьОбъект("ТаблицаЗначений");
			ВыгрузитьТабличнуюЧасть(ТКопия);
			
			ТЧТаблицаИсх.ВыбратьСтроки();
			Пока ТЧТаблицаИсх.ПолучитьСтроку() = 1 Цикл
				Если ПЧ = Перечисление.УМК_ДаНетАвто.Авто Тогда	
					Стр = 0;
					Поз = ТКопия.НайтиЗначение(ТЧТаблицаИсх.ТМЦ, Стр, "ТМЦ");					
					Если ТКопия.ПолучитьЗначение(Стр, "Разница") < 0 Тогда
						ТЧТаблицаИсх.ДляП = Перечисление.ДаНет.Да;
					Иначе
						ТЧТаблицаИсх.ДляП = Перечисление.ДаНет.Нет;
					КонецЕсли; 
				Иначе
					ТЧТаблицаИсх.ДляП = ПЧ;
				КонецЕсли;				
			КонецЦикла;
		ИначеЕсли УчитыватьУпаковку = 1 Тогда
			ОбновитьТЧИсх();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция Раскраска()
	Возврат  "(BRUSH_S[" + Строка(100*255*100) + "])";	
КонецФункции

Функция ОтклонениеРасхода()
	Возврат Окр(?(Расход = 0, 0, Разница/Расход) * 100, 0);	
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю. (23.09.14) дозпролнить ТМЦ для списания
Процедура ИзмТМЦДляСписания()
	Если фПоказыватьТМЦДляСписания = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ТМЦДляСписания) = 1 Тогда
				ЗаполнитьТМЦДляСписания(Контекст);
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ИзмТМЦДляСписания

//====================================================================== //--- УМК Сандомирский В.Ю. (06.10.14) дозпролнить ТМЦ для приходования
Процедура ИзмФлТМЦДляПрихода()
	Если фПоказыватьТМЦДляПриходования = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ТМЦДляПрихода) = 1 Тогда
				ЗаполнитьТМЦДляПрихода(Контекст);
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ИзмТМЦДляСписания

//====================================================================== //--- УМК Сандомирский В.Ю. (06.10.14) сортировать по ТМЦ приходования
Процедура СортироватьПоТМЦПрихода()
	ТЗ_ТМЦ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ_ТМЦ);
	ТЗ_ТМЦ.Сортировать("ТМЦДляПрихода+,ТМЦ+");	
	УдалитьСтроки();
	ЗагрузитьТабличнуюЧасть(ТЗ_ТМЦ)
КонецПроцедуры // СортироватьПоТМЦПриходования

//======================================================================
Процедура ИзмВидУпаковки()
	ТекТовар = ТМЦ;
	
	ОтобразитьТабличнуюЧасть();
	ОбновитьОстатки();
	Если ПустоеЗначение(ТекТовар) = 0 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если ТМЦ = ТекТовар Тогда
				АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Процедура ПриОкончанииРедактированияСтроки(НовСтр)
	Если (фУчитыватьВидУпаковки = 1) ИЛИ (УчитыватьУпаковку = 0) Тогда // есть упаковка или она вообще не учитывается. Просто перезаполним ТЧИсх
		ОбновитьТЧИсх();
	Иначе
		ОбработатьОкончаниеРедактирования = 1;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ОбработатьОкончаниеРедактирования()
	Если ОбработатьОкончаниеРедактирования = 1 Тогда
		ОбработатьОкончаниеРедактирования = 0;
		ТекТМЦ = ТМЦ;
		ТекЕд = Ед;
		Ключ = ЗначениеВСтрокуВнутр(ТекТМЦ) + "//" + ЗначениеВСтрокуВнутр(НетУп);
		СтароеТМЦ = глВосстановитьЗначение(Контекст, "ТМЦ");
		СтараяЕд = глВосстановитьЗначение(Контекст, "Ед");

		// чтобы избежать коллизий, свернём ТЧ и спозиционируемся на ту строку, где были
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(ТЗ);
		СвернутьТаблицу(ТЗ, 1);
		ЗагрузитьТабличнуюЧасть(ТЗ);
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл			
			Если ТМЦ = ТекТМЦ Тогда
				РассчитатьСтроку(Контекст);
				АктивизироватьСтроку(НомерСтроки);
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Поз = 0;
		Если СтароеТМЦ <> ТМЦ Тогда // сложная ситуация. Изменилось ТМЦ. Нужно найти в ТЧ исх все строки со старым ТМЦ, поменять его на новое и свернуть ТЧ Исх			
			Пока ТЧТаблицаИсх.НайтиЗначение(СтароеТМЦ, Поз, "ТМЦ") = 1 Цикл
				ТЧТаблицаИсх.ПолучитьСтрокуПоНомеру(Поз);
				ТЧТаблицаИсх.ТМЦ = ТекТМЦ;
				ТЧТаблицаИсх.СхемаРасчетаЗП = ТекТМЦ.СхемаРасчетаЗП.Получить(ДатаДок).Примечание;
				ЗаполнитьДопПоля();
				Поз = 0;
			КонецЦикла;
		КонецЕсли;		
		Если СтараяЕд <> Ед Тогда
			Пока ТЧТаблицаИсх.НайтиЗначение(СтараяЕд, Поз, "Ед") = 1 Цикл
				ТЧТаблицаИсх.ПолучитьСтрокуПоНомеру(Поз);
				ТЧТаблицаИсх.УстановитьЗначение(Поз, "Ед", ТекЕд);
				ИзмЕд(ТЧТаблицаИсх);
				Поз = 0;
			КонецЦикла;			
		КонецЕсли;
		Если (СтараяЕд <> Ед) ИЛИ (СтароеТМЦ <> ТМЦ) Тогда
			СвернутьТаблицу(ТЧТаблицаИсх, 1, ",Ключ,РГРВУ,Группа");
		КонецЕсли;		
		
		// дальше действуем по такому алгоритму считаем сколько было всего ТМЦ. Считаем разницу между тем, что было и тем, что щас. Добалвяем эту разницу в строку ТМЦ без упаковки. 
		// если такой строки нет, то добавляем новую строку без уп.
		СуммаБУп = 0; СуммаУп = 0; НомерСтрокиБУп = 0;
		СуммаБУп1 = 0;СуммаБУп2 = 0;СуммаБУп3 = 0;
		СуммаУп1 = 0;СуммаУп2 = 0;СуммаУп3 = 0;		
		
		ДублируютсяСтроки = 0;		
		ТЧТаблицаИсх.ВыбратьСтроки();
		Пока ТЧТаблицаИсх.ПолучитьСтроку() = 1 Цикл
			Если ТЧТаблицаИсх.ТМЦ = ТекТМЦ Тогда
				Если ПустоеЗначение(ТЧТаблицаИсх.ВидУпаковки) = 1 Тогда
					СуммаБУп = СуммаБУп + ТЧТаблицаИсх.КвоПоФакту;
					СуммаБУп1 = СуммаБУп1 + ТЧТаблицаИсх.КвоПоФакту1;
					СуммаБУп2 = СуммаБУп2 + ТЧТаблицаИсх.КвоПоФакту2;
					СуммаБУп3 = СуммаБУп3 + ТЧТаблицаИсх.КвоПоФакту3;
					НомерСтрокиБУп = ТЧТаблицаИсх.НомерСтроки;
					ДублируютсяСтроки = ДублируютсяСтроки + 1;
				Иначе
					СуммаУп = СуммаУп + ТЧТаблицаИсх.КвоПоФакту;
					СуммаУп1 = СуммаУп1 + ТЧТаблицаИсх.КвоПоФакту1;
					СуммаУп2 = СуммаУп2 + ТЧТаблицаИсх.КвоПоФакту2;
					СуммаУп3 = СуммаУп3 + ТЧТаблицаИсх.КвоПоФакту3;
				КонецЕсли;
				
				ТЧТаблицаИсх.фРасчетноеКвоПоФакту = фРасчетноеКвоПоФакту;
				ТЧТаблицаИсх.ТМЦДляСписания = ТМЦДляСписания;
				ТЧТаблицаИсх.ТМЦДляПрихода = ТМЦДляПрихода;
				ТЧТаблицаИсх.ПримечаниеС = ПримечаниеС;
				ТЧТаблицаИсх.РаспределятьВСписания = РаспределятьВСписания;
				ТЧТаблицаИсх.ЦенаБезНДС = ЦенаБезНДС;
				ТЧТаблицаИсх.ЦенаПродавца = ЦенаПродавца;
				ТЧТаблицаИсх.Ед = Ед;
				ТЧТаблицаИсх.СхемаРасчетаЗП = СхемаРасчетаЗП;
				ТЧТаблицаИсх.Коэффициент = Коэффициент;
				ТЧТаблицаИсх.ДляП = ДляП;
				ТЧТаблицаИсх.РаспределятьВСписания = РаспределятьВСписания;
			КонецЕсли;
		КонецЦикла;
		
		Если ДублируютсяСтроки > 1 Тогда
			СвернутьТаблицу(ТЧТаблицаИсх, 1, ",Ключ,РГРВУ,Группа");
			ТЧТаблицаИсх.ВыбратьСтроки();
			Пока ТЧТаблицаИсх.ПолучитьСтроку() = 1 Цикл
				Если ТЧТаблицаИсх.ТМЦ = ТекТМЦ Тогда
					Если ПустоеЗначение(ТЧТаблицаИсх.ВидУпаковки) = 1 Тогда
						НомерСтрокиБУп = ТЧТаблицаИсх.НомерСтроки;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;			
		КонецЕсли;
		
		Если НомерСтрокиБУп = 0 Тогда
			ТЧТаблицаИсх.НоваяСтрока();
			Для Инд = 1 По Метаданные.Документ("Инвентаризация").РеквизитТабличнойЧасти() Цикл
				Рекв = Метаданные.Документ("Инвентаризация").РеквизитТабличнойЧасти(Инд).Идентификатор;
				ТЧТаблицаИсх.УстановитьЗначение(ТЧТаблицаИсх.НомерСтроки, Рекв, ПолучитьАтрибут(Рекв));
			КонецЦикла;
			ТЧТаблицаИсх.КвоПоУчету = 0; ТЧТаблицаИсх.СуммаПоУчету = 0;
			ТЧТаблицаИсх.Приход = 0; ТЧТаблицаИсх.Расход = 0; ТЧТаблицаИсх.НачОст = 0; ТЧТаблицаИсх.НачОстСумма = 0; ТЧТаблицаИсх.ПриходСумма = 0; ТЧТаблицаИсх.РасходСумма = 0; ТЧТаблицаИсх.СписаниеБП = 0;
			ТЧТаблицаИсх.КвоПоФакту = 0; ТЧТаблицаИсх.КвоПоФакту1 = 0; ТЧТаблицаИсх.КвоПоФакту2 = 0; ТЧТаблицаИсх.КвоПоФакту3 = 0;
			
			ЗаполнитьДопПоля();
		Иначе
			ТЧТаблицаИсх.ПолучитьСтрокуПоНомеру(НомерСтрокиБУп);
		КонецЕсли;
		
		ТЧТаблицаИсх.КвоПоФакту = ТЧТаблицаИсх.КвоПоФакту + (КвоПоФакту - СуммаБУп - СуммаУп);
		ТЧТаблицаИсх.КвоПоФакту1 = ТЧТаблицаИсх.КвоПоФакту1 + (КвоПоФакту1 - СуммаБУп1 - СуммаУп1);
		ТЧТаблицаИсх.КвоПоФакту2 = ТЧТаблицаИсх.КвоПоФакту2 + (КвоПоФакту2 - СуммаБУп2 - СуммаУп2);
		ТЧТаблицаИсх.КвоПоФакту3 = ТЧТаблицаИсх.КвоПоФакту3 + (КвоПоФакту3 - СуммаБУп3 - СуммаУп3);
		ТЧТаблицаИсх.ЦенаБезНДС = ЦенаБезНДС;
		ТЧТаблицаИсх.ЦенаПродавца = ЦенаПродавца;
		РассчитатьФактКво(ТЧТаблицаИсх);
		РассчитатьСтроку(ТЧТаблицаИсх);
	КонецЕсли;
КонецПроцедуры // гл

Процедура ПриУдаленииСтроки()
	Если фУчитыватьВидУпаковки = 1 Тогда
		// просто удалим строку в ТЧИсх
		Поз = 0; 
		ТЧТаблицаИсх.НайтиЗначение(ЗначениеВСтрокуВнутр(ТМЦ) + "//" + ЗначениеВСтрокуВнутр(ВидУпаковки), Поз, "Ключ");
		ТЧТаблицаИсх.УдалитьСтроку(Поз);
	Иначе
		// тут нужно удалить все строки для этого ТМЦ		
		Пока ТЧТаблицаИсх.НайтиЗначение(ТМЦ, Поз, "ТМЦ") = 1 Цикл			
			ТЧТаблицаИсх.УдалитьСтроку(Поз);
			Поз = 0;
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьБезВУ()
	Если Вопрос("Заполнить фактические количество в строках без в/у?", "Да+Нет") = "Да" Тогда
		НомКол = 1;
		Если ВвестиЧисло(НомКол, "Введите колонку факт. к-ва для заполнения", 1, 0) = 0 Тогда
			Возврат;
		КонецЕсли;
		Если (НомКол < 1) И (НомКол > 3) Тогда
			Предупреждение("Введен неверный номер колонки");
			Возврат;
		КонецЕсли;
		
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ТЧТаблицаИсх.Выгрузить(ТЗ);
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ТЗ.ВидУпаковки) = 1 Тогда
				ТЗ.УстановитьЗначение(ТЗ.НомерСтроки, "КвоПоФакту" + НомКол, 0);
				РассчитатьСтрокуФ(ТЗ);
			КонецЕсли;
		КонецЦикла;
		ТЗ.Свернуть("ТМЦ", "КвоПоУчету,КвоПоФакту, КвоПоФакту1, КвоПоФакту2, КвоПоФакту3");
		
		ТЧТаблицаИсх.ВыбратьСтроки();
		Пока ТЧТаблицаИсх.ПолучитьСтроку() = 1 Цикл
			Если ПустоеЗначение(ТЧТаблицаИсх.ВидУпаковки) = 1 Тогда
				Стр = 0;
				ТЗ.НайтиЗначение(ТЧТаблицаИсх.ТМЦ, Стр, "ТМЦ");
				ТЗ.ПолучитьСтрокуПоНомеру(Стр);
				ТЧТаблицаИсх.КвоПоФакту = ТЗ.КвоПоУчету - ТЗ.КвоПоФакту;
				РассчитатьФактКво(ТЧТаблицаИсх);
				ТЗ.УдалитьСтроку(Стр);
			КонецЕсли;
		КонецЦикла;
		
		// теперь нужно выбрать из ТЗ позиции, которые остались - это товары. для которых нет строк без упаковки. Добавим такие строки
		Если ТЗ.КоличествоСтрок() > 0 Тогда
			ТЧТ = СоздатьОбъект("ТаблицаЗначений"); 
			ТЧТаблицаИсх.Выгрузить(ТЧТ);
			ТЧТ.Свернуть("ТМЦ,СхемаРасчетаЗП,Ед,Партия,Коэффициент", 
				"КвоПоУчету,КвоПоФакту,КвоПоФакту1,КвоПоФакту2,КвоПоФакту3,Разница,СуммаПоУчету,СуммаПоФакту,СуммаРазницы,НачОст,НачОстСумма,Приход,ПриходСумма,Расход,РасходСумма,СписаниеБП");
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				Стр = 0;
				ТЧТ.НайтиЗначение(ТЗ.ТМЦ, Стр, "ТМЦ");
				ТЧТ.ПолучитьСтрокуПоНомеру(Стр);
				ТЧТаблицаИсх.НоваяСтрока();
				Для Инд = 1 По ТЧТ.КоличествоКолонок() Цикл
					ИмяКол = ТЧТ.ПолучитьПараметрыКолонки(1);
					ТЧТаблицаИсх.УстановитьЗначение(ТЧТаблицаИсх.НомерСтроки, ИмяКол, ТЧТ.ПолучитьЗначение(Стр, ИмяКол));
				КонецЦикла;
				ТЧТаблицаИсх.КвоПоФакту = ТЗ.КвоПоУчету - ТЗ.КвоПоФакту;
				РассчитатьФактКво(ТЧТаблицаИсх);
				ЗаполнитьДопПоля();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	ОтобразитьТабличнуюЧасть(1);
КонецПроцедуры // гл

//======================================================================
Функция ГруппировкаВидовУпаковки()
	Возврат ТМЦ.ГруппировкаРазрешенныхВидовУпаковки;	
КонецФункции

//======================================================================
Процедура СортироватьПоИерархии()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЧТаблицаИсх.Выгрузить(ТЗ);
	МаксУР = 0; СтрСорт = "";
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ТекУР = ТЗ.ТМЦ.Уровень() - 1;
		Если ТекУР > МаксУР Тогда
			Для Инд = МаксУР + 1 По ТекУР Цикл
				ТЗ.НоваяКолонка("Родитель" + Инд, "Справочник.ТМЦ");
				СтрСорт = СтрСорт + "Родитель" + Инд + ",";				
			КонецЦикла;
			
			МаксУР = ТекУР;			
		КонецЕсли;
		
		Род = ТЗ.ТМЦ.Родитель;
		Пока ПустоеЗначение(Род) = 0 Цикл
			ТЗ.УстановитьЗначение(ТЗ.НомерСтроки, "Родитель" + ТекУР, Род);
			ТекУР = ТекУР - 1;
			Род = Род.Родитель;
		КонецЦикла;		
	КонецЦикла;
	
	ТЗ.Сортировать(СтрСорт + "ТМЦ" + ?(фУчитыватьВидУпаковки = 1, ",ВидУпаковки", ""));
	ТЧТаблицаИсх.Загрузить(ТЗ);
	Для Инд = 1 По МаксУР Цикл
		ТЧТаблицаИсх.УдалитьКолонку("Родитель" + Инд);
	КонецЦикла;
КонецПроцедуры // гл

//======================================================================
Процедура СортироватьПоГруппе()
	ТЧТаблицаИсх.Сортировать("Группа,ТМЦ,ВидУпаковки");
КонецПроцедуры //

//======================================================================
Процедура ЗаписатьПорядокСортировки()
	Если Вопрос("Записать порядок сортировки для ТМЦ в справочник ""Сортировка"" для выбранной фирмы?", "Да+Нет") = "Да" Тогда
		СписТМЦ = СоздатьОбъект("СписокЗначений");
		СпрСорт = СоздатьОбъект("Справочник.НомераСтрокС");
		
		НачатьТранзакцию();
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если СписТМЦ.НайтиЗначение(ТМЦ) = 0 Тогда
				СписТМЦ.ДобавитьЗначение(ТМЦ);
				СпрСорт.ИспользоватьВладельца(ТМЦ);
				Если СпрСорт.НайтиПоРеквизиту("Фирма", Фирма, 0) = 0 Тогда
					СпрСорт.Новый();
					СпрСорт.Владелец = ТМЦ;
				КонецЕсли;
				Если СпрСорт.ПометкаУдаления() = 1 Тогда
					СпрСорт.СнятьПометкуУдаления();
				КонецЕсли;
				СпрСорт.Код = НомерСтроки;
				СпрСорт.Фирма = Фирма;
				СпрСорт.Записать();
			КонецЕсли;
		КонецЦикла;
		
		Если Вопрос("Подтвердить запись?", "Да+Нет") = "Да" Тогда
			ЗафиксироватьТранзакцию();
		Иначе
			ОтменитьТранзакцию();
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры // ЗаписатьПорядокСортировки()

//======================================================================
Процедура СортироватьПоКодуСортировки()
	СпрКС = СоздатьОбъект("Справочник.НомераСтрокС");
	ТЧТаблицаИсх.НоваяКолонка("КодСорт", "Число");
	ТЧТаблицаИсх.ВыбратьСтроки();
	Пока ТЧТаблицаИсх.ПолучитьСтроку() = 1 Цикл
		ТЧТаблицаИсх.КодСорт = 9999999;
		СпрКС.ИспользоватьВладельца(ТЧТаблицаИсх.ТМЦ);
		Если СпрКС.НайтиПоРеквизиту("Фирма", Фирма, 0) = 1 Тогда
			Если СпрКС.ПометкаУдаления() = 0 Тогда
				ТЧТаблицаИсх.КодСорт = СпрКС.Код;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТЧТаблицаИсх.Сортировать("КодСорт+,ТМЦ,ВидУпаковки");
	ТЧТаблицаИсх.УдалитьКолонку("КодСорт");
КонецПроцедуры // 

Процедура СортироватьПоТМЦТФ()
	// сортировка по ТМЦ с таким же фаршем. Нужно вначале вывести ТМЦ, под ним те ТМЦ, где оно указано в поле ТМЦ с таким же фаршем.
	// все, у кого ничего не указано и те, которые не имеют ничего под собой, выводятся в конце. Доп. сортировка по алфамиту
	
	СпрКС = СоздатьОбъект("Справочник.НомераСтрокС");
	ТЧТаблицаИсх.НоваяКолонка("ТТЖФ", "Справочник.ТМЦ");
	ТЧТаблицаИсх.НоваяКолонка("ЕстьТТЖФ", "Число");
	ТЧТаблицаИсх.Сортировать("ТМЦ,ВидУпаковки");
	ТЧТаблицаИсх.Заполнить(9999999999, , , "ЕстьТТЖФ");
	
	ТЧТаблицаИсх.ВыбратьСтроки();
	Пока ТЧТаблицаИсх.ПолучитьСтроку() = 1 Цикл
		ТТЖФ = ТЧТаблицаИсх.ТМЦ.ТМЦСТакимЖеФаршем;
		Если ПустоеЗначение(ТТЖФ) = 0 Тогда
			Стр = 0;
			Если ТЧТаблицаИсх.НайтиЗначение(ТТЖФ, Стр, "ТМЦ") = 0 Тогда
				ТЧТаблицаИсх.ЕстьТТЖФ = 0;				
			Иначе
				ТЧТаблицаИсх.ЕстьТТЖФ = Стр;
				Если ТЧТаблицаИсх.ПолучитьЗначение(Стр, "ЕстьТТЖФ") = 9999999999 Тогда
					ТЧТаблицаИсх.УстановитьЗначение(Стр, "ЕстьТТЖФ", Стр);
				КонецЕсли;
			КонецЕсли;
			ТЧТаблицаИсх.ТТЖФ = ТТЖФ;
		КонецЕсли;
	КонецЦикла;
	ТЧТаблицаИсх.Сортировать("ЕстьТТЖФ,ТТЖФ,ТМЦ,ВидУпаковки");
	
	ТЧТаблицаИсх.УдалитьКолонку("ТТЖФ");
	ТЧТаблицаИсх.УдалитьКолонку("ЕстьТТЖФ");
КонецПроцедуры // 

//======================================================================
Процедура СортироватьПоГРВУ()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение(1, "По группе, ТМЦ");
	спМеню.ДобавитьЗначение(2, "По ТМЦ");
	спМеню.ДобавитьЗначение(3, "По группе");
	спМеню.ДобавитьЗначение(4, "По ТМЦ для прихода");
	спМеню.ДобавитьЗначение(5, "По иерархии");
	спМеню.ДобавитьЗначение(6, "По коду сортировки");
	спМеню.ДобавитьЗначение(8, "По ТМЦ с таким же фаршем");
	спМеню.ДобавитьЗначение(7, "Записать порядок сортировки для фирмы");
	
	Зн = 1;
	Если спМеню.ВыбратьЗначение(Зн, "Выберите вариант", , , 1) = 1 Тогда
		Если Зн = 1 Тогда
			ТЧТаблицаИсх.Сортировать("РГРВУ,Группа,ТМЦ,ВидУпаковки");
		ИначеЕсли Зн = 2 Тогда
			ТЧТаблицаИсх.Сортировать("РГРВУ,ТМЦ,ВидУпаковки");
		ИначеЕсли Зн = 3 Тогда
			СортироватьПоГруппе();
		ИначеЕсли Зн = 4 Тогда
			СортироватьПоТМЦПрихода();
		ИначеЕсли Зн = 5 Тогда
			СортироватьПоИерархии();
		ИначеЕсли Зн = 6 Тогда
			СортироватьПоКодуСортировки();
		ИначеЕсли Зн = 8 Тогда
			СортироватьПоТМЦТФ();
		ИначеЕсли Зн = 7 Тогда
			ЗаписатьПорядокСортировки();
			Возврат;
		КонецЕсли;
		ОтобразитьТабличнуюЧасть(1);
	КонецЕсли;	
КонецПроцедуры // 

//======================================================================
Процедура ИзмВидимостьКво(Ном, Зн)
	Поз = списВидимостьКолонок.НайтиЗначение("КвоПоФакту"+Ном);
	Если Поз <> 0 Тогда
		списВидимостьКолонок.Пометка(Поз, Зн);
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Функция ПолучитьСписокСписанийПоИнвентаризации()
	СписПроводимыхСписаний = СоздатьОбъект("СписокЗначений");
	Док = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(,, ТекущийДокумент());
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если (Док.Вид() = "СписаниеТМЦВПроизводство") И (Док.ПометкаУдаления() = 0) 
			И (СписПроводимыхСписаний.НайтиЗначение(Док.ТекущийДокумент()) = 0) Тогда
			СписПроводимыхСписаний.ДобавитьЗначение(Док.ТекущийДокумент());
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписПроводимыхСписаний;
КонецФункции // 

//======================================================================
Процедура ОчиститьСписания(Список, НужноПроведение = 0, СписокЗаказов)
	КвоДок = 0;
	Для Инд = 1 По Список.РазмерСписка() Цикл
		Док = СоздатьОбъект("Документ.СписаниеТМЦВПроизводство"); 
		Док.НайтиДокумент(Список.ПолучитьЗначение(Инд));
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		Док.ВыгрузитьТабличнуюЧасть(ТЗ);
		ИндТЗ = 1;
		Пока ИндТЗ <= ТЗ.КоличествоСтрок() Цикл
			ТЗ.ПолучитьСтрокуПоНомеру(ИндТЗ);
			Если ТЗ.Инвентаризация = ТекущийДокумент() Тогда
				ТЗ.УдалитьСтроку(ИндТЗ);
			Иначе
				ИндТЗ = ИндТЗ + 1;
			КонецЕсли;
		КонецЦикла;
		
		Док.ЗагрузитьТабличнуюЧасть(ТЗ);
		глРассчитатьКвоФаршаСписание(Док, 0);
		Док.Записать();
		Сообщить("Записан: " + Строка(Док));
		
		Если (НужноПроведение = 1) И (Док.Проведен() = 1) Тогда
			Если КвоДок >= 5 Тогда
				Предупреждение("Пауза 5, сек.", 5);
				КвоДок = 0;
			КонецЕсли;			
			Док.Провести(0);
			КвоДок = КвоДок + 1;
			Сообщить("Проведен: " + Строка(Док));			
		ИначеЕсли (НужноПроведение = 0) И (Док.Проведен() = 1) Тогда
			Док.ТребуетсяПроведение = 1;
			Док.Записать();
		КонецЕсли;
		
		Если СписокЗаказов.НайтиЗначение(Док.ДокументОснование) = 0 Тогда
			СписокЗаказов.ДобавитьЗначение(Док.ДокументОснование);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // ОчиститьСписания()

//======================================================================
Процедура НайтиПровестиВыпуски(СписокЗаказов)
	КвоДок = 0;
	Док = СоздатьОбъект("Документ");
	Для Инд = 1 По СписокЗаказов.РазмерСписка() Цикл
		Док.УстановитьФильтр(1, 0);
		Док.ВыбратьПодчиненныеДокументы(,, СписокЗаказов.ПолучитьЗначение(Инд));		
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если (Док.Вид() = "ВыпускПродукции") Тогда
				Если КвоДок >= 2 Тогда
					Предупреждение("Пауза 5, сек.", 5);
					КвоДок = 0;
				КонецЕсли;				
				Док.Провести();
				КвоДок = КвоДок + 1;
				Сообщить("Проведен: " + Строка(Док));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры // 

//======================================================================
Процедура ЗаписатьДокСП(ТЗТЧ, ДокСп, СписПроводимыхСписаний, СписокЗаказов)
	ДокСп.ЗагрузитьТабличнуюЧасть(ТЗТЧ);
	глРассчитатьКвоФаршаСписание(ДокСп, 0);
	Если ДокСп.Проведен() = 1 Тогда
		ДокСп.ТребуетсяПроведение = 1;
	КонецЕсли;
	ДокСп.Записать();
	Сообщить("Изменен документ: " + Строка(ДокСп));
	Если СписПроводимыхСписаний.НайтиЗначение(ДокСп.ТекущийДокумент()) = 0 Тогда
		СписПроводимыхСписаний.ДобавитьЗначение(ДокСп.ТекущийДокумент());							
	КонецЕсли;
	Если СписокЗаказов.НайтиЗначение(ДокСп.ДокументОснование) = 0 Тогда
		СписокЗаказов.ДобавитьЗначение(ДокСп.ДокументОснование);
	КонецЕсли;
КонецПроцедуры // 

//======================================================================
Процедура ОбработкаСписанийПр()
	Если Модифицированность() = 1 Тогда
		Предупреждение("Документ нужно записать!");
		Возврат;
	КонецЕсли;
	
	Список = СоздатьОбъект("СписокЗначений");
	Список.ДобавитьЗначение(1, "Формирование списаний");
	Список.ДобавитьЗначение(2, "Удаление списаний");	
	СписокЗаказов = СоздатьОбъект("СписокЗначений");
	
	Зн = 1;
	Если Список.ВыбратьЗначение(Зн,,,,1) = 1 Тогда
		Если Зн = 1 Тогда
			СписПроводимыхСписаний = ПолучитьСписокСписанийПоИнвентаризации();
			ТЗТМЦ = СоздатьОбъект("ТаблицаЗначений");
			ТЗТМЦ.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
			ТЗТМЦ.НоваяКолонка("Кво", "Число", 15, 3);
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Если (РаспределятьВСписания = Да) И (КвоПоФакту <> КвоПоУчету) Тогда
					ТЗТМЦ.НоваяСтрока();
					ТЗТМЦ.ТМЦ = ТМЦ;
					ТЗТМЦ.Кво = КвоПоУчету - КвоПоФакту;
				КонецЕсли;
			КонецЦикла;
			
			ТЗТМЦ.Свернуть("ТМЦ", "Кво");
			ТЗТМЦ.НоваяКолонка("ИтСписано", "Число", 15, 3);
			
			
			ТЗСписаний = СоздатьОбъект("ТаблицаЗначений");
			ТЗСписаний.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
			ТЗСписаний.НоваяКолонка("Списание", "Документ.СписаниеТМЦВПроизводство");
			ТЗСписаний.НоваяКолонка("Списано", "Число", 15, 3);
			ТЗСписаний.НоваяКолонка("НовоеКво", "Число", 15, 3);
			
			НачатьТранзакцию();
			Если СписПроводимыхСписаний.РазмерСписка() > 0 Тогда
				Если Вопрос("Для этой инвентаризации уже было выполнено изменений списаний. Выполнить заново?", "Да+Нет") = "Нет" Тогда
					ОтменитьТранзакцию();
					Возврат;
				КонецЕсли;
				
				// очистим данные в списаниях и запишем их
				ОчиститьСписания(СписПроводимыхСписаний, 0, СписокЗаказов);
			КонецЕсли;
			
			СписокСписаний = СоздатьОбъект("СписокЗначений");
			// формируем таблицу списаний по этой продукции
			ДокСп = СоздатьОбъект("Документ.СписаниеТМЦВПроизводство");
			ДокСп.УстановитьФильтр(1, 0);
			ДокСп.ВыбратьДокументы(НачДата, ДатаДок);
			Пока ДокСп.ПолучитьДокумент() = 1 Цикл
				ДокСп.ВыбратьСтроки();
				Пока ДокСп.ПолучитьСтроку() = 1 Цикл
					Стр = 0;
					Если ТЗТМЦ.НайтиЗначение(ДокСП.ТМЦ, Стр, "ТМЦ") = 1 Тогда
						//ТЗТМЦ.УстановитьЗначение(Стр, "ИтСписано", ТЗТМЦ.ПолучитьЗначение(Стр, "ИтСписано") + ДокСп.Кво * ДокСп.Коэффициент);
						ТЗСписаний.НоваяСтрока();
						ТЗСписаний.ТМЦ = ДокСп.ТМЦ;
						ТЗСписаний.Списание = ДокСп.ТекущийДокумент();
						ТЗСписаний.Списано = ДокСп.Кво * ДокСп.Коэффициент;
						Если СписокСписаний.НайтиЗначение(ТЗСписаний.Списание) = 0 Тогда
							СписокСписаний.ДобавитьЗначение(ТЗСписаний.Списание, Строка(ДокСп.ПродукцияШ) + "   -   " + Строка(ТЗСписаний.Списание));
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			Рез = ОткрытьФормуМодально("Обработка.ВыборСписанийИзИнв", СписокСписаний);
			Если СписокСписаний.РазмерСписка() = 0 Тогда
				Предупреждение("Не выбрано ни одного списания для обработки");
				ОтменитьТранзакцию();					
				Возврат;
			Иначе
				Инд = 1;
				Пока Инд <= ТЗСписаний.КоличествоСтрок() Цикл
					ТЗСписаний.ПолучитьСтрокуПоНомеру(Инд);
					Если СписокСписаний.НайтиЗначение(ТЗСписаний.Списание) = 0 Тогда
						ТЗСписаний.УдалитьСтроку(Инд);
					Иначе
						Инд = Инд + 1;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ТЗСписаний.Сортировать("ТМЦ");
			ТЗСписаний.ВыбратьСтроки();
			Пока ТЗСписаний.ПолучитьСтроку() = 1 Цикл
				Стр = 0;
				Если ТЗТМЦ.НайтиЗначение(ТЗСписаний.ТМЦ, Стр, "ТМЦ") = 1 Тогда
					ТЗТМЦ.УстановитьЗначение(Стр, "ИтСписано", ТЗТМЦ.ПолучитьЗначение(Стр, "ИтСписано") + ТЗСписаний.Списано);
				КонецЕсли;				
			КонецЦикла;
			
			СтарТМЦ = ""; ОстТМЦ = 0;
			ТЗСписаний.ВыбратьСтроки();
			Пока ТЗСписаний.ПолучитьСтроку() = 1 Цикл
				Если СтарТМЦ <> ТЗСписаний.ТМЦ Тогда
					Если СтарТМЦ <> "" Тогда
						ТЗСписаний.УстановитьЗначение(ТЗСписаний.НомерСтроки - 1, "НовоеКво", ТЗСписаний.ПолучитьЗначение(ТЗСписаний.НомерСтроки - 1, "НовоеКво") + ОстТМЦ);												
					КонецЕсли;
					
					Стр = 0;
					ТЗТМЦ.НайтиЗначение(ТЗСписаний.ТМЦ, Стр, "ТМЦ");
					ТЗТМЦ.ПолучитьСтрокуПоНомеру(Стр);
					
					СтарТМЦ = ТЗСписаний.ТМЦ;
					ОстТМЦ = ТЗТМЦ.Кво;
				КонецЕсли;
				
				ТЗСписаний.НовоеКво = ?(ТЗСписаний.НомерСтроки = ТЗСписаний.КоличествоСтрок(), ОстТМЦ, Окр(ТЗСписаний.Списано / ТЗТМЦ.ИтСписано * ТЗТМЦ.Кво, 3));
				ОстТМЦ = ОстТМЦ - ТЗСписаний.НовоеКво;// * ?(ТЗТМЦ.Кво < 0, -1, 1);
			КонецЦикла;
			Если (СтарТМЦ <> "") И (ОстТМЦ <> 0) Тогда
				ТЗСписаний.УстановитьЗначение(ТЗСписаний.КоличествоСтрок(), "НовоеКво", ТЗСписаний.ПолучитьЗначение(ТЗСписаний.КоличествоСтрок(), "НовоеКво") + ОстТМЦ);						
			КонецЕсли;			
			
			// изменяем списания под новые реалии
			ДокСп = СоздатьОбъект("Документ.СписаниеТМЦВПроизводство");
			ТЗТЧ = СоздатьОбъект("ТаблицаЗначений");
			СтарСп = "";
			ТЗСписаний.Сортировать("Списание");
			ТЗСписаний.ВыбратьСтроки();
			Пока ТЗСписаний.ПолучитьСтроку() = 1 Цикл
				Если ТЗСписаний.НовоеКво <> 0 Тогда
					Если СтарСп <> ТЗСписаний.Списание Тогда
						Если СтарСп <> "" Тогда
							ЗаписатьДокСП(ТЗТЧ, ДокСп, СписПроводимыхСписаний, СписокЗаказов);
						КонецЕсли;
					
						ДокСп.НайтиДокумент(ТЗСписаний.Списание);
						ДокСп.ВыгрузитьТабличнуюЧасть(ТЗТЧ);
						СтарСп = ТЗСписаний.Списание;
					КонецЕсли;				
				
					ТЗТЧ.НоваяСтрока(1);
					ТЗТЧ.ТМЦ = ТЗСписаний.ТМЦ;
					ТЗТЧ.Продукция = ДокСп.ПродукцияШ;
					ТЗТЧ.ВидДеятельности = ТЗТЧ.ТМЦ.ВидДеятельности;
					ТЗТЧ.ВидЗатрат = ТЗТЧ.ТМЦ.ВидЗатрат;
					ТЗТЧ.Заказ = ДокСп.ДокументОснование;
					ТЗТЧ.Ед = ТЗСписаний.ТМЦ.ЕдиницаПоУмолчанию;
					ТЗТЧ.Коэффициент = ТЗТЧ.Ед.Коэффициент;
					ТЗТЧ.Кво = ТЗСписаний.НовоеКво / ТЗТЧ.Коэффициент;					
					ТЗТЧ.КвоНаЗамес = ТЗТЧ.Кво;
					ТЗТЧ.КомментСтр = "добавлено автоматически";
					ТЗТЧ.Инвентаризация = ТекущийДокумент();
				КонецЕсли;
			КонецЦикла;
			
			Если СтарСп <> "" Тогда
				ЗаписатьДокСП(ТЗТЧ, ДокСп, СписПроводимыхСписаний, СписокЗаказов);
			КонецЕсли;			

			Если Вопрос("Подтвердить запись?", "Да+Нет") = "Да" Тогда
				ЗафиксироватьТранзакцию();
			Иначе
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
			
			КвоДок = 0;
			Для Инд = 1 По СписПроводимыхСписаний.РазмерСписка() Цикл
				ДокСп.НайтиДокумент(СписПроводимыхСписаний.ПолучитьЗначение(Инд));
				Если ДокСп.Проведен() = 1 Тогда
					Если КвоДок >= 2 Тогда
						Предупреждение("Пауза 5, сек.", 5);
						КвоДок = 0;
					КонецЕсли;
					ДокСп.Провести();
					Сообщить("Проведен: " + Строка(ДокСп));
					КвоДок = КвоДок + 1;
				КонецЕсли;				
			КонецЦикла;
			
			НайтиПровестиВыпуски(СписокЗаказов);			
		Иначе
			Если Вопрос("Удалить данные распределения из списаний?", "Да+Нет") = "Да" Тогда
				НачатьТранзакцию();
				СписПроводимыхСписаний = ПолучитьСписокСписанийПоИнвентаризации();
				ОчиститьСписания(СписПроводимыхСписаний, 1, СписокЗаказов);
				НайтиПровестиВыпуски(СписокЗаказов);
				Если Вопрос("Подтвердить все изменения?", "Да+Нет") = "Да" Тогда
					ЗафиксироватьТранзакцию();
				Иначе
					ОтменитьТранзакцию();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры // ОбработкаСписаний

//======================================================================
Функция НормаКГФарша()
	Если Форма.тНормаКгФарша.Видимость() = 1 Тогда
		Если ПустоеЗначение(ТМЦ) = 0 Тогда
			Возврат ТМЦ.НормаКГФарша.Получить(ДатаДок);
		КонецЕсли;		
	КонецЕсли;
	
	Возврат "";
КонецФункции

Функция ТМЦЗамены()
	Если (ПустоеЗначение(ТМЦ) = 0) И (фТМЦЗамены = 1) Тогда
		Рег = СоздатьОбъект("Регистр.Остатки");
		Рег.УстановитьЗначениеФильтра("ТМЦ", ТМЦ, 1);
		Рег.ВыбратьДвижения(?(ПустоеЗначение(ДокНачала) = 0,ДокНачала, НачДата), ?(ПустоеЗначение(ДокКонца) = 0,ДокКонца, ДатаДок));
		СтрВывода = "";
		СписТМЦВУ = СоздатьОбъект("СписокЗначений");
		Пока Рег.ПолучитьДвижение() = 1 Цикл
			Если (ПустоеЗначение(Рег.ДляТМЦ) = 0) И (ПустоеЗначение(Рег.ДляУпаковки) = 0) Тогда
				Ключ = ЗначениеВСтрокуВнутр(Рег.ДляТМЦ) + "//" + ЗначениеВСтрокуВнутр(Рег.ДляУпаковки);
				Если СписТМЦВУ.НайтиЗначение(Ключ) = 0 Тогда
					СпрРВУ = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
					СпрРВУ.ИспользоватьВладельца(Рег.ДляТМЦ);
					Если СпрРВУ.НайтиПоРеквизиту("ВидУпаковки", Рег.ДляУпаковки, 0) = 1 Тогда
						Замены = СоздатьОбъект("Справочник.ЗаменыТМЦУпаковки");
						Замены.ИспользоватьВладельца(СпрРВУ.ТекущийЭлемент());
						Замены.ВыбратьЭлементы();
						Пока Замены.ПолучитьЭлемент() = 1 Цикл
							Если Замены.ПометкаУдаления() = 0 Тогда
								СтрТМЦ = Строка(Замены.ТМЦ);
								Если Найти(СтрВывода, СтрТМЦ + ";") = 0 Тогда
									СтрВывода = СтрВывода + СтрТМЦ + "; ";
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если СтрВывода <> "" Тогда
			СтрВывода = Лев(СтрВывода, СтрДлина(СтрВывода) - 2);
			Возврат СтрВывода;
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
КонецФункции

//======================================================================
Функция СуммаПрод()
	Возврат Окр(КвоПоФакту * ЦенаПродавца, 2);
КонецФункции // гл

Функция ОтклонениеПрод()
	Возврат Окр(КвоПоФакту * ЦенаПродавца, 2) - СуммаПоФакту;
КонецФункции // гл

//======================================================================
Процедура ИзИнвентаризаций()
	ОткрытьПодбор("Документ.Инвентаризация", "ФормаСписка");
КонецПроцедуры // ИзИнвентаризаций()

//======================================================================
Функция ПоследнийПоставщик()
	Если Форма.ПоследнийПоставщик.Видимость() = 1 Тогда
		Возврат ТМЦ.ПоследнийПоставщик.Получить(КонДата);
	КонецЕсли;	
КонецФункции // 

//======================================================================
Функция ТМЦСТакимЖеФаршем()
	Если ПустоеЗначение(ТМЦ) = 0 Тогда
		Возврат ТМЦ.ТМЦСТакимЖеФаршем;
	КонецЕсли;
	
	Возврат "";
КонецФункции // ТМЦСТакимЖеФаршем()

//======================================================================
Функция ОдинаковаяПродукцияРазнаяМарк()
	Если ПустоеЗначение(ТМЦ) = 0 Тогда
		Возврат ТМЦ.ОдинаковаяПрРазныеМарк;
	КонецЕсли;
	
	Возврат "";
КонецФункции

//======================================================================
Процедура ИзмКонтрагентИсключения()
	УстановкаСкидокТМЦ = глПолучитьДокументУстановкиСкидок(ДатаДок, КонтрагентДляИсключенияЦены);
КонецПроцедуры //

СписокПечати = СоздатьОбъект("СписокЗначений");
СписокПечати.ДобавитьЗначение(1, "Печать акта");
СписокПечати.ДобавитьЗначение(11, "Печать акта с оборотами");
СписокПечати.ДобавитьЗначение(2, "Печать описи полной");
СписокПечати.ДобавитьЗначение(22, "Печать описи полной с % по расходу");
СписокПечати.ДобавитьЗначение(3,  "Печать описи с остатками в заказах");
СписокПечати.ДобавитьЗначение(4,  "Печать описи только факт. к-во");
СписокПечати.ДобавитьЗначение(21, "Печать описи полной с проц. потерь");
СписокПечати.ДобавитьЗначение(23, "Печать описи оболочка");
СписокПечати.ДобавитьЗначение(30, "Бланк");
СписокПечати.ДобавитьЗначение(31, "Бланк с группами");
СписокПечати.ДобавитьЗначение(32, "Бланк с ценами");
СписокПечати.ДобавитьЗначение(33, "Бланк с группами и ценами");
СписокПечати.ДобавитьЗначение(34, "Бланк с фактическим количеством");
СписокПечати.ДобавитьЗначение(38, "Бланк со списание в пр-во");
СписокПечати.ДобавитьЗначение(35, "Для розницы");
//СписокПечати.ДобавитьЗначение(36, "Для розницы с группами");
СписокПечати.ДобавитьЗначение(37, "Для розницы с группами и ценами из документа");
СписокПечати.ДобавитьЗначение(5, "Отчет по движениям");
СписокПечати.ДобавитьЗначение(6, "Отчет по движениям (диалог)");
СписокПечати.ДобавитьЗначение(7, "Отчет по движениям (общий период)");
СписокПечати.ДобавитьЗначение(8, "Отчет по движениям (общий период) (диалог)");
СписокПечати.ДобавитьЗначение(51, "Отчет по резервам");
СписокПечати.ДобавитьЗначение(9, "Все видимые колонки");
СписокПечати.ДобавитьЗначение(10, "Открыть Заказы поставщикам (старые) с настройками");

ГруппаТ.ВыборГруппы(1);
Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
Сервис.ИспользоватьПланРаскраски(1);

ЕстьСРЗП = Метаданные.Справочник("ТМЦ").Реквизит("СхемаРасчетаЗП").Выбран();

//====================================================================== //--- УМК Сандомирский В.Ю. (16.10.14) Список колонок для настройки видимости
списВидимостьКолонок.ДобавитьЗначение("СхемаРасчетаЗП","Схема расчета зп");
списВидимостьКолонок.ДобавитьЗначение("Партия","Партия");
списВидимостьКолонок.ДобавитьЗначение("ЦенаБезНДС","Цена -"); 
списВидимостьКолонок.ДобавитьЗначение("Ед","Ед."); 
списВидимостьКолонок.ДобавитьЗначение("Коэффициент","Коэффициент");
списВидимостьКолонок.ДобавитьЗначение("НачОст","Нач.Ост. количество");			//--- НачОст
списВидимостьКолонок.ДобавитьЗначение("НачОстСумма","Нач.Ост. сумма");
списВидимостьКолонок.ДобавитьЗначение("Приход","Приход количество");			//--- Приход
списВидимостьКолонок.ДобавитьЗначение("ПриходСумма","Приход сумма");
списВидимостьКолонок.ДобавитьЗначение("Расход","Расход количество");
списВидимостьКолонок.ДобавитьЗначение("РасходСумма","Расход сумма");
списВидимостьКолонок.ДобавитьЗначение("КвоПоУчету","К-во учетн.");
списВидимостьКолонок.ДобавитьЗначение("КвоПоФакту","Факт. к-во"); 
списВидимостьКолонок.ДобавитьЗначение("фРасчетноеКвоПоФакту","Расчетное к-во по факту"); 
списВидимостьКолонок.ДобавитьЗначение("СуммаПоУчету","Сумма по учету");
списВидимостьКолонок.ДобавитьЗначение("СуммаПоФакту","Сумма по Факту");
списВидимостьКолонок.ДобавитьЗначение("СписаниеБП","Списание общ.");
списВидимостьКолонок.ДобавитьЗначение("Разница","Разница");
списВидимостьКолонок.ДобавитьЗначение("СуммаРазницы","Сумма разницы");
списВидимостьКолонок.ДобавитьЗначение("ГруппировкаВидов", "Групп. разр. видов упаковки");
списВидимостьКолонок.ДобавитьЗначение("КвоПоФакту1", "К-во по факту 1");
списВидимостьКолонок.ДобавитьЗначение("КвоПоФакту2", "К-во по факту 2");
списВидимостьКолонок.ДобавитьЗначение("КвоПоФакту3", "К-во по факту 3");
списВидимостьКолонок.ДобавитьЗначение("РаспределятьВСписания", "Распределять в списания");
списВидимостьКолонок.ДобавитьЗначение("фОстВыбранныхСкладов", "Остаток выбранного склада");
списВидимостьКолонок.ДобавитьЗначение("тНормаКгФарша", "Норма на кг. фарша");
списВидимостьКолонок.ДобавитьЗначение("кДатаПослРН", "Дата последней РН");
списВидимостьКолонок.ДобавитьЗначение("ЦенаПродавца", "Цена продавца");
списВидимостьКолонок.ДобавитьЗначение("ПоследнийПоставщик", "Последний поставщик");
списВидимостьКолонок.ДобавитьЗначение("ТМЦСТакимЖеФаршем", "ТМЦ с таким же фаршем");
списВидимостьКолонок.ДобавитьЗначение("ОдинаковаяПрРазныеМарк", "Одинаковое ТМЦ с такой же марк.");

ТЧТаблицаИсх = СоздатьОбъект("ТаблицаЗначений");
ОбработатьОкончаниеРедактирования = 0;

ТЗОстатки = СоздатьОбъект("ТаблицаЗначений");
ТЗОстатки.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
ТЗОстатки.НоваяКолонка("Ключ", "Строка");
ТЗОстатки.НоваяКолонка("ОстатокТовара", "Число", 15, 3);
ГруппаПродукцииДляЗаписиЦен = Константа.ГруппаПродукцииДляЗаписиЦен;
ИсхЦены = СоздатьОбъект("ТаблицаЗначений");

ТЗИтоги.НоваяКолонка("Реквизит", "Строка",, ,"Реквизит", 20);
ТЗИтоги.НоваяКолонка("Итог", "Число", 15, 2,"Итог", 5);
ОсновнаяФирма = Константа.БазФирма;