Перем спПодбора;

//*******************************************
Процедура Сформировать()
	
	СпрКоды = СоздатьОбъект("Справочник.КодыНоменклатурыКонтрагентов");
	СписокНоменклатуры.ВыбратьСтроки();
	Пока СписокНоменклатуры.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(СписокНоменклатуры.КодНоменклКонтрагента) = 1 Тогда
			Сообщить("Строка №" + Строка(СписокНоменклатуры.НомерСТроки) + " не заполнен Коды номенклатуры контрагента. Элемент не создан", "!!");
            Продолжить;		
		КонецЕсли;
		Если ПустоеЗначение(СписокНоменклатуры.Номенклатура) = 1 Тогда
			Сообщить("Строка №" + Строка(СписокНоменклатуры.НомерСТроки) + " не заполнена Номенклатура. Элемент не создан", "!!");
            Продолжить;		
		КонецЕсли;
		Если ПустоеЗначение(СписокНоменклатуры.Контрагент) = 1 Тогда
			Сообщить("Строка №" + Строка(СписокНоменклатуры.НомерСТроки) + " не заполнен Контрагент. Элемент не создан", "!!");
            Продолжить;		
		КонецЕсли;
		Если ПустоеЗначение(СписокНоменклатуры.НаименованиеНоменклКонтрагента) = 1 Тогда
			Сообщить("Строка №" + Строка(СписокНоменклатуры.НомерСТроки) + " не заполнено Наименование номенкл. контрагента. Элемент не создан", "!!");
            Продолжить;		
		КонецЕсли;
		
		Если ПустоеЗначение(СписокНоменклатуры.СправочникКодыКонтрагентов) = 0 Тогда
			СпрКоды.НайтиЭлемент(СписокНоменклатуры.СправочникКодыКонтрагентов)
		Иначе
			СпрКоды.Новый();
		КонецЕсли;
		СпрКоды.Наименование = СписокНоменклатуры.НаименованиеНоменклКонтрагента;
		СпрКоды.КодКонтрагента = СписокНоменклатуры.КодНоменклКонтрагента;
		СпрКоды.Контрагент = СписокНоменклатуры.Контрагент;
		СпрКоды.Номенклатура = СписокНоменклатуры.Номенклатура; 
		Если глКодКонтрагентаУникален(СпрКоды.ТекущийЭлемент(), СпрКоды.Контрагент, СпрКоды.Номенклатура, СпрКоды.КодКонтрагента, СпрКоды.Выбран()) = 1 Тогда
			СпрКоды.Записать();
		Иначе
			Сообщить("Строка №" + Строка(СписокНоменклатуры.НомерСтроки) + " значения для ключа ""Контрагент-Номенклатура"" не уникалено. Элемент не записан.","!!");
			Продолжить;
		КонецЕсли;
		СписокНоменклатуры.СправочникКодыКонтрагентов = СпрКоды.ТекущийЭлемент();
	КонецЦикла;

	Сообщить("Обработка окончена.");
	
КонецПроцедуры

Процедура ДобавитьСтроку()
	
	СписокНоменклатуры.НоваяСтрока();
    СписокНоменклатуры.Контрагент = Контрагент;
	СписокНоменклатуры.Номерпп = СписокНоменклатуры.НомерСтроки;
			
КонецПроцедуры

Процедура УдалитьСтроку()
	ТекСтр = СписокНоменклатуры.ТекущаяСтрока();
	Если ТекСтр <> 0 Тогда
		СписокНоменклатуры.УдалитьСтроку();
	КонецЕсли;
КонецПроцедуры

Процедура ПриИзмененииСпрКодыНоменклатурыКонтрагента(ТекСправочник,ТекСтр, ТекКол)
	СписокНоменклатуры.УстановитьЗначение(ТекСтр, ТекКол, ТекСправочник);
	СписокНоменклатуры.УстановитьЗначение(ТекСтр, "Контрагент", ТекСправочник.Контрагент);
	СписокНоменклатуры.УстановитьЗначение(ТекСтр, "Номенклатура", ТекСправочник.Номенклатура);
	СписокНоменклатуры.НаименованиеНоменклКонтрагента = ТекСправочник.Наименование;
	СписокНоменклатуры.КодНоменклКонтрагента = ТекСправочник.КодКонтрагента;
КонецПроцедуры

Процедура ДвойнойЩелчокСписокНоменклатуры()
	ТекКол = СписокНоменклатуры.ТекущаяКолонка();
	ТекСтр = СписокНоменклатуры.ТекущаяСтрока();
	Если (ТекКол <> "") и (ТекСтр <> 0) Тогда
		Если ТекСтр = "НомераСтроки" Тогда
			Возврат;
		ИначеЕсли ТекКол = "Контрагент" Тогда		    
		    СпрКонтрагент = СоздатьОбъект("Справочник.Контрагенты");
			Если СпрКонтрагент.Выбрать("Выберите Контрагента", "ДляВыбора") <> 0 Тогда
			    СписокНоменклатуры.УстановитьЗначение(ТекСтр, ТекКол, СпрКонтрагент.ТекущийЭлемент());
			КонецЕсли;
		ИначеЕсли ТекКол = "Номенклатура" Тогда		    
		    СпрНоменклатура = СоздатьОбъект("Справочник.ТМЦ");
			Если СпрНоменклатура.Выбрать("Выберите Номенклатуру", "ДляВыбора") <> 0 Тогда
			    СписокНоменклатуры.УстановитьЗначение(ТекСтр, ТекКол, СпрНоменклатура.ТекущийЭлемент());
				СписокНоменклатуры.УстановитьЗначение(ТекСтр, "Группа", СпрНоменклатура.ТекущийЭлемент().Родитель);
			КонецЕсли;
		ИначеЕсли ТекКол = "СправочникКодыКонтрагентов" Тогда		    
			СпрКодыНоменклатурыКонтрагентов = СоздатьОбъект("Справочник.КодыНоменклатурыКонтрагентов");
			Если СпрКодыНоменклатурыКонтрагентов.Выбрать("Выберите Номенклатуру кодов контрагента", "ДляВыбора") <> 0 Тогда
				ТекСправочник = СпрКодыНоменклатурыКонтрагентов.ТекущийЭлемент();
				ПриИзмененииСпрКодыНоменклатурыКонтрагента(ТекСправочник,ТекСтр, ТекКол);
			КонецЕсли;
		ИначеЕсли ТекКол = "НаименованиеНоменклКонтрагента" Тогда
			НаименованиеНоменклКонтрагента = СписокНоменклатуры.НаименованиеНоменклКонтрагента;
			Если ВвестиСтроку(НаименованиеНоменклКонтрагента,"Введите наименование контрагента",50) = 1 Тогда
			    СписокНоменклатуры.НаименованиеНоменклКонтрагента = НаименованиеНоменклКонтрагента;
			КонецЕсли;			
		ИначеЕсли ТекКол = "КодНоменклКонтрагента" Тогда
			КодНоменклКонтрагента = СписокНоменклатуры.КодНоменклКонтрагента;
			Если ВвестиСтроку(КодНоменклКонтрагента,"Введите код номенклатуры контрагента",25) = 1 Тогда
			    СписокНоменклатуры.КодНоменклКонтрагента = КодНоменклКонтрагента;
			КонецЕсли;				
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//*******************************************
Процедура ОбработкаПодбора(Выб,Конт) 	
	спПодбора.ДобавитьЗначение(Выб);
КонецПроцедуры

//*******************************************
Процедура Подбор(спЗнач, ВидСпр, Реж)
	Перем ВыбЗначение,Тек,Фрм;
	спПодбора = спЗнач;
	ОткрытьПодбор("Справочник."+ВидСпр,,Фрм,Реж,Тек);
	Фрм.ВыборГруппы(1);
КонецПроцедуры

//*******************************************
Процедура Удалить(Список,Позиция)
	Попытка
		Список.УдалитьЗначение(Позиция);
	Исключение КонецПопытки;
КонецПроцедуры 

Процедура ЗаполнитьСписок(Очищать = 1, Отбор =0)
	
	Если ПустоеЗначение(Контрагент) = 1 Тогда
		Предупреждение("Контраген не заполнен");
		Возврат;
	КонецЕсли;
	Состояние("Выполнение обработки.");
	
	Если Очищать = 1 Тогда
		СписокНоменклатуры.УдалитьСтроки();
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС()
	|ОбрабатыватьДокументы все;
	|Номенклатура = Справочник.ТМЦ.ТекущийЭлемент;
	|Группа = Справочник.ТМЦ.Родитель;
	|Группировка Номенклатура упорядочить по Номенклатура.Родитель без групп; " +
	 ?(Отбор = 1,"Условие(Номенклатура В СписокВыбНоменкл);","") + "
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока Запрос.Группировка(1) = 1 Цикл
		СписокНоменклатуры.НоваяСтрока();
		СписокНоменклатуры.Номерпп = СписокНоменклатуры.НомерСтроки;
		СписокНоменклатуры.Контрагент =  Контрагент;
		СписокНоменклатуры.Номенклатура = Запрос.Номенклатура;
		СписокНоменклатуры.СправочникКодыКонтрагентов = глНайтиНоменклатуруКонтрагента(СписокНоменклатуры.Контрагент, СписокНоменклатуры.Номенклатура,0);
		СписокНоменклатуры.НаименованиеНоменклКонтрагента = ?(ПустоеЗначение(СписокНоменклатуры.СправочникКодыКонтрагентов) = 0,
		                            СписокНоменклатуры.СправочникКодыКонтрагентов.Наименование,Запрос.Номенклатура.Наименование);
		СписокНоменклатуры.КодНоменклКонтрагента = ?(ПустоеЗначение(СписокНоменклатуры.СправочникКодыКонтрагентов) = 0,
		                            СписокНоменклатуры.СправочникКодыКонтрагентов.КодКонтрагента,"");	
		СписокНоменклатуры.Группа = Запрос.Группа;
	КонецЦикла; 
	
	Состояние("Выполнено.");
	
КонецПроцедуры

Процедура ЗаполнитьСписокПоКонтрагенту()
	
	Если ПустоеЗначение(Контрагент) = 1 Тогда
		Предупреждение("Контраген не заполнен");
		Возврат;
	КонецЕсли;
	
	СписокНоменклатуры.УдалитьСтроки();
	
	Состояние("Выполнение обработки.");
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС()
	|СправочникКодыКонтрагентов = Справочник.КодыНоменклатурыКонтрагентов.ТекущийЭлемент;
	|Контрагент_ = Справочник.КодыНоменклатурыКонтрагентов.Контрагент;
	|Номенклатура = Справочник.КодыНоменклатурыКонтрагентов.Номенклатура;
	|КодНоменклКонтрагента = Справочник.КодыНоменклатурыКонтрагентов.КодКонтрагента;
	|Группа = Справочник.КодыНоменклатурыКонтрагентов.Номенклатура.Родитель;
	|НаименованиеНоменклКонтрагента = Справочник.КодыНоменклатурыКонтрагентов.Наименование;
	|Группировка СправочникКодыКонтрагентов;
	|Условие(СправочникКодыКонтрагентов.ПометкаУдаления() = 0);
	|Условие(Контрагент_ = Контрагент );
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	Пока Запрос.Группировка(1) = 1 Цикл
		СписокНоменклатуры.НоваяСтрока();
		СписокНоменклатуры.Номерпп = СписокНоменклатуры.НомерСтроки;
		СписокНоменклатуры.Контрагент =  Запрос.Контрагент_;
		СписокНоменклатуры.Группа = Запрос.Группа;
		СписокНоменклатуры.Номенклатура = Запрос.Номенклатура;
		СписокНоменклатуры.СправочникКодыКонтрагентов = Запрос.СправочникКодыКонтрагентов;
		СписокНоменклатуры.НаименованиеНоменклКонтрагента = Запрос.НаименованиеНоменклКонтрагента;
		СписокНоменклатуры.КодНоменклКонтрагента = Запрос.КодНоменклКонтрагента;	
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьКодКонтрагента()
	
	Если ПустоеЗначение(КодКонтрагента) = 1 Тогда
		Предупреждение("Установите код контрагента.");
		Возврат;
	КонецЕсли;
	
	СписокНоменклатуры.ВыбратьСтроки();
	
	Пока СписокНоменклатуры.ПолучитьСтроку() = 1 Цикл
		СписокНоменклатуры.КодНоменклКонтрагента = КодКонтрагента;
	КонецЦикла;
	
КонецПроцедуры

СписокНоменклатуры.НоваяКолонка("Номерпп", "Число",,,"№",5);
СписокНоменклатуры.НоваяКолонка("Контрагент", "Справочник.Контрагенты",,,"Контрагент",10);
СписокНоменклатуры.НоваяКолонка("Группа","Справочник.ТМЦ",,,"Группа",7);
СписокНоменклатуры.НоваяКолонка("Номенклатура","Справочник.ТМЦ",,,"Номенклатура",20);
СписокНоменклатуры.НоваяКолонка("СправочникКодыКонтрагентов", "Справочник.КодыНоменклатурыКонтрагентов",,,"Справочник коды контрагентов",15);
СписокНоменклатуры.НоваяКолонка("НаименованиеНоменклКонтрагента", "Строка", 100,,"Наименование контрагента",10);
СписокНоменклатуры.НоваяКолонка("КодНоменклКонтрагента", "Строка", 25,,"Код контрагента",25);


