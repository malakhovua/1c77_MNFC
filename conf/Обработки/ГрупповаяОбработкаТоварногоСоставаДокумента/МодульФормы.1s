// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем Документ;			// обрабатываемый документ
Перем Значение;			// значение, определяющее действие

Перем ЕстьКолонкаЦенаБезНДС;	// флаг того, что в товарном составе присутствует колонка "Цена" 
Перем ЕстьКолонкаСкидка;		// флаг того, что в товарном составе присутствует колонка "Скидка" 
Перем ЕстьКолонкаКатегорияЦен;	// флаг того, что в товарном составе присутствует колонка "КатегорияЦен" 
Перем ЕстьКолонкаНоваяЦена;	// флаг того, что в товарном составе присутствует колонка "Новая цена" 
Перем КатегорияЦенДокумента;	//  
Перем ЕстьКолонкаЦенаСНДС;		// флаг того, что в товарном составе присутствует колонка "ЦенаCНДС"
Перем ЕстьКолонкаСуммаСНДС;		// флаг того, что в товарном составе присутствует колонка "СуммаСНДС"
Перем ЕстьКолонкаНДС;           // флаг того, что в товарном составе присутствует колонка "НДС"

Перем ЕстьКолонкаЕдиница;		// флаг того, что в товарном составе присутствует колонка "Ед"
Перем ЕстьКолонкаКоэффициент;	// флаг того, что в товарном составе присутствует колонка "Коэффициент" 
Перем ЕстьКолонкаВУП, ЕстьКолонкаДопКво; // флаг того, что в товарном составе присутствует колонка "ВУП" 
Перем ЕстьКолонкаЦенаБезСкидки;
Перем ЕстьДокументУстановкиСкидок;
    
Перем НомерДействияУдаления; 
Перем НомерДействияИзмКолНаПроц; 
Перем НомерДействияИзмКолНаАбсЧисло; 
Перем НомерДействияОкрКол;                           
Перем НомерДействияДобИзДок,НомерДействияДобИзДокРН;
Перем НомерДействияИзмЦеныНаПроц; 
Перем НомерДействияИзмЦеныНаАбсЧисло; 
Перем НомерДействияОкрЦены; 
Перем НомерДействияРазнСуммыПоКол; 
Перем НомерДействияРазнСуммыПоСуммам;
Перем НомерДействияЗаполнЦеныИзСпр;
Перем НомерДействияЗаполнНовойЦеныИзСпр;
Перем НомерДействияСкидкаПроцентом;
Перем НомерДействияСкидкаСуммой;

Перем ВесьТовСоставДокумента;	// если документ - счет-факутра Или регистрация получаемого СФ,
								// то это таблица значений, содержащая все позиции документа

Перем ЕстьПолеВалюта;			// флаг того, что в шапке документа присутствует поле "Валюта" 

Перем ЗначениеПометки,ЗначениеНеПометки;
        
Перем БылиИзменения;	// флаг того, что были изменения в составе

Перем ПорядокОкругления;
Перем ИмяКолонкиВУП;

// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
// Возвращаемое значение:
// 0 - невозможно получить цену товара
// 1 - полный успех.
// 2 - частичный успех. Для заданной единицы цена не была найдена,
//     но найдена для единицы с ближайшем по значению коэффициентом
//     При этом цена будет пересчитана
Функция ПолучитьЦенуТовара(КатегорияЦены,Товар,Единица=0,ДатаЦены=0,Цена=0,Валюта=0,Сообщен="",Элемент=0)
	Перем ИспользуемаяЕдиница;
	Перем ЦенаТовара;
	
	Перем ВремЦена, ВремВалюта, ВремЕдиница;
	
	Перем Результат;
	                         
	Результат = 0;
	
	// обработка ошибок
	Если ПустоеЗначение(КатегорияЦены) = 1 Тогда
	    Сообщен = "Не задан тип цен";
		Возврат 0;
	ИначеЕсли ПустоеЗначение(Товар) = 1 Тогда
	    Сообщен = "Не задан товар";
		Возврат 0;
	КонецЕсли;
	
	Если ПустоеЗначение(Единица)=1 Тогда
	    // если не задана единица, то считаем, что указали базовую
		ИспользуемаяЕдиница = глВернутьБазовуюЕдиницуТовара(Товар);
	Иначе
		// нужно проверить, что заданая единица принадлежит выбранному товару
		Если Единица.Владелец <> Товар Тогда
			Сообщен = "Единица принадлежит другому товару";
			Возврат 0;
		КонецЕсли;
		ИспользуемаяЕдиница = Единица;
	КонецЕсли;
	
	Если ПустоеЗначение(ДатаЦены)=1 Тогда
	    // если не указали дату, то считаем, что дата - рабочая.
		ДатаЦены = РабочаяДата();
	КонецЕсли;
	
	// пытаемся найти цену в заданной категории
	ЦенаТовара = глВернутьЦену(Товар, КатегорияЦены);
			
	Если ПустоеЗначение(ЦенаТовара) = 1 Тогда
		// отсутствует цена товара в категории цен
		Сообщен = "Отсутствует цена товара " + СокрЛП(Товар.Наименование) + " в категории цен " +СокрЛП(КатегорияЦены.Наименование);
		Возврат 0;
	КонецЕсли;
	
	// нашли товар в заданной категории
	ЦенаТовара.ИспользоватьДату(ДатаЦены);
	ВремЦена = ЦенаТовара.Цена;
	Валюта =  ЦенаТовара.Валюта;
	ВремЕдиница = ЦенаТовара.Единица;
	Элемент = ЦенаТовара.ТекущийЭлемент();

	Если ВремЕдиница <> ИспользуемаяЕдиница Тогда
		// нашли цену, но за другую упаковку
		// нужно пересчитать цену
		Цена = ВремЦена * ИспользуемаяЕдиница.Коэффициент / ВремЕдиница.Коэффициент;
		Результат = 2;
		Сообщен = "Цена пересчитана из цены за единицу (" + ВремЕдиница.Наименование + ")";
	Иначе
		Цена = ВремЦена;
		Результат = 1;
	КонецЕсли;

	// не нашли цену
	Возврат Результат;
	
КонецФункции	// ПолучитьЦенуТовара

// ===============================
// Название: ДоступностьКнопкиВыбораЗначения
// Параметры: 
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// 
// Описание:
//    в зависимости от выбранного действия изменяет доступность кнопки выбора значения
//
Процедура ДоступностьКнопкиВыбораЗначения()
	Если (Действие.ТекущаяСтрока() = НомерДействияУдаления) Тогда
		Форма.КнопкаВыбораЗначения.Доступность(0);
	Иначе
		Форма.КнопкаВыбораЗначения.Доступность(1);
	КонецЕсли;
КонецПроцедуры   // ДоступностьКнопкиВыбораЗначения


// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
// Название: ГрупповаяПометка
// Параметры: 
//   Режим
//		1 - пометить все
//		2 - снять пометку
//		3 - инвертировать пометку
//		4 - пометить товары из группы 
//		5 - пометить товары из категории
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Кнопки "Пометить все","Снять пометку","Инвертировать пометку".
// Описание:
//    в зависимости от значения параметра выполняет пометку всех позиций, 
//    снимает пометку со всех позиций Или инвертирует ее
//
Процедура ГрупповаяПометка(Режим)
	Перем НомерСтроки;
	Перем Область;
	Перем КоординатыЯчейки;
	Перем Пометка;                      
	Перем ГруппаПомечТоваров, КатегорияПомечТоваров, КатегорииТовара;
            
	Если Режим=4 Тогда				// пометить товары из группы
		ГруппаПомечТоваров = СоздатьОбъект("Справочник.ТМЦ");
		ГруппаПомечТоваров.ВыборГруппы(1);

		Если ГруппаПомечТоваров.Выбрать("Выбор группы помечаемой номенклатуры","Форма списка")=0 Тогда
			Возврат;
		КонецЕсли;  

		Если ГруппаПомечТоваров.ЭтоГруппа()=0 Тогда
			ГруппаПомечТоваров = ГруппаПомечТоваров.Родитель.ТекущийЭлемент();
		Иначе
			ГруппаПомечТоваров = ГруппаПомечТоваров.ТекущийЭлемент();
		КонецЕсли;

	ИначеЕсли Режим=5 Тогда			// пометить товары из категории
		КатегорияПомечТоваров 	= СоздатьОбъект("Справочник.ВидыКатегорий");
		КатегорииТовара 		= СоздатьОбъект("Справочник.КатегорииТоваров");
		Если КатегорияПомечТоваров.Выбрать("Выбор категории помечаемой номенклатуры","Форма списка")=0 Тогда
			Возврат;
		КонецЕсли;  

	КонецЕсли;	
	                                          
	ТовСостав.ВыбратьСтроки();
	Пока ТовСостав.ПолучитьСтроку()>0 Цикл
		Если Режим=1 Тогда
			ТовСостав.Пометка = ЗначениеПометки;
		ИначеЕсли Режим=2 Тогда
			ТовСостав.Пометка = ЗначениеНеПометки;
		ИначеЕсли Режим=3 Тогда
			ТовСостав.Пометка = 3 - ТовСостав.Пометка;
		ИначеЕсли Режим=4 Тогда 
			Если (ТовСостав.Товар.ПринадлежитГруппе(ГруппаПомечТоваров)=1) Или (ГруппаПомечТоваров.Выбран()=0) Тогда
				ТовСостав.Пометка = ЗначениеПометки;
			КонецЕсли;                           
		ИначеЕсли Режим=5 Тогда 
			КатегорииТовара.ИспользоватьВладельца(ТовСостав.Товар.ТекущийЭлемент());
			Если КатегорииТовара.НайтиПоРеквизиту("Категория",КатегорияПомечТоваров.ТекущийЭлемент(),0)>0 Тогда
				ТовСостав.Пометка = ЗначениеПометки;
			КонецЕсли;                           
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


// ===============================
// Название: ВыборЭлементаВСпискеДействий
// Параметры:
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Список "Действие"
// Описание:
//   обнуляем значение и изменяет доступность кнопки выбора значения
//
Процедура ИзмДействие()
	ЗначениеВВидеСтроки = "";
	Значение = 0;
	ДоступностьКнопкиВыбораЗначения();
КонецПроцедуры


// ===============================
// Название: ПриДвойномЩелчкеНаТаблице
// Параметры:
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//   таблица ТовСостав
// Описание:
//   изменяет пометку
//
Процедура ПриДвойномЩелчкеНаТаблице()

	ТовСостав.Пометка = 3 - ТовСостав.Пометка;

КонецПроцедуры       // ПриДвойномЩелчкеНаТаблице


// ===============================
// Название: ВыборЗначения
// Параметры:
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Кнопка "Значение",.
// Описание:
//   открывает окно выбора значения
//
Процедура ВыборЗначения()

	Перем ВыбЗначение;

	Если Действие.ТекущаяСтрока()=НомерДействияИзмКолНаПроц Тогда // Изменить кол-во на (в %)
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод величины изменения количества (в %)",6,2);
		
	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияИзмКолНаАбсЧисло Тогда // Изменить кол-во на (в ед. изм.)
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод величины изменения количества (в ед. изм.)",12,3);
		
	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияОкрКол Тогда // Округлить кол-во до;
		ВыбЗначение = 0;
		Позиция = 0;
		фВыбрали = ПорядокОкругления.ВыбратьЗначение(ВыбЗначение,"Ввод порядка округления количества",Позиция,,2);
		
	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияДобИзДок Тогда // Добавить из документа
		ВыбЗначение = СоздатьОбъект("Документ");
		
		Виды = "";
		КвоДокум = Метаданные.Документ();
		Для Инд = 1 По КвоДокум Цикл   
			ВидДок = Метаданные.Документ(Инд).Идентификатор;
			Если ((глЕстьРеквизитМнЧ("ТМЦ",ВидДок)=ДА) Или (глЕстьРеквизитМнЧ("Услуга",ВидДок)=ДА) ) 
					И (глЕстьРеквизитМнЧ("Кво",ВидДок)=ДА) Тогда
					Виды = Виды+","+ВидДок;
			КонецЕсли;	
		КонецЦикла;	
		ВыбЗначение.ВидыДляВыбора(Сред(Виды,2));
		фВыбрали = ВыбЗначение.Выбрать("Выбор документа",);
		
	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияДобИзДокРН Тогда // Добавить из документа
		ВыбЗначение = СоздатьОбъект("Документ.РасходнаяНакладная");
		
		фВыбрали = ВыбЗначение.Выбрать("Выбор документа",);

	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияИзмЦеныНаПроц Тогда // Изменить цену на (в %)
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод величины изменения цены (в %)",6,2);
		
	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияИзмЦеныНаАбсЧисло Тогда // Изменить цену на (в ед. валюты)
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод величины изменения цены (в ед. валюты)",15,2);
		
	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияРазнСуммыПоКол Тогда // Разнести сумму по количеству
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод разносимой суммы",15,2);
		
	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияРазнСуммыПоСуммам Тогда // Разнести сумму по суммам
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод разносимой суммы",15,2);
		
	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияОкрЦены Тогда // Округлить цены до;
		ВыбЗначение = 0;
		Позиция = 0;
		фВыбрали  = ПорядокОкругления.ВыбратьЗначение(ВыбЗначение,"Ввод порядка округления цен",Позиция,,2);

	ИначеЕсли (Действие.ТекущаяСтрока()=НомерДействияЗаполнЦеныИзСпр) ИЛИ (Действие.ТекущаяСтрока() = НомерДействияЗаполнНовойЦеныИзСпр) Тогда // Заполнить из прайса
		ВыбЗначение = СоздатьОбъект("Справочник.КатегорииЦен");
		фВыбрали = ВыбЗначение.Выбрать("Тип цены",);
		
	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияСкидкаПроцентом Тогда // Разнести сумму по количеству
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод величины скидки (в %)",6,2);
		
	ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияСкидкаСуммой Тогда // Разнести сумму по суммам
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод суммы скидки",15,2);

	КонецЕсли;

	Если фВыбрали = 0 Тогда
		Возврат;
	КонецЕсли;

	ТипВыбЗначение = ТипЗначенияСтр(ВыбЗначение);
	Если ТипВыбЗначение = "Справочник" Тогда
		ЗначениеВВидеСтроки = ВыбЗначение.Наименование;
		Значение 			= ВыбЗначение.ТекущийЭлемент();

	ИначеЕсли ТипВыбЗначение = "Документ" Тогда
		ЗначениеВВидеСтроки = Строка(ВыбЗначение);
		Значение			= ВыбЗначение.ТекущийДокумент();

	ИначеЕсли ТипВыбЗначение = "Перечисление" Тогда
		ЗначениеВВидеСтроки = Строка(ВыбЗначение);
		Значение			= ВыбЗначение;

	ИначеЕсли ТипВыбЗначение = "Число" Тогда
		Если Действие.ТекущаяСтрока() = НомерДействияСкидкаПроцентом Тогда
			ВыбЗначение = ?(ВыбЗначение > 100, 100, ВыбЗначение);
		КонецЕсли;
		ЗначениеВВидеСтроки = Строка(ВыбЗначение);
		Значение			= ВыбЗначение;

	ИначеЕсли ТипВыбЗначение = "Строка" Тогда
		ЗначениеВВидеСтроки = ВыбЗначение;
		Значение			= ВыбЗначение;

	КонецЕсли;
КонецПроцедуры


// ===============================
// Название: Выполнить
// Параметры:
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Кнопка "Выполнить",.
// Описание:
//   выполняет групповое действие
//
Процедура Выполнить()
	Перем НомерСтроки;
		
	Перем КоординатыЯчейки,Область;

	Перем ЧислоОбработанныхПозиций;
                
	Перем БазоваяЕдиница;
	Перем Цена, Валюта;
	
	Перем ОбщееКоличество, ОбщаяСумма;	 
	Перем ЧислоСтрок;
	
	Перем СоставКопируемогоДокумента;
	Перем УКопирДокумЕстьКолонкаЦенаБезНДС,УКопирДокумЕстьКолонкаЕдиница,УКопирДокумЕстьКолонкаКоэффициент,УКопирДокумЕстьПолеВалюта;        
	Перем НадоДобавлятьНовуюПозицию,НомерСтрокиВДокументе;
	Перем ТоварДляПоиска;
	
	Если (ПустоеЗначение(Значение)=1) Тогда // пустое значение
		Если (Действие.ТекущаяСтрока()<>НомерДействияУдаления) Тогда 
			Предупреждение("Не задано значение");
			Возврат;
		КонецЕсли;
	КонецЕсли;
                      
		
	ЧислоОбработанныхПозиций = 0;
    
	Если (Действие.ТекущаяСтрока()=НомерДействияРазнСуммыПоКол) Тогда // Разнести сумму по кол-ву
		// считаем общее количество всех помеченных позиций
		
		ОбщееКоличество = 0;
		ТовСостав.ВыбратьСтроки();
		Пока ТовСостав.ПолучитьСтроку()>0 Цикл
			Если ТовСостав.Пометка=ЗначениеНеПометки Тогда
				Продолжить;
			КонецЕсли;	

			ОбщееКоличество = ОбщееКоличество + ТовСостав.Кво;
		КонецЦикла;	
	
	ИначеЕсли (Действие.ТекущаяСтрока()=НомерДействияРазнСуммыПоСуммам) Или (Действие.ТекущаяСтрока()=НомерДействияСкидкаСуммой) Тогда
		// считаем общую сумму всех помеченных позиций
		
		ОбщаяСумма = 0;
		ТовСостав.ВыбратьСтроки();
		Пока ТовСостав.ПолучитьСтроку() = 1 Цикл
			Если ТовСостав.Пометка=ЗначениеНеПометки Тогда
				Продолжить;
			КонецЕсли;
			
			Если Действие.ТекущаяСтрока()=НомерДействияСкидкаСуммой Тогда
				ОбщаяСумма = ОбщаяСумма + ТовСостав.СуммаБезСкидки;
			Иначе            
				Если (ЕстьКолонкаЦенаБезНДС = 1)
				И (Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС) Тогда 
					ОбщаяСумма = ОбщаяСумма + ТовСостав.СуммаБезНДС;
				Иначе	
					ОбщаяСумма = ОбщаяСумма + ТовСостав.СуммаСНДС;
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;

	Если Действие.ТекущаяСтрока()=НомерДействияСкидкаСуммой Тогда
	    Если Значение > ОбщаяСумма Тогда
   			Предупреждение("Сумма скидки ( "+Значение+" ) не может быть больше, чем общая сумма всех помеченных позиций ( "+ОбщаяСумма+" ).");
			Возврат;
	    КонецЕсли;
	КонецЕсли;	
	
	Если Действие.ТекущаяСтрока()=НомерДействияУдаления Тогда 		// Удалить
		ЧислоСтрок = ТовСостав.КоличествоСтрок();
		Для НомерСтроки = 1 По ЧислоСтрок Цикл
			Если ТовСостав.ПолучитьЗначение(ЧислоСтрок+1-НомерСтроки,"Пометка")=ЗначениеПометки Тогда
				ТовСостав.УдалитьСтроку(ЧислоСтрок+1-НомерСтроки);
				ЧислоОбработанныхПозиций = ЧислоОбработанныхПозиций + 1;
			КонецЕсли;	
		КонецЦикла;	

	ИначеЕсли (Действие.ТекущаяСтрока()=НомерДействияДобИзДок) ИЛИ (Действие.ТекущаяСтрока()=НомерДействияДобИзДокРН) Тогда // Добавить из документа
		
		СоставКопируемогоДокумента = СоздатьОбъект("ТаблицаЗначений");
		Значение.ВыгрузитьТабличнуюЧасть(СоставКопируемогоДокумента);    
			
		Если ( Значение.Вид() = "ВозвратнаяНакладная" ) ИЛИ ( Значение.Вид() = "ЗаказКлиента" ) Тогда //--- УМК Сандомирский В.Ю,
			ЕстьКолонкаВУПСКП = ?(глЕстьРеквизитМнЧ("ВУП", Значение.Вид()) = Да, 1, 0);
			ИмяКолонкиВУПСКП = "ВУП";
		Иначе
			ЕстьКолонкаВУПСКП = ?(глЕстьРеквизитМнЧ("ВидУпаковки", Значение.Вид()) = Да, 1, 0);
			ИмяКолонкиВУПСКП = "ВидУпаковки";
		КонецЕсли;
		
		ЕстьКолонкаВУПСКП = Мин(ЕстьКолонкаВУП, ЕстьКолонкаВУПСКП);
		ЕстьКолонкаДопКвоКП = ?(глЕстьРеквизитМнЧ("ДопКво", Значение.Вид()) = Да, 1, 0);
		ЕстьКолонкаДопКвоКП = Мин(ЕстьКолонкаДопКвоКП, ЕстьКолонкаДопКво);
		ЕстьКолонкаЦенаБезСкидкиКП = ?(глЕстьРеквизитМнЧ("ЦенаБезСкидки", Значение.Вид()) = Да, 1, 0);
	        
		Если глЕстьРеквизитМнЧ("Кво",Значение.Вид()) = Нет Тогда				
			Предупреждение("Выбранный документ не содержит товарный состав");	
			Возврат;
		КонецЕсли;
		
		Попытка
			Если Значение.ЧтоПродаем <> Перечисление.ЧтоПродаем.ТМЦ Тогда
				Предупреждение("Выбранный документ не содержит товарный состав");	
				Возврат;
			КонецЕсли;                                
		Исключение
		КонецПопытки;
		
		Попытка
			Если Значение.ЧтоПриходуем <> Перечисление.ЧтоПриходуем.ТМЦ Тогда
				Предупреждение("Выбранный документ не содержит товарный состав");	
				Возврат;
			КонецЕсли;                                
		Исключение
		КонецПопытки;

		Если глЕстьРеквизитМнЧ("ТМЦ",Значение.Вид()) = Да Тогда				
			СоставКопируемогоДокумента.НоваяКолонка("Товар");
			СоставКопируемогоДокумента.ВыбратьСтроки();
			Пока СоставКопируемогоДокумента.ПолучитьСтроку() = 1 Цикл
				СоставКопируемогоДокумента.Товар = СоставКопируемогоДокумента.ТМЦ;
			КонецЦикла;

		ИначеЕсли глЕстьРеквизитМнЧ("Услуга",Значение.Вид()) = Да Тогда				
			СоставКопируемогоДокумента.НоваяКолонка("Товар");
			СоставКопируемогоДокумента.ВыбратьСтроки();
			Пока СоставКопируемогоДокумента.ПолучитьСтроку() = 1 Цикл
				СоставКопируемогоДокумента.Товар = СоставКопируемогоДокумента.Услуга;
			КонецЦикла;

		Иначе	
			Предупреждение("Выбранный документ не содержит товарный состав");	
			Возврат;
		КонецЕсли;
		
		спРеквизитовВМнЧ = СоздатьОбъект("СписокЗначений");
		КвоКолонок = СоставКопируемогоДокумента.КоличествоКолонок();
		Для Инд = 1 По КвоКолонок Цикл
			спРеквизитовВМнЧ.ДобавитьЗначение(ВРег(СоставКопируемогоДокумента.ПолучитьПараметрыКолонки(Инд)));
		КонецЦикла;
	
		УКопирДокумЕстьКолонкаЦенаБезНДС 	= ?(спРеквизитовВМнЧ.НайтиЗначение("ЦЕНАБЕЗНДС"	) = 0, 0, 1);
		УКопирДокумЕстьКолонкаСкидка 		= ?(спРеквизитовВМнЧ.НайтиЗначение("СКИДКА"		) = 0, 0, 1);
		УКопирДокумЕстьКолонкаЦенаСНДС 		= ?(спРеквизитовВМнЧ.НайтиЗначение("ЦЕНАСНДС"	) = 0, 0, 1);
		УКопирДокумЕстьКолонкаЕдиница 		= ?(спРеквизитовВМнЧ.НайтиЗначение("ЕД"			) = 0, 0, 1);
		УКопирДокумЕстьКолонкаКоэффициент 	= ?(спРеквизитовВМнЧ.НайтиЗначение("КОЭФФИЦИЕНТ") = 0, 0, 1);
		УКопирДокумЕстьКолонкаЦенаБезСкидки = ?(спРеквизитовВМнЧ.НайтиЗначение("ЦЕНАБЕЗСКИДКИ") = 0, 0, 1); 

		Попытка               
			// если ошибок не будет, то в документе есть поле валюта
			УКопирДокумЕстьПолеВалюта = Значение.Валюта;
			УКопирДокумЕстьПолеВалюта = Значение.Дата_Курса;
			УКопирДокумЕстьПолеВалюта = Значение.Курс;
			УКопирДокумЕстьПолеВалюта = 1;
		Исключение                      
			УКопирДокумЕстьПолеВалюта = 0;
		КонецПопытки;                   
		              
		Если УКопирДокумЕстьКолонкаЕдиница=0 Тогда	// в составе копируемого док-та нет единицы
			// будем заниматься поиском базовых единиц
			БазоваяЕдиница = СоздатьОбъект("Справочник.Единицы");
		КонецЕсли;	
		
		ТоварДляПоиска = СоздатьОбъект("Справочник.ТМЦ");           
		ТоварДляПоиска.ИспользоватьДату(Документ.ДатаДок);
		
		НомерСтрокиВДокументе = 0;
		
		СоставКопируемогоДокумента.ВыбратьСтроки();
		Пока СоставКопируемогоДокумента.ПолучитьСтроку()=1 Цикл      
			КопирТовар = СоставКопируемогоДокумента.Товар;
			Если КопирТовар = Константа.ТоварыВАссортименте	Тогда
			    глКомментарий("Служебный ТМЦ "+ Константа.ТоварыВАссортименте + " не может быть включен в товарный состав",2);
				Продолжить;
			КонецЕсли;
			глКомментарий("Выполняется обработка позиции "+СокрЛП(КопирТовар.Наименование)+
							?(ПустаяСтрока(КопирТовар.Артикул)=1,"",", арт. "+СокрЛП(КопирТовар.Артикул))+
							?(УКопирДокумЕстьКолонкаЕдиница=1,", "+СокрЛП(СоставКопируемогоДокумента.Ед.Наименование),""),2);
			
			Если (УКопирДокумЕстьКолонкаЕдиница=0) И (ЕстьКолонкаЕдиница=1) Тогда	// в составе копируемого док-та нет единицы
				// будем заниматься поиском базовых единиц				
				БазоваяЕдиница.ИспользоватьВладельца(КопирТовар.ТекущийЭлемент());
				Если БазоваяЕдиница.НайтиПоРеквизиту("Единица",КопирТовар.БазоваяЕдиница.ТекущийЭлемент(),0)=0 Тогда
					// не нашли базовую единицу
					Продолжить;
				КонецЕсли;
			КонецЕсли;				
			     
			НадоДобавлятьНовуюПозицию = 0;
			ТекВУПИсточника = СоставКопируемогоДокумента.ПолучитьЗначение(СоставКопируемогоДокумента.НомерСтроки, ИмяКолонкиВУПСКП);
			
			Если ЕстьКолонкаЕдиница=1 Тогда		// ищем по единице
				Если ЕстьКолонкаВУПСКП = 1 Тогда
					Найден = 0;
					ТовСостав.ВыбратьСтроки();
					Пока ТовСостав.ПолучитьСтроку() = 1 Цикл						
						ТекВУПТС = ТовСостав.ПолучитьЗначение(ТовСостав.НомерСтроки, ИмяКолонкиВУП);
						
						Если (ПустоеЗначение(ТекВУПИсточника) = 1) или (ТекВУПИсточника = НетУп) Тогда
						    КопирВУП = НетУп;
						Иначе
							КопирВУП = ТекВУПИсточника;
						КонецЕсли;
						Если (ПустоеЗначение(ТекВУПТС) = 1) или (ТекВУПТС = НетУп) Тогда
						    ТовСоставВУП = НетУп;
						Иначе
							ТовСоставВУП = ТекВУПТС;
						КонецЕсли;								

						Если (ТовСостав.Товар = СоставКопируемогоДокумента.ТМЦ) и (ТовСоставВУП = КопирВУП) Тогда
							ТовСостав.Кво = ТовСостав.Кво + СоставКопируемогоДокумента.Кво;
							Если ЕстьКолонкаДопКвоКП = 1 Тогда
							    ТовСостав.ДопКво = ТовСостав.ДопКво + СоставКопируемогоДокумента.ДопКво;
							КонецЕсли;
							НомерСтроки = ТовСостав.НомерСтроки;
							Найден = 1;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					НадоДобавлятьНовуюПозицию = 1-Найден;
				Иначе
	            	НомерСтроки = 0;
					Если ТовСостав.НайтиЗначение(?(УКопирДокумЕстьКолонкаЕдиница=0,
													БазоваяЕдиница.ТекущийЭлемент(),
													СоставКопируемогоДокумента.Ед.ТекущийЭлемент()),
													НомерСтроки,"Ед")>0 Тогда	// нашли такую позицию в составе документа       
														
						ТовСостав.УстановитьЗначение(НомерСтроки,"Кво",ТовСостав.ПолучитьЗначение(НомерСтроки,"Кво")+
																	   СоставКопируемогоДокумента.Кво);								
					Иначе      // не нашли такую позицию в документе
						НадоДобавлятьНовуюПозицию = 1;                          
					КонецЕсли;
				КонецЕсли;
			Иначе	// в обрабатываемом док-те нет единиц - ищем по товару
            	НомерСтроки = 0;
				Если ТовСостав.НайтиЗначение( КопирТовар.ТекущийЭлемент(),
												НомерСтроки,"Товар")>0 Тогда	// нашли такую позицию в составе документа       
				Попытка
					ТовСостав.УстановитьЗначение(НомерСтроки,"Кво",ТовСостав.ПолучитьЗначение(НомерСтроки,"Кво")+
												?(УКопирДокумЕстьКолонкаКоэффициент=0,
												  СоставКопируемогоДокумента.Кво,
												  СоставКопируемогоДокумента.Кво*СоставКопируемогоДокумента.Коэффициент));
				Исключение КонецПопытки;												  
				Иначе      // не нашли такую позицию в документе
					НадоДобавлятьНовуюПозицию = 1;                          
				КонецЕсли;	
			КонецЕсли;
			
			Если НадоДобавлятьНовуюПозицию = 0 Тогда
				// не надо добавлять новую позицию
				
				ТовСостав.ПолучитьСтрокуПоНомеру(НомерСтроки);
			
			Иначе	
				// вычисляем номер строки в документе
				НомерСтрокиВДокументе = НомерСтрокиВДокументе + 1;
				НомерСтроки = 0;
				Пока ТовСостав.НайтиЗначение(НомерСтрокиВДокументе,НомерСтроки,"НомерСтрокиДокумента")>0 Цикл
					НомерСтроки = 0;
					НомерСтрокиВДокументе = НомерСтрокиВДокументе + 1;
				КонецЦикла;	
				// создаем новую запись																		
				НомерСтроки = ТовСостав.КоличествоСтрок()+1;
				ТовСостав.НоваяСтрока(НомерСтроки);
				
				ТовСостав.ПолучитьСтрокуПоНомеру(НомерСтроки);
				
				ТовСостав.НомерСтрокиДокумента = НомерСтрокиВДокументе; 
				ТовСостав.Товар = КопирТовар.ТекущийЭлемент(); 
				                            
				ТовСостав.Пометка = ЗначениеПометки;
				Если ЕстьКолонкаВУП = 1 Тогда
					ТовСостав.УстановитьЗначение(ТовСостав.НомерСтроки, ИмяКолонкиВУП, ТекВУПИсточника);
				КонецЕсли;
				
				Попытка
					ТовСостав.ВесУп = СоставКопируемогоДокумента.ВесУп;
				Исключение КонецПопытки;						
				
				Если ЕстьКолонкаЕдиница=1 Тогда
					ТовСостав.Ед = ?(УКопирДокумЕстьКолонкаЕдиница=0,
									БазоваяЕдиница.ТекущийЭлемент(),
									СоставКопируемогоДокумента.Ед.ТекущийЭлемент()); 
				КонецЕсли;	
				
				Если ЕстьКолонкаКоэффициент=1 Тогда
					ТовСостав.Коэффициент = ?(УКопирДокумЕстьКолонкаКоэффициент=0,1,
											СоставКопируемогоДокумента.Ед.Коэффициент); 
				КонецЕсли;	
				
				Попытка
					ТовСостав.Кво = ?((ЕстьКолонкаЕдиница=0)И(УКопирДокумЕстьКолонкаКоэффициент=1),
								 СоставКопируемогоДокумента.Кво*СоставКопируемогоДокумента.Коэффициент,
								 СоставКопируемогоДокумента.Кво);
				Исключение КонецПопытки;
				
				Если ЕстьКолонкаДопКвоКП = 1 Тогда
				    ТовСостав.ДопКво = СоставКопируемогоДокумента.ДопКво;
				КонецЕсли;
				Если (ЕстьКолонкаЦенаБезСкидки = 1) И (ЕстьКолонкаЦенаБезСкидкиКП = 1) Тогда
					ТовСостав.ЦенаБезСкидки = СоставКопируемогоДокумента.ЦенаБезСкидки;
				КонецЕсли;
				    
				// переносим цену
				Если (ЕстьКолонкаЦенаБезНДС=1) Или (ЕстьКолонкаЦенаСНДС=1) Тогда
					
					Если ПустоеЗначение(КатегорияЦенДокумента) = 0 Тогда
						ЧЦена = 0;       
						ЦенаТовара = глВернутьЦену(ТовСостав.Товар, КатегорияЦенДокумента.ТекущийЭлемент());
						Если ПустоеЗначение(ЦенаТовара) = 0 Тогда
							ЦенаТовара.ИспользоватьДату(Документ.ДатаДок,1);
							ЧЦена = ЦенаТовара.Цена;
							Если ЕстьКолонкаЕдиница=1 Тогда
								ЧЦена = ЧЦена*ТовСостав.Ед.Коэффициент/ЦенаТовара.Единица.Коэффициент;
							Иначе                                                                          
								ЧЦена = ЧЦена/ЦенаТовара.Единица.Коэффициент;
							КонецЕсли;	
							
							ЧЦена = глПересчет(ЧЦена, 
												ЦенаТовара.Валюта, 
												Документ.ДатаДок, 
												?(ЕстьПолеВалюта=1,Документ.Валюта.ТекущийЭлемент(),Гривня), 
												?(ЕстьПолеВалюта=1,Документ.Курс,Документ.ДатаДок),
												?(ЕстьПолеВалюта=1,Документ.Дата_Курса,Документ.ДатаДок));
						КонецЕсли;
						
						ЕстьАкция = 0;
						Если (ЕстьДокументУстановкиСкидок = Да) И (ЕстьКолонкаЦенаБезСкидки = 1) Тогда
							глУстановитьСкидкуПоАкции(Документ, ЧЦена, ТовСостав.Товар, ЕстьАкция, КатегорияЦенДокумента);
						КонецЕсли;

						Если ЕстьКолонкаВУП = 1 Тогда
							ЧЦена = ЧЦена + глПолучитьЦенуВУП(ТовСостав, КатегорияЦенДокумента.ТекущийЭлемент(), Документ.ДатаДок, ?(ЕстьПолеВалюта=1,Документ.Валюта.ТекущийЭлемент(),Гривня), Документ.ДатаДок, ТовСостав.Товар)
						КонецЕсли;


						Если ЕстьКолонкаЦенаБезНДС=1 Тогда
							ТовСостав.ЦенаБезНДС = ЧЦена*100/(100+глПроцентНДС(ТовСостав.Товар.СтавкаНДС, Документ.ДатаДок));
						Иначе
							ТовСостав.ЦенаСНДС = ЧЦена;
						КонецЕсли;
						Если (ЕстьКолонкаЦенаБезСкидки = 1) И (ЕстьАкция = 0) Тогда
							ТовСостав.ЦенаБезСкидки = ЧЦена;
						КонецЕсли;
					Иначе
						Если ЕстьКолонкаЦенаБезНДС=1 Тогда
							ТовСостав.ЦенаБезНДС = 0;
						Иначе
							ТовСостав.ЦенаСНДС = 0;
						КонецЕсли;
					КонецЕсли;	
					
				КонецЕсли;
				
				Если ЕстьКолонкаСуммаСНДС=1 Тогда    
					Если ТоварДляПоиска.НайтиЭлемент(КопирТовар.ТекущийЭлемент())>0 Тогда
						Если ЕстьКолонкаСуммаСНДС=1 Тогда 
							ТовСостав._СтавкаНДС = глПроцентНДС(ТовСостав.Товар.СтавкаНДС, Документ.ДатаДок);
						КонецЕсли;	
					КонецЕсли;
				КонецЕсли;	
			
			КонецЕсли;			  
			
			Если ЕстьКолонкаЦенаБезНДС = 1 Тогда
				
				Если ЕстьКолонкаЦенаСНДС = 1 Тогда
					ТовСостав.ЦенаСНДС = ТовСостав.ЦенаБезНДС * (100+ТовСостав._СтавкаНДС)/100;
				КонецЕсли;
				
				Если ЕстьКолонкаСкидка = 1 Тогда
					ТовСостав.СуммаБезСкидки = ТовСостав.Кво * ТовСостав.ЦенаБезНДС;
					ТовСостав.СуммаБезНДС = ТовСостав.СуммаБезСкидки - ТовСостав.Скидка;
				Иначе
				    ТовСостав.СуммаБезНДС = ТовСостав.Кво*ТовСостав.ЦенаБезНДС;
				КонецЕсли;
				
				Если ЕстьКолонкаСуммаСНДС = 1 Тогда
					ТовСостав.СуммаСНДС = ТовСостав.СуммаБезНДС*(100+ТовСостав._СтавкаНДС)/100;
				КонецЕсли;

				Если ЕстьКолонкаНДС = 1 Тогда
					ТовСостав.НДС = ТовСостав.СуммаБезНДС * ТовСостав._СтавкаНДС/100;
				КонецЕсли;
				
				Если ЕстьКолонкаВУПСКП = 1 Тогда
					Попытка
						ТовСостав.Кол = ТовСостав.Кол + СоставКопируемогоДокумента.Кол;
					Исключение КонецПопытки;
					Попытка
						ТовСостав.Свес = СоставКопируемогоДокумента.Свес;
					Исключение КонецПопытки;
					Попытка
						ТовСостав.ВесУп = СоставКопируемогоДокумента.ВесУп;
					Исключение КонецПопытки;					
				КонецЕсли;
				
			ИначеЕсли ЕстьКолонкаЦенаСНДС = 1 Тогда
				// розница
				ТовСостав.СуммаСНДС = ТовСостав.ЦенаСНДС * ТовСостав.Кво;

				Если ЕстьКолонкаНДС = 1 Тогда
					ТовСостав.НДС = ТовСостав.СуммаСНДС * ТовСостав._СтавкаНДС/(100 + ТовСостав._СтавкаНДС);
				КонецЕсли;
				
			КонецЕсли;	
			
			ЧислоОбработанныхПозиций = ЧислоОбработанныхПозиций + 1;
		КонецЦикла;	
	
	Иначе		// Не удаление состава и не копирование из документа
		
		ТекЗначение = Значение; // для исправления ошибок округления при разнесении по сумме/кол-ву
		ТовСостав.ВыбратьСтроки();
		НомерСтроки = 1;
		
		Пока ТовСостав.ПолучитьСтроку()>0 Цикл
			
			НомерСтроки = НомерСтроки+1;
			
			Если ТовСостав.Пометка=ЗначениеНеПометки Тогда
				Продолжить;
			КонецЕсли;	
			
			глКомментарий("Выполняется обработка позиции "+СокрЛП(ТовСостав.Товар.Наименование)+
							?(ПустаяСтрока(ТовСостав.Товар.Артикул)=1,"",", арт. "+СокрЛП(ТовСостав.Товар.Артикул))+
							?(ЕстьКолонкаЕдиница=1,", "+СокрЛП(ТовСостав.Ед.Наименование),""),2);
				
			Если Действие.ТекущаяСтрока()=НомерДействияИзмКолНаПроц Тогда // Изменить кол-во на (в %)
				ТовСостав.Кво = ТовСостав.Кво*(1+Значение/100);
				ТовСостав.Кво = Макс(ТовСостав.Кво,0);
				
			ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияИзмКолНаАбсЧисло Тогда // Изменить кол-во на (в ед.изм.)
				ТовСостав.Кво = ТовСостав.Кво+Значение;
				ТовСостав.Кво = Макс(ТовСостав.Кво,0);
				
			ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияОкрКол Тогда // Округлить кол-во до;
				ТовСостав.Кво = Окр(ТовСостав.Кво,5 - ПорядокОкругления.НайтиЗначение(Значение),1);
				
			ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияИзмЦеныНаПроц Тогда // Изменить цену на (в %)
				Если (ЕстьКолонкаЦенаБезНДС = 1)
				И (Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС) Тогда 
					ТовСостав.ЦенаБезНДС = ТовСостав.ЦенаБезНДС*(1+Значение/100);   
					ТовСостав.ЦенаБезНДС = Макс(ТовСостав.ЦенаБезНДС,0);
				Иначе
					ТовСостав.ЦенаСНДС = ТовСостав.ЦенаСНДС*(1+Значение/100);   
					ТовСостав.ЦенаСНДС = Макс(ТовСостав.ЦенаСНДС,0);
				КонецЕсли;
				
			ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияИзмЦеныНаАбсЧисло Тогда // Изменить цену на (в ед.валюты.)
				Если (ЕстьКолонкаЦенаБезНДС = 1)
				И (Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС) Тогда 
					ТовСостав.ЦенаБезНДС = ТовСостав.ЦенаБезНДС+Значение;
					ТовСостав.ЦенаБезНДС = Макс(ТовСостав.ЦенаБезНДС,0);
				Иначе
					ТовСостав.ЦенаСНДС = ТовСостав.ЦенаСНДС+Значение;
					ТовСостав.ЦенаСНДС = Макс(ТовСостав.ЦенаСНДС,0);
				КонецЕсли;
			ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияРазнСуммыПоКол Тогда // ("Разнести сумму по кол-ву");
				Если ПустоеЗначение(ТовСостав.Кво) = 0 Тогда
					// разносим только если количество указано
					Если (ЕстьКолонкаЦенаБезНДС = 1)
					И (Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС) Тогда 
						Если ТовСостав.НомерСтроки = ТовСостав.КоличествоСтрок() Тогда
							// последняя строка
							ТовСостав.ЦенаБезНДС = (ТовСостав.СуммаБезНДС + ТекЗначение)/ТовСостав.Кво;
						Иначе	
							// рассчитаем новую сумму
							ВремСумма 			 = ТовСостав.СуммаБезНДС + ?((ТовСостав.Кво=0)ИЛИ(ОбщееКоличество<=0),0,Значение*ТовСостав.Кво/ОбщееКоличество);
							// рассчитаем добавленную часть с учетом округлений в цене
							ТекЗначение 		 = ТекЗначение - (Окр(ВремСумма/ТовСостав.Кво,2) - ТовСостав.ЦенаБезНДС)*ТовСостав.Кво;
							// рассчитаем новую цену
							ТовСостав.ЦенаБезНДС = ВремСумма/ТовСостав.Кво;
						КонецЕсли;					
						ТовСостав.ЦенаБезНДС = Макс(ТовСостав.ЦенаБезНДС,0);
					Иначе
						Если ТовСостав.НомерСтроки = ТовСостав.КоличествоСтрок() Тогда
							// последняя строка
							ТовСостав.ЦенаСНДС = (ТовСостав.СуммаСНДС + ТекЗначение)/ТовСостав.Кво;
						Иначе	
							// рассчитаем новую сумму
							ВремСумма 			 = ТовСостав.СуммаСНДС + ?((ТовСостав.Кво=0)ИЛИ(ОбщееКоличество<=0),0,Значение*ТовСостав.Кво/ОбщееКоличество);
							// рассчитаем добавленную часть с учетом округлений в цене
							ТекЗначение 		 = ТекЗначение - (Окр(ВремСумма/ТовСостав.Кво,3) - ТовСостав.ЦенаСНДС)*ТовСостав.Кво;
							// рассчитаем новую цену
							ТовСостав.ЦенаСНДС	 = ВремСумма/ТовСостав.Кво;
						КонецЕсли;	
						ТовСостав.ЦенаСНДС = Макс(ТовСостав.ЦенаСНДС,0);
					КонецЕсли;				
				КонецЕсли;
			ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияРазнСуммыПоСуммам Тогда // ("Разнести сумму по сумме");
				Если (ЕстьКолонкаЦенаБезНДС = 1)
				И (Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС) Тогда 
					Если ТовСостав.НомерСтроки = ТовСостав.КоличествоСтрок() Тогда
						// последняя строка
						ТовСостав.ЦенаБезНДС = (ТовСостав.СуммаБезНДС + ТекЗначение)/?(ТовСостав.Кво=0,1,ТовСостав.Кво);
					Иначе	
						// рассчитаем новую сумму
						ВремСумма 			 = ТовСостав.СуммаБезНДС + ?((ТовСостав.СуммаБезНДС=0)ИЛИ(ОбщаяСумма<=0),0,Значение*ТовСостав.СуммаБезНДС/ОбщаяСумма);
						// рассчитаем добавленную часть с учетом округлений в цене
						ТекЗначение 		 = ТекЗначение - (Окр(ВремСумма/?(ТовСостав.Кво=0,1,ТовСостав.Кво),2) - ТовСостав.ЦенаБезНДС)*?(ТовСостав.Кво=0,1,ТовСостав.Кво);
						// рассчитаем новую цену
						ТовСостав.ЦенаБезНДС = ?(ТовСостав.Кво=0,ВремСумма,ВремСумма/ТовСостав.Кво);
					КонецЕсли;					
					ТовСостав.ЦенаБезНДС = Макс(ТовСостав.ЦенаБезНДС,0);
				Иначе
					Если ТовСостав.НомерСтроки = ТовСостав.КоличествоСтрок() Тогда
						// последняя строка
						ТовСостав.ЦенаСНДС = (ТовСостав.СуммаСНДС + ТекЗначение)/?(ТовСостав.Кво=0,1,ТовСостав.Кво);
					Иначе	
						// рассчитаем новую сумму
						ВремСумма 			 = ТовСостав.СуммаСНДС + ?((ТовСостав.СуммаСНДС=0)ИЛИ(ОбщаяСумма<=0),0,Значение*ТовСостав.СуммаСНДС/ОбщаяСумма);
						// рассчитаем добавленную часть с учетом округлений в цене
						ТекЗначение 		 = ТекЗначение - (Окр(ВремСумма/?(ТовСостав.Кво=0,1,ТовСостав.Кво),3) - ТовСостав.ЦенаСНДС)*?(ТовСостав.Кво=0,1,ТовСостав.Кво);
						// рассчитаем новую цену
						ТовСостав.ЦенаСНДС	 = ?(ТовСостав.Кво=0,ВремСумма,ВремСумма/ТовСостав.Кво);
					КонецЕсли;	
					ТовСостав.ЦенаСНДС = Макс(ТовСостав.ЦенаСНДС,0);
				КонецЕсли;				
			
			ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияОкрЦены Тогда // Округлить цену до;
				Если (ЕстьКолонкаЦенаБезНДС = 1)
				И (Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС) Тогда 
					ТовСостав.ЦенаБезНДС = Окр(ТовСостав.ЦенаБезНДС,5-ПорядокОкругления.НайтиЗначение(Значение),1);
				Иначе
					ТовСостав.ЦенаСНДС = Окр(ТовСостав.ЦенаСНДС,5-ПорядокОкругления.НайтиЗначение(Значение),1);
				КонецЕсли;

			ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияСкидкаПроцентом Тогда // Дать скидку процентом
				ТовСостав.Скидка = ?((ТовСостав.Кво=0),0,ТовСостав.СуммаБезСкидки*Значение/100);
				
			ИначеЕсли Действие.ТекущаяСтрока()=НомерДействияСкидкаСуммой Тогда // Дать скидку суммой
				ТовСостав.Скидка = ?((ТовСостав.Кво=0) Или (ОбщаяСумма<=0),0,Значение*ТовСостав.СуммаБезСкидки/ОбщаяСумма);
				
			ИначеЕсли (Действие.ТекущаяСтрока()=НомерДействияЗаполнЦеныИзСпр) ИЛИ (Действие.ТекущаяСтрока() = НомерДействияЗаполнНовойЦеныИзСпр) Тогда // Заполнить из прайса				                                          
				Валюта = СоздатьОбъект("Справочник.Валюты");
				Цена = 0;
				Если ПолучитьЦенуТовара(Значение.ТекущийЭлемент(),ТовСостав.Товар.ТекущийЭлемент(),?(ЕстьКолонкаЕдиница=0,0,ТовСостав.Ед.ТекущийЭлемент()),
                             Документ.ДатаДок,Цена,Валюта)>0 Тогда
				
					ЦенаЦены = глПересчет(Цена,
										Валюта.ТекущийЭлемент(),
										?(ЕстьПолеВалюта=0,Документ.ДатаДок,Документ.Дата_Курса),
										?(ЕстьПолеВалюта=0,Константа.БазоваяВалюта,Документ.Валюта),
										?(ЕстьПолеВалюта=0,Документ.ДатаДок,Документ.Курс),
										?(ЕстьПолеВалюта=0,Документ.ДатаДок,Документ.Дата_Курса));
					Если ЕстьКолонкаВУП = 1 Тогда
						ЧЦена = ЧЦена + глПолучитьЦенуВУП(ТовСостав, КатегорияЦенДокумента.ТекущийЭлемент(), Документ.ДатаДок, ?(ЕстьПолеВалюта=1,Документ.Валюта.ТекущийЭлемент(),Гривня), Документ.ДатаДок, ТовСостав.Товар)
					КонецЕсли;				
				Иначе						
					ЦенаЦены = 0;					
				КонецЕсли;
				Если Действие.ТекущаяСтрока()=НомерДействияЗаполнЦеныИзСпр Тогда
					Если (ЕстьКолонкаЦенаБезНДС = 1)
					И (Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС) Тогда 
						ТовСостав.ЦенаБезНДС = ЦенаЦены*100/(100+глПроцентНДС(ТовСостав.Товар.СтавкаНДС, Документ.ДатаДок));	
					Иначе	
						ТовСостав.ЦенаСНДС = ЦенаЦены;	
					КонецЕсли;
				Иначе
					ТовСостав.НоваяЦена = ЦенаЦены;	
				КонецЕсли;	            
			КонецЕсли;	

			Если ЕстьКолонкаЦенаБезНДС = 1 Тогда
				Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаБезНДС Тогда
					ТовСостав.ЦенаСНДС = ТовСостав.ЦенаБезНДС*(100+ТовСостав._СтавкаНДС)/100;
				Иначе	
					ТовСостав.ЦенаБезНДС = ТовСостав.ЦенаСНДС*100/(100+ТовСостав._СтавкаНДС);
				КонецЕсли;
				
				Если ЕстьКолонкаСкидка = 1 Тогда
					Если Константа.ОсновнаяЦена = Перечисление.ВидыЦенВДокументах.ЦенаСНДС Тогда
						ТовСостав.СуммаБезСкидки = ТовСостав.Кво * ТовСостав.ЦенаСНДС;
						ТовСостав.СуммаСНДС = ТовСостав.СуммаБезСкидки - ТовСостав.Скидка;
						ТовСостав.СуммаБезНДС = ТовСостав.СуммаСНДС * 100/(100+ТовСостав._СтавкаНДС);
					Иначе
						ТовСостав.СуммаБезСкидки = ТовСостав.Кво * ТовСостав.ЦенаБезНДС;
						ТовСостав.СуммаБезНДС = ТовСостав.СуммаБезСкидки - ТовСостав.Скидка;
					КонецЕсли;
				Иначе
				    ТовСостав.СуммаБезНДС = ТовСостав.Кво*ТовСостав.ЦенаБезНДС;
				КонецЕсли;
				
				Если ЕстьКолонкаСуммаСНДС = 1 Тогда
					ТовСостав.СуммаСНДС = ТовСостав.СуммаБезНДС*(100+ТовСостав._СтавкаНДС)/100;
				КонецЕсли;

				Если ЕстьКолонкаНДС = 1 Тогда
					ТовСостав.НДС = ТовСостав.СуммаБезНДС * (ТовСостав._СтавкаНДС/100);
				КонецЕсли;
				
			ИначеЕсли ЕстьКолонкаЦенаСНДС = 1 Тогда
				ТовСостав.СуммаСНДС = ТовСостав.ЦенаСНДС * ТовСостав.Кво;

				Если ЕстьКолонкаНДС = 1 Тогда
					ТовСостав.НДС = ТовСостав.СуммаСНДС * ТовСостав._СтавкаНДС/(100 + ТовСостав._СтавкаНДС);
				КонецЕсли;
				
			КонецЕсли;	
			Если ЕстьКолонкаНоваяЦена = 1 Тогда
				ТовСостав.НоваяСумма = ТовСостав.НоваяЦена * ТовСостав.Кво * ТовСостав.Коэффициент;
			КонецЕсли;
				
			ЧислоОбработанныхПозиций = ЧислоОбработанныхПозиций + 1;	
		КонецЦикла;	
	КонецЕсли;
	
	Предупреждение("Групповая обработка завершена. Число обработанных позиций: "+Строка(ЧислоОбработанныхПозиций));
    Если ЧислоОбработанныхПозиций>0 Тогда    
		БылиИзменения = 1;
	КонецЕсли;	
КонецПроцедуры


// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
// Вызывается из 	ВозвратнаяНакладная, ВозвратРозница, 
//					ПриходнаяНакладнаяГТД, ПриходнаяНакладнаяЗапасы, ПриходнаяНакладнаяПрочие
//					РасходнаяНакладная, РасходнаяРозничная
//					Счет, СчетВходящий
Процедура ПриОткрытии()	// Предопределенная процедура
    Перем Товар;             
	Перем НомерКолонки;
	Перем ИдентификаторКолонки;
	Перем ВидДок;                    
	Перем ТовСоставДокумента;
	
	Если ПустоеЗначение(Форма.Параметр)=1 Тогда
		Предупреждение("Не указан документ. Данная обработка запускается автоматически из других процедур конфигурации.");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	         
	Документ = Форма.Параметр;
	ВидДок = ВРег(Документ.Вид());              
	               
	ТовСоставДокумента = СоздатьОбъект("ТаблицаЗначений");
	
	Документ.ВыгрузитьТабличнуюЧасть(ТовСоставДокумента);

	ЕстьДокументУстановкиСкидок = глЕстьРеквизитШапки("УстановкаСкидокТМЦ", Документ.Вид());
	//Если глЕстьРеквизитМнЧ("Кво",Документ.Вид()) = Нет Тогда				
	//	Предупреждение("Документ не подлежит групповой обработке");	
	//	СтатусВозврата(0);
	//	Возврат;
	//КонецЕсли;

	Если глЕстьРеквизитМнЧ("ТМЦ",Документ.Вид()) = Да Тогда				
		ТовСоставДокумента.НоваяКолонка("Товар");
		ТовСоставДокумента.ВыбратьСтроки();
		Пока ТовСоставДокумента.ПолучитьСтроку() = 1 Цикл
			ТовСоставДокумента.Товар = ТовСоставДокумента.ТМЦ;
		КонецЦикла;

	ИначеЕсли глЕстьРеквизитМнЧ("Услуга",Документ.Вид()) = Да Тогда				
		ТовСоставДокумента.НоваяКолонка("Товар");
		ТовСоставДокумента.ВыбратьСтроки();
		Пока ТовСоставДокумента.ПолучитьСтроку() = 1 Цикл
			ТовСоставДокумента.Товар = ТовСоставДокумента.Услуга;
		КонецЦикла;

	Иначе	
		Предупреждение("Документ не подлежит групповой обработке");	
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
		
	МожноРедактироватьЦену = 1;
	Если Найти(ВРег("=НалоговаяНакладная="), "="+ВРег(СокрЛП(Документ.Вид()))+"=") > 0 Тогда
		// цену не редактируем
		МожноРедактироватьЦену = 0;
	КонецЕсли;
	        
	Попытка               
		// если ошибок не будет, то в документе есть поле валюта
		ЕстьПолеВалюта = Документ.Валюта;
		ЕстьПолеВалюта = Документ.Дата_Курса;
		ЕстьПолеВалюта = Документ.Курс;
		ЕстьПолеВалюта = 1;
	Исключение                      
		ЕстьПолеВалюта = 0;
	КонецПопытки;                   

	Если Найти(ВРег("ОтчетКА/РасходнаяРозничная/Перемещение"), ВРег(СокрЛП(Документ.Вид()))) >0 Тогда
		КатегорияЦенДокумента = Константа.РозничнаяКатегорияЦен;
	Иначе
		ЕстьКолонкаКатегорияЦен = глЕстьРеквизитШапки("КатегорияЦен", Документ.Вид());
		Если ЕстьКолонкаКатегорияЦен = Да Тогда
			КатегорияЦенДокумента = Документ.КатегорияЦен;
		Иначе
			КатегорияЦенДокумента = ПолучитьПустоеЗначение("Справочник.КатегорииЦен");
		КонецЕсли;
	КонецЕсли;
	
	спРеквизитовВМнЧ = СоздатьОбъект("СписокЗначений");
	КвоКолонок = ТовСоставДокумента.КоличествоКолонок();
	Для Инд = 1 По КвоКолонок Цикл
		спРеквизитовВМнЧ.ДобавитьЗначение(ВРег(ТовСоставДокумента.ПолучитьПараметрыКолонки(Инд)));
	КонецЦикла;

	ЕстьКолонкаЦенаБезНДС 	= ?(спРеквизитовВМнЧ.НайтиЗначение("ЦЕНАБЕЗНДС"	) = 0, 0, 1);
	ЕстьКолонкаСкидка 		= ?(спРеквизитовВМнЧ.НайтиЗначение("СКИДКА"		) = 0, 0, 1);
	ЕстьКолонкаЦенаСНДС 	= ?(спРеквизитовВМнЧ.НайтиЗначение("ЦЕНАСНДС"	) = 0, 0, 1);
	ЕстьКолонкаСуммаСНДС 	= ?(спРеквизитовВМнЧ.НайтиЗначение("СУММАСНДС"	) = 0, 0, 1);
	ЕстьКолонкаНДС 			= ?(спРеквизитовВМнЧ.НайтиЗначение("НДС"	    ) = 0, 0, 1);	
	ЕстьКолонкаЕдиница 		= ?(спРеквизитовВМнЧ.НайтиЗначение("ЕД"			) = 0, 0, 1);
	ЕстьКолонкаКоэффициент 	= ?(спРеквизитовВМнЧ.НайтиЗначение("КОЭФФИЦИЕНТ") = 0, 0, 1); 
	ЕстьКолонкаНоваяЦена	= ?(спРеквизитовВМнЧ.НайтиЗначение("НОВАЯЦЕНА") = 0, 0, 1); 
	ЕстьКолонкаЦенаБезСкидки= ?(спРеквизитовВМнЧ.НайтиЗначение("ЦЕНАБЕЗСКИДКИ") = 0, 0, 1); 
	
	Если ( Документ.Вид() = "ВозвратнаяНакладная" ) ИЛИ ( Документ.Вид() = "ЗаказКлиента" ) Тогда //--- УМК Сандомирский В.Ю,
		ЕстьКолонкаВУП			= ?(спРеквизитовВМнЧ.НайтиЗначение("ВУП") = 0, 0, 1); 
		ИмяКолонкиВУП = "ВУП";
	Иначе
		ЕстьКолонкаВУП			= ?(спРеквизитовВМнЧ.НайтиЗначение("ВИДУПАКОВКИ") = 0, 0, 1);
		ИмяКолонкиВУП = "ВИДУПАКОВКИ";
	КонецЕсли;
	
	ЕстьКолонкаДопКво		= ?(спРеквизитовВМнЧ.НайтиЗначение("ДОПКВО") = 0, 0, 1);	
	
    Если (ЕстьКолонкаЦенаСНДС = 1) Или (ЕстьКолонкаСуммаСНДС = 1) Тогда
		ТовСоставДокумента.ВставитьКолонку("_СтавкаНДС",КвоКолонок+1,"Число",8,2,"НДС(%)");
		ТовСоставДокумента.ВидимостьКолонки("_СтавкаНДС",1);        
		спРеквизитовВМнЧ.ДобавитьЗначение("_СтавкаНДС");
    КонецЕсли;
	
	спПоказываемыхКолонок = СоздатьОбъект("СписокЗначений");
	Если ЕстьКолонкаЦенаБезНДС=1 Тогда
		Если ЕстьКолонкаСкидка=1 Тогда
			СтрСРазделителями = "ТОВАР,ЕД,КВО,ЦЕНАБЕЗНДС,ЦЕНАСНДС,СУММАБЕЗСКИДКИ,СКИДКА,СУММАБЕЗНДС,СУММАСНДС,_СТАВКАНДС";	
		Иначе
			СтрСРазделителями = "ТОВАР,ЕД,КВО,ЦЕНАБЕЗНДС,ЦЕНАСНДС,СУММАБЕЗНДС,СУММАСНДС,_СТАВКАНДС";    
		КонецЕсли;
	ИначеЕсли ЕстьКолонкаЦенаСНДС=1 Тогда		// розница
		СтрСРазделителями = "ТОВАР,ЕД,КВО,ЦЕНАСНДС,СУММАСНДС,_СТАВКАНДС";	
	Иначе
		СтрСРазделителями = "ТОВАР,ЕД,КВО";
	КонецЕсли;                             
	Если ЕстьКолонкаВУП = 1 Тогда
	    СтрСРазделителями = "ТОВАР," + ИмяКолонкиВУП + ",СВЕС,ВесУп,КОЛ,ЕД,КВО,ЦЕНАБЕЗНДС,ЦЕНАСНДС,СУММАБЕЗСКИДКИ,СКИДКА,СУММАБЕЗНДС,СУММАСНДС,_СТАВКАНДС";	
	КонецЕсли;
	Если ЕстьКолонкаДопКво = 1 Тогда
		Если ЕстьКолонкаВУП = 1 Тогда
	    	СтрСРазделителями = "ТОВАР," + ИмяКолонкиВУП + ",СВЕС,ВесУп,ДОПКВО,КОЛ,ЕД,КВО,ЦЕНАБЕЗНДС,ЦЕНАСНДС,СУММАБЕЗСКИДКИ,СКИДКА,СУММАБЕЗНДС,СУММАСНДС,_СТАВКАНДС";	
		Иначе
			СтрСРазделителями = "ТОВАР,ДОПКВО,КОЛ,ЕД,КВО,ЦЕНАБЕЗНДС,ЦЕНАСНДС,СУММАБЕЗСКИДКИ,СКИДКА,СУММАБЕЗНДС,СУММАСНДС,_СТАВКАНДС";	
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьКолонкаНДС = 1 Тогда
		СтрСРазделителями = СтрСРазделителями + ",НДС"
	КонецЕсли;
	Если ЕстьКолонкаНоваяЦена = 1 Тогда
		СтрСРазделителями = СтрСРазделителями + ",НОВАЯЦЕНА,НОВАЯСУММА";
	КонецЕсли;
	Если ЕстьКолонкаЦенаБезСкидки = 1 Тогда
		СтрСРазделителями = СтрСРазделителями + ",ЦЕНАБЕЗСКИДКИ";
	КонецЕсли;
	
	спПоказываемыхКолонок.ИзСтрокиСРазделителями("""" + СтрЗаменить(СтрСРазделителями, ",", """,""") + """");	
	                                             
	// сортируем колонки
	КвоКолонок = спПоказываемыхКолонок.РазмерСписка();
	Для Инд = 1 По КвоКолонок Цикл
		Поз = спРеквизитовВМнЧ.НайтиЗначение(спПоказываемыхКолонок.ПолучитьЗначение(КвоКолонок-Инд+1)); 
		Если Поз = 0 Тогда
			спПоказываемыхКолонок.УдалитьЗначение(КвоКолонок-Инд+1);
		Иначе
			спРеквизитовВМнЧ.УдалитьЗначение(Поз);
		КонецЕсли;
	КонецЦикла;
	
    СписокВсехКолонок = спПоказываемыхКолонок.ВСтрокуСРазделителями() + "," + спРеквизитовВМнЧ.ВСтрокуСРазделителями();
	СписокВсехКолонок = СтрЗаменить(СписокВсехКолонок,"""","");
	ТовСоставДокумента.Выгрузить(ТовСостав,,,СписокВсехКолонок);
	
	ТовСостав.ВставитьКолонку("Пометка",1,"Число",4,0);
	ТовСостав.ВыводитьПиктограммы("Пометка",1);
	
	// прячем все колонки
	КвоКолонок = ТовСостав.КоличествоКолонок();
	Для Инд = 2 По КвоКолонок Цикл
		ИдентификаторКолонки = ВРег(ТовСостав.ПолучитьПараметрыКолонки(Инд));
		Если спПоказываемыхКолонок.НайтиЗначение(ИдентификаторКолонки) > 0 Тогда
			// Устанавливаем нормальные заголовки
			Заголовок = 0;
			Если ИдентификаторКолонки = "ЕД"Тогда
				Заголовок = "Ед";
			ИначеЕсли ИдентификаторКолонки = "КВО"Тогда
				Заголовок = "Кво";
			ИначеЕсли ИдентификаторКолонки = "ЦЕНАБЕЗСКИДКИ" Тогда
				Заголовок = "Цена без ск.";				
			ИначеЕсли ИдентификаторКолонки = "ЦЕНАБЕЗНДС"Тогда
				Заголовок = "Цена-";
			ИначеЕсли ИдентификаторКолонки = "ЦЕНАСНДС"Тогда
				Заголовок = "Цена+";
			ИначеЕсли ИдентификаторКолонки = "СКИДКА"Тогда
				Заголовок = "Скидка";
			ИначеЕсли ИдентификаторКолонки = "СУММАБЕЗСКИДКИ"Тогда
				Заголовок = "Сумма б/с";
			ИначеЕсли ИдентификаторКолонки = "СУММАБЕЗНДС"Тогда
				Заголовок = "Сумма-";
			ИначеЕсли ИдентификаторКолонки = "СУММАСНДС"Тогда
				Заголовок = "Сумма+";
			ИначеЕсли ИдентификаторКолонки = "НОВАЯЦЕНА"Тогда
				Заголовок = "Н. цена";
			ИначеЕсли ИдентификаторКолонки = "НОВАЯСУММА"Тогда
				Заголовок = "Н. сумма";				
			КонецЕсли;
			Если ПустоеЗначение(Заголовок) = 0 Тогда
				ТовСостав.УстановитьПараметрыКолонки(ИдентификаторКолонки,,,,Заголовок,,,);
			КонецЕсли;
		Иначе
			ТовСостав.ВидимостьКолонки(ИдентификаторКолонки,0);
		КонецЕсли;	
	КонецЦикла;	
	
	ТовСостав.Фиксировать(,2);
	
	Товар = СоздатьОбъект("Справочник.ТМЦ");
	Товар.ИспользоватьДату(Документ.ДатаДок);
	
	ЕстьПолеВидНДС = глЕстьРеквизитМнЧ("ВидНДС",Документ.Вид());
	ТовСостав.ВыбратьСтроки();
	Пока ТовСостав.ПолучитьСтроку()=1 Цикл
		Если Товар.НайтиЭлемент(ТовСостав.Товар.ТекущийЭлемент())=0 Тогда
			Возврат;
		КонецЕсли;
		ТовСостав.Пометка = ЗначениеПометки;       
		Если ЕстьКолонкаСуммаСНДС=1 Тогда 
			ТовСостав._СтавкаНДС = глПроцентНДС(?(ЕстьПолеВидНДС=Нет,Товар.СтавкаНДС,ТовСостав.ВидНДС),Документ.ДатаДок);
		КонецЕсли;	
	КонецЦикла;	
	
	Действие.УдалитьВсе();
	                                
	Если НазваниеНабораПрав() <> "Заказ" Тогда
		Действие.ДобавитьЗначение("Удалить");							
		НомерДействияУдаления = Действие.РазмерСписка();
		
		Действие.ДобавитьЗначение("Изменить кол-во на (в %)");			
		НомерДействияИзмКолНаПроц = Действие.РазмерСписка();
		
		Действие.ДобавитьЗначение("Изменить кол-во на (в ед. изм.)");   
		НомерДействияИзмКолНаАбсЧисло = Действие.РазмерСписка();
		
		Действие.ДобавитьЗначение("Округлить кол-во до");
		НомерДействияОкрКол = Действие.РазмерСписка();
	
		Действие.ДобавитьЗначение("Добавить из документа");     		
		НомерДействияДобИзДок = Действие.РазмерСписка();
		
		Действие.ДобавитьЗначение("Добавить из РН");     		
		НомерДействияДобИзДокРН = Действие.РазмерСписка();
	
		Если ((ЕстьКолонкаЦенаБезНДС = 1) Или (ЕстьКолонкаЦенаСНДС = 1)) И (МожноРедактироватьЦену = 1) Тогда
			
			Действие.ДобавитьЗначение("Изменить цену на (в %)");      		
			НомерДействияИзмЦеныНаПроц = Действие.РазмерСписка();
			
			Действие.ДобавитьЗначение("Изменить цену на (в ед. валюты)");	
			НомерДействияИзмЦеныНаАбсЧисло = Действие.РазмерСписка();
			
			Действие.ДобавитьЗначение("Разнести сумму по кол-ву");      	
			НомерДействияРазнСуммыПоКол = Действие.РазмерСписка();
			
			Действие.ДобавитьЗначение("Разнести сумму по суммам"); 			
			НомерДействияРазнСуммыПоСуммам = Действие.РазмерСписка();
			
			Действие.ДобавитьЗначение("Округлить цены до");
			НомерДействияОкрЦены = Действие.РазмерСписка();
					
			Если ЕстьПолеВалюта = 1 Тогда
				Действие.ДобавитьЗначение("Заполнить цены из справочника"); 
				НомерДействияЗаполнЦеныИзСпр = Действие.РазмерСписка();
				
				Если ЕстьКолонкаНоваяЦена = 1 Тогда
					Действие.ДобавитьЗначение("Заполнить новую цену из справочника"); 
					НомерДействияЗаполнНовойЦеныИзСпр = Действие.РазмерСписка();					
				КонецЕсли;
			КонецЕсли;
			                   
			Если (ЕстьКолонкаСкидка = 1) И (Константа.ИспользоватьСкидку = Да) и (НазваниеНабораПрав() = "Администратор") Тогда
				Действие.ДобавитьЗначение("Дать скидку процентом"); 
				НомерДействияСкидкаПроцентом = Действие.РазмерСписка();
				
				Действие.ДобавитьЗначение("Дать скидку суммой"); 
				НомерДействияСкидкаСуммой = Действие.РазмерСписка();
			КонецЕсли;
	
		КонецЕсли;	                
	Иначе
		Действие.ДобавитьЗначение("Добавить из РН");     		
		НомерДействияДобИзДокРН = Действие.РазмерСписка();		
	КонецЕсли;
	
	Действие.ТекущаяСтрока(Действие.РазмерСписка());

	ДоступностьКнопкиВыбораЗначения();
	
	БылиИзменения = 0;
	
КонецПроцедуры	// ПриОткрытии


// ===============================
Процедура ПриЗакрытии()	// Предопределенная процедура
    Перем Результат;
	
	Если БылиИзменения = 1 Тогда   
		Результат=Вопрос("Принять изменения товарного состава?","Да+Нет+Отмена");

		Если Результат="Да" Тогда
			ДокВид = Документ.Вид();
			Если глЕстьРеквизитМнЧ("ТМЦ",ДокВид) = Да Тогда				
				ТовСостав.ВыбратьСтроки();
				Пока ТовСостав.ПолучитьСтроку() = 1 Цикл
					ТовСостав.ТМЦ = ТовСостав.Товар;
				КонецЦикла;
				ТовСостав.УдалитьКолонку("Товар");
			ИначеЕсли глЕстьРеквизитМнЧ("Услуга",ДокВид) = Да Тогда				
				ТовСостав.ВыбратьСтроки();
				Пока ТовСостав.ПолучитьСтроку() = 1 Цикл
					ТовСостав.Услуга = ТовСостав.Товар;
				КонецЦикла;
				ТовСостав.УдалитьКолонку("Товар");
			КонецЕсли;
		
			Документ.ЗагрузитьТабличнуюЧасть(ТовСостав);			
		ИначеЕсли Результат="Отмена" Тогда	
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры	// ПриЗакрытии

// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

ЗначениеПометки 	= 2; 
ЗначениеНеПометки 	= 1;
                               
НомерДействияУстановкиГТД		= -1;
НомерДействияУдаления			= -1; 
НомерДействияИзмКолНаПроц		= -1;
НомерДействияИзмКолНаАбсЧисло	= -1;
НомерДействияДобИзДок			= -1;
НомерДействияИзмЦеныНаПроц		= -1;
НомерДействияИзмЦеныНаАбсЧисло	= -1;
НомерДействияРазнСуммыПоКол		= -1; 
НомерДействияРазнСуммыПоСуммам	= -1;
НомерДействияЗаполнЦеныИзСпр	= -1;
НомерДействияЗаполнНовойЦеныИзСпр= -1;
НомерДействияСкидкаПроцентом	= -1;
НомерДействияСкидкаСуммой		= -1;
НомерДействияДобИзДокРН			= -1;

// инициализация списков
ПорядокОкругления = СоздатьОбъект("СписокЗначений");
ПорядокОкругления.УдалитьВсе();
ПорядокОкругления.ДобавитьЗначение(0.0001);
ПорядокОкругления.ДобавитьЗначение(0.001);
ПорядокОкругления.ДобавитьЗначение(0.01);
ПорядокОкругления.ДобавитьЗначение(0.1);
ПорядокОкругления.ДобавитьЗначение(1);
ПорядокОкругления.ДобавитьЗначение(10);
ПорядокОкругления.ДобавитьЗначение(100);
ПорядокОкругления.ДобавитьЗначение(1000);
ПорядокОкругления.ДобавитьЗначение(10000);
