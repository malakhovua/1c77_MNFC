Перем V7;

//*******************************************
Процедура Сформировать()
	СпрТМЦВнеш = V7.CreateObject("Справочник.ТМЦ");
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	СтНДС = 1 + Константа.БазНДС.Ставка.Получить(НаДату);
		
	НачатьТранзакцию();
	
	
	//Состояние("Очищаю состояния кода синхр.");
	//СпрТМЦ.ВыбратьЭлементы(0);
	//Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
	//	Если СпрТМЦ.ЭтоГруппа() = 0 Тогда
	//		СпрТМЦ.ЕстьКодС.Получить(НаДату) = 0;
	//		СпрТМЦ.Записать();
	//	КонецЕсли;
	//КонецЦикла;
	
	Состояние("Импортирую цены");
	СпрТМЦВнеш.ВыбратьЭлементы();
	Пока СпрТМЦВнеш.ПолучитьЭлемент() = 1 Цикл
		Если СпрТМЦВнеш.ЭтоГруппа() = 0 Тогда
			Если СокрЛП(СпрТМЦВнеш.КодС) <> "" Тогда
				СпрТМЦ.ВыбратьЭлементыПоРеквизиту("КодС", СпрТМЦВнеш.КодС, 0, 0);
				Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
					
					СпрТМЦ.ИспользоватьДату(НаДату,1);	

					СпрТМЦ.ПечататьВДекларацию = СпрТМЦВнеш.ПечататьВДекларацию;
				
					СпрТМЦ.ЕстьКодС = СпрТМЦВнеш.ЕстьКодС; //--- УМК Сандомирский В.Ю. (27.02.15) Обновляем галочку из бухгалтерии // было СпрТМЦ.ЕстьКодС = 1;
				
					СпрТМЦ.Записать();
					ЦенаПрод = Окр(СпрТМЦВнеш.Цена_Прод.Получить(НаДату) * СтНДС, 2);
					Если СпрТМЦ.Цена_Прод.Получить(НаДату) <> ЦенаПрод Тогда
						СпрТМЦ.Цена_Прод.Установить(НаДату, ЦенаПрод);
					КонецЕсли;
					Сообщить(СпрТМЦ);
//				
				КонецЦикла
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//СпрТМЦ.ВыбратьЭлементы();
	//Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
	//	Если (СпрТМЦ.ЕстьКодС = 0) И (СпрТМЦ.ПечататьВДекларацию = 1) Тогда
	//		СпрТМЦ.ПечататьВДекларацию = 0;
	//		СпрТМЦ.Записать();
	//		СпрТМЦ.Цена_Прод.Установить(НаДату, 0);
	//		Сообщить("Очищен признак ""Печатать в декларацию"" у: " + Строка(СпрТМЦ.ТекущийЭлемент()));
	//	КонецЕсли;
	//КонецЦикла;
	
	Если Вопрос("Сохранить?", "Да+Нет") = "Да" Тогда
	    ЗафиксироватьТранзакцию();
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;
КонецПроцедуры

Функция ВернутьЦенуТМЦ(Товар, КатегорияЦены)
	Цена = 0;
	
	ЦеныТовара = v7.CreateObject("Справочник.Цены");
	ЦеныТовара.ИспользоватьВладельца(Товар);
	ЦеныТовара.ВыбратьЭлементы();
	Пока ЦеныТовара.ПолучитьЭлемент()  = 1 Цикл
		Если ЦеныТовара.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		Если ЦеныТовара.КатегорияЦены.Наименование = КатегорияЦены.Наименование Тогда
			Цена = ЦеныТовара.ТекущийЭлемент();
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если (Цена <> 0) Тогда
		Возврат Цена.Цена.Получить(НаДату);
	КонецЕсли;
	
	Возврат Цена;	
КонецФункции

Процедура ОбновитьПоТЦ()
	Если СокрЛП(ВыбКЦ.НаименованиеБух) = "" Тогда
		Предупреждение("В категории цен не указано наименование в бухгалтерии");
		Возврат;
	КонецЕсли;
	
	СпрТМЦВнеш = V7.CreateObject("Справочник.ТМЦ");	
	СпрКЦВнеш = V7.CreateObject("Справочник.КатегорииЦен");	
	Если СпрКЦВнеш.НайтиПоНаименованию(ВыбКЦ.НаименованиеБух,0, 1) = 0 Тогда
		Предупреждение("В бухгалтерии не найден тип цен с указанным наименованием");
		Возврат;
	КонецЕсли;
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	ДокУЦ = СоздатьОбъект("Документ.УстановкаЦенТМЦ");
	ДокУЦ.Новый();
	ДокУЦ.ДатаДок = НаДату;
	ДокУЦ.Фирма = Константа.БазФирма;
	глУстановитьНомер(ДокУЦ);
	ДокУЦ.Категория = ВыбКЦ;
	ДокУЦ.Автор = глПользователь;
	ДокУЦ.Примечание = "Импорт из бухгалтерии: " + Строка(ТекущаяДата()) + " в " + Строка(ТекущееВремя());
	ДокУЦ.Записать();
		
	НачатьТранзакцию();
	Состояние("Импортирую цены");
	СпрТМЦВнеш.ВыбратьЭлементы();
	Пока СпрТМЦВнеш.ПолучитьЭлемент() = 1 Цикл
		Если СпрТМЦВнеш.ЭтоГруппа() = 0 Тогда
			Если СокрЛП(СпрТМЦВнеш.КодС) <> "" Тогда
				СпрТМЦ.ВыбратьЭлементыПоРеквизиту("КодС", СпрТМЦВнеш.КодС, 0, 0);
				Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл	
					Цена = ВернутьЦенуТМЦ(СпрТМЦВнеш.ТекущийЭлемент(), СпрКЦВнеш.ТекущийЭлемент());
					ЦенаСт = глВернутьЦену(СпрТМЦ.ТекущийЭлемент(), ВыбКЦ, НаДату, Гривня);
					Если (Цена <> 0) И (Цена <> ЦенаСт) Тогда
						ДокУЦ.НоваяСтрока();
						ДокУЦ.ТМЦ = СпрТМЦ.ТекущийЭлемент();
						ДокУЦ.Цена = Цена;
						ДокУЦ.Ед = СпрТМЦ.ЕдиницаПоУмолчанию;
						Сообщить(СпрТМЦ);
					КонецЕсли;					
				КонецЦикла;
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;
	
	Если ДокУЦ.КоличествоСтрок() <> 0 Тогда
		ДокУЦ.Записать();
		Сообщить(ДокУЦ);
	КонецЕсли;
	
	Если Вопрос("Сохранить?", "Да+Нет") = "Да" Тогда
	    ЗафиксироватьТранзакцию();
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;
КонецПроцедуры

//-----------------------------------------------------------------
Процедура ИнитOLE()
	V7=СоздатьОбъект("V77.Application");              
	й=V7.Initialize(V7.RMTrade,"/d "+СокрЛП(ПутьКБазе), "No_Splash_Show"); //+" /nДмитрий"
	Если й=0 Тогда
		Предупреждение("Ошибка инициализации !!!");
		V7=0;
	КонецЕсли;
КонецПроцедуры

//*******************************************
Процедура ПриЗакрытии()
	СохранитьЗначение("ПутьКЧБазе", ПутьКБазе);	
	
	Если V7 <> "" Тогда
		V7.ExecuteBatch("ЗавершитьРаботуСистемы()");
		V7=0;	    
	КонецЕсли;
КонецПроцедуры

Процедура ВыбратьКаталог()
	ФС.ВыбратьКаталог(ПутьКБазе, "Выберите путь к базе");
КонецПроцедуры

//====================================================================== 
Процедура ПриОткрытии()
	Если Константа.УМК_АвтоРазбиватьРН = Да Тогда
		
		//Предупреждение("Используйте для этих целей документ"  +  глПравильныйСимволПереноса +  " ""Установка деклрируемых цен (УМК)"" " ,20);
		//
		//СтатусВозврата(0);
		//
		//Возврат;
		
	КонецЕсли;
КонецПроцедуры // ПриОткрытии


КонДата = НачМесяца(РабочаяДата())-1;
ДатаФОст = НачМесяца(КонДата);
ПутьКБазе = ВосстановитьЗначение("ПутьКЧБазе");
НаДату = ТекущаяДата();