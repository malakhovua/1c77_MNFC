// ===============================
Процедура ЗагрузитьДрайвераЭККА()
		
КонецПроцедуры	

// ===============================
Процедура ТорговоеОборудованиеПодключить() Экспорт
	
	глСписокФискальныхРегистраторов=СоздатьОбъект("СписокЗначений");
	глСписокЭККА_OFFLine=СоздатьОбъект("СписокЗначений");
	глСписокЭККА_Автономно=СоздатьОбъект("СписокЗначений");
	
	глПереченьДрайверов = СоздатьОбъект("СписокЗначений");

	РаботаСоСканеромШтрихКода = 0;
	СканерШтрихКода = 0;
	ШтрихКодИмеетПрефикс = 0;
	
	ТекущийЭККА = 0;
	
	//Определяем настройки торгового оборудования
	ТоргОбор = СоздатьОбъект("Справочник.ТорговоеОборудование");
	Если ТоргОбор.НайтиПоКоду(ИмяКомпьютера())=1 Тогда
	    Если СокрЛП(ТоргОбор.ТекущийЭлемент()) = СокрЛП(ИмяКомпьютера()) Тогда
	        // нашли настройки         
			глКомментарий("Найдены настройки торгового оборудования для компьютера "+ИмяКомпьютера(),3);
			// инициализация сканера ШК
			Если ТоргОбор.РаботаСК = 1 Тогда
				РаботаСоСканеромШтрихКода = ТоргОбор.ТипСканера;  
				ШтрихКодИмеетПрефикс = ТоргОбор.ЕстьПрефикс;
			КонецЕсли;  			
			Если РаботаСоСканеромШтрихКода = 2 Тогда
				РаботаСоСканеромШтрихКода=0;				
				Если ЗагрузитьВнешнююКомпоненту("ScanOPOS.dll")<>0 Тогда
					СканерШтрихКода=СоздатьОбъект("AddIn.Scanner");
					Если СканерШтрихКода.УстройствоВключено=0 Тогда
						Если СканерШтрихКода.Подсоединить("Scanner") = 0 Тогда // OPOS_SUCCESS
							Если СканерШтрихКода.Занять(1)= 0 Тогда // OPOS_SUCCESS
								СканерШтрихКода.УстройствоВключено=1;
								Если СканерШтрихКода.Результат= 0 Тогда // OPOS_SUCCESS
									РаботаСоСканеромШтрихКода=2;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					Иначе
						РаботаСоСканеромШтрихКода=2;
					КонецЕсли;
				КонецЕсли;
				Если РаботаСоСканеромШтрихКода=0 Тогда
					глКомментарий("НЕ УДАЛОСЬ подключить сканер штрих-кода!!!",0);
					СканерШтрихКода=0;
				Иначе
					СканерШтрихКода.ОчиститьВход();
					СканерШтрихКода.ОчиститьВыход();
					СканерШтрихКода.ПосылкаДанных=1;
					глКомментарий("Сканер штрих-кода подключен!!!",3);
				КонецЕсли;
			КонецЕсли;         
			
			// Создаем список драйверов
			Для Инд=1 по Метаданные.Обработка() Цикл
				МДОбработка=Метаданные.Обработка(Инд);
				Если Найти(МДОбработка.Идентификатор,"ОбслуживаниеЭККА_")<>0 тогда
					ИмяОбр = МДОбработка.Идентификатор;  
					Расшифровка = СоздатьОбъект("СписокЗначений"); 
					Расшифровка.ДобавитьЗначение("ПодключитьДрайвер","Парам"); 
					глРасшифровка = Расшифровка;					
					ОткрытьФорму("Обработка."+ИмяОбр+"#");
				КонецЕсли;		
			КонецЦикла;
			
			// Создаем список ЭККА 
			РабМесто = СоздатьОбъект("Справочник.ЭККАРабочегоМеста");
			РабМесто.ИспользоватьВладельца(ТоргОбор); 
			РабМесто.ВыбратьЭлементы();
			Пока РабМесто.ПолучитьЭлемент() = 1 Цикл    
				Если РабМесто.ЭККА.РежимРаботы <> Перечисление.РежимыРаботыЭККА.Автономный Тогда
					ИмяОбр = "ОбслуживаниеЭККА_"+СокрЛП(Строка(РабМесто.ЭККА.Тип));
				КонецЕсли;	
				Расшифровка = СоздатьОбъект("СписокЗначений"); 
				
				Расшифровка.ДобавитьЗначение("Инициализация","Парам");
				Расшифровка.ДобавитьЗначение(РабМесто.ЭККА,"Касса");

				Если РабМесто.ЭККА.РежимРаботы = Перечисление.РежимыРаботыЭККА.Регистрация тогда
					Расшифровка.ДобавитьЗначение(1,"Режим");					
					глРасшифровка = Расшифровка;					
					ОткрытьФорму("Обработка."+ИмяОбр+"#");                
					глСписокФискальныхРегистраторов.ДобавитьЗначение(РабМесто.ЭККА,Строка(РабМесто.ЭККА));
				ИначеЕсли РабМесто.ЭККА.РежимРаботы = Перечисление.РежимыРаботыЭККА.Отчет тогда
					Расшифровка.ДобавитьЗначение(2,"Режим");					
					глРасшифровка = Расшифровка;					
					ОткрытьФорму("Обработка."+ИмяОбр+"#");                         
					глСписокЭККА_OFFLine.ДобавитьЗначение(РабМесто.ЭККА,Строка(РабМесто.ЭККА));
				ИначеЕсли РабМесто.ЭККА.РежимРаботы = Перечисление.РежимыРаботыЭККА.Автономный тогда
					глСписокЭККА_Автономно.ДобавитьЗначение(РабМесто.ЭККА,Строка(РабМесто.ЭККА));
				КонецЕсли;	
			КонецЦикла;
			                                     
			Значен = 0;
			Поз = 0;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ТорговоеОборудованиеОтключить() Экспорт
	
	Если РаботаСоСканеромШтрихКода=2 Тогда
		СканерШтрихКода.Отсоединить();
	КонецЕсли;                
	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии() 
	Параметр = глРасшифровка.Получить("Парам");
    Если ПустоеЗначение(Параметр)=1 Тогда
        Параметр = "Подключить";
	КонецЕсли;                  
	
	Если Параметр = "Подключить" тогда
		ТорговоеОборудованиеПодключить();		
	ИначеЕсли Параметр = "Отключить" тогда	
		ТорговоеОборудованиеОтключить();
	КонецЕсли;	
	
	СтатусВозврата(0);
КонецПроцедуры	

