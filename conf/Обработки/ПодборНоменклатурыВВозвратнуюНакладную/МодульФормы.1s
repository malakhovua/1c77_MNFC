Процедура ЗаполнитьТабЗапасы() Далее

//***********************Обработчики_событий_формы****************************************//
Процедура ПриОткрытии()

	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		ВыбКонтрагент = Форма.Параметр.Получить("Контрагент");
		НачДата       = Форма.Параметр.Получить("НачДата");
		КонДата       = Форма.Параметр.Получить("КонДата");
	КонецЕсли;

	ЗаполнитьТабЗапасы();
	
КонецПроцедуры	

//***********************Обработчики_событий_тз_формы*************************************//
Процедура Выбор()
	ТекущаяСтрока = ТабЗапасов.ТекущаяСтрока();
	Если ТекущаяСтрока = 0 Тогда
		Возврат;
	Иначе
		ТабЗапасов.ПолучитьСтрокуПоНомеру(ТекущаяСтрока);
		Количество = 0;
		ВвестиЧисло(Количество,"Введите количество",15,3);
		ТабПодбор.НоваяСтрока();
		ТабПодбор.Группа = ТабЗапасов.Группа;
		ТабПодбор.Номенклатура = ТабЗапасов.Номенклатура;
		ТабПодбор.Упаковка = ТабЗапасов.Упаковка;
		ТабПодбор.Документ = ТабЗапасов.Документ;
		ТабПодбор.Ед = ТабЗапасов.Ед;
		ТабПодбор.Кво = Количество;
	КонецЕсли;
КонецПроцедуры

Процедура Очистить()
	ТабПодбор.УдалитьСтроки()
КонецПроцедуры

Процедура УдалитьСтроку()
	ТекущаяСтрока = ТабПодбор.ТекущаяСтрока();
	Если ТекущаяСтрока = 0 Тогда
		Возврат;
	Иначе
		ТабПодбор.УдалитьСтроку(ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

//***********************Обработчики_команд_формы****************************************//
Процедура Открыть()
	ТекущаяСтрока = ТабЗапасов.ТекущаяСтрока();
	Если ТекущаяСтрока = 0 Тогда
		Возврат;
	Иначе
		ОткрытьФорму(ТабЗапасов.ПолучитьЗначение(ТекущаяСтрока, "Документ"));
	КонецЕсли;
КонецПроцедуры

Процедура ПередатьВДокумент()
	Форма.Параметр = СоздатьОбъект("СписокЗначений");
	Форма.Параметр.Установить("ТабПодбор", ТабПодбор);
	Форма.Закрыть();
КонецПроцедуры

//**********************Служебные_процедуры***********************************************//
Процедура ЗаполнитьТабЗапасы()
	
	рс = СоздатьОбъект("ODBCRecordset");
	ТекстЗапроса = "
	|SELECT ТМЦ.PARENTID [Группа $Справочник.ТМЦ]
	|	, $РасходнаяНакладнаяСтроки.ТМЦ [Номенклатура $Справочник.ТМЦ]
	|	, $РасходнаяНакладнаяСтроки.ВидУпаковки [Упаковка $Справочник.ВидыУпаковки]
	|	, $РасходнаяНакладнаяСтроки.Ед [Ед $Справочник.Единицы]
	|	, $РасходнаяНакладнаяСтроки.Кво Кво
	|	, $РасходнаяНакладнаяСтроки.ЦенаСНДС ЦенаСНДС
	|	, $РасходнаяНакладнаяСтроки.СуммаСНДС СуммаСНДС
	|	, (Cast(Left(Журнал.DATE_TIME_IDDOC, 8) AS datetime)) Дата
	|	, Журнал.DOCNO Номер
	|	, Журнал.IDDOC [Документ $Документ]
	|	, Подзапрос.СуммаКвоВозврат КвоВозврат
	|	, ($РасходнаяНакладнаяСтроки.Кво - IsNull(Подзапрос.СуммаКвоВозврат, 0)) _КвоДоставлено
	|	, Журнал.IDDOCDEF Документ_вид
	|	, ТМЦ1.DESCR ТМЦ1Наименование
	|FROM $ДокументСтроки.РасходнаяНакладная AS РасходнаяНакладнаяСтроки
	|	INNER JOIN _1SJOURN AS Журнал ON РасходнаяНакладнаяСтроки.IDDOC = Журнал.IDDOC
	|	INNER JOIN $Справочник.ТМЦ AS ТМЦ ON $РасходнаяНакладнаяСтроки.ТМЦ = ТМЦ.ID
	|	INNER JOIN $Документ.РасходнаяНакладная AS РасходнаяНакладная ON РасходнаяНакладнаяСтроки.IDDOC = РасходнаяНакладная.IDDOC
	|	LEFT OUTER JOIN (SELECT $ВозвратнаяНакладнаяСтроки.ТМЦ ТМЦ
	|			, $ВозвратнаяНакладнаяСтроки.ВУП ВУП
	|			, $ВозвратнаяНакладнаяСтроки.ДокПродажи ДокПродажи
	|			, Sum($ВозвратнаяНакладнаяСтроки.Кво) СуммаКвоВозврат
	|		FROM $ДокументСтроки.ВозвратнаяНакладная AS ВозвратнаяНакладнаяСтроки
	|			INNER JOIN _1SJOURN AS Журнал ON ВозвратнаяНакладнаяСтроки.IDDOC = Журнал.IDDOC
	|		WHERE ((Журнал.CLOSED & 1) = 1)
	|		GROUP BY $ВозвратнаяНакладнаяСтроки.ТМЦ
	|			, $ВозвратнаяНакладнаяСтроки.ВУП
	|			, $ВозвратнаяНакладнаяСтроки.ДокПродажи) AS Подзапрос ON РасходнаяНакладнаяСтроки.IDDOC = Подзапрос.ДокПродажи AND $РасходнаяНакладнаяСтроки.ТМЦ = Подзапрос.ТМЦ AND $РасходнаяНакладнаяСтроки.ВидУпаковки = Подзапрос.ВУП
	|	LEFT OUTER JOIN $Справочник.ТМЦ AS ТМЦ1 ON ТМЦ.PARENTID = ТМЦ1.ID
	|WHERE (Журнал.DATE_TIME_IDDOC >= :ДатаНач)
	|	AND (Журнал.DATE_TIME_IDDOC <= :ДатаКон)
	|	AND ($РасходнаяНакладная.Контрагент = :выбКонтрагент)
	|	AND ((Журнал.CLOSED & 1) = 1)
	|ORDER BY ТМЦ1.DESCR
	|	, $РасходнаяНакладнаяСтроки.ТМЦ
	|	, $РасходнаяНакладнаяСтроки.ВидУпаковки
	|	, Журнал.IDDOC
	|";
	
	рс.УстановитьТекстовыйПараметр("ДатаНач", НачДата);
	рс.УстановитьТекстовыйПараметр("ДатаКон", КонДата);
	рс.УстановитьТекстовыйПараметр("выбКонтрагент", выбКонтрагент);
	
Результат = рс.ВыполнитьИнструкцию(ТекстЗапроса);
	Результат.ВыбратьСтроки();
	нпп = 1;
	ТабЗапасов.УдалитьСтроки();
	
	Пока Результат.ПолучитьСтроку() = 1 Цикл
		ТабЗапасов.НоваяСтрока();
		ТабЗапасов.Заполнить(Результат,,,"2,3,4,5,6,7,8,9,10,11,12,13");
		ТабЗапасов.нпп = нпп;
		нпп = нпп + 1;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДату(Интервал, Конец = 0)
	Если ТипЗначенияСтр(Интервал) = "Дата" Тогда
		Возврат Интервал;
	Иначе
		Если Интервал = "День" Тогда
			Возврат ТекущаяДата();
		ИначеЕсли Интервал = "Месяц" Тогда
			Возврат ?(Конец = 0, НачМесяца(ТекущаяДата()), КонМесяца(ТекущаяДата()));
		ИначеЕсли Интервал = "Квартал" Тогда
			Возврат ?(Конец = 0, НачКвартала(ТекущаяДата()), КонКвартала(ТекущаяДата()));
		Иначе
			Возврат ?(Конец = 0, НачГода(ТекущаяДата()), КонГода(ТекущаяДата()));
		КонецЕсли;
	КонецЕсли;
КонецФункции

//***********************Объекты_формы***************************************************//

//Таблица запасов
ТабЗапасов.НоваяКолонка("нпп", "Число", 5,, "№", 3);
ТабЗапасов.НоваяКолонка("Группа", "Справочник.ТМЦ",,,"Группа",20);
ТабЗапасов.НоваяКолонка("Номенклатура", "Справочник.ТМЦ",,,"Номенклатура",35);
ТабЗапасов.НоваяКолонка("Упаковка", "Справочник.ВидыУпаковки",,,"Упак.",18);
ТабЗапасов.НоваяКолонка("Ед","Справочник.Единицы",,,"Ед.",5);
ТабЗапасов.НоваяКолонка("Кво", "Число", 15, 3,"К-во прод.", 10);
ТабЗапасов.НоваяКолонка("ЦенаСНДС", "Число", 12, 2,"Цена", 10);
ТабЗапасов.НоваяКолонка("СуммаСНДС", "Число", 12, 2,"Сумма", 10);
ТабЗапасов.НоваяКолонка("Дата", "Дата",,,"Дата", 9);
ТабЗапасов.НоваяКолонка("Номер", "Строка",,,"Номер", 11);
ТабЗапасов.НоваяКолонка("Документ", "Документ",,,"Накладная",25);
ТабЗапасов.НоваяКолонка("КвоВозврат", "Число", 15, 3,"К-во возвр.", 10);
ТабЗапасов.НоваяКолонка("_КвоДоставлено", "Число", 15, 3,"К-во дост.", 10);

//Таблица подбора
ТабПодбор.НоваяКолонка("Группа", "Справочник.ТМЦ",,,"Группа",15);
ТабПодбор.НоваяКолонка("Номенклатура", "Справочник.ТМЦ",,,"Номенклатура",35);
ТабПодбор.НоваяКолонка("Упаковка", "Справочник.ВидыУпаковки",,,"Упак.",10);
ТабПодбор.НоваяКолонка("Документ", "Документ",,,"Накладная",25);
ТабПодбор.НоваяКолонка("Ед","Справочник.Единицы",,,"Ед.",5);
ТабПодбор.НоваяКолонка("Кво", "Число", 15, 3,"К-во прод.", 7);

НачДата = ПолучитьДату(НачалоСтандартногоИнтервала());
КонДата = ПолучитьДату(КонецСтандартногоИнтервала(), 1);
