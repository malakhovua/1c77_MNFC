//*********Предопределенные процедуры******* 
Процедура ПриОткрытии()
	фРезультат = 1;
КонецПроцедуры
//*******************************************

Функция ТаблицаПериодов(НормаСписанияСпр, Форма = 0)
	
	ТаблицаПериодов = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаПериодов.НоваяКолонка("Период");
	
	Реквизит = ?(Форма = 1,"НормаСписания","НормаСписанияУп");
	Пер = СоздатьОбъект("Периодический");
	Пер.ИспользоватьОбъект(Реквизит, НормаСписанияСпр.ТекущийЭлемент());
	Пер.ОбратныйПорядок();
	Пер.ВыбратьЗначения();
	Пока Пер.ПолучитьЗначение() = 1 Цикл
		Если Пер.Значение <> 0 Тогда
			Если Пер.ДатаЗнач<=Период Тогда
				Продолжить;
			КонецЕсли;
			ТаблицаПериодов.НоваяСтрока();
			ТаблицаПериодов.Период = Пер.ДатаЗнач;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаПериодов.НоваяСтрока();
	ТаблицаПериодов.Период = Период;
	
	Возврат ТаблицаПериодов;
	
КонецФункции


//*******************************************
Процедура УстановитьНорму()
	
	Перем Результат, Результат2, ТаблицаПериодов; //:ТаблицаЗначений
	
	рс = СоздатьОбъект("ODBCRecordset");
	
	ТекстЗапроса = "
	|SELECT УМК_НормыСписанияМатериаловУпаковок.ID [НормаСписанияМатериалаСсылка $Справочник.УМК_НормыСписанияМатериаловУпаковок]
	|	, УМК_РазрешенныеВидыУпаковкиТМЦ.ID [ВидУпаковкиСсылка $Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ]
	|   , $УМК_РазрешенныеВидыУпаковкиТМЦ.ВидУпаковки [ВидУпаковки $Справочник.ВидыУпаковки]
	|	, ТМЦ.ID [Номенклатура $Справочник.ТМЦ]
	|	, $ПоследнееЗначение.УМК_НормыСписанияМатериаловУпаковок.Материал(УМК_НормыСписанияМатериаловУпаковок.ID, :Период) [Материал $Справочник.ТМЦ]
	|   , $ПоследнееЗначение.УМК_НормыСписанияМатериаловУпаковок.Неактивен(УМК_НормыСписанияМатериаловУпаковок.ID, :Период) as notactive
	|   , $ПоследнееЗначение.УМК_НормыСписанияМатериаловУпаковок.НормаСписанияУп(УМК_НормыСписанияМатериаловУпаковок.ID, :Период) НормаСписанияУп
	|   , $ПоследнееЗначение.УМК_НормыСписанияМатериаловУпаковок.НормаСписания(УМК_НормыСписанияМатериаловУпаковок.ID, :Период) НормаСписания
	|FROM $Справочник.ТМЦ AS ТМЦ
	|	INNER JOIN $Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ AS УМК_РазрешенныеВидыУпаковкиТМЦ ON ТМЦ.ID = УМК_РазрешенныеВидыУпаковкиТМЦ.PARENTEXT
	|	INNER JOIN $Справочник.УМК_НормыСписанияМатериаловУпаковок AS УМК_НормыСписанияМатериаловУпаковок ON УМК_РазрешенныеВидыУпаковкиТМЦ.ID = УМК_НормыСписанияМатериаловУпаковок.PARENTEXT
	|WHERE ($ПоследнееЗначение.УМК_НормыСписанияМатериаловУпаковок.Материал(УМК_НормыСписанияМатериаловУпаковок.ID, :Период) = :Материал)
	|	AND (УМК_РазрешенныеВидыУпаковкиТМЦ.ISMARK = 0)
	|" 
	+ ?(списПродукции.РазмерСписка()>0," and  ТМЦ.ID IN (SELECT Val FROM #списПродукции)", "");
	
	рс.УстановитьТекстовыйПараметр("Материал", Материал);
	рс.УстановитьТекстовыйПараметр("Период", Период);
	
	Если списПродукции.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(списПродукции, "#списПродукции", "ТМЦ");
	КонецЕсли;
	
	Результат = рс.ВыполнитьИнструкцию(ТекстЗапроса);
	Результат.НоваяКолонка("НормаСписанияУпНовая","Число",15,5);
	Результат.НоваяКолонка("НормаСписанияНовая","Число",15,5);
	
	Результат.ВыбратьСтроки();
	
	Пока Результат.ПолучитьСтроку() = 1 Цикл
		
		Если Результат.notactive = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		НормаСписанияСпр = СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковок");
		
		Если НормаСписанияСпр.НайтиЭлемент(Результат.НормаСписанияМатериалаСсылка) = 0 Тогда
			Продолжить;
		КонецЕсли;
	
		ТаблицаПериодов = ТаблицаПериодов(НормаСписанияСпр);
		ТаблицаПериодов.ВыбратьСтроки();
		
		Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл //Установим на каждый период
			
			НормаСписанияСпр.НормаСписанияУп.Установить(ТаблицаПериодов.Период, НовНормаСписанияУп);
			
			//Расчитаем новую норму списания. 
			НормаСписанияНов = ?(НормаСписанияСпр.Владелец.ВесУпаковки.Получить(ТаблицаПериодов.Период) = 0,0,
			НормаСписанияСпр.НормаСписанияУп.Получить(ТаблицаПериодов.Период) / НормаСписанияСпр.Владелец.ВесУпаковки.Получить(ТаблицаПериодов.Период));
			НормаСписанияСпр.НормаСписания.Установить(ТаблицаПериодов.Период, НормаСписанияНов);
			
			//Расчитаем сумму.
			Сумма = НормаСписанияСпр.Цена.Получить(ТаблицаПериодов.Период) * НормаСписанияСпр.НормаСписания.Получить(ТаблицаПериодов.Период);
			НормаСписанияСпр.Сумма.Установить(ТаблицаПериодов.Период, Сумма);
			
		КонецЦикла; // По периодам
		
		НормаСписанияСпр.Записать();
		
		Результат.НормаСписанияУпНовая = НормаСписанияСпр.НормаСписанияУп.Получить(Период);
		Результат.НормаСписанияНовая   = НормаСписанияСпр.НормаСписания.Получить(Период);
		
	КонецЦикла;

	//Нормы упаковок форм
	рс = СоздатьОбъект("ODBCRecordset");
	
	ТекстЗапроса = "-- qryMaker:Отчет1.2024.09.17.19.21.32
	|SELECT УМК_НормыСписанияМатериаловУпаковокФорм.ID [НормаСписанияМатериалаСсылка $Справочник.УМК_НормыСписанияМатериаловУпаковокФорм]
	|	, УМК_РазрешенныеВидыУпаковкиТМЦ.ID [ВидУпаковкиСсылка $Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ]
	|	, $УМК_РазрешенныеВидыУпаковкиТМЦ.ВидУпаковки [ВидУпаковки $Справочник.ВидыУпаковки]
	|	, ТМЦ.ID [Номенклатура $Справочник.ТМЦ]
	|	, $ПоследнееЗначение.УМК_НормыСписанияМатериаловУпаковокФорм.Материал(УМК_НормыСписанияМатериаловУпаковокФорм.ID, :Период) [Материал $Справочник.ТМЦ]
	|	, $ПоследнееЗначение.УМК_НормыСписанияМатериаловУпаковокФорм.Неактивен(УМК_НормыСписанияМатериаловУпаковокФорм.ID, :Период) notactive
	|	, $ПоследнееЗначение.УМК_НормыСписанияМатериаловУпаковокФорм.НормаСписания(УМК_НормыСписанияМатериаловУпаковокФорм.ID, :Период) НормаСписания
	|FROM $Справочник.ТМЦ AS ТМЦ
	|	INNER JOIN $Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ AS УМК_РазрешенныеВидыУпаковкиТМЦ ON ТМЦ.ID = УМК_РазрешенныеВидыУпаковкиТМЦ.PARENTEXT
	|	INNER JOIN $Справочник.ФормыУпаковки AS ФормыУпаковки ON $ПоследнееЗначение.УМК_РазрешенныеВидыУпаковкиТМЦ.ФормаУпаковки(УМК_РазрешенныеВидыУпаковкиТМЦ.ID, :Период) = ФормыУпаковки.ID
	|	INNER JOIN $Справочник.УМК_НормыСписанияМатериаловУпаковокФорм AS УМК_НормыСписанияМатериаловУпаковокФорм ON ФормыУпаковки.ID = УМК_НормыСписанияМатериаловУпаковокФорм.PARENTEXT
	|WHERE ($ПоследнееЗначение.УМК_НормыСписанияМатериаловУпаковокФорм.Материал(УМК_НормыСписанияМатериаловУпаковокФорм.ID, :Период) = :Материал)
	|AND (УМК_РазрешенныеВидыУпаковкиТМЦ.ISMARK = 0)
	|"
	+ ?(списПродукции.РазмерСписка()>0," and  ТМЦ.ID IN (SELECT Val FROM #списПродукции)", "");
	
	рс.УстановитьТекстовыйПараметр("Материал", Материал);
	рс.УстановитьТекстовыйПараметр("Период", Период);
	
	Если списПродукции.РазмерСписка() > 0 Тогда
		рс.УложитьСписокОбъектов(списПродукции, "#списПродукции", "ТМЦ");
	КонецЕсли;
	
	Результат2 = рс.ВыполнитьИнструкцию(ТекстЗапроса);
	
	Если Результат.КоличествоСтрок() = 0 Тогда
		Результат2.НоваяКолонка("НормаСписанияНовая","Число",15,5);
	КонецЕсли;
	
	Результат2.ВыбратьСтроки();
	
	Пока Результат2.ПолучитьСтроку() = 1 Цикл
		
		Если Результат2.notactive = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		НормаСписанияСпр = СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковокФорм");
		
		Если НормаСписанияСпр.НайтиЭлемент(Результат2.НормаСписанияМатериалаСсылка) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаПериодов = ТаблицаПериодов(НормаСписанияСпр,1);
		ТаблицаПериодов.ВыбратьСтроки();
		
		Пока ТаблицаПериодов.ПолучитьСтроку() = 1 Цикл //Установим на каждый период
			НормаСписанияСпр.НормаСписания.Установить(ТаблицаПериодов.Период, НовНормаСписанияУп);
			НормаСписанияСпр.Записать();
		КонецЦикла;// По периодам
		
		Если Результат.КоличествоСтрок() <> 0 Тогда
			Результат.НоваяСтрока();
			Результат.НормаСписанияМатериалаСсылка = Результат2.НормаСписанияМатериалаСсылка;
			Результат.ВидУпаковкиСсылка = Результат2.ВидУпаковкиСсылка;
			Результат.ВидУпаковки = Результат2.ВидУпаковки;
			Результат.Номенклатура =Результат2.Номенклатура;
			Результат.Материал = Результат2.Материал;
			Результат.notactive = Результат2.notactive;
			Результат.НормаСписания = Результат2.НормаСписания;
			Результат.НормаСписанияНовая   = НормаСписанияСпр.НормаСписания.Получить(Период);
		Иначе
			Результат2.НормаСписанияНовая   = НормаСписанияСпр.НормаСписания.Получить(Период);
		КонецЕсли;
		
	КонецЦикла;
	
	Если фРезультат = 1 Тогда
		ПоказатьТЗ(?(Результат.КоличествоСтрок() = 0, Результат2, Результат),"Результат");
	КонецЕсли;
	
КонецПроцедуры

//****************Работа со списком**********
Процедура ДобавитьВСписок(Элт, Спис)
	Если Спис.Принадлежит(Элт) = 0 Тогда
		Спис.ДобавитьЗначение(Элт, Элт.Наименование);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт)
	ДобавитьвСписок(Элт, списПродукции);
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ИмСп = "")
	ИмСпис = ИмСп;
	КФормы = 0;
	ОткрытьПодбор(НазваниеОбъекта, "ДляВыбора", КФормы, Один);
	КФормы.ВыборГруппы(1);
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры
//**************Работа со списком************


