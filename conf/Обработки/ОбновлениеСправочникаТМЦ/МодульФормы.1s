Перем V7;

Функция ПеренестиЭлементСправочника(СпрТМЦВнеш, Обн)
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	СпрТМЦР = СоздатьОбъект("Справочник.ТМЦ");
	СпрНДС = СоздатьОбъект("Справочник.ШкалаСтавок");
	СпрЕИ = СоздатьОбъект("Справочник.КлассификаторЕдИзм");
	СпрВЗ = СоздатьОбъект("Справочник.ВидыЗатрат");
	СпрЕ = СоздатьОбъект("Справочник.Единицы");
	
	Если СпрТМЦ.НайтиПоКоду(СпрТМЦВнеш.Код, 0) = 0 Тогда
		Если СпрТМЦВнеш.ЭтоГруппа() = 1 Тогда
		    СпрТМЦ.НоваяГруппа();
		Иначе
			СпрТМЦ.Новый();
		КонецЕсли;		    
	ИначеЕсли Обн = 0 Тогда
		Возврат СпрТМЦ.ТекущийЭлемент();
	КонецЕсли;

	СпрТМЦ.Код = СпрТМЦВнеш.Код;
	СпрТМЦ.Наименование = СпрТМЦВнеш.Наименование;
	Если СокрЛП(СпрТМЦВнеш.Родитель.Код) <> "" Тогда
	    Если СпрТМЦР.НайтиПоКоду(СпрТМЦВнеш.Родитель.Код, 0) = 1 Тогда
			Если СпрТМЦР.ЭтоГруппа() = 1 Тогда
			    СпрТМЦ.Родитель = СпрТМЦР.ТекущийЭлемент();
			Иначе
				Сообщить("Для товара: " + СпрТМЦВнеш.Наименование + " в базе бухгалтерии код родителя: " + СпрТМЦВнеш.Родитель.Код + " в этой базе существует элемент с таким кодом");
			КонецЕсли;
		Иначе
			Сообщить("Не найден родитель для : "+ СпрТМЦВнеш.Наименование + " с кодом: " + СпрТМЦВнеш.Код);
		КонецЕсли;
	КонецЕсли;
	
	Если СпрТМЦВнеш.ЭтоГруппа() = 0 Тогда
		СпрТМЦ.ПолнНаименование = СпрТМЦВнеш.ПолнНаименование;
		СпрТМЦ.ВидТМЦ = Перечисление.ВидыТМЦ.ЗначениеПоИдентификатору(СпрТМЦВнеш.ВидТМЦ.Идентификатор());;
		СпрТМЦ.Артикул = СпрТМЦВнеш.Артикул;
		Если СокрЛП(СпрТМЦВнеш.СтавкаНДС.Код) = "НДС20" Тогда
		    СпрТМЦ.СтавкаНДС = Константа.БазНДС;
		Иначе
			Если СпрНДС.НайтиПоКоду(СпрТМЦВнеш.СтавкаНДС.Код) = 1 Тогда
			    СпрТМЦ.СтавкаНДС = СпрНДС.ТекущийЭлемент();
			КонецЕсли;				
		КонецЕсли;
		
		Если СпрЕИ.НайтиПоРеквизиту("ИдентБух", СпрТМЦВнеш.БазЕдиница.Идентификатор(), 0) = 1 Тогда
		    СпрТМЦ.БазоваяЕдиница = СпрЕИ.ТекущийЭлемент();
		Иначе
			Сообщить("Не обнаружена единица измерения: " + СпрТМЦВнеш.БазЕдиница.Идентификатор());
			СпрТМЦ.БазоваяЕдиница = Константа.ЕдиницаВеса;
		КонецЕсли;
		
		СпрТМЦ.Транспорт = СпрТМЦВнеш.Транспорт;
		СпрТМЦ.Счет = СчетПоКоду(СпрТМЦВнеш.Счет.Код);
		СпрТМЦ.ВидЗатрат = ВЗ;
		СпрТМЦ.ВидДеятельности = Константа.БазВидДеятельности;
		СпрТМЦ.ТипТовара = ?(СпрТМЦ.БазоваяЕдиница = Константа.ЕдиницаВеса, Перечисление.ТипыТоваров.Весовой, Перечисление.ТипыТоваров.Штучный);
		СпрТМЦ.КвоДляНН = СпрТМЦВнеш.КвоДляНН;;
	КонецЕсли;
	СпрТМЦ.Записать();
	Если СпрТМЦ.ЭтоГруппа() = 0 Тогда
		СпрЕ.ИспользоватьВладельца(СпрТМЦ.ТекущийЭлемент());
		Если СпрЕ.НайтиПоРеквизиту("Единица", СпрТМЦ.БазоваяЕдиница, 0) = 0 Тогда
		    СпрЕ.Новый();
			СпрЕ.Наименование = Строка(СпрТМЦ.БазоваяЕдиница);
			СпрЕ.Коэффициент = 1;
			СпрЕ.Единица = СпрТМЦ.БазоваяЕдиница;
			СпрЕ.Записать();
		КонецЕсли;			
		СпрТМЦ.ЕдиницаПоУмолчанию = СпрЕ.ТекущийЭлемент();
		СпрТМЦ.Записать();		    
	КонецЕсли;

	Сообщить("Записан: " + СпрТМЦ.ТекущийЭлемент());
	Возврат СпрТМЦ.ТекущийЭлемент();
КонецФункции
	
//*******************************************
Процедура Сформировать()
	СпрТМЦВнеш = V7.CreateObject("Справочник.ТМЦ");
		
	НачатьТранзакцию();
	СпрТМЦВнеш.ВыбратьЭлементы();
	Пока СпрТМЦВнеш.ПолучитьЭлемент() = 1 Цикл
		ПеренестиЭлементСправочника(СпрТМЦВнеш, фОбн);
	КонецЦикла;
	
	Если Вопрос("Сохранить?", "Да+Нет") = "Да" Тогда
	    ЗафиксироватьТранзакцию();
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;
КонецПроцедуры

//*******************************************
Процедура ПереброскаНЗ()
	ДокНЗВн = V7.CreateObject("Документ.НормыЗатрат");
	ДокНЗ = СоздатьОбъект("Документ.НормыЗатрат");
	СпрТМЦВнеш = V7.CreateObject("Справочник.ТМЦ");
		
	НачатьТранзакцию();
	ДокНЗВн.ВыбратьДокументы();
	Пока ДокНЗВн.ПолучитьДокумент() = 1 Цикл
		Если (ДокНЗВн.Действует = 0) ИЛИ (ДокНЗВн.ПометкаУдаления() = 1) Тогда
			Продолжить;
		КонецЕсли;
		Если ДокНЗ.НайтиПоНомеру(ДокНЗВн.НомерДок, ДокНЗВн.ДатаДок) = 0 Тогда
		    ДокНЗ.Новый();
			ДокНЗ.НомерДок = ДокНЗВн.НомерДок;
			ДокНЗ.ДатаДок = ДокНЗВн.ДатаДок;
		ИначеЕсли фОбн = 0 Тогда
			Продолжить;		
		КонецЕсли;
		//СпрТМЦВнеш.НайтиЭлемент(ДокНЗВн.Продукция);
		ДокНЗ.Продукция = ПеренестиЭлементСправочника(ДокНЗВн.Продукция, 0);
		ДокНЗ.КвоПродукции = ДокНЗВн.Выход;
		ДокНЗ.КоэффициентПродукции = ДокНЗВн.Коэф;
		Если ДокНЗ.КоэффициентПродукции = 0 Тогда
			ДокНЗ.КоэффициентПродукции = 1;
		КонецЕсли;
		ДокНЗ.ЕдПродукции = ДокНЗ.Продукция.ЕдиницаПоУмолчанию;
		ДокНЗ.ПроцПотерь = 0;
		ДокНЗ.Действует = ДокНЗВн.Действует;
		ДокНЗ.Автор = глПользователь;
		ДокНЗ.Фирма = Константа.БазФирма;
		ДокНЗ.Примечание = ДокНЗВн.Примечание;
		ДокНЗ.УдалитьСтроки();
		
		ДокНЗВн.ВыбратьСтроки();
		Пока ДокНЗВн.ПолучитьСтроку() = 1 Цикл
			ДокНЗ.НоваяСтрока();
			//СпрТМЦВнеш.НайтиПоКоду(ДокНЗВн.Элемент.Код, 0);
			
			ДокНЗ.Элемент = ПеренестиЭлементСправочника(ДокНЗВн.Элемент, 0);
			Если ДокНЗ.Элемент.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат Тогда
				ДокНЗ.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат;
			Иначе				
			    ДокНЗ.ВидЭлемента = Перечисление.ВидыЭлементовСоставаПродукции.Материал;
			КонецЕсли;
			ДокНЗ.Кво = (ДокНЗВн.Кво / 1000) * ДокНЗВн.Выход;
			ДокНЗ.Коэффициент = 1;
			ДокНЗ.Ед = ДокНЗ.Элемент.ЕдиницаПоУмолчанию;
		КонецЦикла;

		ДокНЗ.Записать();	
		Сообщить(ДокНЗ);
	КонецЦикла;
	
	Если Вопрос("Сохранить?", "Да+Нет") = "Да" Тогда
	    ЗафиксироватьТранзакцию();
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;
КонецПроцедуры

//*******************************************
Процедура Заказы()
	ДокПН = V7.CreateObject("Документ.ПриходнаяНакладная");
	ДокНЗ = СоздатьОбъект("Документ.Заказ");
	СпрТМЦВнеш = V7.CreateObject("Справочник.ТМЦ");
	ТЗПрод = СоздатьОбъект("ТаблицаЗначений");
	ТЗПрод.НоваяКолонка("Продукция", "Справочник.ТМЦ");
	ТЗПрод.НоваяКолонка("НомерДок", "Строка");
	ТЗПрод.НоваяКолонка("Кво", "Число", 15, 3);
	ТЗПрод.НоваяКолонка("ДатаПр", "Дата");
		
	НачатьТранзакцию();
	ДокПН.ВыбратьДокументы(НачДата, КонДата1);
	Пока ДокПН.ПолучитьДокумент() = 1 Цикл
		Если (ДокПН.Контрагент.Вид() <> "ВидыДеятельности") ИЛИ (ДокПН.ПометкаУдаления() = 1) Тогда
			Продолжить;
		КонецЕсли;
		ДокПН.ВыбратьСтроки();
		Пока ДокПН.ПолучитьСтроку() = 1 Цикл
			ТЗПрод.НоваяСтрока();
			ТЗПрод.Продукция = ПеренестиЭлементСправочника(ДокПН.ТМЦ, 0);
			ТЗПрод.ДатаПр = ДокПН.ДатаДок - ТЗПрод.Продукция.ЦиклПроизводства;
			ТЗПрод.НомерДок = ДокПН.НомерДок;
			ТЗПрод.Кво = ДокПН.Кво;			
		КонецЦикла;
	КонецЦикла;	
	
	ТЗПрод.Сортировать("ДатаПр,НомерДок,Продукция");
	СтарДата = Дата(0);
	СтарНомер = "";
	ДокЗ = СоздатьОбъект("Документ.Заказ");
	ТЗПрод.ВыбратьСтроки();
	Пока ТЗПрод.ПолучитьСтроку() = 1 Цикл
		Если (ТЗПрод.ДатаПр <> СтарДата) ИЛИ (СтарНомер <> ТЗПрод.НомерДок) Тогда
			Если СтарДата <> Дата(0) Тогда
				Если ДокЗ.КоличествоСтрок() > 0 Тогда
					ДокЗ.ПоследКод = ДокЗ.КоличествоСтрок();
			        ДокЗ.Записать();
					Сообщить(ДокЗ);
			    КонецЕсли;
			КонецЕсли;
			СтарДата = ТЗПрод.ДатаПр;
			СтарНомер = ТЗПрод.НомерДок;
			
			ДокЗ.Новый();
			ДокЗ.ДатаДок = ТЗПрод.ДатаПр;
			ДокЗ.Фирма = Константа.БазФирма;
			глУстановитьНомер(ДокЗ);
			ДокЗ.Автор = глПользователь;
			ДокЗ.Примечание = ТЗПрод.НомерДок + " от " + Строка(ТЗПрод.ДатаПр);
		КонецЕсли;
			
		ДокЗ.НоваяСтрока();
		ДокЗ.Продукция = ТЗПрод.Продукция;
		ДокЗ.Ед = ТЗПрод.Продукция.ЕдиницаПоУмолчанию;
		ДокЗ.Коэффициент = 1;
		ДокЗ.Кво = ТЗПрод.Кво;
		ДокЗ.НормыЗатрат = ТЗПрод.Продукция.НормыЗатрат.Получить(ТЗПрод.ДатаПр);
//		ДокЗ.КвоКутеров = ДокЗ.Кво / ДокЗ.НормыЗатрат.ПроцПотерь;
		ДокЗ.КвоКутеров = ДокЗ.Кво / ДокЗ.Продукция.ПроцПотерь.Получить(ДокЗ.ДатаДок);
		ДокЗ.КодСтроки = ДокЗ.НомерСтроки;
		ДокЗ.КвоЗамесов = 1;
		ДокЗ.КомментСтр = ТЗПрод.НомерДок;
	КонецЦикла;
	
	Если ДокЗ.КоличествоСтрок() > 0 Тогда
		ДокЗ.ПоследКод = ДокЗ.КоличествоСтрок();
        ДокЗ.Записать();
		Сообщить(ДокЗ);
    КонецЕсли;

	Если Вопрос("Перенос заказов завершён. Сохранить?", "Да+Нет") = "Да" Тогда
	    ЗафиксироватьТранзакцию();
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;
КонецПроцедуры

Процедура Остатки()
	ИтВн = V7.CreateObject("БухгалтерскиеИтоги");
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");

	ИтВн.ИспользоватьСубконто(V7.ВидыСубконто.ТМЦ,,1, 0);
	Ит.ИспользоватьСубконто(ВидыСубконто.ТМЦ,,1, 0);
	
	ИтВн.ВыполнитьЗапрос(,КонДата, "201");
	Ит.ВыполнитьЗапрос(,ДатаФОст, "201");
	
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗ.НоваяКолонка("ОстТам", "Число", 15, 3);
	ТЗ.НоваяКолонка("ОстТамС", "Число", 15, 2);
	ТЗ.НоваяКолонка("ОстТут", "Число", 15, 3);
	ТЗ.НоваяКолонка("ОстТутС", "Число", 15, 2);
	
	ИтВн.ВыбратьСубконто(1);
	Пока ИтВн.ПолучитьСубконто(1) = 1 Цикл
		ТЗ.НоваяСтрока();
		ТЗ.ТМЦ = ПеренестиЭлементСправочника(ИтВн.Субконто(1),0);
		ТЗ.ОстТам = ИтВн.СКД("К");
		ТЗ.ОстТамС = ИтВн.СКД();
	КонецЦикла;

	Ит.ВыбратьСубконто(1);
	Пока Ит.ПолучитьСубконто(1) = 1 Цикл
		ТЗ.НоваяСтрока();
		ТЗ.ТМЦ = Ит.Субконто(1);
		ТЗ.ОстТут = Ит.СКД("К");
		ТЗ.ОстТутС = Ит.СКД();
	КонецЦикла;
	ТЗ.Свернуть("ТМЦ", "ОстТам,ОстТут,ОстТамС,ОстТутС");
	
	ДокВО = СоздатьОбъект("Документ.ВводОстатковТМЦ");
	ДокВО.Новый();
	ДокВО.ТолькоОстатки = 3;
	ДокВО.Автор = глПользователь;
	ДокВО.Фирма = Константа.БазФирма;
    ДокВО.МестоХранения = Константа.БазФирма.СкладМатериалов;
	ДокВО.ДатаДок = ДатаФОст;
	глУстановитьНомер(ДокВО);
	ДокВО.ВидОстатков = 1;
	ДокВО.ВидТары = Перечисление.ВидыТары.Покупная;
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Разница = ТЗ.ОстТам - ТЗ.ОстТут;
		РазницаС = ТЗ.ОстТамС - ТЗ.ОстТутС;
		
		Если (Разница <> 0) ИЛИ (РазницаС <> 0) Тогда
			ДокВО.НоваяСтрока();
			ДокВО.ТМЦ = ТЗ.ТМЦ;
			ДокВО.Счет = СчетПоКоду("201");
			ДокВО.Кво = Разница;
			ДокВО.Ед = ТЗ.ТМЦ.ЕдиницаПоУмолчанию;
			ДокВО.Коэффициент = ДокВО.Ед.Коэффициент;
			ДокВО.СуммаБезНДС = РазницаС;
			ДокВО.ЦенаБезНДС = ДокВО.СуммаБезНДС / ?(ДокВО.Кво = 0,1,ДокВО.Кво);
		КонецЕсли;
	КонецЦикла;
	ДокВО.Записать();
	ДокВО.УстановитьВремя(0,0,0);
	ДокВО.Записать();
КонецПроцедуры

//-----------------------------------------------------------------
Процедура ИнитOLE()
	V7=СоздатьОбъект("V77.Application");              
	й=V7.Initialize(V7.RMTrade,"/d "+СокрЛП(ПутьКБазе), "No_Splash_Show"); //+" /nДмитрий"
	Если й=0 Тогда
		Предупреждение("Ошибка инициализации !!!");
		V7=0;
	КонецЕсли;
КонецПроцедуры

//*******************************************
Процедура ПриЗакрытии()
	СохранитьЗначение("ПутьКЧБазе", ПутьКБазе);
	Если V7 <> 0 Тогда
		V7.ExecuteBatch("ЗавершитьРаботуСистемы()");
		V7=0;
	КонецЕсли;
КонецПроцедуры

Процедура ВыбратьКаталог()
	ФС.ВыбратьКаталог(ПутьКБазе, "Выберите путь к базе");
КонецПроцедуры

КонДата = НачМесяца(РабочаяДата())-1;
ДатаФОст = НачМесяца(КонДата);
ПутьКБазе = ВосстановитьЗначение("ПутьКЧБазе");
V7 = 0;