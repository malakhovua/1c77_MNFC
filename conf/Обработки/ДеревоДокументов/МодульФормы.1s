Перем Расшифровка;
Перем Обновить;
Перем Таб;
Перем СписокЗащитыОтЗацикливания;
Перем ВыбКонтрагент;
//--------------
Функция УстановитьРасшифровку(Докум)
	Расшифровка=СоздатьОбъект("СписокЗначений");
	Расшифровка.ДобавитьЗначение(Докум,"ДокументЖурнала");
	Возврат Расшифровка;
КонецФункции

// ===============================
Функция ПолучитьВалютуДокумента(Док)

	ВидДок = Док.Вид();

	РеквСумма = Метаданные.Документ(ВидДок).РеквизитШапки("Валюта");
	Если РеквСумма.Выбран()=1 Тогда
		Если Док.Валюта.Выбран()=1 Тогда
			Возврат Док.Валюта;
		КонецЕсли;
	КонецЕсли;

	РеквСумма = Метаданные.Документ(ВидДок).РеквизитШапки("РСчетВал");
	Если РеквСумма.Выбран()=1 Тогда
		Если Док.РСчетВал.Выбран()=1 Тогда
			Если Док.РСчетВал.Валюта.Выбран()=1 Тогда
				Возврат Док.РСчетВал.Валюта;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	РеквСумма = Метаданные.Документ(ВидДок).РеквизитШапки("РСчет");
	Если РеквСумма.Выбран()=1 Тогда
		Если Док.РСчет.Выбран()=1 Тогда
			Если Док.РСчет.Валюта.Выбран()=1 Тогда
				Возврат Док.РСчет.Валюта;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	РеквСумма = Метаданные.Документ(ВидДок).РеквизитШапки("Касса");
	Если РеквСумма.Выбран()=1 Тогда
		Если Док.Касса.Выбран()=1 Тогда
			Если Док.Касса.Валюта.Выбран()=1 Тогда
				Возврат Док.Касса.Валюта;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Гривня;

КонецФункции

// ===============================
Функция ПолучитьСуммуСтрокой(Док)
    
	Валюта = ПолучитьВалютуДокумента(Док);
	ПечВал = СокрЛП(Валюта.Кратко);

	ВидДок = Док.Вид();

	Если Валюта <> Гривня Тогда
		
		РеквСумма = Метаданные.Документ(ВидДок).РеквизитШапки("СуммаВал");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " Сумма: "+Док.СуммаВал+" "+ПечВал;
		КонецЕсли;

		РеквСумма = Метаданные.Документ(ВидДок).РеквизитШапки("СуммаСНДС");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " Сумма: "+Док.СуммаСНДС+" "+ПечВал;
		КонецЕсли;

		РеквСумма = Метаданные.Документ(ВидДок).РеквизитТабличнойЧасти("СуммаБезНДСВал");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " Сумма: "+Док.Итог("СуммаБезНДСВал")+" "+ПечВал;
		КонецЕсли;
					
		РеквСумма = Метаданные.Документ(ВидДок).РеквизитТабличнойЧасти("СуммаБезНДС");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " Сумма: "+Док.Итог("СуммаБезНДС")+" "+ПечВал;
		КонецЕсли;
					
		РеквСумма = Метаданные.Документ(ВидДок).РеквизитТабличнойЧасти("СуммаСНДС");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " Сумма: "+Док.Итог("СуммаСНДС")+" "+ПечВал;
		КонецЕсли;

		РеквСумма = Метаданные.Документ(ВидДок).РеквизитТабличнойЧасти("КВыплате");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " К выплате: "+Док.Итог("КВыплате")+" "+ПечВал;
		КонецЕсли;
		
		Возврат "";

	Иначе
		
		РеквСумма = Метаданные.Документ(ВидДок).РеквизитШапки("Сумма");
		Если РеквСумма.Выбран() = 1 Тогда
			Возврат " Сумма: "+Док.Сумма+" "+ПечВал;
		КонецЕсли;

		РеквСумма = Метаданные.Документ(ВидДок).РеквизитШапки("СуммаВал");
		Если РеквСумма.Выбран() = 1 Тогда
			Если ВидДок <> "ПерезачетБартер" Тогда
				Возврат " Сумма: "+Док.СуммаВал+" "+ПечВал;
			КонецЕсли;
		КонецЕсли;
		
		РеквСумма = Метаданные.Документ(ВидДок).РеквизитШапки("СуммаСНДС");
		Если РеквСумма.Выбран() = 1 Тогда
			Возврат " Сумма: "+Док.СуммаСНДС+" "+ПечВал;
		КонецЕсли;

		РеквСумма = Метаданные.Документ(ВидДок).РеквизитТабличнойЧасти("СуммаСНДС");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " Сумма: "+Док.Итог("СуммаСНДС")+" "+ПечВал;
		КонецЕсли;

		РеквСумма = Метаданные.Документ(ВидДок).РеквизитТабличнойЧасти("СуммаБезНДС");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " Сумма: "+Док.Итог("СуммаБезНДС")+" "+ПечВал;
		КонецЕсли;

		РеквСумма = Метаданные.Документ(ВидДок).РеквизитТабличнойЧасти("Сумма");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " Сумма: "+Док.Итог("Сумма")+" "+ПечВал;
		КонецЕсли;

		РеквСумма = Метаданные.Документ(ВидДок).РеквизитТабличнойЧасти("СуммаРазницы");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " Разница: "+Док.Итог("СуммаРазницы")+" "+ПечВал;
		КонецЕсли;

		РеквСумма = Метаданные.Документ(ВидДок).РеквизитТабличнойЧасти("КВыплате");
		Если РеквСумма.Выбран()=1 Тогда
			Возврат " К выплате: "+Док.Итог("КВыплате")+" "+ПечВал;
		КонецЕсли;
		
		Возврат "";

	КонецЕсли;

КонецФункции //ПолучитьСумму

//--------------
Функция ПредставлениеДокумента(Док,ДокОснования)
	ВидДок=Док.Вид();
	ПечДок=""+Метаданные.Документ(ВидДок).Представление()+" № "+Док.НомерДок+" от "+Док.ДатаДок;
	
	Если Док.ПометкаУдаления() = 1 Тогда //--- УМК Сандомирский В.Ю. (23.03.15) 
		ПечДок=ПечДок+" (Пометка удаление!)";
	Иначе
		Если Док.Проведен()=0 Тогда
			ПечДок=ПечДок+" (Не проведен!)";
		КонецЕсли;	
	КонецЕсли;	//... УМК Сандомирский В.Ю. (23.03.15) 
	
	// Определим сумму документа
	Если ВидДок = "БанковскаяВыписка" Тогда
		Возврат ПечДок;
	КонецЕсли;

	ПечСумма = ПолучитьСуммуСтрокой(Док);
	Если ПустоеЗначение(ПечСумма)=0 Тогда
		ПечДок=ПечДок+" "+ПечСумма;
	КонецЕсли;
	
	Возврат ПечДок;
КонецФункции
//--------------
Функция НайтиКорень(Док)
	// Эта Функция помогает формировать Дерево подчиненных документов
	
	СписокЗащитыОтЗацикливания.ДобавитьЗначение(Док);
	
	ВД=Док.Вид();
	КореньДок=0;
	
	Для Н=1 По Метаданные.Документ(ВД).РеквизитШапки() Цикл
		РеквДок=Док.ПолучитьАтрибут(Метаданные.Документ(ВД).РеквизитШапки(Н));
		Если ТипЗначенияСтр(РеквДок)="Документ" Тогда
			Если ПустоеЗначение(РеквДок)=0 Тогда
				Если СписокЗащитыОтЗацикливания.НайтиЗначение(РеквДок)>0 Тогда
					Продолжить;
				КонецЕсли;
				Если ПустоеЗначение(ВыбКонтрагент)=0 Тогда
					Попытка
						Контрагент = РеквДок.Контрагент;
					Исключение
						Контрагент = ПолучитьПустоеЗначение("Справочник.Контрагенты");
					КонецПопытки;
					Если ВыбКонтрагент <> Контрагент Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли; 
				КореньДок=РеквДок;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустоеЗначение(КореньДок)=1 Тогда
		Возврат Док;
	Иначе
		Возврат НайтиКорень(КореньДок);
	КонецЕсли;
КонецФункции

//--------------
Процедура ВывестиПодчиненные(Докум,ДокОснования,Док,Последний,Уровень,Уровни)
	// Эта процедура помогает формировать Дерево подчиненных документов
	// подчиненные документы:
	ДокПодч = СоздатьОбъект("Документ");
	// для проверки наличия следующего элемента в выборке
	// создадим еще один объект!
	ПровДокПодч = СоздатьОбъект("Документ");
	
	Таб.ВывестиСекцию("GrEmpty|Empty");
	// если это первый уровень...
	Если Уровень=1 Тогда
		//...выведем Г-образную линию...
		Если Последний=1 Тогда
			Таб.ПрисоединитьСекцию("GrHook|Lines");
			// ...или Т-образную линию
		Иначе
			Таб.ПрисоединитьСекцию("GrTSect|Lines");
		КонецЕсли;
	Иначе
		// для первого уровня выведем линию или пустоту
		Если Уровни.ПолучитьЗначение(1)=1 Тогда
			Таб.ПрисоединитьСекцию("GrLine|Lines");
		Иначе
			Таб.ПрисоединитьСекцию("GrEmpty|Lines");
		КонецЕсли;
		// для остальных уровней присоединим линию или пустоту
		Для Сч=2 По Уровень-1 Цикл
			Если Уровни.ПолучитьЗначение(Сч)=1 Тогда
				Таб.ПрисоединитьСекцию("GrLine|Lines");
			Иначе
				Таб.ПрисоединитьСекцию("GrEmpty|Lines");
			КонецЕсли;
		КонецЦикла;
		Если Последний=1 Тогда
			Таб.ПрисоединитьСекцию("GrHook|Lines");
		Иначе
			Таб.ПрисоединитьСекцию("GrTSect|Lines");
		КонецЕсли;
	КонецЕсли;
	// только теперь - присоединим секцию документа
	ПечДок=ПредставлениеДокумента(Док,ДокОснования);
	
	Если Докум=Док Тогда 								//--- УМК Сандомирский В.Ю. (23.03.15) 
		
		Если Док.ПометкаУдаления() = 1 Тогда
			Таб.ПрисоединитьСекцию("ТекДокDel|Body");
		Иначе
			Таб.ПрисоединитьСекцию("ТекДок|Body");
		КонецЕсли;
		
	Иначе
		
		Если Док.ПометкаУдаления() = 1 Тогда	
			Таб.ПрисоединитьСекцию("GroupDel|Body");
		Иначе
			Таб.ПрисоединитьСекцию("Group|Body");
		КонецЕсли;
			
	КонецЕсли;		//... УМК Сандомирский В.Ю. (23.03.15) 
	
	Уровень=Уровень+1;
	ДокПодч.ВыбратьПодчиненныеДокументы(,,Док);
	ПровДокПодч.ВыбратьПодчиненныеДокументы(,,Док);
	Начало=1;
	Пока ДокПодч.ПолучитьДокумент()=1 Цикл
		Если СписокЗащитыОтЗацикливания.НайтиЗначение(ДокПодч.ТекущийДокумент())>0 Тогда
			Продолжить;
		КонецЕсли;
		СписокЗащитыОтЗацикливания.ДобавитьЗначение(ДокПодч.ТекущийДокумент());
		Если Начало=1 Тогда
			А=ПровДокПодч.ПолучитьДокумент();
			Начало=0;
		КонецЕсли;
		Если Док=ДокПодч.ТекущийДокумент() Тогда
			А=ПровДокПодч.ПолучитьДокумент();
			Продолжить;
		КонецЕсли;
		Если ПровДокПодч.ПолучитьДокумент()=1 Тогда
			Если Док=ПровДокПодч.ТекущийДокумент() Тогда
				Уровни.УстановитьЗначение(Уровень,0);
				Последний=1;
			Иначе
				Уровни.УстановитьЗначение(Уровень,1);
				Последний=0;
			КонецЕсли;
		Иначе
			Уровни.УстановитьЗначение(Уровень,0);
			Последний=1;
		КонецЕсли;
		ВывестиПодчиненные(Докум,Док,ДокПодч.ТекущийДокумент(),Последний,Уровень,Уровни);
	КонецЦикла;
	Уровень=Уровень-1;
КонецПроцедуры
//--------------
Процедура СформироватьДерево()
	СписокЗащитыОтЗацикливания=СоздатьОбъект("СписокЗначений");
	// Эта процедура формирует Дерево подчиненных документов
	Докум=ВыбДокумент;
	Если ПустоеЗначение(Докум)=1 Тогда
		Предупреждение("Не указан документ для построения структуры подчиненности!");
		Возврат;
	КонецЕсли;
	
	Попытка
		ВыбКонтрагент = Докум.Контрагент;
	Исключение
		ВыбКонтрагент = ПолучитьПустоеЗначение("Справочник.Контрагенты");
	КонецПопытки;

	Если Обновить = 2 Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ДеревоДокументов");
	Расшифровка.Установить("Док", ВыбДокумент);
	Расшифровка.Установить("Обновить", 1);
	
	// сначала поднимемся по подчиненности вверх и найдем корень
	КореньДок=НайтиКорень(Докум);
	СписокЗащитыОтЗацикливания.УдалитьВсе();
	
	// теперь от корня спускаемся вниз, показывая все на своем пути
	
	// сначала заполним массив уровней нулями
	
	Уровень=0;
	Уровни=СоздатьОбъект("СписокЗначений");
	Для Сч=1 По 20 Цикл
		Уровни.ДобавитьЗначение(0);
	КонецЦикла;
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") или (Обновить = 0) Тогда
		Таб=СоздатьОбъект("Таблица");
	Иначе
		Таб.Очистить();
	КонецЕсли;
	
	Таб.ИсходнаяТаблица("ДеревоДокументов");
	Таб.ВывестиСекцию("Кнопки");
	// подчиненные документы
	ДокПодч=СоздатьОбъект("Документ");
	// для проверки наличия следующего элемента в выборке
	// создадим еще один объект!
	ПровДокПодч=СоздатьОбъект("Документ");
	
	ДокПодч.ВыбратьПодчиненныеДокументы(,,КореньДок);
	ПровДокПодч.ВыбратьПодчиненныеДокументы(,,КореньДок);
	
	Уровень=1;
	ПечДок=ПредставлениеДокумента(КореньДок,КореньДок);

	Если Докум=КореньДок Тогда //--- УМК Сандомирский В.Ю. (23.03.15) 
		
		Если КореньДок.ПометкаУдаления() = 1 Тогда
			Таб.ВывестиСекцию("КореньТекДокDel");
		Иначе
			Таб.ВывестиСекцию("КореньТекДок");
		КонецЕсли;
		
	Иначе
		
		Если КореньДок.ПометкаУдаления() = 1 Тогда
			Таб.ВывестиСекцию("HeaderDel");
		Иначе
			Таб.ВывестиСекцию("Header");
		КонецЕсли;
			
	КонецЕсли; //... УМК Сандомирский В.Ю. (23.03.15) 
	
	Начало=1;
	Пока ДокПодч.ПолучитьДокумент()=1 Цикл
		Если Начало=1 Тогда
			А=ПровДокПодч.ПолучитьДокумент();
			Начало=0;
		КонецЕсли;
		Если КореньДок=ДокПодч.ТекущийДокумент() Тогда
			А=ПровДокПодч.ПолучитьДокумент();
			Продолжить;
		КонецЕсли;
		Если ПровДокПодч.ПолучитьДокумент()=1 Тогда
			Если КореньДок=ПровДокПодч.ТекущийДокумент() Тогда
				Уровни.УстановитьЗначение(1,0);
				Последний=1;
			Иначе
				Уровни.УстановитьЗначение(1,1);
				Последний=0;
			КонецЕсли;
		Иначе
			Уровни.УстановитьЗначение(1,0);
			Последний=1;
		КонецЕсли;
		ВывестиПодчиненные(Докум,КореньДок,ДокПодч.ТекущийДокумент(),Последний,Уровень,Уровни);
	КонецЦикла;
	// Вывод заполненной формы
	Таб.Опции(0,0,3,0,"PO0005","ДеревоДокументов");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Структура подчиненных документов",);
КонецПроцедуры

//-------------------------------
Процедура ПриОткрытии()
	Если ТипЗначенияСтр(Форма.Параметр)="Документ" Тогда
		ВыбДокумент=Форма.Параметр;
		СформироватьДерево();
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Обновить = 0;
	Если глФлагРасшифровки = 1 Тогда
		Обновить = Число(глРасшифровка.Получить("Обновить"));
		ВыбДокумент = глРасшифровка.Получить("Док");
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;
		
		Если Обновить <> 2 Тогда
			СформироватьДерево();
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//-------------------------------
