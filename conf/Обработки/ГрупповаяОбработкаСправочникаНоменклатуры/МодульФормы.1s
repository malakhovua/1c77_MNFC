// ===============================
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
// ===============================

Перем ИмяФормы;

Перем СписокПозиций;	// список обрабатываемых позиций
Перем Значение;			// значение, определяющее действие
                               
Перем НачальнаяДата;		// дата, на которую сбрасывается ГП
        
Перем ЗначениеПометки,ЗначениеНеПометки;
Перем Комментарий;

//======================================================================
Процедура ЗаполнитьПоГруппировкеВидовУпаковки(ТекТМЦ) Далее
	
// ===============================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
// ===============================

// ===============================
// Название: ДоступностьКнопкиВыбораЗначения
// Параметры: 
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// 
// Описание:
//    в зависимости от выбранного действия изменяет доступность кнопки выбора значения
//
Процедура ДоступностьКнопкиВыбораЗначения()
	// если Пометить на удаление, Снять пометку удаления, Удалить из всех категорий
	Если (Действие.ТекущаяСтрока()<=2) Или (Действие.ТекущаяСтрока()=8) Тогда
		Форма.КнопкаВыбораЗначения.Доступность(0);
	Иначе
		Форма.КнопкаВыбораЗначения.Доступность(1);
	КонецЕсли;
КонецПроцедуры   // ДоступностьКнопкиВыбораЗначения

// ===============================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
// ===============================

// ===============================
// Название: ПерерисовкаСписка
// Параметры:           
//   НомерКолонки - номер перерисовываемой колонки, если 0 - то перерисовываем все
//   НачальноеЗаполнение - если 1, то заполняем таблицу с нуля
//
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Флаг 
// Описание:
//    перерисовывает таблицу обрабатываемых позиций
//
Процедура ПерерисовкаСписка(НомерКолонки=0,НачальноеЗаполнение=0)
	Перем НомерСтроки;
	Перем Товар;
	Перем СписокКатегорий,Категории;       
	Перем НаименованиеТовара,Единицы;    
	Перем Всего;                                                   
	
	Перем СписокЕдиниц;
	
	Таблица.ВыбратьСтроки();	
	
	Категории = СоздатьОбъект("Справочник.КатегорииТоваров");
	Единицы = СоздатьОбъект("Справочник.Единицы");
	                                    
	КвоПозиций = СписокПозиций.РазмерСписка();
	
	Для НомерСтроки = 1 По КвоПозиций Цикл
		 
		Если (НомерСтроки%10=0) Тогда
			Состояние("Перерисовка таблицы: "+Строка(НомерСтроки)+" из "+Строка(КвоПозиций));
		КонецЕсли;
		                    
		
		Если НачальноеЗаполнение=1 Тогда
			
			Товар = СписокПозиций.ПолучитьЗначение(НомерСтроки);
			
			Таблица.НоваяСтрока(НомерСтроки);
			Таблица.ПолучитьСтрокуПоНомеру(НомерСтроки);
			                      
			Таблица.Товар = Товар;
			Таблица.Пометка = ЗначениеПометки;
		Иначе
			Таблица.ПолучитьСтроку();
			Если Таблица.Пометка=ЗначениеНеПометки Тогда
				Продолжить;
			КонецЕсли;	
			
			Товар = Таблица.Товар;
		КонецЕсли;	
		
		Товар.ИспользоватьДату(ВыбДата,1);
		
		Если (НомерКолонки=0) Или (НомерКолонки=2) Тогда // наименование
			Таблица.Наименование = СокрЛП(Товар.Наименование)+
									?(ПустаяСтрока(Товар.Артикул)=1,"",", арт. "+СокрЛП(Товар.Артикул));
        КонецЕсли;
									
		Если (НомерКолонки=0) Или (НомерКолонки=3) Тогда // вид
			Таблица.Вид = Строка(Товар.ВидТМЦ);
        КонецЕсли;   
			
		Если (НомерКолонки=0) Или (НомерКолонки=4) Тогда // группа
			Таблица.Группа = ?(Товар.Родитель.Выбран()=1,Товар.Родитель.Наименование,"");
        КонецЕсли;   
	
		Если (НомерКолонки=0) Или (НомерКолонки=5) Тогда // статус
			Таблица.Статус = ?(Товар.ПометкаУдаления()=1,"Помечен на уд.","");
        КонецЕсли;   

		Если (НомерКолонки=0) Или (НомерКолонки=6) Тогда // НДС
			Таблица.НДС = Строка(Товар.СтавкаНДС);
        КонецЕсли;   
	
		Если (НомерКолонки=0) Или (НомерКолонки=7) Тогда // Категории
		
			Категории.ИспользоватьВладельца(Товар.ТекущийЭлемент());
			Категории.ВыбратьЭлементы();                             
			СписокКатегорий = "";
			Пока Категории.ПолучитьЭлемент()>0 Цикл                      
		    	СписокКатегорий = СписокКатегорий + ", "+Категории.Категория.Наименование
												  + ?(Категории.ПометкаУдаления()=1,"(уд)","");
			КонецЦикла;
			Таблица.Категории = Сред(СписокКатегорий,3);
        КонецЕсли;   

		Если (НомерКолонки=0) Или (НомерКолонки=8) Тогда // базовая единица измерения
			Таблица.БазоваяЕдИзм = Товар.БазоваяЕдиница.Наименование;
        КонецЕсли;   
	
		Если (НомерКолонки=0) Или (НомерКолонки=9) Тогда // единица измерения по умолчанию
			Таблица.ЕдИзмПоУмолчанию = Товар.ЕдиницаПоУмолчанию.Единица.Наименование;
        КонецЕсли;   
	
		Если (НомерКолонки=0) Или (НомерКолонки=10) Тогда // Комментарий
			Таблица.Комментарий = СокрЛП(Товар.Комментарий);
        КонецЕсли;   
 
		Если (НомерКолонки=0) Или (НомерКолонки=11) Тогда // Мин. тов. остаток
			Таблица.МинимальныйОстаток = Товар.МинимальныйОстаток;
        КонецЕсли;   

		Если (НомерКолонки=0) Или (НомерКолонки=12) Тогда // Торговая наценка
			Таблица.ТорговаяНаценка = Товар.ТорговаяНаценка;
        КонецЕсли;   
		
		Если (НомерКолонки=0) Или (НомерКолонки=13) Тогда
			// Единицы измерения
			
			СписокЕдиниц = "";
			Единицы.ИспользоватьВладельца(Товар.ТекущийЭлемент());
			Единицы.ВыбратьЭлементы();                             
			Пока Единицы.ПолучитьЭлемент()>0 Цикл                      
				СписокЕдиниц = СписокЕдиниц
					+СокрЛП(Единицы.Наименование)
					+"("+Строка(Единицы.Коэффициент)
					+?(Единицы.ПометкаУдаления()=1,",уд","")
					+?(Единицы.Единица.ТекущийЭлемент()=Товар.БазоваяЕдиница.ТекущийЭлемент(),",баз.","")
					+?(Единицы.ТекущийЭлемент()=Товар.ЕдиницаПоУмолчанию.ТекущийЭлемент(),",по ум.","")+"); ";
			КонецЦикла;
									
			Таблица.ЕдиницыИзмерения = СокрЛП(СписокЕдиниц);
	    КонецЕсли;   

		Если (НомерКолонки=0) Или (НомерКолонки=13) Тогда // Торговая наценка
			Таблица.НормаРент = Товар.НормаРент;
        КонецЕсли;  
		Если (НомерКолонки=0) Или (НомерКолонки=14) Тогда 
			Таблица.СхемаЗП = Товар.СхемаРасчетаЗП;
        КонецЕсли;  
		Если (НомерКолонки=0) Или (НомерКолонки=15) Тогда 
			Таблица.НГруппа = Товар.НГруппа;
		КонецЕсли;  
		
		Если (НомерКолонки=0) Или (НомерКолонки=16) Тогда //--- УМК Сандомирский В.Ю. (09.10.14)
			Таблица.ГруппировкаВидовУпаковки = Товар.ГруппировкаРазрешенныхВидовУпаковки;
		КонецЕсли; 
		
		Если (НомерКолонки=0) Или (НомерКолонки=17) Тогда // + umk
			Таблица.ОПР = Товар.ОПР;
		КонецЕсли;
		
		Если (НомерКолонки=0) Или (НомерКолонки=18) Тогда // + umk
			Таблица.КатегорияНоменклатуры = Товар.КатегорияНоменклатуры;
        КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

// ===============================
// Название: СортироватьТаблицу
// Параметры: 
//   Режим
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//   Кнопка "Сортировать" и список "СписокКолонокСортировки"
// Описание:
//    сортирует таблицу по колонке
//
Процедура СортироватьТаблицу()
	Перем СпособСортировки;        
	
	Если СписокКолонокСортировки.ТекущаяСтрока()>0 Тогда
		СпособСортировки = СписокКолонокСортировки.ПолучитьЗначение(СписокКолонокСортировки.ТекущаяСтрока());
		Если НаправлениеСортировки.ТекущаяСтрока()>0 Тогда
			СпособСортировки = СпособСортировки + НаправлениеСортировки.ПолучитьЗначение(НаправлениеСортировки.ТекущаяСтрока());
		КонецЕсли;	
		Таблица.Сортировать(СпособСортировки); 
	КонецЕсли;	           
	
КонецПроцедуры	// СортироватьТаблицу

// ===============================
// Название: ГрупповаяПометка
// Параметры: 
//   Режим
//		1 - пометить все
//		2 - снять пометку
//		3 - инавертировать пометку
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Кнопки "Пометить все","Снять пометку","Инвертировать пометку".
// Описание:
//    в зависимости от значения параметра выполняет пометку всех позиций, 
//    снимает пометку со всех позиций или инвертирует ее
//
Процедура ГрупповаяПометка(Режим)
	Таблица.ВыбратьСтроки();
	Пока Таблица.ПолучитьСтроку()>0 Цикл
		Если Режим=1 Тогда
			Таблица.Пометка = ЗначениеПометки;
		ИначеЕсли Режим=2 Тогда
			Таблица.Пометка = ЗначениеНеПометки;
		ИначеЕсли Режим=3 Тогда
			Таблица.Пометка = 3 - Таблица.Пометка;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// ===============================
// Название: ВыборЭлементаВСпискеДействий
// Параметры:
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Список "Действие"
// Описание:
//   обнуляем значение и изменяет доступность кнопки выбора значения
//
Процедура ИзмДействие()
	ЗначениеВВидеСтроки = "";
	Значение = 0;
	ДоступностьКнопкиВыбораЗначения();
КонецПроцедуры

// ===============================
// Название: ВыборЗначения
// Параметры:
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Кнопка "Значение",.
// Описание:
//   открывает окно выбора значения
//
Процедура ВыборЗначения()
	Перем ВыбЗначение, фВыбрали;

	Если Действие.ТекущаяСтрока()=3 Тогда // Перенести в группу
		ВыбЗначение = СоздатьОбъект("Справочник.ТМЦ");
		ВыбЗначение.ВыборГруппы(1);
		фВыбрали = ВыбЗначение.Выбрать("Выбор группы номенклатуры",);
		Если фВыбрали = 1 Тогда
			Если ВыбЗначение.ЭтоГруппа()=0 Тогда
				ВыбЗначение = ВыбЗначение.Родитель;
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли Действие.ТекущаяСтрока()=4 Тогда // Установить ставку НДС
		Спис = СоздатьОбъект("СписокЗначений");
		Спис.ДобавитьЗначение(ОсновнаяСтавкаНДС);
		Спис.ДобавитьЗначение(ЛьготнаяСтавкаНДС);
		Спис.ДобавитьЗначение(БезНДС); 
		
		ВыбЗначение = ПолучитьПустоеЗначение("Справочник.ШкалаСтавок");
		фВыбрали = Спис.ВыбратьЗначение(ВыбЗначение,,,,2);

	ИначеЕсли (Действие.ТекущаяСтрока()=5) Или (Действие.ТекущаяСтрока()=6) Тогда // Установить или удалить из категории
		ВыбЗначение = СоздатьОбъект("Справочник.ВидыКатегорий");
		фВыбрали = ВыбЗначение.Выбрать("Выбор категории",);

	ИначеЕсли Действие.ТекущаяСтрока()=8 Тогда // Скопировать единицу измерения
		ВыбЗначение2 = СоздатьОбъект("Справочник.ТМЦ");
		ВыбЗначение2.ВыборГруппы(0);
		Если ВыбЗначение2.Выбрать("Выбор товара",)=0 Тогда
			Возврат;
		КонецЕсли;	

		Если ВыбЗначение2.Выбран()=0 Тогда
			Возврат;
		КонецЕсли;

		ВыбЗначение = СоздатьОбъект("Справочник.Единицы");   
		ВыбЗначение.ИспользоватьВладельца(ВыбЗначение2.ТекущийЭлемент());
		фВыбрали = ВыбЗначение.Выбрать("Выбор единицы измерения",);

	ИначеЕсли Действие.ТекущаяСтрока()=9 Тогда // Удалить единицу измерения
		ВыбЗначение = СоздатьОбъект("Справочник.КлассификаторЕдИзм");
		фВыбрали = ВыбЗначение.Выбрать("Выбор единицы измерения",);

	ИначеЕсли Действие.ТекущаяСтрока()=10 Тогда // Установить комментарий
		ВыбЗначение = "";
		фВыбрали = ВвестиСтроку(ВыбЗначение,"Ввод комментария",200);

	ИначеЕсли Действие.ТекущаяСтрока()=11 Тогда // Установить минимальный остаток
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод минимального остатка",12,3);

	ИначеЕсли Действие.ТекущаяСтрока()=12 Тогда // Установить торговую наценку
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод торговой наценки",6,2);

	ИначеЕсли Действие.ТекущаяСтрока()=13 Тогда // Установить торговую наценку
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод нормы рент.",6,2);
	ИначеЕсли Действие.ТекущаяСтрока()=14 Тогда 
		ВыбЗначение = 0;
		ВыбЗначение = СоздатьОбъект("Документ.СхемаРасчетаЗП");
		фВыбрали = ВыбЗначение.Выбрать("Выберите док. схемы", "ФормаСписка");
	ИначеЕсли Действие.ТекущаяСтрока()=15 Тогда 
		ВыбЗначение = 0;
		ВыбЗначение = СоздатьОбъект("Справочник.ВидыКатегорий");
		фВыбрали = ВыбЗначение.Выбрать("Выберите номенкл. группу", "ФормаСписка");
	ИначеЕсли Действие.ТекущаяСтрока()=16 Тогда //--- УМК Сандомирский В.Ю. (09.10.14) установка в ТМЦ группировок видов упаковки
		ВыбЗначение = 0;
		ВыбЗначение = СоздатьОбъект("Справочник.УМК_ГруппировкиВидовУпаковки");
		фВыбрали = ВыбЗначение.Выбрать("Выберите группировку", "ФормаСписка");	
	ИначеЕсли Действие.ТекущаяСтрока()=17 Тогда // + umk
		ВыбЗначение = 0;
		фВыбрали = ВвестиЧисло(ВыбЗначение,"Ввод ОПР на 1кг",12,2)
	ИначеЕсли Действие.ТекущаяСтрока()=18 Тогда // + umk
		ВыбЗначение = СоздатьОбъект("Справочник.КатегорииНоменклатуры");
		фВыбрали = ВыбЗначение.Выбрать("Выбор категории номенклатуры",);
	КонецЕсли;

	Если фВыбрали = 0 Тогда
		Возврат;
	КонецЕсли;

	ТипВыбЗначение = ТипЗначенияСтр(ВыбЗначение);
	Если ТипВыбЗначение = "Справочник" Тогда
		ЗначениеВВидеСтроки = ВыбЗначение.Наименование;
		Значение 			= ВыбЗначение.ТекущийЭлемент();

	ИначеЕсли ТипВыбЗначение = "Число" Тогда
		ЗначениеВВидеСтроки = Строка(ВыбЗначение);
		Значение			= ВыбЗначение;

	ИначеЕсли ТипВыбЗначение = "Строка" Тогда
		ЗначениеВВидеСтроки = ВыбЗначение;
		Значение			= ВыбЗначение;

	ИначеЕсли ТипВыбЗначение = "Документ" Тогда
		ЗначениеВВидеСтроки = Строка(ВыбЗначение);
		Значение			= ВыбЗначение;

	КонецЕсли;

КонецПроцедуры

// ===============================
// Название: Выполнить
// Параметры:
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
// Кнопка "Выполнить",.
// Описание:
//   выполняет групповое действие
//
Процедура Выполнить()
	Перем НомерСтроки;
	Перем Док;
	Перем ТипДок;
	Перем Товар,ТовДляПоиска;
	Перем Категория,Единица;

	Перем ЧислоОбработанныхПозиций;
                    
	Категория 	= СоздатьОбъект("Справочник.КатегорииТоваров");
	Единица 	= СоздатьОбъект("Справочник.Единицы");
	
	Если (ПустоеЗначение(Значение)=1) Тогда // пустое значение
		Если (Действие.ТекущаяСтрока()=4) // Установить ставку НДС
				Или (Действие.ТекущаяСтрока()=5) Или (Действие.ТекущаяСтрока()=6) // Установить категорию, Удалить из категории
				Или (Действие.ТекущаяСтрока()=8) Или (Действие.ТекущаяСтрока() = 9) ИЛИ (Действие.ТекущаяСтрока()= 16) Тогда // Скопировать единицу измерения, Удалить единицу измерения 
			Предупреждение("Не задано значение");
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если Действие.ТекущаяСтрока()=14 Тогда // Установить схему
		Зн = СоздатьОбъект("Документ");
		Если Зн.НайтиДокумент(Значение) = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЧислоОбработанныхПозиций = 0;

	Таблица.ВыбратьСтроки();    
	
	КвоПозиций = СписокПозиций.РазмерСписка();
	Для НомерСтроки = 1 По КвоПозиций Цикл

		Таблица.ПолучитьСтроку();
		Если Таблица.Пометка=ЗначениеНеПометки Тогда
			Продолжить;
		КонецЕсли;	

		ТовДляПоиска = Таблица.Товар;

		Товар = СоздатьОбъект("Справочник.ТМЦ");
		Если Товар.НайтиЭлемент(ТовДляПоиска)=0 Тогда
			Продолжить;
		КонецЕсли;       
		
		Товар.ИспользоватьДату(ВыбДата,1);

		глКомментарий("Выполняется обработка номенклатурной позиции "+Товар.Наименование,2);
                                              
		Если Действие.ТекущаяСтрока()=1 Тогда // Пометить на удаление
			Товар.Удалить(0);
			глЗаписьЖурналаРегистрации(Комментарий, 1, 3, Товар.ТекущийЭлемент(), 2);
			
		ИначеЕсли Действие.ТекущаяСтрока()=2 Тогда // Снять пометку удаления
			Если Товар.ПометкаУдаления()=1 Тогда
				Товар.СнятьПометкуУдаления();
				глЗаписьЖурналаРегистрации(Комментарий, 1, 5, Товар.ТекущийЭлемент(), 2);
			КонецЕсли;
			
		ИначеЕсли Действие.ТекущаяСтрока()=3 Тогда // Перенести в группу
			Товар.Родитель = ?(ПустоеЗначение(Значение)>0,ПолучитьПустоеЗначение("Справочник.ТМЦ"),Значение.ТекущийЭлемент());
			Товар.Записать();
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);
			
		ИначеЕсли Действие.ТекущаяСтрока()=4 Тогда // Установить НДС
			Товар.СтавкаНДС = Значение;
			Товар.Записать();
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);
			
		ИначеЕсли Действие.ТекущаяСтрока()=5 Тогда // Добавить категорию
			Категория.ИспользоватьВладельца(Товар.ТекущийЭлемент());
			Если Категория.НайтиПоРеквизиту("Категория",Значение.ТекущийЭлемент(),0)=0 Тогда
				Категория.Новый();
				Категория.Категория = Значение;
				Категория.Записать();
				глЗаписьЖурналаРегистрации(Комментарий, 1, 1, Категория.ТекущийЭлемент(), 2);
			Иначе
				Если Категория.ПометкаУдаления()=1 Тогда
					Категория.СнятьПометкуУдаления();
					глЗаписьЖурналаРегистрации(Комментарий, 1, 5, Категория.ТекущийЭлемент(), 2);
				КонецЕсли;
			КонецЕсли;	
			
		ИначеЕсли Действие.ТекущаяСтрока()=6 Тогда // Удалить категорию
			Категория.ИспользоватьВладельца(Товар.ТекущийЭлемент());
			Если Категория.НайтиПоРеквизиту("Категория",Значение.ТекущийЭлемент(),0)>0 Тогда
				Категория.Удалить(0);
				глЗаписьЖурналаРегистрации(Комментарий, 1, 3, Категория.ТекущийЭлемент(), 2);
			КонецЕсли;		
				
		ИначеЕсли Действие.ТекущаяСтрока()=7 Тогда // Удалить все категории
			Категория.ИспользоватьВладельца(Товар.ТекущийЭлемент());
			Категория.ВыбратьЭлементы();  
			Пока Категория.ПолучитьЭлемент()>0 Цикл
			    Категория.Удалить(0);	
				глЗаписьЖурналаРегистрации(Комментарий, 1, 3, Категория.ТекущийЭлемент(), 2);
			КонецЦикла;
			
		ИначеЕсли Действие.ТекущаяСтрока()=8 Тогда // Добавить единицу
			Единица.ИспользоватьВладельца(Товар.ТекущийЭлемент());
			Если Единица.НайтиПоРеквизиту("Единица",Значение.Единица.ТекущийЭлемент(),0)=0 Тогда
				Единица.Новый();
				Единица.Единица 	= Значение.Единица;
				Единица.Наименование= Значение.Наименование; 
				Единица.Коэффициент = Значение.Коэффициент; 
				Единица.Вес 		= Значение.Вес;
				Единица.Записать();
				глЗаписьЖурналаРегистрации(Комментарий, 1, 1, Единица.ТекущийЭлемент(), 2);
			Иначе
				Если Единица.ПометкаУдаления()=1 Тогда
					Единица.СнятьПометкуУдаления();
					глЗаписьЖурналаРегистрации(Комментарий, 1, 5, Единица.ТекущийЭлемент(), 2);
				КонецЕсли;
			КонецЕсли;	
		
		ИначеЕсли Действие.ТекущаяСтрока()=9 Тогда // Удалить единицу измерения
			Если Товар.БазоваяЕдиница.ТекущийЭлемент()=Значение.ТекущийЭлемент() Тогда
				Возврат;
			КонецЕсли;		    

			Единица.ИспользоватьВладельца(Товар.ТекущийЭлемент());
			Если Товар.ЕдиницаПоУмолчанию.Единица.ТекущийЭлемент()=Значение.ТекущийЭлемент() Тогда
				Единица.НайтиПоРеквизиту("Единица",Товар.БазоваяЕдиница.ТекущийЭлемент(),0);
				Товар.ЕдиницаПоУмолчанию = Единица.ТекущийЭлемент();
				Товар.Записать();
				глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);
			КонецЕсли;

			Если Единица.НайтиПоРеквизиту("Единица",Значение.ТекущийЭлемент(),0)>0 Тогда
				Единица.Удалить(0);
				глЗаписьЖурналаРегистрации(Комментарий, 1, 3, Единица.ТекущийЭлемент(), 2);
			КонецЕсли;		
				
		ИначеЕсли Действие.ТекущаяСтрока()=10 Тогда // Установить комментарий
			Товар.Комментарий = ?(ПустоеЗначение(Значение)=1,"",СокрЛП(Значение));
			Товар.Записать();
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);
		
		ИначеЕсли Действие.ТекущаяСтрока()=11 Тогда // Установить мин. тов. остаток
			Товар.МинимальныйОстаток = СокрЛП(Значение);
			Товар.Записать();
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);
		
		ИначеЕсли Действие.ТекущаяСтрока()=12 Тогда // Установить торг. наценку
			Товар.ТорговаяНаценка = Значение;
			Товар.Записать();
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);
		
		ИначеЕсли Действие.ТекущаяСтрока()=13 Тогда // Установить торг. наценку
			Товар.НормаРент = Значение;
			Товар.Записать();
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);

		ИначеЕсли Действие.ТекущаяСтрока()=14 Тогда // Установить схему
			Товар.СхемаРасчетаЗП = Зн.ТекущийДокумент();
			Товар.Записать();
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);

		ИначеЕсли Действие.ТекущаяСтрока()=15 Тогда // Установить схему
			Товар.НГруппа = Значение;
			Товар.Записать();
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);
			
			
		ИначеЕсли Действие.ТекущаяСтрока()=16 Тогда // Установить группировку видов упаковок //--- УМК Сандомирский В.Ю. (09.10.14)
			
			Товар.ГруппировкаРазрешенныхВидовУпаковки 	= Значение;
			Товар.ВидУпаковкиПоУмолчанию 				= Значение.ВидУпаковкиПоУмолчанию; 	//--- УМК Сандомирский В.Ю. (10.11.14) 
			Товар.НетБезУпаковки						= Значение.НетБезУпаковки; 			//--- УМК Сандомирский В.Ю. (10.11.14) 
			Товар.Записать();
			
			ЗаполнитьПоГруппировкеВидовУпаковки(Товар);
			
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);	
			
		ИначеЕсли Действие.ТекущаяСтрока()=17 Тогда // Установить ОПР на 1 кг // + umk
			Товар.ОПР = Значение;
			Товар.Записать();
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);
		
		ИначеЕсли Действие.ТекущаяСтрока()=18 Тогда // Установить категорию номенклатуры// + umk
			Товар.КатегорияНоменклатуры = Значение;
			Товар.Записать();
			глЗаписьЖурналаРегистрации(Комментарий, 1, 2, Товар.ТекущийЭлемент(), 2);

		КонецЕсли;                           
		
		ЧислоОбработанныхПозиций = ЧислоОбработанныхПозиций + 1;

	КонецЦикла;
        
	Если Действие.ТекущаяСтрока()=1 Тогда // Пометить на удаление
		ПерерисовкаСписка(5);
		
	ИначеЕсли Действие.ТекущаяСтрока()=2 Тогда // Снять пометку удаления
		ПерерисовкаСписка(5);		
	
	ИначеЕсли Действие.ТекущаяСтрока()=3 Тогда // Перенести в группу
		ПерерисовкаСписка(4);
		
	ИначеЕсли Действие.ТекущаяСтрока()=4 Тогда // Установить НДС
		ПерерисовкаСписка(6);		
			
	ИначеЕсли Действие.ТекущаяСтрока()=5 Тогда // Добавить категорию
		ПерерисовкаСписка(7);		
			
	ИначеЕсли Действие.ТекущаяСтрока()=6 Тогда // Удалить категорию
		ПерерисовкаСписка(7);		
				
	ИначеЕсли Действие.ТекущаяСтрока()=7 Тогда // Удалить все категории
		ПерерисовкаСписка(7);		
			
	ИначеЕсли Действие.ТекущаяСтрока()=8 Тогда // Скопировать единицу измерения
		ПерерисовкаСписка();
		
	ИначеЕсли Действие.ТекущаяСтрока()=9 Тогда // Удалить единицу измерения
		ПерерисовкаСписка();
			    
	ИначеЕсли Действие.ТекущаяСтрока()=10 Тогда // Установить комментарий
		ПерерисовкаСписка(10);
	
	ИначеЕсли Действие.ТекущаяСтрока()=11 Тогда // Установить мин. тов. остаток
		ПерерисовкаСписка(11);
	
	ИначеЕсли Действие.ТекущаяСтрока()=12 Тогда // Установить торг. наценку
		ПерерисовкаСписка(12);

	ИначеЕсли Действие.ТекущаяСтрока()=14 Тогда // Установить схему з/п
		ПерерисовкаСписка(14);
		
	ИначеЕсли Действие.ТекущаяСтрока()=15 Тогда // Установить схему з/п
		ПерерисовкаСписка(15);
		
	ИначеЕсли Действие.ТекущаяСтрока()=16 Тогда // Установить схему з/п //--- УМК Сандомирский В.Ю. (09.10.14)
		ПерерисовкаСписка(16);
	
	ИначеЕсли Действие.ТекущаяСтрока()=17 Тогда // Установить ОПР // + umk
		ПерерисовкаСписка(17);
	ИначеЕсли Действие.ТекущаяСтрока()=18 Тогда // Установть категорию номенклатуры // + umk
		ПерерисовкаСписка(18);
	КонецЕсли;
	
	Предупреждение("Групповая обработка завершена. Число обработанных позиций: "+Строка(ЧислоОбработанныхПозиций));

КонецПроцедуры

// ===============================
// Название: ПриДвойномЩелчкеНаТаблице
// Параметры:
// НЕТ
// Возвращаемое значение:
// НЕТ
// Вызывается из формул элементов диалога:
//  таблица значений "Таблица"
// Описание:
//	 при двойном щелчке инвертирует пометку соответствующей позиции
//
Процедура ПриДвойномЩелчкеНаТаблице()

	Таблица.Пометка = 3 - Таблица.Пометка;

КонецПроцедуры   // ПриДвойномЩелчкеНаТаблице

// ===============================
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// ===============================

// ===============================
Процедура ПриОткрытии()	// Предопределенная процедура
                                                     
	Если ПустоеЗначение(Форма.Параметр)=1 Тогда
		Предупреждение("Не указан список обрабатываемых позиций. Данная обработка запускается автоматически из других процедур конфигурации.");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	СписокПозиций = Форма.Параметр;

	ТекСтрока = Действие.ТекущаяСтрока();
	ДоступностьКнопкиВыбораЗначения();
	
	Таблица.НоваяКолонка("Пометка",					"Число",	4,	0,	"Пометка"			); 
	Таблица.НоваяКолонка("Наименование",			"Строка",	100,,	"Наименование",50	); 
	Таблица.НоваяКолонка("Вид",						"Строка",	10,	,	"Вид"				);                         
	Таблица.НоваяКолонка("Группа",					"Строка",	40,	,	"Группа"			); 
	Таблица.НоваяКолонка("КатегорияНоменклатуры",	"Справочник.КатегорииНоменклатуры",,,"Категория номенклатуры");
	Таблица.НоваяКолонка("Статус",					"Строка",	15,	,	"Статус"			);
	Таблица.НоваяКолонка("НДС",						"Строка",	10,	,	"НДС(%)"			);
	Таблица.НоваяКолонка("БазоваяЕдИзм",			"Строка",	17,	,	"Баз.ед.изм.", 6	);
	Таблица.НоваяКолонка("ЕдИзмПоУмолчанию",		"Строка",	24,	,	"Ед.изм.ум.", 6		);
	Таблица.НоваяКолонка("МинимальныйОстаток",		"Число",	15,	2,	"Мин. остаток",6	);
	Таблица.НоваяКолонка("ТорговаяНаценка",			"Число",	10,	2,	"Торг. наценка", 8	); 
	Таблица.НоваяКолонка("ЕдиницыИзмерения",		"Строка",	150,,	"Ед. изм.", 15		); 
	Таблица.НоваяКолонка("НормаРент",				"Число",	6,2,	"Норма р.", 8		); 
	Таблица.НоваяКолонка("СхемаЗП",					"Документ.СхемаРасчетаЗП",,,"Схема з/п",35); 
	Таблица.НоваяКолонка("НГруппа",					"Справочник.ВидыКатегорий",,,"Ном. группа",10); 
	Таблица.НоваяКолонка("ГруппировкаВидовУпаковки","Справочник.УМК_ГруппировкиВидовУпаковки",,,"Группировка видов упаковок",15); //--- УМК Сандомирский В.Ю. (09.10.14)
	Таблица.НоваяКолонка("ОПР",				        "Число",	12,2,	"ОПР на 1кг", 8		    ); // + umk
    Таблица.НоваяКолонка("Категории",				"Строка",	80,	,	"Категории"			);
	Таблица.НоваяКолонка("Комментарий",				"Строка",	100,,	"Комментарий"		); 
	Таблица.НоваяКолонка("Товар"); 

	Таблица.ВидимостьКолонки("Товар",0);
	Таблица.ВыводитьПиктограммы("Пометка",1);
	Таблица.Фиксировать(0,2);
	
	ПерерисовкаСписка(0,1);	// с начальным заполнением
	        
	// формируем список колонок сортировки
	СписокКолонокСортировки.УдалитьВсе();
	Для Индекс = 1 По Таблица.КоличествоКолонок() Цикл             
		Заголовок = "";
		ИдентКолонки = СокрЛП(Таблица.ПолучитьПараметрыКолонки(Индекс,,,,Заголовок));
		Если Найти(ВРег("=Товар=Пометка="),ВРег("="+ИдентКолонки+"="))=0 Тогда
			СписокКолонокСортировки.ДобавитьЗначение(ИдентКолонки,Заголовок);
		КонецЕсли;	
	КонецЦикла;
	
	// формируем список направлений сортировки
	НаправлениеСортировки.УдалитьВсе();
	НаправлениеСортировки.ДобавитьЗначение("+","возрастанию"); 
	НаправлениеСортировки.ДобавитьЗначение("-","убыванию");
	
	// будем отслеживать только реальные изменения этих реквизитов
	Форма.СписокКолонокСортировки.	ВыполнятьФормулуТолькоПриИзменении(1);  
	Форма.НаправлениеСортировки.	ВыполнятьФормулуТолькоПриИзменении(1); 
	
	НомерКолонкиСортировки 		= ВосстановитьЗначение("НомерКолонкиСортировкиВГрупповойОбработкеНоменклатуры");
	НомерНаправленияСортировки 	= ВосстановитьЗначение("НомерНаправленияСортировкиВГрупповойОбработкеНоменклатуры");

	Если ПустоеЗначение(НомерКолонкиСортировки) = 1 Тогда
		НомерКолонкиСортировки = 1;
	КонецЕсли;	

	Если ПустоеЗначение(НомерНаправленияСортировки) = 1 Тогда
		НомерНаправленияСортировки = 1;
	КонецЕсли;	

	СписокКолонокСортировки.ТекущаяСтрока(НомерКолонкиСортировки);
	НаправлениеСортировки.	ТекущаяСтрока(НомерНаправленияСортировки);
	СортироватьТаблицу();
	
КонецПроцедуры	// ПриОткрытии

// ===============================
Процедура ПриЗакрытии()	// Предопределенная процедура
    
	глСохранитьЗначение(ИмяФормы, "НомерКолонкиСортировкиВГрупповойОбработкеНоменклатуры",		СписокКолонокСортировки.ТекущаяСтрока()	); 
	глСохранитьЗначение(ИмяФормы, "НомерНаправленияСортировкиВГрупповойОбработкеНоменклатуры",	НаправлениеСортировки.ТекущаяСтрока()	);
	
КонецПроцедуры	// ПриЗакрытии

//====================================================================== //--- УМК Сандомирский В.Ю. (09.10.14)
Процедура ТекущийТМЦОткрыть(ФлагПросмотра) 
	
	Если ПустоеЗначение(Таблица.Товар) <>  1 Тогда
		ТекТовар = СоздатьОбъект("Справочник.ТМЦ");
		ТекТовар.НайтиЭлемент(Таблица.Товар);
		ОткрытьФорму(ТекТовар.ТекущийЭлемент(),,ФлагПросмотра); //--- 1 = просмотр 0 = редактирование
	КонецЕсли;
	
КонецПроцедуры //глУстФирма

//====================================================================== //--- УМК Сандомирский В.Ю. (09.10.14)
Процедура ЗаполнитьПоГруппировкеВидовУпаковки(ТекТМЦ)		
		ТекРазрешенныеВидыУпаковки = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковки");
		ТекРазрешенныеВидыУпаковкиТМЦ = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");		

		ТекРазрешенныеВидыУпаковкиТМЦ.ИспользоватьВладельца(ТекТМЦ.ТекущийЭлемент());
		
		ТекРазрешенныеВидыУпаковкиТМЦ.ВыбратьЭлементы();
		Пока ТекРазрешенныеВидыУпаковкиТМЦ.ПолучитьЭлемент() = 1 Цикл
			ТекРазрешенныеВидыУпаковкиТМЦ.Удалить(0);
		КонецЦикла;
		
		ТекРазрешенныеВидыУпаковки.ИспользоватьВладельца(ТекТМЦ.ГруппировкаРазрешенныхВидовУпаковки);
		ТекРазрешенныеВидыУпаковки.ПорядокКодов();
		ТекРазрешенныеВидыУпаковки.ВыбратьЭлементы();
		Пока ТекРазрешенныеВидыУпаковки.ПолучитьЭлемент() = 1 Цикл
			
			Если ТекРазрешенныеВидыУпаковки.ПометкаУдаления() = 1 Тогда
				Продолжить;
			КонецЕсли;
				
			Если ТекРазрешенныеВидыУпаковкиТМЦ.НайтиПоРеквизиту("ВидУпаковки",ТекРазрешенныеВидыУпаковки.ВидУпаковки,0) <> 1 Тогда
				ТекРазрешенныеВидыУпаковкиТМЦ.ИспользоватьДату(ВыбДата,1);
				ТекРазрешенныеВидыУпаковкиТМЦ.Новый();
				ТекРазрешенныеВидыУпаковкиТМЦ.ВидУпаковки   		= ТекРазрешенныеВидыУпаковки.ВидУпаковки;
				ТекРазрешенныеВидыУпаковкиТМЦ.НеВыгружатьВЗаказник 	= ТекРазрешенныеВидыУпаковки.НеВыгружатьВЗаказник;		//--- УМК Сандомирский В.Ю. (07.04.15) 
				ТекРазрешенныеВидыУпаковкиТМЦ.Цена		  			= ТекРазрешенныеВидыУпаковки.Цена.Получить(ВыбДата); 	//--- УМК Сандомирский В.Ю. (28.10.14) Цену берем из шаблона
				ТекРазрешенныеВидыУпаковкиТМЦ.Примечание  			= ТекРазрешенныеВидыУпаковки.Примечание;
				ТекРазрешенныеВидыУпаковкиТМЦ.КоэфУвВеса  			= ТекРазрешенныеВидыУпаковки.КоэфУвВеса;
				ТекРазрешенныеВидыУпаковкиТМЦ.СкидкаНаВес 			= ТекРазрешенныеВидыУпаковки.СкидкаНаВес; 
				ТекРазрешенныеВидыУпаковкиТМЦ.ВесУпаковки 			= ТекРазрешенныеВидыУпаковки.ВесУпаковки.Получить(ВыбДата); 				//--- УМК Сандомирский В.Ю. (18.11.14)
				ТекРазрешенныеВидыУпаковкиТМЦ.ДляПечати 			= ТекРазрешенныеВидыУпаковки.ДляПечати; 				//--- УМК Сандомирский В.Ю. (06.11.14)
				
				ТекРазрешенныеВидыУпаковкиТМЦ.Записать();
			Иначе
				Если ТекРазрешенныеВидыУпаковкиТМЦ.ПометкаУдаления() = 1 Тогда
					ТекРазрешенныеВидыУпаковкиТМЦ.СнятьПометкуУдаления();	
				КонецЕсли;
				ТекРазрешенныеВидыУпаковкиТМЦ.ИспользоватьДату(ВыбДата,1);
				ТекРазрешенныеВидыУпаковкиТМЦ.НеВыгружатьВЗаказник 	= ТекРазрешенныеВидыУпаковки.НеВыгружатьВЗаказник;		//--- УМК Сандомирский В.Ю. (07.04.15)
				ТекРазрешенныеВидыУпаковкиТМЦ.Цена		  			= ТекРазрешенныеВидыУпаковки.Цена.Получить(ВыбДата); 	//--- УМК Сандомирский В.Ю. (28.10.14) Цену берем из шаблона
				ТекРазрешенныеВидыУпаковкиТМЦ.Примечание  			= ТекРазрешенныеВидыУпаковки.Примечание;
				ТекРазрешенныеВидыУпаковкиТМЦ.КоэфУвВеса  			= ТекРазрешенныеВидыУпаковки.КоэфУвВеса;
				ТекРазрешенныеВидыУпаковкиТМЦ.СкидкаНаВес 			= ТекРазрешенныеВидыУпаковки.СкидкаНаВес; 
				ТекРазрешенныеВидыУпаковкиТМЦ.ВесУпаковки 			= ТекРазрешенныеВидыУпаковки.ВесУпаковки.Получить(ВыбДата); 				//--- УМК Сандомирский В.Ю. (18.11.14)
				ТекРазрешенныеВидыУпаковкиТМЦ.ДляПечати 			= ТекРазрешенныеВидыУпаковки.ДляПечати; 			 	//--- УМК Сандомирский В.Ю. (06.11.14)
				
				ТекРазрешенныеВидыУпаковкиТМЦ.Записать();
			КонецЕсли;
			
			//--- УМК Сандомирский В.Ю. (09.10.14) Заполнить материалы упаковки 
			Спр_УМК_НормыСписанияМатериаловУпаковокГрупп = СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковокГрупп");
			Спр_УМК_НормыСписанияМатериаловУпаковок = СоздатьОбъект("Справочник.УМК_НормыСписанияМатериаловУпаковок");
			
			Спр_УМК_НормыСписанияМатериаловУпаковок.ИспользоватьВладельца(ТекРазрешенныеВидыУпаковкиТМЦ.ТекущийЭлемент());
			
			Спр_УМК_НормыСписанияМатериаловУпаковок.ВыбратьЭлементы();
			Пока Спр_УМК_НормыСписанияМатериаловУпаковок.ПолучитьЭлемент() = 1 Цикл
				Спр_УМК_НормыСписанияМатериаловУпаковок.Удалить(0);
			КонецЦикла;
			
			Спр_УМК_НормыСписанияМатериаловУпаковокГрупп.ИспользоватьВладельца(ТекРазрешенныеВидыУпаковки.ТекущийЭлемент());
			Спр_УМК_НормыСписанияМатериаловУпаковокГрупп.ВыбратьЭлементы();
			Пока Спр_УМК_НормыСписанияМатериаловУпаковокГрупп.ПолучитьЭлемент() = 1 Цикл
				
				Если Спр_УМК_НормыСписанияМатериаловУпаковокГрупп.ПометкаУдаления() = 1 Тогда
					Продолжить;					
				КонецЕсли;	
					
				Если Спр_УМК_НормыСписанияМатериаловУпаковок.НайтиПоРеквизиту("Материал",Спр_УМК_НормыСписанияМатериаловУпаковокГрупп.Материал,0) <> 1 Тогда
					Спр_УМК_НормыСписанияМатериаловУпаковок.ИспользоватьДату(РабочаяДата(,1));
					Спр_УМК_НормыСписанияМатериаловУпаковок.Новый();
					Спр_УМК_НормыСписанияМатериаловУпаковок.Материал 		= Спр_УМК_НормыСписанияМатериаловУпаковокГрупп.Материал;
					Спр_УМК_НормыСписанияМатериаловУпаковок.НормаСписания	= Спр_УМК_НормыСписанияМатериаловУпаковокГрупп.НормаСписания.Получить(РабочаяДата());
					Спр_УМК_НормыСписанияМатериаловУпаковок.Записать();
				Иначе
					Если Спр_УМК_НормыСписанияМатериаловУпаковок.ПометкаУдаления() = 1 Тогда
						Спр_УМК_НормыСписанияМатериаловУпаковок.ИспользоватьДату(РабочаяДата(,1));
						Спр_УМК_НормыСписанияМатериаловУпаковок.СнятьПометкуУдаления();
						Спр_УМК_НормыСписанияМатериаловУпаковок.НормаСписания	= Спр_УМК_НормыСписанияМатериаловУпаковокГрупп.НормаСписания.Получить(РабочаяДата());
						Спр_УМК_НормыСписанияМатериаловУпаковок.Записать();
					КонецЕсли;			
				КонецЕсли;
				
			КонецЦикла;
					
		КонецЦикла;
		
		//--- Сдвигаем номерацию на 100
		ТЗ_Элементы = СоздатьОбъект("ТаблицаЗначений");
		ТЗ_Элементы.НоваяКолонка("Ссылка");
		СпрРазрешенныеВидыУпаковки	= СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");
		СпрРазрешенныеВидыУпаковки.ИспользоватьВладельца(ТекТМЦ.ТекущийЭлемент());
		СпрРазрешенныеВидыУпаковки.ВыбратьЭлементы();
		Пока СпрРазрешенныеВидыУпаковки.ПолучитьЭлемент() = 1 Цикл
			ТЗ_Элементы.НоваяСтрока();
			ТЗ_Элементы.Ссылка = СпрРазрешенныеВидыУпаковки.ТекущийЭлемент();
		КонецЦикла;
		ТЗ_Элементы.ВыбратьСтроки();
		Пока ТЗ_Элементы.ПолучитьСтроку() = 1 Цикл
			СпрРазрешенныеВидыУпаковки.НайтиЭлемент(ТЗ_Элементы.Ссылка);
			СпрРазрешенныеВидыУпаковки.Код = Число(СпрРазрешенныеВидыУпаковки.Код) + 100;
			СпрРазрешенныеВидыУпаковки.Записать();
		КонецЦикла;
		
		//--- перенумероввываем
		ТекКод = 0;
		ТекРазрешенныеВидыУпаковки.ИспользоватьВладельца(ТекТМЦ.ТекущийЭлемент());
		ТекРазрешенныеВидыУпаковки.ПорядокКодов();
		ТекРазрешенныеВидыУпаковки.ВыбратьЭлементы();
		Пока ТекРазрешенныеВидыУпаковки.ПолучитьЭлемент() = 1 Цикл
			
			Если ТекРазрешенныеВидыУпаковкиТМЦ.НайтиПоРеквизиту("ВидУпаковки",ТекРазрешенныеВидыУпаковки.ВидУпаковки,0) = 1 Тогда
			
				ТекКод = ТекКод + 1;
				ТекРазрешенныеВидыУпаковкиТМЦ.Код = ТекКод;
				ТекРазрешенныеВидыУпаковкиТМЦ.Записать();
				
			КонецЕсли;
			
		КонецЦикла;
			
КонецПроцедуры // ЗаполнитьПоГруппировкеВидовУпаковки

// ===============================
// ТЕЛО МОДУЛЯ
// ===============================

// инициализация списков
Действие.ДобавитьЗначение("Пометить на удаление");			//	1
Действие.ДобавитьЗначение("Снять пометку удаления");		//	2	
Действие.ДобавитьЗначение("Перенести в группу");       	 	//	3
Действие.ДобавитьЗначение("Установить ставку НДС");    	 	//	4
Действие.ДобавитьЗначение("Добавить виды категорий");       //	5 
Действие.ДобавитьЗначение("Удалить из категории");     	 	//	6
Действие.ДобавитьЗначение("Удалить из всех категорий");		//	7
Действие.ДобавитьЗначение("Скопировать единицу измерения");	//	8
Действие.ДобавитьЗначение("Удалить единицу измерения"); 	//	9
Действие.ДобавитьЗначение("Установить комментарий");    	//	10 
Действие.ДобавитьЗначение("Установить мин. тов. остаток");  //	11
Действие.ДобавитьЗначение("Установить торг. наценку");    	//	12
Действие.ДобавитьЗначение("Установить норму рент.");    	//	13
Действие.ДобавитьЗначение("Установить схему начисления з/п");    	//	14
Действие.ДобавитьЗначение("Установить группа номенклатуры");    	//	15
Действие.ДобавитьЗначение("Установить Группировку видов упаковки");    	//	16  //--- УМК Сандомирский В.Ю. (09.10.14) установка в ТМЦ группировок видов упаковки
Действие.ДобавитьЗначение("Установить ОПР (на 1кг.)");    	//	17  //+ umk
Действие.ДобавитьЗначение("Установить категорию номенклатуры");     	 	//	18

Действие.ТекущаяСтрока(3);

НачальнаяДата = Константа.ДатаНачалаРаботы;

ЗначениеПометки = 2; 
ЗначениеНеПометки = 1;

ИмяФормы = "Обработка.ГрупповаяОбработкаСправочникаНоменклатуры"; 
Комментарий = "Групповая обработка справочника ""Номенклатура""";
ВыбДата = РабочаяДата();