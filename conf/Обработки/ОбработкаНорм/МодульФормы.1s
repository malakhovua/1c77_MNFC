Перем ДобавлятьВТЗ;
Перем ПечНаименованиеМатериал;
Перем ПечНаименованиеСырье;

Процедура СнятьФлагДляЗаказа(Продукция) Далее

Процедура ВывестиСекции(Таб, ИмСекц, ТЗП, Зн = 0)
	Таб.ВывестиСекцию(ИмСекц + "|Основная");
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если (Зн = 2) и (ТЗ.Кол <> 2) Тогда
		    Продолжить;
		КонецЕсли;
		Таб.ПрисоединитьСекцию(ИмСекц + "|Продукция");
	КонецЦикла;
	Таб.ПрисоединитьСекцию(ИмСекц + "|Итого");
КонецПроцедуры

Процедура УстПометка(Зн)
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если Зн > 0 Тогда
		    ТЗ.Кол = Зн;
		Иначе
			ТЗ.Кол = 3-ТЗ.Кол;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

//*******************************************
Процедура ДобавитьСтроку(ТМЦ)
	//Спис = СоздатьОбъект("СписокЗначений");
	//ТЗЗ.Выгрузить(Спис,,,"ТМЦС");
	//Если Спис.Принадлежит(ТМЦ) = 0 Тогда
	    ТЗЗ.НоваяСтрока();
		ТЗЗ.ТМЦС = ТМЦ;
		ТЗЗ.КоэфП = 1;
	//КонецЕсли;	
КонецПроцедуры

Процедура УдалитьСтроку()
	ТекСтр = ТЗЗ.ТекущаяСтрока();
	Если ТекСтр <> 0 Тогда
		ТЗЗ.УдалитьСтроку();
	КонецЕсли;
КонецПроцедуры

Процедура ДвойнойЩелчокТЗЗ()
	ТекКол = ТЗЗ.ТекущаяКолонка();
	ТекСтр = ТЗЗ.ТекущаяСтрока();
	Если (ТекКол <> "") и (ТекСтр <> 0) Тогда
		Если ТекКол = "КоэфП" Тогда
			Ч = ТЗЗ.КоэфП;
			Если ВвестиЧисло(Ч, "Введите новый коэф. пересчёта", 15, 3) = 1 Тогда
			    ТЗЗ.КоэфП = Ч;
			КонецЕсли;			
		ИначеЕсли ТекКол = "Цена" Тогда
			Ч = ТЗЗ.Цена;
			Если ВвестиЧисло(Ч, "Введите новую цену", 12, 2) = 1 Тогда
			    ТЗЗ.Цена = Ч;
			КонецЕсли;			
		Иначе		    
		    СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
			глТМЦДляПозиционированияПриВыбореВНормах = ТЗЗ.ПолучитьЗначение(ТекСтр, ТекКол);
			Если СпрТМЦ.Выбрать("Выберите ТМЦ " + ?(ТекКол = 1, "", "на")+" которое заменяем", "ДляВыбора") <> 0 Тогда
			    ТЗЗ.УстановитьЗначение(ТекСтр, ТекКол, СпрТМЦ.ТекущийЭлемент());
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДвойнойЩелчок()
	ТекСтр = ТЗ.ТекущаяСтрока();
	ТекКол = ТЗ.ТекущаяКолонка();
	Если ТекКол = "Кол" Тогда
		Если ТекСтр <> 0 Тогда
		    Кол = ТЗ.ПолучитьЗначение(ТекСтр, "Кол");
			Если Кол = 1 Тогда
			    ТЗ.УстановитьЗначение(ТекСтр, "Кол", 2);
			Иначе
				ТЗ.УстановитьЗначение(ТекСтр, "Кол", 1);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли (ТекКол = "КвоЭкзМат") ИЛИ (ТекКол = "КвоЭкзСырья") ИЛИ (ТекКол = "Коэф") ИЛИ (ТекКол = "КоэфМат") Тогда
		Если (ТекКол = "КвоЭкзМат") Тогда
			ИмКол = "К-во экз. материалов";
		ИначеЕсли (ТекКол = "КвоЭкзСырья") Тогда
			ИмКол = "К-во экз. сырья";
		ИначеЕсли (ТекКол = "КоэфМат") Тогда
			ИмКол = "Коэф. мат.";			
		Иначе
			ИмКол = "Коэф.";
		КонецЕсли;
		
		Ч = ТЗ.ПолучитьЗначение(ТекСтр, ТекКол);
		Если ВвестиЧисло(Ч, "Введите " + ИмКол, 7, 2) = 1 Тогда
		    ТЗ.УстановитьЗначение(ТекСтр, ТекКол, Ч);
		КонецЕсли;
	Иначе
		ОткрытьФорму(ТЗ.ПолучитьЗначение(ТекСтр, ТекКол));
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьТаблицу(ТЗП, ВидТМЦ)
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	СпрТМЦ.ВыбратьЭлементыПоРеквизиту("ВидТМЦ", ВидТМЦ, 0, 0);	
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл	
		Если списПродукция.РазмерСписка() > 0 Тогда	
			Если списПродукция.Принадлежит(СпрТМЦ.ТекущийЭлемент()) = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Если фТолькоБезСТакимЖеФаршем = 1 Тогда
			Если ПустоеЗначение(СпрТМЦ.ТМЦСТакимЖеФаршем) = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ТЗП.НоваяСтрока();
		ТЗП.ТМЦ = СпрТМЦ.ТекущийЭлемент();
		ТЗП.ВидТМЦ = СпрТМЦ.ВидТМЦ;		
	КонецЦикла;
КонецПроцедуры

Процедура Заполнить()
	СпМеню = СоздатьОбъект("СписокЗначений");
	СпМеню.ДобавитьЗначение(1, "Последняя действующая");
	СпМеню.ДобавитьЗначение(2, "Все действующие");
	СпМеню.ДобавитьЗначение(3, "Все не действующие");
	СпМеню.ДобавитьЗначение(4, "Все действующие по выбранному фаршу");
	Зн = 1;
	Если СпМеню.ВыбратьЗначение(Зн,,,,1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТЗ.КоличествоСтрок() > 0 Тогда
	    Если Вопрос("Удалить строки?", "Да+Нет") = "Да" Тогда
	        ТЗ.УдалитьСтроки();
		КонецЕсли;
	КонецЕсли;

	Если Зн = 4 Тогда
		Если ТЗЗ.КоличествоСтрок() = 0 Тогда
		    Предупреждение("Нужно выбрать вид фарша");
			Возврат;
		КонецЕсли;
		Фарш = ТЗЗ.ПолучитьЗначение(1, "ТМЦС");
		Если Фарш.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат Тогда
		    Предупреждение("В первой строке таблицы указан не фарш");
			Возврат;
		КонецЕсли;
	КонецЕсли;

	СписМат = СоздатьОбъект("СписокЗначений");
	ТЗЗ.Выгрузить(СписМат,,,"ТМЦС");	

	ТЗП = СоздатьОбъект("ТаблицаЗначений");
	ТЗП.НоваяКолонка("ТМЦ", "Справочник.ТМЦ");
	ТЗП.НоваяКолонка("ВидТМЦ", "Перечисление.ВидыТМЦ");
	
	ЗаполнитьТаблицу(ТЗП, Перечисление.ВидыТМЦ.Продукция);
	ЗаполнитьТаблицу(ТЗП, Перечисление.ВидыТМЦ.Полуфабрикат);
	//ТекстЗ = 
	//"//{{ЗАПРОС(Сформировать)
	//|Период с НаДату по НаДату;
	//|ТМЦ = Справочник.ТМЦ.ТекущийЭлемент;
	//|ВидТМЦ = Справочник.ТМЦ.ВидТМЦ;
	//|Функция Сч = Счётчик();
	//|Группировка ТМЦ без групп;
	//|Условие(ТМЦ в списПродукция);
	//|"//}}ЗАПРОС
	//;
	//
	//Запр = СоздатьОбъект("Запрос");
	//Если Запр.Выполнить(ТекстЗ) = 0 Тогда
	//    Возврат;
	//КонецЕсли;
	
	КвоСтрок = ТЗЗ.КоличествоСтрок();
	Док = СоздатьОбъект("Документ");	
	
	//Запр.Выгрузить(ТЗП, 1, 0);
	ТЗП.ВыбратьСтроки();
	Пока ТЗП.ПолучитьСтроку() = 1 Цикл 
		Стр = 0;
		ЕстьМат = 1;
		НЗ = "";
		Док.ОбратныйПорядок(1);
		Док.УстановитьФильтр(1,0);
		Док.ВыбратьПоЗначению(НачДата,КонДата,"Продукция", ТЗП.ТМЦ);			
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.Вид() = "НормыЗатрат" Тогда
				Если (фТолькоДляЗаказа = 1) И (Док.фДляЗаказа = 0) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ((Док.Действует = 1) И ((Зн <= 2) ИЛИ (Зн = 4))) ИЛИ ((Док.Действует = 0) И (Зн = 3)) Тогда
					НЗ = Док.ТекущийДокумент();
					Если СокрЛП(ТПрим) <> "" Тогда
						Если ргСодержит = 1 Тогда
						    Если Найти(НЗ.Примечание, СокрЛП(ТПрим)) = 0 Тогда
								Продолжить;
							КонецЕсли;
						Иначе
						    Если Найти(НЗ.Примечание, СокрЛП(ТПрим)) <> 0 Тогда
								Продолжить;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;				    
					Если КвоСтрок > 0 Тогда
						Если фВсеКроме = 1 Тогда
							ЕстьМат = 1;
						Иначе
							ЕстьМат = 0;							
						КонецЕсли;
						
						НЗ.ВыбратьСтроки();
						Пока НЗ.ПолучитьСтроку() = 1 Цикл
							Если списМат.Принадлежит(НЗ.Элемент) = 1 Тогда
								Если фВсеКроме = 1 Тогда
									ЕстьМат = 0;
								Иначе
									ЕстьМат = 1;
								КонецЕсли;							    
								Прервать;
							КонецЕсли;
						КонецЦикла;			    
					КонецЕсли;
					Если (ТЗ.НайтиЗначение(НЗ, Стр, "НЗ") = 0) и (ЕстьМат = 1) Тогда
						ТЗ.НоваяСтрока();
						ТЗ.Кол = 2;   
						ТЗ.Д = НЗ.Действует + 1;
						ТЗ.ДляЗаказа = НЗ.фДляЗаказа + 1;
						ТЗ.Коэф = Коэф;
						ТЗ.КоэфМат = КоэфМат;
						ТЗ.КвоЭкзМат = КЭкзМат;
						ТЗ.КвоЭкзСырья = КЭкзСырья;
						ТЗ.Продукция = ТЗП.ТМЦ;
						ТЗ.Группа = ТЗП.ТМЦ.Родитель;
						ТЗ.НЗ = НЗ;
						ТЗ.Примечание = НЗ.Примечание;
					КонецЕсли;
					Если Зн = 1 Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если Зн = 4 Тогда
	    СписНЗ = СоздатьОбъект("СписокЗначений");
		ТЗ.Выгрузить(списНЗ,,,"Продукция");
		
		ТЗ.УдалитьСтроки();
		Для Инд = 1 по СписНЗ.РазмерСписка() Цикл
			// выберем все нормы, которые не содержат фарша
			Док = СоздатьОбъект("Документ");
			Док.ВыбратьПоЗначению(,, "Продукция", СписНЗ.ПолучитьЗначение(Инд));
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если Док.Вид() = "НормыЗатрат" Тогда
				    Если Док.Действует = 1 Тогда
						ЕстьФарш = 0;
				        Док.ВыбратьСтроки();
						Пока Док.ПолучитьСтроку() = 1 Цикл
							Если Док.Элемент = Фарш Тогда
							    ЕстьФарш = 1;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
						Если ЕстьФарш = 0 Тогда
							НЗ = Док.ТекущийДокумент();							
							ТЗ.НоваяСтрока();
							ТЗ.Кол = 2;   
							ТЗ.Д = НЗ.Действует + 1;
							ТЗ.ДляЗаказа = НЗ.фДляЗаказа + 1;
							ТЗ.Коэф = Коэф;
							ТЗ.КоэфМат = КоэфМат;
							ТЗ.КвоЭкзМат = КЭкзМат;
							ТЗ.КвоЭкзСырья = КЭкзСырья;
							ТЗ.Продукция = НЗ.Продукция;
							ТЗ.Группа = НЗ.Продукция.Родитель;
							ТЗ.НЗ = НЗ;
							ТЗ.Примечание = НЗ.Примечание;							
						КонецЕсли;
				    КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура УдалитьЗначениеСписка(Спис)
	Если Спис.ТекущаяСтрока() <> 0 Тогда
		Спис.УдалитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементВСписок(НазваниеОбъекта, Один, ВТЗ = 0)
	КФормы = 0;
	ДобавлятьВТЗ = ВТЗ;
	ОткрытьПодбор(НазваниеОбъекта, "ФормаСписка", КФормы, Один);
    КФормы.ВыборГруппы(1);	
КонецПроцедуры

Процедура ДобавитьПозициюВСписок(Элт, Спис, Наим)
	Если Спис.Принадлежит(Элт) = 0 Тогда
	    Спис.ДобавитьЗначение(Элт, Наим);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элт, КонтФормы)
	Если Элт.Вид() = "ТМЦ" Тогда
		Если ДобавлятьВТЗ = 1 Тогда
		    ДобавитьСтроку(Элт);
		Иначе
			ДобавитьПозициюВСписок(Элт, списПродукция, Элт.Наименование);			
		КонецЕсли;	    
	КонецЕсли;
КонецПроцедуры

Процедура ВывестиСекц(Таб, Имя, КвоЭС, КвоЭМ, ТЗП, НЗ, Уменьшить = 0, КоэфСырья, КоэфМатериалов)
	Если (КвоЭМ <> 0) и (КвоЭС <> 0) Тогда			
	    Таб.ВывестиСекцию(Имя + "|Вместе");
		КвоЭМ = КвоЭМ - Уменьшить;
		КвоЭС = КвоЭС - Уменьшить;
	ИначеЕсли (КвоЭМ = 0) и (КвоЭС = 1) Тогда
		Таб.ВывестиСекцию(Имя + "|Сырье");
		КвоЭС = КвоЭС - Уменьшить;
	ИначеЕсли (КвоЭМ = 1) и (КвоЭС = 0) Тогда
		Таб.ВывестиСекцию(Имя + "|Мат");
		КвоЭМ = КвоЭМ - Уменьшить;
	ИначеЕсли (КвоЭМ = 0) и (КвоЭС > 1) Тогда
		Таб.ВывестиСекцию(Имя + "|Сырье");
		Таб.ПрисоединитьСекцию(Имя + "|Пробел");
		Таб.ПрисоединитьСекцию(Имя + "|Сырье");
		КвоЭС = КвоЭС - Уменьшить * 2;
	ИначеЕсли (КвоЭМ > 1) и (КвоЭС = 0) Тогда
		Таб.ВывестиСекцию(Имя + "|Мат");
		Таб.ПрисоединитьСекцию(Имя + "|Пробел");
		Таб.ПрисоединитьСекцию(Имя + "|Мат");
		КвоЭМ = КвоЭМ - Уменьшить * 2;
	КонецЕсли;	
КонецПроцедуры

Процедура ПечатьНорм(Таб, НЗ, НоваяСтраница, КвоЭкзСырья, КвоЭкзМат, КоэфСырья, КоэфМатериалов)
	Если НоваяСтраница = 1 Тогда
	    Таб.НоваяСтраница();
	КонецЕсли;
	КвоЭМ = КвоЭкзМат;
	КвоЭС = КвоЭкзСырья;
	
	ТЗП = СоздатьОбъект("ТаблицаЗначений");
	ТЗП.НоваяКолонка("Материал", "Справочник.ТМЦ");
	ТЗП.НоваяКолонка("Сырье", "Справочник.ТМЦ");
	ТЗП.НоваяКолонка("ПримМат", "Строка");
	ТЗП.НоваяКолонка("ПримСырье", "Строка");
	ТЗП.НоваяКолонка("КвоМат", "Число", 15, 3);
	ТЗП.НоваяКолонка("КвоСырья", "Число", 15, 3);
	ТЗП.НоваяКолонка("КвоФО", "Число");
	
	ПоследСтрМат = 1;
	ПоследСтрСырье = 1;
	ГруппаСырье = СоздатьОбъект("Справочник.ТМЦ");
	ГруппаСырье.НайтиПоНаименованию("1Сырье", 0, 1);
	
	НЗ.ВыбратьСтроки();
	Пока НЗ.ПолучитьСтроку() = 1 Цикл
		НормаФ = НЗ.Элемент.НормаКГФарша.Получить(РабочаяДата());
		
		Если НЗ.Элемент.ПринадлежитГруппе(ГруппаСырье) = 1 Тогда
			Если ПоследСтрСырье > ТЗП.КоличествоСтрок() Тогда
			    ТЗП.НоваяСтрока();
			Иначе
				ТЗП.ПолучитьСтрокуПоНомеру(ПоследСтрСырье);
			КонецЕсли;
			ПоследСтрСырье = ПоследСтрСырье + 1;
			ТЗП.Сырье = НЗ.Элемент;
			ТЗП.КвоСырья = ?(НормаФ = 0, НЗ.Кво, НормаФ * НЗ.КвоПродукции) * КоэфСырья;
			ТЗП.КвоФО = ?(НЗ.ФаршОснова = Да, НЗ.Кво * КоэфСырья, 0);
			ТЗП.ПримСырье = НЗ.ПримечаниеСтр;
		Иначе
			Если НЗ.Элемент.НеУчитыватьВОбщемВесе = 1 Тогда
			    Продолжить;
			КонецЕсли;
			
			Если ПоследСтрМат > ТЗП.КоличествоСтрок() Тогда
			    ТЗП.НоваяСтрока();
			Иначе
				ТЗП.ПолучитьСтрокуПоНомеру(ПоследСтрМат);
			КонецЕсли;
			ПоследСтрМат = ПоследСтрМат + 1;
			ТЗП.Материал = НЗ.Элемент;			
			ТЗП.КвоМат = ?(НормаФ = 0, НЗ.Кво, НормаФ * НЗ.КвоПродукции) * КоэфМат;
			ТЗП.ПримМат = НЗ.ПримечаниеСтр;
		КонецЕсли;
	КонецЦикла;
    
	ПервыйПроход = 1;
	Пока КвоЭМ + КвоЭС <> 0 Цикл
		Если ПервыйПроход = 0 Тогда
		    Таб.НоваяСтраница();
		КонецЕсли;
		ВывестиСекц(Таб, ?(фВыводитьПрим = 1,"ШапкаПрим","Шапка"), КвоЭС, КвоЭМ, ТЗП, НЗ,, КоэфСырья, КоэфМатериалов);
		
		ТЗП.ВыбратьСтроки();
		Пока ТЗП.ПолучитьСтроку() = 1 Цикл
			
			
			Если фВыводитьПрим = 1 Тогда //--- УМК Сандомирский В.Ю, печать с примечаниями (03.06.14)
				ПечНаименованиеМатериал = СокрЛП(ТЗП.Материал);
				
				Если ПустоеЗначение(ТЗП.ПримМат) = 0 Тогда
					ПечНаименованиеМатериал = ПечНаименованиеМатериал + " (" + СокрЛП(ТЗП.ПримМат) + ")";	
				КонецЕсли;	
				
				ПечНаименованиеСырье = СокрЛП(ТЗП.Сырье);
				//--- Тоже для сырья
				Если ПустоеЗначение(ТЗП.ПримСырье) = 0 Тогда
					ПечНаименованиеСырье = ПечНаименованиеСырье + " (" + СокрЛП(ТЗП.ПримСырье) + ")";	
				КонецЕсли;	
					
			Иначе
				ПечНаименованиеМатериал = СокрЛП(ТЗП.Материал); 
				ПечНаименованиеСырье 	= СокрЛП(ТЗП.Сырье)
			КонецЕсли;
			
			ВывестиСекц(Таб, ?(фВыводитьПрим = 1,"СтрокаПрим","Строка"), КвоЭС, КвоЭМ, ТЗП, НЗ,, КоэфСырья, КоэфМатериалов);
		КонецЦикла;
		ВывестиСекц(Таб, "Итого", КвоЭС, КвоЭМ, ТЗП, НЗ, 1- фВыводитьПрим, КоэфСырья, КоэфМатериалов);
		Если фВыводитьПрим = 1 Тогда
			ВывестиСекц(Таб, "ФаршО", КвоЭС, КвоЭМ, ТЗП, НЗ, 1, КоэфСырья, КоэфМатериалов);
		КонецЕсли;
		ПервыйПроход = 0;
	КонецЦикла;
КонецПроцедуры

Процедура ПечатьНЗ(Зн, КвоЭкзСырья = 1, КвоЭкзМат = 1)
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Нормы");
	
	Если Зн = 4 Тогда
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ПечатьНорм(Таб, ТЗ.НЗ, ?(ТЗ.НомерСтроки = 1, 0, 1), ТЗ.КвоЭкзСырья, ТЗ.КвоЭкзМат, ТЗ.Коэф, ТЗ.КоэфМат);
		КонецЦикла;
	Иначе
		ПечатьНорм(Таб, ТЗ.НЗ, 0, ТЗ.КвоЭкзСырья, КвоЭкзМат, ТЗ.Коэф, ТЗ.КоэфМат);
	КонецЕсли;

	Таб.ПараметрыСтраницы(2,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Нормы");
КонецПроцедуры

Процедура ПечатьСписка(Зн)
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Список");
	Таб.ВывестиСекцию("Шапка");
	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Если (Зн = 7) И (ТЗ.Кол <> 2) Тогда
			Продолжить;
		КонецЕсли;
		Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	
	Таб.ПараметрыСтраницы(1,,,,,,,,,1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Список норм");	
КонецПроцедуры

Процедура Печать()
	Сп = СоздатьОбъект("СписокЗначений");
	Сп.ДобавитьЗначение(1, "Все материалы");
	Сп.ДобавитьЗначение(2, "Материалы только для выделенных");
	Сп.ДобавитьЗначение(3, "Только указанные");
	Сп.ДобавитьЗначение(4, "Нормы затрат на все");
	Сп.ДобавитьЗначение(5, "Нормы затрат на выбранную");
	Сп.ДобавитьЗначение(6, "Список норм все");
	Сп.ДобавитьЗначение(7, "Список норм выделенные");
	
	Зн = 1;
	Если Сп.ВыбратьЗначение(Зн, , , , 1) = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	Если Зн >= 6 Тогда
		ПечатьСписка(Зн);
		Возврат;
	ИначеЕсли Зн > 3 Тогда
	    ПечатьНЗ(Зн);
		Возврат;
	КонецЕсли;
	
	ТЗП = СоздатьОбъект("ТаблицаЗначений");
	ТЗП.НоваяКолонка("Материал", "Справочник.ТМЦ");
	ТЗП.НоваяКолонка("Итого", "Число");
	ТЗП.НоваяКолонка("Родитель", "Справочник.ТМЦ");
	ТЗП.НоваяКолонка("Полное", "Строка");
	
	НС = 1;
	Спис = СоздатьОбъект("СписокЗначений");
	ТЗЗ.Выгрузить(Спис,,,"ТМЦС");
    
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ИмКол = "П"+НС;
		ТЗП.НоваяКолонка(ИмКол, "Число", 15, 3);
		НС = НС + 1;
		Если (Зн = 2) и (ТЗ.Кол <> 2) Тогда
		    Продолжить;
		КонецЕсли;
		
		НЗ = ТЗ.НЗ;
		НЗ.ВыбратьСтроки();
		Пока НЗ.ПолучитьСтроку() = 1 Цикл
			Если Зн = 3 Тогда
			    Если Спис.Принадлежит(НЗ.Элемент) = 0 Тогда
			        Продолжить;
			    КонецЕсли;
			КонецЕсли;
			
			Стр = 0;
			Если ТЗП.НайтиЗначение(НЗ.Элемент, Стр, "Материал") = 0 Тогда
			    ТЗП.НоваяСтрока();
				ТЗП.Материал = НЗ.Элемент;
				ТЗП.Родитель = НЗ.Элемент.Родитель;
				ТЗП.Полное = НЗ.Элемент.ПолноеНаименование();
			Иначе
				ТЗП.ПолучитьСтрокуПоНомеру(Стр);
			КонецЕсли;
			ТЗП.УстановитьЗначение(ТЗП.НомерСтроки, ИмКол, ТЗП.ПолучитьЗначение(ТЗП.НомерСтроки, ИмКол) + НЗ.Кво);
			ТЗП.Итого = ТЗП.Итого + НЗ.Кво;
		КонецЦикла;
	КонецЦикла;		
	
	ТЗП.Сортировать("Полное,Родитель,Материал");
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	ВывестиСекции(Таб, "Шапка", ТЗП, Зн);
	Таб.Опции(0,0,Таб.ВысотаТаблицы(), 1);
	
	ТЗП.ВыбратьСтроки();
	Пока ТЗП.ПолучитьСтроку() = 1 Цикл
		ВывестиСекции(Таб, "Строка", ТЗП, Зн);
	КонецЦикла;	
	
	Таб.ПараметрыСтраницы(2);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет по материалам");
КонецПроцедуры

Процедура Сформировать(Предвар = 0)
	Если Предвар = 0 Тогда
		СпМеню = СоздатьОбъект("СписокЗначений");
		СпМеню.ДобавитьЗначение(1, "Обработать нормы");
		СпМеню.ДобавитьЗначение(2, "Сделать действующими");
		СпМеню.ДобавитьЗначение(3, "Сделать НЕ действующими");
		СпМеню.ДобавитьЗначение(4, "Обработать по фаршу");
		
		Вариант = 1;
		Если СпМеню.ВыбратьЗначение(Вариант, ,,,1) = 0 Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Вариант = 1;
	КонецЕсли;
	
	Если Вариант = 1 Тогда
		ТЗЗ.Сортировать("ТМЦС");
	    Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("Результат");
	
		Если Предвар = 1 Тогда
		Иначе
			Если Вопрос("Начать процедуру замены выбранных материалов на другие?", "Да+Нет") = "Нет" Тогда
			    Возврат;
			КонецЕсли;
			
			НачатьТранзакцию();
		КонецЕсли;
		
		ДокНЗ = СоздатьОбъект("Документ.НормыЗатрат");
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			Если ТЗ.Кол = 1 Тогда
			    Продолжить;
			КонецЕсли;
			ТЗТЧ = СоздатьОбъект("ТаблицаЗначений");
			НЗ = ТЗ.НЗ;
			Если Предвар = 0 Тогда
				Если (фНовыеНормы = 1) Тогда
					// копируем нормы			
					ДокНЗ.Новый();
					ДокНЗ.ДатаДок = НаДату;
					ДокНЗ.фДляЗаказа = фДляЗаказа;
					Если фДляЗаказа = 1 Тогда
						СнятьФлагДляЗаказа(НЗ.Продукция);
					КонецЕсли;
					Если фННД = 0 Тогда
					    ДокНЗ.Действует = 1;
					КонецЕсли;				
					ДокНЗ.Фирма = НЗ.Фирма;
					глУстановитьНомер(ДокНЗ);
					ДокНЗ.Автор = глПользователь;
					ДокНЗ.Продукция = НЗ.Продукция;
					ДокНЗ.КвоПродукции = НЗ.КвоПродукции;
					ДокНЗ.КоэффициентПродукции = НЗ.КоэффициентПродукции;
					ДокНЗ.ЕдПродукции = НЗ.ЕдПродукции;
					ДокНЗ.Заказ = НЗ.Заказ;
					ДокНЗ.ПроцПотерь = НЗ.ПроцПотерь;
					ДокНЗ.ДокументОснование = НЗ;
				Иначе
					ДокНЗ.НайтиДокумент(НЗ);
				КонецЕсли;
				Если фКопиПрим = 1 Тогда
					ДокНЗ.Примечание = СокрЛП(НЗ.Примечание) + " " + СокрЛП(ДобавитьТекст);
				КонецЕсли;
			КонецЕсли;
			Если Таб.ВысотаТаблицы() = 0 Тогда
			    Таб.НоваяСтраница();
			КонецЕсли;
			Таб.ВывестиСекцию("Шапка");
			
			НЗ.ВыгрузитьТабличнуюЧасть(ТЗТЧ);		
		    ТЗТЧ.НоваяКолонка("БылоТМЦ", "Справочник.ТМЦ");
			ТЗТЧ.НоваяКолонка("ПСорт", "Число");
			ТЗТЧ.НоваяКолонка("БылоКво", "Число", 15, 3);
			ТЗТЧ.НоваяКолонка("ННЗ", "Документ.НормыЗатрат");
			
			Инд = 1;
			КвоСтр = ТЗТЧ.КоличествоСтрок();
			Пока Инд <= КвоСтр Цикл
				ТЗТЧ.ПолучитьСтрокуПоНомеру(Инд);
				ТЗТЧ.ПСорт = ТЗТЧ.НомерСтроки;
				ТЗТЧ.БылоТМЦ = ТЗТЧ.Элемент;
				ТЗТЧ.БылоКво = ТЗТЧ.Кво;
				Стр = 0;
				Если ТЗЗ.НайтиЗначение(ТЗТЧ.Элемент, Стр, "ТМЦС") = 1 Тогда
					ТЗЗ.ПолучитьСтрокуПоНомеру(Стр);
					ПерваяЗамена = 1;
				КонецЕсли;
				Пока ТЗЗ.ТМЦС = ТЗТЧ.БылоТМЦ Цикл
					НТМЦ = ТЗЗ.ТМЦНа;
					КоэфП = ТЗЗ.КоэфП;
					Если ПустоеЗначение(НТМЦ) = 0 Тогда
						Если ПерваяЗамена = 0 Тогда
							ТЗТЧ.НоваяСтрока();
							Для ИдКол = 1 По ТЗТЧ.КоличествоКолонок() Цикл
								ТЗТЧ.УстановитьЗначение(ТЗТЧ.НомерСтроки, ИдКол, ТЗТЧ.ПолучитьЗначение(Инд, ИдКол));
							КонецЦикла;
						КонецЕсли;
					    ТЗТЧ.Элемент = НТМЦ;
						ТЗТЧ.Ед = НТМЦ.ЕдиницаПоУмолчанию;
						ТЗТЧ.Кво = ?(фКвоНеКоэф = 1, КоэфП, ТЗТЧ.БылоКво * КоэфП);
						ТЗТЧ.Сумма = ТЗТЧ.Цена * ТЗТЧ.Кво;
					Иначе
					    // удаляем ТМЦ
						Если Предвар = 0 Тогда
							//ТЗТЧ.УдалитьСтроку(Инд);
							//Инд = Инд - 1;
							Если ТЗТЧ.Элемент.НеУчитыватьВОбщемВесе = 1 Тогда
								ДокНЗ.КвоПродукции = ДокНЗ.КвоПродукции - ТЗТЧ.Кво;
							КонецЕсли;
						КонецЕсли;
						ТЗТЧ.Элемент = "";
						ТЗТЧ.Кво = 0;
					КонецЕсли;
					
					Стр = Стр + 1;
					Если Стр > ТЗЗ.КоличествоСтрок() Тогда
						Прервать;
					Иначе
						ТЗЗ.ПолучитьСтрокуПоНомеру(Стр);
					КонецЕсли;
					ПерваяЗамена = 0;
				КонецЦикла;
				Инд = Инд + 1;
			КонецЦикла;
			// добавим новые
			ТЗЗ.ВыбратьСтроки();
			Пока ТЗЗ.ПолучитьСтроку() = 1 Цикл
				Если ПустоеЗначение(ТЗЗ.ТМЦС) = 1 Тогда
					ТЗТЧ.НоваяСтрока();
					ТЗТЧ.ПСорт = 999999999;
					ТЗТЧ.ВидЭлемента = ?(ТЗЗ.ТМЦС.ВидТМЦ = Перечисление.ВидыТМЦ.Полуфабрикат, Перечисление.ВидыЭлементовСоставаПродукции.Полуфабрикат, Перечисление.ВидыЭлементовСоставаПродукции.Материал);
					ТЗТЧ.Элемент = ТЗЗ.ТМЦНа;
					ТЗТЧ.Кво = ТЗЗ.КоэфП;
					ТЗТЧ.Коэффициент = ТЗЗ.ТМЦНа.ЕдиницаПоУмолчанию.Коэффициент;
					ТЗТЧ.Ед = ТЗЗ.ТМЦНа.ЕдиницаПоУмолчанию;
					ТЗТЧ.Цена = ТЗЗ.Цена;
					ТЗТЧ.Сумма = ТЗЗ.Цена * ТЗЗ.КоэфП;
				КонецЕсли;
			КонецЦикла;			
			
			ТЗТЧ.Сортировать("ПСорт");
			Если Предвар = 0 Тогда
				ДокНЗ.УдалитьСтроки();
				ТЗТЧ.ВыбратьСтроки();
				Пока ТЗТЧ.ПолучитьСтроку() = 1 Цикл
					Если ПустоеЗначение(ТЗТЧ.Элемент) = 0 Тогда
						ДокНЗ.НоваяСтрока();
						ДокНЗ.ВидЭлемента = ТЗТЧ.ВидЭлемента;
						ДокНЗ.Элемент = ТЗТЧ.Элемент;
						ДокНЗ.Кво = ТЗТЧ.Кво;
						ДокНЗ.Коэффициент = ТЗТЧ.Коэффициент;
						ДокНЗ.Ед = ТЗТЧ.Ед;
						ДокНЗ.Сумма = ТЗТЧ.Сумма;
						ДокНЗ.БазоваяЗатрата = ТЗТЧ.БазоваяЗатрата;
						ДокНЗ.Процент = ТЗТЧ.Процент;
						ДокНЗ.НеПересчитыватьКво = ТЗТЧ.НеПересчитыватьКво;
						ДокНЗ.Цена = ТЗТЧ.Цена;
						ДокНЗ.ПримечаниеСтр = ТЗТЧ.ПримечаниеСтр;// + umk
					КонецЕсли;
				КонецЦикла;
				глРассчитатьКвоПродукции(ДокНЗ);
				ДокНЗ.Записать();
				ДокНЗ.Провести();
				ТЗТЧ.ВыбратьСтроки();
				Пока ТЗТЧ.ПолучитьСтроку() = 1 Цикл
					ТЗТЧ.ННЗ = ДокНЗ.ТекущийДокумент();
				КонецЦикла;
				Если фНовыеНормы = 1 Тогда
					ДокНЗ.НайтиДокумент(ТЗ.НЗ);
					Если фННД = 0 Тогда
					    ДокНЗ.Действует = 0;
					КонецЕсли;
					глРассчитатьКвоПродукции(ДокНЗ);
					ДокНЗ.Записать();
				КонецЕсли;
			КонецЕсли;
			ТЗТЧ.ВыбратьСтроки();
			Пока ТЗТЧ.ПолучитьСтроку() = 1 Цикл
				Если (ТЗТЧ.БылоТМЦ <> ТЗТЧ.Элемент) ИЛИ (ТЗТЧ.БылоКво <> ТЗТЧ.Кво) Тогда
				    Таб.ВывестиСекцию("СтрИзм");
				Иначе
					Таб.ВывестиСекцию("Строка");					
				КонецЕсли;				
			КонецЦикла;		
		КонецЦикла;
		
		Если Предвар = 0 Тогда
			Если Вопрос("Обработка закончена. Подтвердить изменения?", "Да+Нет") = "Нет" Тогда
				ОтменитьТранзакцию();
			Иначе
				ЗафиксироватьТранзакцию();
				ТЗ.УдалитьСтроки();
			КонецЕсли;
		КонецЕсли;
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Результаты изменения НЗ");	
	ИначеЕсли (Вариант = 2) ИЛИ (Вариант = 3) Тогда
		НачатьТранзакцию();
		ДокНЗ = СоздатьОбъект("Документ.НормыЗатрат");
		ТЗ.ВыбратьСтроки();		
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ДокНЗ.НайтиДокумент(ТЗ.НЗ);
			ДокНЗ.Действует = ?(Вариант = 2, 1, 0);
			глРассчитатьКвоПродукции(ДокНЗ);
			ДокНЗ.Записать();
		КонецЦикла;
		
		Если Вопрос("Обработка закончена. Подтвердить изменения?", "Да+Нет") = "Нет" Тогда
			ОтменитьТранзакцию();
			Возврат;
		Иначе
			ЗафиксироватьТранзакцию();
		КонецЕсли;		
		ТЗ.ВыбратьСтроки();		
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ТЗ.Д = ТЗ.НЗ.Действует + 1;
		КонецЦикла;
	ИначеЕсли (Вариант = 4) Тогда
		Если ТЗЗ.КоличествоСтрок() = 0 Тогда
		    Предупреждение("Нужно выбрать вид фарша");
			Возврат;
		КонецЕсли;
		Фарш = ТЗЗ.ПолучитьЗначение(1, "ТМЦС");
		Если Фарш.ВидТМЦ <> Перечисление.ВидыТМЦ.Полуфабрикат Тогда
		    Предупреждение("В первой строке таблицы указан не фарш");
			Возврат;
		КонецЕсли;
		
		Спис = СоздатьОбъект("СписокЗначений");
		Спис.ДобавитьЗначение(Фарш, "ТМЦ");
		Спис.ДобавитьЗначение(1, "ВидВыбора");
		ОткрытьФормуМодально("Журнал.ПолныйЖурнал.ДляПросмотраНорм", Спис);		
		Если ТипЗначенияСтр(Спис) = "Документ" Тогда
			НормыЗатрат = Спис;
			Если НормыЗатрат.Действует = 0 Тогда
			    Предупреждение("Данные нормы затрат не действуют");
			КонецЕсли;
		Иначе
			Возврат;
		КонецЕсли;		
		
		НачатьТранзакцию();
		ДокНЗ = СоздатьОбъект("Документ.НормыЗатрат");
		ТЗ.ВыбратьСтроки();		
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ДокНЗ.НайтиДокумент(ТЗ.НЗ);
			ДокНЗ.Действует = ?(Вариант = 2, 1, 0);
			глРассчитатьКвоПродукции(ДокНЗ);
			ДокНЗ.Записать();
		КонецЦикла;
		
		Если Вопрос("Обработка закончена. Подтвердить изменения?", "Да+Нет") = "Нет" Тогда
			ОтменитьТранзакцию();
			Возврат;
		Иначе
			ЗафиксироватьТранзакцию();
		КонецЕсли;		
		ТЗ.ВыбратьСтроки();		
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ТЗ.Д = ТЗ.НЗ.Действует + 1;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура СнятьФлагДляЗаказа(Продукция)
		ТекстЗапроса = 
		"//{{ЗАПРОС(Сформировать)
		|Без итогов;
		|ТекПродукция = Документ.НормыЗатрат.Продукция;
		|фДляЗаказа = Документ.НормыЗатрат.фДляЗаказа;
		|Условие(ТекПродукция = Продукция);
		|Условие(фДляЗаказа = 1);
		|Группировка Документ;
		|"//}}ЗАПРОС
		;	
		Запрос = СоздатьОбъект("Запрос");
		
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		    Возврат;
		КонецЕсли;
		
		НашлиПовтор = 0;
		ТЗ_Проверка = СоздатьОбъект("ТаблицаЗначений");
		Запрос.Выгрузить(ТЗ_Проверка);
		ТЗ_Проверка.ВыбратьСтроки();
		
		Пока ТЗ_Проверка.ПолучитьСтроку() = 1 Цикл
			НормаЗатратДок = СоздатьОбъект("Документ.НормыЗатрат");
			Если НормаЗатратДок.НайтиДокумент(ТЗ_Проверка.Документ) = 0  Тогда
				Продолжить;
			КонецЕсли;
	       
			НормаЗатратДок.фДляЗаказа = 0;
			НормаЗатратДок.Записать();
			
			Сообщить("Продукция " + Строка(Продукция) + ". Снят флаг для заказа у документа - " + Строка(НормаЗатратДок.ТекущийДокумент()));
	 		
		КонецЦикла;
		
КонецПроцедуры

Процедура ПриОткрытии()
	Если глФлагРасшифровки = 1 Тогда
	    НаДату = глРасшифровка.Получить("ДатаОтчета");
		ТЗ.Новаястрока();
		ТЗ.Кол = 2;
		ТЗ.Продукция = глРасшифровка.Получить("ВыбПродукция");
		ТЗ.Группа = ТЗ.Продукция.Родитель;
		Коэф = глРасшифровка.Получить("Коэф");
		КоэфМат = глРасшифровка.Получить("КоэфМат");
		НЗ = глРасшифровка.Получить("НормыЗатрат");
		КЭкзМат = глРасшифровка.Получить("КвоЭкзМат");
		КЭкзСырья = глРасшифровка.Получить("КвоЭкзСырья");
		ТЗ.КвоЭкзМат = КЭкзМат;
		ТЗ.КвоЭкзСырья = КЭкзСырья;		
		Если ПустоеЗначение(НЗ) = 1 Тогда
		    ТЗ.НЗ = ТЗ.Продукция.НормыЗатрат.Получить(НаДату);
		Иначе
			ТЗ.НЗ = НЗ;
		КонецЕсли;
		ТЗ.ДляЗаказа = ТЗ.НЗ.фДляЗаказа + 1;
		ТЗ.Примечание = ТЗ.НЗ.Примечание;
		
		Коэф = глРасшифровка.Получить("Коэф");
		ТЗ.Коэф = Коэф;
		ТЗ.КоэфМат = КоэфМат;
		
		фВыводитьПрим = глРасшифровка.Получить("фВыводитьПрим"); //--- УМК Сандомирский В.Ю, печать с примечаниями (03.06.14)
		
		ПечатьНЗ(4);
		//Таб = СоздатьОбъект("Таблица");
		//Таб.ИсходнаяТаблица("Нормы");
		//ПечатьНорм(Таб, ТЗ.НЗ, 0);
		Форма.Закрыть();
		//Таб.ПараметрыСтраницы(2);
		//Таб.Защита(Константа.ФлагЗащитыТаблиц);
		//Таб.ТолькоПросмотр(1);
		//Таб.Показать("Нормы");		
	КонецЕсли;
КонецПроцедуры

Процедура УдалитьСтрокуТЗ()
	ТекСтр = ТЗ.ТекущаяСтрока();
	Если ТекСтр = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	Если Вопрос("Удалить строку?", "Да+Нет") = "Нет" Тогда
	    Возврат;
	КонецЕсли;
	
	ТЗ.УдалитьСтроку(ТекСтр);
	Если ТЗ.КоличествоСтрок() > 0 Тогда
	    ТЗ.ПолучитьСтрокуПоНомеру(Мин(ТекСтр, ТЗ.КоличествоСтрок()));
		ТЗ.ТекущаяСтрока(Мин(ТекСтр, ТЗ.КоличествоСтрок()));
	КонецЕсли;
КонецПроцедуры

Процедура Сортировать()
	ТекКол = ТЗ.ТекущаяКолонка();
	Если ПустоеЗначение(ТекКол) = 0 Тогда
	    ТЗ.Сортировать(ТекКол);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВСписокНа()
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	Если СпрТМЦ.Выбрать("Выберите новое ТМЦ", "ДляВыбора") = 1 Тогда
		Стр = 0;
		Если ТЗЗ.НайтиЗначение(СпрТМЦ.ТекущийЭлемент(), Стр, "ТМЦНа") = 0 Тогда
			ТЗЗ.НоваяСтрока();
			ТЗЗ.ТМЦНа = СпрТМЦ.ТекущийЭлемент();
			ТЗЗ.КоэфП = 1;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ИзмКоэф(Коэффициент, Рекв)
	Если ТЗ.КоличествоСтрок() > 0 Тогда
		Если Вопрос("Записать новый коэффициент в таблице?", "Да+Нет") = "Да" Тогда
			ТЗ.ВыбратьСтроки();
			Пока ТЗ.ПолучитьСтроку() = 1 Цикл
				ТЗ.УстановитьЗначение(ТЗ.НомерСтроки, Рекв, Коэффициент);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

ТЗ.НоваяКолонка("Кол", "Число", 2,,"Обрабатывать", 2);
ТЗ.НоваяКолонка("Продукция", "Справочник.ТМЦ", 20);
ТЗ.НоваяКолонка("Группа", "Справочник.ТМЦ", 10);
ТЗ.НоваяКолонка("НЗ", "Документ.НормыЗатрат",,,"Нормы з.", 20);
ТЗ.НоваяКолонка("Д", "Число", 2,,"Действует", 2);
ТЗ.НоваяКолонка("Примечание", "Строка",,,"Примечание", 40);
ТЗ.НоваяКолонка("ДляЗаказа", "Число", 2,,"Зак.", 3);
ТЗ.НоваяКолонка("КоэфМат", "Число", 12, 2, "К. мат.", 4);
ТЗ.НоваяКолонка("Коэф", "Число", 12, 2, "К. сырья", 4);
ТЗ.НоваяКолонка("КвоЭкзМат", "Число",5, ,"К-во экз. мат.", 3);
ТЗ.НоваяКолонка("КвоЭкзСырья", "Число",5, ,"К-во экз. сырья", 3);
ТЗ.ВыводитьПиктограммы("Кол",1);
ТЗ.ВыводитьПиктограммы("Д",1);
ТЗ.ВыводитьПиктограммы("ДляЗаказа",1);

ТЗЗ.НоваяКолонка("ТМЦС", "Справочник.ТМЦ",,,"С", 20);
ТЗЗ.НоваяКолонка("ТМЦНа", "Справочник.ТМЦ",,,"На", 20);
ТЗЗ.НоваяКолонка("КоэфП", "Число",15,3,"Коэф.п./ К-во н.", 10);
ТЗЗ.НоваяКолонка("Цена", "Число",12,2,"Цена", 7);

НаДату = ТекущаяДата();
Коэф = 1;
КоэфМат = 1;
КЭкзМат = 1;
КЭкзСырья = 1;
фНовыеНормы = 1;
ргСодержит = 1;
фННД = 1;
фКопиПрим = 1;