Перем ЕстьСписаний;

// ======================================
Процедура ПриОткрытии()
	
	Форма.кПравоваяПоддержка.Видимость(глВидимостьПравовойПоддержки);
	
	Если НазваниеНабораПрав() = "ПриемПродукции" Тогда
		глМаксимизироватьОкно();
	КонецЕсли;
	
КонецПроцедуры 

// ===============================
Процедура ОткрытьПодчиненные()
	Если ТекущийДокумент.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;  
	ОткрытьФорму("Журнал.Подчиненные.ФормаСписка",,ТекущийДокумент);
КонецПроцедуры

Функция ЕстьВыпусков()
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		ТекущийДокумент.ВыгрузитьТабличнуюЧасть(ТЗ);
		ТЗ.НоваяКолонка("Ключ");
		ТЗ.ВыбратьСтроки();
		ТЗ.НоваяКолонка("КвоКутеровСп", "Число");
		ТЗ.НоваяКолонка("ДБСп", "Число");
		ТЗ.НоваяКолонка("ЕстьСп", "Число");

		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ТЗ.Ключ = Строка(ТЗ.КодСтроки) + "/" + ЗначениеВСтрокуВнутр(ТЗ.Продукция);
			ТЗ.ДБСп = 1;
		КонецЦикла;
		
		ТЗВ = СоздатьОбъект("ТаблицаЗначений");
		ТЗ.Выгрузить(ТЗВ);
		ТЗВ.НоваяКолонка("КвоКВып", "Число", 15, 3);
		ТЗВ.НоваяКолонка("КвоВып", "Число");
		ТЗВ.НоваяКолонка("ДБВ", "Число");
		ТЗВ.НоваяКолонка("ЕстьВып", "Число");
		ТЗВ.ВыбратьСтроки();
		Пока ТЗВ.ПолучитьСтроку() = 1 Цикл
			//ТЗВ.КвоКВып = ТЗВ.КвоФаршаФакт - (ТЗВ.КвоФаршаФакт * ТЗВ.НормыЗатрат.ПроцПотерь/100);
			КвоФарша = ТЗВ.КвоФаршаФакт - ТЗВ.ПотериФарша;
			ТЗВ.КвоКВып = КвоФарша - (КвоФарша * ТЗВ.Продукция.ПроцПотерь.Получить(ТекущийДокумент.ДатаДок)/100);
			ТЗВ.ДБВ = 1;
		КонецЦикла;
		ТЗВ.Свернуть("Продукция", "КвоКВып,КвоВып,ДБВ,ЕстьВып");
		ТЗВ.ВыбратьСтроки();
		Пока ТЗВ.ПолучитьСтроку() = 1 Цикл
			ТЗВ.ДБВ = 1;
		КонецЦикла;
		
		Док = СоздатьОбъект("Документ");
		Док.УстановитьФильтр(1, 0);
		
		//Док.ВыбратьПодчиненныеДокументы(ТекущийДокумент.ДатаДок,,ТекущийДокумент); //--- УМК Сандомирский В.Ю. (21.10.14) закоментил
		
		Док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент); //--- УМК Сандомирский В.Ю. (21.10.14) 
		
		ДатаСписания    = '01.01.00';
		ЧасыСписания 	= 0;
		МинутыСписания 	= 0;
		СекундыСписания	= 0;

		ДатаВыпуска		= '01.01.00';
		ЧасыВыпуска 	= 0;
		МинутыВыпуска 	= 0;
		СекундыВыпуска	= 0;
		
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.ПометкаУдаления() = 1 Тогда
			    Продолжить;
			КонецЕсли;
			Если Док.Вид() = "СписаниеТМЦВПроизводство" Тогда
				
				//--- УМК Сандомирский В.Ю, (17.10.14) 
				ТекЧасы		= "";
				ТекМинуты	= "";
				ТекСекунды	= "";
				Док.ПолучитьВремя(ТекЧасы,ТекМинуты,ТекСекунды);	
				
				Если ДатаСписания < Док.ДатаДок Тогда
					ДатаСписания 	= Док.ДатаДок;			//--- повышаем дни
					ЧасыСписания 	= ТекЧасы; 			
					МинутыСписания 	= ТекМинуты;	
					СекундыСписания	= ТекСекунды;
				ИначеЕсли (ДатаСписания = Док.ДатаДок) И (ЧасыСписания < ТекЧасы) Тогда 	
					ДатаСписания 	= Док.ДатаДок;			
					ЧасыСписания 	= ТекЧасы; 			//--- повышаем часы
					МинутыСписания 	= ТекМинуты;	
					СекундыСписания	= ТекСекунды;
				ИначеЕсли (ДатаСписания = Док.ДатаДок) И (ЧасыСписания = ТекЧасы) И (МинутыСписания < ТекМинуты) Тогда
					ЧасыСписания 	= ТекЧасы;
					МинутыСписания 	= ТекМинуты;	    //--- повышаем минуты
					СекундыСписания	= ТекСекунды;	
				ИначеЕсли (ДатаСписания = Док.ДатаДок) И (ЧасыСписания = ТекЧасы) И (МинутыСписания = ТекМинуты) И (СекундыСписания < ТекСекунды) Тогда
					ЧасыСписания 	= ТекЧасы;
					МинутыСписания 	= ТекМинуты;	    
					СекундыСписания	= ТекСекунды;		//--- повышаем минуты
				КонецЕсли;	
				//... УМК Сандомирский В.Ю, (17.10.14) 
							
				Стр = 0;
				Если ТЗ.НайтиЗначение(Строка(Док.КодСтроки) + "/" + ЗначениеВСтрокуВнутр(Док.ПродукцияШ), Стр, "Ключ") = 1 Тогда
				    ТЗ.УстановитьЗначение(Стр, "ЕстьСп", ТЗ.ПолучитьЗначение(Стр, "ЕстьСп") + 1);
					ТЗ.УстановитьЗначение(Стр, "КвоКутеровСп", ТЗ.ПолучитьЗначение(Стр, "КвоКутеровСп") + Док.КвоКутеров);
				Иначе
					ТЗ.НоваяСтрока();
					ТЗ.Продукция = Док.ПродукцияШ;
					ТЗ.ЕстьСп = 1;
					ТЗ.КвоКутеровСп = Док.КвоКутеров;
				КонецЕсли;
			ИначеЕсли Док.Вид() = "ВыпускПродукции" Тогда
				
				//--- УМК Сандомирский В.Ю, (17.10.14) 
				ТекЧасы		= "";
				ТекМинуты	= "";
				ТекСекунды	= "";
				Док.ПолучитьВремя(ТекЧасы,ТекМинуты,ТекСекунды);	
				
				Если ДатаВыпуска < Док.ДатаДок Тогда
					ДатаВыпуска 	= Док.ДатаДок;			//--- повышаем дни
					ЧасыВыпуска 	= ТекЧасы; 			
					МинутыВыпуска 	= ТекМинуты;	
					СекундыВыпуска	= ТекСекунды;
				ИначеЕсли (ДатаВыпуска = Док.ДатаДок) И (ЧасыВыпуска < ТекЧасы) Тогда 
					ДатаВыпуска 	= Док.ДатаДок;
					ЧасыВыпуска 	= ТекЧасы; 			//--- повышаем часы
					МинутыВыпуска 	= ТекМинуты;	
					СекундыВыпуска	= ТекСекунды;
				ИначеЕсли (ДатаВыпуска = Док.ДатаДок) И (ЧасыВыпуска = ТекЧасы) И (МинутыВыпуска < ТекМинуты) Тогда
					ДатаВыпуска 	= Док.ДатаДок;
					ЧасыВыпуска 	= ТекЧасы;
					МинутыВыпуска 	= ТекМинуты;	    //--- повышаем минуты
					СекундыВыпуска	= ТекСекунды;	
				ИначеЕсли (ДатаВыпуска = Док.ДатаДок) И (ЧасыВыпуска = ТекЧасы) И (МинутыВыпуска = ТекМинуты) И (СекундыВыпуска < ТекСекунды) Тогда
					ДатаВыпуска 	= Док.ДатаДок;
					ЧасыВыпуска 	= ТекЧасы;
					МинутыВыпуска 	= ТекМинуты;	    
					СекундыВыпуска	= ТекСекунды;		//--- повышаем минуты
				КонецЕсли;	
				//... УМК Сандомирский В.Ю, (17.10.14) 
						
				Док.ВыбратьСтроки();
				Пока Док.ПолучитьСтроку() = 1 Цикл
					Если Док.Заказ = ТекущийДокумент Тогда
						Стр = 0;
						Если ТЗВ.НайтиЗначение(Док.Продукция, Стр, "Продукция") = 1 Тогда
							ТЗВ.УстановитьЗначение(Стр, "КвоВып", ТЗВ.ПолучитьЗначение(Стр, "КвоВып") + Док.Кво);
						    ТЗВ.УстановитьЗначение(Стр, "ЕстьВып", 1);
						Иначе
							ТЗВ.НоваяСтрока();
							ТЗВ.КвоКВып = 0;
							ТЗВ.ДБВ = 0;
							ТЗВ.ЕстьВып = 1;
							ТЗВ.КвоВып = Док.Кво;
						КонецЕсли;					    
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;			
		КонецЦикла;
		
		ЕстьСписаний = 1; ЕВ = 1;
		
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			Если ТЗ.ЕстьСп <> ТЗ.ДБСп Тогда
			    Если ТЗ.ДБСп > ТЗ.ЕстьСп Тогда
			        ЕстьСписаний = 2;
				Иначе
					ЕстьСписаний = 3;
			    КонецЕсли;
			КонецЕсли;
			Если (ТЗ.КвоКутеровСп <> ТЗ.КвоКутеров) и (ЕстьСписаний = 1) Тогда
			    Если ТЗ.КвоКутеров > ТЗ.КвоКутеровСп Тогда
			        ЕстьСписаний = 4;
				Иначе
					ЕстьСписаний = 5;
			    КонецЕсли;			    
			КонецЕсли;
		КонецЦикла;

		ТЗВ.ВыбратьСтроки();
		Пока ТЗВ.ПолучитьСтроку() = 1 Цикл
			Если ТЗВ.ЕстьВып <> ТЗВ.ДБВ Тогда
			    Если ТЗВ.ДБВ > ТЗВ.ЕстьВып Тогда
			        ЕВ = 2;
				Иначе
					ЕВ = 3;
			    КонецЕсли;
			КонецЕсли;
			Если (ТЗВ.КвоКВып <> ТЗВ.КвоВып) и (ЕВ = 1) Тогда
			    Если ТЗВ.КвоКВып > ТЗВ.КвоВып Тогда
			        ЕВ = 4;
				Иначе
					ЕВ = 5;
			    КонецЕсли;			    
			КонецЕсли;
		КонецЦикла;
		
		Если (ДатаВыпуска < ДатаСписания) И (ДатаВыпуска <> '01.01.00') Тогда
			ЕВ = 6;  //--- синяя галочка
		ИначеЕсли (ДатаВыпуска = ДатаСписания) И (ЧасыВыпуска < ЧасыСписания) Тогда
			ЕВ = 6;  //--- синяя галочка		
		ИначеЕсли (ДатаВыпуска = ДатаСписания) И (ЧасыВыпуска = ЧасыСписания) И (МинутыВыпуска < МинутыСписания) Тогда	
			ЕВ = 6;  //--- синяя галочка		
		ИначеЕсли (ДатаВыпуска = ДатаСписания) И (ЧасыВыпуска = ЧасыСписания) И (МинутыВыпуска = МинутыСписания) И (СекундыВыпуска < СекундыСписания) Тогда		
			ЕВ = 6;  //--- синяя галочка
		КонецЕсли;	
				
		//ЕВ = 6;  --- синяя галочка
		
		Возврат ЕВ;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

Процедура ОтчетОВыпуске()
	глРасшифровка = СоздатьОбъект("СписокЗначений");
	глРасшифровка.УдалитьВсе();
    глРасшифровка.Установить("Объект", "ОстаткиВЗаказах");
    
    глРасшифровка.Установить("НаДату", ТекущаяДата());
	
	СписТовар = СоздатьОбъект("СписокЗначений");
	списЗаказ = СоздатьОбъект("СписокЗначений");
	списЗаказ.ДобавитьЗначение(ТекущийДокумент);
	
	глРасшифровка.Установить("списТовар", СписТовар);
	глРасшифровка.Установить("списЗаказы", списЗаказ);	
	глФлагРасшифровки = 1;
	ОткрытьФорму("Отчет.ОстаткиВЗаказах");
	глФлагРасшифровки = 0;
КонецПроцедуры

Процедура Проверка()
	ОткрытьФорму("Отчет.ПроверкаСписанийИВыпусков", ТекущийДокумент);
КонецПроцедуры

Процедура РассчитатьКвоФарша(Док, Знач НомСтр = 0)
	Док.КвоФарша = 0;
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку() = 1 Цикл
		Если (Док.ТМЦ.НеУчитыватьВОбщемВесе = 0) и (Док.НомерСтроки <> НомСтр) Тогда
			Док.КвоФарша = Док.КвоФарша + Док.Кво*Док.Коэффициент;
		КонецЕсли;
	КонецЦикла;	
	Если Док.НеПересчитыватьДоп = 0 Тогда
	    Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			Если Док.ТМЦ.НормаКГФарша.Получить(Док.ДатаДок) <> 0 Тогда
				Док.Кво = Док.КвоФарша * Док.ТМЦ.НормаКГФарша.Получить(Док.ДатаДок);
				Док.КвоНаЗамес = Док.Кво;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ИзмТМЦ(Док)
   Если Док.ТМЦ.Выбран()=1 Тогда
   	   Если Док.СписыватьПоНормам = 0 Тогда 
			Если глПроверкаТовараВДокументе(Док,Док.ТМЦ) = Нет Тогда
				Док.ТМЦ = глВосстановитьЗначение(Док,"ТМЦ");   	    
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если ПустоеЗначение(Док.Ед) = 1 Тогда
			глУстановкаБазЕд(Док,Док.ТМЦ,Док.ТМЦ.ЕдиницаПоУмолчанию.Единица);
		ИначеЕсли Док.ТМЦ <> Док.Ед.Владелец Тогда
			глУстановкаБазЕд(Док,Док.ТМЦ,Док.ТМЦ.ЕдиницаПоУмолчанию.Единица);
		КонецЕсли;
		Если Док.Кво = 0 Тогда
			Док.Кво = 1;
		КонецЕсли;
		Док.ВидДеятельности = Док.ТМЦ.ВидДеятельности;
		Если Док.СписыватьПоНормам = 0 Тогда 
			Док.ВидЗатрат = Док.ТМЦ.ВидЗатрат;
		КонецЕсли;	
		Если Док.ПродукцияШ.Выбран() + Док.Заказ.Выбран() = 2 Тогда
			Если Док.ТМЦ.НеУчитыватьВОбщемВесе = 0 Тогда
			Иначе
			    Док.Кво = Док.КвоФарша * Док.ТМЦ.НормаКГФарша.Получить(Док.ДатаДок);
			КонецЕсли;
		КонецЕсли;
	Иначе                         
		Док.ВидДеятельности = 0;
		Док.ВидЗатрат = 0;
	КонецЕсли
КонецПроцедуры

Процедура ЗаполнитьДокСП(ДокСп, Ошибка = 0)
	Чис = 1;
	НКво = "";
	
	Зак = ДокСп.ДокументОснование;
	Зак.ВыбратьСтроки();
	Пока Зак.ПолучитьСтроку() = 1 Цикл
		КвоПромпереработка = 0;
		КвоПромпереработкаФарш = 0;
		Если (Зак.Продукция = ДокСп.ПродукцияШ) и (Зак.КодСтроки = ДокСп.КодСтроки) Тогда
			Нормы = Зак.НормыЗатрат;
			КвоПромпереработка = Зак.КвоПромпереработка;
			КвоПромпереработкаФарш = Зак.КвоПромпереработкаФарш;
			Если Нормы.Действует = 0 Тогда
				Предупреждение("Нормы затрат, указанные в заказе не действуют");
			КонецЕсли;			
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустоеЗначение(Нормы) = 1 Тогда
		Сообщить("Для продукции: " + Строка(ДокСп.ПродукцияШ) + " не заданы нормы затрат");
		Ошибка = 1;
		Возврат;
	КонецЕсли;
	
	ДокСп.КвоКутеров = Зак.КвоКутеров;
	ДокСп.КвоЗамесов = Зак.КвоЗамесов;
	тбНормы = СоздатьОбъект("ТаблицаЗначений");
	Если глПолучитьНормы(ДокСп.ПродукцияШ, , Нормы.КвоПродукции, ДокСп.ДатаДок, ДокСп.ДокументОснование, тбНормы,,НКво,,Нормы,1) = 1 Тогда
		тбНормы.ВыбратьСтроки();
		Пока тбНормы.ПолучитьСтроку() = 1 Цикл
//			Если тбНормы.Кво > 0 Тогда
				ДокСп.НоваяСтрока();
				ДокСп.ТМЦ = тбНормы.Материал;
				ИзмТМЦ(ДокСп);
				ДокСп.ВидДеятельности = ДокСп.ПродукцияШ.ВидДеятельности;
				ДокСп.Продукция = ДокСп.ПродукцияШ;
				ДокСп.Заказ = ДокСп.ДокументОснование;
				ДокСп.ВидЗатрат = тбНормы.Материал.ВидЗатрат;
				ДокСп.Кво = тбНормы.Кво * ДокСп.КвоКутеров;
				ДокСп.КвоНаЗамес = тбНормы.Кво * (ДокСп.КвоКутеров / ?(ДокСп.КвоЗамесов = 0,1,ДокСп.КвоЗамесов));
				
				//+Промпереработка 
				Если ДокСп.ТМЦ.ВидПереработки = Перечисление.ВидПереработки.Промпереработка Тогда
					ДокСп.Кво = КвоПромпереработка;
					ДокСп.КвоНаЗамес = КвоПромпереработка;
				ИначеЕсли ДокСп.ТМЦ.ВидПереработки = Перечисление.ВидПереработки.ПромпереработкаФарша Тогда
					ДокСп.Кво = КвоПромпереработкаФарш;
					ДокСп.КвоНаЗамес = КвоПромпереработкаФарш;
				КонецЕсли;
				//-Промпереработка
				
				ДокСп.КомментСтр = тбНормы.Примечание;
				ДокСп.ЦенаВручную = ?((тбНормы.Способ = Перечисление.СпособПодстановкиЦеныВСписание.Закупочная) ИЛИ (тбНормы.Способ = Перечисление.СпособПодстановкиЦеныВСписание.ИзНорм), Да, "");
				Если тбНормы.Способ = Перечисление.СпособПодстановкиЦеныВСписание.Закупочная Тогда
					ДокСп.ЦенаБезНДС = глВернутьЦену(ДокСп.ТМЦ, Константа.ЗакупЦена, ДатаДок - 1, Гривня);
				ИначеЕсли тбНормы.Способ = Перечисление.СпособПодстановкиЦеныВСписание.ИзНорм Тогда
					ДокСп.ЦенаБезНДС = тбНормы.Цена;
				КонецЕсли;				
				глПолучитьСкладСписания(ДокСп, ДокСп.ПродукцияШ, ДокСп.ТМЦ);
				ДокСп.СуммаБезНДС = ДокСп.Кво * ДокСп.ЦенаБезНДС;
//			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	РассчитатьКвоФарша(ДокСп);
	ДокСп.ВыбратьСтроки();
	Пока ДокСп.ПолучитьСтроку() = 1 Цикл
		Если ДокСп.ТМЦ.НормаКГФарша.Получить(ДокСп.ДатаДок) <> 0 Тогда
			глСписаниеПересчитатьКоличествоПоНормеТМЦ(ДокСп);
		КонецЕсли;		
	КонецЦикла;	
КонецПроцедуры

Процедура СоздатьСписания()
	//НачатьТранзакцию();
	Если ПустоеЗначение(ТекущийДокумент) = 1 Тогда
		Возврат;
	КонецЕсли;

	Док = ТекущийДокумент;	
	Если Вопрос("Создать списания для выбранного заказа?", "Да+Нет") = "Да" Тогда
		ТЗ = СоздатьОбъект("ТаблицаЗначений");
		Док.ВыгрузитьТабличнуюЧасть(ТЗ, "Продукция,КодСтроки,НормыЗатрат,КвоФаршаФакт,КвоКутеров,КвоЗамесов");
		ТЗ.УстановитьПараметрыКолонки("Продукция",,,,,28);
		ТЗ.УстановитьПараметрыКолонки("НормыЗатрат",,,,,40);
		ТЗ.НоваяКолонка("ЕстьСп", "Число");
		ТЗ.НоваяКолонка("Ключ");
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ТЗ.Ключ = Строка(ТЗ.КодСтроки) + "/" + ЗначениеВСтрокуВнутр(ТЗ.Продукция);
		КонецЦикла;
		
		Док1 = СоздатьОбъект("Документ");
		Док1.ВыбратьПодчиненныеДокументы(Док.ДатаДок,,Док);
		Пока Док1.ПолучитьДокумент() = 1 Цикл
			Если Док1.ПометкаУдаления() = 1 Тогда
			    Продолжить;
			КонецЕсли;
			Если Док1.Вид() = "СписаниеТМЦВПроизводство" Тогда
				Стр = 0;
				Если ТЗ.НайтиЗначение(Строка(Док1.КодСтроки) + "/" + ЗначениеВСтрокуВнутр(Док1.ПродукцияШ), Стр, "Ключ") = 1 Тогда
				    ТЗ.УстановитьЗначение(Стр, "ЕстьСп", 1);
				КонецЕсли;
			КонецЕсли;			
		КонецЦикла;
		
		Инд = 1;
		Пока Инд <= ТЗ.КоличествоСтрок() Цикл
			Если ТЗ.ПолучитьЗначение(Инд, "ЕстьСп") = 1 Тогда
			    ТЗ.УдалитьСтроку(Инд);
			Иначе
				Инд = Инд + 1;
			КонецЕсли;
		КонецЦикла;		
		
		ТЗ.УдалитьКолонку("Ключ");
		Если ТЗ.КоличествоСтрок() = 0 Тогда
		    Предупреждение("По данному заказу уже сформированы все списания");
			Возврат;
		КонецЕсли;

		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			ДокСП = СоздатьОбъект("Документ.СписаниеТМЦВПроизводство");
			ДокСП.Новый();
			ДокСП.Автор = глПользователь;
			ДокСП.Фирма = Док.Фирма;
			ДокСП.ДатаДок = Док.ДатаДок;
			ДокСП.МестоХранения = Док.Фирма.СкладМатериалов;
			ДокСП.Подразделение = Док.Подразделение;
			ДокСП.ДокументОснование = Док.ТекущийДокумент();			
			ДокСП.НормаОснование	= ТЗ.НормыЗатрат; //--- УМК Сандомирский В.Ю, (22.05.15)			
		    ДокСП.ПродукцияШ = ТЗ.Продукция;
			ДокСП.КодСтроки  = ТЗ.КодСтроки;
			ДокСП.КвоКутеров = ТЗ.КвоКутеров;
			ДокСП.КвоЗамесов = ТЗ.КвоЗамесов;
			Ошибка = 0;
			ЗаполнитьДокСП(ДокСП, Ошибка);
			//
			//ВесПрод = 0;
			//НормаПотерь = 0;
			//Если (ПустоеЗначение(ДокСП.ДокументОснование) = 0) и (ДокСП.ДокументОснование.Вид() = "Заказ") Тогда
			//	Док.ВыбратьСтроки();
			//	Пока Док.ПолучитьСтроку() = 1 Цикл
			//		Если Док.Продукция = ДокСП.ПродукцияШ Тогда
			//			НормаПотерь = Док.НормыЗатрат.ПроцПотерь;
			//			Прервать;
			//		КонецЕсли;
			//	КонецЦикла;
			//КонецЕсли;
			//ВесПрод = ДокСП.КвоФарша - ДокСП.КвоФарша*(НормаПотерь/100);
		    //
			//ИтогСуммаДляФ = 0;
			//ДокСП.ВыбратьСтроки();	
			//Пока ДокСП.ПолучитьСтроку()=1 Цикл
			//	СуммаДляФ = ?(ВесПрод = 0,0, ДокСП.СуммаБезНДС / ВесПрод);
			//	ИтогСуммаДляФ = ИтогСуммаДляФ + СуммаДляФ;
			//КонецЦикла;
			//		
			//ОПЗ = Константа.ОПЗ.Получить(ДатаДок);
			//ИтЦенаКГ = Число(ИтогСуммаДляФ + ОПЗ);
			//ЦенаП = глВернутьЦену(ДокСП.ПродукцияШ, Константа.ОсновнаяКатегорияЦен, ДокСП.ДатаДок, Гривня);
			//Рен = Окр((ЦенаП/ИтЦенаКГ)*100, 2);
		    //ДокСП.Рентаб = Рен;
			Если Ошибка = 0 Тогда
				ДокСП.Записать();
				Урн = 2;
				Если ДокСП.ПродукцияШ.Выбран() = 1 Тогда
				    Урн = ДокСП.ПродукцияШ.УровеньПередела.Получить(ДокСП.ДатаДок);
				КонецЕсли;
				
				ДокСП.УстановитьВремя(17, (2-Урн)*15, 0);
				
				Попытка
					ДокСП.Записать();				
				Исключение
					Сообщить("Не удалось записать : " + Строка(ДокСП.ПродукцияШ));
				КонецПопытки;
				Попытка
					Если ДокСП.Провести() = 0 Тогда
						Сообщить("Не удалось провести: " + Строка(ДокСП));
					КонецЕсли;				;
				Исключение
					Сообщить("Не удалось провести: " + Строка(ДокСП));
				КонецПопытки;			
				
				Сообщить(ДокСП);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//Если Вопрос("Сохранить?", "Да+Нет") = "Да"  Тогда
	//    ЗафиксироватьТранзакцию();
	//Иначе
	//	ОтменитьТранзакцию();
	//КонецЕсли;
КонецПроцедуры