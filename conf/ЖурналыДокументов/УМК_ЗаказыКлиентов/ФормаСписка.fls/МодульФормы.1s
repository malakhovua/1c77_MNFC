Перем V8;
//======================================================================
Функция ВернутьКлиент()
	Если ПустоеЗначение(ТекущийДокумент) <> 1 Тогда
		Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
			Возврат ТекущийДокумент.Контрагент;
		КонецЕсли;
	КонецЕсли;
КонецФункции // ВернутьКлиент()

//======================================================================
Функция ВозвратТорговый()
	Если ПустоеЗначение(ТекущийДокумент) <> 1 Тогда
		Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
			Возврат ТекущийДокумент.Контрагент.Родитель;
		КонецЕсли;
	КонецЕсли;		
КонецФункции // ВозвратТорговый()

//======================================================================
Функция ВернутьРаспечатана()	
	Если ПустоеЗначение(ТекущийДокумент) <> 1 Тогда		
		Если ТекущийДокумент.ПометкаУдаления() = 1 Тогда
			Возврат "";
		КонецЕсли;
		
		Попытка			
			Если ТекущийДокумент.Распечатана = 1 Тогда
				Возврат 6;		
			КонецЕсли;			
		Исключение
		КонецПопытки;	
	КонецЕсли;	
КонецФункции // ВернутьРаспечатана()


//======================================================================
Функция ВернутьСертификат()	
	Если ПустоеЗначение(ТекущийДокумент) <> 1 Тогда		
		Если ТекущийДокумент.ПометкаУдаления() = 1 Тогда
			Возврат "";
		КонецЕсли;
		
		Попытка			
			Если ТекущийДокумент.Сертификат = 1 Тогда
				Возврат 6;		
			КонецЕсли;			
		Исключение
		КонецПопытки;	
	КонецЕсли;	
КонецФункции // ВернутьРаспечатана()

//======================================================================
Функция ВернутьПолученИзExcel()
	
	Если ПустоеЗначение(ТекущийДокумент) <> 1 Тогда
		Попытка
			
			Если ТекущийДокумент.ПолученИзExcel = 1 Тогда
				Возврат 6;		
			КонецЕсли;
	
		Исключение
		КонецПопытки;
		
	КонецЕсли;	
	
КонецФункции // ВернутьРаспечатана()

//======================================================================
Функция ЕстьРН()
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
			Док = СоздатьОбъект("Документ");
			ЕстьРН = 0; 			
			Док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент);
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если Док.ПометкаУдаления() = 0 Тогда
					Если (Док.Вид() = "РасходнаяНакладная") ИЛИ (Док.Вид() = "СписаниеТМЦ") Тогда
					    Возврат 1;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
КонецФункции

//====================================================================== //--- УМК Сандомирский В.Ю. (19.11.14) групповой импорт заказов
Процедура ОткрытьОбработкуГрупповогоИмпорта()
	ОткрытьФорму("Обработка.УМК_ГрупповойИмпортЗаказов");	
КонецПроцедуры // ОткрытьОбработкуГрупповогоИмпорта

//======================================================================
Функция ПолучитьПланРаскраски()	
	Если ТекущийДокумент.Вид() = "УМК_СнятиеРезерва" Тогда
		Возврат  "(BRUSH["+глПолучитьЦвет(210,255,145)+"])()()()"; //--- добавляя колонку вначало документа до "раскрашек" часов добавить "()"
	КонецЕсли;	
КонецФункции // гл

//====================================================================== //--- УМК Сандомирский В.Ю. (09.04.15)
Процедура ОткрытьРеестрЗаказов()
	глРасшифровка = СоздатьОбъект("СписокЗначений");
	глРасшифровка.Установить("НачДата", ТекущаяДата() + 1);
	глРасшифровка.Установить("КонДата", ТекущаяДата() + 1);
	глРасшифровка.Установить("НачЧасов", 0);
	глРасшифровка.Установить("КонЧасов", 10);
	глРасшифровка.Установить("НеЗакрывать", 1);
	СписК = СоздатьОбъект("СписокЗначений");
	глРасшифровка.Установить("СписокКонтрагентов", СписК);
	глОбновить = 2;
	глФлагРасшифровки = 1;
	
	ОткрытьФорму("Отчет.УМК_РеестрЗаказовПокупателей");	
	глФлагРасшифровки = 0;
КонецПроцедуры // ОткрытьРеестрЗаказов()

//======================================================================
Процедура ПриОткрытии()
	глУстОтборПоФирме(Контекст, Форма.Параметр, "УМК_ЗаказыКлиентов", "Маршрут");
	Если ПустоеЗначение(Форма.Параметр) <> 1 Тогда
		Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
			Если Форма.Параметр.Вид() = "УМК_ЗаказКлиента" Тогда
				АктивизироватьОбъект(Форма.Параметр);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	Если (НазваниеНабораПрав() <> "Администратор") И (НазваниеНабораПрав() <> "АдминистраторМладший") Тогда
		Форма.СуммаЗаказа.Видимость(0);
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии

//======================================================================
Процедура Взвешивать()
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		Если ТекущийДокумент.Проведен() = 0 Тогда
			Если Вопрос("Заказ НЕ проведен. Вы действительно хотите его взвешивать?", "Да+Нет") = "Нет" Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		КФормы = ТекущийДокумент;
		ОткрытьФорму("Документ.УМК_ЗаказКлиента", КФормы);
	КонецЕсли;	
КонецПроцедуры // гл

//======================================================================
Процедура ФормироватьСборочный()
	глСоздатьСборочныеЛистыДляЗаказа();
КонецПроцедуры // ФормироватьСборочный()

//======================================================================
Процедура СоздатьСФ()
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		ОткрытьФорму("Документ.СчетФактура", , ТекущийДокумент);	
	КонецЕсли;
КонецПроцедуры // СоздатьСФ()

//======================================================================
Функция Взвешен()
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
			Если ТекущийДокумент.ДокументВзвешен = 1 Тогда
				Возврат 1;
			ИначеЕсли ТекущийДокумент.Итог("КвоФакт") <> 0 Тогда
				Возврат 3;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
КонецФункции // Взвешен

//======================================================================
Функция НомерРодЗак()
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
			Если ПустоеЗначение(ТекущийДокумент.МастерЗаказ) = 0 Тогда
				Возврат ТекущийДокумент.МастерЗаказ.НомерДок;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецФункции // НомерРодЗак

//======================================================================
Процедура Разделить()
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		Если ТекущийДокумент.Вид() <> "УМК_ЗаказКлиента" Тогда
			Возврат;
		КонецЕсли;
		
		Док = СоздатьОбъект("Документ");
		Док.ВыбратьПодчиненныеДокументы(,, ТекущийДокумент);
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если (Док.Вид() = "УМК_ЗаказКлиента") И (Док.ПометкаУдаления() = 0) Тогда
				Предупреждение("Заказ уже разделён");
				Возврат;
			КонецЕсли;
		КонецЦикла;

		Док = СоздатьОбъект("Документ.УМК_ЗаказКлиента");
		Док.НайтиДокумент(ТекущийДокумент);
		Если Док.Блокировка(1) = 0 Тогда
			Предупреждение("Не удалось заблокировать документ. Вероятно с ним кто-то работает");
		КонецЕсли;		
		
		Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			Если Док.Разделить = Да Тогда
				// будем разделять
				ДокН = СоздатьОбъект("Документ.УМК_ЗаказКлиента");						
				ДокН.Новый();
				глСкопироватьОдинВОдин(ДокН, Док.ТекущийДокумент());
				ДокН.ДатаДок = Док.ДатаДок;
				глУстановитьНомер(ДокН);
				ТЗДокН = СоздатьОбъект("ТаблицаЗначений");
				ДокН.ВыгрузитьТабличнуюЧасть(ТЗДокН);
				ДокН.МастерЗаказ = Док.ТекущийДокумент();
				Инд = 1;
				
				Пока Инд <= ТЗДокН.КоличествоСтрок() Цикл
					ТЗДокН.ПолучитьСтрокуПоНомеру(Инд);
					Если (ТЗДокН.Разделить = Да) И (ТЗДокН.КвоПересчет - ТЗДокН.КвоФакт > 0) Тогда
						ТЗДокН.Кво = ТЗДокН.КвоПересчет - ТЗДокН.КвоФакт;
						ТЗДокН.КвоПересчет = ТЗДокН.Кво;
						ТЗДокН.КвоШт = 0;
						ТЗДокН.Разделить = Нет;
						ТЗДокН.КвоФакт = 0;
						ТЗДокН.СтрокаВзвешена = "";
						ТЗДокН.Взвесил = "";
						ТЗДокН.КвоТары = 0;
						ТЗДокН.СоздатьПеремещение = "";
						ТЗДокН.УстВручную = 0;
						Инд = Инд + 1;					
					Иначе
						ТЗДокН.УдалитьСтроку(Инд);
					КонецЕсли;
				КонецЦикла;
				ДокН.ЗагрузитьТабличнуюЧасть(ТЗДокН);
				ДокН.ВыбратьСтроки();
				Пока ДокН.ПолучитьСтроку() = 1 Цикл
					глРассчитатьПересчетКво(ДокН);
				КонецЦикла;
				глВыполнитьДействияПередЗаписью(ДокН);
				
				ТЗС = СоздатьОбъект("ТаблицаЗначений");
				Док.ВыгрузитьТабличнуюЧасть(ТЗС);
				
				Инд = 1;
				Пока Инд <= ТЗС.КоличествоСтрок() Цикл
					ТЗС.ПолучитьСтрокуПоНомеру(Инд);
					Если ТЗС.Разделить = Да Тогда
						ТЗС.Кво = ТЗС.КвоФакт;
						ТЗС.КвоПересчет = ТЗС.Кво;
						ТЗС.КвоШт = 0;
						
					КонецЕсли;
					Если ТЗС.КвоФакт = 0 Тогда
						ТЗС.УдалитьСтроку(Инд);
					Иначе
						Инд = Инд + 1;
					КонецЕсли;
				КонецЦикла;
				Док.ЗагрузитьТабличнуюЧасть(ТЗС);
				Док.ВыбратьСтроки();
				Пока Док.ПолучитьСтроку() = 1 Цикл
					глРассчитатьПересчетКво(Док);
				КонецЦикла;
				
				глВыполнитьДействияПередЗаписью(Док);

				Попытка
					НачатьТранзакцию();
					Док.Записать();
					Если Док.Проведен()  = 1 Тогда
						Док.Провести();
					КонецЕсли;
					
					ДокН.Записать();
					Если Док.Проведен() = 1 Тогда
						ДокН.Провести();
					КонецЕсли;					
					ЗафиксироватьТранзакцию();					
				Исключение
					Предупреждение("Разделение не удалось");
				КонецПопытки;
				
				Док.Блокировка(0);				
				// обнуляем количество 			
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		Предупреждение("Не выбран документ");
	КонецЕсли;
КонецПроцедуры // Разделить

//======================================================================
Функция Стикеровать()
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
			ТекущийДокумент.ВыбратьСтроки();
			Пока ТекущийДокумент.ПолучитьСтроку() = 1 Цикл
				Если ТекущийДокумент.Стикеровать = Да Тогда
					Возврат 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
КонецФункции // Стикеровать

//======================================================================
Функция СоздаватьСписание()
	Если ПустоеЗначение(ТекущийДокумент) = 0 Тогда
		Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
			Возврат 1 - ПустоеЗначение(ТекущийДокумент.ВидЗатрат);
		КонецЕсли;
	КонецЕсли;
КонецФункции // СоздаватьСписание

Функция ЕстьФ1()
	Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
		Если ТекущийДокумент.Ф1 = 1 Тогда
			Возврат 9;
		КонецЕсли;
	КонецЕсли;
КонецФункции // ЕстьЗаказ()   

Функция ИмпортИз1С8()
	Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
		Возврат ТекущийДокумент.ИмпортИз1С8;
	КонецЕсли;
КонецФункции

Функция ДатаИмпорта1С8()
	Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
		Возврат ТекущийДокумент.ДатаИмпорта1С8;
	КонецЕсли;	
КонецФункции

Функция ВремяИмпортаИз1С8 ()
	Если ТекущийДокумент.Вид() = "УМК_ЗаказКлиента" Тогда
		Возврат ТекущийДокумент.ВремяИмпортаИз1С8;
	КонецЕсли;
КонецФункции


//+umk
//====================Загрузка=заказа=из=1с83=============================

//Процедура ЗагрузитьЗаказИз_v_83() 
//	
//	фПодключились = 0;    
//	Дата1 = ТекущаяДата(); 
//	Дата2 = ТекущаяДата();
//	ПутьКБазе = Константа.Путь_к_УНФ; 
//	Склад = "";
//	НетУп =  "";
//	
//	СпрТМЦ      = СоздатьОбъект("Справочник.ТМЦ");
//	Фирмы       = СоздатьОбъект("Справочник.Фирмы");
//	Контрагенты   = СоздатьОбъект("Справочник.Контрагенты");
//	ШкалаСтавок   = СоздатьОбъект("Справочник.ШкалаСтавок");
//	ВидыУпаковки  = СоздатьОбъект("Справочник.ВидыУпаковки"); 
//	МестаХранения = СоздатьОбъект("Справочник.МестаХранения");
//	Единицы       = СоздатьОбъект("Справочник.Единицы");
//	
//	Если МестаХранения.НайтиПоКоду(1) = 1 Тогда 
//		Склад = МестаХранения.ТекущийЭлемент();
//	КонецЕсли;
//	
//	Если  ВидыУпаковки.НайтиПоКоду(0) = 1 Тогда
//		НетУп  = ВидыУпаковки.ТекущийЭлемент();
//	КонецЕсли;
//		
//	Если ВвестиПериод(Дата1, Дата2, "Введите период для документов") <> 1 Тогда
//		Возврат ;
//	Иначе  
//		Если V8 = "" Тогда    
//			Сообщить("Подключение к базе 1с8.3" + РазделительСтрок + "Ожидайте.");
//			V8 = глПодключитьComV8(фПодключились, ПутьКБазе);
//			Если фПодключились = 0 Тогда
//				Сообщить("Не удалось подключить базу 1с8.3");
//				Возврат
//			КонецЕсли; 
//		КонецЕсли; 
//		
//		Сообщить("Загрузка...");
//		
//		ВыборкаПоШапке = V8.ЗаказКлиентаШапка(Дата1, Дата2);
//		    
//	    НачатьТранзакцию();	
//		
//		Пока ВыборкаПоШапке.Следующий() = -1 Цикл 
//						
//			//По шапке документа  
//			НомерЗаказа77 = Лев(ВыборкаПоШапке.Номер,4) + Прав(ВыборкаПоШапке.Номер,6); 
//			Контр_Код77 = ВыборкаПоШапке.КонтрагентКод;
//			ПримечаниеСтроки = "";
//			
//			Заказ77 = CreateObject("Документ.УМК_ЗаказКлиента");
//			Заказ77.НайтиПоНомеру(НомерЗаказа77, ВыборкаПоШапке.Дата);
//			Если  Заказ77.Выбран()= 1 Тогда
//					Сообщить("Заказ №" +(НомерЗаказа77) + " от " + Строка(ВыборкаПоШапке.Дата) + " был загружен ранее." );
//				Продолжить;
//			КонецЕсли;     
//			
//			Заказ77.Новый();
//			Заказ77.НомерДок    = НомерЗаказа77;
//			Заказ77.ДатаДок     = ВыборкаПоШапке.Дата; 
//			Заказ77.Фирма       = Константа.БазФирма;
//			Заказ77.Ф1          = ?(ВыборкаПоШапке.ф1 = -1,1,0);
//			Заказ77.ДатаВх      = ВыборкаПоШапке.ДатаВх;
//			Заказ77.ДатаНа      = ВыборкаПоШапке.ДатаНа;
//			Заказ77.НомерЗаказа = ВыборкаПоШапке.НомерЗаказа;
//			
//			Попытка
//				Контр_Код77 = Число(Прав(Контр_Код77,4));
//			Исключение
//				Контр_Код77 ="";
//			КонецПопытки;   
//			
//			Если  Контрагенты.НайтиПоКоду(Контр_Код77) = 1 Тогда
//				Заказ77.Контрагент = Контрагенты.ТекущийЭлемент();
//			КонецЕсли;
//			
//			Если  ШкалаСтавок.НайтиПоКоду("НДС20") = 1 Тогда
//				Заказ77.ВидНДС = ШкалаСтавок.ТекущийЭлемент();
//			КонецЕсли;
//			
//			Заказ77.ДатаExcel       = ВыборкаПоШапке.ДатаExcel; 
//			Заказ77.ВремяExcel      = ВыборкаПоШапке.ВремяExcel;
//			Заказ77.ТорговыйExcel   = ВыборкаПоШапке.ТорговыйExcel;
//			Заказ77.ФормаExcel      = ВыборкаПоШапке.ФормаExcel;
//			Заказ77.КлиентExcel     = ВыборкаПоШапке.КлиентExcel;
//			Заказ77.ПримечаниеExcel = ВыборкаПоШапке.ПримечаниеExcel;
//			Заказ77.ДатаСоздания    = ВыборкаПоШапке.ДатаСоздания;
//			Заказ77.ВремяЗаказа     = ВыборкаПоШапке.ВремяЗаказа;
//			Заказ77.ПолученИзExcel  = ВыборкаПоШапке.ПолученИзExcel;
//			Заказ77.ВесЗаказаExcel  = ВыборкаПоШапке.ВесЗаказаExcel;
//			Заказ77.ДатаЦ           = ВыборкаПоШапке.ДатаЦен;
//			Заказ77.МестоХранения   = Склад;
//			Заказ77.Примечание      = "##export_1c8.3##" + ВыборкаПоШапке.Комментарий;
//					
//			//По строкам  документа    
//			ВыборкаПоСтрокам = V8.ЗаказКлиентаСтроки(ВыборкаПоШапке.Ссылка);
//			
//			Пока ВыборкаПоСтрокам.Следующий() = -1 Цикл
//				
//				Заказ77.НоваяСтрока();
//				
//				Номенклатура_Код           = Прав(ВыборкаПоСтрокам.НоменклатураКод,5);
//				Характеристика_Наимен      = ВыборкаПоСтрокам.Характеристика.Наименование;
//				Характеристика_ВидУпаковки = ВыборкаПоСтрокам.Характеристика.umk_ВидУпаковки; 
//				Характеристика_ВидУпаковки_Код = Характеристика_ВидУпаковки.Код; 
//				
//				Если Характеристика_ВидУпаковки_Код <> "" Тогда
//					Попытка 
//						Характеристика_ВидУпаковки_Код = Число(Характеристика_ВидУпаковки_Код);
//					Исключение
//						Характеристика_ВидУпаковки_Код = "";
//					КонецПопытки
//				КонецЕсли;
//				
//				Ед_Наимен =ВыборкаПоСтрокам.ЕдиницаИзмерения.Наименование;
//				Ед_Наимен = СокрЛП(Ед_Наимен)+".";
//				
//				Если СпрТМЦ.НайтиПоКоду(Номенклатура_Код) = 1  Тогда
//					Заказ77.ТМЦ = СпрТМЦ.ТекущийЭлемент();
//				КонецЕсли;
//				
//				Если Характеристика_ВидУпаковки_Код <> "" Тогда
//					
//					Если ВидыУпаковки.НайтиПоКоду(Характеристика_ВидУпаковки_Код) = 1 Тогда
//						Заказ77.ВидУпаковки = ВидыУпаковки.ТекущийЭлемент();  
//					Иначе
//						Сообщить(Характеристика_Наимен + ". Не найдена упаковка в заказе " + Строка(Заказ77.НомерЗаказа));
//						ПримечаниеСтроки = Характеристика_Наимен + ". Не найдена.";
//					КонецЕсли;;
//				Иначе
//					Заказ77.ВидУпаковки = НетУп;
//				КонецЕсли;
//				
//				Заказ77.Коэффициент = 1;
//				
//				Если Ед_Наимен <>"" Тогда  
//					
//					Единицы.ИспользоватьВладельца(Заказ77.ТМЦ);
//					Единицы.ВыбратьЭлементы();
//					
//					Пока Единицы.ПолучитьЭлемент() = 1 Цикл
//						Если Единицы.Наименование = Ед_Наимен Тогда  
//							Заказ77.Ед =  Единицы.ТекущийЭлемент();
//						КонецЕсли;		
//					КонецЦикла;	
//				КонецЕсли;
//				Заказ77.Кво = ВыборкаПоСтрокам.Колво;
//				Заказ77.ПримечаниеСтроки = ПримечаниеСтроки + ВыборкаПоСтрокам.ПримечаниеСтроки;
//				Заказ77.КвоШт = ВыборкаПоСтрокам.КвоШт;
//				глРассчитатьПересчетКво(Заказ77);
//			КонецЦикла;//По строкам 
//			Заказ77.Записать();
//			
//			Сообщить("Загружен заказ " + Строка(Заказ77.НомерДок) + " от " + Строка(Заказ77.ДатаДок));
//			
//		КонецЦикла;//По документам 
//		
//		ЗафиксироватьТранзакцию();
//		
//		Сообщить("Загрузка окончена.");
//		
//	КонецЕсли;
//	
//КонецПроцедуры  
Процедура ЗагрузитьЗаказИз_v_83() 
	
	фПодключились = 0;
	ПутьКБазе = Константа.Путь_к_УНФ;
	Дата1 = ТекущаяДата(); 
	Дата2 = ТекущаяДата();

	Если ВвестиПериод(Дата1, Дата2, "Введите период для документов") <> 1 Тогда
		Возврат ;
	Иначе  
		Если V8 = "" Тогда    
			Сообщить("Подключение к базе 1с8.3" + РазделительСтрок + "Ожидайте.");
			V8 = глПодключитьComV8(фПодключились, ПутьКБазе);
			Если фПодключились = 0 Тогда
				Сообщить("Не удалось подключить базу 1с8.3");
				Возврат
			КонецЕсли; 
		КонецЕсли;
		глЗагрузитьЗаказИз_v_83(V8,Дата1,Дата2) 
	КонецЕсли;
		
		      
КонецПроцедуры


//
//========================================================================
//-umk


V8 = "";
