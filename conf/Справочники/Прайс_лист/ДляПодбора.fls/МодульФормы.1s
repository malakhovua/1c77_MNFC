Перем ВнКонтекст;			// запоминам значение из Форма.Параметр
Перем МожноДобавлятьНабор;
Перем ПеренеслиВдокумент;
Перем ОстаткиТоваров;
Перем КатегорияЦен;
Перем СтарыйТовар;
Перем ИнформационнаяСтрока;
Перем ОстТоваров,РезТоваров,ВремРегистры;

//******************************************************************************
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ
Функция Сформировать_информационную_строку()
	Перем ВремЕдиница;
	СтрокаЦены="";
	Если (ТекущийЭлемент().ЭтоГруппа()=0) И ((ПоказатьОстаткиЦену=0) ИЛИ (ИерархическийСписок()=0)) Тогда
		ТекТовар = ТекущийЭлемент().Товар;
		Если СтарыйТовар<>ТекТовар Тогда
			// инф. строку показываем в случае, если не показываем колонки
			
			Если ПустоеЗначение(КатегорияЦен)=0 Тогда
				ЭлЦена = глВернутьЦену(ТекТовар, КатегорияЦен);
				Если ПустоеЗначение(ЭлЦена)=0 Тогда
					ВремЕдиница	= ЭлЦена.Единица.Получить(ВнКонтекст.ДатаДок);
				    ВремЦена	= ЭлЦена.Цена.Получить(внКонтекст.ДатаДок);
					ВремВалюта = ЭлЦена.Валюта.Получить(внКонтекст.ДатаДок);
					СтрокаЦены = ""+КатегорияЦен+" цена "+СокрЛП(Формат(ВремЦена,глФорматСуммы))+" "+ВремВалюта.Кратко+";  ";
				Иначе
					СтрокаЦены = ""+КатегорияЦен+" цена не задана;  ";
				КонецЕсли;
			КонецЕсли;      
			ВремРезерв = РезТоваров.СводныйОстаток(Фирма,ТекТовар,,,"Резерв");	
			Если Склад.Выбран()=1 Тогда
				ВремКолво = ОстТоваров.Остаток(Фирма,ТекТовар,Склад,,"ОстатокТовара");
			Иначе
				ВремКолво = ОстТоваров.СводныйОстаток(Фирма,ТекТовар,,,"ОстатокТовара");
			КонецЕсли;
			Если ПустоеЗначение(ВремЕдиница)=1 Тогда
			    ВремЕдиница = ТекТовар.ЕдиницаПоУмолчанию;
			КонецЕсли;
			Если ВремЕдиница.Коэффициент > 1 Тогда
				ВремКолво = ВремКолво / ВремЕдиница.Коэффициент;
			КонецЕсли;
			ИнформационнаяСтрока = СтрокаЦены+
			                       "Остаток: "+СокрЛП(Формат(ВремКолво, глФорматКоличестваВформах))+" "+ТекТовар.ЕдиницаПоУмолчанию.Единица+"; "+
			                       "Резерв: "+СокрЛП(Формат(ВремРезерв, глФорматКоличестваВформах))+" "+ТекТовар.ЕдиницаПоУмолчанию.Единица;
			СтарыйТовар=ТекТовар;
		КонецЕсли;
	Иначе
		СтарыйТовар = ПолучитьПустоеЗначение("Справочник.ТМЦ");
		ИнформационнаяСтрока="";
	КонецЕсли;
	Возврат ИнформационнаяСтрока;
КонецФункции
//******************************************************************************

Процедура УстановкаФильтра(ПоРодителю,Иерархия)
	Перем СписокТоваров, СпрТовары;
	СписокТоваров = СоздатьОбъект("СписокЗначений");;
	Если (Иерархия=0) ИЛИ (ПоказатьОстаткиЦену=0) Тогда
	    ИспользоватьСписокЭлементов();
		Возврат;
	КонецЕсли;
	ОстаткиТоваров.УдалитьСтроки();
	// Получим список товаров группы
	СписокТоваров = СоздатьОбъект("СписокЗначений");
	СпрТовары = СоздатьОбъект("Справочник.Прайс_лист");
	СпрТовары.ИспользоватьРодителя(ПоРодителю);
	СпрТовары.ВключатьПодчиненные(0);
	СпрТовары.ВыбратьЭлементы();
	Пока СпрТовары.ПолучитьЭлемент()=1 Цикл
		Если СпрТовары.ЭтоГруппа()=0 Тогда
			ТекТов = СпрТовары.Товар;
			ВремЦена = глВернутьЦену(ТекТов,КатегорияЦен);
			Если ПустоеЗначение(ВремЦена)=1 Тогда
			    // Нет цены, нет товара
				Продолжить;
			КонецЕсли;
			СписокТоваров.ДобавитьЗначение(СпрТовары.ТекущийЭлемент());
			Иначе
			СписокТоваров.ДобавитьЗначение(СпрТовары.ТекущийЭлемент());
			Продолжить;
					КонецЕсли;
		
		Если ПоказатьОстаткиЦену=0 Тогда
		    Продолжить;
		КонецЕсли;
	    ОстаткиТоваров.НоваяСтрока();
		ОстаткиТоваров.Элемент = СпрТовары.ТекущийЭлемент();
		ОстаткиТоваров.Единица = ВремЦена.Единица.Получить(ВнКонтекст.ДатаДок);
	    ОстаткиТоваров.Цена = ВремЦена.Цена.Получить(ВнКонтекст.ДатаДок);
		ОстаткиТоваров.Валюта = ВремЦена.Валюта.Получить(ВнКонтекст.ДатаДок);
		Если Склад.Выбран()=1 Тогда
			ОстаткиТоваров.Количество = ОстТоваров.Остаток(Фирма,ТекТов,Склад,,"ОстатокТовара");
		Иначе
			ОстаткиТоваров.Количество = ОстТоваров.СводныйОстаток(Фирма,ТекТов,,,"ОстатокТовара");
		КонецЕсли;
		ОстаткиТоваров.Резерв = РезТоваров.СводныйОстаток(Фирма,ТекТов,,,"Резерв");
		Если ОстаткиТоваров.Единица.Коэффициент>1 Тогда
		    ОстаткиТоваров.Количество = ОстаткиТоваров.Количество / ОстаткиТоваров.Единица.Коэффициент;
			КонецЕсли;
		КонецЦикла;
		ИспользоватьСписокЭлементов(СписокТоваров);
КонецПроцедуры

//******************************************************************************
// Описание:
// Для текущего в списке элемента возвращает 
// цену из категории, выбранной в документе,
// из которого инициировали подбор
Функция ПолучитьПараметрКолонки(Колонка)
	Если (ПоказатьОстаткиЦену=0) ИЛИ (ИерархическийСписок()=0) ИЛИ (ТекущийЭлемент().ЭтоГруппа()=1) Тогда
		Возврат "";
	КонецЕсли;

	ТекТовар = ТекущийЭлемент();
	Поз=0;
	Если ОстаткиТоваров.НайтиЗначение(ТекТовар,Поз,"Элемент")=0 Тогда
	    // Не нашли. Вернем пустую строку
		Возврат "";
	КонецЕсли;

    Рез=ОстаткиТоваров.ПолучитьЗначение(Поз,Колонка);
	Если Колонка="Количество" Тогда
	    Возврат СокрЛ(Формат(Рез,глФорматКоличестваВформах));
	ИначеЕсли Колонка="Резерв" Тогда
	    Возврат СокрЛ(Формат(Рез,глФорматКоличестваВформах));
	ИначеЕсли Колонка="Единица" Тогда
		Возврат Рез;
	ИначеЕсли Колонка="Цена" Тогда
		Возврат СокрЛ(Формат(Рез,глФорматСуммы));
	ИначеЕсли Колонка="Валюта" Тогда
		Возврат Рез.Кратко;
		КонецЕсли;
	Возврат "";
КонецФункции
//******************************************************************************
Процедура УправлениеКолонками()
	Форма.Остаток.Видимость(ПоказатьОстаткиЦену);
	Форма.Резерв.Видимость(ПоказатьОстаткиЦену);	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		Форма.Цена.Видимость(0);
		Форма.Валюта.Видимость(0);
		Форма.Единица.Видимость(0);
	Иначе
		Форма.Цена.Видимость(ПоказатьОстаткиЦену);
		Форма.Валюта.Видимость(ПоказатьОстаткиЦену);
		Форма.Единица.Видимость(ПоказатьОстаткиЦену);
	КонецЕсли;
    УстановкаФильтра(ИспользоватьРодителя(),ИерархическийСписок());
	СтарыйТовар = ПолучитьПустоеЗначение("Справочник.ТМЦ");
	Форма.Обновить()
КонецПроцедуры
//********************************************************************************
// Назначение: 
// добавляет строку в таблицу значений
Процедура ДобавитьСтроку()
	ТаблицаПодбора.НоваяСтрока();
	ТаблицаПодбора.Плюс=1;
	ТаблицаПодбора.Минус=2;
КонецПроцедуры
//********************************************************************************
Процедура ДобавитьТовар(ДобТовар)
	// отключаем стандартный механизм подбора
	ТекТовар = ДобТовар.Товар;
	Если ТекТовар.ВидТМЦ = Перечисление.ВидыТМЦ.Набор Тогда
	    Если МожноДобавлятьНабор = Нет Тогда
	        Предупреждение("Наборы в документ добавлять нельзя!");
			Возврат;
	    КонецЕсли;
	КонецЕсли;
	НомСтр=0;
	ТаблицаПодбора.НайтиЗначение(ДобТовар,НомСтр,"ЭлементПрайса");
	Если НомСтр<>0 Тогда
		ТаблицаПодбора.ПолучитьСтрокуПоНомеру(НомСтр);
	КонецЕсли;
	Кол=1;
	Если Константа.ЗапрашиватьКоличество=Да Тогда
		Если ВвестиЧисло(Кол,"Количество товара '"+ДобТовар+"'",10,3)=0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если Кол<=0 Тогда
		Возврат;
	КонецЕсли;
	Если НомСтр=0 Тогда
		ДобавитьСтроку();
		ТаблицаПодбора.Элемент			= ТекТовар;
		ТаблицаПодбора.Количество		= Кол;
		ТаблицаПодбора.ЭлементЦены		= глВернутьЦену(ТекТовар, КатегорияЦен);
		ТаблицаПодбора.ЭлементПрайса	= ДобТовар;
	Иначе
		ТаблицаПодбора.Количество=ТаблицаПодбора.Количество+Кол;
	КонецЕсли;
	Если ТаблицаПодбора.Количество=0 Тогда
	    ТаблицаПодбора.УдалитьСтроку();
	Иначе
		ТаблицаПодбора.ТекущаяСтрока(ТаблицаПодбора.НомерСтроки);
	КонецЕсли;
КонецПроцедуры
//********************************************************************************
// Назначение: 
// активизирует в документе процедуру ОбработкаПодбора и передает ей в качестве
// выбранного значения таблицу значений
Процедура Вдокумент()
	// вызываем обработку подбора в документе
	ПеренеслиВдокумент=Да;
	Если ПустоеЗначение(Склад)=0 Тогда
		Если глЕстьРеквизитШапки("МестоХранения",ВнКонтекст.Вид())=Да Тогда
			Если ВнКонтекст.МестоХранения<>Склад Тогда
				Если Вопрос("В форме подбора выбран склад, не совпадающий с установленным в документе.
				| Установить в документе склад """+Склад+"""?","Да+Нет")="Да" Тогда
					ВнКонтекст.МестоХранения=Склад;
					//ВнКонтекст.Форма.ТекстФирмы.Заголовок(глСтрокаФирмы(ВнКонтекст));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Форма.ВыполнитьВыбор(ТаблицаПодбора);
КонецПроцедуры
//******************************************************************************
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА
Процедура ПоискЭлемента()
	Перем СписокПараметров;
	Перем Флаг;
	Перем СписокРеквизитов,СтрокаСпискаРеквизитов;
	
	// нужно сделать настройку, в которой нужно
	// сохранять значение флага.
	// Пока задается константно.
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("Прайс_лист","ВидСправочника");
	СписокПараметров.ДобавитьЗначение(Контекст,"КонтекстВнешнейФормы");
	
	СписокПараметров.ДобавитьЗначение(КатегорияЦен,"КатегорияЦен");
	
	
	// добавим реквизиты для поиска (здесь только по артикулу)
	СписокРеквизитов=СоздатьОбъект("СписокЗначений");
	СтрокаСпискаРеквизитов = ЗначениеВСтрокуВнутр(СписокРеквизитов);
	СписокПараметров.ДобавитьЗначение(СтрокаСпискаРеквизитов,"ДобАтрибуты");
	
	ОткрытьФормуМодально("Обработка.ПоискТовара",СписокПараметров);
	
КонецПроцедуры
//********************************************************************************
// Назначение: 
// открывает многострочную часть на выбранном в таблице значений товаре
Процедура Позиционировать()
	Перем ТекТовар;
	Если ТаблицаПодбора.ТекущаяСтрока()>0 Тогда
	    ТекТовар = ТаблицаПодбора.ПолучитьЗначение(ТаблицаПодбора.ТекущаяСтрока(),"ЭлементПрайса");
		УстановкаФильтра(ТекТовар.Родитель,ИерархическийСписок());
		АктивизироватьОбъект(ТекТовар);
	КонецЕсли;
КонецПроцедуры
//********************************************************************************
// Назначение: 
// удаляет текущую строку в таблице значений
Процедура УдалитьСтроку()
	Если ТаблицаПодбора.ТекущаяСтрока()>0 Тогда
	    ТаблицаПодбора.УдалитьСтроку(ТаблицаПодбора.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры
//********************************************************************************
// Назначение: 
// очищает всю таблицу значений
Процедура Очистить()
	ТаблицаПодбора.УдалитьСтроки();
КонецПроцедуры
//********************************************************************************
// Назначение: 
// вызывается при двойном щелчке мыши и нажатии Enter на таблице значений. 
// Если текущая колонка:
//	"Плюс" - в ячейке в колонке Количество увеличиваем  значение на единицу
// 	"Минус" - уменьшаем на единицу
//	другая колонка - выводим диалог, в котором задаем значение
Процедура ВыбТоварВыбСтр()
	Если ТаблицаПодбора.КоличествоСтрок()=0 Тогда
		Возврат;
	КонецЕсли;
	Если ТаблицаПодбора.ТекущаяКолонка()="Плюс" Тогда
		ТаблицаПодбора.Количество=ТаблицаПодбора.Количество+1;
	ИначеЕсли ТаблицаПодбора.ТекущаяКолонка()="Минус" Тогда
		Если ТаблицаПодбора.Количество > 1 Тогда
			ТаблицаПодбора.Количество=ТаблицаПодбора.Количество-1;
		КонецЕсли;
	Иначе
		Кол=ТаблицаПодбора.Количество;
		Если ВвестиЧисло(Кол,"Введите количество",10,3)=0 Тогда
			Возврат;
		КонецЕсли;
		ТаблицаПодбора.Количество=Кол;
	КонецЕсли;
КонецПроцедуры	// ВыбТоварВыбСтр
//******************************************************************************
Функция ВернутьКатегориюЦен()
	Если Найти("РасходнаяРозничная/ОтчетКА",ВнКонтекст.Вид()) = 0 Тогда
		Если КатегорияЦен <> ВнКонтекст.КатегорияЦен Тогда
			КатегорияЦен = ВнКонтекст.КатегорияЦен;
		КонецЕсли;
	КонецЕсли;
	Возврат "Категория цены: "+КатегорияЦен;	
КонецФункции

//******************************************************************************
// Вызывается из элементов диалога Фирма и Склад
Процедура ИзменениеФильтра()
	Если (ПоказатьОстаткиЦену=1) И (ИерархическийСписок()=1) Тогда
	    УстановкаФильтра(Родитель,ИерархическийСписок());
	КонецЕсли;
	СтарыйТовар = ПолучитьПустоеЗначение("Справочник.ТМЦ");
	Форма.Обновить()
КонецПроцедуры
//******************************************************************************
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//******************************************************************************
Процедура ПриОткрытии()	// Предопределенная процедура
	
	ВнКонтекст = Форма.Параметр;

	// заполнение таблицы значений из документа
	Если ТипЗначенияСтр(ВнКонтекст)<>"ГрупповойКонтекст" Тогда
		// при открытии формы обязательно нужно передавать контекст
		СтатусВозврата(0);
		Предупреждение("Форма подбора открывается только из документа!");
		Возврат;
	КонецЕсли;
	
	Если глЕстьРеквизитШапки("Валюта",ВнКонтекст.Вид()) = Да Тогда
		Если ПустоеЗначение(ВнКонтекст.Валюта) = 1 Тогда
			СтатусВозврата(0);
			Предупреждение("В документе не задана валюта!");
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если Найти("РасходнаяРозничная/ОтчетКА",ВнКонтекст.Вид()) = 0 Тогда 
		КатегорияЦен = ВнКонтекст.КатегорияЦен;
	Иначе
		КатегорияЦен = Константа.РозничнаяКатегорияЦен;
	КонецЕсли;
	
	// если не задана категория цены, то нечего подбирать по прайсу
	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
	    Предупреждение("Не задан тип цен в документе!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;    
	
	Фирма = ВнКонтекст.Фирма;
	Если глЕстьРеквизитШапки("МестоХранения",ВнКонтекст.Вид())=Да Тогда
		Склад = ВнКонтекст.МестоХранения;
	КонецЕсли;
	
	ПоказатьОстаткиЦену=ВосстановитьЗначение("Подбор_ПоказыватьОЦ");
	
	ВремРегистры = СоздатьОбъект("Регистры");
	ОстТоваров = ВремРегистры.Остатки;      
	РезТоваров = ВремРегистры.Резервы;
	Если внКонтекст.ДатаДок<ПолучитьДатуТА() Тогда
		ОстТоваров.ВременныйРасчет();
		РезТоваров.ВременныйРасчет();
		ВремРегистры.РассчитатьРегистрыПо(внКонтекст.ДатаДок);
	КонецЕсли;
	УправлениеКолонками();
	МожноДобавлятьНабор=глЕстьРеквизитМнЧ("Набор",ВнКонтекст.Вид());
	// инициализация таблицы значений
	ТаблицаПодбора.НоваяКолонка("Плюс","Число",1,,"+",4);
	ТаблицаПодбора.НоваяКолонка("Минус","Число",1,,"-",4);
	ТаблицаПодбора.НоваяКолонка("Элемент",,,,"Выбранный товар",25);
	ТаблицаПодбора.НоваяКолонка("Количество",,,,"Количество",10);
	ТаблицаПодбора.НоваяКолонка("ЭлементЦены",,,,"ЭлементЦены",6);
	ТаблицаПодбора.НоваяКолонка("ЭлементПрайса");
	
	ТаблицаПодбора.ВыводитьПиктограммы("Плюс");
	ТаблицаПодбора.ВыводитьПиктограммы("Минус");
	ТаблицаПодбора.ВидимостьКолонки("ЭлементЦены,ЭлементПрайса",0);
	// нужно для того, чтобы перед активизацией механизма подбора в документе
	// вызывалась предопределенная функция ПриВыбореСтроки
	Форма.ОбработкаВыбораСтроки(1);
КонецПроцедуры

//********************************************************************************
Процедура ПриПовторномОткрытии()
	Форма.Обновить();
КонецПроцедуры
//********************************************************************************
Процедура ПриВыбореРодителя(НовыйРодитель)
	УстановкаФильтра(НовыйРодитель,ИерархическийСписок());
КонецПроцедуры

//********************************************************************************
Процедура ПриСменеИерархии(НоваяИерархичность)
	УстановкаФильтра(Родитель,НоваяИерархичность);
	СтарыйТовар = ПолучитьПустоеЗначение("Справочник.ТМЦ");
	Форма.Обновить()
КонецПроцедуры

//********************************************************************************
Процедура ПриНачалеРедактированияСтроки()
	// практически все элементы справочника имею много реквизитов.
	// поэтому редактировать элемент или создавать новый в списке
	// является нецелесообразным.
	СтатусВозврата(0);
КонецПроцедуры

//********************************************************************************
// вызывается при двойном щелчке мыши или нажатии на Enter
// в многострочной части.
Процедура ПриВыбореСтроки()
	Перем ТекТовар;
	// отключаем стандартный механизм подбора	
	СтатусВозврата(0);
    ДобавитьТовар(ТекущийЭлемент());
КонецПроцедуры
//********************************************************************************
Процедура ПриЗакрытии()
	СохранитьЗначение("Подбор_ПоказыватьОЦ", ПоказатьОстаткиЦену);
	
	Если (ТаблицаПодбора.КоличествоСтрок()>0) И (ПеренеслиВдокумент=Нет) Тогда
		Если Вопрос("Перенести отобранные позиции в документ?","Да+Нет")="Да" Тогда
		    Вдокумент();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


ТаблицаТоваров = СоздатьОбъект("ТаблицаЗначений");
ТаблицаТоваров.НоваяКолонка("Товар","Справочник.ТМЦ");
ТаблицаТоваров.НоваяКолонка("Единица","Справочник.Единицы");
ТаблицаТоваров.НоваяКолонка("Цена","Число");
ТаблицаТоваров.НоваяКолонка("Валюта","Справочник.Валюты");

ПеренеслиВдокумент=Нет;
ОстаткиТоваров = СоздатьОбъект("ТаблицаЗначений");
ОстаткиТоваров.НоваяКолонка("Элемент","Справочник.Товары");
ОстаткиТоваров.НоваяКолонка("Количество","Число",10,3);
ОстаткиТоваров.НоваяКолонка("Резерв","Число",10,3);
ОстаткиТоваров.НоваяКолонка("Единица","Справочник.Единицы");
ОстаткиТоваров.НоваяКолонка("Цена","Число",глДлинаСуммы,глТочностьСуммы);
ОстаткиТоваров.НоваяКолонка("Валюта","Справочник.Валюты");
СтарыйЭлемент = ПолучитьПустоеЗначение("Справочник.ТМЦ");
ИнформационнаяСтрока = "";

