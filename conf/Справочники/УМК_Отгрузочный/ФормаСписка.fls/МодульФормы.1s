//--- УМК Сандомирский В.Ю. (08.03.15) макет печати отгрузочного листа
Перем ВыбПечать;

Перем МаксимальноеКвоСтрокКолонки;
Перем МаксимальноеКвоСтрокКолонкиП;
Перем СтрокПерваяКолонка;
Перем СтрокВтоаяКолонка;
Перем СтрокТретяяКолонка;
Перем Критическое2Колонки;

//======================================================================
Процедура ЗаполнитьСписокСтрокОтгрузочного()
	
	Перем Индекс;
	
	Если ТекущийЭлемент().Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	
	СтрокаОтгрузочногоЛиста = СоздатьОбъект("Справочник.УМК_СтрокиОтгрузочного");
	СтрокаОтгрузочногоЛиста.ИспользоватьВладельца(ТекущийЭлемент());
	СтрокаОтгрузочногоЛиста.ПорядокКодов();
	СтрокаОтгрузочногоЛиста.ВыбратьЭлементы();
	Индекс = 0; 
	СписокСтрокОтгрузочного.УдалитьСтроки();
	Пока СтрокаОтгрузочногоЛиста.ПолучитьЭлемент()=1 Цикл
		Если СтрокаОтгрузочногоЛиста.ПометкаУдаления()=1 Тогда
		    Продолжить;
		КонецЕсли;

	    Индекс = Индекс + 1;
		СписокСтрокОтгрузочного.НоваяСтрока(Индекс);
		СписокСтрокОтгрузочного.Ссылка 					= СтрокаОтгрузочногоЛиста.ТекущийЭлемент();
		СписокСтрокОтгрузочного.ТМЦ						= СтрокаОтгрузочногоЛиста.ТМЦ;
		СписокСтрокОтгрузочного.НаименованиеДляПечати 	= СтрокаОтгрузочногоЛиста.НаименованиеДляПечати;
		СписокСтрокОтгрузочного.Оболочка				= СтрокаОтгрузочногоЛиста.Оболочка;
		СписокСтрокОтгрузочного.Новый					= СтрокаОтгрузочногоЛиста.Новый;
		
		Если ПустоеЗначение(СписокСтрокОтгрузочного.ТМЦ) = 1 Тогда
			СписокСтрокОтгрузочного.FormEx_ПланРаскраски = "(BRUSH["+глПолучитьЦвет(196,233,242)+"])()()()()()";
		ИначеЕсли СписокСтрокОтгрузочного.ТМЦ.фНовый = 1 Тогда	
			СписокСтрокОтгрузочного.FormEx_ПланРаскраски = "(BRUSH["+глПолучитьЦвет(255,255,198)+"])()()()";
		КонецЕсли;	
					
	КонецЦикла;
	
КонецПроцедуры // ПриВыбореСтроки()

//======================================================================
Процедура ПриОткрытии() 
	
	Если (НазваниеНабораПрав() = "Администратор") 
		ИЛИ (НазваниеНабораПрав() = "ПроизводствоКасса")
		ИЛИ (НазваниеНабораПрав() = "ПроизводствоСбыт") Тогда
			
	Иначе
		СтатусВозврата(0);
		Возврат;		
	КонецЕсли;
		
	Форма.ОбработкаВыбораСтроки(1);
	ргСорт = 1;
	Сортировка("Код");
	
КонецПроцедуры // ПриОткрытии

//======================================================================
Процедура ПриВыбореСтроки()
	ЗаполнитьСписокСтрокОтгрузочного();	
КонецПроцедуры // ПриВыбореСтроки

//====================================================================== 
Процедура ИзменениеПорядка(Направление)
	
	//НачатьТранзакцию();	
	ТекЭлемент = ТекущийЭлемент();
	
	//--- Сдвигаем номерацию на 1000
	ТЗ_Элементы = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Элементы.НоваяКолонка("Ссылка");
	СпрСтрокиОтгрузочного	= СоздатьОбъект("Справочник.УМК_Отгрузочный");
	Если ргСорт = 1 Тогда
		СпрСтрокиОтгрузочного.ПорядокКодов();
	Иначе
		СпрСтрокиОтгрузочного.ПорядокРеквизита("КодПром");
	КонецЕсли;
	СпрСтрокиОтгрузочного.ВыбратьЭлементы();
	Пока СпрСтрокиОтгрузочного.ПолучитьЭлемент() = 1 Цикл
		ТЗ_Элементы.НоваяСтрока();
		ТЗ_Элементы.Ссылка = СпрСтрокиОтгрузочного.ТекущийЭлемент();
	КонецЦикла;
	
	ТекСтрока 	= "";
	ТекКолонка 	= "";
	
	ТЗ_Элементы.НайтиЗначение(ТекЭлемент,ТекСтрока,ТекКолонка);
	
	ТЗ_Элементы.СдвинутьСтроку(Направление,ТекСтрока);
	
	ТЗ_Элементы2 = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Элементы.Выгрузить(ТЗ_Элементы2);
	
	ТЗ_Элементы2.ВыбратьСтроки();
	Пока ТЗ_Элементы2.ПолучитьСтроку() = 1 Цикл
		СпрСтрокиОтгрузочного.НайтиЭлемент(ТЗ_Элементы2.Ссылка);
		Если ргСорт = 1 Тогда
			СпрСтрокиОтгрузочного.Код = СпрСтрокиОтгрузочного.Код + 1000;
		Иначе
			СпрСтрокиОтгрузочного.КодПром = СпрСтрокиОтгрузочного.КодПром + 1000;
		КонецЕсли;
		СпрСтрокиОтгрузочного.Записать();
	КонецЦикла;
	//--- Сдвигаем номерацию на 1000
	
	ТекКод = 0;
	ТЗ_Элементы.ВыбратьСтроки();
	Пока ТЗ_Элементы.ПолучитьСтроку() = 1 Цикл
		ТекКод = ТекКод + 1;
		СпрСтрокиОтгрузочного.НайтиЭлемент(ТЗ_Элементы.Ссылка);
		Если ргСорт = 1 Тогда
			СпрСтрокиОтгрузочного.Код = ТекКод;
		Иначе
			СпрСтрокиОтгрузочного.КодПром = ТекКод;
		КонецЕсли;
		СпрСтрокиОтгрузочного.Записать();
	КонецЦикла;

	//ЗафиксироватьТранзакцию();	
	Форма.Обновить();
КонецПроцедуры // ИзменениеПорядка(1)

// ===============================
Функция УстДоступность()
	
КонецФункции

//====================================================================== 
Процедура ПечатьОтгрузочного()		
	Перем ВыбЗначение;
	ВыбПечать = СоздатьОбъект("СписокЗначений");
	
	ВыбПечать.ДобавитьЗначение("Ф1","&Выделять Ф2");
	ВыбПечать.ДобавитьЗначение("Новые","&Выделять новые");
	ВыбПечать.ДобавитьЗначение("НеВыделять","&Не выделять");
	ВыбПечать.ДобавитьЗначение("Коды","&Коды для весов");
	ВыбПечать.ДобавитьЗначение("Склад","&Склад в/г упаковки");	
	ВыбПечать.ДобавитьЗначение("ДвеКолонки", "Две колонки (пром)");
		
	Если ВыбПечать.ВыбратьЗначение(ВыбЗначение,"",,3,1) <> 1 Тогда
	    Возврат;
	КонецЕсли;    

	СписПараметров = СоздатьОбъект("СписокЗначений");
	СписПараметров.Установить("ТипЦен", ВыбКатЦен);
	СписПараметров.Установить("Вариант", ВыбЗначение);
	ОткрытьФорму("Обработка.УМК_ПечатьОтгрузочного", СписПараметров);
КонецПроцедуры

//--- КНОПКИ НА ФОРМЕ  //--- работа с таблицей значений (Строки прайс листа)

//====================================================================== 
Процедура ДобавитьСтрокуПрайса()
	Перем ФормаЗаписи;
	Если Выбран() = 0 Тогда
		Предупреждение("Элемент сначала следует записать!");
		Возврат;
	КонецЕсли;	
	ОткрытьФормуМодально("Элемент.УМК_СтрокиОтгрузочного",Контекст,,,ТекущийЭлемент());
	ЗаполнитьСписокСтрокОтгрузочного();
	
	СписокСтрокОтгрузочного.ТекущаяСтрока(СписокСтрокОтгрузочного.КоличествоСтрок());
	
КонецПроцедуры // ДобавитьСтрокуПрайса

//====================================================================== 
Процедура ИзменитьСтрокуПрайса()
	
	Перем ФормаЗаписи;
	Поз=СписокСтрокОтгрузочного.ТекущаяСтрока();	
	Если Поз = 0 Тогда
	    // не выбрана строка таблицы
		Возврат;
	КонецЕсли;               	
	Эл=СписокСтрокОтгрузочного.ПолучитьЗначение(Поз,"Ссылка");
	ОткрытьФормуМодально(Эл,Контекст);
	ЗаполнитьСписокСтрокОтгрузочного();
	СписокСтрокОтгрузочного.ТекущаяСтрока(Поз);
	
КонецПроцедуры // Изменить

//====================================================================== 
Процедура УдалитьСтрокуПрайса()
	
	Перем Поз;
	
	Поз=СписокСтрокОтгрузочного.ТекущаяСтрока();
	
	Если Поз = 0 Тогда
	    // не выбрана строка таблицы
		Возврат;
	КонецЕсли;
	
	Эл=СписокСтрокОтгрузочного.ПолучитьЗначение(Поз,"Ссылка");

	Если Вопрос("Удалить вид упаковки ?",1)=2 Тогда
		Возврат;
	КонецЕсли;
	Спр=СоздатьОбъект("Справочник.УМК_СтрокиОтгрузочного");
	Спр.ИспользоватьВладельца(ТекущийЭлемент());
	Если Спр.НайтиЭлемент(Эл)=1 Тогда
		Спр.Удалить(0);
		СписокСтрокОтгрузочного.УдалитьСтроку(Поз);
		СписокСтрокОтгрузочного.ТекущаяСтрока(?(Поз>1,Поз-1,1));
		Форма.Обновить();
	КонецЕсли;
КонецПроцедуры // Удалить

//====================================================================== 
Процедура ИзменениеПорядкаТЗ(Направление)
	
	ТекСтрока = СписокСтрокОтгрузочного.ТекущаяСтрока();
	СписокСтрокОтгрузочного.СдвинутьСтроку(Направление,ТекСтрока);
	
	ТекСтрока = ТекСтрока + Направление;
	Если ТекСтрока > СписокСтрокОтгрузочного.КоличествоСтрок() Тогда
		ТекСтрока = СписокСтрокОтгрузочного.КоличествоСтрок(); 
	КонецЕсли; 
	
	СписокСтрокОтгрузочного.ТекущаяСтрока(ТекСтрока);
	
	//--- Сдвигаем номерацию на 100
	ТЗ_Элементы = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Элементы.НоваяКолонка("Ссылка");
	СпрСтрокиПрайсЛиста	= СоздатьОбъект("Справочник.УМК_СтрокиОтгрузочного");
	СпрСтрокиПрайсЛиста.ИспользоватьВладельца(ТекущийЭлемент());
	СпрСтрокиПрайсЛиста.ВыбратьЭлементы();
	Пока СпрСтрокиПрайсЛиста.ПолучитьЭлемент() = 1 Цикл
		ТЗ_Элементы.НоваяСтрока();
		ТЗ_Элементы.Ссылка = СпрСтрокиПрайсЛиста.ТекущийЭлемент();
	КонецЦикла;
	
	ТЗ_Элементы.ВыбратьСтроки();
	Пока ТЗ_Элементы.ПолучитьСтроку() = 1 Цикл
		СпрСтрокиПрайсЛиста.НайтиЭлемент(ТЗ_Элементы.Ссылка);
		СпрСтрокиПрайсЛиста.Код = СпрСтрокиПрайсЛиста.Код + 100;
		СпрСтрокиПрайсЛиста.Записать();
	КонецЦикла;
	//--- Сдвигаем номерацию на 100
	
	ТекКод = 0;
	СписокСтрокОтгрузочного.ВыбратьСтроки();
	Пока СписокСтрокОтгрузочного.ПолучитьСтроку() = 1 Цикл
		ТекКод = ТекКод + 1;
		СпрСтрокиПрайсЛиста.НайтиЭлемент(СписокСтрокОтгрузочного.Ссылка);
		СпрСтрокиПрайсЛиста.Код = ТекКод;
		СпрСтрокиПрайсЛиста.Записать();
	КонецЦикла;
	
КонецПроцедуры // ИзменениеПорядка(1)

//======================================================================
Процедура ЗаполнитьИзГруппыТМЦ()
	Если ТекущийЭлемент().Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ТекущийЭлемент().ГруппаТМЦ) = 1 Тогда
		 Возврат;
	КонецЕсли;
	
	
	СпрСтрокиОтгрузочного = СоздатьОбъект("Справочник.УМК_СтрокиОтгрузочного");
	СпрСтрокиОтгрузочного.ИспользоватьВладельца(ТекущийЭлемент());
	
	СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
	СпрТМЦ.ИспользоватьРодителя(ТекущийЭлемент().ГруппаТМЦ);
	СпрТМЦ.ВыбратьЭлементы();
	Пока СпрТМЦ.ПолучитьЭлемент() = 1 Цикл
		
		Если СпрСтрокиОтгрузочного.НайтиПоРеквизиту("ТМЦ",СпрТМЦ,0) <> 1 Тогда
			СпрСтрокиОтгрузочного.Новый();
			СпрСтрокиОтгрузочного.ТМЦ 						= СпрТМЦ.ТекущийЭлемент();
			СпрСтрокиОтгрузочного.НаименованиеДляПечати 	= СокрЛП(СпрТМЦ.Наименование);
			СпрСтрокиОтгрузочного.Записать();
		Иначе
			Если СпрСтрокиОтгрузочного.ПометкаУдаления() = 1 Тогда
				СпрСтрокиОтгрузочного.СнятьПометкуУдаления();
				СпрСтрокиОтгрузочного.Записать();	
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьСписокСтрокОтгрузочного();
	
КонецПроцедуры // ЗаполнитьИзГруппыТМЦ()

//====================================================================== 
Процедура СортироватьСтроки()
		
	СписокСтрокОтгрузочного.Сортировать("ТМЦ+");
	
	//--- Сдвигаем номерацию на 100
	ТЗ_Элементы = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Элементы.НоваяКолонка("Ссылка");
	СпрСтроки	= СоздатьОбъект("Справочник.УМК_СтрокиОтгрузочного");
	СпрСтроки.ИспользоватьВладельца(ТекущийЭлемент());
	СпрСтроки.ВыбратьЭлементы();
	Пока СпрСтроки.ПолучитьЭлемент() = 1 Цикл
		ТЗ_Элементы.НоваяСтрока();
		ТЗ_Элементы.Ссылка = СпрСтроки.ТекущийЭлемент();
	КонецЦикла;
	
	ТЗ_Элементы.ВыбратьСтроки();
	Пока ТЗ_Элементы.ПолучитьСтроку() = 1 Цикл
		СпрСтроки.НайтиЭлемент(ТЗ_Элементы.Ссылка);
		СпрСтроки.Код = СпрСтроки.Код + 100;
		СпрСтроки.Записать();
	КонецЦикла;
	//--- Сдвигаем номерацию на 100
	
	ТекКод = 0;
	СписокСтрокОтгрузочного.ВыбратьСтроки();
	Пока СписокСтрокОтгрузочного.ПолучитьСтроку() = 1 Цикл
		ТекКод = ТекКод + 1;
		СпрСтроки.НайтиЭлемент(СписокСтрокОтгрузочного.Ссылка);
		СпрСтроки.Код = ТекКод;
		СпрСтроки.Записать();
	КонецЦикла;

КонецПроцедуры // СортироватьСтрокиПрайсЛиста()

//======================================================================
Процедура ПриИзмененииГруппы()
	НаименованиеДляПечати = ГруппаТМЦ.Наименование;
КонецПроцедуры // ПриИзмененииГруппы()

//======================================================================
Функция ВернутьКритическоеЧислоСтрок()
	Критическое2Колонки = "";	
	// проверим количество строк для каждого листа и колонки
	ТЗ_Подсчет = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Подсчет.НоваяКолонка("Лист","Число",10);
	ТЗ_Подсчет.НоваяКолонка("Колонка","Число",10);
	ТЗ_Подсчет.НоваяКолонка("Кво","Число",10);
	ТЗ_Подсчет.НоваяКолонка("ЛистП","Число",10);
	ТЗ_Подсчет.НоваяКолонка("КолонкаП","Число",10);
	ТЗ_Подсчет.НоваяКолонка("КвоП","Число",10);	
	
	СпрГруппыОтгрузочного = СоздатьОбъект("Справочник.УМК_Отгрузочный");
	СпрСтрокиОтгрузочного = СоздатьОбъект("Справочник.УМК_СтрокиОтгрузочного");

	СтрокПерваяКолонка 	= 0;
	СтрокВтоаяКолонка 	= 0;
	СтрокТретяяКолонка 	= 0;	
	СтрокПерваяКолонкаПром = 0;
	СтрокВтораяКолонкаПром = 0;
	
	СпрГруппыОтгрузочного.ВыбратьЭлементы();
	Пока СпрГруппыОтгрузочного.ПолучитьЭлемент() = 1 Цикл		
		Если СпрГруппыОтгрузочного.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
			
		СпрСтрокиОтгрузочного.ИспользоватьВладельца(СпрГруппыОтгрузочного.ТекущийЭлемент());
		СпрСтрокиОтгрузочного.ВыбратьЭлементы();
		Пока СпрСтрокиОтгрузочного.ПолучитьЭлемент() = 1 Цикл			
			Если СпрСтрокиОтгрузочного.ПометкаУдаления() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			ТЗ_Подсчет.НоваяСтрока();
			ТЗ_Подсчет.Лист 		= СпрГруппыОтгрузочного.Лист;
			ТЗ_Подсчет.Колонка 		= СпрГруппыОтгрузочного.Колонка;
			ТЗ_Подсчет.Кво 			= 1;
			
			ТЗ_Подсчет.ЛистП 		= СпрГруппыОтгрузочного.ЛистП;
			ТЗ_Подсчет.КолонкаП		= СпрГруппыОтгрузочного.КолонкаП;
			ТЗ_Подсчет.КвоП			= 1;
		КонецЦикла;				
	КонецЦикла;	
	ТЗ_Подсчет.Свернуть("Лист,Колонка, ЛистП, КолонкаП","Кво, КвоП");
	Т2 = СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Подсчет.Выгрузить(Т2);
	ТЗ_Подсчет.Свернуть("Лист,Колонка","Кво");
	
	ТекстВозврата = "";
	Критическое2Колонки = "";
	Текст = СоздатьОбъект("Текст");
	
	ТЗ_Подсчет.ВыбратьСтроки();
	Пока ТЗ_Подсчет.ПолучитьСтроку() = 1 Цикл
		Если ТЗ_Подсчет.Кво > МаксимальноеКвоСтрокКолонки Тогда
			ТекстВозврата = ТекстВозврата + ?(ТекстВозврата = "", "", " / ") + "ЛИСТ: " + Строка(ТЗ_Подсчет.Лист) + " КОЛ.: " + ТЗ_Подсчет.Колонка + ". Строк: " + ТЗ_Подсчет.Кво;
		КонецЕсли;
	КонецЦикла;

	Т2.Свернуть("ЛистП,КолонкаП","КвоП");
	Т2.ВыбратьСтроки();
	Пока Т2.ПолучитьСтроку() = 1 Цикл
		Если Т2.КвоП > МаксимальноеКвоСтрокКолонкиП Тогда
			Критическое2Колонки = Критическое2Колонки + ?(Критическое2Колонки = "", "", " / ") + "ЛИСТ: " + Строка(Т2.ЛистП) + " КОЛ.: " + Т2.КолонкаП + ". Строк: " + Т2.КвоП;
		КонецЕсли;		
	КонецЦикла;	

	Возврат ТекстВозврата;
КонецФункции // ВернутьКритическоеЧислоСтрокПерваяКолонка()

Процедура ПоискНовых()
	ОткрытьФорму("Обработка.ПоискНовыхЭлементовВакиПрайса", 3);
КонецПроцедуры // ПоискНовых

//======================================================================
Процедура ИзмСорт()
	Сортировка(?(ргСорт = 1, "Код", "КодПром"));
КонецПроцедуры // гл
//====================================================================== 
СписокСтрокОтгрузочного.НоваяКолонка("FormEx_ПланРаскраски");
СписокСтрокОтгрузочного.НоваяКолонка("Ссылка",				"Справочник.УМК_СтрокиОтгрузочного",,,,0);
СписокСтрокОтгрузочного.НоваяКолонка("ТМЦ",					"Справочник.ТМЦ",,,	"ТМЦ",20);
СписокСтрокОтгрузочного.НоваяКолонка("НаименованиеДляПечати",	"Строка",200,,	"Наименование для печати",20);
СписокСтрокОтгрузочного.НоваяКолонка("Оболочка",				"Справочник.УМК_ОболочкиОтгрузочного");
СписокСтрокОтгрузочного.НоваяКолонка("Новый",					"Число",1,,		"Новый",2);


СписокСтрокОтгрузочного.ВидимостьКолонки("Ссылка",0);
//СписокСтрокОтгрузочного.ВидимостьКолонки("Новый",0);
СписокСтрокОтгрузочного.ВидимостьКолонки("FormEx_ПланРаскраски",0);
СписокСтрокОтгрузочного.ВыводитьПиктограммы("Новый");

ГруппаТМЦ.ВыборГруппы(1);


МаксимальноеКвоСтрокКолонки = 75;
МаксимальноеКвоСтрокКолонкиП = 48;
Критическое2Колонки = "";
ргСорт = 1;