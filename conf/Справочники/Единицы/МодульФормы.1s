//******************************************************************************
// РЕКОМЕНДАЦИИ ПО РАБОТЕ С ФОРМОЙ
// В этой форме не рекомендуется вызывать процедуру Записать(),
// а так же в формуле кнопок использовать конструкцию #Записать
// Если элемент требуется записать, то следует вызвать процедуру 
// ПриЗаписиЭлемента(), которая корректно произведет все
// необходимые действия.
//******************************************************************************

Перем ВнКонтекст;

// ===============================
// Возвращаемое значение:
//	1 - уникален
//	0 - нет;
Функция ПроверкаУникальностиШтрихкода()
	Перем ЕдиницаДляПоиска;
	Перем Результат;
	
	Результат = 1;	// изначально уникален
	
	Если ПустоеЗначение(Штрихкод) = 0 Тогда
		ЕдиницаДляПоиска = СоздатьОбъект("Справочник.Единицы");
		
		ЕдиницаДляПоиска.ВыбратьЭлементыПореквизиту("Штрихкод",Штрихкод,0,0);
		Пока ЕдиницаДляПоиска.ПолучитьЭлемент() = 1 Цикл
			Если ЕдиницаДляПоиска.ПометкаУдаления()=1 Тогда
				Продолжить;
			КонецЕсли;
			// нашли штрихкод
			Если Выбран() = 1 Тогда
				// сохраненый элемент
				// проверим, а не является найденный текущим
				Если ТекущийЭлемент() <> ЕдиницаДляПоиска.ТекущийЭлемент() Тогда
					Результат = 0;
				КонецЕсли;
			Иначе
				// новый элемент
				Результат = 0;
			КонецЕсли;
			Если Результат = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// ===============================
Процедура ДобавитьВСписок(Элемент)
	Перем Позиция;
	Перем ЕдиницыТовара;
	
	Если (ТипЗначенияСтр(ВнКонтекст)="ГрупповойКонтекст") И
	     (ПустоеЗначение(Элемент.Выбран()) = 0) Тогда
		// добавляем в список, только если открыли форму 
		// из формы товара и сохранили элемент

		Позиция = 0;
		ВнКонтекст.СписокЕдиниц.НайтиЗначение(ТекущийЭлемент(),Позиция,"Ссылка");
		Если Позиция = 0 Тогда
			// для новой или восстановленной единицы измерения
			ВнКонтекст.СписокЕдиниц.НоваяСтрока();
			ВнКонтекст.СписокЕдиниц.Ссылка = Элемент;
			ВнКонтекст.СписокЕдиниц.Единица = Элемент.Единица;
			ВнКонтекст.СписокЕдиниц.Коэффициент = Элемент.Коэффициент;
			ВнКонтекст.СписокЕдиниц.ШтрихКод = Элемент.ШтрихКод;
			ВнКонтекст.СписокЕдиниц.ТекущаяСтрока(ВнКонтекст.СписокЕдиниц.КоличествоСтрок());
		Иначе
			ВнКонтекст.СписокЕдиниц.УстановитьЗначение(Позиция,"Единица",Элемент.Единица);
			ВнКонтекст.СписокЕдиниц.УстановитьЗначение(Позиция,"Коэффициент",Элемент.Коэффициент);
			ВнКонтекст.СписокЕдиниц.УстановитьЗначение(Позиция,"ШтрихКод",Элемент.ШтрихКод);
			ВнКонтекст.СписокЕдиниц.ТекущаяСтрока(Позиция);
		КонецЕсли;
		ВнКонтекст.Форма.кИзменитьЕдиницу.Доступность(1);
		ВнКонтекст.Форма.кУдалитьЕдиницу.Доступность(1);
		
		Если Единица = ВнКонтекст.БазоваяЕдиница Тогда
			// редактировали базовую единицу
			// обновим значение штрихкода
			ВнКонтекст.Штрихкод = Штрихкод;
		КонецЕсли;

		ВнКонтекст.Форма.Обновить();
	КонецЕсли;

КонецПроцедуры

// ===============================
// Пареметры:
//	Закрывать - Указывает на то, что после записи, форму нужно закрыть
// Описание:
// В данном модуле нет процедуры ПриЗаписи
// Эта процедура выполняет всю проверку, перед записью элемента.
// Если проверка успешно пройдена, то элемент записывается.
Процедура ПриЗаписиЭлемента(Закрывать=0,Спросить = 0)
	// по умолчанию при записи не закрывать и не задавать вопросов
	Перем ЕдиницыТовара;
	Перем НашлиЭлемент;
	Перем НеЗаписывать;
	Перем Описание, ФлагОшибки;
	Перем Ответ;
	
	Если Спросить<>0 Тогда
	    Ответ = Вопрос("Сохранить элемент?",3);
		
		Если Ответ = 2 Тогда
			// нажали кнопку отмена
			Возврат;
		ИначеЕсли Ответ = 7 Тогда
			// нажали кнопку отмена
			Форма.Закрыть(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;

	// проверим заполнение обязательных полей
	ФлагОшибки = 1;
	Описание = "Не заполнено поле ";
	Если ПустоеЗначение(Единица)=1 Тогда
		Описание = Описание + "'Единица измерения'";
	ИначеЕсли ПустоеЗначение(Коэффициент)=1 Тогда
		Описание = Описание + "'Коэффициент'";
	ИначеЕсли ПроверкаУникальностиШтрихкода() = 0 Тогда
		Описание = "Штрихкод не уникален"
	Иначе
		ФлагОшибки = 0;
	КонецЕсли;
	
	Если ФлагОшибки = 1 Тогда
	    Предупреждение(Описание);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	НашлиЭлемент = 0;
	
	Если (Выбран() = 0) Тогда
		// только для нового товара
		// для сохраненного товара проверять не нужно, т.к. 
		// после сохранения нельзя изменить поле "Единица"
		ЕдиницыТовара = СоздатьОбъект("Справочник.Единицы");
		ЕдиницыТовара.ИспользоватьВладельца(ВнКонтекст.ТекущийЭлемент());
		ЕдиницыТовара.ВыбратьЭлементы();
		Пока ЕдиницыТовара.ПолучитьЭлемент()=1 Цикл
			Если ЕдиницыТовара.Единица = Единица Тогда
				// есть уже такая единица измерения
	            // нашли элемент
				НашлиЭлемент = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	
		// записываем новый  товар
		Если (НашлиЭлемент = 1) Тогда
			// нашли единицу с таким же типом
			Если (ЕдиницыТовара.ПометкаУдаления() = 1) Тогда
				// востанавливаем помеченный на удаление
				Попытка
					ЕдиницыТовара.СнятьПометкуУдаления();
				Исключение   
					Предупреждение(ОписаниеОшибки());
					Возврат;
				КонецПопытки;
				ЕдиницыТовара.Коэффициент = Коэффициент;
				ЕдиницыТовара.ШтрихКод = ШтрихКод;
				ЕдиницыТовара.Записать();
    			// форму закрываем в любом случае
				Форма.Закрыть(0);
				Если Закрывать<>0 Тогда
				    // добавляем в список
					ДобавитьВСписок(ЕдиницыТовара);
				Иначе
					// открываем форму
					Параметр = ВнКонтекст;
					ОткрытьФорму(ЕдиницыТовара.ТекущийЭлемент(),Параметр);
				КонецЕсли;
			Иначе
				// она не была восстановлена (снята пометка удаления)
				Предупреждение("Единица измерения '"+Единица+"' уже имеется");
				
			КонецЕсли;
			// если нашли, то не записываем
			Возврат;
		КонецЕсли;
		
	КонецЕсли;

	Наименование = Единица.Наименование;
	
	Попытка
		Записать();
	Исключение
		Предупреждение(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Если Закрывать<>0 Тогда
		// закрываем форму
		ДобавитьВСписок(ТекущийЭлемент());
	    Форма.Закрыть(0);
	КонецЕсли;
КонецПроцедуры	// ПриЗаписиЭлемента

// ===============================
Процедура ЗакрытьФорму()
	
	Если  Модифицированность() = 1 Тогда
	    // Что-то меняли
		ПриЗаписиЭлемента(1,1);
	Иначе
		Форма.Закрыть(0);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПечатьЭтикетки()
	// печать этикетки использует компонент ActiveX
	// разработки фирмы Shenk&Horn - ActiveBarcode версии 3.50
	Если ПустоеЗначение(ШтрихКод)=1 Тогда
	    Предупреждение("Не задан штрих код товара");
	    Возврат;
	КонецЕсли;

	Попытка
		АВС=СоздатьОбъект("BARCODE.BarcodeCtrl.1");
	Исключение
		Предупреждение(ОписаниеОшибки()+РазделительСтрок
					+"Компонент ActiveBarcode не установлен на данном компьютере!"+РазделительСтрок
					+"Порядок установки компоненты ActiveBarcode описан в документации.");
	    Возврат;
	КонецПопытки;
	АВС=0;

	//  Создание Таблицы для выходного отчета
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Этикетка");

	ПечНаименование=Владелец.Наименование+"; "+Единица;
	ПечШтрихКод=Строка(ШтрихКод);
	Таб.ВывестиСекцию("Товар|Этикетка");

	//Вызов выходного отчета в окно просмотра и редактирования.
	Таб.Опции(0,0,0,0,ПарСтрСпр);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Этикетка","");
	ВыбТовар=0;
КонецПроцедуры

// ===============================
Процедура СформироватьШтрихКод() //Формирование внутреннего шрих кода
	Перем Позиция;
	Перем СписокЕдиниц, Единицы;
	
	Если Единица = ВнКонтекст.БазоваяЕдиница Тогда
		Предупреждение("Штрихкод базовой единицы"+РазделительСтрок+
		               "редактируется в форме сведений о товаре");
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ШтрихКод)=0 Тогда
		Если Вопрос("Штирхкод уже задан. Переписать?", 4 )<>6 Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СписокЕдиниц = СоздатьОбъект("СписокЗначений");

	Единицы = СоздатьОбъект("Справочник.Единицы");
	Единицы.ИспользоватьВладельца(Владелец);
	Единицы.ВыбратьЭлементы();
	Пока Единицы.ПолучитьЭлемент()=1 Цикл
		Если Единицы.ПометкаУдаления() = 0 Тогда
			СписокЕдиниц.ДобавитьЗначение(Единицы.ТекущийЭлемент());
		КонецЕсли;
	КонецЦикла;

	Если Выбран()=0 Тогда
		// еще не записан
		Позиция = СписокЕдиниц.РазмерСписка()+1;
	Иначе
		Позиция = СписокЕдиниц.НайтиЗначение(ТекущийЭлемент());
	КонецЕсли;

	Префикс = "21";
	ШтрихКод=глСформироватьEAN13(Строка(Префикс)+глДополнитьСтроку(Строка(Владелец.Код),"0",8,1)
					+глДополнитьСтроку(Строка(Позиция),"0",2,1));
КонецПроцедуры                   
				
//-----------------------
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)	// Предопределенная процедура
	Если РаботаСоСканеромШтрихКода=2 Тогда
		Если Событие="BarCodeValue" Тогда
			глУстановкаШтрихКода(Контекст,Данные);
		КонецЕсли;
		СканерШтрихКода.ПосылкаДанных=1;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ВводНового()	// Предопределенная процедура
	Наименование = Владелец.БазоваяЕдиница.ПолнНаименование;
	Единица = Владелец.БазоваяЕдиница;
	ШтрихКод = ?(ПустоеЗначение(Владелец.ШтрихКод)=1,"",Владелец.ШтрихКод);
	Коэффициент = 1;
	ВводНового = 1;
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()	// Предопределенная процедура
	
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
		// если передали через параметр контекст форма товара
		ВнКонтекст=Форма.Параметр;
	Иначе
		ВнКонтекст = Владелец;
	КонецЕсли;
	
	Если Выбран() = 1 Тогда
		// только для сохраненного элемента
		Если ПустоеЗначение(Единица) = 0 Тогда
		    // только если Единица заполнено
			Форма.Единица.Доступность(0);
		КонецЕсли;
		Если Единица = ВнКонтекст.БазоваяЕдиница Тогда
			// нельзя менять коэффициент базовой единицы измерения
			Форма.Коэффициент.Доступность(0);
			Форма.Штрихкод.Доступность(0);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()	// Предопределенная процедура
	Если Выбран()=1 Тогда
		ДобавитьВСписок(ТекущийЭлемент());
	КонецЕсли;
КонецПроцедуры	// ПриЗакрытии

// ===============================
Процедура ПриЗаписи()	// Предопределенная процедура
	ПриЗаписиЭлемента();
КонецПроцедуры	// ПриЗаписи
