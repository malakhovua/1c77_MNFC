// ===============================
Процедура ПоискЭлемента()
	Перем СписокПараметров;
	Перем СписокРеквизитов,СтрокаСпискаРеквизитов;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("ТМЦ","Вид");
	СписокПараметров.ДобавитьЗначение(Контекст,"Контекст");
	СписокПараметров.ДобавитьЗначение("Нет","ПоказыватьОстаток");
	
	// добавим реквизиты для поиска (здесь только по артикулу)
	СписокРеквизитов=СоздатьОбъект("СписокЗначений");
		
	СтрокаСпискаРеквизитов = ЗначениеВСтрокуВнутр(СписокРеквизитов);
	СписокПараметров.ДобавитьЗначение(СтрокаСпискаРеквизитов,"ДобАтрибуты");
	
	ОткрытьФормуМодально("Обработка.ПоискЭлемента",СписокПараметров);
	
	Если ТипЗначенияСтр(СписокПараметров)="Справочник" Тогда
	    АктивизироватьОбъект(СписокПараметров);
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()	// Предопределенная процедура
	Перем Парам;
	
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам) = "СписокЗначений" Тогда
	    // Передали список значений. по которому нужно 
		// установить фильтр
		// отключаем панель инструментов
		Форма.ПанельИнструментов(0);
		ИерархическийСписок(0,0);
		ИспользоватьСписокЭлементов(Парам);
		Форма.Заголовок("Импортируемая номенклатура");
	Иначе
		Если глПроверяемыеНаборы.НайтиЗначение(НазваниеНабораПрав()) = 1 Тогда
			ИерархическийСписок(1,0);
		Иначе			
			ИерархическийСписок(1,1);
		КонецЕсли;
		
		Если ТипЗначенияСтр(Парам) = "Справочник" Тогда
			Если Парам.ЭтоГруппа() = 1 Тогда
			    ИспользоватьРодителя(Парам);
			КонецЕсли;
		ИначеЕсли ТипЗначенияСтр(Парам) = "Строка" Тогда
			Если Парам = "ИзПриемки" Тогда
				ВыборГруппы(1);
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
	
	Если ТипЗначенияСтр(глВыборИзЗаказа) = "Справочник" Тогда
		ИспользоватьРодителя(глВыборИзЗаказа);
		глВыборИзЗаказа = 0;
	ИначеЕсли ТипЗначенияСтр(глВыборИзЗаказа) = "Число" Тогда		
		Если глВыборИзЗаказа = 1 Тогда
		    СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
			Если СпрТМЦ.НайтиПоНаименованию("Сырье и материалы", 0) = 1 Тогда
			    Если СпрТМЦ.ЭтоГруппа() = 1 Тогда
			        ИспользоватьРодителя(СпрТМЦ.ТекущийЭлемент());
			    КонецЕсли;
			КонецЕсли;		
		    глВыборИзЗаказа = 0;
		ИначеЕсли глВыборИзЗаказа = 2 Тогда	//--- выбор фарша из  задания на производство		
			СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
			Если СпрТМЦ.НайтиПоКоду("24813", 0) = 1 Тогда
			    Если СпрТМЦ.ЭтоГруппа() = 1 Тогда
			        ИспользоватьРодителя(СпрТМЦ.ТекущийЭлемент());
			    КонецЕсли;
			КонецЕсли;		
		    глВыборИзЗаказа = 0;
		КонецЕсли;
	КонецЕсли;	
	
	Если ПустоеЗначение(глТМЦДляПозиционированияПриВыбореВНормах) = 0 Тогда
		АктивизироватьОбъект(глТМЦДляПозиционированияПриВыбореВНормах);
		глТМЦДляПозиционированияПриВыбореВНормах = "";
	КонецЕсли;
	
	глУстановитьНачальнуюГруппуПользователя(Контекст, глГруппыДоступаПродукции);
КонецПроцедуры

// ===============================
Процедура ПриНачалеРедактированияСтроки()
	// практически все элементы справочника имею много реквизитов.
	// поэтому редактировать элемент или создавать новый в списке
	// является нецелесообразным.
	СтатусВозврата(0);
КонецПроцедуры

// ===============================
Процедура ПриВводеСтроки()
	// практически все элементы справочника имею много реквизитов.
	// поэтому редактировать элемент или создавать новый в списке
	// является нецелесообразным.
	СтатусВозврата(0);
КонецПроцедуры

Процедура ПриВыбореРодителя(Элт)
	СтатусВозврата(глПроверитьДоступностьГруппы(Элт));
	Если глПользователь.НакладыватьФильтрыПриОткрытии = 1 Тогда
		СтатусВозврата(глГруппыДоступаПродукции.Принадлежит(Элт));
	КонецЕсли;	
КонецПроцедуры

Процедура ПоказатьИсторию()
	ТекЭлемент = ТекущийЭлемент();
	Если ПустоеЗначение(ТекЭлемент) = 1 Тогда
	     Предупреждение("Не выбрано ТМЦ.");
		Возврат;
	КонецЕсли;

	Если ТекЭлемент.ЭтоГруппа() = 1 Тогда
	     Предупреждение("Выберите элемент, а не группу.");
		Возврат;
	КонецЕсли;

	глРедактироватьИсториюЗначений(Контекст,
	"",
	"История периодических реквизитов ("+ТекущийЭлемент()+")");
КонецПроцедуры // ПоказатьИсторию

//====================================================================== //--- УМК Сандомирский В.Ю, закоментил (22.09.14)
Функция ВернутьИру()
	Если ПустоеЗначение(ТекущийЭлемент()) <> 1 Тогда
		
		Возврат ТекущийЭлемент().фИра.Получить(РабочаяДата());
		
	КонецЕсли;
КонецФункции // ВернутьИру()