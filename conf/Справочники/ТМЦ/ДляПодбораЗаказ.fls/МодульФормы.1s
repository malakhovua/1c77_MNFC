//******************************************************************************
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
Перем ВнКонтекст;			// контекст формы документа, который открыл эту форму
Перем МожноДобавлятьНабор;
Перем ПеренеслиВдокумент;
Перем ОстаткиТоваров;
Перем СтарыйТовар;
Перем ИнформационнаяСтрока;
Перем ОстТоваров,РезТоваров,ВремРегистры;
Перем КатегорияЦен;
Перем РеквТовар;

Перем RS; //--- УМК Сандомирский В.Ю. (19.08.14) прямые запросы SQL

//======================================================================
// "СЛУЖЕБНЫЕ" ПРОЦЕДУРЫ И ФУНКЦИИ

//======================================================================
Функция Сформировать_информационную_строку()
	СтрокаЦены="";

	ТекТовар = ТекущийЭлемент();
	Если (ТекТовар.ЭтоГруппа()=0) И ((ПоказатьОстаткиЦену=0) ИЛИ (ИерархическийСписок()=0)) Тогда
		Если СтарыйТовар<>ТекТовар Тогда
			// инф. строку показываем в случае, если не показываем колонки
			
			Если ПустоеЗначение(КатегорияЦен)=0 Тогда
				ЭлЦена = глВернутьЦену(ТекТовар, КатегорияЦен);
				Если ПустоеЗначение(ЭлЦена)=0 Тогда
					ВремЕдиница	= ЭлЦена.Единица.Получить(ВнКонтекст.ДатаДок);
				    ВремЦена	= ЭлЦена.Цена.Получить(внКонтекст.ДатаДок);
					Если ВремЕдиница<>ТекТовар.ЕдиницаПоУмолчанию Тогда
					    ВремЦена = ?(ВремЕдиница.Коэффициент=0,ВремЦена*ТекТовар.ЕдиницаПоУмолчанию.Коэффициент/1,ВремЦена*ТекТовар.ЕдиницаПоУмолчанию.Коэффициент/ВремЕдиница.Коэффициент);
					КонецЕсли;
					ВремВалюта = ЭлЦена.Валюта.Получить(внКонтекст.ДатаДок);
					СтрокаЦены = ""+КатегорияЦен+" цена "+СокрЛП(Формат(ВремЦена,глФорматСуммы))+" "+ВремВалюта.Кратко+";  ";
				Иначе
					СтрокаЦены = ""+КатегорияЦен+" цена не задана;  ";
				КонецЕсли;
			КонецЕсли;

			ТекТовар = ТекущийЭлемент();
			ВремРезерв = РезТоваров.СводныйОстаток(Фирма,ТекТовар,,,,"Резерв");	
			Если пустоеЗначение(Склад)=0 Тогда
				ВремКолво = ОстТоваров.СводныйОстаток(Фирма,ТекТовар,Склад,,"ОстатокТовара");
			Иначе
				ВремКолво = ОстТоваров.СводныйОстаток(Фирма,ТекТовар,,,"ОстатокТовара");
			КонецЕсли;
			Если ТекТовар.ЕдиницаПоУмолчанию.Коэффициент > 1 Тогда
				ВремКолво = ВремКолво / ТекТовар.ЕдиницаПоУмолчанию.Коэффициент;
			КонецЕсли;
			ИнформационнаяСтрока = СтрокаЦены+
			                       "Остаток: "+СокрЛП(Формат(ВремКолво, глФорматКоличестваВформах))+" "+ТекТовар.ЕдиницаПоУмолчанию.Единица+"; "+
			                       "Резерв: "+СокрЛП(Формат(ВремРезерв, глФорматКоличестваВформах))+" "+ТекТовар.ЕдиницаПоУмолчанию.Единица;
			СтарыйТовар=ТекТовар;
		КонецЕсли;
	Иначе 
		СтарыйТовар = ПолучитьПустоеЗначение("Справочник.ТМЦ");
		ИнформационнаяСтрока="";
	КонецЕсли;
	
	Возврат ИнформационнаяСтрока;
КонецФункции

//======================================================================
Процедура ЗаполнитьКЭШ(Группа)
	Перем СписокТоваров, СпрТовары;

	ОстаткиТоваров.УдалитьСтроки();
	
	// Получим список товаров группы
	СписокТоваров = СоздатьОбъект("СписокЗначений");
	СпрТовары = СоздатьОбъект("Справочник.ТМЦ");
	СпрТовары.ИспользоватьРодителя(Группа);
	СпрТовары.ВключатьПодчиненные(0);
	СпрТовары.ВыбратьЭлементы();
	Пока СпрТовары.ПолучитьЭлемент()=1 Цикл
	    ОстаткиТоваров.НоваяСтрока();
		ОстаткиТоваров.Элемент		= СпрТовары.ТекущийЭлемент();
		Если СпрТовары.ЭтоГруппа() = 1 тогда
			Продолжить;
		КонецЕсли;	
		Если ПустоеЗначение(КатегорияЦен)=0 Тогда
			ВремЦена = глВернутьЦену(СпрТовары.ТекущийЭлемент(),КатегорияЦен);
			Если ПустоеЗначение(ВремЦена)=0 Тогда
				ЕдиницаЦены = ВремЦена.Единица.Получить(внКонтекст.ДатаДок);
			    ОстаткиТоваров.Цена = ВремЦена.Цена.Получить(внКонтекст.ДатаДок);
				Если ЕдиницаЦены<>СпрТовары.ЕдиницаПоУмолчанию Тогда
				    ОстаткиТоваров.Цена = ?(ЕдиницаЦены.Коэффициент=0,ОстаткиТоваров.Цена*СпрТовары.ЕдиницаПоУмолчанию.Коэффициент/1,ОстаткиТоваров.Цена*СпрТовары.ЕдиницаПоУмолчанию.Коэффициент/ЕдиницаЦены.Коэффициент);
				КонецЕсли;
				ОстаткиТоваров.Валюта = ВремЦена.Валюта.Получить(внКонтекст.ДатаДок);
			КонецЕсли;
		КонецЕсли;
		
		Если СпрТовары.ТекущийЭлемент().ПометкаУдаления() = 1 Тогда //--- УМК Сандомирский В,Ю. оптимизация не проверять остаток у помеченых
			Продолжить;
		КонецЕсли;
		
		Если Склад.Выбран()=1 Тогда
			ОстаткиТоваров.Количество = ОстТоваров.Остаток(Фирма,СпрТовары.ТекущийЭлемент(),Склад,,"ОстатокТовара");
		Иначе
			ОстаткиТоваров.Количество = ОстТоваров.СводныйОстаток(Фирма,СпрТовары.ТекущийЭлемент(),,,"ОстатокТовара");
		КонецЕсли;        
		ОстаткиТоваров.Резерв = РезТоваров.СводныйОстаток(Фирма,СпрТовары.ТекущийЭлемент(),,,,"Резерв");
	КонецЦикла;
КонецПроцедуры

//======================================================================
Функция ПолучитьЗначениеКолонки(Колонка)
	
	Если ТекущийЭлемент().ПометкаУдаления() = 1 Тогда //--- УМК Сандомирский В.Ю. (19.08.14) оптимизация
		Возврат 0;
	КонецЕсли;
	
	Если Константа.УМК_ИспользоватьПрямыеЗапросы = Перечисление.ДаНет.Да Тогда //--- УМК Сандомирский В.Ю. (19.08.14) прямые запросы SQL
		RS.УстПараметр(4, ТекущийЭлемент());
		Возврат RS.ВыполнитьСкалярный();
	КонецЕсли; //... УМК Сандомирский В.Ю. (19.08.14) прямые запросы SQL
	
	Если (ПоказатьОстаткиЦену=0) ИЛИ (ИерархическийСписок()=0) ИЛИ (ТекущийЭлемент().ЭтоГруппа()=1) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекТовар = ТекущийЭлемент();
	Поз=0;
	Если ОстаткиТоваров.НайтиЗначение(ТекТовар,Поз,"Элемент")=0 Тогда
	    // Не нашли. Вернем пустую строку
		Возврат "";
	КонецЕсли;
	
    Рез=ОстаткиТоваров.ПолучитьЗначение(Поз,Колонка);
	Если Колонка="Количество" Тогда
	    Возврат СокрЛ(Формат(Рез,глФорматКоличестваВформах));
	ИначеЕсли Колонка="Резерв" Тогда
	    Возврат СокрЛ(Формат(Рез,глФорматКоличестваВформах));
	ИначеЕсли Колонка="Цена" Тогда
		Возврат СокрЛ(Формат(Рез,глФорматСуммы));
	ИначеЕсли Колонка="Валюта" Тогда
		Возврат Рез;
	КонецЕсли;
	Возврат "";
КонецФункции

//======================================================================
Процедура УправлениеКолонками()
	Форма.Остаток.Видимость(ПоказатьОстаткиЦену);
	Форма.Резерв.Видимость(ПоказатьОстаткиЦену);	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		Форма.Цена.Видимость(0);
		Форма.Валюта.Видимость(0);
	Иначе
		Форма.Цена.Видимость(ПоказатьОстаткиЦену);
		Форма.Валюта.Видимость(ПоказатьОстаткиЦену);
	КонецЕсли;
	
	Если Константа.УМК_ИспользоватьПрямыеЗапросы <> Перечисление.ДаНет.Да Тогда //--- УМК Сандомирский В.Ю. (19.08.14) прямые запросы SQL 
		Если НЕ((ПоказатьОстаткиЦену=0) ИЛИ (ИерархическийСписок()=0)) Тогда
		    ЗаполнитьКЭШ(Родитель);
		КонецЕсли;
	КонецЕсли;
	
	СтарыйТовар = ПолучитьПустоеЗначение("Справочник.ТМЦ");
	Форма.Обновить()
КонецПроцедуры

//======================================================================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	// Процедура разбирает штрих-код, считанный сканером
	// и заполняет строки накладной
	Перем Упаковка,ТекКоличество;

	Если РаботаСоСканеромШтрихКода<>2 Тогда
		Возврат;
	КонецЕсли;
	
	Упаковка=0;
	Если Событие="BarCodeValue"	Тогда
		СканерШтрихКода.ПосылкаДанных = 1;
        Если Форма.ТолькоПросмотр() = 1 Тогда
        	// форма открыта только для просмотра
			Возврат;
        КонецЕсли;
		// Определение типа штрих-кода
		Если ШтрихКодИмеетПрефикс=1 Тогда
			Если Найти("MPJS",Лев(Данные,1))<>0 Тогда
				// Штрих-код определяет товар
				Данные=Сред(Данные,2,СтрДлина(Данные)-1);
			Иначе
				Сообщить("Формат считанного штрих-кода не предназначен для товаров");
			КонецЕсли;
		КонецЕсли;
		
		Тов=СоздатьОбъект("Справочник.ТМЦ");
		Упак=СоздатьОбъект("Справочник.Единицы");
	
		Лев2 = Лев(Данные,2);
		Если Лев2 = "22" Тогда
			// Используется свой внутренний штрих-код товара
			// Штрих-код построен по коду товара и весу
			Если Тов.НайтиПоКоду(Сред(Данные,3,5))=0 Тогда
				Сообщить("ТМЦ с кодом "+Сред(Данные,3,5)+" не найден");
				Возврат;
			КонецЕсли;
			Упаковка = Тов.ЕдиницаПоУмолчанию;
		Иначе
			// Используется основной штрих-код товара
			// или свой внутренний штрих-код товара с префиксом "20,21"
			Если Упак.НайтиПоРеквизиту("ШтрихКод",Данные,1)=0 Тогда
				Сообщить("ТМЦ со штрих кодом "+Данные+" не найден");
				Возврат;
			КонецЕсли;
			Упаковка=Упак.ТекущийЭлемент();
			Тов=Упаковка.Владелец;
		КонецЕсли;
	
		Поз=0;
		Нашли=ТаблицаПодбора.НайтиЗначение(Тов,Поз,"Элемент");
		
		ТекКоличество=0;
		Если Нашли=1 Тогда
		    ТекКоличество=ТаблицаПодбора.ПолучитьЗначение(Поз,"Количество");
		КонецЕсли;
		
		Колво=1;
		Если ВвестиЧисло(Колво,"Количество товара '"+Тов+"'",10,3)=0 Тогда
			Возврат;
		КонецЕсли;
		
		Если Нашли=0 Тогда
			// товар вносим первый раз
			ТаблицаПодбора.НоваяСтрока();
			ТаблицаПодбора.Элемент=Тов.ТекущийЭлемент();
			ТаблицаПодбора.Плюс=1;
			ТаблицаПодбора.Минус=2;
		Иначе
			ТаблицаПодбора.ТекущаяСтрока(Поз);
		КонецЕсли;
		ТаблицаПодбора.Количество=ТекКоличество+Колво;
	КонецЕсли;
КонецПроцедуры

//======================================================================
// Назначение: 
// добавляет строку в таблицу значений
Процедура ДобавитьСтроку()
	ТаблицаПодбора.НоваяСтрока();
	ТаблицаПодбора.Плюс=1;
	ТаблицаПодбора.Минус=2;
КонецПроцедуры            

Процедура СпроситьУпаковку(ТекУп, ДобТовар)
	Если фУп = 1 Тогда  //--- УМК Сандомирский В.Ю. (14.11.14)
		СпВидыУпаковкиЛокальный = СоздатьОбъект("СписокЗначений");
		
		Если ДобТовар.НетБезУпаковки = 0 Тогда  						// --- УМК Сандомирский В.Ю. (10.11.14)
			СпВидыУпаковкиЛокальный.ДобавитьЗначение(НетУп);
		КонецЕсли;
		
		// --- Вид упаковки по умолчанию
		Если ПустоеЗначение(ДобТовар.ВидУпаковкиПоУмолчанию) <> 1 Тогда
			СпВидыУпаковкиЛокальный.ДобавитьЗначение(ДобТовар.ВидУпаковкиПоУмолчанию);
		КонецЕсли;
		
		ТекРазрешенныеВидыУпаковки = СоздатьОбъект("Справочник.УМК_РазрешенныеВидыУпаковкиТМЦ");	
		ТекРазрешенныеВидыУпаковки.ИспользоватьВладельца(ДобТовар.ТекущийЭлемент());	
		ТекРазрешенныеВидыУпаковки.ВыбратьЭлементы();
		Пока ТекРазрешенныеВидыУпаковки.ПолучитьЭлемент() = 1 Цикл
			Если (ТекРазрешенныеВидыУпаковки.ПометкаУдаления() = 1) ИЛИ ((ТекРазрешенныеВидыУпаковки.НеВыгружатьВЗаказник = 1) И (фВсеВУП = 0)) Тогда
				Продолжить;
			КонецЕсли;
				
			Если ДобТовар.ВидУпаковкиПоУмолчанию = ТекРазрешенныеВидыУпаковки.ТекущийЭлемент().ВидУпаковки Тогда // --- пропускаем упаковки по умолчанию
				Продолжить;
			КонецЕсли;
			
			СпВидыУпаковкиЛокальный.ДобавитьЗначение(ТекРазрешенныеВидыУпаковки.ТекущийЭлемент().ВидУпаковки);	// --- из подчиненного справочника	 
			
		КонецЦикла;
		
		СтрВидУпаковки = "";
		Если СпВидыУпаковкиЛокальный.ВыбратьЗначение(СтрВидУпаковки,,,,0) = 1 Тогда
		    ТекУп = СтрВидУпаковки;
		Иначе
			Возврат;
		КонецЕсли;		
	КонецЕсли;	
КонецПроцедуры

//======================================================================
Процедура СпроситьКГШт(ТекКг, ТекШт)
	Если (фКг = 1) И (фШт = 1) Тогда
		СпКгШт = СоздатьОбъект("СписокЗначений");
		СпКгШт.ДобавитьЗначение("КИЛОГРАММЫ");	
		СпКгШт.ДобавитьЗначение("ШТУКИ");
		ФлагКгШт = "";
		Если СпКгШт.ВыбратьЗначение(ФлагКгШт,,,,0) = 1 Тогда 
			Если ФлагКгШт = "КИЛОГРАММЫ" Тогда
				Если ВвестиЧисло(ТекКг,"  -=  КИЛОГРАММЫ  =- ",10,3)=0 Тогда
					Возврат;
				КонецЕсли;
				
				ТекШт =0;
			ИначеЕсли ФлагКгШт = "ШТУКИ" Тогда	
				Если ВвестиЧисло(ТекШт,"  -=  ШТУКИ  =- ",10,0)=0 Тогда
					Возврат;
				КонецЕсли;
				
				ТекКг =0;
			КонецЕсли;		
		Иначе
			Возврат;
		КонецЕсли;	
		
	Иначе
		
		Если фКг = 1 Тогда  //--- УМК Сандомирский В.Ю. (14.11.14)
			Если ВвестиЧисло(ТекКг, ?(ВнКонтекст.Вид() = "Инвентаризация", "Ед", "  -=  КИЛОГРАММЫ  =- "),10,3)=0 Тогда
				Возврат;
			КонецЕсли;
		Иначе
			ТекКг =0;
		КонецЕсли;
		
		Если фШт = 1 Тогда  //--- УМК Сандомирский В.Ю. (14.11.14)
			Если ВвестиЧисло(ТекШт,"  -=  ШТУКИ  =- ",10,0)=0 Тогда
				Возврат;
			КонецЕсли;
		Иначе
			ТекШт =0;
		КонецЕсли;
		
	КонецЕсли;	
КонецПроцедуры // 

//====================================================================== //--- УМК Сандомирский В.Ю, (14.11.14) 
Процедура ДобавитьТовар(ДобТовар)
	// отключаем стандартный механизм подбора
	СтатусВозврата(0);

	НомСтр=0;
	Если (ВнКонтекст.Вид() <> "Заказ") И (ВнКонтекст.Вид() <> "РасходнаяНакладная") И (ВнКонтекст.Вид() <> "УМК_ЗаказКлиента") И (ВнКонтекст.Вид() <> "Инвентаризация") Тогда  //--- УМК Сандомирский В.Ю. (14.11.14)
		ТаблицаПодбора.НайтиЗначение(ДобТовар,НомСтр,"Элемент");
		Если НомСтр<>0 Тогда
			ТаблицаПодбора.ПолучитьСтрокуПоНомеру(НомСтр);
		КонецЕсли;	    
	КонецЕсли;

	ТекКг =0;
	ТекШт =0;
	ТекУп = "";	
	
	
	Если фУпПервая = 1 Тогда
		СпВидыУпаковкиЛокальный = СоздатьОбъект("СписокЗначений");
		СпроситьУпаковку(ТекУп, ДобТовар);
		СпроситьКГШт(ТекКг, ТекШт);
	Иначе
		СпроситьКГШт(ТекКг, ТекШт);
		СпроситьУпаковку(ТекУп, ДобТовар);
	КонецЕсли;

	
	Если (ТекКг <= 0) И (ТекШт <= 0)  Тогда	//--- УМК Сандомирский В.Ю. (14.11.14)
		Возврат;
	КонецЕсли;
	
	Если НомСтр=0 Тогда
		ДобавитьСтроку();
		ТаблицаПодбора.Элемент		= ДобТовар;
		
		ТаблицаПодбора.Кг	= ТекКг;	//--- УМК Сандомирский В.Ю. (14.11.14)
		ТаблицаПодбора.Шт	= ТекШт;	//--- УМК Сандомирский В.Ю. (14.11.14)
		ТаблицаПодбора.Уп	= ТекУп;	//--- УМК Сандомирский В.Ю. (14.11.14)
		
		Если ВнКонтекст.Вид() = "Заказ" Тогда
			НЗ = глВыбратьНормыЗатрат(ДобТовар);
			Если НЗ <> 0 Тогда
			    ТаблицаПодбора.НормыЗатрат = НЗ;
			Иначе
				ТаблицаПодбора.УдалитьСтроку(ТаблицаПодбора.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТаблицаПодбора.Кг = ТаблицаПодбора.Кг + ТекКг;
	КонецЕсли;

	//Если ТаблицаПодбора.Кг=0 Тогда
	//    ТаблицаПодбора.УдалитьСтроку();
	//Иначе
	//	ТаблицаПодбора.ТекущаяСтрока(ТаблицаПодбора.НомерСтроки);
	//КонецЕсли;
	ТаблицаПодбора.ТекущаяСтрока(ТаблицаПодбора.КоличествоСтрок()); //--- УМК Сандомирский В.Ю. (21.11.14) позиционируемсся напоследнюю строку подбора
	
КонецПроцедуры

//======================================================================
// Назначение: 
// активизирует в документе процедуру ОбработкаПодбора и передает ей в качестве
// выбранного значения таблицу значений
Процедура Вдокумент()
	// вызываем обработку подбора в документе
	ПеренеслиВдокумент=Да;
	Если ПустоеЗначение(Склад)=0 Тогда
		Если глЕстьРеквизитШапки("МестоХранения",ВнКонтекст.Вид())=Да Тогда
			Если ВнКонтекст.МестоХранения<>Склад Тогда
				Если Вопрос("В форме подбора выбран склад, не совпадающий с установленным в документе.
				| Установить в документе склад """+Склад+"""?","Да+Нет")="Да" Тогда
					ВнКонтекст.МестоХранения=Склад;
					//ВнКонтекст.Форма.ТекстФирмы.Заголовок(глСтрокаФирмы(ВнКонтекст));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Форма.ВыполнитьВыбор(ТаблицаПодбора);
КонецПроцедуры

//======================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ФОРМУЛ ЭЛЕМЕНТОВ ДИАЛОГА

Процедура ПоискЭлемента()
	Перем СписокПараметров;
	Перем Флаг;
	Перем СписокРеквизитов,СтрокаСпискаРеквизитов;
	
	// нужно сделать настройку, в которой нужно
	// сохранять значение флага.
	// Пока задается константно.

	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("ТМЦ","ВидСправочника");
	СписокПараметров.ДобавитьЗначение("","КатегорияЦен");
	СписокПараметров.ДобавитьЗначение(Контекст,"КонтекстВнешнейФормы");
	
	// добавим реквизиты для поиска (здесь только по артикулу)
	СписокРеквизитов=СоздатьОбъект("СписокЗначений");
	СтрокаСпискаРеквизитов = ЗначениеВСтрокуВнутр(СписокРеквизитов);
	СписокПараметров.ДобавитьЗначение(СтрокаСпискаРеквизитов,"ДобАтрибуты");
	
	ОткрытьФормуМодально("Обработка.ПоискТовара",СписокПараметров);
	
КонецПроцедуры

//======================================================================
// Назначение: 
// открывает многострочную часть на выбранном в таблице значений товаре
Процедура Синхронизировать()
	Перем ТекТовар;
	Если ТаблицаПодбора.ТекущаяСтрока()>0 Тогда
	    ТекТовар = ТаблицаПодбора.ПолучитьЗначение(ТаблицаПодбора.ТекущаяСтрока(),"Элемент");
		АктивизироватьОбъект(ТекТовар);
	КонецЕсли;
КонецПроцедуры

//======================================================================
// Назначение: 
// удаляет текущую строку в таблице значений
Процедура УдалитьСтроку()
	Если ТаблицаПодбора.ТекущаяСтрока()>0 Тогда
	    ТаблицаПодбора.УдалитьСтроку(ТаблицаПодбора.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

//======================================================================
// Назначение: 
// очищает всю таблицу значений
Процедура Очистить()
	ТаблицаПодбора.УдалитьСтроки();
КонецПроцедуры

//======================================================================
// Назначение: 
// вызывается при двойном щелчке мыши и нажатии Enter на таблице значений. 
// Если текущая колонка:
//	"Плюс" - в ячейке в колонке Количество увеличиваем  значение на единицу
// 	"Минус" - уменьшаем на единицу
//	другая колонка - выводим диалог, в котором задаем значение
Процедура ВыбТоварВыбСтр()
	Если ТаблицаПодбора.КоличествоСтрок()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаПодбора.ТекущаяКолонка()="Плюс" Тогда
		ТаблицаПодбора.Количество=ТаблицаПодбора.Количество+1;
	ИначеЕсли ТаблицаПодбора.ТекущаяКолонка()="Минус" Тогда
		Если ТаблицаПодбора.Количество > 1 Тогда
			ТаблицаПодбора.Количество=ТаблицаПодбора.Количество-1;
		КонецЕсли;
	Иначе
		Кол=ТаблицаПодбора.Количество;
		Если ВвестиЧисло(Кол,"Введите количество",10,3)=0 Тогда
			Возврат;
		КонецЕсли;
		ТаблицаПодбора.Количество=Кол;
	КонецЕсли;
КонецПроцедуры	// ВыбТоварВыбСтр

//======================================================================
// Вызывается из элементов диалога Фирма и Склад
Процедура ИзменениеФильтра()
	
	Если Константа.УМК_ИспользоватьПрямыеЗапросы = Перечисление.ДаНет.Да Тогда //--- УМК Сандомирский В.Ю. (19.08.14) прямые запросы SQL 
		RS.УстПараметр(2, Фирма);
	    RS.УстПараметр(3, Склад);	
	Иначе
		ЗаполнитьКЭШ(Родитель);
		СтарыйТовар = ПолучитьПустоеЗначение("Справочник.ТМЦ");
		Форма.Обновить();	
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ИзмТипОст()
	ВремРегистры = СоздатьОбъект("Регистры");
	ОстТоваров = ВремРегистры.Остатки;
	РезТоваров = ВремРегистры.Резервы;
	Если ргТипОст = 2 Тогда
		Если внКонтекст.ДатаДок<ПолучитьДатуТА() Тогда
			ОстТоваров.ВременныйРасчет();
			РезТоваров.ВременныйРасчет();
			ВремРегистры.РассчитатьРегистрыПо(внКонтекст.ДатаДок);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//====================================================================== //--- УМК Сандомирский В.Ю. (14.11.14) 
Процедура ИзмФлажки()
	ТаблицаПодбора.ВидимостьКолонки("Кг", фКг,4);
	ТаблицаПодбора.ВидимостьКолонки("Шт", фШт,5);
	ТаблицаПодбора.ВидимостьКолонки("Уп", фУп,6);
КонецПроцедуры // ИзмфКг()

//======================================================================

// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

//======================================================================
Процедура ПриОткрытии()	// Предопределенная процедура
	ВнКонтекст = Форма.Параметр;
	// заполнение таблицы значений из документа
	Если ТипЗначенияСтр(ВнКонтекст)<>"ГрупповойКонтекст" Тогда
		// при открытии формы обязательно нужно передавать контекст
		СтатусВозврата(0);
		Предупреждение("Форма подбора открывается только из документа!");
		Возврат;
	КонецЕсли;
	
	Если глПроверяемыеНаборы.НайтиЗначение(НазваниеНабораПрав()) = 1 Тогда
		ИерархическийСписок(1,0);
	КонецЕсли;	

	ВидКонтекста = внКонтекст.Вид();
	
	Если глЕстьРеквизитШапки("Валюта",ВидКонтекста) = Да Тогда
		Если ПустоеЗначение(ВнКонтекст.Валюта) = 1 Тогда
			СтатусВозврата(0);
			Предупреждение("В документе не задана валюта!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СтарыйЭлемент = ПолучитьПустоеЗначение("Справочник.ТМЦ");

	Фирма = ВнКонтекст.Фирма;
	Если глЕстьРеквизитШапки("МестоХранения",ВидКонтекста)=Да Тогда
		Склад = ВнКонтекст.МестоХранения;
	КонецЕсли;
	
	МожноДобавлятьНабор=глЕстьРеквизитМнЧ("Набор",ВидКонтекста);
	
	Если глЕстьРеквизитМнЧ("Товар", ВидКонтекста) = Да Тогда
		РеквТовар = "Товар";
	ИначеЕсли глЕстьРеквизитМнЧ("ТМЦ", ВидКонтекста) = Да Тогда
		РеквТовар = "ТМЦ";
	ИначеЕсли глЕстьРеквизитМнЧ("Услуга",ВидКонтекста) = Да Тогда
		РеквТовар = "Услуга";
	КонецЕсли;        

	// инициализация таблицы значений
	ТаблицаПодбора.НоваяКолонка("Плюс","Число",1,,"+",4);
	ТаблицаПодбора.НоваяКолонка("Минус","Число",1,,"-",4);
	ТаблицаПодбора.НоваяКолонка("Элемент",,,,"Выбранный товар",25);
	ТаблицаПодбора.НоваяКолонка("ЭлементПрайса");
	//ТаблицаПодбора.НоваяКолонка("Количество",,,,"кг ",10,,2); 						//--- УМК Сандомирский В.Ю. (14.11.14) 
	ТаблицаПодбора.НоваяКолонка("Кг","Число",,,"кг.",10,,2); 							//--- УМК Сандомирский В.Ю. (14.11.14) 
	ТаблицаПодбора.НоваяКолонка("Шт","Число",,,"шт.",10,,2); 							//--- УМК Сандомирский В.Ю. (14.11.14) 
	ТаблицаПодбора.НоваяКолонка("Уп","Справочник.ВидыУпаковки",,,"упаковка"); 			//--- УМК Сандомирский В.Ю. (14.11.14) 
	
	ТаблицаПодбора.НоваяКолонка("ЭлементЦены",,,,"ЭлементЦены");
	ТаблицаПодбора.НоваяКолонка("НормыЗатрат","Документ.НормыЗатрат",,,"НЗ");

	ТаблицаПодбора.ВыводитьПиктограммы("Плюс");
	ТаблицаПодбора.ВыводитьПиктограммы("Минус");
	ТаблицаПодбора.ВидимостьКолонки("ЭлементПрайса,ЭлементЦены"+?(ВнКонтекст.Вид() = "Заказ", "", ",НормыЗатрат"),0);
	
	фКг =ВосстановитьЗначение("фКг");			 	//--- УМК Сандомирский В.Ю. (14.11.14)
	фШт =ВосстановитьЗначение("фШт"); 				//--- УМК Сандомирский В.Ю. (14.11.14)
	фУп =ВосстановитьЗначение("фУп"); 				//--- УМК Сандомирский В.Ю. (14.11.14)
	фУпПервая = ВосстановитьЗначение("фУпПервая");
	//ИзмФлажки();									//--- УМК Сандомирский В.Ю. (14.11.14)
		
	Если (фКг =0) И (фШт = 0) И (фУп = 0)  Тогда //--- УМК Сандомирский В.Ю. (17.11.14) --- первый раз заполняем все флажки
		фКг = 1;			 	
		фШт = 1; 				
		фУп = 1;
	КонецЕсли;
	

	// нужно для того, чтобы перед активизацией механизма подбора в документе
	// вызывалась предопределенная функция ПриВыбореСтроки
	Форма.ОбработкаВыбораСтроки(1);
	
	ПоказатьОстаткиЦену=ВосстановитьЗначение("Подбор_ПоказыватьОЦ");
	
	ИзмТипОст();
	Если (НазваниеНабораПрав() = "Заказ") Тогда
	    СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
		Если СпрТМЦ.НайтиПоНаименованию("Готовая продукция", 0) = 1 Тогда
		    Если СпрТМЦ.ЭтоГруппа() = 1 Тогда
		        ИспользоватьРодителя(СпрТМЦ.ТекущийЭлемент());
		    КонецЕсли;
		КонецЕсли;
	ИначеЕсли (внКонтекст.Вид() = "ЗаказПоставщику") Тогда
	    СпрТМЦ = СоздатьОбъект("Справочник.ТМЦ");
		Если СпрТМЦ.НайтиПоНаименованию("Сырье и материалы", 0) = 1 Тогда
		    Если СпрТМЦ.ЭтоГруппа() = 1 Тогда
		        ИспользоватьРодителя(СпрТМЦ.ТекущийЭлемент());
		    КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
	
	Если глЕстьРеквизитШапки("КатегорияЦен",ВидКонтекста)=Да Тогда
	    КатегорияЦен = внКонтекст.КатегорияЦен;
	ИначеЕсли ((ВидКонтекста = "РасходнаяРозничная") 
	ИЛИ (ВидКонтекста = "ВозвратРозница") 
	ИЛИ (ВидКонтекста = "ОтчетКА")) Тогда
	    КатегорияЦен = Константа.РозничнаяКатегорияЦен;
	Иначе
		КатегорияЦен = ПолучитьПустоеЗначение("Справочник.Цены");
	КонецЕсли;

	Если ВнКонтекст.Вид() = "Инвентаризация" Тогда
		фКг = 1;
		фШт = 0;
		фУп = ВнКонтекст.фУчитыватьВидУпаковки;
		ТаблицаПодбора.УстановитьПараметрыКолонки("Кг",,,,"Ед.");
	КонецЕсли;
	
	УправлениеКолонками();
	
	
	Если Константа.УМК_ИспользоватьПрямыеЗапросы = Перечисление.ДаНет.Да Тогда //--- УМК Сандомирский В.Ю. (19.08.14) прямые запросы SQL
		RS = СоздатьОбъект("ODBCRecordset");
		ТекстЗапроса = "         
    	|Declare @ДатаОст Char(8)  
		|Declare @Фирма Char(9)
    	|Declare @Склад Char(9)
    	|Declare @Товар Char(9)  
    	|Set @ДатаОст = ?
		|Set @Фирма = ?
  		|Set @Склад = ?
   		|Set @Товар = ?
    	|SELECT                       
    	|    SUM($Рег.ОстатокТовара) as ОстатокТовара
    	|FROM
    	|    $РегистрИтоги.Остатки as Рег
    	|WHERE
    	|    Рег.Period = CAST(@ДатаОст AS DateTime)
		|    AND $Рег.Фирма 		= @Фирма
    	|    AND $Рег.МестоХранения = @Склад
    	|    AND $Рег.ТМЦ 			= @Товар";
                      
	    RS.Подготовить(ТекстЗапроса);
	    RS.ДобПараметр(1,14,8,0);
	    RS.ДобПараметр(1,14,9,0);
		RS.ДобПараметр(1,14,9,0);
	    RS.ДобПараметр(1,14,9,0);
			
		Д = Формат(НачМесяца(РабочаяДата()),"ДГГГГММДД");
	    RS.УстПараметр(1, Д);
		RS.УстПараметр(2, Фирма);
	    RS.УстПараметр(3, Склад);	
	КонецЕсли;  //... УМК Сандомирский В.Ю. (19.08.14) прямые запросы SQL
	
	глУстановитьНачальнуюГруппуПользователя(Контекст, глГруппыДоступаПродукции);
КонецПроцедуры

//======================================================================
Процедура ПриПовторномОткрытии()
	Форма.Обновить();
КонецПроцедуры

//======================================================================
Процедура ПриНачалеРедактированияСтроки()
	// практически все элементы справочника имею много реквизитов.
	// поэтому редактировать элемент или создавать новый в списке
	// является нецелесообразным.
	СтатусВозврата(0);
КонецПроцедуры

//======================================================================
// вызывается при двойном щелчке мыши или нажатии на Enter
// в многострочной части.
Процедура ПриВыбореСтроки()
	Перем ТекТовар;
	// отключаем стандартный механизм подбора
	СтатусВозврата(0);
	ТекТовар = ТекущийЭлемент();
	Если (ТекТовар.ВидТМЦ = Перечисление.ВидыТМЦ.Набор) И 
	(МожноДобавлятьНабор = Нет) Тогда
		Предупреждение("Наборы в документ добавлять нельзя!");
		Возврат;
	КонецЕсли;
	Если глПроверкаТовараВДокументе(ВнКонтекст,ТекТовар) = Нет Тогда
		Возврат;	
	КонецЕсли;
	ДобавитьТовар(ТекТовар);
КонецПроцедуры

//======================================================================
Процедура ПриСменеИерархии(Способ)
	Если Константа.УМК_ИспользоватьПрямыеЗапросы <> Перечисление.ДаНет.Да Тогда //--- УМК Сандомирский В.Ю. (19.08.14) прямые запросы SQL 
		Если НЕ((ПоказатьОстаткиЦену=0) ИЛИ (Способ=0)) Тогда
			ЗаполнитьКЭШ(Родитель);
		КонецЕсли;
	КонецЕсли;
	СтарыйТовар = ПолучитьПустоеЗначение("Справочник.ТМЦ");
	Форма.Обновить()
КонецПроцедуры

//======================================================================
Процедура ПриВыбореРодителя(Элемент)
	Заполнять = глПроверитьДоступностьГруппы(Элемент);
	СтатусВозврата(Заполнять);
	Если Константа.УМК_ИспользоватьПрямыеЗапросы <> Перечисление.ДаНет.Да Тогда //--- УМК Сандомирский В.Ю. (19.08.14) прямые запросы SQL 
		Если Заполнять = 1 Тогда
			Если НЕ((ПоказатьОстаткиЦену=0) ИЛИ (ИерархическийСписок()=0)) Тогда
				ЗаполнитьКЭШ(Элемент);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	Если глПользователь.НакладыватьФильтрыПриОткрытии = 1 Тогда
		СтатусВозврата(глГруппыДоступаПродукции.Принадлежит(Элемент));
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("Подбор_ПоказыватьОЦ", ПоказатьОстаткиЦену);
	
	СохранитьЗначение("фКг", фКг); //--- УМК Сандомирский В.Ю. (14.11.14)
	СохранитьЗначение("фШт", фШт); //--- УМК Сандомирский В.Ю. (14.11.14)
	СохранитьЗначение("фУп", фУп); //--- УМК Сандомирский В.Ю. (14.11.14)
	СохранитьЗначение("фУпПервая", фУпПервая);

	Если (ТаблицаПодбора.КоличествоСтрок()>0) И (ПеренеслиВдокумент=Нет) Тогда
		Если Вопрос("Перенести отобранные позиции в документ?","Да+Нет")="Да" Тогда
		    Вдокумент();
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры


//======================================================================
// ТЕЛО МОДУЛЯ
ПеренеслиВдокумент=Нет;

ОстаткиТоваров = СоздатьОбъект("ТаблицаЗначений");
ОстаткиТоваров.НоваяКолонка("Элемент","Справочник.ТМЦ");
ОстаткиТоваров.НоваяКолонка("Количество","Число",10,3);
ОстаткиТоваров.НоваяКолонка("Резерв","Число",10,3);
ОстаткиТоваров.НоваяКолонка("Цена","Число",глДлинаСуммы,глТочностьСуммы);
ОстаткиТоваров.НоваяКолонка("Валюта","Справочник.Валюты");

СтарыйЭлемент = ПолучитьПустоеЗначение("Справочник.ТМЦ");
ИнформационнаяСтрока = "";
ргТипОст = 1;